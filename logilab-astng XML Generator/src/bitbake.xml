<?xml version='1.0' encoding='utf-8'?>
<Project>
  <Project>
    <Module fromlineno="0" tolineno="1133" lineno="0" name="bb">
      <Assign fromlineno="24" tolineno="24" lineno="24" targets="[&lt;AssName(__version__) l.24 [bb] at Ox92818cc&gt;]" value="'1.8.18'">
        <AssName fromlineno="24" tolineno="24" lineno="24" name="__version__"/>
        <Const fromlineno="24" tolineno="24" lineno="24" type="str">'1.8.18'</Const>
      </Assign>
      <Assign fromlineno="26" tolineno="65" lineno="26" targets="[&lt;AssName(__all__) l.26 [bb] at Ox928196c&gt;]" value="['debug', 'note', 'error', 'fatal', 'mkdirhier', 'movefile', 'tokenize', 'evaluate', 'flatten', 'relparse', 'ververify', 'isjustname', 'isspecific', 'pkgsplit', 'catpkgsplit', 'vercmp', 'pkgcmp', 'dep_parenreduce', 'dep_opconvert', 'decodeurl', 'encodeurl', 'parse', 'data', 'event', 'build', 'fetch', 'manifest', 'methodpool', 'cache', 'runqueue', 'taskdata', 'providers']">
        <AssName fromlineno="26" tolineno="26" lineno="26" name="__all__"/>
        <List fromlineno="26" tolineno="65" lineno="26">
          <Const fromlineno="28" tolineno="28" lineno="28" type="str">'debug'</Const>
          <Const fromlineno="29" tolineno="29" lineno="29" type="str">'note'</Const>
          <Const fromlineno="30" tolineno="30" lineno="30" type="str">'error'</Const>
          <Const fromlineno="31" tolineno="31" lineno="31" type="str">'fatal'</Const>
          <Const fromlineno="33" tolineno="33" lineno="33" type="str">'mkdirhier'</Const>
          <Const fromlineno="34" tolineno="34" lineno="34" type="str">'movefile'</Const>
          <Const fromlineno="36" tolineno="36" lineno="36" type="str">'tokenize'</Const>
          <Const fromlineno="37" tolineno="37" lineno="37" type="str">'evaluate'</Const>
          <Const fromlineno="38" tolineno="38" lineno="38" type="str">'flatten'</Const>
          <Const fromlineno="39" tolineno="39" lineno="39" type="str">'relparse'</Const>
          <Const fromlineno="40" tolineno="40" lineno="40" type="str">'ververify'</Const>
          <Const fromlineno="41" tolineno="41" lineno="41" type="str">'isjustname'</Const>
          <Const fromlineno="42" tolineno="42" lineno="42" type="str">'isspecific'</Const>
          <Const fromlineno="43" tolineno="43" lineno="43" type="str">'pkgsplit'</Const>
          <Const fromlineno="44" tolineno="44" lineno="44" type="str">'catpkgsplit'</Const>
          <Const fromlineno="45" tolineno="45" lineno="45" type="str">'vercmp'</Const>
          <Const fromlineno="46" tolineno="46" lineno="46" type="str">'pkgcmp'</Const>
          <Const fromlineno="47" tolineno="47" lineno="47" type="str">'dep_parenreduce'</Const>
          <Const fromlineno="48" tolineno="48" lineno="48" type="str">'dep_opconvert'</Const>
          <Const fromlineno="51" tolineno="51" lineno="51" type="str">'decodeurl'</Const>
          <Const fromlineno="52" tolineno="52" lineno="52" type="str">'encodeurl'</Const>
          <Const fromlineno="55" tolineno="55" lineno="55" type="str">'parse'</Const>
          <Const fromlineno="56" tolineno="56" lineno="56" type="str">'data'</Const>
          <Const fromlineno="57" tolineno="57" lineno="57" type="str">'event'</Const>
          <Const fromlineno="58" tolineno="58" lineno="58" type="str">'build'</Const>
          <Const fromlineno="59" tolineno="59" lineno="59" type="str">'fetch'</Const>
          <Const fromlineno="60" tolineno="60" lineno="60" type="str">'manifest'</Const>
          <Const fromlineno="61" tolineno="61" lineno="61" type="str">'methodpool'</Const>
          <Const fromlineno="62" tolineno="62" lineno="62" type="str">'cache'</Const>
          <Const fromlineno="63" tolineno="63" lineno="63" type="str">'runqueue'</Const>
          <Const fromlineno="64" tolineno="64" lineno="64" type="str">'taskdata'</Const>
          <Const fromlineno="65" tolineno="65" lineno="65" type="str">'providers'</Const>
        </List>
      </Assign>
      <Assign fromlineno="68" tolineno="68" lineno="68" targets="[&lt;AssName(whitespace) l.68 [bb] at Ox9281e2c&gt;]" value="'\t\n\x0b\x0c\r '">
        <AssName fromlineno="68" tolineno="68" lineno="68" name="whitespace"/>
        <Const fromlineno="68" tolineno="68" lineno="68" type="str">'\t\n\x0b\x0c\r '</Const>
      </Assign>
      <Assign fromlineno="69" tolineno="69" lineno="69" targets="[&lt;AssName(lowercase) l.69 [bb] at Ox9281ecc&gt;]" value="'abcdefghijklmnopqrstuvwxyz'">
        <AssName fromlineno="69" tolineno="69" lineno="69" name="lowercase"/>
        <Const fromlineno="69" tolineno="69" lineno="69" type="str">'abcdefghijklmnopqrstuvwxyz'</Const>
      </Assign>
      <Import fromlineno="71" tolineno="71" lineno="71">
        <ImportName name="sys"/>
        <ImportName name="os"/>
        <ImportName name="types"/>
        <ImportName name="re"/>
        <ImportName name="string"/>
        <ImportName name="bb"/>
      </Import>
      <From fromlineno="72" tolineno="72" lineno="72" modname="bb">
        <ImportName name="msg"/>
      </From>
      <Assign fromlineno="75" tolineno="75" lineno="75" targets="[&lt;AssName(projectdir) l.75 [bb] at Ox92860cc&gt;]" value="os.getcwd()">
        <AssName fromlineno="75" tolineno="75" lineno="75" name="projectdir"/>
        <CallFunc fromlineno="75" tolineno="75" lineno="75" func="Getattr(getcwd)">
          <Getattr fromlineno="75" tolineno="75" lineno="75" attrname="getcwd" expr="os">
            <Name fromlineno="75" tolineno="75" lineno="75" name="os"/>
          </Getattr>
        </CallFunc>
      </Assign>
      <If fromlineno="77" tolineno="80" lineno="77">
        <Compare fromlineno="77" tolineno="77" lineno="77" op="('in', &lt;Getattr(environ) l.77 [bb] at Ox928624c&gt;)">
          <Const fromlineno="77" tolineno="77" lineno="77" type="str">'BBDEBUG'</Const>
          <Getattr fromlineno="77" tolineno="77" lineno="77" attrname="environ" expr="os">
            <Name fromlineno="77" tolineno="77" lineno="77" name="os"/>
          </Getattr>
        </Compare>
        <Assign fromlineno="78" tolineno="78" lineno="78" targets="[&lt;AssName(level) l.78 [bb] at Ox92862ec&gt;]" value="int(os.environ['BBDEBUG'])">
          <AssName fromlineno="78" tolineno="78" lineno="78" name="level"/>
          <CallFunc fromlineno="78" tolineno="78" lineno="78" func="Name(int)">
            <Name fromlineno="78" tolineno="78" lineno="78" name="int"/>
            <Subscript fromlineno="78" tolineno="78" lineno="78">
              <Getattr fromlineno="78" tolineno="78" lineno="78" attrname="environ" expr="os">
                <Name fromlineno="78" tolineno="78" lineno="78" name="os"/>
              </Getattr>
              <Index fromlineno="78" tolineno="78" lineno="None">
                <Const fromlineno="78" tolineno="78" lineno="78" type="str">'BBDEBUG'</Const>
              </Index>
            </Subscript>
          </CallFunc>
        </Assign>
        <If fromlineno="79" tolineno="80" lineno="79">
          <Name fromlineno="79" tolineno="79" lineno="79" name="level"/>
          <Discard fromlineno="80" tolineno="80" lineno="80">
            <CallFunc fromlineno="80" tolineno="80" lineno="80" func="Getattr(set_debug_level)">
              <Getattr fromlineno="80" tolineno="80" lineno="80" attrname="set_debug_level" expr="bb.msg">
                <Getattr fromlineno="80" tolineno="80" lineno="80" attrname="msg" expr="bb">
                  <Name fromlineno="80" tolineno="80" lineno="80" name="bb"/>
                </Getattr>
              </Getattr>
              <Name fromlineno="80" tolineno="80" lineno="80" name="level"/>
            </CallFunc>
          </Discard>
        </If>
      </If>
      <Class fromlineno="82" tolineno="83" lineno="82">
        <Name fromlineno="82" tolineno="82" lineno="82" name="Exception"/>
        <Pass fromlineno="83" tolineno="83" lineno="83"/>
      </Class>
      <Class fromlineno="85" tolineno="85" lineno="85">
        <Name fromlineno="85" tolineno="85" lineno="85" name="Exception"/>
      </Class>
      <Function fromlineno="99" tolineno="100" lineno="99">
        <Arguments fromlineno="99" tolineno="99" lineno="None" format_args=", *args"/>
        <Discard fromlineno="100" tolineno="100" lineno="100">
          <CallFunc fromlineno="100" tolineno="100" lineno="100" func="Getattr(warn)">
            <Getattr fromlineno="100" tolineno="100" lineno="100" attrname="warn" expr="bb.msg">
              <Getattr fromlineno="100" tolineno="100" lineno="100" attrname="msg" expr="bb">
                <Name fromlineno="100" tolineno="100" lineno="100" name="bb"/>
              </Getattr>
            </Getattr>
            <CallFunc fromlineno="100" tolineno="100" lineno="100" func="Getattr(join)">
              <Getattr fromlineno="100" tolineno="100" lineno="100" attrname="join" expr="''">
                <Const fromlineno="100" tolineno="100" lineno="100" type="str">''</Const>
              </Getattr>
              <Name fromlineno="100" tolineno="100" lineno="100" name="args"/>
            </CallFunc>
          </CallFunc>
        </Discard>
      </Function>
      <Function fromlineno="102" tolineno="103" lineno="102">
        <Arguments fromlineno="102" tolineno="102" lineno="None" format_args="lvl, *args">
          <AssName fromlineno="102" tolineno="102" lineno="102" name="lvl"/>
        </Arguments>
        <Discard fromlineno="103" tolineno="103" lineno="103">
          <CallFunc fromlineno="103" tolineno="103" lineno="103" func="Getattr(debug)">
            <Getattr fromlineno="103" tolineno="103" lineno="103" attrname="debug" expr="bb.msg">
              <Getattr fromlineno="103" tolineno="103" lineno="103" attrname="msg" expr="bb">
                <Name fromlineno="103" tolineno="103" lineno="103" name="bb"/>
              </Getattr>
            </Getattr>
            <Name fromlineno="103" tolineno="103" lineno="103" name="lvl"/>
            <Const fromlineno="103" tolineno="103" lineno="103" type="NoneType">None</Const>
            <CallFunc fromlineno="103" tolineno="103" lineno="103" func="Getattr(join)">
              <Getattr fromlineno="103" tolineno="103" lineno="103" attrname="join" expr="''">
                <Const fromlineno="103" tolineno="103" lineno="103" type="str">''</Const>
              </Getattr>
              <Name fromlineno="103" tolineno="103" lineno="103" name="args"/>
            </CallFunc>
          </CallFunc>
        </Discard>
      </Function>
      <Function fromlineno="105" tolineno="106" lineno="105">
        <Arguments fromlineno="105" tolineno="105" lineno="None" format_args=", *args"/>
        <Discard fromlineno="106" tolineno="106" lineno="106">
          <CallFunc fromlineno="106" tolineno="106" lineno="106" func="Getattr(note)">
            <Getattr fromlineno="106" tolineno="106" lineno="106" attrname="note" expr="bb.msg">
              <Getattr fromlineno="106" tolineno="106" lineno="106" attrname="msg" expr="bb">
                <Name fromlineno="106" tolineno="106" lineno="106" name="bb"/>
              </Getattr>
            </Getattr>
            <Const fromlineno="106" tolineno="106" lineno="106" type="int">1</Const>
            <Const fromlineno="106" tolineno="106" lineno="106" type="NoneType">None</Const>
            <CallFunc fromlineno="106" tolineno="106" lineno="106" func="Getattr(join)">
              <Getattr fromlineno="106" tolineno="106" lineno="106" attrname="join" expr="''">
                <Const fromlineno="106" tolineno="106" lineno="106" type="str">''</Const>
              </Getattr>
              <Name fromlineno="106" tolineno="106" lineno="106" name="args"/>
            </CallFunc>
          </CallFunc>
        </Discard>
      </Function>
      <Function fromlineno="108" tolineno="109" lineno="108">
        <Arguments fromlineno="108" tolineno="108" lineno="None" format_args=", *args"/>
        <Discard fromlineno="109" tolineno="109" lineno="109">
          <CallFunc fromlineno="109" tolineno="109" lineno="109" func="Getattr(warn)">
            <Getattr fromlineno="109" tolineno="109" lineno="109" attrname="warn" expr="bb.msg">
              <Getattr fromlineno="109" tolineno="109" lineno="109" attrname="msg" expr="bb">
                <Name fromlineno="109" tolineno="109" lineno="109" name="bb"/>
              </Getattr>
            </Getattr>
            <Const fromlineno="109" tolineno="109" lineno="109" type="int">1</Const>
            <Const fromlineno="109" tolineno="109" lineno="109" type="NoneType">None</Const>
            <CallFunc fromlineno="109" tolineno="109" lineno="109" func="Getattr(join)">
              <Getattr fromlineno="109" tolineno="109" lineno="109" attrname="join" expr="''">
                <Const fromlineno="109" tolineno="109" lineno="109" type="str">''</Const>
              </Getattr>
              <Name fromlineno="109" tolineno="109" lineno="109" name="args"/>
            </CallFunc>
          </CallFunc>
        </Discard>
      </Function>
      <Function fromlineno="111" tolineno="112" lineno="111">
        <Arguments fromlineno="111" tolineno="111" lineno="None" format_args=", *args"/>
        <Discard fromlineno="112" tolineno="112" lineno="112">
          <CallFunc fromlineno="112" tolineno="112" lineno="112" func="Getattr(error)">
            <Getattr fromlineno="112" tolineno="112" lineno="112" attrname="error" expr="bb.msg">
              <Getattr fromlineno="112" tolineno="112" lineno="112" attrname="msg" expr="bb">
                <Name fromlineno="112" tolineno="112" lineno="112" name="bb"/>
              </Getattr>
            </Getattr>
            <Const fromlineno="112" tolineno="112" lineno="112" type="NoneType">None</Const>
            <CallFunc fromlineno="112" tolineno="112" lineno="112" func="Getattr(join)">
              <Getattr fromlineno="112" tolineno="112" lineno="112" attrname="join" expr="''">
                <Const fromlineno="112" tolineno="112" lineno="112" type="str">''</Const>
              </Getattr>
              <Name fromlineno="112" tolineno="112" lineno="112" name="args"/>
            </CallFunc>
          </CallFunc>
        </Discard>
      </Function>
      <Function fromlineno="114" tolineno="115" lineno="114">
        <Arguments fromlineno="114" tolineno="114" lineno="None" format_args=", *args"/>
        <Discard fromlineno="115" tolineno="115" lineno="115">
          <CallFunc fromlineno="115" tolineno="115" lineno="115" func="Getattr(fatal)">
            <Getattr fromlineno="115" tolineno="115" lineno="115" attrname="fatal" expr="bb.msg">
              <Getattr fromlineno="115" tolineno="115" lineno="115" attrname="msg" expr="bb">
                <Name fromlineno="115" tolineno="115" lineno="115" name="bb"/>
              </Getattr>
            </Getattr>
            <Const fromlineno="115" tolineno="115" lineno="115" type="NoneType">None</Const>
            <CallFunc fromlineno="115" tolineno="115" lineno="115" func="Getattr(join)">
              <Getattr fromlineno="115" tolineno="115" lineno="115" attrname="join" expr="''">
                <Const fromlineno="115" tolineno="115" lineno="115" type="str">''</Const>
              </Getattr>
              <Name fromlineno="115" tolineno="115" lineno="115" name="args"/>
            </CallFunc>
          </CallFunc>
        </Discard>
      </Function>
      <Function fromlineno="128" tolineno="138" lineno="128">
        <Arguments fromlineno="128" tolineno="128" lineno="None" format_args="dir">
          <AssName fromlineno="128" tolineno="128" lineno="128" name="dir"/>
        </Arguments>
        <Discard fromlineno="133" tolineno="133" lineno="133">
          <CallFunc fromlineno="133" tolineno="133" lineno="133" func="Name(debug)">
            <Name fromlineno="133" tolineno="133" lineno="133" name="debug"/>
            <Const fromlineno="133" tolineno="133" lineno="133" type="int">3</Const>
            <BinOp fromlineno="133" tolineno="133" lineno="133" op="%" left="'mkdirhier(%s)'" right="dir">
              <Const fromlineno="133" tolineno="133" lineno="133" type="str">'mkdirhier(%s)'</Const>
              <Name fromlineno="133" tolineno="133" lineno="133" name="dir"/>
            </BinOp>
          </CallFunc>
        </Discard>
        <TryExcept fromlineno="134" tolineno="138" lineno="134">
          <Discard fromlineno="135" tolineno="135" lineno="135">
            <CallFunc fromlineno="135" tolineno="135" lineno="135" func="Getattr(makedirs)">
              <Getattr fromlineno="135" tolineno="135" lineno="135" attrname="makedirs" expr="os">
                <Name fromlineno="135" tolineno="135" lineno="135" name="os"/>
              </Getattr>
              <Name fromlineno="135" tolineno="135" lineno="135" name="dir"/>
            </CallFunc>
          </Discard>
          <Discard fromlineno="136" tolineno="136" lineno="136">
            <CallFunc fromlineno="136" tolineno="136" lineno="136" func="Name(debug)">
              <Name fromlineno="136" tolineno="136" lineno="136" name="debug"/>
              <Const fromlineno="136" tolineno="136" lineno="136" type="int">2</Const>
              <BinOp fromlineno="136" tolineno="136" lineno="136" op="+" left="'created '" right="dir">
                <Const fromlineno="136" tolineno="136" lineno="136" type="str">'created '</Const>
                <Name fromlineno="136" tolineno="136" lineno="136" name="dir"/>
              </BinOp>
            </CallFunc>
          </Discard>
          <ExceptHandler fromlineno="137" tolineno="138" lineno="137">
            <Name fromlineno="137" tolineno="137" lineno="137" name="OSError"/>
            <AssName fromlineno="137" tolineno="137" lineno="137" name="e"/>
            <If fromlineno="138" tolineno="138" lineno="138">
              <Compare fromlineno="138" tolineno="138" lineno="138" op="('!=', &lt;Const(int) l.138 [bb] at Ox928ab2c&gt;)">
                <Getattr fromlineno="138" tolineno="138" lineno="138" attrname="errno" expr="e">
                  <Name fromlineno="138" tolineno="138" lineno="138" name="e"/>
                </Getattr>
                <Const fromlineno="138" tolineno="138" lineno="138" type="int">17</Const>
              </Compare>
              <Raise fromlineno="138" tolineno="138" lineno="138">
                <Name fromlineno="138" tolineno="138" lineno="138" name="e"/>
              </Raise>
            </If>
          </ExceptHandler>
        </TryExcept>
      </Function>
      <Import fromlineno="143" tolineno="143" lineno="143">
        <ImportName name="stat"/>
      </Import>
      <Function fromlineno="145" tolineno="231" lineno="145">
        <Arguments fromlineno="145" tolineno="145" lineno="None" format_args="src, dest, newmtime=None, sstat=None">
          <AssName fromlineno="145" tolineno="145" lineno="145" name="src"/>
          <AssName fromlineno="145" tolineno="145" lineno="145" name="dest"/>
          <AssName fromlineno="145" tolineno="145" lineno="145" name="newmtime"/>
          <AssName fromlineno="145" tolineno="145" lineno="145" name="sstat"/>
          <Const fromlineno="145" tolineno="145" lineno="145" type="NoneType">None</Const>
          <Const fromlineno="145" tolineno="145" lineno="145" type="NoneType">None</Const>
        </Arguments>
        <TryExcept fromlineno="153" tolineno="158" lineno="153">
          <If fromlineno="154" tolineno="155" lineno="154">
            <UnaryOp fromlineno="154" tolineno="154" lineno="154">
              <Name fromlineno="154" tolineno="154" lineno="154" name="sstat"/>
            </UnaryOp>
            <Assign fromlineno="155" tolineno="155" lineno="155" targets="[&lt;AssName(sstat) l.155 [bb] at Ox928aeec&gt;]" value="os.lstat(src)">
              <AssName fromlineno="155" tolineno="155" lineno="155" name="sstat"/>
              <CallFunc fromlineno="155" tolineno="155" lineno="155" func="Getattr(lstat)">
                <Getattr fromlineno="155" tolineno="155" lineno="155" attrname="lstat" expr="os">
                  <Name fromlineno="155" tolineno="155" lineno="155" name="os"/>
                </Getattr>
                <Name fromlineno="155" tolineno="155" lineno="155" name="src"/>
              </CallFunc>
            </Assign>
          </If>
          <ExceptHandler fromlineno="156" tolineno="158" lineno="156">
            <Name fromlineno="156" tolineno="156" lineno="156" name="Exception"/>
            <AssName fromlineno="156" tolineno="156" lineno="156" name="e"/>
            <Print fromlineno="157" tolineno="157" lineno="157">
              <Const fromlineno="157" tolineno="157" lineno="157" type="str">'movefile: Stating source file failed...'</Const>
              <Name fromlineno="157" tolineno="157" lineno="157" name="e"/>
            </Print>
            <Return fromlineno="158" tolineno="158" lineno="158">
              <Const fromlineno="158" tolineno="158" lineno="158" type="NoneType">None</Const>
            </Return>
          </ExceptHandler>
        </TryExcept>
        <Assign fromlineno="160" tolineno="160" lineno="160" targets="[&lt;AssName(destexists) l.160 [bb] at Ox928e18c&gt;]" value="1">
          <AssName fromlineno="160" tolineno="160" lineno="160" name="destexists"/>
          <Const fromlineno="160" tolineno="160" lineno="160" type="int">1</Const>
        </Assign>
        <TryExcept fromlineno="161" tolineno="165" lineno="161">
          <Assign fromlineno="162" tolineno="162" lineno="162" targets="[&lt;AssName(dstat) l.162 [bb] at Ox928e28c&gt;]" value="os.lstat(dest)">
            <AssName fromlineno="162" tolineno="162" lineno="162" name="dstat"/>
            <CallFunc fromlineno="162" tolineno="162" lineno="162" func="Getattr(lstat)">
              <Getattr fromlineno="162" tolineno="162" lineno="162" attrname="lstat" expr="os">
                <Name fromlineno="162" tolineno="162" lineno="162" name="os"/>
              </Getattr>
              <Name fromlineno="162" tolineno="162" lineno="162" name="dest"/>
            </CallFunc>
          </Assign>
          <ExceptHandler fromlineno="163" tolineno="165" lineno="163">
            <Assign fromlineno="164" tolineno="164" lineno="164" targets="[&lt;AssName(dstat) l.164 [bb] at Ox928e42c&gt;]" value="os.lstat(os.path.dirname(dest))">
              <AssName fromlineno="164" tolineno="164" lineno="164" name="dstat"/>
              <CallFunc fromlineno="164" tolineno="164" lineno="164" func="Getattr(lstat)">
                <Getattr fromlineno="164" tolineno="164" lineno="164" attrname="lstat" expr="os">
                  <Name fromlineno="164" tolineno="164" lineno="164" name="os"/>
                </Getattr>
                <CallFunc fromlineno="164" tolineno="164" lineno="164" func="Getattr(dirname)">
                  <Getattr fromlineno="164" tolineno="164" lineno="164" attrname="dirname" expr="os.path">
                    <Getattr fromlineno="164" tolineno="164" lineno="164" attrname="path" expr="os">
                      <Name fromlineno="164" tolineno="164" lineno="164" name="os"/>
                    </Getattr>
                  </Getattr>
                  <Name fromlineno="164" tolineno="164" lineno="164" name="dest"/>
                </CallFunc>
              </CallFunc>
            </Assign>
            <Assign fromlineno="165" tolineno="165" lineno="165" targets="[&lt;AssName(destexists) l.165 [bb] at Ox928e5cc&gt;]" value="0">
              <AssName fromlineno="165" tolineno="165" lineno="165" name="destexists"/>
              <Const fromlineno="165" tolineno="165" lineno="165" type="int">0</Const>
            </Assign>
          </ExceptHandler>
        </TryExcept>
        <If fromlineno="167" tolineno="173" lineno="167">
          <Name fromlineno="167" tolineno="167" lineno="167" name="destexists"/>
          <If fromlineno="168" tolineno="173" lineno="168">
            <CallFunc fromlineno="168" tolineno="168" lineno="168" func="Getattr(S_ISLNK)">
              <Getattr fromlineno="168" tolineno="168" lineno="168" attrname="S_ISLNK" expr="stat">
                <Name fromlineno="168" tolineno="168" lineno="168" name="stat"/>
              </Getattr>
              <Subscript fromlineno="168" tolineno="168" lineno="168">
                <Name fromlineno="168" tolineno="168" lineno="168" name="dstat"/>
                <Index fromlineno="168" tolineno="168" lineno="None">
                  <Getattr fromlineno="168" tolineno="168" lineno="168" attrname="ST_MODE" expr="stat">
                    <Name fromlineno="168" tolineno="168" lineno="168" name="stat"/>
                  </Getattr>
                </Index>
              </Subscript>
            </CallFunc>
            <TryExcept fromlineno="169" tolineno="173" lineno="169">
              <Discard fromlineno="170" tolineno="170" lineno="170">
                <CallFunc fromlineno="170" tolineno="170" lineno="170" func="Getattr(unlink)">
                  <Getattr fromlineno="170" tolineno="170" lineno="170" attrname="unlink" expr="os">
                    <Name fromlineno="170" tolineno="170" lineno="170" name="os"/>
                  </Getattr>
                  <Name fromlineno="170" tolineno="170" lineno="170" name="dest"/>
                </CallFunc>
              </Discard>
              <Assign fromlineno="171" tolineno="171" lineno="171" targets="[&lt;AssName(destexists) l.171 [bb] at Ox928e96c&gt;]" value="0">
                <AssName fromlineno="171" tolineno="171" lineno="171" name="destexists"/>
                <Const fromlineno="171" tolineno="171" lineno="171" type="int">0</Const>
              </Assign>
              <ExceptHandler fromlineno="172" tolineno="173" lineno="172">
                <Name fromlineno="172" tolineno="172" lineno="172" name="Exception"/>
                <AssName fromlineno="172" tolineno="172" lineno="172" name="e"/>
                <Pass fromlineno="173" tolineno="173" lineno="173"/>
              </ExceptHandler>
            </TryExcept>
          </If>
        </If>
        <If fromlineno="175" tolineno="186" lineno="175">
          <CallFunc fromlineno="175" tolineno="175" lineno="175" func="Getattr(S_ISLNK)">
            <Getattr fromlineno="175" tolineno="175" lineno="175" attrname="S_ISLNK" expr="stat">
              <Name fromlineno="175" tolineno="175" lineno="175" name="stat"/>
            </Getattr>
            <Subscript fromlineno="175" tolineno="175" lineno="175">
              <Name fromlineno="175" tolineno="175" lineno="175" name="sstat"/>
              <Index fromlineno="175" tolineno="175" lineno="None">
                <Getattr fromlineno="175" tolineno="175" lineno="175" attrname="ST_MODE" expr="stat">
                  <Name fromlineno="175" tolineno="175" lineno="175" name="stat"/>
                </Getattr>
              </Index>
            </Subscript>
          </CallFunc>
          <TryExcept fromlineno="176" tolineno="186" lineno="176">
            <Assign fromlineno="177" tolineno="177" lineno="177" targets="[&lt;AssName(target) l.177 [bb] at Ox928ec6c&gt;]" value="os.readlink(src)">
              <AssName fromlineno="177" tolineno="177" lineno="177" name="target"/>
              <CallFunc fromlineno="177" tolineno="177" lineno="177" func="Getattr(readlink)">
                <Getattr fromlineno="177" tolineno="177" lineno="177" attrname="readlink" expr="os">
                  <Name fromlineno="177" tolineno="177" lineno="177" name="os"/>
                </Getattr>
                <Name fromlineno="177" tolineno="177" lineno="177" name="src"/>
              </CallFunc>
            </Assign>
            <If fromlineno="178" tolineno="179" lineno="178">
              <BoolOp fromlineno="178" tolineno="178" lineno="178" op="and" values="destexists,not stat.S_ISDIR(dstat[stat.ST_MODE]),">
                <Name fromlineno="178" tolineno="178" lineno="178" name="destexists"/>
                <UnaryOp fromlineno="178" tolineno="178" lineno="178">
                  <CallFunc fromlineno="178" tolineno="178" lineno="178" func="Getattr(S_ISDIR)">
                    <Getattr fromlineno="178" tolineno="178" lineno="178" attrname="S_ISDIR" expr="stat">
                      <Name fromlineno="178" tolineno="178" lineno="178" name="stat"/>
                    </Getattr>
                    <Subscript fromlineno="178" tolineno="178" lineno="178">
                      <Name fromlineno="178" tolineno="178" lineno="178" name="dstat"/>
                      <Index fromlineno="178" tolineno="178" lineno="None">
                        <Getattr fromlineno="178" tolineno="178" lineno="178" attrname="ST_MODE" expr="stat">
                          <Name fromlineno="178" tolineno="178" lineno="178" name="stat"/>
                        </Getattr>
                      </Index>
                    </Subscript>
                  </CallFunc>
                </UnaryOp>
              </BoolOp>
              <Discard fromlineno="179" tolineno="179" lineno="179">
                <CallFunc fromlineno="179" tolineno="179" lineno="179" func="Getattr(unlink)">
                  <Getattr fromlineno="179" tolineno="179" lineno="179" attrname="unlink" expr="os">
                    <Name fromlineno="179" tolineno="179" lineno="179" name="os"/>
                  </Getattr>
                  <Name fromlineno="179" tolineno="179" lineno="179" name="dest"/>
                </CallFunc>
              </Discard>
            </If>
            <Discard fromlineno="180" tolineno="180" lineno="180">
              <CallFunc fromlineno="180" tolineno="180" lineno="180" func="Getattr(symlink)">
                <Getattr fromlineno="180" tolineno="180" lineno="180" attrname="symlink" expr="os">
                  <Name fromlineno="180" tolineno="180" lineno="180" name="os"/>
                </Getattr>
                <Name fromlineno="180" tolineno="180" lineno="180" name="target"/>
                <Name fromlineno="180" tolineno="180" lineno="180" name="dest"/>
              </CallFunc>
            </Discard>
            <Discard fromlineno="182" tolineno="182" lineno="182">
              <CallFunc fromlineno="182" tolineno="182" lineno="182" func="Getattr(unlink)">
                <Getattr fromlineno="182" tolineno="182" lineno="182" attrname="unlink" expr="os">
                  <Name fromlineno="182" tolineno="182" lineno="182" name="os"/>
                </Getattr>
                <Name fromlineno="182" tolineno="182" lineno="182" name="src"/>
              </CallFunc>
            </Discard>
            <Return fromlineno="183" tolineno="183" lineno="183">
              <CallFunc fromlineno="183" tolineno="183" lineno="183" func="Getattr(lstat)">
                <Getattr fromlineno="183" tolineno="183" lineno="183" attrname="lstat" expr="os">
                  <Name fromlineno="183" tolineno="183" lineno="183" name="os"/>
                </Getattr>
                <Name fromlineno="183" tolineno="183" lineno="183" name="dest"/>
              </CallFunc>
            </Return>
            <ExceptHandler fromlineno="184" tolineno="186" lineno="184">
              <Name fromlineno="184" tolineno="184" lineno="184" name="Exception"/>
              <AssName fromlineno="184" tolineno="184" lineno="184" name="e"/>
              <Print fromlineno="185" tolineno="185" lineno="185">
                <Const fromlineno="185" tolineno="185" lineno="185" type="str">'movefile: failed to properly create symlink:'</Const>
                <Name fromlineno="185" tolineno="185" lineno="185" name="dest"/>
                <Const fromlineno="185" tolineno="185" lineno="185" type="str">'-&gt;'</Const>
                <Name fromlineno="185" tolineno="185" lineno="185" name="target"/>
                <Name fromlineno="185" tolineno="185" lineno="185" name="e"/>
              </Print>
              <Return fromlineno="186" tolineno="186" lineno="186">
                <Const fromlineno="186" tolineno="186" lineno="186" type="NoneType">None</Const>
              </Return>
            </ExceptHandler>
          </TryExcept>
        </If>
        <Assign fromlineno="188" tolineno="188" lineno="188" targets="[&lt;AssName(renamefailed) l.188 [bb] at Ox929248c&gt;]" value="1">
          <AssName fromlineno="188" tolineno="188" lineno="188" name="renamefailed"/>
          <Const fromlineno="188" tolineno="188" lineno="188" type="int">1</Const>
        </Assign>
        <If fromlineno="189" tolineno="198" lineno="189">
          <Compare fromlineno="189" tolineno="189" lineno="189" op="('==', &lt;Subscript() l.189 [bb] at Ox929260c&gt;)">
            <Subscript fromlineno="189" tolineno="189" lineno="189">
              <Name fromlineno="189" tolineno="189" lineno="189" name="sstat"/>
              <Index fromlineno="189" tolineno="189" lineno="None">
                <Getattr fromlineno="189" tolineno="189" lineno="189" attrname="ST_DEV" expr="stat">
                  <Name fromlineno="189" tolineno="189" lineno="189" name="stat"/>
                </Getattr>
              </Index>
            </Subscript>
            <Subscript fromlineno="189" tolineno="189" lineno="189">
              <Name fromlineno="189" tolineno="189" lineno="189" name="dstat"/>
              <Index fromlineno="189" tolineno="189" lineno="None">
                <Getattr fromlineno="189" tolineno="189" lineno="189" attrname="ST_DEV" expr="stat">
                  <Name fromlineno="189" tolineno="189" lineno="189" name="stat"/>
                </Getattr>
              </Index>
            </Subscript>
          </Compare>
          <TryExcept fromlineno="190" tolineno="198" lineno="190">
            <Assign fromlineno="191" tolineno="191" lineno="191" targets="[&lt;AssName(ret) l.191 [bb] at Ox929276c&gt;]" value="os.rename(src, dest)">
              <AssName fromlineno="191" tolineno="191" lineno="191" name="ret"/>
              <CallFunc fromlineno="191" tolineno="191" lineno="191" func="Getattr(rename)">
                <Getattr fromlineno="191" tolineno="191" lineno="191" attrname="rename" expr="os">
                  <Name fromlineno="191" tolineno="191" lineno="191" name="os"/>
                </Getattr>
                <Name fromlineno="191" tolineno="191" lineno="191" name="src"/>
                <Name fromlineno="191" tolineno="191" lineno="191" name="dest"/>
              </CallFunc>
            </Assign>
            <Assign fromlineno="192" tolineno="192" lineno="192" targets="[&lt;AssName(renamefailed) l.192 [bb] at Ox92928ac&gt;]" value="0">
              <AssName fromlineno="192" tolineno="192" lineno="192" name="renamefailed"/>
              <Const fromlineno="192" tolineno="192" lineno="192" type="int">0</Const>
            </Assign>
            <ExceptHandler fromlineno="193" tolineno="198" lineno="193">
              <Name fromlineno="193" tolineno="193" lineno="193" name="Exception"/>
              <AssName fromlineno="193" tolineno="193" lineno="193" name="e"/>
              <Import fromlineno="194" tolineno="194" lineno="194">
                <ImportName name="errno"/>
              </Import>
              <If fromlineno="195" tolineno="198" lineno="195">
                <Compare fromlineno="195" tolineno="195" lineno="195" op="('!=', &lt;Getattr(EXDEV) l.195 [bb] at Ox9292b2c&gt;)">
                  <Subscript fromlineno="195" tolineno="195" lineno="195">
                    <Name fromlineno="195" tolineno="195" lineno="195" name="e"/>
                    <Index fromlineno="195" tolineno="195" lineno="None">
                      <Const fromlineno="195" tolineno="195" lineno="195" type="int">0</Const>
                    </Index>
                  </Subscript>
                  <Getattr fromlineno="195" tolineno="195" lineno="195" attrname="EXDEV" expr="errno">
                    <Name fromlineno="195" tolineno="195" lineno="195" name="errno"/>
                  </Getattr>
                </Compare>
                <Print fromlineno="197" tolineno="197" lineno="197">
                  <Const fromlineno="197" tolineno="197" lineno="197" type="str">'movefile: Failed to move'</Const>
                  <Name fromlineno="197" tolineno="197" lineno="197" name="src"/>
                  <Const fromlineno="197" tolineno="197" lineno="197" type="str">'to'</Const>
                  <Name fromlineno="197" tolineno="197" lineno="197" name="dest"/>
                  <Name fromlineno="197" tolineno="197" lineno="197" name="e"/>
                </Print>
                <Return fromlineno="198" tolineno="198" lineno="198">
                  <Const fromlineno="198" tolineno="198" lineno="198" type="NoneType">None</Const>
                </Return>
              </If>
            </ExceptHandler>
          </TryExcept>
        </If>
        <If fromlineno="201" tolineno="224" lineno="201">
          <Name fromlineno="201" tolineno="201" lineno="201" name="renamefailed"/>
          <Assign fromlineno="202" tolineno="202" lineno="202" targets="[&lt;AssName(didcopy) l.202 [bb] at Ox9292d2c&gt;]" value="0">
            <AssName fromlineno="202" tolineno="202" lineno="202" name="didcopy"/>
            <Const fromlineno="202" tolineno="202" lineno="202" type="int">0</Const>
          </Assign>
          <If fromlineno="203" tolineno="216" lineno="203">
            <CallFunc fromlineno="203" tolineno="203" lineno="203" func="Getattr(S_ISREG)">
              <Getattr fromlineno="203" tolineno="203" lineno="203" attrname="S_ISREG" expr="stat">
                <Name fromlineno="203" tolineno="203" lineno="203" name="stat"/>
              </Getattr>
              <Subscript fromlineno="203" tolineno="203" lineno="203">
                <Name fromlineno="203" tolineno="203" lineno="203" name="sstat"/>
                <Index fromlineno="203" tolineno="203" lineno="None">
                  <Getattr fromlineno="203" tolineno="203" lineno="203" attrname="ST_MODE" expr="stat">
                    <Name fromlineno="203" tolineno="203" lineno="203" name="stat"/>
                  </Getattr>
                </Index>
              </Subscript>
            </CallFunc>
            <TryExcept fromlineno="204" tolineno="210" lineno="204">
              <Discard fromlineno="205" tolineno="205" lineno="205">
                <CallFunc fromlineno="205" tolineno="205" lineno="205" func="Getattr(copyfile)">
                  <Getattr fromlineno="205" tolineno="205" lineno="205" attrname="copyfile" expr="shutil">
                    <Name fromlineno="205" tolineno="205" lineno="205" name="shutil"/>
                  </Getattr>
                  <Name fromlineno="205" tolineno="205" lineno="205" name="src"/>
                  <BinOp fromlineno="205" tolineno="205" lineno="205" op="+" left="dest" right="'#new'">
                    <Name fromlineno="205" tolineno="205" lineno="205" name="dest"/>
                    <Const fromlineno="205" tolineno="205" lineno="205" type="str">'#new'</Const>
                  </BinOp>
                </CallFunc>
              </Discard>
              <Discard fromlineno="206" tolineno="206" lineno="206">
                <CallFunc fromlineno="206" tolineno="206" lineno="206" func="Getattr(rename)">
                  <Getattr fromlineno="206" tolineno="206" lineno="206" attrname="rename" expr="os">
                    <Name fromlineno="206" tolineno="206" lineno="206" name="os"/>
                  </Getattr>
                  <BinOp fromlineno="206" tolineno="206" lineno="206" op="+" left="dest" right="'#new'">
                    <Name fromlineno="206" tolineno="206" lineno="206" name="dest"/>
                    <Const fromlineno="206" tolineno="206" lineno="206" type="str">'#new'</Const>
                  </BinOp>
                  <Name fromlineno="206" tolineno="206" lineno="206" name="dest"/>
                </CallFunc>
              </Discard>
              <Assign fromlineno="207" tolineno="207" lineno="207" targets="[&lt;AssName(didcopy) l.207 [bb] at Ox929622c&gt;]" value="1">
                <AssName fromlineno="207" tolineno="207" lineno="207" name="didcopy"/>
                <Const fromlineno="207" tolineno="207" lineno="207" type="int">1</Const>
              </Assign>
              <ExceptHandler fromlineno="208" tolineno="210" lineno="208">
                <Name fromlineno="208" tolineno="208" lineno="208" name="Exception"/>
                <AssName fromlineno="208" tolineno="208" lineno="208" name="e"/>
                <Print fromlineno="209" tolineno="209" lineno="209">
                  <Const fromlineno="209" tolineno="209" lineno="209" type="str">'movefile: copy'</Const>
                  <Name fromlineno="209" tolineno="209" lineno="209" name="src"/>
                  <Const fromlineno="209" tolineno="209" lineno="209" type="str">'-&gt;'</Const>
                  <Name fromlineno="209" tolineno="209" lineno="209" name="dest"/>
                  <Const fromlineno="209" tolineno="209" lineno="209" type="str">'failed.'</Const>
                  <Name fromlineno="209" tolineno="209" lineno="209" name="e"/>
                </Print>
                <Return fromlineno="210" tolineno="210" lineno="210">
                  <Const fromlineno="210" tolineno="210" lineno="210" type="NoneType">None</Const>
                </Return>
              </ExceptHandler>
            </TryExcept>
            <Assign fromlineno="213" tolineno="213" lineno="213" targets="[&lt;AssName(a) l.213 [bb] at Ox92964ac&gt;]" value="getstatusoutput(((((('/bin/mv -f ') + (&quot;'&quot;)) + (src)) + (&quot;' '&quot;)) + (dest)) + (&quot;'&quot;))">
              <AssName fromlineno="213" tolineno="213" lineno="213" name="a"/>
              <CallFunc fromlineno="213" tolineno="213" lineno="213" func="Name(getstatusoutput)">
                <Name fromlineno="213" tolineno="213" lineno="213" name="getstatusoutput"/>
                <BinOp fromlineno="213" tolineno="213" lineno="213" op="+" left="(((('/bin/mv -f ') + (&quot;'&quot;)) + (src)) + (&quot;' '&quot;)) + (dest)" right="&quot;'&quot;">
                  <BinOp fromlineno="213" tolineno="213" lineno="213" op="+" left="((('/bin/mv -f ') + (&quot;'&quot;)) + (src)) + (&quot;' '&quot;)" right="dest">
                    <BinOp fromlineno="213" tolineno="213" lineno="213" op="+" left="(('/bin/mv -f ') + (&quot;'&quot;)) + (src)" right="&quot;' '&quot;">
                      <BinOp fromlineno="213" tolineno="213" lineno="213" op="+" left="('/bin/mv -f ') + (&quot;'&quot;)" right="src">
                        <BinOp fromlineno="213" tolineno="213" lineno="213" op="+" left="'/bin/mv -f '" right="&quot;'&quot;">
                          <Const fromlineno="213" tolineno="213" lineno="213" type="str">'/bin/mv -f '</Const>
                          <Const fromlineno="213" tolineno="213" lineno="213" type="str">"'"</Const>
                        </BinOp>
                        <Name fromlineno="213" tolineno="213" lineno="213" name="src"/>
                      </BinOp>
                      <Const fromlineno="213" tolineno="213" lineno="213" type="str">"' '"</Const>
                    </BinOp>
                    <Name fromlineno="213" tolineno="213" lineno="213" name="dest"/>
                  </BinOp>
                  <Const fromlineno="213" tolineno="213" lineno="213" type="str">"'"</Const>
                </BinOp>
              </CallFunc>
            </Assign>
            <If fromlineno="214" tolineno="216" lineno="214">
              <Compare fromlineno="214" tolineno="214" lineno="214" op="('!=', &lt;Const(int) l.214 [bb] at Ox92967cc&gt;)">
                <Subscript fromlineno="214" tolineno="214" lineno="214">
                  <Name fromlineno="214" tolineno="214" lineno="214" name="a"/>
                  <Index fromlineno="214" tolineno="214" lineno="None">
                    <Const fromlineno="214" tolineno="214" lineno="214" type="int">0</Const>
                  </Index>
                </Subscript>
                <Const fromlineno="214" tolineno="214" lineno="214" type="int">0</Const>
              </Compare>
              <Print fromlineno="215" tolineno="215" lineno="215">
                <BinOp fromlineno="215" tolineno="215" lineno="215" op="+" left="((('movefile: Failed to move special file:') + (src)) + (&quot;' to '&quot;)) + (dest)" right="&quot;'&quot;">
                  <BinOp fromlineno="215" tolineno="215" lineno="215" op="+" left="(('movefile: Failed to move special file:') + (src)) + (&quot;' to '&quot;)" right="dest">
                    <BinOp fromlineno="215" tolineno="215" lineno="215" op="+" left="('movefile: Failed to move special file:') + (src)" right="&quot;' to '&quot;">
                      <BinOp fromlineno="215" tolineno="215" lineno="215" op="+" left="'movefile: Failed to move special file:'" right="src">
                        <Const fromlineno="215" tolineno="215" lineno="215" type="str">'movefile: Failed to move special file:'</Const>
                        <Name fromlineno="215" tolineno="215" lineno="215" name="src"/>
                      </BinOp>
                      <Const fromlineno="215" tolineno="215" lineno="215" type="str">"' to '"</Const>
                    </BinOp>
                    <Name fromlineno="215" tolineno="215" lineno="215" name="dest"/>
                  </BinOp>
                  <Const fromlineno="215" tolineno="215" lineno="215" type="str">"'"</Const>
                </BinOp>
                <Name fromlineno="215" tolineno="215" lineno="215" name="a"/>
              </Print>
              <Return fromlineno="216" tolineno="216" lineno="216">
                <Const fromlineno="216" tolineno="216" lineno="216" type="NoneType">None</Const>
              </Return>
            </If>
          </If>
          <TryExcept fromlineno="217" tolineno="224" lineno="217">
            <If fromlineno="218" tolineno="221" lineno="218">
              <Name fromlineno="218" tolineno="218" lineno="218" name="didcopy"/>
              <Discard fromlineno="219" tolineno="219" lineno="219">
                <CallFunc fromlineno="219" tolineno="219" lineno="219" func="Getattr(lchown)">
                  <Getattr fromlineno="219" tolineno="219" lineno="219" attrname="lchown" expr="missingos">
                    <Name fromlineno="219" tolineno="219" lineno="219" name="missingos"/>
                  </Getattr>
                  <Name fromlineno="219" tolineno="219" lineno="219" name="dest"/>
                  <Subscript fromlineno="219" tolineno="219" lineno="219">
                    <Name fromlineno="219" tolineno="219" lineno="219" name="sstat"/>
                    <Index fromlineno="219" tolineno="219" lineno="None">
                      <Getattr fromlineno="219" tolineno="219" lineno="219" attrname="ST_UID" expr="stat">
                        <Name fromlineno="219" tolineno="219" lineno="219" name="stat"/>
                      </Getattr>
                    </Index>
                  </Subscript>
                  <Subscript fromlineno="219" tolineno="219" lineno="219">
                    <Name fromlineno="219" tolineno="219" lineno="219" name="sstat"/>
                    <Index fromlineno="219" tolineno="219" lineno="None">
                      <Getattr fromlineno="219" tolineno="219" lineno="219" attrname="ST_GID" expr="stat">
                        <Name fromlineno="219" tolineno="219" lineno="219" name="stat"/>
                      </Getattr>
                    </Index>
                  </Subscript>
                </CallFunc>
              </Discard>
              <Discard fromlineno="220" tolineno="220" lineno="220">
                <CallFunc fromlineno="220" tolineno="220" lineno="220" func="Getattr(chmod)">
                  <Getattr fromlineno="220" tolineno="220" lineno="220" attrname="chmod" expr="os">
                    <Name fromlineno="220" tolineno="220" lineno="220" name="os"/>
                  </Getattr>
                  <Name fromlineno="220" tolineno="220" lineno="220" name="dest"/>
                  <CallFunc fromlineno="220" tolineno="220" lineno="220" func="Getattr(S_IMODE)">
                    <Getattr fromlineno="220" tolineno="220" lineno="220" attrname="S_IMODE" expr="stat">
                      <Name fromlineno="220" tolineno="220" lineno="220" name="stat"/>
                    </Getattr>
                    <Subscript fromlineno="220" tolineno="220" lineno="220">
                      <Name fromlineno="220" tolineno="220" lineno="220" name="sstat"/>
                      <Index fromlineno="220" tolineno="220" lineno="None">
                        <Getattr fromlineno="220" tolineno="220" lineno="220" attrname="ST_MODE" expr="stat">
                          <Name fromlineno="220" tolineno="220" lineno="220" name="stat"/>
                        </Getattr>
                      </Index>
                    </Subscript>
                  </CallFunc>
                </CallFunc>
              </Discard>
              <Discard fromlineno="221" tolineno="221" lineno="221">
                <CallFunc fromlineno="221" tolineno="221" lineno="221" func="Getattr(unlink)">
                  <Getattr fromlineno="221" tolineno="221" lineno="221" attrname="unlink" expr="os">
                    <Name fromlineno="221" tolineno="221" lineno="221" name="os"/>
                  </Getattr>
                  <Name fromlineno="221" tolineno="221" lineno="221" name="src"/>
                </CallFunc>
              </Discard>
            </If>
            <ExceptHandler fromlineno="222" tolineno="224" lineno="222">
              <Name fromlineno="222" tolineno="222" lineno="222" name="Exception"/>
              <AssName fromlineno="222" tolineno="222" lineno="222" name="e"/>
              <Print fromlineno="223" tolineno="223" lineno="223">
                <Const fromlineno="223" tolineno="223" lineno="223" type="str">'movefile: Failed to chown/chmod/unlink'</Const>
                <Name fromlineno="223" tolineno="223" lineno="223" name="dest"/>
                <Name fromlineno="223" tolineno="223" lineno="223" name="e"/>
              </Print>
              <Return fromlineno="224" tolineno="224" lineno="224">
                <Const fromlineno="224" tolineno="224" lineno="224" type="NoneType">None</Const>
              </Return>
            </ExceptHandler>
          </TryExcept>
        </If>
        <If fromlineno="226" tolineno="230" lineno="226">
          <Name fromlineno="226" tolineno="226" lineno="226" name="newmtime"/>
          <Discard fromlineno="227" tolineno="227" lineno="227">
            <CallFunc fromlineno="227" tolineno="227" lineno="227" func="Getattr(utime)">
              <Getattr fromlineno="227" tolineno="227" lineno="227" attrname="utime" expr="os">
                <Name fromlineno="227" tolineno="227" lineno="227" name="os"/>
              </Getattr>
              <Name fromlineno="227" tolineno="227" lineno="227" name="dest"/>
              <Tuple fromlineno="227" tolineno="227" lineno="227">
                <Name fromlineno="227" tolineno="227" lineno="227" name="newmtime"/>
                <Name fromlineno="227" tolineno="227" lineno="227" name="newmtime"/>
              </Tuple>
            </CallFunc>
          </Discard>
          <Discard fromlineno="229" tolineno="229" lineno="229">
            <CallFunc fromlineno="229" tolineno="229" lineno="229" func="Getattr(utime)">
              <Getattr fromlineno="229" tolineno="229" lineno="229" attrname="utime" expr="os">
                <Name fromlineno="229" tolineno="229" lineno="229" name="os"/>
              </Getattr>
              <Name fromlineno="229" tolineno="229" lineno="229" name="dest"/>
              <Tuple fromlineno="229" tolineno="229" lineno="229">
                <Subscript fromlineno="229" tolineno="229" lineno="229">
                  <Name fromlineno="229" tolineno="229" lineno="229" name="sstat"/>
                  <Index fromlineno="229" tolineno="229" lineno="None">
                    <Getattr fromlineno="229" tolineno="229" lineno="229" attrname="ST_ATIME" expr="stat">
                      <Name fromlineno="229" tolineno="229" lineno="229" name="stat"/>
                    </Getattr>
                  </Index>
                </Subscript>
                <Subscript fromlineno="229" tolineno="229" lineno="229">
                  <Name fromlineno="229" tolineno="229" lineno="229" name="sstat"/>
                  <Index fromlineno="229" tolineno="229" lineno="None">
                    <Getattr fromlineno="229" tolineno="229" lineno="229" attrname="ST_MTIME" expr="stat">
                      <Name fromlineno="229" tolineno="229" lineno="229" name="stat"/>
                    </Getattr>
                  </Index>
                </Subscript>
              </Tuple>
            </CallFunc>
          </Discard>
          <Assign fromlineno="230" tolineno="230" lineno="230" targets="[&lt;AssName(newmtime) l.230 [bb] at Ox929a4ec&gt;]" value="sstat[stat.ST_MTIME]">
            <AssName fromlineno="230" tolineno="230" lineno="230" name="newmtime"/>
            <Subscript fromlineno="230" tolineno="230" lineno="230">
              <Name fromlineno="230" tolineno="230" lineno="230" name="sstat"/>
              <Index fromlineno="230" tolineno="230" lineno="None">
                <Getattr fromlineno="230" tolineno="230" lineno="230" attrname="ST_MTIME" expr="stat">
                  <Name fromlineno="230" tolineno="230" lineno="230" name="stat"/>
                </Getattr>
              </Index>
            </Subscript>
          </Assign>
        </If>
        <Return fromlineno="231" tolineno="231" lineno="231">
          <Name fromlineno="231" tolineno="231" lineno="231" name="newmtime"/>
        </Return>
      </Function>
      <Function fromlineno="233" tolineno="301" lineno="233">
        <Arguments fromlineno="233" tolineno="233" lineno="None" format_args="src, dest, newmtime=None, sstat=None">
          <AssName fromlineno="233" tolineno="233" lineno="233" name="src"/>
          <AssName fromlineno="233" tolineno="233" lineno="233" name="dest"/>
          <AssName fromlineno="233" tolineno="233" lineno="233" name="newmtime"/>
          <AssName fromlineno="233" tolineno="233" lineno="233" name="sstat"/>
          <Const fromlineno="233" tolineno="233" lineno="233" type="NoneType">None</Const>
          <Const fromlineno="233" tolineno="233" lineno="233" type="NoneType">None</Const>
        </Arguments>
        <Import fromlineno="239" tolineno="239" lineno="239">
          <ImportName name="os"/>
          <ImportName name="stat"/>
          <ImportName name="shutil"/>
        </Import>
        <TryExcept fromlineno="242" tolineno="247" lineno="242">
          <If fromlineno="243" tolineno="244" lineno="243">
            <UnaryOp fromlineno="243" tolineno="243" lineno="243">
              <Name fromlineno="243" tolineno="243" lineno="243" name="sstat"/>
            </UnaryOp>
            <Assign fromlineno="244" tolineno="244" lineno="244" targets="[&lt;AssName(sstat) l.244 [bb] at Ox929a96c&gt;]" value="os.lstat(src)">
              <AssName fromlineno="244" tolineno="244" lineno="244" name="sstat"/>
              <CallFunc fromlineno="244" tolineno="244" lineno="244" func="Getattr(lstat)">
                <Getattr fromlineno="244" tolineno="244" lineno="244" attrname="lstat" expr="os">
                  <Name fromlineno="244" tolineno="244" lineno="244" name="os"/>
                </Getattr>
                <Name fromlineno="244" tolineno="244" lineno="244" name="src"/>
              </CallFunc>
            </Assign>
          </If>
          <ExceptHandler fromlineno="245" tolineno="247" lineno="245">
            <Name fromlineno="245" tolineno="245" lineno="245" name="Exception"/>
            <AssName fromlineno="245" tolineno="245" lineno="245" name="e"/>
            <Print fromlineno="246" tolineno="246" lineno="246">
              <Const fromlineno="246" tolineno="246" lineno="246" type="str">'copyfile: Stating source file failed...'</Const>
              <Name fromlineno="246" tolineno="246" lineno="246" name="e"/>
            </Print>
            <Return fromlineno="247" tolineno="247" lineno="247">
              <Const fromlineno="247" tolineno="247" lineno="247" type="bool">False</Const>
            </Return>
          </ExceptHandler>
        </TryExcept>
        <Assign fromlineno="249" tolineno="249" lineno="249" targets="[&lt;AssName(destexists) l.249 [bb] at Ox929abec&gt;]" value="1">
          <AssName fromlineno="249" tolineno="249" lineno="249" name="destexists"/>
          <Const fromlineno="249" tolineno="249" lineno="249" type="int">1</Const>
        </Assign>
        <TryExcept fromlineno="250" tolineno="254" lineno="250">
          <Assign fromlineno="251" tolineno="251" lineno="251" targets="[&lt;AssName(dstat) l.251 [bb] at Ox929acec&gt;]" value="os.lstat(dest)">
            <AssName fromlineno="251" tolineno="251" lineno="251" name="dstat"/>
            <CallFunc fromlineno="251" tolineno="251" lineno="251" func="Getattr(lstat)">
              <Getattr fromlineno="251" tolineno="251" lineno="251" attrname="lstat" expr="os">
                <Name fromlineno="251" tolineno="251" lineno="251" name="os"/>
              </Getattr>
              <Name fromlineno="251" tolineno="251" lineno="251" name="dest"/>
            </CallFunc>
          </Assign>
          <ExceptHandler fromlineno="252" tolineno="254" lineno="252">
            <Assign fromlineno="253" tolineno="253" lineno="253" targets="[&lt;AssName(dstat) l.253 [bb] at Ox929ae8c&gt;]" value="os.lstat(os.path.dirname(dest))">
              <AssName fromlineno="253" tolineno="253" lineno="253" name="dstat"/>
              <CallFunc fromlineno="253" tolineno="253" lineno="253" func="Getattr(lstat)">
                <Getattr fromlineno="253" tolineno="253" lineno="253" attrname="lstat" expr="os">
                  <Name fromlineno="253" tolineno="253" lineno="253" name="os"/>
                </Getattr>
                <CallFunc fromlineno="253" tolineno="253" lineno="253" func="Getattr(dirname)">
                  <Getattr fromlineno="253" tolineno="253" lineno="253" attrname="dirname" expr="os.path">
                    <Getattr fromlineno="253" tolineno="253" lineno="253" attrname="path" expr="os">
                      <Name fromlineno="253" tolineno="253" lineno="253" name="os"/>
                    </Getattr>
                  </Getattr>
                  <Name fromlineno="253" tolineno="253" lineno="253" name="dest"/>
                </CallFunc>
              </CallFunc>
            </Assign>
            <Assign fromlineno="254" tolineno="254" lineno="254" targets="[&lt;AssName(destexists) l.254 [bb] at Ox933d04c&gt;]" value="0">
              <AssName fromlineno="254" tolineno="254" lineno="254" name="destexists"/>
              <Const fromlineno="254" tolineno="254" lineno="254" type="int">0</Const>
            </Assign>
          </ExceptHandler>
        </TryExcept>
        <If fromlineno="256" tolineno="262" lineno="256">
          <Name fromlineno="256" tolineno="256" lineno="256" name="destexists"/>
          <If fromlineno="257" tolineno="262" lineno="257">
            <CallFunc fromlineno="257" tolineno="257" lineno="257" func="Getattr(S_ISLNK)">
              <Getattr fromlineno="257" tolineno="257" lineno="257" attrname="S_ISLNK" expr="stat">
                <Name fromlineno="257" tolineno="257" lineno="257" name="stat"/>
              </Getattr>
              <Subscript fromlineno="257" tolineno="257" lineno="257">
                <Name fromlineno="257" tolineno="257" lineno="257" name="dstat"/>
                <Index fromlineno="257" tolineno="257" lineno="None">
                  <Getattr fromlineno="257" tolineno="257" lineno="257" attrname="ST_MODE" expr="stat">
                    <Name fromlineno="257" tolineno="257" lineno="257" name="stat"/>
                  </Getattr>
                </Index>
              </Subscript>
            </CallFunc>
            <TryExcept fromlineno="258" tolineno="262" lineno="258">
              <Discard fromlineno="259" tolineno="259" lineno="259">
                <CallFunc fromlineno="259" tolineno="259" lineno="259" func="Getattr(unlink)">
                  <Getattr fromlineno="259" tolineno="259" lineno="259" attrname="unlink" expr="os">
                    <Name fromlineno="259" tolineno="259" lineno="259" name="os"/>
                  </Getattr>
                  <Name fromlineno="259" tolineno="259" lineno="259" name="dest"/>
                </CallFunc>
              </Discard>
              <Assign fromlineno="260" tolineno="260" lineno="260" targets="[&lt;AssName(destexists) l.260 [bb] at Ox933d3ec&gt;]" value="0">
                <AssName fromlineno="260" tolineno="260" lineno="260" name="destexists"/>
                <Const fromlineno="260" tolineno="260" lineno="260" type="int">0</Const>
              </Assign>
              <ExceptHandler fromlineno="261" tolineno="262" lineno="261">
                <Name fromlineno="261" tolineno="261" lineno="261" name="Exception"/>
                <AssName fromlineno="261" tolineno="261" lineno="261" name="e"/>
                <Pass fromlineno="262" tolineno="262" lineno="262"/>
              </ExceptHandler>
            </TryExcept>
          </If>
        </If>
        <If fromlineno="264" tolineno="274" lineno="264">
          <CallFunc fromlineno="264" tolineno="264" lineno="264" func="Getattr(S_ISLNK)">
            <Getattr fromlineno="264" tolineno="264" lineno="264" attrname="S_ISLNK" expr="stat">
              <Name fromlineno="264" tolineno="264" lineno="264" name="stat"/>
            </Getattr>
            <Subscript fromlineno="264" tolineno="264" lineno="264">
              <Name fromlineno="264" tolineno="264" lineno="264" name="sstat"/>
              <Index fromlineno="264" tolineno="264" lineno="None">
                <Getattr fromlineno="264" tolineno="264" lineno="264" attrname="ST_MODE" expr="stat">
                  <Name fromlineno="264" tolineno="264" lineno="264" name="stat"/>
                </Getattr>
              </Index>
            </Subscript>
          </CallFunc>
          <TryExcept fromlineno="265" tolineno="274" lineno="265">
            <Assign fromlineno="266" tolineno="266" lineno="266" targets="[&lt;AssName(target) l.266 [bb] at Ox933d6ec&gt;]" value="os.readlink(src)">
              <AssName fromlineno="266" tolineno="266" lineno="266" name="target"/>
              <CallFunc fromlineno="266" tolineno="266" lineno="266" func="Getattr(readlink)">
                <Getattr fromlineno="266" tolineno="266" lineno="266" attrname="readlink" expr="os">
                  <Name fromlineno="266" tolineno="266" lineno="266" name="os"/>
                </Getattr>
                <Name fromlineno="266" tolineno="266" lineno="266" name="src"/>
              </CallFunc>
            </Assign>
            <If fromlineno="267" tolineno="268" lineno="267">
              <BoolOp fromlineno="267" tolineno="267" lineno="267" op="and" values="destexists,not stat.S_ISDIR(dstat[stat.ST_MODE]),">
                <Name fromlineno="267" tolineno="267" lineno="267" name="destexists"/>
                <UnaryOp fromlineno="267" tolineno="267" lineno="267">
                  <CallFunc fromlineno="267" tolineno="267" lineno="267" func="Getattr(S_ISDIR)">
                    <Getattr fromlineno="267" tolineno="267" lineno="267" attrname="S_ISDIR" expr="stat">
                      <Name fromlineno="267" tolineno="267" lineno="267" name="stat"/>
                    </Getattr>
                    <Subscript fromlineno="267" tolineno="267" lineno="267">
                      <Name fromlineno="267" tolineno="267" lineno="267" name="dstat"/>
                      <Index fromlineno="267" tolineno="267" lineno="None">
                        <Getattr fromlineno="267" tolineno="267" lineno="267" attrname="ST_MODE" expr="stat">
                          <Name fromlineno="267" tolineno="267" lineno="267" name="stat"/>
                        </Getattr>
                      </Index>
                    </Subscript>
                  </CallFunc>
                </UnaryOp>
              </BoolOp>
              <Discard fromlineno="268" tolineno="268" lineno="268">
                <CallFunc fromlineno="268" tolineno="268" lineno="268" func="Getattr(unlink)">
                  <Getattr fromlineno="268" tolineno="268" lineno="268" attrname="unlink" expr="os">
                    <Name fromlineno="268" tolineno="268" lineno="268" name="os"/>
                  </Getattr>
                  <Name fromlineno="268" tolineno="268" lineno="268" name="dest"/>
                </CallFunc>
              </Discard>
            </If>
            <Discard fromlineno="269" tolineno="269" lineno="269">
              <CallFunc fromlineno="269" tolineno="269" lineno="269" func="Getattr(symlink)">
                <Getattr fromlineno="269" tolineno="269" lineno="269" attrname="symlink" expr="os">
                  <Name fromlineno="269" tolineno="269" lineno="269" name="os"/>
                </Getattr>
                <Name fromlineno="269" tolineno="269" lineno="269" name="target"/>
                <Name fromlineno="269" tolineno="269" lineno="269" name="dest"/>
              </CallFunc>
            </Discard>
            <Return fromlineno="271" tolineno="271" lineno="271">
              <CallFunc fromlineno="271" tolineno="271" lineno="271" func="Getattr(lstat)">
                <Getattr fromlineno="271" tolineno="271" lineno="271" attrname="lstat" expr="os">
                  <Name fromlineno="271" tolineno="271" lineno="271" name="os"/>
                </Getattr>
                <Name fromlineno="271" tolineno="271" lineno="271" name="dest"/>
              </CallFunc>
            </Return>
            <ExceptHandler fromlineno="272" tolineno="274" lineno="272">
              <Name fromlineno="272" tolineno="272" lineno="272" name="Exception"/>
              <AssName fromlineno="272" tolineno="272" lineno="272" name="e"/>
              <Print fromlineno="273" tolineno="273" lineno="273">
                <Const fromlineno="273" tolineno="273" lineno="273" type="str">'copyfile: failed to properly create symlink:'</Const>
                <Name fromlineno="273" tolineno="273" lineno="273" name="dest"/>
                <Const fromlineno="273" tolineno="273" lineno="273" type="str">'-&gt;'</Const>
                <Name fromlineno="273" tolineno="273" lineno="273" name="target"/>
                <Name fromlineno="273" tolineno="273" lineno="273" name="e"/>
              </Print>
              <Return fromlineno="274" tolineno="274" lineno="274">
                <Const fromlineno="274" tolineno="274" lineno="274" type="bool">False</Const>
              </Return>
            </ExceptHandler>
          </TryExcept>
        </If>
        <If fromlineno="276" tolineno="288" lineno="276">
          <CallFunc fromlineno="276" tolineno="276" lineno="276" func="Getattr(S_ISREG)">
            <Getattr fromlineno="276" tolineno="276" lineno="276" attrname="S_ISREG" expr="stat">
              <Name fromlineno="276" tolineno="276" lineno="276" name="stat"/>
            </Getattr>
            <Subscript fromlineno="276" tolineno="276" lineno="276">
              <Name fromlineno="276" tolineno="276" lineno="276" name="sstat"/>
              <Index fromlineno="276" tolineno="276" lineno="None">
                <Getattr fromlineno="276" tolineno="276" lineno="276" attrname="ST_MODE" expr="stat">
                  <Name fromlineno="276" tolineno="276" lineno="276" name="stat"/>
                </Getattr>
              </Index>
            </Subscript>
          </CallFunc>
          <TryExcept fromlineno="277" tolineno="282" lineno="277">
            <Discard fromlineno="278" tolineno="278" lineno="278">
              <CallFunc fromlineno="278" tolineno="278" lineno="278" func="Getattr(copyfile)">
                <Getattr fromlineno="278" tolineno="278" lineno="278" attrname="copyfile" expr="shutil">
                  <Name fromlineno="278" tolineno="278" lineno="278" name="shutil"/>
                </Getattr>
                <Name fromlineno="278" tolineno="278" lineno="278" name="src"/>
                <BinOp fromlineno="278" tolineno="278" lineno="278" op="+" left="dest" right="'#new'">
                  <Name fromlineno="278" tolineno="278" lineno="278" name="dest"/>
                  <Const fromlineno="278" tolineno="278" lineno="278" type="str">'#new'</Const>
                </BinOp>
              </CallFunc>
            </Discard>
            <Discard fromlineno="279" tolineno="279" lineno="279">
              <CallFunc fromlineno="279" tolineno="279" lineno="279" func="Getattr(rename)">
                <Getattr fromlineno="279" tolineno="279" lineno="279" attrname="rename" expr="os">
                  <Name fromlineno="279" tolineno="279" lineno="279" name="os"/>
                </Getattr>
                <BinOp fromlineno="279" tolineno="279" lineno="279" op="+" left="dest" right="'#new'">
                  <Name fromlineno="279" tolineno="279" lineno="279" name="dest"/>
                  <Const fromlineno="279" tolineno="279" lineno="279" type="str">'#new'</Const>
                </BinOp>
                <Name fromlineno="279" tolineno="279" lineno="279" name="dest"/>
              </CallFunc>
            </Discard>
            <ExceptHandler fromlineno="280" tolineno="282" lineno="280">
              <Name fromlineno="280" tolineno="280" lineno="280" name="Exception"/>
              <AssName fromlineno="280" tolineno="280" lineno="280" name="e"/>
              <Print fromlineno="281" tolineno="281" lineno="281">
                <Const fromlineno="281" tolineno="281" lineno="281" type="str">'copyfile: copy'</Const>
                <Name fromlineno="281" tolineno="281" lineno="281" name="src"/>
                <Const fromlineno="281" tolineno="281" lineno="281" type="str">'-&gt;'</Const>
                <Name fromlineno="281" tolineno="281" lineno="281" name="dest"/>
                <Const fromlineno="281" tolineno="281" lineno="281" type="str">'failed.'</Const>
                <Name fromlineno="281" tolineno="281" lineno="281" name="e"/>
              </Print>
              <Return fromlineno="282" tolineno="282" lineno="282">
                <Const fromlineno="282" tolineno="282" lineno="282" type="bool">False</Const>
              </Return>
            </ExceptHandler>
          </TryExcept>
          <Assign fromlineno="285" tolineno="285" lineno="285" targets="[&lt;AssName(a) l.285 [bb] at Ox934146c&gt;]" value="getstatusoutput(((((('/bin/cp -f ') + (&quot;'&quot;)) + (src)) + (&quot;' '&quot;)) + (dest)) + (&quot;'&quot;))">
            <AssName fromlineno="285" tolineno="285" lineno="285" name="a"/>
            <CallFunc fromlineno="285" tolineno="285" lineno="285" func="Name(getstatusoutput)">
              <Name fromlineno="285" tolineno="285" lineno="285" name="getstatusoutput"/>
              <BinOp fromlineno="285" tolineno="285" lineno="285" op="+" left="(((('/bin/cp -f ') + (&quot;'&quot;)) + (src)) + (&quot;' '&quot;)) + (dest)" right="&quot;'&quot;">
                <BinOp fromlineno="285" tolineno="285" lineno="285" op="+" left="((('/bin/cp -f ') + (&quot;'&quot;)) + (src)) + (&quot;' '&quot;)" right="dest">
                  <BinOp fromlineno="285" tolineno="285" lineno="285" op="+" left="(('/bin/cp -f ') + (&quot;'&quot;)) + (src)" right="&quot;' '&quot;">
                    <BinOp fromlineno="285" tolineno="285" lineno="285" op="+" left="('/bin/cp -f ') + (&quot;'&quot;)" right="src">
                      <BinOp fromlineno="285" tolineno="285" lineno="285" op="+" left="'/bin/cp -f '" right="&quot;'&quot;">
                        <Const fromlineno="285" tolineno="285" lineno="285" type="str">'/bin/cp -f '</Const>
                        <Const fromlineno="285" tolineno="285" lineno="285" type="str">"'"</Const>
                      </BinOp>
                      <Name fromlineno="285" tolineno="285" lineno="285" name="src"/>
                    </BinOp>
                    <Const fromlineno="285" tolineno="285" lineno="285" type="str">"' '"</Const>
                  </BinOp>
                  <Name fromlineno="285" tolineno="285" lineno="285" name="dest"/>
                </BinOp>
                <Const fromlineno="285" tolineno="285" lineno="285" type="str">"'"</Const>
              </BinOp>
            </CallFunc>
          </Assign>
          <If fromlineno="286" tolineno="288" lineno="286">
            <Compare fromlineno="286" tolineno="286" lineno="286" op="('!=', &lt;Const(int) l.286 [bb] at Ox934178c&gt;)">
              <Subscript fromlineno="286" tolineno="286" lineno="286">
                <Name fromlineno="286" tolineno="286" lineno="286" name="a"/>
                <Index fromlineno="286" tolineno="286" lineno="None">
                  <Const fromlineno="286" tolineno="286" lineno="286" type="int">0</Const>
                </Index>
              </Subscript>
              <Const fromlineno="286" tolineno="286" lineno="286" type="int">0</Const>
            </Compare>
            <Print fromlineno="287" tolineno="287" lineno="287">
              <BinOp fromlineno="287" tolineno="287" lineno="287" op="+" left="((('copyfile: Failed to copy special file:') + (src)) + (&quot;' to '&quot;)) + (dest)" right="&quot;'&quot;">
                <BinOp fromlineno="287" tolineno="287" lineno="287" op="+" left="(('copyfile: Failed to copy special file:') + (src)) + (&quot;' to '&quot;)" right="dest">
                  <BinOp fromlineno="287" tolineno="287" lineno="287" op="+" left="('copyfile: Failed to copy special file:') + (src)" right="&quot;' to '&quot;">
                    <BinOp fromlineno="287" tolineno="287" lineno="287" op="+" left="'copyfile: Failed to copy special file:'" right="src">
                      <Const fromlineno="287" tolineno="287" lineno="287" type="str">'copyfile: Failed to copy special file:'</Const>
                      <Name fromlineno="287" tolineno="287" lineno="287" name="src"/>
                    </BinOp>
                    <Const fromlineno="287" tolineno="287" lineno="287" type="str">"' to '"</Const>
                  </BinOp>
                  <Name fromlineno="287" tolineno="287" lineno="287" name="dest"/>
                </BinOp>
                <Const fromlineno="287" tolineno="287" lineno="287" type="str">"'"</Const>
              </BinOp>
              <Name fromlineno="287" tolineno="287" lineno="287" name="a"/>
            </Print>
            <Return fromlineno="288" tolineno="288" lineno="288">
              <Const fromlineno="288" tolineno="288" lineno="288" type="bool">False</Const>
            </Return>
          </If>
        </If>
        <TryExcept fromlineno="289" tolineno="294" lineno="289">
          <Discard fromlineno="290" tolineno="290" lineno="290">
            <CallFunc fromlineno="290" tolineno="290" lineno="290" func="Getattr(lchown)">
              <Getattr fromlineno="290" tolineno="290" lineno="290" attrname="lchown" expr="os">
                <Name fromlineno="290" tolineno="290" lineno="290" name="os"/>
              </Getattr>
              <Name fromlineno="290" tolineno="290" lineno="290" name="dest"/>
              <Subscript fromlineno="290" tolineno="290" lineno="290">
                <Name fromlineno="290" tolineno="290" lineno="290" name="sstat"/>
                <Index fromlineno="290" tolineno="290" lineno="None">
                  <Getattr fromlineno="290" tolineno="290" lineno="290" attrname="ST_UID" expr="stat">
                    <Name fromlineno="290" tolineno="290" lineno="290" name="stat"/>
                  </Getattr>
                </Index>
              </Subscript>
              <Subscript fromlineno="290" tolineno="290" lineno="290">
                <Name fromlineno="290" tolineno="290" lineno="290" name="sstat"/>
                <Index fromlineno="290" tolineno="290" lineno="None">
                  <Getattr fromlineno="290" tolineno="290" lineno="290" attrname="ST_GID" expr="stat">
                    <Name fromlineno="290" tolineno="290" lineno="290" name="stat"/>
                  </Getattr>
                </Index>
              </Subscript>
            </CallFunc>
          </Discard>
          <Discard fromlineno="291" tolineno="291" lineno="291">
            <CallFunc fromlineno="291" tolineno="291" lineno="291" func="Getattr(chmod)">
              <Getattr fromlineno="291" tolineno="291" lineno="291" attrname="chmod" expr="os">
                <Name fromlineno="291" tolineno="291" lineno="291" name="os"/>
              </Getattr>
              <Name fromlineno="291" tolineno="291" lineno="291" name="dest"/>
              <CallFunc fromlineno="291" tolineno="291" lineno="291" func="Getattr(S_IMODE)">
                <Getattr fromlineno="291" tolineno="291" lineno="291" attrname="S_IMODE" expr="stat">
                  <Name fromlineno="291" tolineno="291" lineno="291" name="stat"/>
                </Getattr>
                <Subscript fromlineno="291" tolineno="291" lineno="291">
                  <Name fromlineno="291" tolineno="291" lineno="291" name="sstat"/>
                  <Index fromlineno="291" tolineno="291" lineno="None">
                    <Getattr fromlineno="291" tolineno="291" lineno="291" attrname="ST_MODE" expr="stat">
                      <Name fromlineno="291" tolineno="291" lineno="291" name="stat"/>
                    </Getattr>
                  </Index>
                </Subscript>
              </CallFunc>
            </CallFunc>
          </Discard>
          <ExceptHandler fromlineno="292" tolineno="294" lineno="292">
            <Name fromlineno="292" tolineno="292" lineno="292" name="Exception"/>
            <AssName fromlineno="292" tolineno="292" lineno="292" name="e"/>
            <Print fromlineno="293" tolineno="293" lineno="293">
              <Const fromlineno="293" tolineno="293" lineno="293" type="str">'copyfile: Failed to chown/chmod/unlink'</Const>
              <Name fromlineno="293" tolineno="293" lineno="293" name="dest"/>
              <Name fromlineno="293" tolineno="293" lineno="293" name="e"/>
            </Print>
            <Return fromlineno="294" tolineno="294" lineno="294">
              <Const fromlineno="294" tolineno="294" lineno="294" type="bool">False</Const>
            </Return>
          </ExceptHandler>
        </TryExcept>
        <If fromlineno="296" tolineno="300" lineno="296">
          <Name fromlineno="296" tolineno="296" lineno="296" name="newmtime"/>
          <Discard fromlineno="297" tolineno="297" lineno="297">
            <CallFunc fromlineno="297" tolineno="297" lineno="297" func="Getattr(utime)">
              <Getattr fromlineno="297" tolineno="297" lineno="297" attrname="utime" expr="os">
                <Name fromlineno="297" tolineno="297" lineno="297" name="os"/>
              </Getattr>
              <Name fromlineno="297" tolineno="297" lineno="297" name="dest"/>
              <Tuple fromlineno="297" tolineno="297" lineno="297">
                <Name fromlineno="297" tolineno="297" lineno="297" name="newmtime"/>
                <Name fromlineno="297" tolineno="297" lineno="297" name="newmtime"/>
              </Tuple>
            </CallFunc>
          </Discard>
          <Discard fromlineno="299" tolineno="299" lineno="299">
            <CallFunc fromlineno="299" tolineno="299" lineno="299" func="Getattr(utime)">
              <Getattr fromlineno="299" tolineno="299" lineno="299" attrname="utime" expr="os">
                <Name fromlineno="299" tolineno="299" lineno="299" name="os"/>
              </Getattr>
              <Name fromlineno="299" tolineno="299" lineno="299" name="dest"/>
              <Tuple fromlineno="299" tolineno="299" lineno="299">
                <Subscript fromlineno="299" tolineno="299" lineno="299">
                  <Name fromlineno="299" tolineno="299" lineno="299" name="sstat"/>
                  <Index fromlineno="299" tolineno="299" lineno="None">
                    <Getattr fromlineno="299" tolineno="299" lineno="299" attrname="ST_ATIME" expr="stat">
                      <Name fromlineno="299" tolineno="299" lineno="299" name="stat"/>
                    </Getattr>
                  </Index>
                </Subscript>
                <Subscript fromlineno="299" tolineno="299" lineno="299">
                  <Name fromlineno="299" tolineno="299" lineno="299" name="sstat"/>
                  <Index fromlineno="299" tolineno="299" lineno="None">
                    <Getattr fromlineno="299" tolineno="299" lineno="299" attrname="ST_MTIME" expr="stat">
                      <Name fromlineno="299" tolineno="299" lineno="299" name="stat"/>
                    </Getattr>
                  </Index>
                </Subscript>
              </Tuple>
            </CallFunc>
          </Discard>
          <Assign fromlineno="300" tolineno="300" lineno="300" targets="[&lt;AssName(newmtime) l.300 [bb] at Ox934538c&gt;]" value="sstat[stat.ST_MTIME]">
            <AssName fromlineno="300" tolineno="300" lineno="300" name="newmtime"/>
            <Subscript fromlineno="300" tolineno="300" lineno="300">
              <Name fromlineno="300" tolineno="300" lineno="300" name="sstat"/>
              <Index fromlineno="300" tolineno="300" lineno="None">
                <Getattr fromlineno="300" tolineno="300" lineno="300" attrname="ST_MTIME" expr="stat">
                  <Name fromlineno="300" tolineno="300" lineno="300" name="stat"/>
                </Getattr>
              </Index>
            </Subscript>
          </Assign>
        </If>
        <Return fromlineno="301" tolineno="301" lineno="301">
          <Name fromlineno="301" tolineno="301" lineno="301" name="newmtime"/>
        </Return>
      </Function>
      <Function fromlineno="314" tolineno="367" lineno="314">
        <Arguments fromlineno="314" tolineno="314" lineno="None" format_args="url">
          <AssName fromlineno="314" tolineno="314" lineno="314" name="url"/>
        </Arguments>
        <Assign fromlineno="334" tolineno="334" lineno="334" targets="[&lt;AssName(m) l.334 [bb] at Ox934556c&gt;]" value="re.compile('(?P&lt;type&gt;[^:]*)://((?P&lt;user&gt;.+)@)?(?P&lt;location&gt;[^;]+)(;(?P&lt;parm&gt;.*))?').match(url)">
          <AssName fromlineno="334" tolineno="334" lineno="334" name="m"/>
          <CallFunc fromlineno="334" tolineno="334" lineno="334" func="Getattr(match)">
            <Getattr fromlineno="334" tolineno="334" lineno="334" attrname="match" expr="re.compile('(?P&lt;type&gt;[^:]*)://((?P&lt;user&gt;.+)@)?(?P&lt;location&gt;[^;]+)(;(?P&lt;parm&gt;.*))?')">
              <CallFunc fromlineno="334" tolineno="334" lineno="334" func="Getattr(compile)">
                <Getattr fromlineno="334" tolineno="334" lineno="334" attrname="compile" expr="re">
                  <Name fromlineno="334" tolineno="334" lineno="334" name="re"/>
                </Getattr>
                <Const fromlineno="334" tolineno="334" lineno="334" type="str">'(?P&lt;type&gt;[^:]*)://((?P&lt;user&gt;.+)@)?(?P&lt;location&gt;[^;]+)(;(?P&lt;parm&gt;.*))?'</Const>
              </CallFunc>
            </Getattr>
            <Name fromlineno="334" tolineno="334" lineno="334" name="url"/>
          </CallFunc>
        </Assign>
        <If fromlineno="335" tolineno="336" lineno="335">
          <UnaryOp fromlineno="335" tolineno="335" lineno="335">
            <Name fromlineno="335" tolineno="335" lineno="335" name="m"/>
          </UnaryOp>
          <Raise fromlineno="336" tolineno="336" lineno="336">
            <CallFunc fromlineno="336" tolineno="336" lineno="336" func="Name(MalformedUrl)">
              <Name fromlineno="336" tolineno="336" lineno="336" name="MalformedUrl"/>
              <Name fromlineno="336" tolineno="336" lineno="336" name="url"/>
            </CallFunc>
          </Raise>
        </If>
        <Assign fromlineno="338" tolineno="338" lineno="338" targets="[&lt;AssName(type) l.338 [bb] at Ox934584c&gt;]" value="m.group('type')">
          <AssName fromlineno="338" tolineno="338" lineno="338" name="type"/>
          <CallFunc fromlineno="338" tolineno="338" lineno="338" func="Getattr(group)">
            <Getattr fromlineno="338" tolineno="338" lineno="338" attrname="group" expr="m">
              <Name fromlineno="338" tolineno="338" lineno="338" name="m"/>
            </Getattr>
            <Const fromlineno="338" tolineno="338" lineno="338" type="str">'type'</Const>
          </CallFunc>
        </Assign>
        <Assign fromlineno="339" tolineno="339" lineno="339" targets="[&lt;AssName(location) l.339 [bb] at Ox934596c&gt;]" value="m.group('location')">
          <AssName fromlineno="339" tolineno="339" lineno="339" name="location"/>
          <CallFunc fromlineno="339" tolineno="339" lineno="339" func="Getattr(group)">
            <Getattr fromlineno="339" tolineno="339" lineno="339" attrname="group" expr="m">
              <Name fromlineno="339" tolineno="339" lineno="339" name="m"/>
            </Getattr>
            <Const fromlineno="339" tolineno="339" lineno="339" type="str">'location'</Const>
          </CallFunc>
        </Assign>
        <If fromlineno="340" tolineno="341" lineno="340">
          <UnaryOp fromlineno="340" tolineno="340" lineno="340">
            <Name fromlineno="340" tolineno="340" lineno="340" name="location"/>
          </UnaryOp>
          <Raise fromlineno="341" tolineno="341" lineno="341">
            <CallFunc fromlineno="341" tolineno="341" lineno="341" func="Name(MalformedUrl)">
              <Name fromlineno="341" tolineno="341" lineno="341" name="MalformedUrl"/>
              <Name fromlineno="341" tolineno="341" lineno="341" name="url"/>
            </CallFunc>
          </Raise>
        </If>
        <Assign fromlineno="342" tolineno="342" lineno="342" targets="[&lt;AssName(user) l.342 [bb] at Ox9345bcc&gt;]" value="m.group('user')">
          <AssName fromlineno="342" tolineno="342" lineno="342" name="user"/>
          <CallFunc fromlineno="342" tolineno="342" lineno="342" func="Getattr(group)">
            <Getattr fromlineno="342" tolineno="342" lineno="342" attrname="group" expr="m">
              <Name fromlineno="342" tolineno="342" lineno="342" name="m"/>
            </Getattr>
            <Const fromlineno="342" tolineno="342" lineno="342" type="str">'user'</Const>
          </CallFunc>
        </Assign>
        <Assign fromlineno="343" tolineno="343" lineno="343" targets="[&lt;AssName(parm) l.343 [bb] at Ox9345cec&gt;]" value="m.group('parm')">
          <AssName fromlineno="343" tolineno="343" lineno="343" name="parm"/>
          <CallFunc fromlineno="343" tolineno="343" lineno="343" func="Getattr(group)">
            <Getattr fromlineno="343" tolineno="343" lineno="343" attrname="group" expr="m">
              <Name fromlineno="343" tolineno="343" lineno="343" name="m"/>
            </Getattr>
            <Const fromlineno="343" tolineno="343" lineno="343" type="str">'parm'</Const>
          </CallFunc>
        </Assign>
        <Assign fromlineno="345" tolineno="345" lineno="345" targets="[&lt;AssName(locidx) l.345 [bb] at Ox9345e0c&gt;]" value="location.find('/')">
          <AssName fromlineno="345" tolineno="345" lineno="345" name="locidx"/>
          <CallFunc fromlineno="345" tolineno="345" lineno="345" func="Getattr(find)">
            <Getattr fromlineno="345" tolineno="345" lineno="345" attrname="find" expr="location">
              <Name fromlineno="345" tolineno="345" lineno="345" name="location"/>
            </Getattr>
            <Const fromlineno="345" tolineno="345" lineno="345" type="str">'/'</Const>
          </CallFunc>
        </Assign>
        <If fromlineno="346" tolineno="351" lineno="346">
          <Compare fromlineno="346" tolineno="346" lineno="346" op="('!=', &lt;Const(int) l.346 [bb] at Ox9345f8c&gt;)">
            <Name fromlineno="346" tolineno="346" lineno="346" name="locidx"/>
            <Const fromlineno="346" tolineno="346" lineno="346" type="int">-1</Const>
          </Compare>
          <Assign fromlineno="347" tolineno="347" lineno="347" targets="[&lt;AssName(host) l.347 [bb] at Ox934902c&gt;]" value="location[:locidx]">
            <AssName fromlineno="347" tolineno="347" lineno="347" name="host"/>
            <Subscript fromlineno="347" tolineno="347" lineno="347">
              <Name fromlineno="347" tolineno="347" lineno="347" name="location"/>
              <Slice fromlineno="347" tolineno="347" lineno="None">
                <Name fromlineno="347" tolineno="347" lineno="347" name="locidx"/>
              </Slice>
            </Subscript>
          </Assign>
          <Assign fromlineno="348" tolineno="348" lineno="348" targets="[&lt;AssName(path) l.348 [bb] at Ox934912c&gt;]" value="location[locidx:]">
            <AssName fromlineno="348" tolineno="348" lineno="348" name="path"/>
            <Subscript fromlineno="348" tolineno="348" lineno="348">
              <Name fromlineno="348" tolineno="348" lineno="348" name="location"/>
              <Slice fromlineno="348" tolineno="348" lineno="None">
                <Name fromlineno="348" tolineno="348" lineno="348" name="locidx"/>
              </Slice>
            </Subscript>
          </Assign>
          <Assign fromlineno="350" tolineno="350" lineno="350" targets="[&lt;AssName(host) l.350 [bb] at Ox934924c&gt;]" value="''">
            <AssName fromlineno="350" tolineno="350" lineno="350" name="host"/>
            <Const fromlineno="350" tolineno="350" lineno="350" type="str">''</Const>
          </Assign>
          <Assign fromlineno="351" tolineno="351" lineno="351" targets="[&lt;AssName(path) l.351 [bb] at Ox93492cc&gt;]" value="location">
            <AssName fromlineno="351" tolineno="351" lineno="351" name="path"/>
            <Name fromlineno="351" tolineno="351" lineno="351" name="location"/>
          </Assign>
        </If>
        <If fromlineno="352" tolineno="359" lineno="352">
          <Name fromlineno="352" tolineno="352" lineno="352" name="user"/>
          <Assign fromlineno="353" tolineno="353" lineno="353" targets="[&lt;AssName(m) l.353 [bb] at Ox93493ac&gt;]" value="re.compile('(?P&lt;user&gt;[^:]+)(:?(?P&lt;pswd&gt;.*))').match(user)">
            <AssName fromlineno="353" tolineno="353" lineno="353" name="m"/>
            <CallFunc fromlineno="353" tolineno="353" lineno="353" func="Getattr(match)">
              <Getattr fromlineno="353" tolineno="353" lineno="353" attrname="match" expr="re.compile('(?P&lt;user&gt;[^:]+)(:?(?P&lt;pswd&gt;.*))')">
                <CallFunc fromlineno="353" tolineno="353" lineno="353" func="Getattr(compile)">
                  <Getattr fromlineno="353" tolineno="353" lineno="353" attrname="compile" expr="re">
                    <Name fromlineno="353" tolineno="353" lineno="353" name="re"/>
                  </Getattr>
                  <Const fromlineno="353" tolineno="353" lineno="353" type="str">'(?P&lt;user&gt;[^:]+)(:?(?P&lt;pswd&gt;.*))'</Const>
                </CallFunc>
              </Getattr>
              <Name fromlineno="353" tolineno="353" lineno="353" name="user"/>
            </CallFunc>
          </Assign>
          <If fromlineno="354" tolineno="356" lineno="354">
            <Name fromlineno="354" tolineno="354" lineno="354" name="m"/>
            <Assign fromlineno="355" tolineno="355" lineno="355" targets="[&lt;AssName(user) l.355 [bb] at Ox93495cc&gt;]" value="m.group('user')">
              <AssName fromlineno="355" tolineno="355" lineno="355" name="user"/>
              <CallFunc fromlineno="355" tolineno="355" lineno="355" func="Getattr(group)">
                <Getattr fromlineno="355" tolineno="355" lineno="355" attrname="group" expr="m">
                  <Name fromlineno="355" tolineno="355" lineno="355" name="m"/>
                </Getattr>
                <Const fromlineno="355" tolineno="355" lineno="355" type="str">'user'</Const>
              </CallFunc>
            </Assign>
            <Assign fromlineno="356" tolineno="356" lineno="356" targets="[&lt;AssName(pswd) l.356 [bb] at Ox93496cc&gt;]" value="m.group('pswd')">
              <AssName fromlineno="356" tolineno="356" lineno="356" name="pswd"/>
              <CallFunc fromlineno="356" tolineno="356" lineno="356" func="Getattr(group)">
                <Getattr fromlineno="356" tolineno="356" lineno="356" attrname="group" expr="m">
                  <Name fromlineno="356" tolineno="356" lineno="356" name="m"/>
                </Getattr>
                <Const fromlineno="356" tolineno="356" lineno="356" type="str">'pswd'</Const>
              </CallFunc>
            </Assign>
          </If>
          <Assign fromlineno="358" tolineno="358" lineno="358" targets="[&lt;AssName(user) l.358 [bb] at Ox934980c&gt;]" value="''">
            <AssName fromlineno="358" tolineno="358" lineno="358" name="user"/>
            <Const fromlineno="358" tolineno="358" lineno="358" type="str">''</Const>
          </Assign>
          <Assign fromlineno="359" tolineno="359" lineno="359" targets="[&lt;AssName(pswd) l.359 [bb] at Ox934988c&gt;]" value="''">
            <AssName fromlineno="359" tolineno="359" lineno="359" name="pswd"/>
            <Const fromlineno="359" tolineno="359" lineno="359" type="str">''</Const>
          </Assign>
        </If>
        <Assign fromlineno="361" tolineno="361" lineno="361" targets="[&lt;AssName(p) l.361 [bb] at Ox93498cc&gt;]" value="{}">
          <AssName fromlineno="361" tolineno="361" lineno="361" name="p"/>
          <Dict fromlineno="361" tolineno="361" lineno="361"/>
        </Assign>
        <If fromlineno="362" tolineno="365" lineno="362">
          <Name fromlineno="362" tolineno="362" lineno="362" name="parm"/>
          <For fromlineno="363" tolineno="365" lineno="363">
            <AssName fromlineno="363" tolineno="363" lineno="363" name="s"/>
            <CallFunc fromlineno="363" tolineno="363" lineno="363" func="Getattr(split)">
              <Getattr fromlineno="363" tolineno="363" lineno="363" attrname="split" expr="parm">
                <Name fromlineno="363" tolineno="363" lineno="363" name="parm"/>
              </Getattr>
              <Const fromlineno="363" tolineno="363" lineno="363" type="str">';'</Const>
            </CallFunc>
            <Assign fromlineno="364" tolineno="364" lineno="364" targets="[&lt;Tuple(tuple) l.364 [bb] at Ox9349b4c&gt;]" value="s.split('=')">
              <Tuple fromlineno="364" tolineno="364" lineno="364">
                <AssName fromlineno="364" tolineno="364" lineno="364" name="s1"/>
                <AssName fromlineno="364" tolineno="364" lineno="364" name="s2"/>
              </Tuple>
              <CallFunc fromlineno="364" tolineno="364" lineno="364" func="Getattr(split)">
                <Getattr fromlineno="364" tolineno="364" lineno="364" attrname="split" expr="s">
                  <Name fromlineno="364" tolineno="364" lineno="364" name="s"/>
                </Getattr>
                <Const fromlineno="364" tolineno="364" lineno="364" type="str">'='</Const>
              </CallFunc>
            </Assign>
            <Assign fromlineno="365" tolineno="365" lineno="365" targets="[&lt;Subscript() l.365 [bb] at Ox9349cec&gt;]" value="s2">
              <Subscript fromlineno="365" tolineno="365" lineno="365">
                <Name fromlineno="365" tolineno="365" lineno="365" name="p"/>
                <Index fromlineno="365" tolineno="365" lineno="None">
                  <Name fromlineno="365" tolineno="365" lineno="365" name="s1"/>
                </Index>
              </Subscript>
              <Name fromlineno="365" tolineno="365" lineno="365" name="s2"/>
            </Assign>
          </For>
        </If>
        <Return fromlineno="367" tolineno="367" lineno="367">
          <Tuple fromlineno="367" tolineno="367" lineno="367">
            <Name fromlineno="367" tolineno="367" lineno="367" name="type"/>
            <Name fromlineno="367" tolineno="367" lineno="367" name="host"/>
            <Name fromlineno="367" tolineno="367" lineno="367" name="path"/>
            <Name fromlineno="367" tolineno="367" lineno="367" name="user"/>
            <Name fromlineno="367" tolineno="367" lineno="367" name="pswd"/>
            <Name fromlineno="367" tolineno="367" lineno="367" name="p"/>
          </Tuple>
        </Return>
      </Function>
      <Function fromlineno="371" tolineno="408" lineno="371">
        <Arguments fromlineno="371" tolineno="371" lineno="None" format_args="decoded">
          <AssName fromlineno="371" tolineno="371" lineno="371" name="decoded"/>
        </Arguments>
        <Assign fromlineno="391" tolineno="391" lineno="391" targets="[&lt;Tuple(tuple) l.391 [bb] at Ox9349fac&gt;]" value="decoded">
          <Tuple fromlineno="391" tolineno="391" lineno="391">
            <AssName fromlineno="391" tolineno="391" lineno="391" name="type"/>
            <AssName fromlineno="391" tolineno="391" lineno="391" name="host"/>
            <AssName fromlineno="391" tolineno="391" lineno="391" name="path"/>
            <AssName fromlineno="391" tolineno="391" lineno="391" name="user"/>
            <AssName fromlineno="391" tolineno="391" lineno="391" name="pswd"/>
            <AssName fromlineno="391" tolineno="391" lineno="391" name="p"/>
          </Tuple>
          <Name fromlineno="391" tolineno="391" lineno="391" name="decoded"/>
        </Assign>
        <If fromlineno="393" tolineno="394" lineno="393">
          <BoolOp fromlineno="393" tolineno="393" lineno="393" op="or" values="not type,not path,">
            <UnaryOp fromlineno="393" tolineno="393" lineno="393">
              <Name fromlineno="393" tolineno="393" lineno="393" name="type"/>
            </UnaryOp>
            <UnaryOp fromlineno="393" tolineno="393" lineno="393">
              <Name fromlineno="393" tolineno="393" lineno="393" name="path"/>
            </UnaryOp>
          </BoolOp>
          <Discard fromlineno="394" tolineno="394" lineno="394">
            <CallFunc fromlineno="394" tolineno="394" lineno="394" func="Name(fatal)">
              <Name fromlineno="394" tolineno="394" lineno="394" name="fatal"/>
              <Const fromlineno="394" tolineno="394" lineno="394" type="str">'invalid or missing parameters for url encoding'</Const>
            </CallFunc>
          </Discard>
        </If>
        <Assign fromlineno="395" tolineno="395" lineno="395" targets="[&lt;AssName(url) l.395 [bb] at Ox934d3ac&gt;]" value="('%s://') % (type)">
          <AssName fromlineno="395" tolineno="395" lineno="395" name="url"/>
          <BinOp fromlineno="395" tolineno="395" lineno="395" op="%" left="'%s://'" right="type">
            <Const fromlineno="395" tolineno="395" lineno="395" type="str">'%s://'</Const>
            <Name fromlineno="395" tolineno="395" lineno="395" name="type"/>
          </BinOp>
        </Assign>
        <If fromlineno="396" tolineno="400" lineno="396">
          <Name fromlineno="396" tolineno="396" lineno="396" name="user"/>
          <AugAssign fromlineno="397" tolineno="397" lineno="397" target="url" value="('%s') % (user)">
            <AssName fromlineno="397" tolineno="397" lineno="397" name="url"/>
            <BinOp fromlineno="397" tolineno="397" lineno="397" op="%" left="'%s'" right="user">
              <Const fromlineno="397" tolineno="397" lineno="397" type="str">'%s'</Const>
              <Name fromlineno="397" tolineno="397" lineno="397" name="user"/>
            </BinOp>
          </AugAssign>
          <If fromlineno="398" tolineno="399" lineno="398">
            <Name fromlineno="398" tolineno="398" lineno="398" name="pswd"/>
            <AugAssign fromlineno="399" tolineno="399" lineno="399" target="url" value="(':%s') % (pswd)">
              <AssName fromlineno="399" tolineno="399" lineno="399" name="url"/>
              <BinOp fromlineno="399" tolineno="399" lineno="399" op="%" left="':%s'" right="pswd">
                <Const fromlineno="399" tolineno="399" lineno="399" type="str">':%s'</Const>
                <Name fromlineno="399" tolineno="399" lineno="399" name="pswd"/>
              </BinOp>
            </AugAssign>
          </If>
          <AugAssign fromlineno="400" tolineno="400" lineno="400" target="url" value="'@'">
            <AssName fromlineno="400" tolineno="400" lineno="400" name="url"/>
            <Const fromlineno="400" tolineno="400" lineno="400" type="str">'@'</Const>
          </AugAssign>
        </If>
        <If fromlineno="401" tolineno="402" lineno="401">
          <Name fromlineno="401" tolineno="401" lineno="401" name="host"/>
          <AugAssign fromlineno="402" tolineno="402" lineno="402" target="url" value="('%s') % (host)">
            <AssName fromlineno="402" tolineno="402" lineno="402" name="url"/>
            <BinOp fromlineno="402" tolineno="402" lineno="402" op="%" left="'%s'" right="host">
              <Const fromlineno="402" tolineno="402" lineno="402" type="str">'%s'</Const>
              <Name fromlineno="402" tolineno="402" lineno="402" name="host"/>
            </BinOp>
          </AugAssign>
        </If>
        <AugAssign fromlineno="403" tolineno="403" lineno="403" target="url" value="('%s') % (path)">
          <AssName fromlineno="403" tolineno="403" lineno="403" name="url"/>
          <BinOp fromlineno="403" tolineno="403" lineno="403" op="%" left="'%s'" right="path">
            <Const fromlineno="403" tolineno="403" lineno="403" type="str">'%s'</Const>
            <Name fromlineno="403" tolineno="403" lineno="403" name="path"/>
          </BinOp>
        </AugAssign>
        <If fromlineno="404" tolineno="406" lineno="404">
          <Name fromlineno="404" tolineno="404" lineno="404" name="p"/>
          <For fromlineno="405" tolineno="406" lineno="405">
            <AssName fromlineno="405" tolineno="405" lineno="405" name="parm"/>
            <CallFunc fromlineno="405" tolineno="405" lineno="405" func="Getattr(keys)">
              <Getattr fromlineno="405" tolineno="405" lineno="405" attrname="keys" expr="p">
                <Name fromlineno="405" tolineno="405" lineno="405" name="p"/>
              </Getattr>
            </CallFunc>
            <AugAssign fromlineno="406" tolineno="406" lineno="406" target="url" value="(';%s=%s') % ((parm, p[parm]))">
              <AssName fromlineno="406" tolineno="406" lineno="406" name="url"/>
              <BinOp fromlineno="406" tolineno="406" lineno="406" op="%" left="';%s=%s'" right="(parm, p[parm])">
                <Const fromlineno="406" tolineno="406" lineno="406" type="str">';%s=%s'</Const>
                <Tuple fromlineno="406" tolineno="406" lineno="406">
                  <Name fromlineno="406" tolineno="406" lineno="406" name="parm"/>
                  <Subscript fromlineno="406" tolineno="406" lineno="406">
                    <Name fromlineno="406" tolineno="406" lineno="406" name="p"/>
                    <Index fromlineno="406" tolineno="406" lineno="None">
                      <Name fromlineno="406" tolineno="406" lineno="406" name="parm"/>
                    </Index>
                  </Subscript>
                </Tuple>
              </BinOp>
            </AugAssign>
          </For>
        </If>
        <Return fromlineno="408" tolineno="408" lineno="408">
          <Name fromlineno="408" tolineno="408" lineno="408" name="url"/>
        </Return>
      </Function>
      <Function fromlineno="412" tolineno="426" lineno="412">
        <Arguments fromlineno="412" tolineno="412" lineno="None" format_args="path, item, direction=0">
          <AssName fromlineno="412" tolineno="412" lineno="412" name="path"/>
          <AssName fromlineno="412" tolineno="412" lineno="412" name="item"/>
          <AssName fromlineno="412" tolineno="412" lineno="412" name="direction"/>
          <Const fromlineno="412" tolineno="412" lineno="412" type="int">0</Const>
        </Arguments>
        <Assign fromlineno="417" tolineno="417" lineno="417" targets="[&lt;AssName(paths) l.417 [bb] at Ox934de4c&gt;]" value="(path) or ('').split(':')">
          <AssName fromlineno="417" tolineno="417" lineno="417" name="paths"/>
          <CallFunc fromlineno="417" tolineno="417" lineno="417" func="Getattr(split)">
            <Getattr fromlineno="417" tolineno="417" lineno="417" attrname="split" expr="(path) or ('')">
              <BoolOp fromlineno="417" tolineno="417" lineno="417" op="or" values="path,'',">
                <Name fromlineno="417" tolineno="417" lineno="417" name="path"/>
                <Const fromlineno="417" tolineno="417" lineno="417" type="str">''</Const>
              </BoolOp>
            </Getattr>
            <Const fromlineno="417" tolineno="417" lineno="417" type="str">':'</Const>
          </CallFunc>
        </Assign>
        <If fromlineno="418" tolineno="419" lineno="418">
          <Compare fromlineno="418" tolineno="418" lineno="418" op="('!=', &lt;Const(int) l.418 [bb] at Ox935104c&gt;)">
            <Name fromlineno="418" tolineno="418" lineno="418" name="direction"/>
            <Const fromlineno="418" tolineno="418" lineno="418" type="int">0</Const>
          </Compare>
          <Discard fromlineno="419" tolineno="419" lineno="419">
            <CallFunc fromlineno="419" tolineno="419" lineno="419" func="Getattr(reverse)">
              <Getattr fromlineno="419" tolineno="419" lineno="419" attrname="reverse" expr="paths">
                <Name fromlineno="419" tolineno="419" lineno="419" name="paths"/>
              </Getattr>
            </CallFunc>
          </Discard>
        </If>
        <For fromlineno="421" tolineno="424" lineno="421">
          <AssName fromlineno="421" tolineno="421" lineno="421" name="p"/>
          <CallFunc fromlineno="421" tolineno="421" lineno="421" func="Getattr(split)">
            <Getattr fromlineno="421" tolineno="421" lineno="421" attrname="split" expr="(path) or ('')">
              <BoolOp fromlineno="421" tolineno="421" lineno="421" op="or" values="path,'',">
                <Name fromlineno="421" tolineno="421" lineno="421" name="path"/>
                <Const fromlineno="421" tolineno="421" lineno="421" type="str">''</Const>
              </BoolOp>
            </Getattr>
            <Const fromlineno="421" tolineno="421" lineno="421" type="str">':'</Const>
          </CallFunc>
          <Assign fromlineno="422" tolineno="422" lineno="422" targets="[&lt;AssName(next) l.422 [bb] at Ox935130c&gt;]" value="os.path.join(p, item)">
            <AssName fromlineno="422" tolineno="422" lineno="422" name="next"/>
            <CallFunc fromlineno="422" tolineno="422" lineno="422" func="Getattr(join)">
              <Getattr fromlineno="422" tolineno="422" lineno="422" attrname="join" expr="os.path">
                <Getattr fromlineno="422" tolineno="422" lineno="422" attrname="path" expr="os">
                  <Name fromlineno="422" tolineno="422" lineno="422" name="os"/>
                </Getattr>
              </Getattr>
              <Name fromlineno="422" tolineno="422" lineno="422" name="p"/>
              <Name fromlineno="422" tolineno="422" lineno="422" name="item"/>
            </CallFunc>
          </Assign>
          <If fromlineno="423" tolineno="424" lineno="423">
            <CallFunc fromlineno="423" tolineno="423" lineno="423" func="Getattr(exists)">
              <Getattr fromlineno="423" tolineno="423" lineno="423" attrname="exists" expr="os.path">
                <Getattr fromlineno="423" tolineno="423" lineno="423" attrname="path" expr="os">
                  <Name fromlineno="423" tolineno="423" lineno="423" name="os"/>
                </Getattr>
              </Getattr>
              <Name fromlineno="423" tolineno="423" lineno="423" name="next"/>
            </CallFunc>
            <Return fromlineno="424" tolineno="424" lineno="424">
              <Name fromlineno="424" tolineno="424" lineno="424" name="next"/>
            </Return>
          </If>
        </For>
        <Return fromlineno="426" tolineno="426" lineno="426">
          <Const fromlineno="426" tolineno="426" lineno="426" type="str">''</Const>
        </Return>
      </Function>
      <Function fromlineno="443" tolineno="495" lineno="443">
        <Arguments fromlineno="443" tolineno="443" lineno="None" format_args="mystring">
          <AssName fromlineno="443" tolineno="443" lineno="443" name="mystring"/>
        </Arguments>
        <Assign fromlineno="460" tolineno="460" lineno="460" targets="[&lt;AssName(newtokens) l.460 [bb] at Ox93516cc&gt;]" value="[]">
          <AssName fromlineno="460" tolineno="460" lineno="460" name="newtokens"/>
          <List fromlineno="460" tolineno="460" lineno="460"/>
        </Assign>
        <Assign fromlineno="461" tolineno="461" lineno="461" targets="[&lt;AssName(curlist) l.461 [bb] at Ox935178c&gt;]" value="newtokens">
          <AssName fromlineno="461" tolineno="461" lineno="461" name="curlist"/>
          <Name fromlineno="461" tolineno="461" lineno="461" name="newtokens"/>
        </Assign>
        <Assign fromlineno="462" tolineno="462" lineno="462" targets="[&lt;AssName(prevlists) l.462 [bb] at Ox935182c&gt;]" value="[]">
          <AssName fromlineno="462" tolineno="462" lineno="462" name="prevlists"/>
          <List fromlineno="462" tolineno="462" lineno="462"/>
        </Assign>
        <Assign fromlineno="463" tolineno="463" lineno="463" targets="[&lt;AssName(level) l.463 [bb] at Ox93518ec&gt;]" value="0">
          <AssName fromlineno="463" tolineno="463" lineno="463" name="level"/>
          <Const fromlineno="463" tolineno="463" lineno="463" type="int">0</Const>
        </Assign>
        <Assign fromlineno="464" tolineno="464" lineno="464" targets="[&lt;AssName(accum) l.464 [bb] at Ox935198c&gt;]" value="''">
          <AssName fromlineno="464" tolineno="464" lineno="464" name="accum"/>
          <Const fromlineno="464" tolineno="464" lineno="464" type="str">''</Const>
        </Assign>
        <For fromlineno="465" tolineno="489" lineno="465">
          <AssName fromlineno="465" tolineno="465" lineno="465" name="x"/>
          <Name fromlineno="465" tolineno="465" lineno="465" name="mystring"/>
          <If fromlineno="466" tolineno="489" lineno="466">
            <Compare fromlineno="466" tolineno="466" lineno="466" op="('==', &lt;Const(str) l.466 [bb] at Ox9351b4c&gt;)">
              <Name fromlineno="466" tolineno="466" lineno="466" name="x"/>
              <Const fromlineno="466" tolineno="466" lineno="466" type="str">'('</Const>
            </Compare>
            <If fromlineno="467" tolineno="469" lineno="467">
              <Name fromlineno="467" tolineno="467" lineno="467" name="accum"/>
              <Discard fromlineno="468" tolineno="468" lineno="468">
                <CallFunc fromlineno="468" tolineno="468" lineno="468" func="Getattr(append)">
                  <Getattr fromlineno="468" tolineno="468" lineno="468" attrname="append" expr="curlist">
                    <Name fromlineno="468" tolineno="468" lineno="468" name="curlist"/>
                  </Getattr>
                  <Name fromlineno="468" tolineno="468" lineno="468" name="accum"/>
                </CallFunc>
              </Discard>
              <Assign fromlineno="469" tolineno="469" lineno="469" targets="[&lt;AssName(accum) l.469 [bb] at Ox9351d2c&gt;]" value="''">
                <AssName fromlineno="469" tolineno="469" lineno="469" name="accum"/>
                <Const fromlineno="469" tolineno="469" lineno="469" type="str">''</Const>
              </Assign>
            </If>
            <Discard fromlineno="470" tolineno="470" lineno="470">
              <CallFunc fromlineno="470" tolineno="470" lineno="470" func="Getattr(append)">
                <Getattr fromlineno="470" tolineno="470" lineno="470" attrname="append" expr="prevlists">
                  <Name fromlineno="470" tolineno="470" lineno="470" name="prevlists"/>
                </Getattr>
                <Name fromlineno="470" tolineno="470" lineno="470" name="curlist"/>
              </CallFunc>
            </Discard>
            <Assign fromlineno="471" tolineno="471" lineno="471" targets="[&lt;AssName(curlist) l.471 [bb] at Ox9351e6c&gt;]" value="[]">
              <AssName fromlineno="471" tolineno="471" lineno="471" name="curlist"/>
              <List fromlineno="471" tolineno="471" lineno="471"/>
            </Assign>
            <Assign fromlineno="472" tolineno="472" lineno="472" targets="[&lt;AssName(level) l.472 [bb] at Ox9351f0c&gt;]" value="(level) + (1)">
              <AssName fromlineno="472" tolineno="472" lineno="472" name="level"/>
              <BinOp fromlineno="472" tolineno="472" lineno="472" op="+" left="level" right="1">
                <Name fromlineno="472" tolineno="472" lineno="472" name="level"/>
                <Const fromlineno="472" tolineno="472" lineno="472" type="int">1</Const>
              </BinOp>
            </Assign>
            <If fromlineno="473" tolineno="489" lineno="473">
              <Compare fromlineno="473" tolineno="473" lineno="473" op="('==', &lt;Const(str) l.473 [bb] at Ox935506c&gt;)">
                <Name fromlineno="473" tolineno="473" lineno="473" name="x"/>
                <Const fromlineno="473" tolineno="473" lineno="473" type="str">')'</Const>
              </Compare>
              <If fromlineno="474" tolineno="476" lineno="474">
                <Name fromlineno="474" tolineno="474" lineno="474" name="accum"/>
                <Discard fromlineno="475" tolineno="475" lineno="475">
                  <CallFunc fromlineno="475" tolineno="475" lineno="475" func="Getattr(append)">
                    <Getattr fromlineno="475" tolineno="475" lineno="475" attrname="append" expr="curlist">
                      <Name fromlineno="475" tolineno="475" lineno="475" name="curlist"/>
                    </Getattr>
                    <Name fromlineno="475" tolineno="475" lineno="475" name="accum"/>
                  </CallFunc>
                </Discard>
                <Assign fromlineno="476" tolineno="476" lineno="476" targets="[&lt;AssName(accum) l.476 [bb] at Ox935524c&gt;]" value="''">
                  <AssName fromlineno="476" tolineno="476" lineno="476" name="accum"/>
                  <Const fromlineno="476" tolineno="476" lineno="476" type="str">''</Const>
                </Assign>
              </If>
              <If fromlineno="477" tolineno="479" lineno="477">
                <Compare fromlineno="477" tolineno="477" lineno="477" op="('==', &lt;Const(int) l.477 [bb] at Ox935532c&gt;)">
                  <Name fromlineno="477" tolineno="477" lineno="477" name="level"/>
                  <Const fromlineno="477" tolineno="477" lineno="477" type="int">0</Const>
                </Compare>
                <Print fromlineno="478" tolineno="478" lineno="478">
                  <BinOp fromlineno="478" tolineno="478" lineno="478" op="+" left="(&quot;!!! tokenizer: Unmatched left parenthesis in:\n'&quot;) + (mystring)" right="&quot;'&quot;">
                    <BinOp fromlineno="478" tolineno="478" lineno="478" op="+" left="&quot;!!! tokenizer: Unmatched left parenthesis in:\n'&quot;" right="mystring">
                      <Const fromlineno="478" tolineno="478" lineno="478" type="str">"!!! tokenizer: Unmatched left parenthesis in:\n'"</Const>
                      <Name fromlineno="478" tolineno="478" lineno="478" name="mystring"/>
                    </BinOp>
                    <Const fromlineno="478" tolineno="478" lineno="478" type="str">"'"</Const>
                  </BinOp>
                </Print>
                <Return fromlineno="479" tolineno="479" lineno="479">
                  <Const fromlineno="479" tolineno="479" lineno="479" type="NoneType">None</Const>
                </Return>
              </If>
              <Assign fromlineno="480" tolineno="480" lineno="480" targets="[&lt;AssName(newlist) l.480 [bb] at Ox93554cc&gt;]" value="curlist">
                <AssName fromlineno="480" tolineno="480" lineno="480" name="newlist"/>
                <Name fromlineno="480" tolineno="480" lineno="480" name="curlist"/>
              </Assign>
              <Assign fromlineno="481" tolineno="481" lineno="481" targets="[&lt;AssName(curlist) l.481 [bb] at Ox935556c&gt;]" value="prevlists.pop()">
                <AssName fromlineno="481" tolineno="481" lineno="481" name="curlist"/>
                <CallFunc fromlineno="481" tolineno="481" lineno="481" func="Getattr(pop)">
                  <Getattr fromlineno="481" tolineno="481" lineno="481" attrname="pop" expr="prevlists">
                    <Name fromlineno="481" tolineno="481" lineno="481" name="prevlists"/>
                  </Getattr>
                </CallFunc>
              </Assign>
              <Discard fromlineno="482" tolineno="482" lineno="482">
                <CallFunc fromlineno="482" tolineno="482" lineno="482" func="Getattr(append)">
                  <Getattr fromlineno="482" tolineno="482" lineno="482" attrname="append" expr="curlist">
                    <Name fromlineno="482" tolineno="482" lineno="482" name="curlist"/>
                  </Getattr>
                  <Name fromlineno="482" tolineno="482" lineno="482" name="newlist"/>
                </CallFunc>
              </Discard>
              <Assign fromlineno="483" tolineno="483" lineno="483" targets="[&lt;AssName(level) l.483 [bb] at Ox935570c&gt;]" value="(level) - (1)">
                <AssName fromlineno="483" tolineno="483" lineno="483" name="level"/>
                <BinOp fromlineno="483" tolineno="483" lineno="483" op="-" left="level" right="1">
                  <Name fromlineno="483" tolineno="483" lineno="483" name="level"/>
                  <Const fromlineno="483" tolineno="483" lineno="483" type="int">1</Const>
                </BinOp>
              </Assign>
              <If fromlineno="484" tolineno="489" lineno="484">
                <Compare fromlineno="484" tolineno="484" lineno="484" op="('in', &lt;Name(whitespace) l.484 [bb] at Ox935584c&gt;)">
                  <Name fromlineno="484" tolineno="484" lineno="484" name="x"/>
                  <Name fromlineno="484" tolineno="484" lineno="484" name="whitespace"/>
                </Compare>
                <If fromlineno="485" tolineno="487" lineno="485">
                  <Name fromlineno="485" tolineno="485" lineno="485" name="accum"/>
                  <Discard fromlineno="486" tolineno="486" lineno="486">
                    <CallFunc fromlineno="486" tolineno="486" lineno="486" func="Getattr(append)">
                      <Getattr fromlineno="486" tolineno="486" lineno="486" attrname="append" expr="curlist">
                        <Name fromlineno="486" tolineno="486" lineno="486" name="curlist"/>
                      </Getattr>
                      <Name fromlineno="486" tolineno="486" lineno="486" name="accum"/>
                    </CallFunc>
                  </Discard>
                  <Assign fromlineno="487" tolineno="487" lineno="487" targets="[&lt;AssName(accum) l.487 [bb] at Ox9355a2c&gt;]" value="''">
                    <AssName fromlineno="487" tolineno="487" lineno="487" name="accum"/>
                    <Const fromlineno="487" tolineno="487" lineno="487" type="str">''</Const>
                  </Assign>
                </If>
                <Assign fromlineno="489" tolineno="489" lineno="489" targets="[&lt;AssName(accum) l.489 [bb] at Ox9355acc&gt;]" value="(accum) + (x)">
                  <AssName fromlineno="489" tolineno="489" lineno="489" name="accum"/>
                  <BinOp fromlineno="489" tolineno="489" lineno="489" op="+" left="accum" right="x">
                    <Name fromlineno="489" tolineno="489" lineno="489" name="accum"/>
                    <Name fromlineno="489" tolineno="489" lineno="489" name="x"/>
                  </BinOp>
                </Assign>
              </If>
            </If>
          </If>
        </For>
        <If fromlineno="490" tolineno="491" lineno="490">
          <Name fromlineno="490" tolineno="490" lineno="490" name="accum"/>
          <Discard fromlineno="491" tolineno="491" lineno="491">
            <CallFunc fromlineno="491" tolineno="491" lineno="491" func="Getattr(append)">
              <Getattr fromlineno="491" tolineno="491" lineno="491" attrname="append" expr="curlist">
                <Name fromlineno="491" tolineno="491" lineno="491" name="curlist"/>
              </Getattr>
              <Name fromlineno="491" tolineno="491" lineno="491" name="accum"/>
            </CallFunc>
          </Discard>
        </If>
        <If fromlineno="492" tolineno="494" lineno="492">
          <Compare fromlineno="492" tolineno="492" lineno="492" op="('!=', &lt;Const(int) l.492 [bb] at Ox9355c6c&gt;)">
            <Name fromlineno="492" tolineno="492" lineno="492" name="level"/>
            <Const fromlineno="492" tolineno="492" lineno="492" type="int">0</Const>
          </Compare>
          <Print fromlineno="493" tolineno="493" lineno="493">
            <BinOp fromlineno="493" tolineno="493" lineno="493" op="+" left="(&quot;!!! tokenizer: Exiting with unterminated parenthesis in:\n'&quot;) + (mystring)" right="&quot;'&quot;">
              <BinOp fromlineno="493" tolineno="493" lineno="493" op="+" left="&quot;!!! tokenizer: Exiting with unterminated parenthesis in:\n'&quot;" right="mystring">
                <Const fromlineno="493" tolineno="493" lineno="493" type="str">"!!! tokenizer: Exiting with unterminated parenthesis in:\n'"</Const>
                <Name fromlineno="493" tolineno="493" lineno="493" name="mystring"/>
              </BinOp>
              <Const fromlineno="493" tolineno="493" lineno="493" type="str">"'"</Const>
            </BinOp>
          </Print>
          <Return fromlineno="494" tolineno="494" lineno="494">
            <Const fromlineno="494" tolineno="494" lineno="494" type="NoneType">None</Const>
          </Return>
        </If>
        <Return fromlineno="495" tolineno="495" lineno="495">
          <Name fromlineno="495" tolineno="495" lineno="495" name="newtokens"/>
        </Return>
      </Function>
      <Function fromlineno="500" tolineno="548" lineno="500">
        <Arguments fromlineno="500" tolineno="500" lineno="None" format_args="tokens, mydefines, allon=0">
          <AssName fromlineno="500" tolineno="500" lineno="500" name="tokens"/>
          <AssName fromlineno="500" tolineno="500" lineno="500" name="mydefines"/>
          <AssName fromlineno="500" tolineno="500" lineno="500" name="allon"/>
          <Const fromlineno="500" tolineno="500" lineno="500" type="int">0</Const>
        </Arguments>
        <If fromlineno="523" tolineno="524" lineno="523">
          <Compare fromlineno="523" tolineno="523" lineno="523" op="('==', &lt;Const(NoneType) l.523 [bb] at Ox935902c&gt;)">
            <Name fromlineno="523" tolineno="523" lineno="523" name="tokens"/>
            <Const fromlineno="523" tolineno="523" lineno="523" type="NoneType">None</Const>
          </Compare>
          <Return fromlineno="524" tolineno="524" lineno="524">
            <Const fromlineno="524" tolineno="524" lineno="524" type="NoneType">None</Const>
          </Return>
        </If>
        <Assign fromlineno="525" tolineno="525" lineno="525" targets="[&lt;AssName(mytokens) l.525 [bb] at Ox93590ec&gt;]" value="(tokens) + ([])">
          <AssName fromlineno="525" tolineno="525" lineno="525" name="mytokens"/>
          <BinOp fromlineno="525" tolineno="525" lineno="525" op="+" left="tokens" right="[]">
            <Name fromlineno="525" tolineno="525" lineno="525" name="tokens"/>
            <List fromlineno="525" tolineno="525" lineno="525"/>
          </BinOp>
        </Assign>
        <Assign fromlineno="526" tolineno="526" lineno="526" targets="[&lt;AssName(pos) l.526 [bb] at Ox93591ec&gt;]" value="0">
          <AssName fromlineno="526" tolineno="526" lineno="526" name="pos"/>
          <Const fromlineno="526" tolineno="526" lineno="526" type="int">0</Const>
        </Assign>
        <While fromlineno="527" tolineno="547" lineno="527">
          <Compare fromlineno="527" tolineno="527" lineno="527" op="('&lt;', &lt;CallFunc() l.527 [bb] at Ox93592ec&gt;)">
            <Name fromlineno="527" tolineno="527" lineno="527" name="pos"/>
            <CallFunc fromlineno="527" tolineno="527" lineno="527" func="Name(len)">
              <Name fromlineno="527" tolineno="527" lineno="527" name="len"/>
              <Name fromlineno="527" tolineno="527" lineno="527" name="mytokens"/>
            </CallFunc>
          </Compare>
          <If fromlineno="528" tolineno="546" lineno="528">
            <Compare fromlineno="528" tolineno="528" lineno="528" op="('==', &lt;Getattr(ListType) l.528 [bb] at Ox93594ec&gt;)">
              <CallFunc fromlineno="528" tolineno="528" lineno="528" func="Name(type)">
                <Name fromlineno="528" tolineno="528" lineno="528" name="type"/>
                <Subscript fromlineno="528" tolineno="528" lineno="528">
                  <Name fromlineno="528" tolineno="528" lineno="528" name="mytokens"/>
                  <Index fromlineno="528" tolineno="528" lineno="None">
                    <Name fromlineno="528" tolineno="528" lineno="528" name="pos"/>
                  </Index>
                </Subscript>
              </CallFunc>
              <Getattr fromlineno="528" tolineno="528" lineno="528" attrname="ListType" expr="types">
                <Name fromlineno="528" tolineno="528" lineno="528" name="types"/>
              </Getattr>
            </Compare>
            <Discard fromlineno="529" tolineno="529" lineno="529">
              <CallFunc fromlineno="529" tolineno="529" lineno="529" func="Name(evaluate)">
                <Name fromlineno="529" tolineno="529" lineno="529" name="evaluate"/>
                <Subscript fromlineno="529" tolineno="529" lineno="529">
                  <Name fromlineno="529" tolineno="529" lineno="529" name="mytokens"/>
                  <Index fromlineno="529" tolineno="529" lineno="None">
                    <Name fromlineno="529" tolineno="529" lineno="529" name="pos"/>
                  </Index>
                </Subscript>
                <Name fromlineno="529" tolineno="529" lineno="529" name="mydefines"/>
              </CallFunc>
            </Discard>
            <If fromlineno="530" tolineno="532" lineno="530">
              <UnaryOp fromlineno="530" tolineno="530" lineno="530">
                <CallFunc fromlineno="530" tolineno="530" lineno="530" func="Name(len)">
                  <Name fromlineno="530" tolineno="530" lineno="530" name="len"/>
                  <Subscript fromlineno="530" tolineno="530" lineno="530">
                    <Name fromlineno="530" tolineno="530" lineno="530" name="mytokens"/>
                    <Index fromlineno="530" tolineno="530" lineno="None">
                      <Name fromlineno="530" tolineno="530" lineno="530" name="pos"/>
                    </Index>
                  </Subscript>
                </CallFunc>
              </UnaryOp>
              <Delete fromlineno="531" tolineno="531" lineno="531">
                <Subscript fromlineno="531" tolineno="531" lineno="531">
                  <Name fromlineno="531" tolineno="531" lineno="531" name="mytokens"/>
                  <Index fromlineno="531" tolineno="531" lineno="None">
                    <Name fromlineno="531" tolineno="531" lineno="531" name="pos"/>
                  </Index>
                </Subscript>
              </Delete>
              <Continue fromlineno="532" tolineno="532" lineno="532"/>
            </If>
            <If fromlineno="533" tolineno="546" lineno="533">
              <Compare fromlineno="533" tolineno="533" lineno="533" op="('==', &lt;Const(str) l.533 [bb] at Ox9359a4c&gt;)">
                <Subscript fromlineno="533" tolineno="533" lineno="533">
                  <Subscript fromlineno="533" tolineno="533" lineno="533">
                    <Name fromlineno="533" tolineno="533" lineno="533" name="mytokens"/>
                    <Index fromlineno="533" tolineno="533" lineno="None">
                      <Name fromlineno="533" tolineno="533" lineno="533" name="pos"/>
                    </Index>
                  </Subscript>
                  <Index fromlineno="533" tolineno="533" lineno="None">
                    <Const fromlineno="533" tolineno="533" lineno="533" type="int">-1</Const>
                  </Index>
                </Subscript>
                <Const fromlineno="533" tolineno="533" lineno="533" type="str">'?'</Const>
              </Compare>
              <Assign fromlineno="534" tolineno="534" lineno="534" targets="[&lt;AssName(cur) l.534 [bb] at Ox9359acc&gt;]" value="mytokens[pos][:-1]">
                <AssName fromlineno="534" tolineno="534" lineno="534" name="cur"/>
                <Subscript fromlineno="534" tolineno="534" lineno="534">
                  <Subscript fromlineno="534" tolineno="534" lineno="534">
                    <Name fromlineno="534" tolineno="534" lineno="534" name="mytokens"/>
                    <Index fromlineno="534" tolineno="534" lineno="None">
                      <Name fromlineno="534" tolineno="534" lineno="534" name="pos"/>
                    </Index>
                  </Subscript>
                  <Slice fromlineno="534" tolineno="534" lineno="None">
                    <Const fromlineno="534" tolineno="534" lineno="534" type="int">-1</Const>
                  </Slice>
                </Subscript>
              </Assign>
              <Delete fromlineno="535" tolineno="535" lineno="535">
                <Subscript fromlineno="535" tolineno="535" lineno="535">
                  <Name fromlineno="535" tolineno="535" lineno="535" name="mytokens"/>
                  <Index fromlineno="535" tolineno="535" lineno="None">
                    <Name fromlineno="535" tolineno="535" lineno="535" name="pos"/>
                  </Index>
                </Subscript>
              </Delete>
              <If fromlineno="536" tolineno="546" lineno="536">
                <Name fromlineno="536" tolineno="536" lineno="536" name="allon"/>
                <If fromlineno="537" tolineno="538" lineno="537">
                  <Compare fromlineno="537" tolineno="537" lineno="537" op="('==', &lt;Const(str) l.537 [bb] at Ox9359e6c&gt;)">
                    <Subscript fromlineno="537" tolineno="537" lineno="537">
                      <Name fromlineno="537" tolineno="537" lineno="537" name="cur"/>
                      <Index fromlineno="537" tolineno="537" lineno="None">
                        <Const fromlineno="537" tolineno="537" lineno="537" type="int">0</Const>
                      </Index>
                    </Subscript>
                    <Const fromlineno="537" tolineno="537" lineno="537" type="str">'!'</Const>
                  </Compare>
                  <Delete fromlineno="538" tolineno="538" lineno="538">
                    <Subscript fromlineno="538" tolineno="538" lineno="538">
                      <Name fromlineno="538" tolineno="538" lineno="538" name="mytokens"/>
                      <Index fromlineno="538" tolineno="538" lineno="None">
                        <Name fromlineno="538" tolineno="538" lineno="538" name="pos"/>
                      </Index>
                    </Subscript>
                  </Delete>
                </If>
                <If fromlineno="540" tolineno="546" lineno="540">
                  <Compare fromlineno="540" tolineno="540" lineno="540" op="('==', &lt;Const(str) l.540 [bb] at Ox935e0ac&gt;)">
                    <Subscript fromlineno="540" tolineno="540" lineno="540">
                      <Name fromlineno="540" tolineno="540" lineno="540" name="cur"/>
                      <Index fromlineno="540" tolineno="540" lineno="None">
                        <Const fromlineno="540" tolineno="540" lineno="540" type="int">0</Const>
                      </Index>
                    </Subscript>
                    <Const fromlineno="540" tolineno="540" lineno="540" type="str">'!'</Const>
                  </Compare>
                  <If fromlineno="541" tolineno="543" lineno="541">
                    <BoolOp fromlineno="541" tolineno="541" lineno="541" op="and" values="cur[1:] in mydefines,pos &lt; len(mytokens),">
                      <Compare fromlineno="541" tolineno="541" lineno="541" op="('in', &lt;Name(mydefines) l.541 [bb] at Ox935e26c&gt;)">
                        <Subscript fromlineno="541" tolineno="541" lineno="541">
                          <Name fromlineno="541" tolineno="541" lineno="541" name="cur"/>
                          <Slice fromlineno="541" tolineno="541" lineno="None">
                            <Const fromlineno="541" tolineno="541" lineno="541" type="int">1</Const>
                          </Slice>
                        </Subscript>
                        <Name fromlineno="541" tolineno="541" lineno="541" name="mydefines"/>
                      </Compare>
                      <Compare fromlineno="541" tolineno="541" lineno="541" op="('&lt;', &lt;CallFunc() l.541 [bb] at Ox935e2ec&gt;)">
                        <Name fromlineno="541" tolineno="541" lineno="541" name="pos"/>
                        <CallFunc fromlineno="541" tolineno="541" lineno="541" func="Name(len)">
                          <Name fromlineno="541" tolineno="541" lineno="541" name="len"/>
                          <Name fromlineno="541" tolineno="541" lineno="541" name="mytokens"/>
                        </CallFunc>
                      </Compare>
                    </BoolOp>
                    <Delete fromlineno="542" tolineno="542" lineno="542">
                      <Subscript fromlineno="542" tolineno="542" lineno="542">
                        <Name fromlineno="542" tolineno="542" lineno="542" name="mytokens"/>
                        <Index fromlineno="542" tolineno="542" lineno="None">
                          <Name fromlineno="542" tolineno="542" lineno="542" name="pos"/>
                        </Index>
                      </Subscript>
                    </Delete>
                    <Continue fromlineno="543" tolineno="543" lineno="543"/>
                  </If>
                  <If fromlineno="544" tolineno="546" lineno="544">
                    <BoolOp fromlineno="544" tolineno="544" lineno="544" op="and" values="cur not in mydefines,pos &lt; len(mytokens),">
                      <Compare fromlineno="544" tolineno="544" lineno="544" op="('not in', &lt;Name(mydefines) l.544 [bb] at Ox935e56c&gt;)">
                        <Name fromlineno="544" tolineno="544" lineno="544" name="cur"/>
                        <Name fromlineno="544" tolineno="544" lineno="544" name="mydefines"/>
                      </Compare>
                      <Compare fromlineno="544" tolineno="544" lineno="544" op="('&lt;', &lt;CallFunc() l.544 [bb] at Ox935e5ec&gt;)">
                        <Name fromlineno="544" tolineno="544" lineno="544" name="pos"/>
                        <CallFunc fromlineno="544" tolineno="544" lineno="544" func="Name(len)">
                          <Name fromlineno="544" tolineno="544" lineno="544" name="len"/>
                          <Name fromlineno="544" tolineno="544" lineno="544" name="mytokens"/>
                        </CallFunc>
                      </Compare>
                    </BoolOp>
                    <Delete fromlineno="545" tolineno="545" lineno="545">
                      <Subscript fromlineno="545" tolineno="545" lineno="545">
                        <Name fromlineno="545" tolineno="545" lineno="545" name="mytokens"/>
                        <Index fromlineno="545" tolineno="545" lineno="None">
                          <Name fromlineno="545" tolineno="545" lineno="545" name="pos"/>
                        </Index>
                      </Subscript>
                    </Delete>
                    <Continue fromlineno="546" tolineno="546" lineno="546"/>
                  </If>
                </If>
              </If>
            </If>
          </If>
          <Assign fromlineno="547" tolineno="547" lineno="547" targets="[&lt;AssName(pos) l.547 [bb] at Ox9359cac&gt;]" value="(pos) + (1)">
            <AssName fromlineno="547" tolineno="547" lineno="547" name="pos"/>
            <BinOp fromlineno="547" tolineno="547" lineno="547" op="+" left="pos" right="1">
              <Name fromlineno="547" tolineno="547" lineno="547" name="pos"/>
              <Const fromlineno="547" tolineno="547" lineno="547" type="int">1</Const>
            </BinOp>
          </Assign>
        </While>
        <Return fromlineno="548" tolineno="548" lineno="548">
          <Name fromlineno="548" tolineno="548" lineno="548" name="mytokens"/>
        </Return>
      </Function>
      <Function fromlineno="553" tolineno="568" lineno="553">
        <Arguments fromlineno="553" tolineno="553" lineno="None" format_args="mytokens">
          <AssName fromlineno="553" tolineno="553" lineno="553" name="mytokens"/>
        </Arguments>
        <Assign fromlineno="562" tolineno="562" lineno="562" targets="[&lt;AssName(newlist) l.562 [bb] at Ox935e86c&gt;]" value="[]">
          <AssName fromlineno="562" tolineno="562" lineno="562" name="newlist"/>
          <List fromlineno="562" tolineno="562" lineno="562"/>
        </Assign>
        <For fromlineno="563" tolineno="567" lineno="563">
          <AssName fromlineno="563" tolineno="563" lineno="563" name="x"/>
          <Name fromlineno="563" tolineno="563" lineno="563" name="mytokens"/>
          <If fromlineno="564" tolineno="567" lineno="564">
            <Compare fromlineno="564" tolineno="564" lineno="564" op="('==', &lt;Getattr(ListType) l.564 [bb] at Ox935eaac&gt;)">
              <CallFunc fromlineno="564" tolineno="564" lineno="564" func="Name(type)">
                <Name fromlineno="564" tolineno="564" lineno="564" name="type"/>
                <Name fromlineno="564" tolineno="564" lineno="564" name="x"/>
              </CallFunc>
              <Getattr fromlineno="564" tolineno="564" lineno="564" attrname="ListType" expr="types">
                <Name fromlineno="564" tolineno="564" lineno="564" name="types"/>
              </Getattr>
            </Compare>
            <Discard fromlineno="565" tolineno="565" lineno="565">
              <CallFunc fromlineno="565" tolineno="565" lineno="565" func="Getattr(extend)">
                <Getattr fromlineno="565" tolineno="565" lineno="565" attrname="extend" expr="newlist">
                  <Name fromlineno="565" tolineno="565" lineno="565" name="newlist"/>
                </Getattr>
                <CallFunc fromlineno="565" tolineno="565" lineno="565" func="Name(flatten)">
                  <Name fromlineno="565" tolineno="565" lineno="565" name="flatten"/>
                  <Name fromlineno="565" tolineno="565" lineno="565" name="x"/>
                </CallFunc>
              </CallFunc>
            </Discard>
            <Discard fromlineno="567" tolineno="567" lineno="567">
              <CallFunc fromlineno="567" tolineno="567" lineno="567" func="Getattr(append)">
                <Getattr fromlineno="567" tolineno="567" lineno="567" attrname="append" expr="newlist">
                  <Name fromlineno="567" tolineno="567" lineno="567" name="newlist"/>
                </Getattr>
                <Name fromlineno="567" tolineno="567" lineno="567" name="x"/>
              </CallFunc>
            </Discard>
          </If>
        </For>
        <Return fromlineno="568" tolineno="568" lineno="568">
          <Name fromlineno="568" tolineno="568" lineno="568" name="newlist"/>
        </Return>
      </Function>
      <Assign fromlineno="573" tolineno="573" lineno="573" targets="[&lt;AssName(_package_weights_) l.573 [bb] at Ox935ed4c&gt;]" value="{'pre': -2, 'p': 0, 'alpha': -4, 'beta': -3, 'rc': -1}">
        <AssName fromlineno="573" tolineno="573" lineno="573" name="_package_weights_"/>
        <Dict fromlineno="573" tolineno="573" lineno="573">
          <Const fromlineno="573" tolineno="573" lineno="573" type="str">'pre'</Const>
          <Const fromlineno="573" tolineno="573" lineno="573" type="int">-2</Const>
          <Const fromlineno="573" tolineno="573" lineno="573" type="str">'p'</Const>
          <Const fromlineno="573" tolineno="573" lineno="573" type="int">0</Const>
          <Const fromlineno="573" tolineno="573" lineno="573" type="str">'alpha'</Const>
          <Const fromlineno="573" tolineno="573" lineno="573" type="int">-4</Const>
          <Const fromlineno="573" tolineno="573" lineno="573" type="str">'beta'</Const>
          <Const fromlineno="573" tolineno="573" lineno="573" type="int">-3</Const>
          <Const fromlineno="573" tolineno="573" lineno="573" type="str">'rc'</Const>
          <Const fromlineno="573" tolineno="573" lineno="573" type="int">-1</Const>
        </Dict>
      </Assign>
      <Assign fromlineno="574" tolineno="574" lineno="574" targets="[&lt;AssName(_package_ends_) l.574 [bb] at Ox935ef4c&gt;]" value="['pre', 'p', 'alpha', 'beta', 'rc', 'cvs', 'bk', 'HEAD']">
        <AssName fromlineno="574" tolineno="574" lineno="574" name="_package_ends_"/>
        <List fromlineno="574" tolineno="574" lineno="574">
          <Const fromlineno="574" tolineno="574" lineno="574" type="str">'pre'</Const>
          <Const fromlineno="574" tolineno="574" lineno="574" type="str">'p'</Const>
          <Const fromlineno="574" tolineno="574" lineno="574" type="str">'alpha'</Const>
          <Const fromlineno="574" tolineno="574" lineno="574" type="str">'beta'</Const>
          <Const fromlineno="574" tolineno="574" lineno="574" type="str">'rc'</Const>
          <Const fromlineno="574" tolineno="574" lineno="574" type="str">'cvs'</Const>
          <Const fromlineno="574" tolineno="574" lineno="574" type="str">'bk'</Const>
          <Const fromlineno="574" tolineno="574" lineno="574" type="str">'HEAD'</Const>
        </List>
      </Assign>
      <Function fromlineno="576" tolineno="624" lineno="576">
        <Arguments fromlineno="576" tolineno="576" lineno="None" format_args="myver">
          <AssName fromlineno="576" tolineno="576" lineno="576" name="myver"/>
        </Arguments>
        <Assign fromlineno="588" tolineno="588" lineno="588" targets="[&lt;AssName(number) l.588 [bb] at Ox936120c&gt;]" value="0">
          <AssName fromlineno="588" tolineno="588" lineno="588" name="number"/>
          <Const fromlineno="588" tolineno="588" lineno="588" type="int">0</Const>
        </Assign>
        <Assign fromlineno="589" tolineno="589" lineno="589" targets="[&lt;AssName(p1) l.589 [bb] at Ox93612ac&gt;]" value="0">
          <AssName fromlineno="589" tolineno="589" lineno="589" name="p1"/>
          <Const fromlineno="589" tolineno="589" lineno="589" type="int">0</Const>
        </Assign>
        <Assign fromlineno="590" tolineno="590" lineno="590" targets="[&lt;AssName(p2) l.590 [bb] at Ox936134c&gt;]" value="0">
          <AssName fromlineno="590" tolineno="590" lineno="590" name="p2"/>
          <Const fromlineno="590" tolineno="590" lineno="590" type="int">0</Const>
        </Assign>
        <Assign fromlineno="591" tolineno="591" lineno="591" targets="[&lt;AssName(mynewver) l.591 [bb] at Ox93613ec&gt;]" value="myver.split('_')">
          <AssName fromlineno="591" tolineno="591" lineno="591" name="mynewver"/>
          <CallFunc fromlineno="591" tolineno="591" lineno="591" func="Getattr(split)">
            <Getattr fromlineno="591" tolineno="591" lineno="591" attrname="split" expr="myver">
              <Name fromlineno="591" tolineno="591" lineno="591" name="myver"/>
            </Getattr>
            <Const fromlineno="591" tolineno="591" lineno="591" type="str">'_'</Const>
          </CallFunc>
        </Assign>
        <If fromlineno="592" tolineno="623" lineno="592">
          <Compare fromlineno="592" tolineno="592" lineno="592" op="('==', &lt;Const(int) l.592 [bb] at Ox93615cc&gt;)">
            <CallFunc fromlineno="592" tolineno="592" lineno="592" func="Name(len)">
              <Name fromlineno="592" tolineno="592" lineno="592" name="len"/>
              <Name fromlineno="592" tolineno="592" lineno="592" name="mynewver"/>
            </CallFunc>
            <Const fromlineno="592" tolineno="592" lineno="592" type="int">2</Const>
          </Compare>
          <Assign fromlineno="594" tolineno="594" lineno="594" targets="[&lt;AssName(number) l.594 [bb] at Ox936164c&gt;]" value="float(mynewver[0])">
            <AssName fromlineno="594" tolineno="594" lineno="594" name="number"/>
            <CallFunc fromlineno="594" tolineno="594" lineno="594" func="Name(float)">
              <Name fromlineno="594" tolineno="594" lineno="594" name="float"/>
              <Subscript fromlineno="594" tolineno="594" lineno="594">
                <Name fromlineno="594" tolineno="594" lineno="594" name="mynewver"/>
                <Index fromlineno="594" tolineno="594" lineno="None">
                  <Const fromlineno="594" tolineno="594" lineno="594" type="int">0</Const>
                </Index>
              </Subscript>
            </CallFunc>
          </Assign>
          <Assign fromlineno="595" tolineno="595" lineno="595" targets="[&lt;AssName(match) l.595 [bb] at Ox936178c&gt;]" value="0">
            <AssName fromlineno="595" tolineno="595" lineno="595" name="match"/>
            <Const fromlineno="595" tolineno="595" lineno="595" type="int">0</Const>
          </Assign>
          <For fromlineno="596" tolineno="605" lineno="596">
            <AssName fromlineno="596" tolineno="596" lineno="596" name="x"/>
            <Name fromlineno="596" tolineno="596" lineno="596" name="_package_ends_"/>
            <Assign fromlineno="597" tolineno="597" lineno="597" targets="[&lt;AssName(elen) l.597 [bb] at Ox93618ec&gt;]" value="len(x)">
              <AssName fromlineno="597" tolineno="597" lineno="597" name="elen"/>
              <CallFunc fromlineno="597" tolineno="597" lineno="597" func="Name(len)">
                <Name fromlineno="597" tolineno="597" lineno="597" name="len"/>
                <Name fromlineno="597" tolineno="597" lineno="597" name="x"/>
              </CallFunc>
            </Assign>
            <If fromlineno="598" tolineno="605" lineno="598">
              <Compare fromlineno="598" tolineno="598" lineno="598" op="('==', &lt;Name(x) l.598 [bb] at Ox9361b2c&gt;)">
                <Subscript fromlineno="598" tolineno="598" lineno="598">
                  <Subscript fromlineno="598" tolineno="598" lineno="598">
                    <Name fromlineno="598" tolineno="598" lineno="598" name="mynewver"/>
                    <Index fromlineno="598" tolineno="598" lineno="None">
                      <Const fromlineno="598" tolineno="598" lineno="598" type="int">1</Const>
                    </Index>
                  </Subscript>
                  <Slice fromlineno="598" tolineno="598" lineno="None">
                    <Name fromlineno="598" tolineno="598" lineno="598" name="elen"/>
                  </Slice>
                </Subscript>
                <Name fromlineno="598" tolineno="598" lineno="598" name="x"/>
              </Compare>
              <Assign fromlineno="599" tolineno="599" lineno="599" targets="[&lt;AssName(match) l.599 [bb] at Ox9361bac&gt;]" value="1">
                <AssName fromlineno="599" tolineno="599" lineno="599" name="match"/>
                <Const fromlineno="599" tolineno="599" lineno="599" type="int">1</Const>
              </Assign>
              <Assign fromlineno="600" tolineno="600" lineno="600" targets="[&lt;AssName(p1) l.600 [bb] at Ox9361c2c&gt;]" value="_package_weights_[x]">
                <AssName fromlineno="600" tolineno="600" lineno="600" name="p1"/>
                <Subscript fromlineno="600" tolineno="600" lineno="600">
                  <Name fromlineno="600" tolineno="600" lineno="600" name="_package_weights_"/>
                  <Index fromlineno="600" tolineno="600" lineno="None">
                    <Name fromlineno="600" tolineno="600" lineno="600" name="x"/>
                  </Index>
                </Subscript>
              </Assign>
              <TryExcept fromlineno="601" tolineno="604" lineno="601">
                <Assign fromlineno="602" tolineno="602" lineno="602" targets="[&lt;AssName(p2) l.602 [bb] at Ox9361d6c&gt;]" value="float(mynewver[1][elen:])">
                  <AssName fromlineno="602" tolineno="602" lineno="602" name="p2"/>
                  <CallFunc fromlineno="602" tolineno="602" lineno="602" func="Name(float)">
                    <Name fromlineno="602" tolineno="602" lineno="602" name="float"/>
                    <Subscript fromlineno="602" tolineno="602" lineno="602">
                      <Subscript fromlineno="602" tolineno="602" lineno="602">
                        <Name fromlineno="602" tolineno="602" lineno="602" name="mynewver"/>
                        <Index fromlineno="602" tolineno="602" lineno="None">
                          <Const fromlineno="602" tolineno="602" lineno="602" type="int">1</Const>
                        </Index>
                      </Subscript>
                      <Slice fromlineno="602" tolineno="602" lineno="None">
                        <Name fromlineno="602" tolineno="602" lineno="602" name="elen"/>
                      </Slice>
                    </Subscript>
                  </CallFunc>
                </Assign>
                <ExceptHandler fromlineno="603" tolineno="604" lineno="603">
                  <Assign fromlineno="604" tolineno="604" lineno="604" targets="[&lt;AssName(p2) l.604 [bb] at Ox9361f8c&gt;]" value="0">
                    <AssName fromlineno="604" tolineno="604" lineno="604" name="p2"/>
                    <Const fromlineno="604" tolineno="604" lineno="604" type="int">0</Const>
                  </Assign>
                </ExceptHandler>
              </TryExcept>
              <Break fromlineno="605" tolineno="605" lineno="605"/>
            </If>
          </For>
          <If fromlineno="606" tolineno="614" lineno="606">
            <UnaryOp fromlineno="606" tolineno="606" lineno="606">
              <Name fromlineno="606" tolineno="606" lineno="606" name="match"/>
            </UnaryOp>
            <Assign fromlineno="608" tolineno="608" lineno="608" targets="[&lt;AssName(divider) l.608 [bb] at Ox93660cc&gt;]" value="(len(myver)) - (1)">
              <AssName fromlineno="608" tolineno="608" lineno="608" name="divider"/>
              <BinOp fromlineno="608" tolineno="608" lineno="608" op="-" left="len(myver)" right="1">
                <CallFunc fromlineno="608" tolineno="608" lineno="608" func="Name(len)">
                  <Name fromlineno="608" tolineno="608" lineno="608" name="len"/>
                  <Name fromlineno="608" tolineno="608" lineno="608" name="myver"/>
                </CallFunc>
                <Const fromlineno="608" tolineno="608" lineno="608" type="int">1</Const>
              </BinOp>
            </Assign>
            <If fromlineno="609" tolineno="614" lineno="609">
              <Compare fromlineno="609" tolineno="609" lineno="609" op="('not in', &lt;Const(str) l.609 [bb] at Ox93662ec&gt;)">
                <Subscript fromlineno="609" tolineno="609" lineno="609">
                  <Name fromlineno="609" tolineno="609" lineno="609" name="myver"/>
                  <Slice fromlineno="609" tolineno="609" lineno="None">
                    <Name fromlineno="609" tolineno="609" lineno="609" name="divider"/>
                  </Slice>
                </Subscript>
                <Const fromlineno="609" tolineno="609" lineno="609" type="str">'1234567890'</Const>
              </Compare>
              <Assign fromlineno="611" tolineno="611" lineno="611" targets="[&lt;AssName(p1) l.611 [bb] at Ox936636c&gt;]" value="ord(myver[divider:])">
                <AssName fromlineno="611" tolineno="611" lineno="611" name="p1"/>
                <CallFunc fromlineno="611" tolineno="611" lineno="611" func="Name(ord)">
                  <Name fromlineno="611" tolineno="611" lineno="611" name="ord"/>
                  <Subscript fromlineno="611" tolineno="611" lineno="611">
                    <Name fromlineno="611" tolineno="611" lineno="611" name="myver"/>
                    <Slice fromlineno="611" tolineno="611" lineno="None">
                      <Name fromlineno="611" tolineno="611" lineno="611" name="divider"/>
                    </Slice>
                  </Subscript>
                </CallFunc>
              </Assign>
              <Assign fromlineno="612" tolineno="612" lineno="612" targets="[&lt;AssName(number) l.612 [bb] at Ox93664ac&gt;]" value="float(myver[0:divider])">
                <AssName fromlineno="612" tolineno="612" lineno="612" name="number"/>
                <CallFunc fromlineno="612" tolineno="612" lineno="612" func="Name(float)">
                  <Name fromlineno="612" tolineno="612" lineno="612" name="float"/>
                  <Subscript fromlineno="612" tolineno="612" lineno="612">
                    <Name fromlineno="612" tolineno="612" lineno="612" name="myver"/>
                    <Slice fromlineno="612" tolineno="612" lineno="None">
                      <Const fromlineno="612" tolineno="612" lineno="612" type="int">0</Const>
                      <Name fromlineno="612" tolineno="612" lineno="612" name="divider"/>
                    </Slice>
                  </Subscript>
                </CallFunc>
              </Assign>
              <Assign fromlineno="614" tolineno="614" lineno="614" targets="[&lt;AssName(number) l.614 [bb] at Ox936662c&gt;]" value="float(myver)">
                <AssName fromlineno="614" tolineno="614" lineno="614" name="number"/>
                <CallFunc fromlineno="614" tolineno="614" lineno="614" func="Name(float)">
                  <Name fromlineno="614" tolineno="614" lineno="614" name="float"/>
                  <Name fromlineno="614" tolineno="614" lineno="614" name="myver"/>
                </CallFunc>
              </Assign>
            </If>
          </If>
          <Assign fromlineno="617" tolineno="617" lineno="617" targets="[&lt;AssName(divider) l.617 [bb] at Ox93666ec&gt;]" value="(len(myver)) - (1)">
            <AssName fromlineno="617" tolineno="617" lineno="617" name="divider"/>
            <BinOp fromlineno="617" tolineno="617" lineno="617" op="-" left="len(myver)" right="1">
              <CallFunc fromlineno="617" tolineno="617" lineno="617" func="Name(len)">
                <Name fromlineno="617" tolineno="617" lineno="617" name="len"/>
                <Name fromlineno="617" tolineno="617" lineno="617" name="myver"/>
              </CallFunc>
              <Const fromlineno="617" tolineno="617" lineno="617" type="int">1</Const>
            </BinOp>
          </Assign>
          <If fromlineno="618" tolineno="623" lineno="618">
            <Compare fromlineno="618" tolineno="618" lineno="618" op="('not in', &lt;Const(str) l.618 [bb] at Ox93668cc&gt;)">
              <Subscript fromlineno="618" tolineno="618" lineno="618">
                <Name fromlineno="618" tolineno="618" lineno="618" name="myver"/>
                <Slice fromlineno="618" tolineno="618" lineno="None">
                  <Name fromlineno="618" tolineno="618" lineno="618" name="divider"/>
                </Slice>
              </Subscript>
              <Const fromlineno="618" tolineno="618" lineno="618" type="str">'1234567890'</Const>
            </Compare>
            <Assign fromlineno="620" tolineno="620" lineno="620" targets="[&lt;AssName(p1) l.620 [bb] at Ox936694c&gt;]" value="ord(myver[divider:])">
              <AssName fromlineno="620" tolineno="620" lineno="620" name="p1"/>
              <CallFunc fromlineno="620" tolineno="620" lineno="620" func="Name(ord)">
                <Name fromlineno="620" tolineno="620" lineno="620" name="ord"/>
                <Subscript fromlineno="620" tolineno="620" lineno="620">
                  <Name fromlineno="620" tolineno="620" lineno="620" name="myver"/>
                  <Slice fromlineno="620" tolineno="620" lineno="None">
                    <Name fromlineno="620" tolineno="620" lineno="620" name="divider"/>
                  </Slice>
                </Subscript>
              </CallFunc>
            </Assign>
            <Assign fromlineno="621" tolineno="621" lineno="621" targets="[&lt;AssName(number) l.621 [bb] at Ox9366a8c&gt;]" value="float(myver[0:divider])">
              <AssName fromlineno="621" tolineno="621" lineno="621" name="number"/>
              <CallFunc fromlineno="621" tolineno="621" lineno="621" func="Name(float)">
                <Name fromlineno="621" tolineno="621" lineno="621" name="float"/>
                <Subscript fromlineno="621" tolineno="621" lineno="621">
                  <Name fromlineno="621" tolineno="621" lineno="621" name="myver"/>
                  <Slice fromlineno="621" tolineno="621" lineno="None">
                    <Const fromlineno="621" tolineno="621" lineno="621" type="int">0</Const>
                    <Name fromlineno="621" tolineno="621" lineno="621" name="divider"/>
                  </Slice>
                </Subscript>
              </CallFunc>
            </Assign>
            <Assign fromlineno="623" tolineno="623" lineno="623" targets="[&lt;AssName(number) l.623 [bb] at Ox9366c0c&gt;]" value="float(myver)">
              <AssName fromlineno="623" tolineno="623" lineno="623" name="number"/>
              <CallFunc fromlineno="623" tolineno="623" lineno="623" func="Name(float)">
                <Name fromlineno="623" tolineno="623" lineno="623" name="float"/>
                <Name fromlineno="623" tolineno="623" lineno="623" name="myver"/>
              </CallFunc>
            </Assign>
          </If>
        </If>
        <Return fromlineno="624" tolineno="624" lineno="624">
          <List fromlineno="624" tolineno="624" lineno="624">
            <Name fromlineno="624" tolineno="624" lineno="624" name="number"/>
            <Name fromlineno="624" tolineno="624" lineno="624" name="p1"/>
            <Name fromlineno="624" tolineno="624" lineno="624" name="p2"/>
          </List>
        </Return>
      </Function>
      <Assign fromlineno="629" tolineno="629" lineno="629" targets="[&lt;AssName(__ververify_cache__) l.629 [bb] at Ox9366d2c&gt;]" value="{}">
        <AssName fromlineno="629" tolineno="629" lineno="629" name="__ververify_cache__"/>
        <Dict fromlineno="629" tolineno="629" lineno="629"/>
      </Assign>
      <Function fromlineno="631" tolineno="743" lineno="631">
        <Arguments fromlineno="631" tolineno="631" lineno="None" format_args="myorigval, silent=1">
          <AssName fromlineno="631" tolineno="631" lineno="631" name="myorigval"/>
          <AssName fromlineno="631" tolineno="631" lineno="631" name="silent"/>
          <Const fromlineno="631" tolineno="631" lineno="631" type="int">1</Const>
        </Arguments>
        <TryExcept fromlineno="659" tolineno="662" lineno="659">
          <Return fromlineno="660" tolineno="660" lineno="660">
            <Subscript fromlineno="660" tolineno="660" lineno="660">
              <Name fromlineno="660" tolineno="660" lineno="660" name="__ververify_cache__"/>
              <Index fromlineno="660" tolineno="660" lineno="None">
                <Name fromlineno="660" tolineno="660" lineno="660" name="myorigval"/>
              </Index>
            </Subscript>
          </Return>
          <ExceptHandler fromlineno="661" tolineno="662" lineno="661">
            <Name fromlineno="661" tolineno="661" lineno="661" name="KeyError"/>
            <Pass fromlineno="662" tolineno="662" lineno="662"/>
          </ExceptHandler>
        </TryExcept>
        <If fromlineno="664" tolineno="668" lineno="664">
          <Compare fromlineno="664" tolineno="664" lineno="664" op="('==', &lt;Const(int) l.664 [bb] at Ox936a1ac&gt;)">
            <CallFunc fromlineno="664" tolineno="664" lineno="664" func="Name(len)">
              <Name fromlineno="664" tolineno="664" lineno="664" name="len"/>
              <Name fromlineno="664" tolineno="664" lineno="664" name="myorigval"/>
            </CallFunc>
            <Const fromlineno="664" tolineno="664" lineno="664" type="int">0</Const>
          </Compare>
          <If fromlineno="665" tolineno="666" lineno="665">
            <UnaryOp fromlineno="665" tolineno="665" lineno="665">
              <Name fromlineno="665" tolineno="665" lineno="665" name="silent"/>
            </UnaryOp>
            <Discard fromlineno="666" tolineno="666" lineno="666">
              <CallFunc fromlineno="666" tolineno="666" lineno="666" func="Name(error)">
                <Name fromlineno="666" tolineno="666" lineno="666" name="error"/>
                <Const fromlineno="666" tolineno="666" lineno="666" type="str">'package version is empty'</Const>
              </CallFunc>
            </Discard>
          </If>
          <Assign fromlineno="667" tolineno="667" lineno="667" targets="[&lt;Subscript() l.667 [bb] at Ox936a38c&gt;]" value="0">
            <Subscript fromlineno="667" tolineno="667" lineno="667">
              <Name fromlineno="667" tolineno="667" lineno="667" name="__ververify_cache__"/>
              <Index fromlineno="667" tolineno="667" lineno="None">
                <Name fromlineno="667" tolineno="667" lineno="667" name="myorigval"/>
              </Index>
            </Subscript>
            <Const fromlineno="667" tolineno="667" lineno="667" type="int">0</Const>
          </Assign>
          <Return fromlineno="668" tolineno="668" lineno="668">
            <Const fromlineno="668" tolineno="668" lineno="668" type="int">0</Const>
          </Return>
        </If>
        <Assign fromlineno="669" tolineno="669" lineno="669" targets="[&lt;AssName(myval) l.669 [bb] at Ox936a48c&gt;]" value="myorigval.split('.')">
          <AssName fromlineno="669" tolineno="669" lineno="669" name="myval"/>
          <CallFunc fromlineno="669" tolineno="669" lineno="669" func="Getattr(split)">
            <Getattr fromlineno="669" tolineno="669" lineno="669" attrname="split" expr="myorigval">
              <Name fromlineno="669" tolineno="669" lineno="669" name="myorigval"/>
            </Getattr>
            <Const fromlineno="669" tolineno="669" lineno="669" type="str">'.'</Const>
          </CallFunc>
        </Assign>
        <If fromlineno="670" tolineno="674" lineno="670">
          <Compare fromlineno="670" tolineno="670" lineno="670" op="('==', &lt;Const(int) l.670 [bb] at Ox936a66c&gt;)">
            <CallFunc fromlineno="670" tolineno="670" lineno="670" func="Name(len)">
              <Name fromlineno="670" tolineno="670" lineno="670" name="len"/>
              <Name fromlineno="670" tolineno="670" lineno="670" name="myval"/>
            </CallFunc>
            <Const fromlineno="670" tolineno="670" lineno="670" type="int">0</Const>
          </Compare>
          <If fromlineno="671" tolineno="672" lineno="671">
            <UnaryOp fromlineno="671" tolineno="671" lineno="671">
              <Name fromlineno="671" tolineno="671" lineno="671" name="silent"/>
            </UnaryOp>
            <Discard fromlineno="672" tolineno="672" lineno="672">
              <CallFunc fromlineno="672" tolineno="672" lineno="672" func="Name(error)">
                <Name fromlineno="672" tolineno="672" lineno="672" name="error"/>
                <Const fromlineno="672" tolineno="672" lineno="672" type="str">'package name has empty version string'</Const>
              </CallFunc>
            </Discard>
          </If>
          <Assign fromlineno="673" tolineno="673" lineno="673" targets="[&lt;Subscript() l.673 [bb] at Ox936a84c&gt;]" value="0">
            <Subscript fromlineno="673" tolineno="673" lineno="673">
              <Name fromlineno="673" tolineno="673" lineno="673" name="__ververify_cache__"/>
              <Index fromlineno="673" tolineno="673" lineno="None">
                <Name fromlineno="673" tolineno="673" lineno="673" name="myorigval"/>
              </Index>
            </Subscript>
            <Const fromlineno="673" tolineno="673" lineno="673" type="int">0</Const>
          </Assign>
          <Return fromlineno="674" tolineno="674" lineno="674">
            <Const fromlineno="674" tolineno="674" lineno="674" type="int">0</Const>
          </Return>
        </If>
        <For fromlineno="676" tolineno="688" lineno="676">
          <AssName fromlineno="676" tolineno="676" lineno="676" name="x"/>
          <Subscript fromlineno="676" tolineno="676" lineno="676">
            <Name fromlineno="676" tolineno="676" lineno="676" name="myval"/>
            <Slice fromlineno="676" tolineno="676" lineno="None">
              <Const fromlineno="676" tolineno="676" lineno="676" type="int">-1</Const>
            </Slice>
          </Subscript>
          <If fromlineno="677" tolineno="681" lineno="677">
            <UnaryOp fromlineno="677" tolineno="677" lineno="677">
              <CallFunc fromlineno="677" tolineno="677" lineno="677" func="Name(len)">
                <Name fromlineno="677" tolineno="677" lineno="677" name="len"/>
                <Name fromlineno="677" tolineno="677" lineno="677" name="x"/>
              </CallFunc>
            </UnaryOp>
            <If fromlineno="678" tolineno="679" lineno="678">
              <UnaryOp fromlineno="678" tolineno="678" lineno="678">
                <Name fromlineno="678" tolineno="678" lineno="678" name="silent"/>
              </UnaryOp>
              <Discard fromlineno="679" tolineno="679" lineno="679">
                <CallFunc fromlineno="679" tolineno="679" lineno="679" func="Name(error)">
                  <Name fromlineno="679" tolineno="679" lineno="679" name="error"/>
                  <Const fromlineno="679" tolineno="679" lineno="679" type="str">'package version has two points in a row'</Const>
                </CallFunc>
              </Discard>
            </If>
            <Assign fromlineno="680" tolineno="680" lineno="680" targets="[&lt;Subscript() l.680 [bb] at Ox936accc&gt;]" value="0">
              <Subscript fromlineno="680" tolineno="680" lineno="680">
                <Name fromlineno="680" tolineno="680" lineno="680" name="__ververify_cache__"/>
                <Index fromlineno="680" tolineno="680" lineno="None">
                  <Name fromlineno="680" tolineno="680" lineno="680" name="myorigval"/>
                </Index>
              </Subscript>
              <Const fromlineno="680" tolineno="680" lineno="680" type="int">0</Const>
            </Assign>
            <Return fromlineno="681" tolineno="681" lineno="681">
              <Const fromlineno="681" tolineno="681" lineno="681" type="int">0</Const>
            </Return>
          </If>
          <TryExcept fromlineno="682" tolineno="688" lineno="682">
            <Assign fromlineno="683" tolineno="683" lineno="683" targets="[&lt;AssName(foo) l.683 [bb] at Ox936ae2c&gt;]" value="int(x)">
              <AssName fromlineno="683" tolineno="683" lineno="683" name="foo"/>
              <CallFunc fromlineno="683" tolineno="683" lineno="683" func="Name(int)">
                <Name fromlineno="683" tolineno="683" lineno="683" name="int"/>
                <Name fromlineno="683" tolineno="683" lineno="683" name="x"/>
              </CallFunc>
            </Assign>
            <ExceptHandler fromlineno="684" tolineno="688" lineno="684">
              <If fromlineno="685" tolineno="686" lineno="685">
                <UnaryOp fromlineno="685" tolineno="685" lineno="685">
                  <Name fromlineno="685" tolineno="685" lineno="685" name="silent"/>
                </UnaryOp>
                <Discard fromlineno="686" tolineno="686" lineno="686">
                  <CallFunc fromlineno="686" tolineno="686" lineno="686" func="Name(error)">
                    <Name fromlineno="686" tolineno="686" lineno="686" name="error"/>
                    <BinOp fromlineno="686" tolineno="686" lineno="686" op="+" left="(&quot;package version contains non-numeric '&quot;) + (x)" right="&quot;'&quot;">
                      <BinOp fromlineno="686" tolineno="686" lineno="686" op="+" left="&quot;package version contains non-numeric '&quot;" right="x">
                        <Const fromlineno="686" tolineno="686" lineno="686" type="str">"package version contains non-numeric '"</Const>
                        <Name fromlineno="686" tolineno="686" lineno="686" name="x"/>
                      </BinOp>
                      <Const fromlineno="686" tolineno="686" lineno="686" type="str">"'"</Const>
                    </BinOp>
                  </CallFunc>
                </Discard>
              </If>
              <Assign fromlineno="687" tolineno="687" lineno="687" targets="[&lt;Subscript() l.687 [bb] at Ox936e18c&gt;]" value="0">
                <Subscript fromlineno="687" tolineno="687" lineno="687">
                  <Name fromlineno="687" tolineno="687" lineno="687" name="__ververify_cache__"/>
                  <Index fromlineno="687" tolineno="687" lineno="None">
                    <Name fromlineno="687" tolineno="687" lineno="687" name="myorigval"/>
                  </Index>
                </Subscript>
                <Const fromlineno="687" tolineno="687" lineno="687" type="int">0</Const>
              </Assign>
              <Return fromlineno="688" tolineno="688" lineno="688">
                <Const fromlineno="688" tolineno="688" lineno="688" type="int">0</Const>
              </Return>
            </ExceptHandler>
          </TryExcept>
        </For>
        <If fromlineno="689" tolineno="693" lineno="689">
          <UnaryOp fromlineno="689" tolineno="689" lineno="689">
            <CallFunc fromlineno="689" tolineno="689" lineno="689" func="Name(len)">
              <Name fromlineno="689" tolineno="689" lineno="689" name="len"/>
              <Subscript fromlineno="689" tolineno="689" lineno="689">
                <Name fromlineno="689" tolineno="689" lineno="689" name="myval"/>
                <Index fromlineno="689" tolineno="689" lineno="None">
                  <Const fromlineno="689" tolineno="689" lineno="689" type="int">-1</Const>
                </Index>
              </Subscript>
            </CallFunc>
          </UnaryOp>
          <If fromlineno="690" tolineno="691" lineno="690">
            <UnaryOp fromlineno="690" tolineno="690" lineno="690">
              <Name fromlineno="690" tolineno="690" lineno="690" name="silent"/>
            </UnaryOp>
            <Discard fromlineno="691" tolineno="691" lineno="691">
              <CallFunc fromlineno="691" tolineno="691" lineno="691" func="Name(error)">
                <Name fromlineno="691" tolineno="691" lineno="691" name="error"/>
                <Const fromlineno="691" tolineno="691" lineno="691" type="str">'package version has trailing dot'</Const>
              </CallFunc>
            </Discard>
          </If>
          <Assign fromlineno="692" tolineno="692" lineno="692" targets="[&lt;Subscript() l.692 [bb] at Ox936e54c&gt;]" value="0">
            <Subscript fromlineno="692" tolineno="692" lineno="692">
              <Name fromlineno="692" tolineno="692" lineno="692" name="__ververify_cache__"/>
              <Index fromlineno="692" tolineno="692" lineno="None">
                <Name fromlineno="692" tolineno="692" lineno="692" name="myorigval"/>
              </Index>
            </Subscript>
            <Const fromlineno="692" tolineno="692" lineno="692" type="int">0</Const>
          </Assign>
          <Return fromlineno="693" tolineno="693" lineno="693">
            <Const fromlineno="693" tolineno="693" lineno="693" type="int">0</Const>
          </Return>
        </If>
        <TryExcept fromlineno="694" tolineno="699" lineno="694">
          <Assign fromlineno="695" tolineno="695" lineno="695" targets="[&lt;AssName(foo) l.695 [bb] at Ox936e6ac&gt;]" value="int(myval[-1])">
            <AssName fromlineno="695" tolineno="695" lineno="695" name="foo"/>
            <CallFunc fromlineno="695" tolineno="695" lineno="695" func="Name(int)">
              <Name fromlineno="695" tolineno="695" lineno="695" name="int"/>
              <Subscript fromlineno="695" tolineno="695" lineno="695">
                <Name fromlineno="695" tolineno="695" lineno="695" name="myval"/>
                <Index fromlineno="695" tolineno="695" lineno="None">
                  <Const fromlineno="695" tolineno="695" lineno="695" type="int">-1</Const>
                </Index>
              </Subscript>
            </CallFunc>
          </Assign>
          <Assign fromlineno="696" tolineno="696" lineno="696" targets="[&lt;Subscript() l.696 [bb] at Ox936e7ec&gt;]" value="1">
            <Subscript fromlineno="696" tolineno="696" lineno="696">
              <Name fromlineno="696" tolineno="696" lineno="696" name="__ververify_cache__"/>
              <Index fromlineno="696" tolineno="696" lineno="None">
                <Name fromlineno="696" tolineno="696" lineno="696" name="myorigval"/>
              </Index>
            </Subscript>
            <Const fromlineno="696" tolineno="696" lineno="696" type="int">1</Const>
          </Assign>
          <Return fromlineno="697" tolineno="697" lineno="697">
            <Const fromlineno="697" tolineno="697" lineno="697" type="int">1</Const>
          </Return>
          <ExceptHandler fromlineno="698" tolineno="699" lineno="698">
            <Pass fromlineno="699" tolineno="699" lineno="699"/>
          </ExceptHandler>
        </TryExcept>
        <If fromlineno="702" tolineno="709" lineno="702">
          <Compare fromlineno="702" tolineno="702" lineno="702" op="('in', &lt;Name(lowercase) l.702 [bb] at Ox936eaac&gt;)">
            <Subscript fromlineno="702" tolineno="702" lineno="702">
              <Subscript fromlineno="702" tolineno="702" lineno="702">
                <Name fromlineno="702" tolineno="702" lineno="702" name="myval"/>
                <Index fromlineno="702" tolineno="702" lineno="None">
                  <Const fromlineno="702" tolineno="702" lineno="702" type="int">-1</Const>
                </Index>
              </Subscript>
              <Index fromlineno="702" tolineno="702" lineno="None">
                <Const fromlineno="702" tolineno="702" lineno="702" type="int">-1</Const>
              </Index>
            </Subscript>
            <Name fromlineno="702" tolineno="702" lineno="702" name="lowercase"/>
          </Compare>
          <TryExcept fromlineno="703" tolineno="709" lineno="703">
            <Assign fromlineno="704" tolineno="704" lineno="704" targets="[&lt;AssName(foo) l.704 [bb] at Ox936eb8c&gt;]" value="int(myval[-1][:-1])">
              <AssName fromlineno="704" tolineno="704" lineno="704" name="foo"/>
              <CallFunc fromlineno="704" tolineno="704" lineno="704" func="Name(int)">
                <Name fromlineno="704" tolineno="704" lineno="704" name="int"/>
                <Subscript fromlineno="704" tolineno="704" lineno="704">
                  <Subscript fromlineno="704" tolineno="704" lineno="704">
                    <Name fromlineno="704" tolineno="704" lineno="704" name="myval"/>
                    <Index fromlineno="704" tolineno="704" lineno="None">
                      <Const fromlineno="704" tolineno="704" lineno="704" type="int">-1</Const>
                    </Index>
                  </Subscript>
                  <Slice fromlineno="704" tolineno="704" lineno="None">
                    <Const fromlineno="704" tolineno="704" lineno="704" type="int">-1</Const>
                  </Slice>
                </Subscript>
              </CallFunc>
            </Assign>
            <Return fromlineno="705" tolineno="705" lineno="705">
              <Const fromlineno="705" tolineno="705" lineno="705" type="int">1</Const>
            </Return>
            <Assign fromlineno="706" tolineno="706" lineno="706" targets="[&lt;Subscript() l.706 [bb] at Ox936ed6c&gt;]" value="1">
              <Subscript fromlineno="706" tolineno="706" lineno="706">
                <Name fromlineno="706" tolineno="706" lineno="706" name="__ververify_cache__"/>
                <Index fromlineno="706" tolineno="706" lineno="None">
                  <Name fromlineno="706" tolineno="706" lineno="706" name="myorigval"/>
                </Index>
              </Subscript>
              <Const fromlineno="706" tolineno="706" lineno="706" type="int">1</Const>
            </Assign>
            <ExceptHandler fromlineno="708" tolineno="709" lineno="708">
              <Pass fromlineno="709" tolineno="709" lineno="709"/>
            </ExceptHandler>
          </TryExcept>
        </If>
        <Assign fromlineno="711" tolineno="711" lineno="711" targets="[&lt;AssName(ep) l.711 [bb] at Ox936eecc&gt;]" value="string.split(myval[-1], '_')">
          <AssName fromlineno="711" tolineno="711" lineno="711" name="ep"/>
          <CallFunc fromlineno="711" tolineno="711" lineno="711" func="Getattr(split)">
            <Getattr fromlineno="711" tolineno="711" lineno="711" attrname="split" expr="string">
              <Name fromlineno="711" tolineno="711" lineno="711" name="string"/>
            </Getattr>
            <Subscript fromlineno="711" tolineno="711" lineno="711">
              <Name fromlineno="711" tolineno="711" lineno="711" name="myval"/>
              <Index fromlineno="711" tolineno="711" lineno="None">
                <Const fromlineno="711" tolineno="711" lineno="711" type="int">-1</Const>
              </Index>
            </Subscript>
            <Const fromlineno="711" tolineno="711" lineno="711" type="str">'_'</Const>
          </CallFunc>
        </Assign>
        <If fromlineno="712" tolineno="716" lineno="712">
          <Compare fromlineno="712" tolineno="712" lineno="712" op="('!=', &lt;Const(int) l.712 [bb] at Ox937214c&gt;)">
            <CallFunc fromlineno="712" tolineno="712" lineno="712" func="Name(len)">
              <Name fromlineno="712" tolineno="712" lineno="712" name="len"/>
              <Name fromlineno="712" tolineno="712" lineno="712" name="ep"/>
            </CallFunc>
            <Const fromlineno="712" tolineno="712" lineno="712" type="int">2</Const>
          </Compare>
          <If fromlineno="713" tolineno="714" lineno="713">
            <UnaryOp fromlineno="713" tolineno="713" lineno="713">
              <Name fromlineno="713" tolineno="713" lineno="713" name="silent"/>
            </UnaryOp>
            <Discard fromlineno="714" tolineno="714" lineno="714">
              <CallFunc fromlineno="714" tolineno="714" lineno="714" func="Name(error)">
                <Name fromlineno="714" tolineno="714" lineno="714" name="error"/>
                <Const fromlineno="714" tolineno="714" lineno="714" type="str">'package version has more than one letter at then end'</Const>
              </CallFunc>
            </Discard>
          </If>
          <Assign fromlineno="715" tolineno="715" lineno="715" targets="[&lt;Subscript() l.715 [bb] at Ox937232c&gt;]" value="0">
            <Subscript fromlineno="715" tolineno="715" lineno="715">
              <Name fromlineno="715" tolineno="715" lineno="715" name="__ververify_cache__"/>
              <Index fromlineno="715" tolineno="715" lineno="None">
                <Name fromlineno="715" tolineno="715" lineno="715" name="myorigval"/>
              </Index>
            </Subscript>
            <Const fromlineno="715" tolineno="715" lineno="715" type="int">0</Const>
          </Assign>
          <Return fromlineno="716" tolineno="716" lineno="716">
            <Const fromlineno="716" tolineno="716" lineno="716" type="int">0</Const>
          </Return>
        </If>
        <TryExcept fromlineno="717" tolineno="724" lineno="717">
          <Assign fromlineno="718" tolineno="718" lineno="718" targets="[&lt;AssName(foo) l.718 [bb] at Ox937248c&gt;]" value="string.atoi(ep[0])">
            <AssName fromlineno="718" tolineno="718" lineno="718" name="foo"/>
            <CallFunc fromlineno="718" tolineno="718" lineno="718" func="Getattr(atoi)">
              <Getattr fromlineno="718" tolineno="718" lineno="718" attrname="atoi" expr="string">
                <Name fromlineno="718" tolineno="718" lineno="718" name="string"/>
              </Getattr>
              <Subscript fromlineno="718" tolineno="718" lineno="718">
                <Name fromlineno="718" tolineno="718" lineno="718" name="ep"/>
                <Index fromlineno="718" tolineno="718" lineno="None">
                  <Const fromlineno="718" tolineno="718" lineno="718" type="int">0</Const>
                </Index>
              </Subscript>
            </CallFunc>
          </Assign>
          <ExceptHandler fromlineno="719" tolineno="724" lineno="719">
            <If fromlineno="721" tolineno="722" lineno="721">
              <UnaryOp fromlineno="721" tolineno="721" lineno="721">
                <Name fromlineno="721" tolineno="721" lineno="721" name="silent"/>
              </UnaryOp>
              <Discard fromlineno="722" tolineno="722" lineno="722">
                <CallFunc fromlineno="722" tolineno="722" lineno="722" func="Name(error)">
                  <Name fromlineno="722" tolineno="722" lineno="722" name="error"/>
                  <Const fromlineno="722" tolineno="722" lineno="722" type="str">"package version must have numeric part before the '_'"</Const>
                </CallFunc>
              </Discard>
            </If>
            <Assign fromlineno="723" tolineno="723" lineno="723" targets="[&lt;Subscript() l.723 [bb] at Ox93727ac&gt;]" value="0">
              <Subscript fromlineno="723" tolineno="723" lineno="723">
                <Name fromlineno="723" tolineno="723" lineno="723" name="__ververify_cache__"/>
                <Index fromlineno="723" tolineno="723" lineno="None">
                  <Name fromlineno="723" tolineno="723" lineno="723" name="myorigval"/>
                </Index>
              </Subscript>
              <Const fromlineno="723" tolineno="723" lineno="723" type="int">0</Const>
            </Assign>
            <Return fromlineno="724" tolineno="724" lineno="724">
              <Const fromlineno="724" tolineno="724" lineno="724" type="int">0</Const>
            </Return>
          </ExceptHandler>
        </TryExcept>
        <For fromlineno="726" tolineno="739" lineno="726">
          <AssName fromlineno="726" tolineno="726" lineno="726" name="mye"/>
          <Name fromlineno="726" tolineno="726" lineno="726" name="_package_ends_"/>
          <If fromlineno="727" tolineno="739" lineno="727">
            <Compare fromlineno="727" tolineno="727" lineno="727" op="('==', &lt;Name(mye) l.727 [bb] at Ox9372b0c&gt;)">
              <Subscript fromlineno="727" tolineno="727" lineno="727">
                <Subscript fromlineno="727" tolineno="727" lineno="727">
                  <Name fromlineno="727" tolineno="727" lineno="727" name="ep"/>
                  <Index fromlineno="727" tolineno="727" lineno="None">
                    <Const fromlineno="727" tolineno="727" lineno="727" type="int">1</Const>
                  </Index>
                </Subscript>
                <Slice fromlineno="727" tolineno="727" lineno="None">
                  <Const fromlineno="727" tolineno="727" lineno="727" type="int">0</Const>
                  <CallFunc fromlineno="727" tolineno="727" lineno="727" func="Name(len)">
                    <Name fromlineno="727" tolineno="727" lineno="727" name="len"/>
                    <Name fromlineno="727" tolineno="727" lineno="727" name="mye"/>
                  </CallFunc>
                </Slice>
              </Subscript>
              <Name fromlineno="727" tolineno="727" lineno="727" name="mye"/>
            </Compare>
            <If fromlineno="728" tolineno="739" lineno="728">
              <Compare fromlineno="728" tolineno="728" lineno="728" op="('==', &lt;CallFunc() l.728 [bb] at Ox9372c6c&gt;)">
                <CallFunc fromlineno="728" tolineno="728" lineno="728" func="Name(len)">
                  <Name fromlineno="728" tolineno="728" lineno="728" name="len"/>
                  <Name fromlineno="728" tolineno="728" lineno="728" name="mye"/>
                </CallFunc>
                <CallFunc fromlineno="728" tolineno="728" lineno="728" func="Name(len)">
                  <Name fromlineno="728" tolineno="728" lineno="728" name="len"/>
                  <Subscript fromlineno="728" tolineno="728" lineno="728">
                    <Name fromlineno="728" tolineno="728" lineno="728" name="ep"/>
                    <Index fromlineno="728" tolineno="728" lineno="None">
                      <Const fromlineno="728" tolineno="728" lineno="728" type="int">1</Const>
                    </Index>
                  </Subscript>
                </CallFunc>
              </Compare>
              <Assign fromlineno="730" tolineno="730" lineno="730" targets="[&lt;Subscript() l.730 [bb] at Ox9372dac&gt;]" value="1">
                <Subscript fromlineno="730" tolineno="730" lineno="730">
                  <Name fromlineno="730" tolineno="730" lineno="730" name="__ververify_cache__"/>
                  <Index fromlineno="730" tolineno="730" lineno="None">
                    <Name fromlineno="730" tolineno="730" lineno="730" name="myorigval"/>
                  </Index>
                </Subscript>
                <Const fromlineno="730" tolineno="730" lineno="730" type="int">1</Const>
              </Assign>
              <Return fromlineno="731" tolineno="731" lineno="731">
                <Const fromlineno="731" tolineno="731" lineno="731" type="int">1</Const>
              </Return>
              <TryExcept fromlineno="733" tolineno="739" lineno="733">
                <Assign fromlineno="734" tolineno="734" lineno="734" targets="[&lt;AssName(foo) l.734 [bb] at Ox9372f4c&gt;]" value="string.atoi(ep[1][len(mye):])">
                  <AssName fromlineno="734" tolineno="734" lineno="734" name="foo"/>
                  <CallFunc fromlineno="734" tolineno="734" lineno="734" func="Getattr(atoi)">
                    <Getattr fromlineno="734" tolineno="734" lineno="734" attrname="atoi" expr="string">
                      <Name fromlineno="734" tolineno="734" lineno="734" name="string"/>
                    </Getattr>
                    <Subscript fromlineno="734" tolineno="734" lineno="734">
                      <Subscript fromlineno="734" tolineno="734" lineno="734">
                        <Name fromlineno="734" tolineno="734" lineno="734" name="ep"/>
                        <Index fromlineno="734" tolineno="734" lineno="None">
                          <Const fromlineno="734" tolineno="734" lineno="734" type="int">1</Const>
                        </Index>
                      </Subscript>
                      <Slice fromlineno="734" tolineno="734" lineno="None">
                        <CallFunc fromlineno="734" tolineno="734" lineno="734" func="Name(len)">
                          <Name fromlineno="734" tolineno="734" lineno="734" name="len"/>
                          <Name fromlineno="734" tolineno="734" lineno="734" name="mye"/>
                        </CallFunc>
                      </Slice>
                    </Subscript>
                  </CallFunc>
                </Assign>
                <Assign fromlineno="735" tolineno="735" lineno="735" targets="[&lt;Subscript() l.735 [bb] at Ox937618c&gt;]" value="1">
                  <Subscript fromlineno="735" tolineno="735" lineno="735">
                    <Name fromlineno="735" tolineno="735" lineno="735" name="__ververify_cache__"/>
                    <Index fromlineno="735" tolineno="735" lineno="None">
                      <Name fromlineno="735" tolineno="735" lineno="735" name="myorigval"/>
                    </Index>
                  </Subscript>
                  <Const fromlineno="735" tolineno="735" lineno="735" type="int">1</Const>
                </Assign>
                <Return fromlineno="736" tolineno="736" lineno="736">
                  <Const fromlineno="736" tolineno="736" lineno="736" type="int">1</Const>
                </Return>
                <ExceptHandler fromlineno="737" tolineno="739" lineno="737">
                  <Pass fromlineno="739" tolineno="739" lineno="739"/>
                </ExceptHandler>
              </TryExcept>
            </If>
          </If>
        </For>
        <If fromlineno="740" tolineno="741" lineno="740">
          <UnaryOp fromlineno="740" tolineno="740" lineno="740">
            <Name fromlineno="740" tolineno="740" lineno="740" name="silent"/>
          </UnaryOp>
          <Discard fromlineno="741" tolineno="741" lineno="741">
            <CallFunc fromlineno="741" tolineno="741" lineno="741" func="Name(error)">
              <Name fromlineno="741" tolineno="741" lineno="741" name="error"/>
              <Const fromlineno="741" tolineno="741" lineno="741" type="str">"package version extension after '_' is invalid"</Const>
            </CallFunc>
          </Discard>
        </If>
        <Assign fromlineno="742" tolineno="742" lineno="742" targets="[&lt;Subscript() l.742 [bb] at Ox937642c&gt;]" value="0">
          <Subscript fromlineno="742" tolineno="742" lineno="742">
            <Name fromlineno="742" tolineno="742" lineno="742" name="__ververify_cache__"/>
            <Index fromlineno="742" tolineno="742" lineno="None">
              <Name fromlineno="742" tolineno="742" lineno="742" name="myorigval"/>
            </Index>
          </Subscript>
          <Const fromlineno="742" tolineno="742" lineno="742" type="int">0</Const>
        </Assign>
        <Return fromlineno="743" tolineno="743" lineno="743">
          <Const fromlineno="743" tolineno="743" lineno="743" type="int">0</Const>
        </Return>
      </Function>
      <Function fromlineno="746" tolineno="751" lineno="746">
        <Arguments fromlineno="746" tolineno="746" lineno="None" format_args="mypkg">
          <AssName fromlineno="746" tolineno="746" lineno="746" name="mypkg"/>
        </Arguments>
        <Assign fromlineno="747" tolineno="747" lineno="747" targets="[&lt;AssName(myparts) l.747 [bb] at Ox937664c&gt;]" value="string.split(mypkg, '-')">
          <AssName fromlineno="747" tolineno="747" lineno="747" name="myparts"/>
          <CallFunc fromlineno="747" tolineno="747" lineno="747" func="Getattr(split)">
            <Getattr fromlineno="747" tolineno="747" lineno="747" attrname="split" expr="string">
              <Name fromlineno="747" tolineno="747" lineno="747" name="string"/>
            </Getattr>
            <Name fromlineno="747" tolineno="747" lineno="747" name="mypkg"/>
            <Const fromlineno="747" tolineno="747" lineno="747" type="str">'-'</Const>
          </CallFunc>
        </Assign>
        <For fromlineno="748" tolineno="750" lineno="748">
          <AssName fromlineno="748" tolineno="748" lineno="748" name="x"/>
          <Name fromlineno="748" tolineno="748" lineno="748" name="myparts"/>
          <If fromlineno="749" tolineno="750" lineno="749">
            <CallFunc fromlineno="749" tolineno="749" lineno="749" func="Name(ververify)">
              <Name fromlineno="749" tolineno="749" lineno="749" name="ververify"/>
              <Name fromlineno="749" tolineno="749" lineno="749" name="x"/>
            </CallFunc>
            <Return fromlineno="750" tolineno="750" lineno="750">
              <Const fromlineno="750" tolineno="750" lineno="750" type="int">0</Const>
            </Return>
          </If>
        </For>
        <Return fromlineno="751" tolineno="751" lineno="751">
          <Const fromlineno="751" tolineno="751" lineno="751" type="int">1</Const>
        </Return>
      </Function>
      <Assign fromlineno="754" tolineno="754" lineno="754" targets="[&lt;AssName(_isspecific_cache_) l.754 [bb] at Ox937698c&gt;]" value="{}">
        <AssName fromlineno="754" tolineno="754" lineno="754" name="_isspecific_cache_"/>
        <Dict fromlineno="754" tolineno="754" lineno="754"/>
      </Assign>
      <Function fromlineno="756" tolineno="768" lineno="756">
        <Arguments fromlineno="756" tolineno="756" lineno="None" format_args="mypkg">
          <AssName fromlineno="756" tolineno="756" lineno="756" name="mypkg"/>
        </Arguments>
        <TryExcept fromlineno="758" tolineno="761" lineno="758">
          <Return fromlineno="759" tolineno="759" lineno="759">
            <Subscript fromlineno="759" tolineno="759" lineno="759">
              <Name fromlineno="759" tolineno="759" lineno="759" name="__isspecific_cache__"/>
              <Index fromlineno="759" tolineno="759" lineno="None">
                <Name fromlineno="759" tolineno="759" lineno="759" name="mypkg"/>
              </Index>
            </Subscript>
          </Return>
          <ExceptHandler fromlineno="760" tolineno="761" lineno="760">
            <Pass fromlineno="761" tolineno="761" lineno="761"/>
          </ExceptHandler>
        </TryExcept>
        <Assign fromlineno="763" tolineno="763" lineno="763" targets="[&lt;AssName(mysplit) l.763 [bb] at Ox9376cac&gt;]" value="string.split(mypkg, '/')">
          <AssName fromlineno="763" tolineno="763" lineno="763" name="mysplit"/>
          <CallFunc fromlineno="763" tolineno="763" lineno="763" func="Getattr(split)">
            <Getattr fromlineno="763" tolineno="763" lineno="763" attrname="split" expr="string">
              <Name fromlineno="763" tolineno="763" lineno="763" name="string"/>
            </Getattr>
            <Name fromlineno="763" tolineno="763" lineno="763" name="mypkg"/>
            <Const fromlineno="763" tolineno="763" lineno="763" type="str">'/'</Const>
          </CallFunc>
        </Assign>
        <If fromlineno="764" tolineno="766" lineno="764">
          <UnaryOp fromlineno="764" tolineno="764" lineno="764">
            <CallFunc fromlineno="764" tolineno="764" lineno="764" func="Name(isjustname)">
              <Name fromlineno="764" tolineno="764" lineno="764" name="isjustname"/>
              <Subscript fromlineno="764" tolineno="764" lineno="764">
                <Name fromlineno="764" tolineno="764" lineno="764" name="mysplit"/>
                <Index fromlineno="764" tolineno="764" lineno="None">
                  <Const fromlineno="764" tolineno="764" lineno="764" type="int">-1</Const>
                </Index>
              </Subscript>
            </CallFunc>
          </UnaryOp>
          <Assign fromlineno="765" tolineno="765" lineno="765" targets="[&lt;Subscript() l.765 [bb] at Ox9376f4c&gt;]" value="1">
            <Subscript fromlineno="765" tolineno="765" lineno="765">
              <Name fromlineno="765" tolineno="765" lineno="765" name="__isspecific_cache__"/>
              <Index fromlineno="765" tolineno="765" lineno="None">
                <Name fromlineno="765" tolineno="765" lineno="765" name="mypkg"/>
              </Index>
            </Subscript>
            <Const fromlineno="765" tolineno="765" lineno="765" type="int">1</Const>
          </Assign>
          <Return fromlineno="766" tolineno="766" lineno="766">
            <Const fromlineno="766" tolineno="766" lineno="766" type="int">1</Const>
          </Return>
        </If>
        <Assign fromlineno="767" tolineno="767" lineno="767" targets="[&lt;Subscript() l.767 [bb] at Ox938d08c&gt;]" value="0">
          <Subscript fromlineno="767" tolineno="767" lineno="767">
            <Name fromlineno="767" tolineno="767" lineno="767" name="__isspecific_cache__"/>
            <Index fromlineno="767" tolineno="767" lineno="None">
              <Name fromlineno="767" tolineno="767" lineno="767" name="mypkg"/>
            </Index>
          </Subscript>
          <Const fromlineno="767" tolineno="767" lineno="767" type="int">0</Const>
        </Assign>
        <Return fromlineno="768" tolineno="768" lineno="768">
          <Const fromlineno="768" tolineno="768" lineno="768" type="int">0</Const>
        </Return>
      </Function>
      <Assign fromlineno="773" tolineno="773" lineno="773" targets="[&lt;AssName(__pkgsplit_cache__) l.773 [bb] at Ox938d18c&gt;]" value="{}">
        <AssName fromlineno="773" tolineno="773" lineno="773" name="__pkgsplit_cache__"/>
        <Dict fromlineno="773" tolineno="773" lineno="773"/>
      </Assign>
      <Function fromlineno="775" tolineno="855" lineno="775">
        <Arguments fromlineno="775" tolineno="775" lineno="None" format_args="mypkg, silent=1">
          <AssName fromlineno="775" tolineno="775" lineno="775" name="mypkg"/>
          <AssName fromlineno="775" tolineno="775" lineno="775" name="silent"/>
          <Const fromlineno="775" tolineno="775" lineno="775" type="int">1</Const>
        </Arguments>
        <TryExcept fromlineno="793" tolineno="796" lineno="793">
          <Return fromlineno="794" tolineno="794" lineno="794">
            <Subscript fromlineno="794" tolineno="794" lineno="794">
              <Name fromlineno="794" tolineno="794" lineno="794" name="__pkgsplit_cache__"/>
              <Index fromlineno="794" tolineno="794" lineno="None">
                <Name fromlineno="794" tolineno="794" lineno="794" name="mypkg"/>
              </Index>
            </Subscript>
          </Return>
          <ExceptHandler fromlineno="795" tolineno="796" lineno="795">
            <Name fromlineno="795" tolineno="795" lineno="795" name="KeyError"/>
            <Pass fromlineno="796" tolineno="796" lineno="796"/>
          </ExceptHandler>
        </TryExcept>
        <Assign fromlineno="798" tolineno="798" lineno="798" targets="[&lt;AssName(myparts) l.798 [bb] at Ox938d52c&gt;]" value="string.split(mypkg, '-')">
          <AssName fromlineno="798" tolineno="798" lineno="798" name="myparts"/>
          <CallFunc fromlineno="798" tolineno="798" lineno="798" func="Getattr(split)">
            <Getattr fromlineno="798" tolineno="798" lineno="798" attrname="split" expr="string">
              <Name fromlineno="798" tolineno="798" lineno="798" name="string"/>
            </Getattr>
            <Name fromlineno="798" tolineno="798" lineno="798" name="mypkg"/>
            <Const fromlineno="798" tolineno="798" lineno="798" type="str">'-'</Const>
          </CallFunc>
        </Assign>
        <If fromlineno="799" tolineno="803" lineno="799">
          <Compare fromlineno="799" tolineno="799" lineno="799" op="('&lt;', &lt;Const(int) l.799 [bb] at Ox938d72c&gt;)">
            <CallFunc fromlineno="799" tolineno="799" lineno="799" func="Name(len)">
              <Name fromlineno="799" tolineno="799" lineno="799" name="len"/>
              <Name fromlineno="799" tolineno="799" lineno="799" name="myparts"/>
            </CallFunc>
            <Const fromlineno="799" tolineno="799" lineno="799" type="int">2</Const>
          </Compare>
          <If fromlineno="800" tolineno="801" lineno="800">
            <UnaryOp fromlineno="800" tolineno="800" lineno="800">
              <Name fromlineno="800" tolineno="800" lineno="800" name="silent"/>
            </UnaryOp>
            <Discard fromlineno="801" tolineno="801" lineno="801">
              <CallFunc fromlineno="801" tolineno="801" lineno="801" func="Name(error)">
                <Name fromlineno="801" tolineno="801" lineno="801" name="error"/>
                <Const fromlineno="801" tolineno="801" lineno="801" type="str">'package name without name or version part'</Const>
              </CallFunc>
            </Discard>
          </If>
          <Assign fromlineno="802" tolineno="802" lineno="802" targets="[&lt;Subscript() l.802 [bb] at Ox938d90c&gt;]" value="None">
            <Subscript fromlineno="802" tolineno="802" lineno="802">
              <Name fromlineno="802" tolineno="802" lineno="802" name="__pkgsplit_cache__"/>
              <Index fromlineno="802" tolineno="802" lineno="None">
                <Name fromlineno="802" tolineno="802" lineno="802" name="mypkg"/>
              </Index>
            </Subscript>
            <Const fromlineno="802" tolineno="802" lineno="802" type="NoneType">None</Const>
          </Assign>
          <Return fromlineno="803" tolineno="803" lineno="803">
            <Const fromlineno="803" tolineno="803" lineno="803" type="NoneType">None</Const>
          </Return>
        </If>
        <For fromlineno="804" tolineno="809" lineno="804">
          <AssName fromlineno="804" tolineno="804" lineno="804" name="x"/>
          <Name fromlineno="804" tolineno="804" lineno="804" name="myparts"/>
          <If fromlineno="805" tolineno="809" lineno="805">
            <Compare fromlineno="805" tolineno="805" lineno="805" op="('==', &lt;Const(int) l.805 [bb] at Ox938db8c&gt;)">
              <CallFunc fromlineno="805" tolineno="805" lineno="805" func="Name(len)">
                <Name fromlineno="805" tolineno="805" lineno="805" name="len"/>
                <Name fromlineno="805" tolineno="805" lineno="805" name="x"/>
              </CallFunc>
              <Const fromlineno="805" tolineno="805" lineno="805" type="int">0</Const>
            </Compare>
            <If fromlineno="806" tolineno="807" lineno="806">
              <UnaryOp fromlineno="806" tolineno="806" lineno="806">
                <Name fromlineno="806" tolineno="806" lineno="806" name="silent"/>
              </UnaryOp>
              <Discard fromlineno="807" tolineno="807" lineno="807">
                <CallFunc fromlineno="807" tolineno="807" lineno="807" func="Name(error)">
                  <Name fromlineno="807" tolineno="807" lineno="807" name="error"/>
                  <Const fromlineno="807" tolineno="807" lineno="807" type="str">'package name with empty name or version part'</Const>
                </CallFunc>
              </Discard>
            </If>
            <Assign fromlineno="808" tolineno="808" lineno="808" targets="[&lt;Subscript() l.808 [bb] at Ox938dd6c&gt;]" value="None">
              <Subscript fromlineno="808" tolineno="808" lineno="808">
                <Name fromlineno="808" tolineno="808" lineno="808" name="__pkgsplit_cache__"/>
                <Index fromlineno="808" tolineno="808" lineno="None">
                  <Name fromlineno="808" tolineno="808" lineno="808" name="mypkg"/>
                </Index>
              </Subscript>
              <Const fromlineno="808" tolineno="808" lineno="808" type="NoneType">None</Const>
            </Assign>
            <Return fromlineno="809" tolineno="809" lineno="809">
              <Const fromlineno="809" tolineno="809" lineno="809" type="NoneType">None</Const>
            </Return>
          </If>
        </For>
        <Assign fromlineno="811" tolineno="811" lineno="811" targets="[&lt;AssName(revok) l.811 [bb] at Ox938de6c&gt;]" value="0">
          <AssName fromlineno="811" tolineno="811" lineno="811" name="revok"/>
          <Const fromlineno="811" tolineno="811" lineno="811" type="int">0</Const>
        </Assign>
        <Assign fromlineno="812" tolineno="812" lineno="812" targets="[&lt;AssName(myrev) l.812 [bb] at Ox938df0c&gt;]" value="myparts[-1]">
          <AssName fromlineno="812" tolineno="812" lineno="812" name="myrev"/>
          <Subscript fromlineno="812" tolineno="812" lineno="812">
            <Name fromlineno="812" tolineno="812" lineno="812" name="myparts"/>
            <Index fromlineno="812" tolineno="812" lineno="None">
              <Const fromlineno="812" tolineno="812" lineno="812" type="int">-1</Const>
            </Index>
          </Subscript>
        </Assign>
        <Discard fromlineno="813" tolineno="813" lineno="813">
          <CallFunc fromlineno="813" tolineno="813" lineno="813" func="Name(ververify)">
            <Name fromlineno="813" tolineno="813" lineno="813" name="ververify"/>
            <Name fromlineno="813" tolineno="813" lineno="813" name="myrev"/>
            <Name fromlineno="813" tolineno="813" lineno="813" name="silent"/>
          </CallFunc>
        </Discard>
        <If fromlineno="814" tolineno="819" lineno="814">
          <BoolOp fromlineno="814" tolineno="814" lineno="814" op="and" values="len(myrev),myrev[0] == 'r',">
            <CallFunc fromlineno="814" tolineno="814" lineno="814" func="Name(len)">
              <Name fromlineno="814" tolineno="814" lineno="814" name="len"/>
              <Name fromlineno="814" tolineno="814" lineno="814" name="myrev"/>
            </CallFunc>
            <Compare fromlineno="814" tolineno="814" lineno="814" op="('==', &lt;Const(str) l.814 [bb] at Ox939128c&gt;)">
              <Subscript fromlineno="814" tolineno="814" lineno="814">
                <Name fromlineno="814" tolineno="814" lineno="814" name="myrev"/>
                <Index fromlineno="814" tolineno="814" lineno="None">
                  <Const fromlineno="814" tolineno="814" lineno="814" type="int">0</Const>
                </Index>
              </Subscript>
              <Const fromlineno="814" tolineno="814" lineno="814" type="str">'r'</Const>
            </Compare>
          </BoolOp>
          <TryExcept fromlineno="815" tolineno="819" lineno="815">
            <Discard fromlineno="816" tolineno="816" lineno="816">
              <CallFunc fromlineno="816" tolineno="816" lineno="816" func="Getattr(atoi)">
                <Getattr fromlineno="816" tolineno="816" lineno="816" attrname="atoi" expr="string">
                  <Name fromlineno="816" tolineno="816" lineno="816" name="string"/>
                </Getattr>
                <Subscript fromlineno="816" tolineno="816" lineno="816">
                  <Name fromlineno="816" tolineno="816" lineno="816" name="myrev"/>
                  <Slice fromlineno="816" tolineno="816" lineno="None">
                    <Const fromlineno="816" tolineno="816" lineno="816" type="int">1</Const>
                  </Slice>
                </Subscript>
              </CallFunc>
            </Discard>
            <Assign fromlineno="817" tolineno="817" lineno="817" targets="[&lt;AssName(revok) l.817 [bb] at Ox939146c&gt;]" value="1">
              <AssName fromlineno="817" tolineno="817" lineno="817" name="revok"/>
              <Const fromlineno="817" tolineno="817" lineno="817" type="int">1</Const>
            </Assign>
            <ExceptHandler fromlineno="818" tolineno="819" lineno="818">
              <Pass fromlineno="819" tolineno="819" lineno="819"/>
            </ExceptHandler>
          </TryExcept>
        </If>
        <If fromlineno="820" tolineno="855" lineno="820">
          <Name fromlineno="820" tolineno="820" lineno="820" name="revok"/>
          <If fromlineno="821" tolineno="836" lineno="821">
            <CallFunc fromlineno="821" tolineno="821" lineno="821" func="Name(ververify)">
              <Name fromlineno="821" tolineno="821" lineno="821" name="ververify"/>
              <Subscript fromlineno="821" tolineno="821" lineno="821">
                <Name fromlineno="821" tolineno="821" lineno="821" name="myparts"/>
                <Index fromlineno="821" tolineno="821" lineno="None">
                  <Const fromlineno="821" tolineno="821" lineno="821" type="int">-2</Const>
                </Index>
              </Subscript>
            </CallFunc>
            <If fromlineno="822" tolineno="833" lineno="822">
              <Compare fromlineno="822" tolineno="822" lineno="822" op="('==', &lt;Const(int) l.822 [bb] at Ox939182c&gt;)">
                <CallFunc fromlineno="822" tolineno="822" lineno="822" func="Name(len)">
                  <Name fromlineno="822" tolineno="822" lineno="822" name="len"/>
                  <Name fromlineno="822" tolineno="822" lineno="822" name="myparts"/>
                </CallFunc>
                <Const fromlineno="822" tolineno="822" lineno="822" type="int">2</Const>
              </Compare>
              <Assign fromlineno="823" tolineno="823" lineno="823" targets="[&lt;Subscript() l.823 [bb] at Ox93918ac&gt;]" value="None">
                <Subscript fromlineno="823" tolineno="823" lineno="823">
                  <Name fromlineno="823" tolineno="823" lineno="823" name="__pkgsplit_cache__"/>
                  <Index fromlineno="823" tolineno="823" lineno="None">
                    <Name fromlineno="823" tolineno="823" lineno="823" name="mypkg"/>
                  </Index>
                </Subscript>
                <Const fromlineno="823" tolineno="823" lineno="823" type="NoneType">None</Const>
              </Assign>
              <Return fromlineno="824" tolineno="824" lineno="824">
                <Const fromlineno="824" tolineno="824" lineno="824" type="NoneType">None</Const>
              </Return>
              <For fromlineno="826" tolineno="829" lineno="826">
                <AssName fromlineno="826" tolineno="826" lineno="826" name="x"/>
                <Subscript fromlineno="826" tolineno="826" lineno="826">
                  <Name fromlineno="826" tolineno="826" lineno="826" name="myparts"/>
                  <Slice fromlineno="826" tolineno="826" lineno="None">
                    <Const fromlineno="826" tolineno="826" lineno="826" type="int">-2</Const>
                  </Slice>
                </Subscript>
                <If fromlineno="827" tolineno="829" lineno="827">
                  <CallFunc fromlineno="827" tolineno="827" lineno="827" func="Name(ververify)">
                    <Name fromlineno="827" tolineno="827" lineno="827" name="ververify"/>
                    <Name fromlineno="827" tolineno="827" lineno="827" name="x"/>
                  </CallFunc>
                  <Assign fromlineno="828" tolineno="828" lineno="828" targets="[&lt;Subscript() l.828 [bb] at Ox9391bec&gt;]" value="None">
                    <Subscript fromlineno="828" tolineno="828" lineno="828">
                      <Name fromlineno="828" tolineno="828" lineno="828" name="__pkgsplit_cache__"/>
                      <Index fromlineno="828" tolineno="828" lineno="None">
                        <Name fromlineno="828" tolineno="828" lineno="828" name="mypkg"/>
                      </Index>
                    </Subscript>
                    <Const fromlineno="828" tolineno="828" lineno="828" type="NoneType">None</Const>
                  </Assign>
                  <Return fromlineno="829" tolineno="829" lineno="829">
                    <Const fromlineno="829" tolineno="829" lineno="829" type="NoneType">None</Const>
                  </Return>
                </If>
              </For>
              <Assign fromlineno="831" tolineno="831" lineno="831" targets="[&lt;AssName(myval) l.831 [bb] at Ox9391d0c&gt;]" value="[string.join(myparts[:-2], '-'), myparts[-2], myparts[-1]]">
                <AssName fromlineno="831" tolineno="831" lineno="831" name="myval"/>
                <List fromlineno="831" tolineno="831" lineno="831">
                  <CallFunc fromlineno="831" tolineno="831" lineno="831" func="Getattr(join)">
                    <Getattr fromlineno="831" tolineno="831" lineno="831" attrname="join" expr="string">
                      <Name fromlineno="831" tolineno="831" lineno="831" name="string"/>
                    </Getattr>
                    <Subscript fromlineno="831" tolineno="831" lineno="831">
                      <Name fromlineno="831" tolineno="831" lineno="831" name="myparts"/>
                      <Slice fromlineno="831" tolineno="831" lineno="None">
                        <Const fromlineno="831" tolineno="831" lineno="831" type="int">-2</Const>
                      </Slice>
                    </Subscript>
                    <Const fromlineno="831" tolineno="831" lineno="831" type="str">'-'</Const>
                  </CallFunc>
                  <Subscript fromlineno="831" tolineno="831" lineno="831">
                    <Name fromlineno="831" tolineno="831" lineno="831" name="myparts"/>
                    <Index fromlineno="831" tolineno="831" lineno="None">
                      <Const fromlineno="831" tolineno="831" lineno="831" type="int">-2</Const>
                    </Index>
                  </Subscript>
                  <Subscript fromlineno="831" tolineno="831" lineno="831">
                    <Name fromlineno="831" tolineno="831" lineno="831" name="myparts"/>
                    <Index fromlineno="831" tolineno="831" lineno="None">
                      <Const fromlineno="831" tolineno="831" lineno="831" type="int">-1</Const>
                    </Index>
                  </Subscript>
                </List>
              </Assign>
              <Assign fromlineno="832" tolineno="832" lineno="832" targets="[&lt;Subscript() l.832 [bb] at Ox9391fec&gt;]" value="myval">
                <Subscript fromlineno="832" tolineno="832" lineno="832">
                  <Name fromlineno="832" tolineno="832" lineno="832" name="__pkgsplit_cache__"/>
                  <Index fromlineno="832" tolineno="832" lineno="None">
                    <Name fromlineno="832" tolineno="832" lineno="832" name="mypkg"/>
                  </Index>
                </Subscript>
                <Name fromlineno="832" tolineno="832" lineno="832" name="myval"/>
              </Assign>
              <Return fromlineno="833" tolineno="833" lineno="833">
                <Name fromlineno="833" tolineno="833" lineno="833" name="myval"/>
              </Return>
            </If>
            <Assign fromlineno="835" tolineno="835" lineno="835" targets="[&lt;Subscript() l.835 [bb] at Ox939510c&gt;]" value="None">
              <Subscript fromlineno="835" tolineno="835" lineno="835">
                <Name fromlineno="835" tolineno="835" lineno="835" name="__pkgsplit_cache__"/>
                <Index fromlineno="835" tolineno="835" lineno="None">
                  <Name fromlineno="835" tolineno="835" lineno="835" name="mypkg"/>
                </Index>
              </Subscript>
              <Const fromlineno="835" tolineno="835" lineno="835" type="NoneType">None</Const>
            </Assign>
            <Return fromlineno="836" tolineno="836" lineno="836">
              <Const fromlineno="836" tolineno="836" lineno="836" type="NoneType">None</Const>
            </Return>
          </If>
          <If fromlineno="838" tolineno="855" lineno="838">
            <CallFunc fromlineno="838" tolineno="838" lineno="838" func="Name(ververify)">
              <Name fromlineno="838" tolineno="838" lineno="838" name="ververify"/>
              <Subscript fromlineno="838" tolineno="838" lineno="838">
                <Name fromlineno="838" tolineno="838" lineno="838" name="myparts"/>
                <Index fromlineno="838" tolineno="838" lineno="None">
                  <Const fromlineno="838" tolineno="838" lineno="838" type="int">-1</Const>
                </Index>
              </Subscript>
              <Name fromlineno="838" tolineno="838" lineno="838" name="silent"/>
            </CallFunc>
            <If fromlineno="839" tolineno="852" lineno="839">
              <Compare fromlineno="839" tolineno="839" lineno="839" op="('==', &lt;Const(int) l.839 [bb] at Ox939544c&gt;)">
                <CallFunc fromlineno="839" tolineno="839" lineno="839" func="Name(len)">
                  <Name fromlineno="839" tolineno="839" lineno="839" name="len"/>
                  <Name fromlineno="839" tolineno="839" lineno="839" name="myparts"/>
                </CallFunc>
                <Const fromlineno="839" tolineno="839" lineno="839" type="int">1</Const>
              </Compare>
              <If fromlineno="840" tolineno="841" lineno="840">
                <UnaryOp fromlineno="840" tolineno="840" lineno="840">
                  <Name fromlineno="840" tolineno="840" lineno="840" name="silent"/>
                </UnaryOp>
                <Print fromlineno="841" tolineno="841" lineno="841">
                  <Const fromlineno="841" tolineno="841" lineno="841" type="str">'!!! Name error in'</Const>
                  <BinOp fromlineno="841" tolineno="841" lineno="841" op="+" left="mypkg" right="': missing name part.'">
                    <Name fromlineno="841" tolineno="841" lineno="841" name="mypkg"/>
                    <Const fromlineno="841" tolineno="841" lineno="841" type="str">': missing name part.'</Const>
                  </BinOp>
                </Print>
              </If>
              <Assign fromlineno="842" tolineno="842" lineno="842" targets="[&lt;Subscript() l.842 [bb] at Ox939564c&gt;]" value="None">
                <Subscript fromlineno="842" tolineno="842" lineno="842">
                  <Name fromlineno="842" tolineno="842" lineno="842" name="__pkgsplit_cache__"/>
                  <Index fromlineno="842" tolineno="842" lineno="None">
                    <Name fromlineno="842" tolineno="842" lineno="842" name="mypkg"/>
                  </Index>
                </Subscript>
                <Const fromlineno="842" tolineno="842" lineno="842" type="NoneType">None</Const>
              </Assign>
              <Return fromlineno="843" tolineno="843" lineno="843">
                <Const fromlineno="843" tolineno="843" lineno="843" type="NoneType">None</Const>
              </Return>
              <For fromlineno="845" tolineno="849" lineno="845">
                <AssName fromlineno="845" tolineno="845" lineno="845" name="x"/>
                <Subscript fromlineno="845" tolineno="845" lineno="845">
                  <Name fromlineno="845" tolineno="845" lineno="845" name="myparts"/>
                  <Slice fromlineno="845" tolineno="845" lineno="None">
                    <Const fromlineno="845" tolineno="845" lineno="845" type="int">-1</Const>
                  </Slice>
                </Subscript>
                <If fromlineno="846" tolineno="849" lineno="846">
                  <CallFunc fromlineno="846" tolineno="846" lineno="846" func="Name(ververify)">
                    <Name fromlineno="846" tolineno="846" lineno="846" name="ververify"/>
                    <Name fromlineno="846" tolineno="846" lineno="846" name="x"/>
                  </CallFunc>
                  <If fromlineno="847" tolineno="847" lineno="847">
                    <UnaryOp fromlineno="847" tolineno="847" lineno="847">
                      <Name fromlineno="847" tolineno="847" lineno="847" name="silent"/>
                    </UnaryOp>
                    <Discard fromlineno="847" tolineno="847" lineno="847">
                      <CallFunc fromlineno="847" tolineno="847" lineno="847" func="Name(error)">
                        <Name fromlineno="847" tolineno="847" lineno="847" name="error"/>
                        <Const fromlineno="847" tolineno="847" lineno="847" type="str">'package name has multiple version parts'</Const>
                      </CallFunc>
                    </Discard>
                  </If>
                  <Assign fromlineno="848" tolineno="848" lineno="848" targets="[&lt;Subscript() l.848 [bb] at Ox9395acc&gt;]" value="None">
                    <Subscript fromlineno="848" tolineno="848" lineno="848">
                      <Name fromlineno="848" tolineno="848" lineno="848" name="__pkgsplit_cache__"/>
                      <Index fromlineno="848" tolineno="848" lineno="None">
                        <Name fromlineno="848" tolineno="848" lineno="848" name="mypkg"/>
                      </Index>
                    </Subscript>
                    <Const fromlineno="848" tolineno="848" lineno="848" type="NoneType">None</Const>
                  </Assign>
                  <Return fromlineno="849" tolineno="849" lineno="849">
                    <Const fromlineno="849" tolineno="849" lineno="849" type="NoneType">None</Const>
                  </Return>
                </If>
              </For>
              <Assign fromlineno="850" tolineno="850" lineno="850" targets="[&lt;AssName(myval) l.850 [bb] at Ox9395bcc&gt;]" value="[string.join(myparts[:-1], '-'), myparts[-1], 'r0']">
                <AssName fromlineno="850" tolineno="850" lineno="850" name="myval"/>
                <List fromlineno="850" tolineno="850" lineno="850">
                  <CallFunc fromlineno="850" tolineno="850" lineno="850" func="Getattr(join)">
                    <Getattr fromlineno="850" tolineno="850" lineno="850" attrname="join" expr="string">
                      <Name fromlineno="850" tolineno="850" lineno="850" name="string"/>
                    </Getattr>
                    <Subscript fromlineno="850" tolineno="850" lineno="850">
                      <Name fromlineno="850" tolineno="850" lineno="850" name="myparts"/>
                      <Slice fromlineno="850" tolineno="850" lineno="None">
                        <Const fromlineno="850" tolineno="850" lineno="850" type="int">-1</Const>
                      </Slice>
                    </Subscript>
                    <Const fromlineno="850" tolineno="850" lineno="850" type="str">'-'</Const>
                  </CallFunc>
                  <Subscript fromlineno="850" tolineno="850" lineno="850">
                    <Name fromlineno="850" tolineno="850" lineno="850" name="myparts"/>
                    <Index fromlineno="850" tolineno="850" lineno="None">
                      <Const fromlineno="850" tolineno="850" lineno="850" type="int">-1</Const>
                    </Index>
                  </Subscript>
                  <Const fromlineno="850" tolineno="850" lineno="850" type="str">'r0'</Const>
                </List>
              </Assign>
              <Assign fromlineno="851" tolineno="851" lineno="851" targets="[&lt;Subscript() l.851 [bb] at Ox9395e2c&gt;]" value="myval">
                <Subscript fromlineno="851" tolineno="851" lineno="851">
                  <Name fromlineno="851" tolineno="851" lineno="851" name="__pkgsplit_cache__"/>
                  <Index fromlineno="851" tolineno="851" lineno="None">
                    <Name fromlineno="851" tolineno="851" lineno="851" name="mypkg"/>
                  </Index>
                </Subscript>
                <Name fromlineno="851" tolineno="851" lineno="851" name="myval"/>
              </Assign>
              <Return fromlineno="852" tolineno="852" lineno="852">
                <Name fromlineno="852" tolineno="852" lineno="852" name="myval"/>
              </Return>
            </If>
            <Assign fromlineno="854" tolineno="854" lineno="854" targets="[&lt;Subscript() l.854 [bb] at Ox9395f2c&gt;]" value="None">
              <Subscript fromlineno="854" tolineno="854" lineno="854">
                <Name fromlineno="854" tolineno="854" lineno="854" name="__pkgsplit_cache__"/>
                <Index fromlineno="854" tolineno="854" lineno="None">
                  <Name fromlineno="854" tolineno="854" lineno="854" name="mypkg"/>
                </Index>
              </Subscript>
              <Const fromlineno="854" tolineno="854" lineno="854" type="NoneType">None</Const>
            </Assign>
            <Return fromlineno="855" tolineno="855" lineno="855">
              <Const fromlineno="855" tolineno="855" lineno="855" type="NoneType">None</Const>
            </Return>
          </If>
        </If>
      </Function>
      <Assign fromlineno="860" tolineno="860" lineno="860" targets="[&lt;AssName(__catpkgsplit_cache__) l.860 [bb] at Ox93951cc&gt;]" value="{}">
        <AssName fromlineno="860" tolineno="860" lineno="860" name="__catpkgsplit_cache__"/>
        <Dict fromlineno="860" tolineno="860" lineno="860"/>
      </Assign>
      <Function fromlineno="862" tolineno="895" lineno="862">
        <Arguments fromlineno="862" tolineno="862" lineno="None" format_args="mydata, silent=1">
          <AssName fromlineno="862" tolineno="862" lineno="862" name="mydata"/>
          <AssName fromlineno="862" tolineno="862" lineno="862" name="silent"/>
          <Const fromlineno="862" tolineno="862" lineno="862" type="int">1</Const>
        </Arguments>
        <TryExcept fromlineno="871" tolineno="874" lineno="871">
          <Return fromlineno="872" tolineno="872" lineno="872">
            <Subscript fromlineno="872" tolineno="872" lineno="872">
              <Name fromlineno="872" tolineno="872" lineno="872" name="__catpkgsplit_cache__"/>
              <Index fromlineno="872" tolineno="872" lineno="None">
                <Name fromlineno="872" tolineno="872" lineno="872" name="mydata"/>
              </Index>
            </Subscript>
          </Return>
          <ExceptHandler fromlineno="873" tolineno="874" lineno="873">
            <Name fromlineno="873" tolineno="873" lineno="873" name="KeyError"/>
            <Pass fromlineno="874" tolineno="874" lineno="874"/>
          </ExceptHandler>
        </TryExcept>
        <Assign fromlineno="876" tolineno="876" lineno="876" targets="[&lt;AssName(cat) l.876 [bb] at Ox939a36c&gt;]" value="os.path.basename(os.path.dirname(mydata))">
          <AssName fromlineno="876" tolineno="876" lineno="876" name="cat"/>
          <CallFunc fromlineno="876" tolineno="876" lineno="876" func="Getattr(basename)">
            <Getattr fromlineno="876" tolineno="876" lineno="876" attrname="basename" expr="os.path">
              <Getattr fromlineno="876" tolineno="876" lineno="876" attrname="path" expr="os">
                <Name fromlineno="876" tolineno="876" lineno="876" name="os"/>
              </Getattr>
            </Getattr>
            <CallFunc fromlineno="876" tolineno="876" lineno="876" func="Getattr(dirname)">
              <Getattr fromlineno="876" tolineno="876" lineno="876" attrname="dirname" expr="os.path">
                <Getattr fromlineno="876" tolineno="876" lineno="876" attrname="path" expr="os">
                  <Name fromlineno="876" tolineno="876" lineno="876" name="os"/>
                </Getattr>
              </Getattr>
              <Name fromlineno="876" tolineno="876" lineno="876" name="mydata"/>
            </CallFunc>
          </CallFunc>
        </Assign>
        <Assign fromlineno="877" tolineno="877" lineno="877" targets="[&lt;AssName(mydata) l.877 [bb] at Ox939a54c&gt;]" value="os.path.join(cat, os.path.basename(mydata))">
          <AssName fromlineno="877" tolineno="877" lineno="877" name="mydata"/>
          <CallFunc fromlineno="877" tolineno="877" lineno="877" func="Getattr(join)">
            <Getattr fromlineno="877" tolineno="877" lineno="877" attrname="join" expr="os.path">
              <Getattr fromlineno="877" tolineno="877" lineno="877" attrname="path" expr="os">
                <Name fromlineno="877" tolineno="877" lineno="877" name="os"/>
              </Getattr>
            </Getattr>
            <Name fromlineno="877" tolineno="877" lineno="877" name="cat"/>
            <CallFunc fromlineno="877" tolineno="877" lineno="877" func="Getattr(basename)">
              <Getattr fromlineno="877" tolineno="877" lineno="877" attrname="basename" expr="os.path">
                <Getattr fromlineno="877" tolineno="877" lineno="877" attrname="path" expr="os">
                  <Name fromlineno="877" tolineno="877" lineno="877" name="os"/>
                </Getattr>
              </Getattr>
              <Name fromlineno="877" tolineno="877" lineno="877" name="mydata"/>
            </CallFunc>
          </CallFunc>
        </Assign>
        <If fromlineno="878" tolineno="879" lineno="878">
          <Compare fromlineno="878" tolineno="878" lineno="878" op="('==', &lt;Const(str) l.878 [bb] at Ox939a7ec&gt;)">
            <Subscript fromlineno="878" tolineno="878" lineno="878">
              <Name fromlineno="878" tolineno="878" lineno="878" name="mydata"/>
              <Slice fromlineno="878" tolineno="878" lineno="None">
                <Const fromlineno="878" tolineno="878" lineno="878" type="int">-3</Const>
              </Slice>
            </Subscript>
            <Const fromlineno="878" tolineno="878" lineno="878" type="str">'.bb'</Const>
          </Compare>
          <Assign fromlineno="879" tolineno="879" lineno="879" targets="[&lt;AssName(mydata) l.879 [bb] at Ox939a86c&gt;]" value="mydata[:-3]">
            <AssName fromlineno="879" tolineno="879" lineno="879" name="mydata"/>
            <Subscript fromlineno="879" tolineno="879" lineno="879">
              <Name fromlineno="879" tolineno="879" lineno="879" name="mydata"/>
              <Slice fromlineno="879" tolineno="879" lineno="None">
                <Const fromlineno="879" tolineno="879" lineno="879" type="int">-3</Const>
              </Slice>
            </Subscript>
          </Assign>
        </If>
        <Assign fromlineno="881" tolineno="881" lineno="881" targets="[&lt;AssName(mysplit) l.881 [bb] at Ox939a94c&gt;]" value="mydata.split('/')">
          <AssName fromlineno="881" tolineno="881" lineno="881" name="mysplit"/>
          <CallFunc fromlineno="881" tolineno="881" lineno="881" func="Getattr(split)">
            <Getattr fromlineno="881" tolineno="881" lineno="881" attrname="split" expr="mydata">
              <Name fromlineno="881" tolineno="881" lineno="881" name="mydata"/>
            </Getattr>
            <Const fromlineno="881" tolineno="881" lineno="881" type="str">'/'</Const>
          </CallFunc>
        </Assign>
        <Assign fromlineno="882" tolineno="882" lineno="882" targets="[&lt;AssName(p_split) l.882 [bb] at Ox939aa6c&gt;]" value="None">
          <AssName fromlineno="882" tolineno="882" lineno="882" name="p_split"/>
          <Const fromlineno="882" tolineno="882" lineno="882" type="NoneType">None</Const>
        </Assign>
        <Assign fromlineno="883" tolineno="883" lineno="883" targets="[&lt;AssName(splitlen) l.883 [bb] at Ox939ab0c&gt;]" value="len(mysplit)">
          <AssName fromlineno="883" tolineno="883" lineno="883" name="splitlen"/>
          <CallFunc fromlineno="883" tolineno="883" lineno="883" func="Name(len)">
            <Name fromlineno="883" tolineno="883" lineno="883" name="len"/>
            <Name fromlineno="883" tolineno="883" lineno="883" name="mysplit"/>
          </CallFunc>
        </Assign>
        <If fromlineno="884" tolineno="889" lineno="884">
          <Compare fromlineno="884" tolineno="884" lineno="884" op="('==', &lt;Const(int) l.884 [bb] at Ox939ac6c&gt;)">
            <Name fromlineno="884" tolineno="884" lineno="884" name="splitlen"/>
            <Const fromlineno="884" tolineno="884" lineno="884" type="int">1</Const>
          </Compare>
          <Assign fromlineno="885" tolineno="885" lineno="885" targets="[&lt;AssName(retval) l.885 [bb] at Ox939acec&gt;]" value="[None]">
            <AssName fromlineno="885" tolineno="885" lineno="885" name="retval"/>
            <List fromlineno="885" tolineno="885" lineno="885">
              <Const fromlineno="885" tolineno="885" lineno="885" type="NoneType">None</Const>
            </List>
          </Assign>
          <Assign fromlineno="886" tolineno="886" lineno="886" targets="[&lt;AssName(p_split) l.886 [bb] at Ox939adcc&gt;]" value="pkgsplit(mydata, silent)">
            <AssName fromlineno="886" tolineno="886" lineno="886" name="p_split"/>
            <CallFunc fromlineno="886" tolineno="886" lineno="886" func="Name(pkgsplit)">
              <Name fromlineno="886" tolineno="886" lineno="886" name="pkgsplit"/>
              <Name fromlineno="886" tolineno="886" lineno="886" name="mydata"/>
              <Name fromlineno="886" tolineno="886" lineno="886" name="silent"/>
            </CallFunc>
          </Assign>
          <Assign fromlineno="888" tolineno="888" lineno="888" targets="[&lt;AssName(retval) l.888 [bb] at Ox939aeec&gt;]" value="[mysplit[(splitlen) - (2)]]">
            <AssName fromlineno="888" tolineno="888" lineno="888" name="retval"/>
            <List fromlineno="888" tolineno="888" lineno="888">
              <Subscript fromlineno="888" tolineno="888" lineno="888">
                <Name fromlineno="888" tolineno="888" lineno="888" name="mysplit"/>
                <Index fromlineno="888" tolineno="888" lineno="None">
                  <BinOp fromlineno="888" tolineno="888" lineno="888" op="-" left="splitlen" right="2">
                    <Name fromlineno="888" tolineno="888" lineno="888" name="splitlen"/>
                    <Const fromlineno="888" tolineno="888" lineno="888" type="int">2</Const>
                  </BinOp>
                </Index>
              </Subscript>
            </List>
          </Assign>
          <Assign fromlineno="889" tolineno="889" lineno="889" targets="[&lt;AssName(p_split) l.889 [bb] at Ox939e06c&gt;]" value="pkgsplit(mysplit[(splitlen) - (1)], silent)">
            <AssName fromlineno="889" tolineno="889" lineno="889" name="p_split"/>
            <CallFunc fromlineno="889" tolineno="889" lineno="889" func="Name(pkgsplit)">
              <Name fromlineno="889" tolineno="889" lineno="889" name="pkgsplit"/>
              <Subscript fromlineno="889" tolineno="889" lineno="889">
                <Name fromlineno="889" tolineno="889" lineno="889" name="mysplit"/>
                <Index fromlineno="889" tolineno="889" lineno="None">
                  <BinOp fromlineno="889" tolineno="889" lineno="889" op="-" left="splitlen" right="1">
                    <Name fromlineno="889" tolineno="889" lineno="889" name="splitlen"/>
                    <Const fromlineno="889" tolineno="889" lineno="889" type="int">1</Const>
                  </BinOp>
                </Index>
              </Subscript>
              <Name fromlineno="889" tolineno="889" lineno="889" name="silent"/>
            </CallFunc>
          </Assign>
        </If>
        <If fromlineno="890" tolineno="892" lineno="890">
          <UnaryOp fromlineno="890" tolineno="890" lineno="890">
            <Name fromlineno="890" tolineno="890" lineno="890" name="p_split"/>
          </UnaryOp>
          <Assign fromlineno="891" tolineno="891" lineno="891" targets="[&lt;Subscript() l.891 [bb] at Ox939e28c&gt;]" value="None">
            <Subscript fromlineno="891" tolineno="891" lineno="891">
              <Name fromlineno="891" tolineno="891" lineno="891" name="__catpkgsplit_cache__"/>
              <Index fromlineno="891" tolineno="891" lineno="None">
                <Name fromlineno="891" tolineno="891" lineno="891" name="mydata"/>
              </Index>
            </Subscript>
            <Const fromlineno="891" tolineno="891" lineno="891" type="NoneType">None</Const>
          </Assign>
          <Return fromlineno="892" tolineno="892" lineno="892">
            <Const fromlineno="892" tolineno="892" lineno="892" type="NoneType">None</Const>
          </Return>
        </If>
        <Discard fromlineno="893" tolineno="893" lineno="893">
          <CallFunc fromlineno="893" tolineno="893" lineno="893" func="Getattr(extend)">
            <Getattr fromlineno="893" tolineno="893" lineno="893" attrname="extend" expr="retval">
              <Name fromlineno="893" tolineno="893" lineno="893" name="retval"/>
            </Getattr>
            <Name fromlineno="893" tolineno="893" lineno="893" name="p_split"/>
          </CallFunc>
        </Discard>
        <Assign fromlineno="894" tolineno="894" lineno="894" targets="[&lt;Subscript() l.894 [bb] at Ox939e46c&gt;]" value="retval">
          <Subscript fromlineno="894" tolineno="894" lineno="894">
            <Name fromlineno="894" tolineno="894" lineno="894" name="__catpkgsplit_cache__"/>
            <Index fromlineno="894" tolineno="894" lineno="None">
              <Name fromlineno="894" tolineno="894" lineno="894" name="mydata"/>
            </Index>
          </Subscript>
          <Name fromlineno="894" tolineno="894" lineno="894" name="retval"/>
        </Assign>
        <Return fromlineno="895" tolineno="895" lineno="895">
          <Name fromlineno="895" tolineno="895" lineno="895" name="retval"/>
        </Return>
      </Function>
      <Assign fromlineno="900" tolineno="900" lineno="900" targets="[&lt;AssName(__vercmp_cache__) l.900 [bb] at Ox939e56c&gt;]" value="{}">
        <AssName fromlineno="900" tolineno="900" lineno="900" name="__vercmp_cache__"/>
        <Dict fromlineno="900" tolineno="900" lineno="900"/>
      </Assign>
      <Function fromlineno="902" tolineno="988" lineno="902">
        <Arguments fromlineno="902" tolineno="902" lineno="None" format_args="val1, val2">
          <AssName fromlineno="902" tolineno="902" lineno="902" name="val1"/>
          <AssName fromlineno="902" tolineno="902" lineno="902" name="val2"/>
        </Arguments>
        <If fromlineno="919" tolineno="920" lineno="919">
          <Compare fromlineno="919" tolineno="919" lineno="919" op="('==', &lt;Name(val2) l.919 [bb] at Ox939e7ac&gt;)">
            <Name fromlineno="919" tolineno="919" lineno="919" name="val1"/>
            <Name fromlineno="919" tolineno="919" lineno="919" name="val2"/>
          </Compare>
          <Return fromlineno="920" tolineno="920" lineno="920">
            <Const fromlineno="920" tolineno="920" lineno="920" type="int">0</Const>
          </Return>
        </If>
        <Assign fromlineno="921" tolineno="921" lineno="921" targets="[&lt;AssName(valkey) l.921 [bb] at Ox939e86c&gt;]" value="((val1) + (' ')) + (val2)">
          <AssName fromlineno="921" tolineno="921" lineno="921" name="valkey"/>
          <BinOp fromlineno="921" tolineno="921" lineno="921" op="+" left="(val1) + (' ')" right="val2">
            <BinOp fromlineno="921" tolineno="921" lineno="921" op="+" left="val1" right="' '">
              <Name fromlineno="921" tolineno="921" lineno="921" name="val1"/>
              <Const fromlineno="921" tolineno="921" lineno="921" type="str">' '</Const>
            </BinOp>
            <Name fromlineno="921" tolineno="921" lineno="921" name="val2"/>
          </BinOp>
        </Assign>
        <TryExcept fromlineno="924" tolineno="931" lineno="924">
          <Return fromlineno="925" tolineno="925" lineno="925">
            <Subscript fromlineno="925" tolineno="925" lineno="925">
              <Name fromlineno="925" tolineno="925" lineno="925" name="__vercmp_cache__"/>
              <Index fromlineno="925" tolineno="925" lineno="None">
                <Name fromlineno="925" tolineno="925" lineno="925" name="valkey"/>
              </Index>
            </Subscript>
          </Return>
          <TryExcept fromlineno="926" tolineno="929" lineno="926">
            <Return fromlineno="927" tolineno="927" lineno="927">
              <UnaryOp fromlineno="927" tolineno="927" lineno="927">
                <Subscript fromlineno="927" tolineno="927" lineno="927">
                  <Name fromlineno="927" tolineno="927" lineno="927" name="__vercmp_cache__"/>
                  <Index fromlineno="927" tolineno="927" lineno="None">
                    <BinOp fromlineno="927" tolineno="927" lineno="927" op="+" left="(val2) + (' ')" right="val1">
                      <BinOp fromlineno="927" tolineno="927" lineno="927" op="+" left="val2" right="' '">
                        <Name fromlineno="927" tolineno="927" lineno="927" name="val2"/>
                        <Const fromlineno="927" tolineno="927" lineno="927" type="str">' '</Const>
                      </BinOp>
                      <Name fromlineno="927" tolineno="927" lineno="927" name="val1"/>
                    </BinOp>
                  </Index>
                </Subscript>
              </UnaryOp>
            </Return>
            <ExceptHandler fromlineno="928" tolineno="929" lineno="928">
              <Name fromlineno="928" tolineno="928" lineno="928" name="KeyError"/>
              <Pass fromlineno="929" tolineno="929" lineno="929"/>
            </ExceptHandler>
          </TryExcept>
          <ExceptHandler fromlineno="930" tolineno="931" lineno="930">
            <Name fromlineno="930" tolineno="930" lineno="930" name="KeyError"/>
            <Pass fromlineno="931" tolineno="931" lineno="931"/>
          </ExceptHandler>
        </TryExcept>
        <Assign fromlineno="939" tolineno="939" lineno="939" targets="[&lt;AssName(val1_prepart) l.939 [bb] at Ox939ed6c&gt;, &lt;AssName(val2_prepart) l.939 [bb] at Ox939edac&gt;]" value="''">
          <AssName fromlineno="939" tolineno="939" lineno="939" name="val1_prepart"/>
          <AssName fromlineno="939" tolineno="939" lineno="939" name="val2_prepart"/>
          <Const fromlineno="939" tolineno="939" lineno="939" type="str">''</Const>
        </Assign>
        <If fromlineno="940" tolineno="941" lineno="940">
          <CallFunc fromlineno="940" tolineno="940" lineno="940" func="Getattr(count)">
            <Getattr fromlineno="940" tolineno="940" lineno="940" attrname="count" expr="val1">
              <Name fromlineno="940" tolineno="940" lineno="940" name="val1"/>
            </Getattr>
            <Const fromlineno="940" tolineno="940" lineno="940" type="str">'_'</Const>
          </CallFunc>
          <Assign fromlineno="941" tolineno="941" lineno="941" targets="[&lt;Tuple(tuple) l.941 [bb] at Ox939ef4c&gt;]" value="val1.split('_', 1)">
            <Tuple fromlineno="941" tolineno="941" lineno="941">
              <AssName fromlineno="941" tolineno="941" lineno="941" name="val1"/>
              <AssName fromlineno="941" tolineno="941" lineno="941" name="val1_prepart"/>
            </Tuple>
            <CallFunc fromlineno="941" tolineno="941" lineno="941" func="Getattr(split)">
              <Getattr fromlineno="941" tolineno="941" lineno="941" attrname="split" expr="val1">
                <Name fromlineno="941" tolineno="941" lineno="941" name="val1"/>
              </Getattr>
              <Const fromlineno="941" tolineno="941" lineno="941" type="str">'_'</Const>
              <Const fromlineno="941" tolineno="941" lineno="941" type="int">1</Const>
            </CallFunc>
          </Assign>
        </If>
        <If fromlineno="942" tolineno="943" lineno="942">
          <CallFunc fromlineno="942" tolineno="942" lineno="942" func="Getattr(count)">
            <Getattr fromlineno="942" tolineno="942" lineno="942" attrname="count" expr="val2">
              <Name fromlineno="942" tolineno="942" lineno="942" name="val2"/>
            </Getattr>
            <Const fromlineno="942" tolineno="942" lineno="942" type="str">'_'</Const>
          </CallFunc>
          <Assign fromlineno="943" tolineno="943" lineno="943" targets="[&lt;Tuple(tuple) l.943 [bb] at Ox93a21ec&gt;]" value="val2.split('_', 1)">
            <Tuple fromlineno="943" tolineno="943" lineno="943">
              <AssName fromlineno="943" tolineno="943" lineno="943" name="val2"/>
              <AssName fromlineno="943" tolineno="943" lineno="943" name="val2_prepart"/>
            </Tuple>
            <CallFunc fromlineno="943" tolineno="943" lineno="943" func="Getattr(split)">
              <Getattr fromlineno="943" tolineno="943" lineno="943" attrname="split" expr="val2">
                <Name fromlineno="943" tolineno="943" lineno="943" name="val2"/>
              </Getattr>
              <Const fromlineno="943" tolineno="943" lineno="943" type="str">'_'</Const>
              <Const fromlineno="943" tolineno="943" lineno="943" type="int">1</Const>
            </CallFunc>
          </Assign>
        </If>
        <Assign fromlineno="948" tolineno="948" lineno="948" targets="[&lt;AssName(val1) l.948 [bb] at Ox93a236c&gt;]" value="string.split(val1, '-')">
          <AssName fromlineno="948" tolineno="948" lineno="948" name="val1"/>
          <CallFunc fromlineno="948" tolineno="948" lineno="948" func="Getattr(split)">
            <Getattr fromlineno="948" tolineno="948" lineno="948" attrname="split" expr="string">
              <Name fromlineno="948" tolineno="948" lineno="948" name="string"/>
            </Getattr>
            <Name fromlineno="948" tolineno="948" lineno="948" name="val1"/>
            <Const fromlineno="948" tolineno="948" lineno="948" type="str">'-'</Const>
          </CallFunc>
        </Assign>
        <If fromlineno="949" tolineno="950" lineno="949">
          <Compare fromlineno="949" tolineno="949" lineno="949" op="('==', &lt;Const(int) l.949 [bb] at Ox93a254c&gt;)">
            <CallFunc fromlineno="949" tolineno="949" lineno="949" func="Name(len)">
              <Name fromlineno="949" tolineno="949" lineno="949" name="len"/>
              <Name fromlineno="949" tolineno="949" lineno="949" name="val1"/>
            </CallFunc>
            <Const fromlineno="949" tolineno="949" lineno="949" type="int">2</Const>
          </Compare>
          <Assign fromlineno="950" tolineno="950" lineno="950" targets="[&lt;Subscript() l.950 [bb] at Ox93a25cc&gt;]" value="((val1[0]) + ('.')) + (val1[1])">
            <Subscript fromlineno="950" tolineno="950" lineno="950">
              <Name fromlineno="950" tolineno="950" lineno="950" name="val1"/>
              <Index fromlineno="950" tolineno="950" lineno="None">
                <Const fromlineno="950" tolineno="950" lineno="950" type="int">0</Const>
              </Index>
            </Subscript>
            <BinOp fromlineno="950" tolineno="950" lineno="950" op="+" left="(val1[0]) + ('.')" right="val1[1]">
              <BinOp fromlineno="950" tolineno="950" lineno="950" op="+" left="val1[0]" right="'.'">
                <Subscript fromlineno="950" tolineno="950" lineno="950">
                  <Name fromlineno="950" tolineno="950" lineno="950" name="val1"/>
                  <Index fromlineno="950" tolineno="950" lineno="None">
                    <Const fromlineno="950" tolineno="950" lineno="950" type="int">0</Const>
                  </Index>
                </Subscript>
                <Const fromlineno="950" tolineno="950" lineno="950" type="str">'.'</Const>
              </BinOp>
              <Subscript fromlineno="950" tolineno="950" lineno="950">
                <Name fromlineno="950" tolineno="950" lineno="950" name="val1"/>
                <Index fromlineno="950" tolineno="950" lineno="None">
                  <Const fromlineno="950" tolineno="950" lineno="950" type="int">1</Const>
                </Index>
              </Subscript>
            </BinOp>
          </Assign>
        </If>
        <Assign fromlineno="951" tolineno="951" lineno="951" targets="[&lt;AssName(val2) l.951 [bb] at Ox93a27ec&gt;]" value="string.split(val2, '-')">
          <AssName fromlineno="951" tolineno="951" lineno="951" name="val2"/>
          <CallFunc fromlineno="951" tolineno="951" lineno="951" func="Getattr(split)">
            <Getattr fromlineno="951" tolineno="951" lineno="951" attrname="split" expr="string">
              <Name fromlineno="951" tolineno="951" lineno="951" name="string"/>
            </Getattr>
            <Name fromlineno="951" tolineno="951" lineno="951" name="val2"/>
            <Const fromlineno="951" tolineno="951" lineno="951" type="str">'-'</Const>
          </CallFunc>
        </Assign>
        <If fromlineno="952" tolineno="953" lineno="952">
          <Compare fromlineno="952" tolineno="952" lineno="952" op="('==', &lt;Const(int) l.952 [bb] at Ox93a29cc&gt;)">
            <CallFunc fromlineno="952" tolineno="952" lineno="952" func="Name(len)">
              <Name fromlineno="952" tolineno="952" lineno="952" name="len"/>
              <Name fromlineno="952" tolineno="952" lineno="952" name="val2"/>
            </CallFunc>
            <Const fromlineno="952" tolineno="952" lineno="952" type="int">2</Const>
          </Compare>
          <Assign fromlineno="953" tolineno="953" lineno="953" targets="[&lt;Subscript() l.953 [bb] at Ox93a2a4c&gt;]" value="((val2[0]) + ('.')) + (val2[1])">
            <Subscript fromlineno="953" tolineno="953" lineno="953">
              <Name fromlineno="953" tolineno="953" lineno="953" name="val2"/>
              <Index fromlineno="953" tolineno="953" lineno="None">
                <Const fromlineno="953" tolineno="953" lineno="953" type="int">0</Const>
              </Index>
            </Subscript>
            <BinOp fromlineno="953" tolineno="953" lineno="953" op="+" left="(val2[0]) + ('.')" right="val2[1]">
              <BinOp fromlineno="953" tolineno="953" lineno="953" op="+" left="val2[0]" right="'.'">
                <Subscript fromlineno="953" tolineno="953" lineno="953">
                  <Name fromlineno="953" tolineno="953" lineno="953" name="val2"/>
                  <Index fromlineno="953" tolineno="953" lineno="None">
                    <Const fromlineno="953" tolineno="953" lineno="953" type="int">0</Const>
                  </Index>
                </Subscript>
                <Const fromlineno="953" tolineno="953" lineno="953" type="str">'.'</Const>
              </BinOp>
              <Subscript fromlineno="953" tolineno="953" lineno="953">
                <Name fromlineno="953" tolineno="953" lineno="953" name="val2"/>
                <Index fromlineno="953" tolineno="953" lineno="None">
                  <Const fromlineno="953" tolineno="953" lineno="953" type="int">1</Const>
                </Index>
              </Subscript>
            </BinOp>
          </Assign>
        </If>
        <Assign fromlineno="955" tolineno="955" lineno="955" targets="[&lt;AssName(val1) l.955 [bb] at Ox93a2c6c&gt;]" value="string.split(val1[0], '.')">
          <AssName fromlineno="955" tolineno="955" lineno="955" name="val1"/>
          <CallFunc fromlineno="955" tolineno="955" lineno="955" func="Getattr(split)">
            <Getattr fromlineno="955" tolineno="955" lineno="955" attrname="split" expr="string">
              <Name fromlineno="955" tolineno="955" lineno="955" name="string"/>
            </Getattr>
            <Subscript fromlineno="955" tolineno="955" lineno="955">
              <Name fromlineno="955" tolineno="955" lineno="955" name="val1"/>
              <Index fromlineno="955" tolineno="955" lineno="None">
                <Const fromlineno="955" tolineno="955" lineno="955" type="int">0</Const>
              </Index>
            </Subscript>
            <Const fromlineno="955" tolineno="955" lineno="955" type="str">'.'</Const>
          </CallFunc>
        </Assign>
        <Assign fromlineno="956" tolineno="956" lineno="956" targets="[&lt;AssName(val2) l.956 [bb] at Ox93a2dec&gt;]" value="string.split(val2[0], '.')">
          <AssName fromlineno="956" tolineno="956" lineno="956" name="val2"/>
          <CallFunc fromlineno="956" tolineno="956" lineno="956" func="Getattr(split)">
            <Getattr fromlineno="956" tolineno="956" lineno="956" attrname="split" expr="string">
              <Name fromlineno="956" tolineno="956" lineno="956" name="string"/>
            </Getattr>
            <Subscript fromlineno="956" tolineno="956" lineno="956">
              <Name fromlineno="956" tolineno="956" lineno="956" name="val2"/>
              <Index fromlineno="956" tolineno="956" lineno="None">
                <Const fromlineno="956" tolineno="956" lineno="956" type="int">0</Const>
              </Index>
            </Subscript>
            <Const fromlineno="956" tolineno="956" lineno="956" type="str">'.'</Const>
          </CallFunc>
        </Assign>
        <For fromlineno="959" tolineno="961" lineno="959">
          <AssName fromlineno="959" tolineno="959" lineno="959" name="x"/>
          <CallFunc fromlineno="959" tolineno="959" lineno="959" func="Name(range)">
            <Name fromlineno="959" tolineno="959" lineno="959" name="range"/>
            <Const fromlineno="959" tolineno="959" lineno="959" type="int">1</Const>
            <CallFunc fromlineno="959" tolineno="959" lineno="959" func="Name(len)">
              <Name fromlineno="959" tolineno="959" lineno="959" name="len"/>
              <Name fromlineno="959" tolineno="959" lineno="959" name="val1"/>
            </CallFunc>
          </CallFunc>
          <If fromlineno="960" tolineno="961" lineno="960">
            <Compare fromlineno="960" tolineno="960" lineno="960" op="('==', &lt;Const(str) l.960 [bb] at Ox93a624c&gt;)">
              <Subscript fromlineno="960" tolineno="960" lineno="960">
                <Subscript fromlineno="960" tolineno="960" lineno="960">
                  <Name fromlineno="960" tolineno="960" lineno="960" name="val1"/>
                  <Index fromlineno="960" tolineno="960" lineno="None">
                    <Name fromlineno="960" tolineno="960" lineno="960" name="x"/>
                  </Index>
                </Subscript>
                <Index fromlineno="960" tolineno="960" lineno="None">
                  <Const fromlineno="960" tolineno="960" lineno="960" type="int">0</Const>
                </Index>
              </Subscript>
              <Const fromlineno="960" tolineno="960" lineno="960" type="str">'0'</Const>
            </Compare>
            <Assign fromlineno="961" tolineno="961" lineno="961" targets="[&lt;Subscript() l.961 [bb] at Ox93a62cc&gt;]" value="('.') + (val1[x])">
              <Subscript fromlineno="961" tolineno="961" lineno="961">
                <Name fromlineno="961" tolineno="961" lineno="961" name="val1"/>
                <Index fromlineno="961" tolineno="961" lineno="None">
                  <Name fromlineno="961" tolineno="961" lineno="961" name="x"/>
                </Index>
              </Subscript>
              <BinOp fromlineno="961" tolineno="961" lineno="961" op="+" left="'.'" right="val1[x]">
                <Const fromlineno="961" tolineno="961" lineno="961" type="str">'.'</Const>
                <Subscript fromlineno="961" tolineno="961" lineno="961">
                  <Name fromlineno="961" tolineno="961" lineno="961" name="val1"/>
                  <Index fromlineno="961" tolineno="961" lineno="None">
                    <Name fromlineno="961" tolineno="961" lineno="961" name="x"/>
                  </Index>
                </Subscript>
              </BinOp>
            </Assign>
          </If>
        </For>
        <For fromlineno="962" tolineno="964" lineno="962">
          <AssName fromlineno="962" tolineno="962" lineno="962" name="x"/>
          <CallFunc fromlineno="962" tolineno="962" lineno="962" func="Name(range)">
            <Name fromlineno="962" tolineno="962" lineno="962" name="range"/>
            <Const fromlineno="962" tolineno="962" lineno="962" type="int">1</Const>
            <CallFunc fromlineno="962" tolineno="962" lineno="962" func="Name(len)">
              <Name fromlineno="962" tolineno="962" lineno="962" name="len"/>
              <Name fromlineno="962" tolineno="962" lineno="962" name="val2"/>
            </CallFunc>
          </CallFunc>
          <If fromlineno="963" tolineno="964" lineno="963">
            <Compare fromlineno="963" tolineno="963" lineno="963" op="('==', &lt;Const(str) l.963 [bb] at Ox93a66ec&gt;)">
              <Subscript fromlineno="963" tolineno="963" lineno="963">
                <Subscript fromlineno="963" tolineno="963" lineno="963">
                  <Name fromlineno="963" tolineno="963" lineno="963" name="val2"/>
                  <Index fromlineno="963" tolineno="963" lineno="None">
                    <Name fromlineno="963" tolineno="963" lineno="963" name="x"/>
                  </Index>
                </Subscript>
                <Index fromlineno="963" tolineno="963" lineno="None">
                  <Const fromlineno="963" tolineno="963" lineno="963" type="int">0</Const>
                </Index>
              </Subscript>
              <Const fromlineno="963" tolineno="963" lineno="963" type="str">'0'</Const>
            </Compare>
            <Assign fromlineno="964" tolineno="964" lineno="964" targets="[&lt;Subscript() l.964 [bb] at Ox93a676c&gt;]" value="('.') + (val2[x])">
              <Subscript fromlineno="964" tolineno="964" lineno="964">
                <Name fromlineno="964" tolineno="964" lineno="964" name="val2"/>
                <Index fromlineno="964" tolineno="964" lineno="None">
                  <Name fromlineno="964" tolineno="964" lineno="964" name="x"/>
                </Index>
              </Subscript>
              <BinOp fromlineno="964" tolineno="964" lineno="964" op="+" left="'.'" right="val2[x]">
                <Const fromlineno="964" tolineno="964" lineno="964" type="str">'.'</Const>
                <Subscript fromlineno="964" tolineno="964" lineno="964">
                  <Name fromlineno="964" tolineno="964" lineno="964" name="val2"/>
                  <Index fromlineno="964" tolineno="964" lineno="None">
                    <Name fromlineno="964" tolineno="964" lineno="964" name="x"/>
                  </Index>
                </Subscript>
              </BinOp>
            </Assign>
          </If>
        </For>
        <If fromlineno="967" tolineno="970" lineno="967">
          <Compare fromlineno="967" tolineno="967" lineno="967" op="('&lt;', &lt;CallFunc() l.967 [bb] at Ox93a69ac&gt;)">
            <CallFunc fromlineno="967" tolineno="967" lineno="967" func="Name(len)">
              <Name fromlineno="967" tolineno="967" lineno="967" name="len"/>
              <Name fromlineno="967" tolineno="967" lineno="967" name="val2"/>
            </CallFunc>
            <CallFunc fromlineno="967" tolineno="967" lineno="967" func="Name(len)">
              <Name fromlineno="967" tolineno="967" lineno="967" name="len"/>
              <Name fromlineno="967" tolineno="967" lineno="967" name="val1"/>
            </CallFunc>
          </Compare>
          <Discard fromlineno="968" tolineno="968" lineno="968">
            <CallFunc fromlineno="968" tolineno="968" lineno="968" func="Getattr(extend)">
              <Getattr fromlineno="968" tolineno="968" lineno="968" attrname="extend" expr="val2">
                <Name fromlineno="968" tolineno="968" lineno="968" name="val2"/>
              </Getattr>
              <BinOp fromlineno="968" tolineno="968" lineno="968" op="*" left="['0']" right="(len(val1)) - (len(val2))">
                <List fromlineno="968" tolineno="968" lineno="968">
                  <Const fromlineno="968" tolineno="968" lineno="968" type="str">'0'</Const>
                </List>
                <BinOp fromlineno="968" tolineno="968" lineno="968" op="-" left="len(val1)" right="len(val2)">
                  <CallFunc fromlineno="968" tolineno="968" lineno="968" func="Name(len)">
                    <Name fromlineno="968" tolineno="968" lineno="968" name="len"/>
                    <Name fromlineno="968" tolineno="968" lineno="968" name="val1"/>
                  </CallFunc>
                  <CallFunc fromlineno="968" tolineno="968" lineno="968" func="Name(len)">
                    <Name fromlineno="968" tolineno="968" lineno="968" name="len"/>
                    <Name fromlineno="968" tolineno="968" lineno="968" name="val2"/>
                  </CallFunc>
                </BinOp>
              </BinOp>
            </CallFunc>
          </Discard>
          <If fromlineno="969" tolineno="970" lineno="969">
            <Compare fromlineno="969" tolineno="969" lineno="969" op="('&lt;', &lt;CallFunc() l.969 [bb] at Ox93a6dcc&gt;)">
              <CallFunc fromlineno="969" tolineno="969" lineno="969" func="Name(len)">
                <Name fromlineno="969" tolineno="969" lineno="969" name="len"/>
                <Name fromlineno="969" tolineno="969" lineno="969" name="val1"/>
              </CallFunc>
              <CallFunc fromlineno="969" tolineno="969" lineno="969" func="Name(len)">
                <Name fromlineno="969" tolineno="969" lineno="969" name="len"/>
                <Name fromlineno="969" tolineno="969" lineno="969" name="val2"/>
              </CallFunc>
            </Compare>
            <Discard fromlineno="970" tolineno="970" lineno="970">
              <CallFunc fromlineno="970" tolineno="970" lineno="970" func="Getattr(extend)">
                <Getattr fromlineno="970" tolineno="970" lineno="970" attrname="extend" expr="val1">
                  <Name fromlineno="970" tolineno="970" lineno="970" name="val1"/>
                </Getattr>
                <BinOp fromlineno="970" tolineno="970" lineno="970" op="*" left="['0']" right="(len(val2)) - (len(val1))">
                  <List fromlineno="970" tolineno="970" lineno="970">
                    <Const fromlineno="970" tolineno="970" lineno="970" type="str">'0'</Const>
                  </List>
                  <BinOp fromlineno="970" tolineno="970" lineno="970" op="-" left="len(val2)" right="len(val1)">
                    <CallFunc fromlineno="970" tolineno="970" lineno="970" func="Name(len)">
                      <Name fromlineno="970" tolineno="970" lineno="970" name="len"/>
                      <Name fromlineno="970" tolineno="970" lineno="970" name="val2"/>
                    </CallFunc>
                    <CallFunc fromlineno="970" tolineno="970" lineno="970" func="Name(len)">
                      <Name fromlineno="970" tolineno="970" lineno="970" name="len"/>
                      <Name fromlineno="970" tolineno="970" lineno="970" name="val1"/>
                    </CallFunc>
                  </BinOp>
                </BinOp>
              </CallFunc>
            </Discard>
          </If>
        </If>
        <If fromlineno="973" tolineno="974" lineno="973">
          <Name fromlineno="973" tolineno="973" lineno="973" name="val1_prepart"/>
          <AugAssign fromlineno="974" tolineno="974" lineno="974" target="val1[-1]" value="('_') + (val1_prepart)">
            <Subscript fromlineno="974" tolineno="974" lineno="974">
              <Name fromlineno="974" tolineno="974" lineno="974" name="val1"/>
              <Index fromlineno="974" tolineno="974" lineno="None">
                <Const fromlineno="974" tolineno="974" lineno="974" type="int">-1</Const>
              </Index>
            </Subscript>
            <BinOp fromlineno="974" tolineno="974" lineno="974" op="+" left="'_'" right="val1_prepart">
              <Const fromlineno="974" tolineno="974" lineno="974" type="str">'_'</Const>
              <Name fromlineno="974" tolineno="974" lineno="974" name="val1_prepart"/>
            </BinOp>
          </AugAssign>
        </If>
        <If fromlineno="975" tolineno="976" lineno="975">
          <Name fromlineno="975" tolineno="975" lineno="975" name="val2_prepart"/>
          <AugAssign fromlineno="976" tolineno="976" lineno="976" target="val2[-1]" value="('_') + (val2_prepart)">
            <Subscript fromlineno="976" tolineno="976" lineno="976">
              <Name fromlineno="976" tolineno="976" lineno="976" name="val2"/>
              <Index fromlineno="976" tolineno="976" lineno="None">
                <Const fromlineno="976" tolineno="976" lineno="976" type="int">-1</Const>
              </Index>
            </Subscript>
            <BinOp fromlineno="976" tolineno="976" lineno="976" op="+" left="'_'" right="val2_prepart">
              <Const fromlineno="976" tolineno="976" lineno="976" type="str">'_'</Const>
              <Name fromlineno="976" tolineno="976" lineno="976" name="val2_prepart"/>
            </BinOp>
          </AugAssign>
        </If>
        <For fromlineno="979" tolineno="986" lineno="979">
          <AssName fromlineno="979" tolineno="979" lineno="979" name="x"/>
          <CallFunc fromlineno="979" tolineno="979" lineno="979" func="Name(range)">
            <Name fromlineno="979" tolineno="979" lineno="979" name="range"/>
            <Const fromlineno="979" tolineno="979" lineno="979" type="int">0</Const>
            <CallFunc fromlineno="979" tolineno="979" lineno="979" func="Name(len)">
              <Name fromlineno="979" tolineno="979" lineno="979" name="len"/>
              <Name fromlineno="979" tolineno="979" lineno="979" name="val1"/>
            </CallFunc>
          </CallFunc>
          <Assign fromlineno="980" tolineno="980" lineno="980" targets="[&lt;AssName(cmp1) l.980 [bb] at Ox93ab58c&gt;]" value="relparse(val1[x])">
            <AssName fromlineno="980" tolineno="980" lineno="980" name="cmp1"/>
            <CallFunc fromlineno="980" tolineno="980" lineno="980" func="Name(relparse)">
              <Name fromlineno="980" tolineno="980" lineno="980" name="relparse"/>
              <Subscript fromlineno="980" tolineno="980" lineno="980">
                <Name fromlineno="980" tolineno="980" lineno="980" name="val1"/>
                <Index fromlineno="980" tolineno="980" lineno="None">
                  <Name fromlineno="980" tolineno="980" lineno="980" name="x"/>
                </Index>
              </Subscript>
            </CallFunc>
          </Assign>
          <Assign fromlineno="981" tolineno="981" lineno="981" targets="[&lt;AssName(cmp2) l.981 [bb] at Ox93ab6ec&gt;]" value="relparse(val2[x])">
            <AssName fromlineno="981" tolineno="981" lineno="981" name="cmp2"/>
            <CallFunc fromlineno="981" tolineno="981" lineno="981" func="Name(relparse)">
              <Name fromlineno="981" tolineno="981" lineno="981" name="relparse"/>
              <Subscript fromlineno="981" tolineno="981" lineno="981">
                <Name fromlineno="981" tolineno="981" lineno="981" name="val2"/>
                <Index fromlineno="981" tolineno="981" lineno="None">
                  <Name fromlineno="981" tolineno="981" lineno="981" name="x"/>
                </Index>
              </Subscript>
            </CallFunc>
          </Assign>
          <For fromlineno="982" tolineno="986" lineno="982">
            <AssName fromlineno="982" tolineno="982" lineno="982" name="y"/>
            <CallFunc fromlineno="982" tolineno="982" lineno="982" func="Name(range)">
              <Name fromlineno="982" tolineno="982" lineno="982" name="range"/>
              <Const fromlineno="982" tolineno="982" lineno="982" type="int">0</Const>
              <Const fromlineno="982" tolineno="982" lineno="982" type="int">3</Const>
            </CallFunc>
            <Assign fromlineno="983" tolineno="983" lineno="983" targets="[&lt;AssName(myret) l.983 [bb] at Ox93ab98c&gt;]" value="(cmp1[y]) - (cmp2[y])">
              <AssName fromlineno="983" tolineno="983" lineno="983" name="myret"/>
              <BinOp fromlineno="983" tolineno="983" lineno="983" op="-" left="cmp1[y]" right="cmp2[y]">
                <Subscript fromlineno="983" tolineno="983" lineno="983">
                  <Name fromlineno="983" tolineno="983" lineno="983" name="cmp1"/>
                  <Index fromlineno="983" tolineno="983" lineno="None">
                    <Name fromlineno="983" tolineno="983" lineno="983" name="y"/>
                  </Index>
                </Subscript>
                <Subscript fromlineno="983" tolineno="983" lineno="983">
                  <Name fromlineno="983" tolineno="983" lineno="983" name="cmp2"/>
                  <Index fromlineno="983" tolineno="983" lineno="None">
                    <Name fromlineno="983" tolineno="983" lineno="983" name="y"/>
                  </Index>
                </Subscript>
              </BinOp>
            </Assign>
            <If fromlineno="984" tolineno="986" lineno="984">
              <Compare fromlineno="984" tolineno="984" lineno="984" op="('!=', &lt;Const(int) l.984 [bb] at Ox93abb8c&gt;)">
                <Name fromlineno="984" tolineno="984" lineno="984" name="myret"/>
                <Const fromlineno="984" tolineno="984" lineno="984" type="int">0</Const>
              </Compare>
              <Assign fromlineno="985" tolineno="985" lineno="985" targets="[&lt;Subscript() l.985 [bb] at Ox93abc0c&gt;]" value="myret">
                <Subscript fromlineno="985" tolineno="985" lineno="985">
                  <Name fromlineno="985" tolineno="985" lineno="985" name="__vercmp_cache__"/>
                  <Index fromlineno="985" tolineno="985" lineno="None">
                    <Name fromlineno="985" tolineno="985" lineno="985" name="valkey"/>
                  </Index>
                </Subscript>
                <Name fromlineno="985" tolineno="985" lineno="985" name="myret"/>
              </Assign>
              <Return fromlineno="986" tolineno="986" lineno="986">
                <Name fromlineno="986" tolineno="986" lineno="986" name="myret"/>
              </Return>
            </If>
          </For>
        </For>
        <Assign fromlineno="987" tolineno="987" lineno="987" targets="[&lt;Subscript() l.987 [bb] at Ox93abd2c&gt;]" value="0">
          <Subscript fromlineno="987" tolineno="987" lineno="987">
            <Name fromlineno="987" tolineno="987" lineno="987" name="__vercmp_cache__"/>
            <Index fromlineno="987" tolineno="987" lineno="None">
              <Name fromlineno="987" tolineno="987" lineno="987" name="valkey"/>
            </Index>
          </Subscript>
          <Const fromlineno="987" tolineno="987" lineno="987" type="int">0</Const>
        </Assign>
        <Return fromlineno="988" tolineno="988" lineno="988">
          <Const fromlineno="988" tolineno="988" lineno="988" type="int">0</Const>
        </Return>
      </Function>
      <Function fromlineno="993" tolineno="1017" lineno="993">
        <Arguments fromlineno="993" tolineno="993" lineno="None" format_args="pkg1, pkg2">
          <AssName fromlineno="993" tolineno="993" lineno="993" name="pkg1"/>
          <AssName fromlineno="993" tolineno="993" lineno="993" name="pkg2"/>
        </Arguments>
        <Assign fromlineno="1006" tolineno="1006" lineno="1006" targets="[&lt;AssName(mycmp) l.1006 [bb] at Ox93abf4c&gt;]" value="vercmp(pkg1[1], pkg2[1])">
          <AssName fromlineno="1006" tolineno="1006" lineno="1006" name="mycmp"/>
          <CallFunc fromlineno="1006" tolineno="1006" lineno="1006" func="Name(vercmp)">
            <Name fromlineno="1006" tolineno="1006" lineno="1006" name="vercmp"/>
            <Subscript fromlineno="1006" tolineno="1006" lineno="1006">
              <Name fromlineno="1006" tolineno="1006" lineno="1006" name="pkg1"/>
              <Index fromlineno="1006" tolineno="1006" lineno="None">
                <Const fromlineno="1006" tolineno="1006" lineno="1006" type="int">1</Const>
              </Index>
            </Subscript>
            <Subscript fromlineno="1006" tolineno="1006" lineno="1006">
              <Name fromlineno="1006" tolineno="1006" lineno="1006" name="pkg2"/>
              <Index fromlineno="1006" tolineno="1006" lineno="None">
                <Const fromlineno="1006" tolineno="1006" lineno="1006" type="int">1</Const>
              </Index>
            </Subscript>
          </CallFunc>
        </Assign>
        <If fromlineno="1007" tolineno="1008" lineno="1007">
          <Compare fromlineno="1007" tolineno="1007" lineno="1007" op="('&gt;', &lt;Const(int) l.1007 [bb] at Ox93af1ac&gt;)">
            <Name fromlineno="1007" tolineno="1007" lineno="1007" name="mycmp"/>
            <Const fromlineno="1007" tolineno="1007" lineno="1007" type="int">0</Const>
          </Compare>
          <Return fromlineno="1008" tolineno="1008" lineno="1008">
            <Const fromlineno="1008" tolineno="1008" lineno="1008" type="int">1</Const>
          </Return>
        </If>
        <If fromlineno="1009" tolineno="1010" lineno="1009">
          <Compare fromlineno="1009" tolineno="1009" lineno="1009" op="('&lt;', &lt;Const(int) l.1009 [bb] at Ox93af2cc&gt;)">
            <Name fromlineno="1009" tolineno="1009" lineno="1009" name="mycmp"/>
            <Const fromlineno="1009" tolineno="1009" lineno="1009" type="int">0</Const>
          </Compare>
          <Return fromlineno="1010" tolineno="1010" lineno="1010">
            <Const fromlineno="1010" tolineno="1010" lineno="1010" type="int">-1</Const>
          </Return>
        </If>
        <Assign fromlineno="1011" tolineno="1011" lineno="1011" targets="[&lt;AssName(r1) l.1011 [bb] at Ox93af38c&gt;]" value="string.atoi(pkg1[2][1:])">
          <AssName fromlineno="1011" tolineno="1011" lineno="1011" name="r1"/>
          <CallFunc fromlineno="1011" tolineno="1011" lineno="1011" func="Getattr(atoi)">
            <Getattr fromlineno="1011" tolineno="1011" lineno="1011" attrname="atoi" expr="string">
              <Name fromlineno="1011" tolineno="1011" lineno="1011" name="string"/>
            </Getattr>
            <Subscript fromlineno="1011" tolineno="1011" lineno="1011">
              <Subscript fromlineno="1011" tolineno="1011" lineno="1011">
                <Name fromlineno="1011" tolineno="1011" lineno="1011" name="pkg1"/>
                <Index fromlineno="1011" tolineno="1011" lineno="None">
                  <Const fromlineno="1011" tolineno="1011" lineno="1011" type="int">2</Const>
                </Index>
              </Subscript>
              <Slice fromlineno="1011" tolineno="1011" lineno="None">
                <Const fromlineno="1011" tolineno="1011" lineno="1011" type="int">1</Const>
              </Slice>
            </Subscript>
          </CallFunc>
        </Assign>
        <Assign fromlineno="1012" tolineno="1012" lineno="1012" targets="[&lt;AssName(r2) l.1012 [bb] at Ox93af56c&gt;]" value="string.atoi(pkg2[2][1:])">
          <AssName fromlineno="1012" tolineno="1012" lineno="1012" name="r2"/>
          <CallFunc fromlineno="1012" tolineno="1012" lineno="1012" func="Getattr(atoi)">
            <Getattr fromlineno="1012" tolineno="1012" lineno="1012" attrname="atoi" expr="string">
              <Name fromlineno="1012" tolineno="1012" lineno="1012" name="string"/>
            </Getattr>
            <Subscript fromlineno="1012" tolineno="1012" lineno="1012">
              <Subscript fromlineno="1012" tolineno="1012" lineno="1012">
                <Name fromlineno="1012" tolineno="1012" lineno="1012" name="pkg2"/>
                <Index fromlineno="1012" tolineno="1012" lineno="None">
                  <Const fromlineno="1012" tolineno="1012" lineno="1012" type="int">2</Const>
                </Index>
              </Subscript>
              <Slice fromlineno="1012" tolineno="1012" lineno="None">
                <Const fromlineno="1012" tolineno="1012" lineno="1012" type="int">1</Const>
              </Slice>
            </Subscript>
          </CallFunc>
        </Assign>
        <If fromlineno="1013" tolineno="1014" lineno="1013">
          <Compare fromlineno="1013" tolineno="1013" lineno="1013" op="('&gt;', &lt;Name(r2) l.1013 [bb] at Ox93af7ac&gt;)">
            <Name fromlineno="1013" tolineno="1013" lineno="1013" name="r1"/>
            <Name fromlineno="1013" tolineno="1013" lineno="1013" name="r2"/>
          </Compare>
          <Return fromlineno="1014" tolineno="1014" lineno="1014">
            <Const fromlineno="1014" tolineno="1014" lineno="1014" type="int">1</Const>
          </Return>
        </If>
        <If fromlineno="1015" tolineno="1016" lineno="1015">
          <Compare fromlineno="1015" tolineno="1015" lineno="1015" op="('&gt;', &lt;Name(r1) l.1015 [bb] at Ox93af8cc&gt;)">
            <Name fromlineno="1015" tolineno="1015" lineno="1015" name="r2"/>
            <Name fromlineno="1015" tolineno="1015" lineno="1015" name="r1"/>
          </Compare>
          <Return fromlineno="1016" tolineno="1016" lineno="1016">
            <Const fromlineno="1016" tolineno="1016" lineno="1016" type="int">-1</Const>
          </Return>
        </If>
        <Return fromlineno="1017" tolineno="1017" lineno="1017">
          <Const fromlineno="1017" tolineno="1017" lineno="1017" type="int">0</Const>
        </Return>
      </Function>
      <Function fromlineno="1022" tolineno="1047" lineno="1022">
        <Arguments fromlineno="1022" tolineno="1022" lineno="None" format_args="mysplit, mypos=0">
          <AssName fromlineno="1022" tolineno="1022" lineno="1022" name="mysplit"/>
          <AssName fromlineno="1022" tolineno="1022" lineno="1022" name="mypos"/>
          <Const fromlineno="1022" tolineno="1022" lineno="1022" type="int">0</Const>
        </Arguments>
        <While fromlineno="1033" tolineno="1046" lineno="1033">
          <Compare fromlineno="1033" tolineno="1033" lineno="1033" op="('&lt;', &lt;CallFunc() l.1033 [bb] at Ox93afb4c&gt;)">
            <Name fromlineno="1033" tolineno="1033" lineno="1033" name="mypos"/>
            <CallFunc fromlineno="1033" tolineno="1033" lineno="1033" func="Name(len)">
              <Name fromlineno="1033" tolineno="1033" lineno="1033" name="len"/>
              <Name fromlineno="1033" tolineno="1033" lineno="1033" name="mysplit"/>
            </CallFunc>
          </Compare>
          <If fromlineno="1034" tolineno="1045" lineno="1034">
            <Compare fromlineno="1034" tolineno="1034" lineno="1034" op="('==', &lt;Const(str) l.1034 [bb] at Ox93afcec&gt;)">
              <Subscript fromlineno="1034" tolineno="1034" lineno="1034">
                <Name fromlineno="1034" tolineno="1034" lineno="1034" name="mysplit"/>
                <Index fromlineno="1034" tolineno="1034" lineno="None">
                  <Name fromlineno="1034" tolineno="1034" lineno="1034" name="mypos"/>
                </Index>
              </Subscript>
              <Const fromlineno="1034" tolineno="1034" lineno="1034" type="str">'('</Const>
            </Compare>
            <Assign fromlineno="1035" tolineno="1035" lineno="1035" targets="[&lt;AssName(firstpos) l.1035 [bb] at Ox93afd6c&gt;]" value="mypos">
              <AssName fromlineno="1035" tolineno="1035" lineno="1035" name="firstpos"/>
              <Name fromlineno="1035" tolineno="1035" lineno="1035" name="mypos"/>
            </Assign>
            <Assign fromlineno="1036" tolineno="1036" lineno="1036" targets="[&lt;AssName(mypos) l.1036 [bb] at Ox93afe0c&gt;]" value="(mypos) + (1)">
              <AssName fromlineno="1036" tolineno="1036" lineno="1036" name="mypos"/>
              <BinOp fromlineno="1036" tolineno="1036" lineno="1036" op="+" left="mypos" right="1">
                <Name fromlineno="1036" tolineno="1036" lineno="1036" name="mypos"/>
                <Const fromlineno="1036" tolineno="1036" lineno="1036" type="int">1</Const>
              </BinOp>
            </Assign>
            <While fromlineno="1037" tolineno="1045" lineno="1037">
              <Compare fromlineno="1037" tolineno="1037" lineno="1037" op="('&lt;', &lt;CallFunc() l.1037 [bb] at Ox93aff2c&gt;)">
                <Name fromlineno="1037" tolineno="1037" lineno="1037" name="mypos"/>
                <CallFunc fromlineno="1037" tolineno="1037" lineno="1037" func="Name(len)">
                  <Name fromlineno="1037" tolineno="1037" lineno="1037" name="len"/>
                  <Name fromlineno="1037" tolineno="1037" lineno="1037" name="mysplit"/>
                </CallFunc>
              </Compare>
              <If fromlineno="1038" tolineno="1044" lineno="1038">
                <Compare fromlineno="1038" tolineno="1038" lineno="1038" op="('==', &lt;Const(str) l.1038 [bb] at Ox93b310c&gt;)">
                  <Subscript fromlineno="1038" tolineno="1038" lineno="1038">
                    <Name fromlineno="1038" tolineno="1038" lineno="1038" name="mysplit"/>
                    <Index fromlineno="1038" tolineno="1038" lineno="None">
                      <Name fromlineno="1038" tolineno="1038" lineno="1038" name="mypos"/>
                    </Index>
                  </Subscript>
                  <Const fromlineno="1038" tolineno="1038" lineno="1038" type="str">')'</Const>
                </Compare>
                <Assign fromlineno="1039" tolineno="1039" lineno="1039" targets="[&lt;Subscript() l.1039 [bb] at Ox93b318c&gt;]" value="[mysplit[(firstpos) + (1):mypos]]">
                  <Subscript fromlineno="1039" tolineno="1039" lineno="1039">
                    <Name fromlineno="1039" tolineno="1039" lineno="1039" name="mysplit"/>
                    <Slice fromlineno="1039" tolineno="1039" lineno="None">
                      <Name fromlineno="1039" tolineno="1039" lineno="1039" name="firstpos"/>
                      <BinOp fromlineno="1039" tolineno="1039" lineno="1039" op="+" left="mypos" right="1">
                        <Name fromlineno="1039" tolineno="1039" lineno="1039" name="mypos"/>
                        <Const fromlineno="1039" tolineno="1039" lineno="1039" type="int">1</Const>
                      </BinOp>
                    </Slice>
                  </Subscript>
                  <List fromlineno="1039" tolineno="1039" lineno="1039">
                    <Subscript fromlineno="1039" tolineno="1039" lineno="1039">
                      <Name fromlineno="1039" tolineno="1039" lineno="1039" name="mysplit"/>
                      <Slice fromlineno="1039" tolineno="1039" lineno="None">
                        <BinOp fromlineno="1039" tolineno="1039" lineno="1039" op="+" left="firstpos" right="1">
                          <Name fromlineno="1039" tolineno="1039" lineno="1039" name="firstpos"/>
                          <Const fromlineno="1039" tolineno="1039" lineno="1039" type="int">1</Const>
                        </BinOp>
                        <Name fromlineno="1039" tolineno="1039" lineno="1039" name="mypos"/>
                      </Slice>
                    </Subscript>
                  </List>
                </Assign>
                <Assign fromlineno="1040" tolineno="1040" lineno="1040" targets="[&lt;AssName(mypos) l.1040 [bb] at Ox93b33cc&gt;]" value="firstpos">
                  <AssName fromlineno="1040" tolineno="1040" lineno="1040" name="mypos"/>
                  <Name fromlineno="1040" tolineno="1040" lineno="1040" name="firstpos"/>
                </Assign>
                <Break fromlineno="1041" tolineno="1041" lineno="1041"/>
                <If fromlineno="1042" tolineno="1044" lineno="1042">
                  <Compare fromlineno="1042" tolineno="1042" lineno="1042" op="('==', &lt;Const(str) l.1042 [bb] at Ox93b356c&gt;)">
                    <Subscript fromlineno="1042" tolineno="1042" lineno="1042">
                      <Name fromlineno="1042" tolineno="1042" lineno="1042" name="mysplit"/>
                      <Index fromlineno="1042" tolineno="1042" lineno="None">
                        <Name fromlineno="1042" tolineno="1042" lineno="1042" name="mypos"/>
                      </Index>
                    </Subscript>
                    <Const fromlineno="1042" tolineno="1042" lineno="1042" type="str">'('</Const>
                  </Compare>
                  <Assign fromlineno="1044" tolineno="1044" lineno="1044" targets="[&lt;AssName(mysplit) l.1044 [bb] at Ox93b35ec&gt;]" value="dep_parenreduce(mysplit, mypos)">
                    <AssName fromlineno="1044" tolineno="1044" lineno="1044" name="mysplit"/>
                    <CallFunc fromlineno="1044" tolineno="1044" lineno="1044" func="Name(dep_parenreduce)">
                      <Name fromlineno="1044" tolineno="1044" lineno="1044" name="dep_parenreduce"/>
                      <Name fromlineno="1044" tolineno="1044" lineno="1044" name="mysplit"/>
                      <Name fromlineno="1044" tolineno="1044" lineno="1044" name="mypos"/>
                    </CallFunc>
                  </Assign>
                </If>
              </If>
              <Assign fromlineno="1045" tolineno="1045" lineno="1045" targets="[&lt;AssName(mypos) l.1045 [bb] at Ox93b36ac&gt;]" value="(mypos) + (1)">
                <AssName fromlineno="1045" tolineno="1045" lineno="1045" name="mypos"/>
                <BinOp fromlineno="1045" tolineno="1045" lineno="1045" op="+" left="mypos" right="1">
                  <Name fromlineno="1045" tolineno="1045" lineno="1045" name="mypos"/>
                  <Const fromlineno="1045" tolineno="1045" lineno="1045" type="int">1</Const>
                </BinOp>
              </Assign>
            </While>
          </If>
          <Assign fromlineno="1046" tolineno="1046" lineno="1046" targets="[&lt;AssName(mypos) l.1046 [bb] at Ox93b374c&gt;]" value="(mypos) + (1)">
            <AssName fromlineno="1046" tolineno="1046" lineno="1046" name="mypos"/>
            <BinOp fromlineno="1046" tolineno="1046" lineno="1046" op="+" left="mypos" right="1">
              <Name fromlineno="1046" tolineno="1046" lineno="1046" name="mypos"/>
              <Const fromlineno="1046" tolineno="1046" lineno="1046" type="int">1</Const>
            </BinOp>
          </Assign>
        </While>
        <Return fromlineno="1047" tolineno="1047" lineno="1047">
          <Name fromlineno="1047" tolineno="1047" lineno="1047" name="mysplit"/>
        </Return>
      </Function>
      <Function fromlineno="1050" tolineno="1128" lineno="1050">
        <Arguments fromlineno="1050" tolineno="1050" lineno="None" format_args="mysplit, myuse">
          <AssName fromlineno="1050" tolineno="1050" lineno="1050" name="mysplit"/>
          <AssName fromlineno="1050" tolineno="1050" lineno="1050" name="myuse"/>
        </Arguments>
        <Assign fromlineno="1053" tolineno="1053" lineno="1053" targets="[&lt;AssName(mypos) l.1053 [bb] at Ox93b394c&gt;]" value="0">
          <AssName fromlineno="1053" tolineno="1053" lineno="1053" name="mypos"/>
          <Const fromlineno="1053" tolineno="1053" lineno="1053" type="int">0</Const>
        </Assign>
        <Assign fromlineno="1054" tolineno="1054" lineno="1054" targets="[&lt;AssName(newsplit) l.1054 [bb] at Ox93b39ec&gt;]" value="[]">
          <AssName fromlineno="1054" tolineno="1054" lineno="1054" name="newsplit"/>
          <List fromlineno="1054" tolineno="1054" lineno="1054"/>
        </Assign>
        <While fromlineno="1055" tolineno="1127" lineno="1055">
          <Compare fromlineno="1055" tolineno="1055" lineno="1055" op="('&lt;', &lt;CallFunc() l.1055 [bb] at Ox93b3b0c&gt;)">
            <Name fromlineno="1055" tolineno="1055" lineno="1055" name="mypos"/>
            <CallFunc fromlineno="1055" tolineno="1055" lineno="1055" func="Name(len)">
              <Name fromlineno="1055" tolineno="1055" lineno="1055" name="len"/>
              <Name fromlineno="1055" tolineno="1055" lineno="1055" name="mysplit"/>
            </CallFunc>
          </Compare>
          <If fromlineno="1056" tolineno="1127" lineno="1056">
            <Compare fromlineno="1056" tolineno="1056" lineno="1056" op="('==', &lt;Getattr(ListType) l.1056 [bb] at Ox93b3d0c&gt;)">
              <CallFunc fromlineno="1056" tolineno="1056" lineno="1056" func="Name(type)">
                <Name fromlineno="1056" tolineno="1056" lineno="1056" name="type"/>
                <Subscript fromlineno="1056" tolineno="1056" lineno="1056">
                  <Name fromlineno="1056" tolineno="1056" lineno="1056" name="mysplit"/>
                  <Index fromlineno="1056" tolineno="1056" lineno="None">
                    <Name fromlineno="1056" tolineno="1056" lineno="1056" name="mypos"/>
                  </Index>
                </Subscript>
              </CallFunc>
              <Getattr fromlineno="1056" tolineno="1056" lineno="1056" attrname="ListType" expr="types">
                <Name fromlineno="1056" tolineno="1056" lineno="1056" name="types"/>
              </Getattr>
            </Compare>
            <Discard fromlineno="1057" tolineno="1057" lineno="1057">
              <CallFunc fromlineno="1057" tolineno="1057" lineno="1057" func="Getattr(append)">
                <Getattr fromlineno="1057" tolineno="1057" lineno="1057" attrname="append" expr="newsplit">
                  <Name fromlineno="1057" tolineno="1057" lineno="1057" name="newsplit"/>
                </Getattr>
                <CallFunc fromlineno="1057" tolineno="1057" lineno="1057" func="Name(dep_opconvert)">
                  <Name fromlineno="1057" tolineno="1057" lineno="1057" name="dep_opconvert"/>
                  <Subscript fromlineno="1057" tolineno="1057" lineno="1057">
                    <Name fromlineno="1057" tolineno="1057" lineno="1057" name="mysplit"/>
                    <Index fromlineno="1057" tolineno="1057" lineno="None">
                      <Name fromlineno="1057" tolineno="1057" lineno="1057" name="mypos"/>
                    </Index>
                  </Subscript>
                  <Name fromlineno="1057" tolineno="1057" lineno="1057" name="myuse"/>
                </CallFunc>
              </CallFunc>
            </Discard>
            <AugAssign fromlineno="1058" tolineno="1058" lineno="1058" target="mypos" value="1">
              <AssName fromlineno="1058" tolineno="1058" lineno="1058" name="mypos"/>
              <Const fromlineno="1058" tolineno="1058" lineno="1058" type="int">1</Const>
            </AugAssign>
            <If fromlineno="1059" tolineno="1127" lineno="1059">
              <Compare fromlineno="1059" tolineno="1059" lineno="1059" op="('==', &lt;Const(str) l.1059 [bb] at Ox93b70ec&gt;)">
                <Subscript fromlineno="1059" tolineno="1059" lineno="1059">
                  <Name fromlineno="1059" tolineno="1059" lineno="1059" name="mysplit"/>
                  <Index fromlineno="1059" tolineno="1059" lineno="None">
                    <Name fromlineno="1059" tolineno="1059" lineno="1059" name="mypos"/>
                  </Index>
                </Subscript>
                <Const fromlineno="1059" tolineno="1059" lineno="1059" type="str">')'</Const>
              </Compare>
              <Return fromlineno="1061" tolineno="1061" lineno="1061">
                <Const fromlineno="1061" tolineno="1061" lineno="1061" type="NoneType">None</Const>
              </Return>
              <If fromlineno="1062" tolineno="1127" lineno="1062">
                <Compare fromlineno="1062" tolineno="1062" lineno="1062" op="('==', &lt;Const(str) l.1062 [bb] at Ox93b72ac&gt;)">
                  <Subscript fromlineno="1062" tolineno="1062" lineno="1062">
                    <Name fromlineno="1062" tolineno="1062" lineno="1062" name="mysplit"/>
                    <Index fromlineno="1062" tolineno="1062" lineno="None">
                      <Name fromlineno="1062" tolineno="1062" lineno="1062" name="mypos"/>
                    </Index>
                  </Subscript>
                  <Const fromlineno="1062" tolineno="1062" lineno="1062" type="str">'||'</Const>
                </Compare>
                <If fromlineno="1063" tolineno="1065" lineno="1063">
                  <BoolOp fromlineno="1063" tolineno="1063" lineno="1063" op="or" values="(mypos) + (1) &gt;= len(mysplit),type(mysplit[(mypos) + (1)]) != types.ListType,">
                    <Compare fromlineno="1063" tolineno="1063" lineno="1063" op="('&gt;=', &lt;CallFunc() l.1063 [bb] at Ox93b744c&gt;)">
                      <BinOp fromlineno="1063" tolineno="1063" lineno="1063" op="+" left="mypos" right="1">
                        <Name fromlineno="1063" tolineno="1063" lineno="1063" name="mypos"/>
                        <Const fromlineno="1063" tolineno="1063" lineno="1063" type="int">1</Const>
                      </BinOp>
                      <CallFunc fromlineno="1063" tolineno="1063" lineno="1063" func="Name(len)">
                        <Name fromlineno="1063" tolineno="1063" lineno="1063" name="len"/>
                        <Name fromlineno="1063" tolineno="1063" lineno="1063" name="mysplit"/>
                      </CallFunc>
                    </Compare>
                    <Compare fromlineno="1063" tolineno="1063" lineno="1063" op="('!=', &lt;Getattr(ListType) l.1063 [bb] at Ox93b762c&gt;)">
                      <CallFunc fromlineno="1063" tolineno="1063" lineno="1063" func="Name(type)">
                        <Name fromlineno="1063" tolineno="1063" lineno="1063" name="type"/>
                        <Subscript fromlineno="1063" tolineno="1063" lineno="1063">
                          <Name fromlineno="1063" tolineno="1063" lineno="1063" name="mysplit"/>
                          <Index fromlineno="1063" tolineno="1063" lineno="None">
                            <BinOp fromlineno="1063" tolineno="1063" lineno="1063" op="+" left="mypos" right="1">
                              <Name fromlineno="1063" tolineno="1063" lineno="1063" name="mypos"/>
                              <Const fromlineno="1063" tolineno="1063" lineno="1063" type="int">1</Const>
                            </BinOp>
                          </Index>
                        </Subscript>
                      </CallFunc>
                      <Getattr fromlineno="1063" tolineno="1063" lineno="1063" attrname="ListType" expr="types">
                        <Name fromlineno="1063" tolineno="1063" lineno="1063" name="types"/>
                      </Getattr>
                    </Compare>
                  </BoolOp>
                  <Return fromlineno="1065" tolineno="1065" lineno="1065">
                    <Const fromlineno="1065" tolineno="1065" lineno="1065" type="NoneType">None</Const>
                  </Return>
                </If>
                <TryExcept fromlineno="1066" tolineno="1070" lineno="1066">
                  <Assign fromlineno="1067" tolineno="1067" lineno="1067" targets="[&lt;AssName(mynew) l.1067 [bb] at Ox93b774c&gt;]" value="dep_opconvert(mysplit[(mypos) + (1)], myuse)">
                    <AssName fromlineno="1067" tolineno="1067" lineno="1067" name="mynew"/>
                    <CallFunc fromlineno="1067" tolineno="1067" lineno="1067" func="Name(dep_opconvert)">
                      <Name fromlineno="1067" tolineno="1067" lineno="1067" name="dep_opconvert"/>
                      <Subscript fromlineno="1067" tolineno="1067" lineno="1067">
                        <Name fromlineno="1067" tolineno="1067" lineno="1067" name="mysplit"/>
                        <Index fromlineno="1067" tolineno="1067" lineno="None">
                          <BinOp fromlineno="1067" tolineno="1067" lineno="1067" op="+" left="mypos" right="1">
                            <Name fromlineno="1067" tolineno="1067" lineno="1067" name="mypos"/>
                            <Const fromlineno="1067" tolineno="1067" lineno="1067" type="int">1</Const>
                          </BinOp>
                        </Index>
                      </Subscript>
                      <Name fromlineno="1067" tolineno="1067" lineno="1067" name="myuse"/>
                    </CallFunc>
                  </Assign>
                  <ExceptHandler fromlineno="1068" tolineno="1070" lineno="1068">
                    <Name fromlineno="1068" tolineno="1068" lineno="1068" name="Exception"/>
                    <AssName fromlineno="1068" tolineno="1068" lineno="1068" name="e"/>
                    <Discard fromlineno="1069" tolineno="1069" lineno="1069">
                      <CallFunc fromlineno="1069" tolineno="1069" lineno="1069" func="Name(error)">
                        <Name fromlineno="1069" tolineno="1069" lineno="1069" name="error"/>
                        <BinOp fromlineno="1069" tolineno="1069" lineno="1069" op="+" left="'unable to satisfy OR dependancy: '" right="string.join(mysplit, ' || ')">
                          <Const fromlineno="1069" tolineno="1069" lineno="1069" type="str">'unable to satisfy OR dependancy: '</Const>
                          <CallFunc fromlineno="1069" tolineno="1069" lineno="1069" func="Getattr(join)">
                            <Getattr fromlineno="1069" tolineno="1069" lineno="1069" attrname="join" expr="string">
                              <Name fromlineno="1069" tolineno="1069" lineno="1069" name="string"/>
                            </Getattr>
                            <Name fromlineno="1069" tolineno="1069" lineno="1069" name="mysplit"/>
                            <Const fromlineno="1069" tolineno="1069" lineno="1069" type="str">' || '</Const>
                          </CallFunc>
                        </BinOp>
                      </CallFunc>
                    </Discard>
                    <Raise fromlineno="1070" tolineno="1070" lineno="1070">
                      <Name fromlineno="1070" tolineno="1070" lineno="1070" name="e"/>
                    </Raise>
                  </ExceptHandler>
                </TryExcept>
                <Assign fromlineno="1071" tolineno="1071" lineno="1071" targets="[&lt;Subscript() l.1071 [bb] at Ox93b7b8c&gt;]" value="['||']">
                  <Subscript fromlineno="1071" tolineno="1071" lineno="1071">
                    <Name fromlineno="1071" tolineno="1071" lineno="1071" name="mynew"/>
                    <Slice fromlineno="1071" tolineno="1071" lineno="None">
                      <Const fromlineno="1071" tolineno="1071" lineno="1071" type="int">0</Const>
                      <Const fromlineno="1071" tolineno="1071" lineno="1071" type="int">0</Const>
                    </Slice>
                  </Subscript>
                  <List fromlineno="1071" tolineno="1071" lineno="1071">
                    <Const fromlineno="1071" tolineno="1071" lineno="1071" type="str">'||'</Const>
                  </List>
                </Assign>
                <Discard fromlineno="1072" tolineno="1072" lineno="1072">
                  <CallFunc fromlineno="1072" tolineno="1072" lineno="1072" func="Getattr(append)">
                    <Getattr fromlineno="1072" tolineno="1072" lineno="1072" attrname="append" expr="newsplit">
                      <Name fromlineno="1072" tolineno="1072" lineno="1072" name="newsplit"/>
                    </Getattr>
                    <Name fromlineno="1072" tolineno="1072" lineno="1072" name="mynew"/>
                  </CallFunc>
                </Discard>
                <AugAssign fromlineno="1073" tolineno="1073" lineno="1073" target="mypos" value="2">
                  <AssName fromlineno="1073" tolineno="1073" lineno="1073" name="mypos"/>
                  <Const fromlineno="1073" tolineno="1073" lineno="1073" type="int">2</Const>
                </AugAssign>
                <If fromlineno="1074" tolineno="1127" lineno="1074">
                  <Compare fromlineno="1074" tolineno="1074" lineno="1074" op="('==', &lt;Const(str) l.1074 [bb] at Ox93b7f4c&gt;)">
                    <Subscript fromlineno="1074" tolineno="1074" lineno="1074">
                      <Subscript fromlineno="1074" tolineno="1074" lineno="1074">
                        <Name fromlineno="1074" tolineno="1074" lineno="1074" name="mysplit"/>
                        <Index fromlineno="1074" tolineno="1074" lineno="None">
                          <Name fromlineno="1074" tolineno="1074" lineno="1074" name="mypos"/>
                        </Index>
                      </Subscript>
                      <Index fromlineno="1074" tolineno="1074" lineno="None">
                        <Const fromlineno="1074" tolineno="1074" lineno="1074" type="int">-1</Const>
                      </Index>
                    </Subscript>
                    <Const fromlineno="1074" tolineno="1074" lineno="1074" type="str">'?'</Const>
                  </Compare>
                  <If fromlineno="1077" tolineno="1095" lineno="1077">
                    <BoolOp fromlineno="1077" tolineno="1077" lineno="1077" op="and" values="len(myuse) == 1,myuse[0] == '*',">
                      <Compare fromlineno="1077" tolineno="1077" lineno="1077" op="('==', &lt;Const(int) l.1077 [bb] at Ox93bb12c&gt;)">
                        <CallFunc fromlineno="1077" tolineno="1077" lineno="1077" func="Name(len)">
                          <Name fromlineno="1077" tolineno="1077" lineno="1077" name="len"/>
                          <Name fromlineno="1077" tolineno="1077" lineno="1077" name="myuse"/>
                        </CallFunc>
                        <Const fromlineno="1077" tolineno="1077" lineno="1077" type="int">1</Const>
                      </Compare>
                      <Compare fromlineno="1077" tolineno="1077" lineno="1077" op="('==', &lt;Const(str) l.1077 [bb] at Ox93bb20c&gt;)">
                        <Subscript fromlineno="1077" tolineno="1077" lineno="1077">
                          <Name fromlineno="1077" tolineno="1077" lineno="1077" name="myuse"/>
                          <Index fromlineno="1077" tolineno="1077" lineno="None">
                            <Const fromlineno="1077" tolineno="1077" lineno="1077" type="int">0</Const>
                          </Index>
                        </Subscript>
                        <Const fromlineno="1077" tolineno="1077" lineno="1077" type="str">'*'</Const>
                      </Compare>
                    </BoolOp>
                    <If fromlineno="1080" tolineno="1084" lineno="1080">
                      <BoolOp fromlineno="1080" tolineno="1081" lineno="1080" op="or" values="mysplit[mypos][:-1] not in settings.usemask,mysplit[mypos][:-1] == settings['ARCH'],">
                        <Compare fromlineno="1080" tolineno="1080" lineno="1080" op="('not in', &lt;Getattr(usemask) l.1080 [bb] at Ox93bb40c&gt;)">
                          <Subscript fromlineno="1080" tolineno="1080" lineno="1080">
                            <Subscript fromlineno="1080" tolineno="1080" lineno="1080">
                              <Name fromlineno="1080" tolineno="1080" lineno="1080" name="mysplit"/>
                              <Index fromlineno="1080" tolineno="1080" lineno="None">
                                <Name fromlineno="1080" tolineno="1080" lineno="1080" name="mypos"/>
                              </Index>
                            </Subscript>
                            <Slice fromlineno="1080" tolineno="1080" lineno="None">
                              <Const fromlineno="1080" tolineno="1080" lineno="1080" type="int">-1</Const>
                            </Slice>
                          </Subscript>
                          <Getattr fromlineno="1080" tolineno="1080" lineno="1080" attrname="usemask" expr="settings">
                            <Name fromlineno="1080" tolineno="1080" lineno="1080" name="settings"/>
                          </Getattr>
                        </Compare>
                        <Compare fromlineno="1081" tolineno="1081" lineno="1081" op="('==', &lt;Subscript() l.1081 [bb] at Ox93bb56c&gt;)">
                          <Subscript fromlineno="1081" tolineno="1081" lineno="1081">
                            <Subscript fromlineno="1081" tolineno="1081" lineno="1081">
                              <Name fromlineno="1081" tolineno="1081" lineno="1081" name="mysplit"/>
                              <Index fromlineno="1081" tolineno="1081" lineno="None">
                                <Name fromlineno="1081" tolineno="1081" lineno="1081" name="mypos"/>
                              </Index>
                            </Subscript>
                            <Slice fromlineno="1081" tolineno="1081" lineno="None">
                              <Const fromlineno="1081" tolineno="1081" lineno="1081" type="int">-1</Const>
                            </Slice>
                          </Subscript>
                          <Subscript fromlineno="1081" tolineno="1081" lineno="1081">
                            <Name fromlineno="1081" tolineno="1081" lineno="1081" name="settings"/>
                            <Index fromlineno="1081" tolineno="1081" lineno="None">
                              <Const fromlineno="1081" tolineno="1081" lineno="1081" type="str">'ARCH'</Const>
                            </Index>
                          </Subscript>
                        </Compare>
                      </BoolOp>
                      <Assign fromlineno="1082" tolineno="1082" lineno="1082" targets="[&lt;AssName(enabled) l.1082 [bb] at Ox93bb62c&gt;]" value="1">
                        <AssName fromlineno="1082" tolineno="1082" lineno="1082" name="enabled"/>
                        <Const fromlineno="1082" tolineno="1082" lineno="1082" type="int">1</Const>
                      </Assign>
                      <Assign fromlineno="1084" tolineno="1084" lineno="1084" targets="[&lt;AssName(enabled) l.1084 [bb] at Ox93bb6ec&gt;]" value="0">
                        <AssName fromlineno="1084" tolineno="1084" lineno="1084" name="enabled"/>
                        <Const fromlineno="1084" tolineno="1084" lineno="1084" type="int">0</Const>
                      </Assign>
                    </If>
                    <If fromlineno="1086" tolineno="1095" lineno="1086">
                      <Compare fromlineno="1086" tolineno="1086" lineno="1086" op="('==', &lt;Const(str) l.1086 [bb] at Ox93bb88c&gt;)">
                        <Subscript fromlineno="1086" tolineno="1086" lineno="1086">
                          <Subscript fromlineno="1086" tolineno="1086" lineno="1086">
                            <Name fromlineno="1086" tolineno="1086" lineno="1086" name="mysplit"/>
                            <Index fromlineno="1086" tolineno="1086" lineno="None">
                              <Name fromlineno="1086" tolineno="1086" lineno="1086" name="mypos"/>
                            </Index>
                          </Subscript>
                          <Index fromlineno="1086" tolineno="1086" lineno="None">
                            <Const fromlineno="1086" tolineno="1086" lineno="1086" type="int">0</Const>
                          </Index>
                        </Subscript>
                        <Const fromlineno="1086" tolineno="1086" lineno="1086" type="str">'!'</Const>
                      </Compare>
                      <Assign fromlineno="1087" tolineno="1087" lineno="1087" targets="[&lt;AssName(myusevar) l.1087 [bb] at Ox93bb90c&gt;]" value="mysplit[mypos][1:-1]">
                        <AssName fromlineno="1087" tolineno="1087" lineno="1087" name="myusevar"/>
                        <Subscript fromlineno="1087" tolineno="1087" lineno="1087">
                          <Subscript fromlineno="1087" tolineno="1087" lineno="1087">
                            <Name fromlineno="1087" tolineno="1087" lineno="1087" name="mysplit"/>
                            <Index fromlineno="1087" tolineno="1087" lineno="None">
                              <Name fromlineno="1087" tolineno="1087" lineno="1087" name="mypos"/>
                            </Index>
                          </Subscript>
                          <Slice fromlineno="1087" tolineno="1087" lineno="None">
                            <Const fromlineno="1087" tolineno="1087" lineno="1087" type="int">1</Const>
                            <Const fromlineno="1087" tolineno="1087" lineno="1087" type="int">-1</Const>
                          </Slice>
                        </Subscript>
                      </Assign>
                      <Assign fromlineno="1088" tolineno="1088" lineno="1088" targets="[&lt;AssName(enabled) l.1088 [bb] at Ox93bba8c&gt;]" value="not myusevar in myuse">
                        <AssName fromlineno="1088" tolineno="1088" lineno="1088" name="enabled"/>
                        <UnaryOp fromlineno="1088" tolineno="1088" lineno="1088">
                          <Compare fromlineno="1088" tolineno="1088" lineno="1088" op="('in', &lt;Name(myuse) l.1088 [bb] at Ox93bbb4c&gt;)">
                            <Name fromlineno="1088" tolineno="1088" lineno="1088" name="myusevar"/>
                            <Name fromlineno="1088" tolineno="1088" lineno="1088" name="myuse"/>
                          </Compare>
                        </UnaryOp>
                      </Assign>
                      <Assign fromlineno="1094" tolineno="1094" lineno="1094" targets="[&lt;AssName(myusevar) l.1094 [bb] at Ox93bbbac&gt;]" value="mysplit[mypos][:-1]">
                        <AssName fromlineno="1094" tolineno="1094" lineno="1094" name="myusevar"/>
                        <Subscript fromlineno="1094" tolineno="1094" lineno="1094">
                          <Subscript fromlineno="1094" tolineno="1094" lineno="1094">
                            <Name fromlineno="1094" tolineno="1094" lineno="1094" name="mysplit"/>
                            <Index fromlineno="1094" tolineno="1094" lineno="None">
                              <Name fromlineno="1094" tolineno="1094" lineno="1094" name="mypos"/>
                            </Index>
                          </Subscript>
                          <Slice fromlineno="1094" tolineno="1094" lineno="None">
                            <Const fromlineno="1094" tolineno="1094" lineno="1094" type="int">-1</Const>
                          </Slice>
                        </Subscript>
                      </Assign>
                      <Assign fromlineno="1095" tolineno="1095" lineno="1095" targets="[&lt;AssName(enabled) l.1095 [bb] at Ox93bbcec&gt;]" value="myusevar in myuse">
                        <AssName fromlineno="1095" tolineno="1095" lineno="1095" name="enabled"/>
                        <Compare fromlineno="1095" tolineno="1095" lineno="1095" op="('in', &lt;Name(myuse) l.1095 [bb] at Ox93bbd8c&gt;)">
                          <Name fromlineno="1095" tolineno="1095" lineno="1095" name="myusevar"/>
                          <Name fromlineno="1095" tolineno="1095" lineno="1095" name="myuse"/>
                        </Compare>
                      </Assign>
                    </If>
                  </If>
                  <If fromlineno="1100" tolineno="1123" lineno="1100">
                    <BoolOp fromlineno="1100" tolineno="1100" lineno="1100" op="and" values="(mypos) + (2) &lt; len(mysplit),mysplit[(mypos) + (2)] == ':',">
                      <Compare fromlineno="1100" tolineno="1100" lineno="1100" op="('&lt;', &lt;CallFunc() l.1100 [bb] at Ox93bbe6c&gt;)">
                        <BinOp fromlineno="1100" tolineno="1100" lineno="1100" op="+" left="mypos" right="2">
                          <Name fromlineno="1100" tolineno="1100" lineno="1100" name="mypos"/>
                          <Const fromlineno="1100" tolineno="1100" lineno="1100" type="int">2</Const>
                        </BinOp>
                        <CallFunc fromlineno="1100" tolineno="1100" lineno="1100" func="Name(len)">
                          <Name fromlineno="1100" tolineno="1100" lineno="1100" name="len"/>
                          <Name fromlineno="1100" tolineno="1100" lineno="1100" name="mysplit"/>
                        </CallFunc>
                      </Compare>
                      <Compare fromlineno="1100" tolineno="1100" lineno="1100" op="('==', &lt;Const(str) l.1100 [bb] at Ox93bbfec&gt;)">
                        <Subscript fromlineno="1100" tolineno="1100" lineno="1100">
                          <Name fromlineno="1100" tolineno="1100" lineno="1100" name="mysplit"/>
                          <Index fromlineno="1100" tolineno="1100" lineno="None">
                            <BinOp fromlineno="1100" tolineno="1100" lineno="1100" op="+" left="mypos" right="2">
                              <Name fromlineno="1100" tolineno="1100" lineno="1100" name="mypos"/>
                              <Const fromlineno="1100" tolineno="1100" lineno="1100" type="int">2</Const>
                            </BinOp>
                          </Index>
                        </Subscript>
                        <Const fromlineno="1100" tolineno="1100" lineno="1100" type="str">':'</Const>
                      </Compare>
                    </BoolOp>
                    <If fromlineno="1102" tolineno="1113" lineno="1102">
                      <Name fromlineno="1102" tolineno="1102" lineno="1102" name="enabled"/>
                      <If fromlineno="1104" tolineno="1107" lineno="1104">
                        <Compare fromlineno="1104" tolineno="1104" lineno="1104" op="('==', &lt;Getattr(ListType) l.1104 [bb] at Ox93c028c&gt;)">
                          <CallFunc fromlineno="1104" tolineno="1104" lineno="1104" func="Name(type)">
                            <Name fromlineno="1104" tolineno="1104" lineno="1104" name="type"/>
                            <Subscript fromlineno="1104" tolineno="1104" lineno="1104">
                              <Name fromlineno="1104" tolineno="1104" lineno="1104" name="mysplit"/>
                              <Index fromlineno="1104" tolineno="1104" lineno="None">
                                <BinOp fromlineno="1104" tolineno="1104" lineno="1104" op="+" left="mypos" right="1">
                                  <Name fromlineno="1104" tolineno="1104" lineno="1104" name="mypos"/>
                                  <Const fromlineno="1104" tolineno="1104" lineno="1104" type="int">1</Const>
                                </BinOp>
                              </Index>
                            </Subscript>
                          </CallFunc>
                          <Getattr fromlineno="1104" tolineno="1104" lineno="1104" attrname="ListType" expr="types">
                            <Name fromlineno="1104" tolineno="1104" lineno="1104" name="types"/>
                          </Getattr>
                        </Compare>
                        <Discard fromlineno="1105" tolineno="1105" lineno="1105">
                          <CallFunc fromlineno="1105" tolineno="1105" lineno="1105" func="Getattr(append)">
                            <Getattr fromlineno="1105" tolineno="1105" lineno="1105" attrname="append" expr="newsplit">
                              <Name fromlineno="1105" tolineno="1105" lineno="1105" name="newsplit"/>
                            </Getattr>
                            <CallFunc fromlineno="1105" tolineno="1105" lineno="1105" func="Name(dep_opconvert)">
                              <Name fromlineno="1105" tolineno="1105" lineno="1105" name="dep_opconvert"/>
                              <Subscript fromlineno="1105" tolineno="1105" lineno="1105">
                                <Name fromlineno="1105" tolineno="1105" lineno="1105" name="mysplit"/>
                                <Index fromlineno="1105" tolineno="1105" lineno="None">
                                  <BinOp fromlineno="1105" tolineno="1105" lineno="1105" op="+" left="mypos" right="1">
                                    <Name fromlineno="1105" tolineno="1105" lineno="1105" name="mypos"/>
                                    <Const fromlineno="1105" tolineno="1105" lineno="1105" type="int">1</Const>
                                  </BinOp>
                                </Index>
                              </Subscript>
                              <Name fromlineno="1105" tolineno="1105" lineno="1105" name="myuse"/>
                            </CallFunc>
                          </CallFunc>
                        </Discard>
                        <Discard fromlineno="1107" tolineno="1107" lineno="1107">
                          <CallFunc fromlineno="1107" tolineno="1107" lineno="1107" func="Getattr(append)">
                            <Getattr fromlineno="1107" tolineno="1107" lineno="1107" attrname="append" expr="newsplit">
                              <Name fromlineno="1107" tolineno="1107" lineno="1107" name="newsplit"/>
                            </Getattr>
                            <Subscript fromlineno="1107" tolineno="1107" lineno="1107">
                              <Name fromlineno="1107" tolineno="1107" lineno="1107" name="mysplit"/>
                              <Index fromlineno="1107" tolineno="1107" lineno="None">
                                <BinOp fromlineno="1107" tolineno="1107" lineno="1107" op="+" left="mypos" right="1">
                                  <Name fromlineno="1107" tolineno="1107" lineno="1107" name="mypos"/>
                                  <Const fromlineno="1107" tolineno="1107" lineno="1107" type="int">1</Const>
                                </BinOp>
                              </Index>
                            </Subscript>
                          </CallFunc>
                        </Discard>
                      </If>
                      <If fromlineno="1110" tolineno="1113" lineno="1110">
                        <Compare fromlineno="1110" tolineno="1110" lineno="1110" op="('==', &lt;Getattr(ListType) l.1110 [bb] at Ox93c07ec&gt;)">
                          <CallFunc fromlineno="1110" tolineno="1110" lineno="1110" func="Name(type)">
                            <Name fromlineno="1110" tolineno="1110" lineno="1110" name="type"/>
                            <Subscript fromlineno="1110" tolineno="1110" lineno="1110">
                              <Name fromlineno="1110" tolineno="1110" lineno="1110" name="mysplit"/>
                              <Index fromlineno="1110" tolineno="1110" lineno="None">
                                <BinOp fromlineno="1110" tolineno="1110" lineno="1110" op="+" left="mypos" right="1">
                                  <Name fromlineno="1110" tolineno="1110" lineno="1110" name="mypos"/>
                                  <Const fromlineno="1110" tolineno="1110" lineno="1110" type="int">1</Const>
                                </BinOp>
                              </Index>
                            </Subscript>
                          </CallFunc>
                          <Getattr fromlineno="1110" tolineno="1110" lineno="1110" attrname="ListType" expr="types">
                            <Name fromlineno="1110" tolineno="1110" lineno="1110" name="types"/>
                          </Getattr>
                        </Compare>
                        <Discard fromlineno="1111" tolineno="1111" lineno="1111">
                          <CallFunc fromlineno="1111" tolineno="1111" lineno="1111" func="Getattr(append)">
                            <Getattr fromlineno="1111" tolineno="1111" lineno="1111" attrname="append" expr="newsplit">
                              <Name fromlineno="1111" tolineno="1111" lineno="1111" name="newsplit"/>
                            </Getattr>
                            <CallFunc fromlineno="1111" tolineno="1111" lineno="1111" func="Name(dep_opconvert)">
                              <Name fromlineno="1111" tolineno="1111" lineno="1111" name="dep_opconvert"/>
                              <Subscript fromlineno="1111" tolineno="1111" lineno="1111">
                                <Name fromlineno="1111" tolineno="1111" lineno="1111" name="mysplit"/>
                                <Index fromlineno="1111" tolineno="1111" lineno="None">
                                  <BinOp fromlineno="1111" tolineno="1111" lineno="1111" op="+" left="mypos" right="3">
                                    <Name fromlineno="1111" tolineno="1111" lineno="1111" name="mypos"/>
                                    <Const fromlineno="1111" tolineno="1111" lineno="1111" type="int">3</Const>
                                  </BinOp>
                                </Index>
                              </Subscript>
                              <Name fromlineno="1111" tolineno="1111" lineno="1111" name="myuse"/>
                            </CallFunc>
                          </CallFunc>
                        </Discard>
                        <Discard fromlineno="1113" tolineno="1113" lineno="1113">
                          <CallFunc fromlineno="1113" tolineno="1113" lineno="1113" func="Getattr(append)">
                            <Getattr fromlineno="1113" tolineno="1113" lineno="1113" attrname="append" expr="newsplit">
                              <Name fromlineno="1113" tolineno="1113" lineno="1113" name="newsplit"/>
                            </Getattr>
                            <Subscript fromlineno="1113" tolineno="1113" lineno="1113">
                              <Name fromlineno="1113" tolineno="1113" lineno="1113" name="mysplit"/>
                              <Index fromlineno="1113" tolineno="1113" lineno="None">
                                <BinOp fromlineno="1113" tolineno="1113" lineno="1113" op="+" left="mypos" right="3">
                                  <Name fromlineno="1113" tolineno="1113" lineno="1113" name="mypos"/>
                                  <Const fromlineno="1113" tolineno="1113" lineno="1113" type="int">3</Const>
                                </BinOp>
                              </Index>
                            </Subscript>
                          </CallFunc>
                        </Discard>
                      </If>
                    </If>
                    <AugAssign fromlineno="1114" tolineno="1114" lineno="1114" target="mypos" value="4">
                      <AssName fromlineno="1114" tolineno="1114" lineno="1114" name="mypos"/>
                      <Const fromlineno="1114" tolineno="1114" lineno="1114" type="int">4</Const>
                    </AugAssign>
                    <If fromlineno="1117" tolineno="1121" lineno="1117">
                      <Name fromlineno="1117" tolineno="1117" lineno="1117" name="enabled"/>
                      <If fromlineno="1118" tolineno="1121" lineno="1118">
                        <Compare fromlineno="1118" tolineno="1118" lineno="1118" op="('==', &lt;Getattr(ListType) l.1118 [bb] at Ox93c0e2c&gt;)">
                          <CallFunc fromlineno="1118" tolineno="1118" lineno="1118" func="Name(type)">
                            <Name fromlineno="1118" tolineno="1118" lineno="1118" name="type"/>
                            <Subscript fromlineno="1118" tolineno="1118" lineno="1118">
                              <Name fromlineno="1118" tolineno="1118" lineno="1118" name="mysplit"/>
                              <Index fromlineno="1118" tolineno="1118" lineno="None">
                                <BinOp fromlineno="1118" tolineno="1118" lineno="1118" op="+" left="mypos" right="1">
                                  <Name fromlineno="1118" tolineno="1118" lineno="1118" name="mypos"/>
                                  <Const fromlineno="1118" tolineno="1118" lineno="1118" type="int">1</Const>
                                </BinOp>
                              </Index>
                            </Subscript>
                          </CallFunc>
                          <Getattr fromlineno="1118" tolineno="1118" lineno="1118" attrname="ListType" expr="types">
                            <Name fromlineno="1118" tolineno="1118" lineno="1118" name="types"/>
                          </Getattr>
                        </Compare>
                        <Discard fromlineno="1119" tolineno="1119" lineno="1119">
                          <CallFunc fromlineno="1119" tolineno="1119" lineno="1119" func="Getattr(append)">
                            <Getattr fromlineno="1119" tolineno="1119" lineno="1119" attrname="append" expr="newsplit">
                              <Name fromlineno="1119" tolineno="1119" lineno="1119" name="newsplit"/>
                            </Getattr>
                            <CallFunc fromlineno="1119" tolineno="1119" lineno="1119" func="Name(dep_opconvert)">
                              <Name fromlineno="1119" tolineno="1119" lineno="1119" name="dep_opconvert"/>
                              <Subscript fromlineno="1119" tolineno="1119" lineno="1119">
                                <Name fromlineno="1119" tolineno="1119" lineno="1119" name="mysplit"/>
                                <Index fromlineno="1119" tolineno="1119" lineno="None">
                                  <BinOp fromlineno="1119" tolineno="1119" lineno="1119" op="+" left="mypos" right="1">
                                    <Name fromlineno="1119" tolineno="1119" lineno="1119" name="mypos"/>
                                    <Const fromlineno="1119" tolineno="1119" lineno="1119" type="int">1</Const>
                                  </BinOp>
                                </Index>
                              </Subscript>
                              <Name fromlineno="1119" tolineno="1119" lineno="1119" name="myuse"/>
                            </CallFunc>
                          </CallFunc>
                        </Discard>
                        <Discard fromlineno="1121" tolineno="1121" lineno="1121">
                          <CallFunc fromlineno="1121" tolineno="1121" lineno="1121" func="Getattr(append)">
                            <Getattr fromlineno="1121" tolineno="1121" lineno="1121" attrname="append" expr="newsplit">
                              <Name fromlineno="1121" tolineno="1121" lineno="1121" name="newsplit"/>
                            </Getattr>
                            <Subscript fromlineno="1121" tolineno="1121" lineno="1121">
                              <Name fromlineno="1121" tolineno="1121" lineno="1121" name="mysplit"/>
                              <Index fromlineno="1121" tolineno="1121" lineno="None">
                                <BinOp fromlineno="1121" tolineno="1121" lineno="1121" op="+" left="mypos" right="1">
                                  <Name fromlineno="1121" tolineno="1121" lineno="1121" name="mypos"/>
                                  <Const fromlineno="1121" tolineno="1121" lineno="1121" type="int">1</Const>
                                </BinOp>
                              </Index>
                            </Subscript>
                          </CallFunc>
                        </Discard>
                      </If>
                    </If>
                    <AugAssign fromlineno="1123" tolineno="1123" lineno="1123" target="mypos" value="2">
                      <AssName fromlineno="1123" tolineno="1123" lineno="1123" name="mypos"/>
                      <Const fromlineno="1123" tolineno="1123" lineno="1123" type="int">2</Const>
                    </AugAssign>
                  </If>
                  <Discard fromlineno="1126" tolineno="1126" lineno="1126">
                    <CallFunc fromlineno="1126" tolineno="1126" lineno="1126" func="Getattr(append)">
                      <Getattr fromlineno="1126" tolineno="1126" lineno="1126" attrname="append" expr="newsplit">
                        <Name fromlineno="1126" tolineno="1126" lineno="1126" name="newsplit"/>
                      </Getattr>
                      <Subscript fromlineno="1126" tolineno="1126" lineno="1126">
                        <Name fromlineno="1126" tolineno="1126" lineno="1126" name="mysplit"/>
                        <Index fromlineno="1126" tolineno="1126" lineno="None">
                          <Name fromlineno="1126" tolineno="1126" lineno="1126" name="mypos"/>
                        </Index>
                      </Subscript>
                    </CallFunc>
                  </Discard>
                  <AugAssign fromlineno="1127" tolineno="1127" lineno="1127" target="mypos" value="1">
                    <AssName fromlineno="1127" tolineno="1127" lineno="1127" name="mypos"/>
                    <Const fromlineno="1127" tolineno="1127" lineno="1127" type="int">1</Const>
                  </AugAssign>
                </If>
              </If>
            </If>
          </If>
        </While>
        <Return fromlineno="1128" tolineno="1128" lineno="1128">
          <Name fromlineno="1128" tolineno="1128" lineno="1128" name="newsplit"/>
        </Return>
      </Function>
      <If fromlineno="1130" tolineno="1133" lineno="1130">
        <Compare fromlineno="1130" tolineno="1130" lineno="1130" op="('==', &lt;Const(str) l.1130 [bb] at Ox93b7dec&gt;)">
          <Name fromlineno="1130" tolineno="1130" lineno="1130" name="__name__"/>
          <Const fromlineno="1130" tolineno="1130" lineno="1130" type="str">'__main__'</Const>
        </Compare>
        <Import fromlineno="1131" tolineno="1131" lineno="1131">
          <ImportName name="doctest"/>
          <ImportName name="bb"/>
        </Import>
        <Discard fromlineno="1132" tolineno="1132" lineno="1132">
          <CallFunc fromlineno="1132" tolineno="1132" lineno="1132" func="Getattr(set_debug_level)">
            <Getattr fromlineno="1132" tolineno="1132" lineno="1132" attrname="set_debug_level" expr="bb.msg">
              <Getattr fromlineno="1132" tolineno="1132" lineno="1132" attrname="msg" expr="bb">
                <Name fromlineno="1132" tolineno="1132" lineno="1132" name="bb"/>
              </Getattr>
            </Getattr>
            <Const fromlineno="1132" tolineno="1132" lineno="1132" type="int">0</Const>
          </CallFunc>
        </Discard>
        <Discard fromlineno="1133" tolineno="1133" lineno="1133">
          <CallFunc fromlineno="1133" tolineno="1133" lineno="1133" func="Getattr(testmod)">
            <Getattr fromlineno="1133" tolineno="1133" lineno="1133" attrname="testmod" expr="doctest">
              <Name fromlineno="1133" tolineno="1133" lineno="1133" name="doctest"/>
            </Getattr>
            <Name fromlineno="1133" tolineno="1133" lineno="1133" name="bb"/>
          </CallFunc>
        </Discard>
      </If>
    </Module>
    <Module fromlineno="0" tolineno="320" lineno="0" name="bb.COW">
      <From fromlineno="26" tolineno="26" lineno="26" modname="inspect">
        <ImportName name="getmro"/>
      </From>
      <Import fromlineno="28" tolineno="28" lineno="28">
        <ImportName name="copy"/>
      </Import>
      <Import fromlineno="29" tolineno="29" lineno="29">
        <ImportName name="types"/>
      </Import>
      <Assign fromlineno="30" tolineno="39" lineno="30" targets="[&lt;AssAttr(ImmutableTypes) l.30 [bb.COW] at Ox92ed94c&gt;]" value="tuple(([types.BooleanType, types.ComplexType, types.FloatType, types.IntType, types.LongType, types.NoneType, types.TupleType, frozenset]) + (list(types.StringTypes)))">
        <AssAttr fromlineno="30" tolineno="30" lineno="30" attrname="ImmutableTypes" expr="types">
          <Name fromlineno="30" tolineno="30" lineno="30" name="types"/>
        </AssAttr>
        <CallFunc fromlineno="30" tolineno="39" lineno="30" func="Name(tuple)">
          <Name fromlineno="30" tolineno="30" lineno="30" name="tuple"/>
          <BinOp fromlineno="30" tolineno="39" lineno="30" op="+" left="[types.BooleanType, types.ComplexType, types.FloatType, types.IntType, types.LongType, types.NoneType, types.TupleType, frozenset]" right="list(types.StringTypes)">
            <List fromlineno="30" tolineno="38" lineno="30">
              <Getattr fromlineno="31" tolineno="31" lineno="31" attrname="BooleanType" expr="types">
                <Name fromlineno="31" tolineno="31" lineno="31" name="types"/>
              </Getattr>
              <Getattr fromlineno="32" tolineno="32" lineno="32" attrname="ComplexType" expr="types">
                <Name fromlineno="32" tolineno="32" lineno="32" name="types"/>
              </Getattr>
              <Getattr fromlineno="33" tolineno="33" lineno="33" attrname="FloatType" expr="types">
                <Name fromlineno="33" tolineno="33" lineno="33" name="types"/>
              </Getattr>
              <Getattr fromlineno="34" tolineno="34" lineno="34" attrname="IntType" expr="types">
                <Name fromlineno="34" tolineno="34" lineno="34" name="types"/>
              </Getattr>
              <Getattr fromlineno="35" tolineno="35" lineno="35" attrname="LongType" expr="types">
                <Name fromlineno="35" tolineno="35" lineno="35" name="types"/>
              </Getattr>
              <Getattr fromlineno="36" tolineno="36" lineno="36" attrname="NoneType" expr="types">
                <Name fromlineno="36" tolineno="36" lineno="36" name="types"/>
              </Getattr>
              <Getattr fromlineno="37" tolineno="37" lineno="37" attrname="TupleType" expr="types">
                <Name fromlineno="37" tolineno="37" lineno="37" name="types"/>
              </Getattr>
              <Name fromlineno="38" tolineno="38" lineno="38" name="frozenset"/>
            </List>
            <CallFunc fromlineno="39" tolineno="39" lineno="39" func="Name(list)">
              <Name fromlineno="39" tolineno="39" lineno="39" name="list"/>
              <Getattr fromlineno="39" tolineno="39" lineno="39" attrname="StringTypes" expr="types">
                <Name fromlineno="39" tolineno="39" lineno="39" name="types"/>
              </Getattr>
            </CallFunc>
          </BinOp>
        </CallFunc>
      </Assign>
      <Assign fromlineno="41" tolineno="41" lineno="41" targets="[&lt;AssName(MUTABLE) l.41 [bb.COW] at Ox92f1c0c&gt;]" value="'__mutable__'">
        <AssName fromlineno="41" tolineno="41" lineno="41" name="MUTABLE"/>
        <Const fromlineno="41" tolineno="41" lineno="41" type="str">'__mutable__'</Const>
      </Assign>
      <Class fromlineno="43" tolineno="44" lineno="43">
        <Name fromlineno="43" tolineno="43" lineno="43" name="type"/>
        <Pass fromlineno="44" tolineno="44" lineno="44"/>
      </Class>
      <Class fromlineno="46" tolineno="163" lineno="46">
        <Name fromlineno="46" tolineno="46" lineno="46" name="COWMeta"/>
        <Assign fromlineno="47" tolineno="47" lineno="47" targets="[&lt;AssName(__warn__) l.47 [bb.COW] at Ox92f1bac&gt;]" value="False">
          <AssName fromlineno="47" tolineno="47" lineno="47" name="__warn__"/>
          <Const fromlineno="47" tolineno="47" lineno="47" type="bool">False</Const>
        </Assign>
        <Assign fromlineno="48" tolineno="48" lineno="48" targets="[&lt;AssName(__hasmutable__) l.48 [bb.COW] at Ox92f180c&gt;]" value="False">
          <AssName fromlineno="48" tolineno="48" lineno="48" name="__hasmutable__"/>
          <Const fromlineno="48" tolineno="48" lineno="48" type="bool">False</Const>
        </Assign>
        <Assign fromlineno="49" tolineno="49" lineno="49" targets="[&lt;AssName(__marker__) l.49 [bb.COW] at Ox92f190c&gt;]" value="tuple()">
          <AssName fromlineno="49" tolineno="49" lineno="49" name="__marker__"/>
          <CallFunc fromlineno="49" tolineno="49" lineno="49" func="Name(tuple)">
            <Name fromlineno="49" tolineno="49" lineno="49" name="tuple"/>
          </CallFunc>
        </Assign>
        <Function fromlineno="51" tolineno="53" lineno="51">
          <Arguments fromlineno="51" tolineno="51" lineno="None" format_args="cls">
            <AssName fromlineno="51" tolineno="51" lineno="51" name="cls"/>
          </Arguments>
          <Return fromlineno="53" tolineno="53" lineno="53">
            <BinOp fromlineno="53" tolineno="53" lineno="53" op="%" left="'&lt;COWDict Level: %i Current Keys: %i&gt;'" right="(cls.__count__, (len(cls.__dict__)) - (3))">
              <Const fromlineno="53" tolineno="53" lineno="53" type="str">'&lt;COWDict Level: %i Current Keys: %i&gt;'</Const>
              <Tuple fromlineno="53" tolineno="53" lineno="53">
                <Getattr fromlineno="53" tolineno="53" lineno="53" attrname="__count__" expr="cls">
                  <Name fromlineno="53" tolineno="53" lineno="53" name="cls"/>
                </Getattr>
                <BinOp fromlineno="53" tolineno="53" lineno="53" op="-" left="len(cls.__dict__)" right="3">
                  <CallFunc fromlineno="53" tolineno="53" lineno="53" func="Name(len)">
                    <Name fromlineno="53" tolineno="53" lineno="53" name="len"/>
                    <Getattr fromlineno="53" tolineno="53" lineno="53" attrname="__dict__" expr="cls">
                      <Name fromlineno="53" tolineno="53" lineno="53" name="cls"/>
                    </Getattr>
                  </CallFunc>
                  <Const fromlineno="53" tolineno="53" lineno="53" type="int">3</Const>
                </BinOp>
              </Tuple>
            </BinOp>
          </Return>
        </Function>
        <Assign fromlineno="54" tolineno="54" lineno="54" targets="[&lt;AssName(__repr__) l.54 [bb.COW] at Ox92f1d6c&gt;]" value="__str__">
          <AssName fromlineno="54" tolineno="54" lineno="54" name="__repr__"/>
          <Name fromlineno="54" tolineno="54" lineno="54" name="__str__"/>
        </Assign>
        <Function fromlineno="56" tolineno="59" lineno="56">
          <Arguments fromlineno="56" tolineno="56" lineno="None" format_args="cls">
            <AssName fromlineno="56" tolineno="56" lineno="56" name="cls"/>
          </Arguments>
          <Class fromlineno="57" tolineno="58" lineno="57">
            <Name fromlineno="57" tolineno="57" lineno="57" name="cls"/>
            <Assign fromlineno="58" tolineno="58" lineno="58" targets="[&lt;AssName(__count__) l.58 [bb.COW] at Ox92f10ec&gt;]" value="(cls.__count__) + (1)">
              <AssName fromlineno="58" tolineno="58" lineno="58" name="__count__"/>
              <BinOp fromlineno="58" tolineno="58" lineno="58" op="+" left="cls.__count__" right="1">
                <Getattr fromlineno="58" tolineno="58" lineno="58" attrname="__count__" expr="cls">
                  <Name fromlineno="58" tolineno="58" lineno="58" name="cls"/>
                </Getattr>
                <Const fromlineno="58" tolineno="58" lineno="58" type="int">1</Const>
              </BinOp>
            </Assign>
          </Class>
          <Return fromlineno="59" tolineno="59" lineno="59">
            <Name fromlineno="59" tolineno="59" lineno="59" name="C"/>
          </Return>
        </Function>
        <Assign fromlineno="60" tolineno="60" lineno="60" targets="[&lt;AssName(copy) l.60 [bb.COW] at Ox92f148c&gt;]" value="cow">
          <AssName fromlineno="60" tolineno="60" lineno="60" name="copy"/>
          <Name fromlineno="60" tolineno="60" lineno="60" name="cow"/>
        </Assign>
        <Assign fromlineno="61" tolineno="61" lineno="61" targets="[&lt;AssName(__call__) l.61 [bb.COW] at Ox92f11cc&gt;]" value="cow">
          <AssName fromlineno="61" tolineno="61" lineno="61" name="__call__"/>
          <Name fromlineno="61" tolineno="61" lineno="61" name="cow"/>
        </Assign>
        <Function fromlineno="63" tolineno="68" lineno="63">
          <Arguments fromlineno="63" tolineno="63" lineno="None" format_args="cls, key, value">
            <AssName fromlineno="63" tolineno="63" lineno="63" name="cls"/>
            <AssName fromlineno="63" tolineno="63" lineno="63" name="key"/>
            <AssName fromlineno="63" tolineno="63" lineno="63" name="value"/>
          </Arguments>
          <If fromlineno="64" tolineno="67" lineno="64">
            <UnaryOp fromlineno="64" tolineno="64" lineno="64">
              <CallFunc fromlineno="64" tolineno="64" lineno="64" func="Name(isinstance)">
                <Name fromlineno="64" tolineno="64" lineno="64" name="isinstance"/>
                <Name fromlineno="64" tolineno="64" lineno="64" name="value"/>
                <Getattr fromlineno="64" tolineno="64" lineno="64" attrname="ImmutableTypes" expr="types">
                  <Name fromlineno="64" tolineno="64" lineno="64" name="types"/>
                </Getattr>
              </CallFunc>
            </UnaryOp>
            <If fromlineno="65" tolineno="66" lineno="65">
              <UnaryOp fromlineno="65" tolineno="65" lineno="65">
                <CallFunc fromlineno="65" tolineno="65" lineno="65" func="Name(isinstance)">
                  <Name fromlineno="65" tolineno="65" lineno="65" name="isinstance"/>
                  <Name fromlineno="65" tolineno="65" lineno="65" name="value"/>
                  <Name fromlineno="65" tolineno="65" lineno="65" name="COWMeta"/>
                </CallFunc>
              </UnaryOp>
              <Assign fromlineno="66" tolineno="66" lineno="66" targets="[&lt;AssAttr(__hasmutable__) l.66 [bb.COW] at Ox930378c&gt;]" value="True">
                <AssAttr fromlineno="66" tolineno="66" lineno="66" attrname="__hasmutable__" expr="cls">
                  <Name fromlineno="66" tolineno="66" lineno="66" name="cls"/>
                </AssAttr>
                <Const fromlineno="66" tolineno="66" lineno="66" type="bool">True</Const>
              </Assign>
            </If>
            <AugAssign fromlineno="67" tolineno="67" lineno="67" target="key" value="MUTABLE">
              <AssName fromlineno="67" tolineno="67" lineno="67" name="key"/>
              <Name fromlineno="67" tolineno="67" lineno="67" name="MUTABLE"/>
            </AugAssign>
          </If>
          <Discard fromlineno="68" tolineno="68" lineno="68">
            <CallFunc fromlineno="68" tolineno="68" lineno="68" func="Name(setattr)">
              <Name fromlineno="68" tolineno="68" lineno="68" name="setattr"/>
              <Name fromlineno="68" tolineno="68" lineno="68" name="cls"/>
              <Name fromlineno="68" tolineno="68" lineno="68" name="key"/>
              <Name fromlineno="68" tolineno="68" lineno="68" name="value"/>
            </CallFunc>
          </Discard>
        </Function>
        <Function fromlineno="70" tolineno="88" lineno="70">
          <Arguments fromlineno="70" tolineno="70" lineno="None" format_args="cls, key, readonly=False">
            <AssName fromlineno="70" tolineno="70" lineno="70" name="cls"/>
            <AssName fromlineno="70" tolineno="70" lineno="70" name="key"/>
            <AssName fromlineno="70" tolineno="70" lineno="70" name="readonly"/>
            <Const fromlineno="70" tolineno="70" lineno="70" type="bool">False</Const>
          </Arguments>
          <Assign fromlineno="71" tolineno="71" lineno="71" targets="[&lt;AssName(nkey) l.71 [bb.COW] at Ox93035ac&gt;]" value="(key) + (MUTABLE)">
            <AssName fromlineno="71" tolineno="71" lineno="71" name="nkey"/>
            <BinOp fromlineno="71" tolineno="71" lineno="71" op="+" left="key" right="MUTABLE">
              <Name fromlineno="71" tolineno="71" lineno="71" name="key"/>
              <Name fromlineno="71" tolineno="71" lineno="71" name="MUTABLE"/>
            </BinOp>
          </Assign>
          <TryExcept fromlineno="72" tolineno="75" lineno="72">
            <Return fromlineno="73" tolineno="73" lineno="73">
              <Subscript fromlineno="73" tolineno="73" lineno="73">
                <Getattr fromlineno="73" tolineno="73" lineno="73" attrname="__dict__" expr="cls">
                  <Name fromlineno="73" tolineno="73" lineno="73" name="cls"/>
                </Getattr>
                <Index fromlineno="73" tolineno="73" lineno="None">
                  <Name fromlineno="73" tolineno="73" lineno="73" name="nkey"/>
                </Index>
              </Subscript>
            </Return>
            <ExceptHandler fromlineno="74" tolineno="75" lineno="74">
              <Name fromlineno="74" tolineno="74" lineno="74" name="KeyError"/>
              <Pass fromlineno="75" tolineno="75" lineno="75"/>
            </ExceptHandler>
          </TryExcept>
          <Assign fromlineno="77" tolineno="77" lineno="77" targets="[&lt;AssName(value) l.77 [bb.COW] at Ox930336c&gt;]" value="getattr(cls, nkey)">
            <AssName fromlineno="77" tolineno="77" lineno="77" name="value"/>
            <CallFunc fromlineno="77" tolineno="77" lineno="77" func="Name(getattr)">
              <Name fromlineno="77" tolineno="77" lineno="77" name="getattr"/>
              <Name fromlineno="77" tolineno="77" lineno="77" name="cls"/>
              <Name fromlineno="77" tolineno="77" lineno="77" name="nkey"/>
            </CallFunc>
          </Assign>
          <If fromlineno="78" tolineno="79" lineno="78">
            <Name fromlineno="78" tolineno="78" lineno="78" name="readonly"/>
            <Return fromlineno="79" tolineno="79" lineno="79">
              <Name fromlineno="79" tolineno="79" lineno="79" name="value"/>
            </Return>
          </If>
          <If fromlineno="81" tolineno="82" lineno="81">
            <BoolOp fromlineno="81" tolineno="81" lineno="81" op="and" values="not cls.__warn__ is False,not isinstance(value, COWMeta),">
              <UnaryOp fromlineno="81" tolineno="81" lineno="81">
                <Compare fromlineno="81" tolineno="81" lineno="81" op="('is', &lt;Const(bool) l.81 [bb.COW] at Ox9303bec&gt;)">
                  <Getattr fromlineno="81" tolineno="81" lineno="81" attrname="__warn__" expr="cls">
                    <Name fromlineno="81" tolineno="81" lineno="81" name="cls"/>
                  </Getattr>
                  <Const fromlineno="81" tolineno="81" lineno="81" type="bool">False</Const>
                </Compare>
              </UnaryOp>
              <UnaryOp fromlineno="81" tolineno="81" lineno="81">
                <CallFunc fromlineno="81" tolineno="81" lineno="81" func="Name(isinstance)">
                  <Name fromlineno="81" tolineno="81" lineno="81" name="isinstance"/>
                  <Name fromlineno="81" tolineno="81" lineno="81" name="value"/>
                  <Name fromlineno="81" tolineno="81" lineno="81" name="COWMeta"/>
                </CallFunc>
              </UnaryOp>
            </BoolOp>
            <Print fromlineno="82" tolineno="82" lineno="82">
              <Getattr fromlineno="82" tolineno="82" lineno="82" attrname="__warn__" expr="cls">
                <Name fromlineno="82" tolineno="82" lineno="82" name="cls"/>
              </Getattr>
              <BinOp fromlineno="82" tolineno="82" lineno="82" op="%" left="'Warning: Doing a copy because %s is a mutable type.'" right="key">
                <Const fromlineno="82" tolineno="82" lineno="82" type="str">'Warning: Doing a copy because %s is a mutable type.'</Const>
                <Name fromlineno="82" tolineno="82" lineno="82" name="key"/>
              </BinOp>
            </Print>
          </If>
          <TryExcept fromlineno="83" tolineno="86" lineno="83">
            <Assign fromlineno="84" tolineno="84" lineno="84" targets="[&lt;AssName(value) l.84 [bb.COW] at Ox9303d4c&gt;]" value="value.copy()">
              <AssName fromlineno="84" tolineno="84" lineno="84" name="value"/>
              <CallFunc fromlineno="84" tolineno="84" lineno="84" func="Getattr(copy)">
                <Getattr fromlineno="84" tolineno="84" lineno="84" attrname="copy" expr="value">
                  <Name fromlineno="84" tolineno="84" lineno="84" name="value"/>
                </Getattr>
              </CallFunc>
            </Assign>
            <ExceptHandler fromlineno="85" tolineno="86" lineno="85">
              <Name fromlineno="85" tolineno="85" lineno="85" name="AttributeError"/>
              <AssName fromlineno="85" tolineno="85" lineno="85" name="e"/>
              <Assign fromlineno="86" tolineno="86" lineno="86" targets="[&lt;AssName(value) l.86 [bb.COW] at Ox9303f4c&gt;]" value="copy.copy(value)">
                <AssName fromlineno="86" tolineno="86" lineno="86" name="value"/>
                <CallFunc fromlineno="86" tolineno="86" lineno="86" func="Getattr(copy)">
                  <Getattr fromlineno="86" tolineno="86" lineno="86" attrname="copy" expr="copy">
                    <Name fromlineno="86" tolineno="86" lineno="86" name="copy"/>
                  </Getattr>
                  <Name fromlineno="86" tolineno="86" lineno="86" name="value"/>
                </CallFunc>
              </Assign>
            </ExceptHandler>
          </TryExcept>
          <Discard fromlineno="87" tolineno="87" lineno="87">
            <CallFunc fromlineno="87" tolineno="87" lineno="87" func="Name(setattr)">
              <Name fromlineno="87" tolineno="87" lineno="87" name="setattr"/>
              <Name fromlineno="87" tolineno="87" lineno="87" name="cls"/>
              <Name fromlineno="87" tolineno="87" lineno="87" name="nkey"/>
              <Name fromlineno="87" tolineno="87" lineno="87" name="value"/>
            </CallFunc>
          </Discard>
          <Return fromlineno="88" tolineno="88" lineno="88">
            <Name fromlineno="88" tolineno="88" lineno="88" name="value"/>
          </Return>
        </Function>
        <Assign fromlineno="90" tolineno="90" lineno="90" targets="[&lt;AssName(__getmarker__) l.90 [bb.COW] at Ox930a2ac&gt;]" value="[]">
          <AssName fromlineno="90" tolineno="90" lineno="90" name="__getmarker__"/>
          <List fromlineno="90" tolineno="90" lineno="90"/>
        </Assign>
        <Function fromlineno="91" tolineno="95" lineno="91">
          <Arguments fromlineno="91" tolineno="91" lineno="None" format_args="cls, key, default=__getmarker__">
            <AssName fromlineno="91" tolineno="91" lineno="91" name="cls"/>
            <AssName fromlineno="91" tolineno="91" lineno="91" name="key"/>
            <AssName fromlineno="91" tolineno="91" lineno="91" name="default"/>
            <Name fromlineno="91" tolineno="91" lineno="91" name="__getmarker__"/>
          </Arguments>
          <Return fromlineno="95" tolineno="95" lineno="95">
            <CallFunc fromlineno="95" tolineno="95" lineno="95" func="Getattr(__getitem__)">
              <Getattr fromlineno="95" tolineno="95" lineno="95" attrname="__getitem__" expr="cls">
                <Name fromlineno="95" tolineno="95" lineno="95" name="cls"/>
              </Getattr>
              <Name fromlineno="95" tolineno="95" lineno="95" name="key"/>
              <Name fromlineno="95" tolineno="95" lineno="95" name="default"/>
              <Const fromlineno="95" tolineno="95" lineno="95" type="bool">True</Const>
            </CallFunc>
          </Return>
        </Function>
        <Function fromlineno="97" tolineno="113" lineno="97">
          <Arguments fromlineno="97" tolineno="97" lineno="None" format_args="cls, key, default=__getmarker__, readonly=False">
            <AssName fromlineno="97" tolineno="97" lineno="97" name="cls"/>
            <AssName fromlineno="97" tolineno="97" lineno="97" name="key"/>
            <AssName fromlineno="97" tolineno="97" lineno="97" name="default"/>
            <AssName fromlineno="97" tolineno="97" lineno="97" name="readonly"/>
            <Name fromlineno="97" tolineno="97" lineno="97" name="__getmarker__"/>
            <Const fromlineno="97" tolineno="97" lineno="97" type="bool">False</Const>
          </Arguments>
          <TryExcept fromlineno="98" tolineno="113" lineno="98">
            <TryExcept fromlineno="99" tolineno="102" lineno="99">
              <Assign fromlineno="100" tolineno="100" lineno="100" targets="[&lt;AssName(value) l.100 [bb.COW] at Ox930acec&gt;]" value="getattr(cls, key)">
                <AssName fromlineno="100" tolineno="100" lineno="100" name="value"/>
                <CallFunc fromlineno="100" tolineno="100" lineno="100" func="Name(getattr)">
                  <Name fromlineno="100" tolineno="100" lineno="100" name="getattr"/>
                  <Name fromlineno="100" tolineno="100" lineno="100" name="cls"/>
                  <Name fromlineno="100" tolineno="100" lineno="100" name="key"/>
                </CallFunc>
              </Assign>
              <ExceptHandler fromlineno="101" tolineno="102" lineno="101">
                <Name fromlineno="101" tolineno="101" lineno="101" name="AttributeError"/>
                <Assign fromlineno="102" tolineno="102" lineno="102" targets="[&lt;AssName(value) l.102 [bb.COW] at Ox930a7ec&gt;]" value="cls.__getmutable__(key, readonly)">
                  <AssName fromlineno="102" tolineno="102" lineno="102" name="value"/>
                  <CallFunc fromlineno="102" tolineno="102" lineno="102" func="Getattr(__getmutable__)">
                    <Getattr fromlineno="102" tolineno="102" lineno="102" attrname="__getmutable__" expr="cls">
                      <Name fromlineno="102" tolineno="102" lineno="102" name="cls"/>
                    </Getattr>
                    <Name fromlineno="102" tolineno="102" lineno="102" name="key"/>
                    <Name fromlineno="102" tolineno="102" lineno="102" name="readonly"/>
                  </CallFunc>
                </Assign>
              </ExceptHandler>
            </TryExcept>
            <If fromlineno="105" tolineno="106" lineno="105">
              <Compare fromlineno="105" tolineno="105" lineno="105" op="('is', &lt;Getattr(__marker__) l.105 [bb.COW] at Ox930a4ac&gt;)">
                <Name fromlineno="105" tolineno="105" lineno="105" name="value"/>
                <Getattr fromlineno="105" tolineno="105" lineno="105" attrname="__marker__" expr="cls">
                  <Name fromlineno="105" tolineno="105" lineno="105" name="cls"/>
                </Getattr>
              </Compare>
              <Raise fromlineno="106" tolineno="106" lineno="106">
                <CallFunc fromlineno="106" tolineno="106" lineno="106" func="Name(AttributeError)">
                  <Name fromlineno="106" tolineno="106" lineno="106" name="AttributeError"/>
                  <BinOp fromlineno="106" tolineno="106" lineno="106" op="%" left="'key %s does not exist.'" right="key">
                    <Const fromlineno="106" tolineno="106" lineno="106" type="str">'key %s does not exist.'</Const>
                    <Name fromlineno="106" tolineno="106" lineno="106" name="key"/>
                  </BinOp>
                </CallFunc>
              </Raise>
            </If>
            <Return fromlineno="108" tolineno="108" lineno="108">
              <Name fromlineno="108" tolineno="108" lineno="108" name="value"/>
            </Return>
            <ExceptHandler fromlineno="109" tolineno="113" lineno="109">
              <Name fromlineno="109" tolineno="109" lineno="109" name="AttributeError"/>
              <AssName fromlineno="109" tolineno="109" lineno="109" name="e"/>
              <If fromlineno="110" tolineno="111" lineno="110">
                <UnaryOp fromlineno="110" tolineno="110" lineno="110">
                  <Compare fromlineno="110" tolineno="110" lineno="110" op="('is', &lt;Getattr(__getmarker__) l.110 [bb.COW] at Ox930a2ec&gt;)">
                    <Name fromlineno="110" tolineno="110" lineno="110" name="default"/>
                    <Getattr fromlineno="110" tolineno="110" lineno="110" attrname="__getmarker__" expr="cls">
                      <Name fromlineno="110" tolineno="110" lineno="110" name="cls"/>
                    </Getattr>
                  </Compare>
                </UnaryOp>
                <Return fromlineno="111" tolineno="111" lineno="111">
                  <Name fromlineno="111" tolineno="111" lineno="111" name="default"/>
                </Return>
              </If>
              <Raise fromlineno="113" tolineno="113" lineno="113">
                <CallFunc fromlineno="113" tolineno="113" lineno="113" func="Name(KeyError)">
                  <Name fromlineno="113" tolineno="113" lineno="113" name="KeyError"/>
                  <CallFunc fromlineno="113" tolineno="113" lineno="113" func="Name(str)">
                    <Name fromlineno="113" tolineno="113" lineno="113" name="str"/>
                    <Name fromlineno="113" tolineno="113" lineno="113" name="e"/>
                  </CallFunc>
                </CallFunc>
              </Raise>
            </ExceptHandler>
          </TryExcept>
        </Function>
        <Function fromlineno="115" tolineno="116" lineno="115">
          <Arguments fromlineno="115" tolineno="115" lineno="None" format_args="cls, key">
            <AssName fromlineno="115" tolineno="115" lineno="115" name="cls"/>
            <AssName fromlineno="115" tolineno="115" lineno="115" name="key"/>
          </Arguments>
          <Discard fromlineno="116" tolineno="116" lineno="116">
            <CallFunc fromlineno="116" tolineno="116" lineno="116" func="Getattr(__setitem__)">
              <Getattr fromlineno="116" tolineno="116" lineno="116" attrname="__setitem__" expr="cls">
                <Name fromlineno="116" tolineno="116" lineno="116" name="cls"/>
              </Getattr>
              <Name fromlineno="116" tolineno="116" lineno="116" name="key"/>
              <Getattr fromlineno="116" tolineno="116" lineno="116" attrname="__marker__" expr="cls">
                <Name fromlineno="116" tolineno="116" lineno="116" name="cls"/>
              </Getattr>
            </CallFunc>
          </Discard>
        </Function>
        <Function fromlineno="118" tolineno="121" lineno="118">
          <Arguments fromlineno="118" tolineno="118" lineno="None" format_args="cls, key">
            <AssName fromlineno="118" tolineno="118" lineno="118" name="cls"/>
            <AssName fromlineno="118" tolineno="118" lineno="118" name="key"/>
          </Arguments>
          <If fromlineno="119" tolineno="120" lineno="119">
            <UnaryOp fromlineno="119" tolineno="119" lineno="119">
              <CallFunc fromlineno="119" tolineno="119" lineno="119" func="Getattr(has_key)">
                <Getattr fromlineno="119" tolineno="119" lineno="119" attrname="has_key" expr="cls.__dict__">
                  <Getattr fromlineno="119" tolineno="119" lineno="119" attrname="__dict__" expr="cls">
                    <Name fromlineno="119" tolineno="119" lineno="119" name="cls"/>
                  </Getattr>
                </Getattr>
                <Name fromlineno="119" tolineno="119" lineno="119" name="key"/>
              </CallFunc>
            </UnaryOp>
            <AugAssign fromlineno="120" tolineno="120" lineno="120" target="key" value="MUTABLE">
              <AssName fromlineno="120" tolineno="120" lineno="120" name="key"/>
              <Name fromlineno="120" tolineno="120" lineno="120" name="MUTABLE"/>
            </AugAssign>
          </If>
          <Discard fromlineno="121" tolineno="121" lineno="121">
            <CallFunc fromlineno="121" tolineno="121" lineno="121" func="Name(delattr)">
              <Name fromlineno="121" tolineno="121" lineno="121" name="delattr"/>
              <Name fromlineno="121" tolineno="121" lineno="121" name="cls"/>
              <Name fromlineno="121" tolineno="121" lineno="121" name="key"/>
            </CallFunc>
          </Discard>
        </Function>
        <Function fromlineno="123" tolineno="127" lineno="123">
          <Arguments fromlineno="123" tolineno="123" lineno="None" format_args="cls, key">
            <AssName fromlineno="123" tolineno="123" lineno="123" name="cls"/>
            <AssName fromlineno="123" tolineno="123" lineno="123" name="key"/>
          </Arguments>
          <Assign fromlineno="124" tolineno="124" lineno="124" targets="[&lt;AssName(value) l.124 [bb.COW] at Ox93160ac&gt;]" value="cls.__getreadonly__(key, cls.__marker__)">
            <AssName fromlineno="124" tolineno="124" lineno="124" name="value"/>
            <CallFunc fromlineno="124" tolineno="124" lineno="124" func="Getattr(__getreadonly__)">
              <Getattr fromlineno="124" tolineno="124" lineno="124" attrname="__getreadonly__" expr="cls">
                <Name fromlineno="124" tolineno="124" lineno="124" name="cls"/>
              </Getattr>
              <Name fromlineno="124" tolineno="124" lineno="124" name="key"/>
              <Getattr fromlineno="124" tolineno="124" lineno="124" attrname="__marker__" expr="cls">
                <Name fromlineno="124" tolineno="124" lineno="124" name="cls"/>
              </Getattr>
            </CallFunc>
          </Assign>
          <If fromlineno="125" tolineno="126" lineno="125">
            <Compare fromlineno="125" tolineno="125" lineno="125" op="('is', &lt;Getattr(__marker__) l.125 [bb.COW] at Ox931692c&gt;)">
              <Name fromlineno="125" tolineno="125" lineno="125" name="value"/>
              <Getattr fromlineno="125" tolineno="125" lineno="125" attrname="__marker__" expr="cls">
                <Name fromlineno="125" tolineno="125" lineno="125" name="cls"/>
              </Getattr>
            </Compare>
            <Return fromlineno="126" tolineno="126" lineno="126">
              <Const fromlineno="126" tolineno="126" lineno="126" type="bool">False</Const>
            </Return>
          </If>
          <Return fromlineno="127" tolineno="127" lineno="127">
            <Const fromlineno="127" tolineno="127" lineno="127" type="bool">True</Const>
          </Return>
        </Function>
        <Function fromlineno="129" tolineno="152" lineno="129">
          <Arguments fromlineno="129" tolineno="129" lineno="None" format_args="cls, type, readonly=False">
            <AssName fromlineno="129" tolineno="129" lineno="129" name="cls"/>
            <AssName fromlineno="129" tolineno="129" lineno="129" name="type"/>
            <AssName fromlineno="129" tolineno="129" lineno="129" name="readonly"/>
            <Const fromlineno="129" tolineno="129" lineno="129" type="bool">False</Const>
          </Arguments>
          <For fromlineno="130" tolineno="151" lineno="130">
            <AssName fromlineno="130" tolineno="130" lineno="130" name="key"/>
            <CallFunc fromlineno="130" tolineno="130" lineno="130" func="Name(dir)">
              <Name fromlineno="130" tolineno="130" lineno="130" name="dir"/>
              <Name fromlineno="130" tolineno="130" lineno="130" name="cls"/>
            </CallFunc>
            <If fromlineno="131" tolineno="132" lineno="131">
              <CallFunc fromlineno="131" tolineno="131" lineno="131" func="Getattr(startswith)">
                <Getattr fromlineno="131" tolineno="131" lineno="131" attrname="startswith" expr="key">
                  <Name fromlineno="131" tolineno="131" lineno="131" name="key"/>
                </Getattr>
                <Const fromlineno="131" tolineno="131" lineno="131" type="str">'__'</Const>
              </CallFunc>
              <Continue fromlineno="132" tolineno="132" lineno="132"/>
            </If>
            <If fromlineno="134" tolineno="135" lineno="134">
              <CallFunc fromlineno="134" tolineno="134" lineno="134" func="Getattr(endswith)">
                <Getattr fromlineno="134" tolineno="134" lineno="134" attrname="endswith" expr="key">
                  <Name fromlineno="134" tolineno="134" lineno="134" name="key"/>
                </Getattr>
                <Name fromlineno="134" tolineno="134" lineno="134" name="MUTABLE"/>
              </CallFunc>
              <Assign fromlineno="135" tolineno="135" lineno="135" targets="[&lt;AssName(key) l.135 [bb.COW] at Ox9316e0c&gt;]" value="key[:-len(MUTABLE)]">
                <AssName fromlineno="135" tolineno="135" lineno="135" name="key"/>
                <Subscript fromlineno="135" tolineno="135" lineno="135">
                  <Name fromlineno="135" tolineno="135" lineno="135" name="key"/>
                  <Slice fromlineno="135" tolineno="135" lineno="None">
                    <UnaryOp fromlineno="135" tolineno="135" lineno="135">
                      <CallFunc fromlineno="135" tolineno="135" lineno="135" func="Name(len)">
                        <Name fromlineno="135" tolineno="135" lineno="135" name="len"/>
                        <Name fromlineno="135" tolineno="135" lineno="135" name="MUTABLE"/>
                      </CallFunc>
                    </UnaryOp>
                  </Slice>
                </Subscript>
              </Assign>
            </If>
            <If fromlineno="137" tolineno="138" lineno="137">
              <Compare fromlineno="137" tolineno="137" lineno="137" op="('==', &lt;Const(str) l.137 [bb.COW] at Ox931a08c&gt;)">
                <Name fromlineno="137" tolineno="137" lineno="137" name="type"/>
                <Const fromlineno="137" tolineno="137" lineno="137" type="str">'keys'</Const>
              </Compare>
              <Discard fromlineno="138" tolineno="138" lineno="138">
                <Yield fromlineno="138" tolineno="138" lineno="138">
                  <Name fromlineno="138" tolineno="138" lineno="138" name="key"/>
                </Yield>
              </Discard>
            </If>
            <TryExcept fromlineno="140" tolineno="146" lineno="140">
              <If fromlineno="141" tolineno="144" lineno="141">
                <Name fromlineno="141" tolineno="141" lineno="141" name="readonly"/>
                <Assign fromlineno="142" tolineno="142" lineno="142" targets="[&lt;AssName(value) l.142 [bb.COW] at Ox931a54c&gt;]" value="cls.__getreadonly__(key)">
                  <AssName fromlineno="142" tolineno="142" lineno="142" name="value"/>
                  <CallFunc fromlineno="142" tolineno="142" lineno="142" func="Getattr(__getreadonly__)">
                    <Getattr fromlineno="142" tolineno="142" lineno="142" attrname="__getreadonly__" expr="cls">
                      <Name fromlineno="142" tolineno="142" lineno="142" name="cls"/>
                    </Getattr>
                    <Name fromlineno="142" tolineno="142" lineno="142" name="key"/>
                  </CallFunc>
                </Assign>
                <Assign fromlineno="144" tolineno="144" lineno="144" targets="[&lt;AssName(value) l.144 [bb.COW] at Ox931a58c&gt;]" value="cls[key]">
                  <AssName fromlineno="144" tolineno="144" lineno="144" name="value"/>
                  <Subscript fromlineno="144" tolineno="144" lineno="144">
                    <Name fromlineno="144" tolineno="144" lineno="144" name="cls"/>
                    <Index fromlineno="144" tolineno="144" lineno="None">
                      <Name fromlineno="144" tolineno="144" lineno="144" name="key"/>
                    </Index>
                  </Subscript>
                </Assign>
              </If>
              <ExceptHandler fromlineno="145" tolineno="146" lineno="145">
                <Name fromlineno="145" tolineno="145" lineno="145" name="KeyError"/>
                <Continue fromlineno="146" tolineno="146" lineno="146"/>
              </ExceptHandler>
            </TryExcept>
            <If fromlineno="148" tolineno="149" lineno="148">
              <Compare fromlineno="148" tolineno="148" lineno="148" op="('==', &lt;Const(str) l.148 [bb.COW] at Ox931a70c&gt;)">
                <Name fromlineno="148" tolineno="148" lineno="148" name="type"/>
                <Const fromlineno="148" tolineno="148" lineno="148" type="str">'values'</Const>
              </Compare>
              <Discard fromlineno="149" tolineno="149" lineno="149">
                <Yield fromlineno="149" tolineno="149" lineno="149">
                  <Name fromlineno="149" tolineno="149" lineno="149" name="value"/>
                </Yield>
              </Discard>
            </If>
            <If fromlineno="150" tolineno="151" lineno="150">
              <Compare fromlineno="150" tolineno="150" lineno="150" op="('==', &lt;Const(str) l.150 [bb.COW] at Ox931a4cc&gt;)">
                <Name fromlineno="150" tolineno="150" lineno="150" name="type"/>
                <Const fromlineno="150" tolineno="150" lineno="150" type="str">'items'</Const>
              </Compare>
              <Discard fromlineno="151" tolineno="151" lineno="151">
                <Yield fromlineno="151" tolineno="151" lineno="151">
                  <Tuple fromlineno="151" tolineno="151" lineno="151">
                    <Name fromlineno="151" tolineno="151" lineno="151" name="key"/>
                    <Name fromlineno="151" tolineno="151" lineno="151" name="value"/>
                  </Tuple>
                </Yield>
              </Discard>
            </If>
          </For>
          <Raise fromlineno="152" tolineno="152" lineno="152">
            <CallFunc fromlineno="152" tolineno="152" lineno="152" func="Name(StopIteration)">
              <Name fromlineno="152" tolineno="152" lineno="152" name="StopIteration"/>
            </CallFunc>
          </Raise>
        </Function>
        <Function fromlineno="154" tolineno="155" lineno="154">
          <Arguments fromlineno="154" tolineno="154" lineno="None" format_args="cls">
            <AssName fromlineno="154" tolineno="154" lineno="154" name="cls"/>
          </Arguments>
          <Return fromlineno="155" tolineno="155" lineno="155">
            <CallFunc fromlineno="155" tolineno="155" lineno="155" func="Getattr(iter)">
              <Getattr fromlineno="155" tolineno="155" lineno="155" attrname="iter" expr="cls">
                <Name fromlineno="155" tolineno="155" lineno="155" name="cls"/>
              </Getattr>
              <Const fromlineno="155" tolineno="155" lineno="155" type="str">'keys'</Const>
            </CallFunc>
          </Return>
        </Function>
        <Function fromlineno="156" tolineno="159" lineno="156">
          <Arguments fromlineno="156" tolineno="156" lineno="None" format_args="cls, readonly=False">
            <AssName fromlineno="156" tolineno="156" lineno="156" name="cls"/>
            <AssName fromlineno="156" tolineno="156" lineno="156" name="readonly"/>
            <Const fromlineno="156" tolineno="156" lineno="156" type="bool">False</Const>
          </Arguments>
          <If fromlineno="157" tolineno="158" lineno="157">
            <BoolOp fromlineno="157" tolineno="157" lineno="157" op="and" values="not cls.__warn__ is False,cls.__hasmutable__,readonly is False,">
              <UnaryOp fromlineno="157" tolineno="157" lineno="157">
                <Compare fromlineno="157" tolineno="157" lineno="157" op="('is', &lt;Const(bool) l.157 [bb.COW] at Ox931aaac&gt;)">
                  <Getattr fromlineno="157" tolineno="157" lineno="157" attrname="__warn__" expr="cls">
                    <Name fromlineno="157" tolineno="157" lineno="157" name="cls"/>
                  </Getattr>
                  <Const fromlineno="157" tolineno="157" lineno="157" type="bool">False</Const>
                </Compare>
              </UnaryOp>
              <Getattr fromlineno="157" tolineno="157" lineno="157" attrname="__hasmutable__" expr="cls">
                <Name fromlineno="157" tolineno="157" lineno="157" name="cls"/>
              </Getattr>
              <Compare fromlineno="157" tolineno="157" lineno="157" op="('is', &lt;Const(bool) l.157 [bb.COW] at Ox931abac&gt;)">
                <Name fromlineno="157" tolineno="157" lineno="157" name="readonly"/>
                <Const fromlineno="157" tolineno="157" lineno="157" type="bool">False</Const>
              </Compare>
            </BoolOp>
            <Print fromlineno="158" tolineno="158" lineno="158">
              <Getattr fromlineno="158" tolineno="158" lineno="158" attrname="__warn__" expr="cls">
                <Name fromlineno="158" tolineno="158" lineno="158" name="cls"/>
              </Getattr>
              <Const fromlineno="158" tolineno="158" lineno="158" type="str">"Warning: If you arn't going to change any of the values call with True."</Const>
            </Print>
          </If>
          <Return fromlineno="159" tolineno="159" lineno="159">
            <CallFunc fromlineno="159" tolineno="159" lineno="159" func="Getattr(iter)">
              <Getattr fromlineno="159" tolineno="159" lineno="159" attrname="iter" expr="cls">
                <Name fromlineno="159" tolineno="159" lineno="159" name="cls"/>
              </Getattr>
              <Const fromlineno="159" tolineno="159" lineno="159" type="str">'values'</Const>
              <Name fromlineno="159" tolineno="159" lineno="159" name="readonly"/>
            </CallFunc>
          </Return>
        </Function>
        <Function fromlineno="160" tolineno="163" lineno="160">
          <Arguments fromlineno="160" tolineno="160" lineno="None" format_args="cls, readonly=False">
            <AssName fromlineno="160" tolineno="160" lineno="160" name="cls"/>
            <AssName fromlineno="160" tolineno="160" lineno="160" name="readonly"/>
            <Const fromlineno="160" tolineno="160" lineno="160" type="bool">False</Const>
          </Arguments>
          <If fromlineno="161" tolineno="162" lineno="161">
            <BoolOp fromlineno="161" tolineno="161" lineno="161" op="and" values="not cls.__warn__ is False,cls.__hasmutable__,readonly is False,">
              <UnaryOp fromlineno="161" tolineno="161" lineno="161">
                <Compare fromlineno="161" tolineno="161" lineno="161" op="('is', &lt;Const(bool) l.161 [bb.COW] at Ox9268bec&gt;)">
                  <Getattr fromlineno="161" tolineno="161" lineno="161" attrname="__warn__" expr="cls">
                    <Name fromlineno="161" tolineno="161" lineno="161" name="cls"/>
                  </Getattr>
                  <Const fromlineno="161" tolineno="161" lineno="161" type="bool">False</Const>
                </Compare>
              </UnaryOp>
              <Getattr fromlineno="161" tolineno="161" lineno="161" attrname="__hasmutable__" expr="cls">
                <Name fromlineno="161" tolineno="161" lineno="161" name="cls"/>
              </Getattr>
              <Compare fromlineno="161" tolineno="161" lineno="161" op="('is', &lt;Const(bool) l.161 [bb.COW] at Ox9268c2c&gt;)">
                <Name fromlineno="161" tolineno="161" lineno="161" name="readonly"/>
                <Const fromlineno="161" tolineno="161" lineno="161" type="bool">False</Const>
              </Compare>
            </BoolOp>
            <Print fromlineno="162" tolineno="162" lineno="162">
              <Getattr fromlineno="162" tolineno="162" lineno="162" attrname="__warn__" expr="cls">
                <Name fromlineno="162" tolineno="162" lineno="162" name="cls"/>
              </Getattr>
              <Const fromlineno="162" tolineno="162" lineno="162" type="str">"Warning: If you arn't going to change any of the values call with True."</Const>
            </Print>
          </If>
          <Return fromlineno="163" tolineno="163" lineno="163">
            <CallFunc fromlineno="163" tolineno="163" lineno="163" func="Getattr(iter)">
              <Getattr fromlineno="163" tolineno="163" lineno="163" attrname="iter" expr="cls">
                <Name fromlineno="163" tolineno="163" lineno="163" name="cls"/>
              </Getattr>
              <Const fromlineno="163" tolineno="163" lineno="163" type="str">'items'</Const>
              <Name fromlineno="163" tolineno="163" lineno="163" name="readonly"/>
            </CallFunc>
          </Return>
        </Function>
      </Class>
      <Class fromlineno="165" tolineno="189" lineno="165">
        <Name fromlineno="165" tolineno="165" lineno="165" name="COWDictMeta"/>
        <Function fromlineno="166" tolineno="168" lineno="166">
          <Arguments fromlineno="166" tolineno="166" lineno="None" format_args="cls">
            <AssName fromlineno="166" tolineno="166" lineno="166" name="cls"/>
          </Arguments>
          <Return fromlineno="168" tolineno="168" lineno="168">
            <BinOp fromlineno="168" tolineno="168" lineno="168" op="%" left="'&lt;COWSet Level: %i Current Keys: %i&gt;'" right="(cls.__count__, (len(cls.__dict__)) - (3))">
              <Const fromlineno="168" tolineno="168" lineno="168" type="str">'&lt;COWSet Level: %i Current Keys: %i&gt;'</Const>
              <Tuple fromlineno="168" tolineno="168" lineno="168">
                <Getattr fromlineno="168" tolineno="168" lineno="168" attrname="__count__" expr="cls">
                  <Name fromlineno="168" tolineno="168" lineno="168" name="cls"/>
                </Getattr>
                <BinOp fromlineno="168" tolineno="168" lineno="168" op="-" left="len(cls.__dict__)" right="3">
                  <CallFunc fromlineno="168" tolineno="168" lineno="168" func="Name(len)">
                    <Name fromlineno="168" tolineno="168" lineno="168" name="len"/>
                    <Getattr fromlineno="168" tolineno="168" lineno="168" attrname="__dict__" expr="cls">
                      <Name fromlineno="168" tolineno="168" lineno="168" name="cls"/>
                    </Getattr>
                  </CallFunc>
                  <Const fromlineno="168" tolineno="168" lineno="168" type="int">3</Const>
                </BinOp>
              </Tuple>
            </BinOp>
          </Return>
        </Function>
        <Assign fromlineno="169" tolineno="169" lineno="169" targets="[&lt;AssName(__repr__) l.169 [bb.COW] at Ox926818c&gt;]" value="__str__">
          <AssName fromlineno="169" tolineno="169" lineno="169" name="__repr__"/>
          <Name fromlineno="169" tolineno="169" lineno="169" name="__str__"/>
        </Assign>
        <Function fromlineno="171" tolineno="174" lineno="171">
          <Arguments fromlineno="171" tolineno="171" lineno="None" format_args="cls">
            <AssName fromlineno="171" tolineno="171" lineno="171" name="cls"/>
          </Arguments>
          <Class fromlineno="172" tolineno="173" lineno="172">
            <Name fromlineno="172" tolineno="172" lineno="172" name="cls"/>
            <Assign fromlineno="173" tolineno="173" lineno="173" targets="[&lt;AssName(__count__) l.173 [bb.COW] at Ox926850c&gt;]" value="(cls.__count__) + (1)">
              <AssName fromlineno="173" tolineno="173" lineno="173" name="__count__"/>
              <BinOp fromlineno="173" tolineno="173" lineno="173" op="+" left="cls.__count__" right="1">
                <Getattr fromlineno="173" tolineno="173" lineno="173" attrname="__count__" expr="cls">
                  <Name fromlineno="173" tolineno="173" lineno="173" name="cls"/>
                </Getattr>
                <Const fromlineno="173" tolineno="173" lineno="173" type="int">1</Const>
              </BinOp>
            </Assign>
          </Class>
          <Return fromlineno="174" tolineno="174" lineno="174">
            <Name fromlineno="174" tolineno="174" lineno="174" name="C"/>
          </Return>
        </Function>
        <Function fromlineno="176" tolineno="177" lineno="176">
          <Arguments fromlineno="176" tolineno="176" lineno="None" format_args="cls, value">
            <AssName fromlineno="176" tolineno="176" lineno="176" name="cls"/>
            <AssName fromlineno="176" tolineno="176" lineno="176" name="value"/>
          </Arguments>
          <Discard fromlineno="177" tolineno="177" lineno="177">
            <CallFunc fromlineno="177" tolineno="177" lineno="177" func="Getattr(__setitem__)">
              <Getattr fromlineno="177" tolineno="177" lineno="177" attrname="__setitem__" expr="COWDictMeta">
                <Name fromlineno="177" tolineno="177" lineno="177" name="COWDictMeta"/>
              </Getattr>
              <Name fromlineno="177" tolineno="177" lineno="177" name="cls"/>
              <CallFunc fromlineno="177" tolineno="177" lineno="177" func="Name(repr)">
                <Name fromlineno="177" tolineno="177" lineno="177" name="repr"/>
                <CallFunc fromlineno="177" tolineno="177" lineno="177" func="Name(hash)">
                  <Name fromlineno="177" tolineno="177" lineno="177" name="hash"/>
                  <Name fromlineno="177" tolineno="177" lineno="177" name="value"/>
                </CallFunc>
              </CallFunc>
              <Name fromlineno="177" tolineno="177" lineno="177" name="value"/>
            </CallFunc>
          </Discard>
        </Function>
        <Function fromlineno="179" tolineno="180" lineno="179">
          <Arguments fromlineno="179" tolineno="179" lineno="None" format_args="cls, value">
            <AssName fromlineno="179" tolineno="179" lineno="179" name="cls"/>
            <AssName fromlineno="179" tolineno="179" lineno="179" name="value"/>
          </Arguments>
          <Discard fromlineno="180" tolineno="180" lineno="180">
            <CallFunc fromlineno="180" tolineno="180" lineno="180" func="Getattr(__delitem__)">
              <Getattr fromlineno="180" tolineno="180" lineno="180" attrname="__delitem__" expr="COWDictMeta">
                <Name fromlineno="180" tolineno="180" lineno="180" name="COWDictMeta"/>
              </Getattr>
              <Name fromlineno="180" tolineno="180" lineno="180" name="cls"/>
              <CallFunc fromlineno="180" tolineno="180" lineno="180" func="Name(repr)">
                <Name fromlineno="180" tolineno="180" lineno="180" name="repr"/>
                <CallFunc fromlineno="180" tolineno="180" lineno="180" func="Name(hash)">
                  <Name fromlineno="180" tolineno="180" lineno="180" name="hash"/>
                  <Name fromlineno="180" tolineno="180" lineno="180" name="value"/>
                </CallFunc>
              </CallFunc>
            </CallFunc>
          </Discard>
        </Function>
        <Function fromlineno="182" tolineno="183" lineno="182">
          <Arguments fromlineno="182" tolineno="182" lineno="None" format_args="cls, value">
            <AssName fromlineno="182" tolineno="182" lineno="182" name="cls"/>
            <AssName fromlineno="182" tolineno="182" lineno="182" name="value"/>
          </Arguments>
          <Return fromlineno="183" tolineno="183" lineno="183">
            <CallFunc fromlineno="183" tolineno="183" lineno="183" func="Getattr(has_key)">
              <Getattr fromlineno="183" tolineno="183" lineno="183" attrname="has_key" expr="COWDictMeta">
                <Name fromlineno="183" tolineno="183" lineno="183" name="COWDictMeta"/>
              </Getattr>
              <CallFunc fromlineno="183" tolineno="183" lineno="183" func="Name(repr)">
                <Name fromlineno="183" tolineno="183" lineno="183" name="repr"/>
                <CallFunc fromlineno="183" tolineno="183" lineno="183" func="Name(hash)">
                  <Name fromlineno="183" tolineno="183" lineno="183" name="hash"/>
                  <Name fromlineno="183" tolineno="183" lineno="183" name="value"/>
                </CallFunc>
              </CallFunc>
            </CallFunc>
          </Return>
        </Function>
        <Function fromlineno="185" tolineno="186" lineno="185">
          <Arguments fromlineno="185" tolineno="185" lineno="None" format_args="cls">
            <AssName fromlineno="185" tolineno="185" lineno="185" name="cls"/>
          </Arguments>
          <Raise fromlineno="186" tolineno="186" lineno="186">
            <CallFunc fromlineno="186" tolineno="186" lineno="186" func="Name(TypeError)">
              <Name fromlineno="186" tolineno="186" lineno="186" name="TypeError"/>
              <Const fromlineno="186" tolineno="186" lineno="186" type="str">"sets don't have keys"</Const>
            </CallFunc>
          </Raise>
        </Function>
        <Function fromlineno="188" tolineno="189" lineno="188">
          <Arguments fromlineno="188" tolineno="188" lineno="None" format_args="cls">
            <AssName fromlineno="188" tolineno="188" lineno="188" name="cls"/>
          </Arguments>
          <Raise fromlineno="189" tolineno="189" lineno="189">
            <CallFunc fromlineno="189" tolineno="189" lineno="189" func="Name(TypeError)">
              <Name fromlineno="189" tolineno="189" lineno="189" name="TypeError"/>
              <Const fromlineno="189" tolineno="189" lineno="189" type="str">"sets don't have 'items'"</Const>
            </CallFunc>
          </Raise>
        </Function>
      </Class>
      <Class fromlineno="192" tolineno="194" lineno="192">
        <Name fromlineno="192" tolineno="192" lineno="192" name="object"/>
        <Assign fromlineno="193" tolineno="193" lineno="193" targets="[&lt;AssName(__metaclass__) l.193 [bb.COW] at Ox926dc2c&gt;]" value="COWDictMeta">
          <AssName fromlineno="193" tolineno="193" lineno="193" name="__metaclass__"/>
          <Name fromlineno="193" tolineno="193" lineno="193" name="COWDictMeta"/>
        </Assign>
        <Assign fromlineno="194" tolineno="194" lineno="194" targets="[&lt;AssName(__count__) l.194 [bb.COW] at Ox926dfac&gt;]" value="0">
          <AssName fromlineno="194" tolineno="194" lineno="194" name="__count__"/>
          <Const fromlineno="194" tolineno="194" lineno="194" type="int">0</Const>
        </Assign>
      </Class>
      <Class fromlineno="196" tolineno="198" lineno="196">
        <Name fromlineno="196" tolineno="196" lineno="196" name="object"/>
        <Assign fromlineno="197" tolineno="197" lineno="197" targets="[&lt;AssName(__metaclass__) l.197 [bb.COW] at Ox926da6c&gt;]" value="COWSetMeta">
          <AssName fromlineno="197" tolineno="197" lineno="197" name="__metaclass__"/>
          <Name fromlineno="197" tolineno="197" lineno="197" name="COWSetMeta"/>
        </Assign>
        <Assign fromlineno="198" tolineno="198" lineno="198" targets="[&lt;AssName(__count__) l.198 [bb.COW] at Ox926decc&gt;]" value="0">
          <AssName fromlineno="198" tolineno="198" lineno="198" name="__count__"/>
          <Const fromlineno="198" tolineno="198" lineno="198" type="int">0</Const>
        </Assign>
      </Class>
      <If fromlineno="200" tolineno="320" lineno="200">
        <Compare fromlineno="200" tolineno="200" lineno="200" op="('==', &lt;Const(str) l.200 [bb.COW] at Ox926dd4c&gt;)">
          <Name fromlineno="200" tolineno="200" lineno="200" name="__name__"/>
          <Const fromlineno="200" tolineno="200" lineno="200" type="str">'__main__'</Const>
        </Compare>
        <Import fromlineno="201" tolineno="201" lineno="201">
          <ImportName name="sys"/>
        </Import>
        <Assign fromlineno="202" tolineno="202" lineno="202" targets="[&lt;AssAttr(__warn__) l.202 [bb.COW] at Ox926d86c&gt;]" value="sys.stderr">
          <AssAttr fromlineno="202" tolineno="202" lineno="202" attrname="__warn__" expr="COWDictBase">
            <Name fromlineno="202" tolineno="202" lineno="202" name="COWDictBase"/>
          </AssAttr>
          <Getattr fromlineno="202" tolineno="202" lineno="202" attrname="stderr" expr="sys">
            <Name fromlineno="202" tolineno="202" lineno="202" name="sys"/>
          </Getattr>
        </Assign>
        <Assign fromlineno="203" tolineno="203" lineno="203" targets="[&lt;AssName(a) l.203 [bb.COW] at Ox926d8ac&gt;]" value="COWDictBase()">
          <AssName fromlineno="203" tolineno="203" lineno="203" name="a"/>
          <CallFunc fromlineno="203" tolineno="203" lineno="203" func="Name(COWDictBase)">
            <Name fromlineno="203" tolineno="203" lineno="203" name="COWDictBase"/>
          </CallFunc>
        </Assign>
        <Print fromlineno="204" tolineno="204" lineno="204">
          <Const fromlineno="204" tolineno="204" lineno="204" type="str">'a'</Const>
          <Name fromlineno="204" tolineno="204" lineno="204" name="a"/>
        </Print>
        <Assign fromlineno="206" tolineno="206" lineno="206" targets="[&lt;Subscript() l.206 [bb.COW] at Ox927d38c&gt;]" value="'a'">
          <Subscript fromlineno="206" tolineno="206" lineno="206">
            <Name fromlineno="206" tolineno="206" lineno="206" name="a"/>
            <Index fromlineno="206" tolineno="206" lineno="None">
              <Const fromlineno="206" tolineno="206" lineno="206" type="str">'a'</Const>
            </Index>
          </Subscript>
          <Const fromlineno="206" tolineno="206" lineno="206" type="str">'a'</Const>
        </Assign>
        <Assign fromlineno="207" tolineno="207" lineno="207" targets="[&lt;Subscript() l.207 [bb.COW] at Ox927d04c&gt;]" value="'b'">
          <Subscript fromlineno="207" tolineno="207" lineno="207">
            <Name fromlineno="207" tolineno="207" lineno="207" name="a"/>
            <Index fromlineno="207" tolineno="207" lineno="None">
              <Const fromlineno="207" tolineno="207" lineno="207" type="str">'b'</Const>
            </Index>
          </Subscript>
          <Const fromlineno="207" tolineno="207" lineno="207" type="str">'b'</Const>
        </Assign>
        <Assign fromlineno="208" tolineno="208" lineno="208" targets="[&lt;Subscript() l.208 [bb.COW] at Ox927db4c&gt;]" value="{}">
          <Subscript fromlineno="208" tolineno="208" lineno="208">
            <Name fromlineno="208" tolineno="208" lineno="208" name="a"/>
            <Index fromlineno="208" tolineno="208" lineno="None">
              <Const fromlineno="208" tolineno="208" lineno="208" type="str">'dict'</Const>
            </Index>
          </Subscript>
          <Dict fromlineno="208" tolineno="208" lineno="208"/>
        </Assign>
        <Assign fromlineno="210" tolineno="210" lineno="210" targets="[&lt;AssName(b) l.210 [bb.COW] at Ox927ddec&gt;]" value="a.copy()">
          <AssName fromlineno="210" tolineno="210" lineno="210" name="b"/>
          <CallFunc fromlineno="210" tolineno="210" lineno="210" func="Getattr(copy)">
            <Getattr fromlineno="210" tolineno="210" lineno="210" attrname="copy" expr="a">
              <Name fromlineno="210" tolineno="210" lineno="210" name="a"/>
            </Getattr>
          </CallFunc>
        </Assign>
        <Print fromlineno="211" tolineno="211" lineno="211">
          <Const fromlineno="211" tolineno="211" lineno="211" type="str">'b'</Const>
          <Name fromlineno="211" tolineno="211" lineno="211" name="b"/>
        </Print>
        <Assign fromlineno="212" tolineno="212" lineno="212" targets="[&lt;Subscript() l.212 [bb.COW] at Ox927dc8c&gt;]" value="'b'">
          <Subscript fromlineno="212" tolineno="212" lineno="212">
            <Name fromlineno="212" tolineno="212" lineno="212" name="b"/>
            <Index fromlineno="212" tolineno="212" lineno="None">
              <Const fromlineno="212" tolineno="212" lineno="212" type="str">'c'</Const>
            </Index>
          </Subscript>
          <Const fromlineno="212" tolineno="212" lineno="212" type="str">'b'</Const>
        </Assign>
        <Print fromlineno="214" tolineno="214" lineno="214"/>
        <Print fromlineno="216" tolineno="216" lineno="216">
          <Const fromlineno="216" tolineno="216" lineno="216" type="str">'a'</Const>
          <Name fromlineno="216" tolineno="216" lineno="216" name="a"/>
        </Print>
        <For fromlineno="217" tolineno="218" lineno="217">
          <AssName fromlineno="217" tolineno="217" lineno="217" name="x"/>
          <CallFunc fromlineno="217" tolineno="217" lineno="217" func="Getattr(iteritems)">
            <Getattr fromlineno="217" tolineno="217" lineno="217" attrname="iteritems" expr="a">
              <Name fromlineno="217" tolineno="217" lineno="217" name="a"/>
            </Getattr>
          </CallFunc>
          <Print fromlineno="218" tolineno="218" lineno="218">
            <Name fromlineno="218" tolineno="218" lineno="218" name="x"/>
          </Print>
        </For>
        <Print fromlineno="219" tolineno="219" lineno="219">
          <Const fromlineno="219" tolineno="219" lineno="219" type="str">'--'</Const>
        </Print>
        <Print fromlineno="220" tolineno="220" lineno="220">
          <Const fromlineno="220" tolineno="220" lineno="220" type="str">'b'</Const>
          <Name fromlineno="220" tolineno="220" lineno="220" name="b"/>
        </Print>
        <For fromlineno="221" tolineno="222" lineno="221">
          <AssName fromlineno="221" tolineno="221" lineno="221" name="x"/>
          <CallFunc fromlineno="221" tolineno="221" lineno="221" func="Getattr(iteritems)">
            <Getattr fromlineno="221" tolineno="221" lineno="221" attrname="iteritems" expr="b">
              <Name fromlineno="221" tolineno="221" lineno="221" name="b"/>
            </Getattr>
          </CallFunc>
          <Print fromlineno="222" tolineno="222" lineno="222">
            <Name fromlineno="222" tolineno="222" lineno="222" name="x"/>
          </Print>
        </For>
        <Print fromlineno="223" tolineno="223" lineno="223"/>
        <Assign fromlineno="225" tolineno="225" lineno="225" targets="[&lt;Subscript() l.225 [bb.COW] at Ox927d56c&gt;]" value="'b'">
          <Subscript fromlineno="225" tolineno="225" lineno="225">
            <Subscript fromlineno="225" tolineno="225" lineno="225">
              <Name fromlineno="225" tolineno="225" lineno="225" name="b"/>
              <Index fromlineno="225" tolineno="225" lineno="None">
                <Const fromlineno="225" tolineno="225" lineno="225" type="str">'dict'</Const>
              </Index>
            </Subscript>
            <Index fromlineno="225" tolineno="225" lineno="None">
              <Const fromlineno="225" tolineno="225" lineno="225" type="str">'a'</Const>
            </Index>
          </Subscript>
          <Const fromlineno="225" tolineno="225" lineno="225" type="str">'b'</Const>
        </Assign>
        <Assign fromlineno="226" tolineno="226" lineno="226" targets="[&lt;Subscript() l.226 [bb.COW] at Ox927d6ec&gt;]" value="'c'">
          <Subscript fromlineno="226" tolineno="226" lineno="226">
            <Name fromlineno="226" tolineno="226" lineno="226" name="b"/>
            <Index fromlineno="226" tolineno="226" lineno="None">
              <Const fromlineno="226" tolineno="226" lineno="226" type="str">'a'</Const>
            </Index>
          </Subscript>
          <Const fromlineno="226" tolineno="226" lineno="226" type="str">'c'</Const>
        </Assign>
        <Print fromlineno="228" tolineno="228" lineno="228">
          <Const fromlineno="228" tolineno="228" lineno="228" type="str">'a'</Const>
          <Name fromlineno="228" tolineno="228" lineno="228" name="a"/>
        </Print>
        <For fromlineno="229" tolineno="230" lineno="229">
          <AssName fromlineno="229" tolineno="229" lineno="229" name="x"/>
          <CallFunc fromlineno="229" tolineno="229" lineno="229" func="Getattr(iteritems)">
            <Getattr fromlineno="229" tolineno="229" lineno="229" attrname="iteritems" expr="a">
              <Name fromlineno="229" tolineno="229" lineno="229" name="a"/>
            </Getattr>
          </CallFunc>
          <Print fromlineno="230" tolineno="230" lineno="230">
            <Name fromlineno="230" tolineno="230" lineno="230" name="x"/>
          </Print>
        </For>
        <Print fromlineno="231" tolineno="231" lineno="231">
          <Const fromlineno="231" tolineno="231" lineno="231" type="str">'--'</Const>
        </Print>
        <Print fromlineno="232" tolineno="232" lineno="232">
          <Const fromlineno="232" tolineno="232" lineno="232" type="str">'b'</Const>
          <Name fromlineno="232" tolineno="232" lineno="232" name="b"/>
        </Print>
        <For fromlineno="233" tolineno="234" lineno="233">
          <AssName fromlineno="233" tolineno="233" lineno="233" name="x"/>
          <CallFunc fromlineno="233" tolineno="233" lineno="233" func="Getattr(iteritems)">
            <Getattr fromlineno="233" tolineno="233" lineno="233" attrname="iteritems" expr="b">
              <Name fromlineno="233" tolineno="233" lineno="233" name="b"/>
            </Getattr>
          </CallFunc>
          <Print fromlineno="234" tolineno="234" lineno="234">
            <Name fromlineno="234" tolineno="234" lineno="234" name="x"/>
          </Print>
        </For>
        <Print fromlineno="235" tolineno="235" lineno="235"/>
        <TryExcept fromlineno="237" tolineno="240" lineno="237">
          <Discard fromlineno="238" tolineno="238" lineno="238">
            <Subscript fromlineno="238" tolineno="238" lineno="238">
              <Name fromlineno="238" tolineno="238" lineno="238" name="b"/>
              <Index fromlineno="238" tolineno="238" lineno="None">
                <Const fromlineno="238" tolineno="238" lineno="238" type="str">'dict2'</Const>
              </Index>
            </Subscript>
          </Discard>
          <ExceptHandler fromlineno="239" tolineno="240" lineno="239">
            <Name fromlineno="239" tolineno="239" lineno="239" name="KeyError"/>
            <AssName fromlineno="239" tolineno="239" lineno="239" name="e"/>
            <Print fromlineno="240" tolineno="240" lineno="240">
              <Const fromlineno="240" tolineno="240" lineno="240" type="str">'Okay!'</Const>
            </Print>
          </ExceptHandler>
        </TryExcept>
        <Assign fromlineno="242" tolineno="242" lineno="242" targets="[&lt;Subscript() l.242 [bb.COW] at Ox927126c&gt;]" value="COWSetBase()">
          <Subscript fromlineno="242" tolineno="242" lineno="242">
            <Name fromlineno="242" tolineno="242" lineno="242" name="a"/>
            <Index fromlineno="242" tolineno="242" lineno="None">
              <Const fromlineno="242" tolineno="242" lineno="242" type="str">'set'</Const>
            </Index>
          </Subscript>
          <CallFunc fromlineno="242" tolineno="242" lineno="242" func="Name(COWSetBase)">
            <Name fromlineno="242" tolineno="242" lineno="242" name="COWSetBase"/>
          </CallFunc>
        </Assign>
        <Discard fromlineno="243" tolineno="243" lineno="243">
          <CallFunc fromlineno="243" tolineno="243" lineno="243" func="Getattr(add)">
            <Getattr fromlineno="243" tolineno="243" lineno="243" attrname="add" expr="a['set']">
              <Subscript fromlineno="243" tolineno="243" lineno="243">
                <Name fromlineno="243" tolineno="243" lineno="243" name="a"/>
                <Index fromlineno="243" tolineno="243" lineno="None">
                  <Const fromlineno="243" tolineno="243" lineno="243" type="str">'set'</Const>
                </Index>
              </Subscript>
            </Getattr>
            <Const fromlineno="243" tolineno="243" lineno="243" type="str">'o1'</Const>
          </CallFunc>
        </Discard>
        <Discard fromlineno="244" tolineno="244" lineno="244">
          <CallFunc fromlineno="244" tolineno="244" lineno="244" func="Getattr(add)">
            <Getattr fromlineno="244" tolineno="244" lineno="244" attrname="add" expr="a['set']">
              <Subscript fromlineno="244" tolineno="244" lineno="244">
                <Name fromlineno="244" tolineno="244" lineno="244" name="a"/>
                <Index fromlineno="244" tolineno="244" lineno="None">
                  <Const fromlineno="244" tolineno="244" lineno="244" type="str">'set'</Const>
                </Index>
              </Subscript>
            </Getattr>
            <Const fromlineno="244" tolineno="244" lineno="244" type="str">'o1'</Const>
          </CallFunc>
        </Discard>
        <Discard fromlineno="245" tolineno="245" lineno="245">
          <CallFunc fromlineno="245" tolineno="245" lineno="245" func="Getattr(add)">
            <Getattr fromlineno="245" tolineno="245" lineno="245" attrname="add" expr="a['set']">
              <Subscript fromlineno="245" tolineno="245" lineno="245">
                <Name fromlineno="245" tolineno="245" lineno="245" name="a"/>
                <Index fromlineno="245" tolineno="245" lineno="None">
                  <Const fromlineno="245" tolineno="245" lineno="245" type="str">'set'</Const>
                </Index>
              </Subscript>
            </Getattr>
            <Const fromlineno="245" tolineno="245" lineno="245" type="str">'o2'</Const>
          </CallFunc>
        </Discard>
        <Print fromlineno="247" tolineno="247" lineno="247">
          <Const fromlineno="247" tolineno="247" lineno="247" type="str">'a'</Const>
          <Name fromlineno="247" tolineno="247" lineno="247" name="a"/>
        </Print>
        <For fromlineno="248" tolineno="249" lineno="248">
          <AssName fromlineno="248" tolineno="248" lineno="248" name="x"/>
          <CallFunc fromlineno="248" tolineno="248" lineno="248" func="Getattr(itervalues)">
            <Getattr fromlineno="248" tolineno="248" lineno="248" attrname="itervalues" expr="a['set']">
              <Subscript fromlineno="248" tolineno="248" lineno="248">
                <Name fromlineno="248" tolineno="248" lineno="248" name="a"/>
                <Index fromlineno="248" tolineno="248" lineno="None">
                  <Const fromlineno="248" tolineno="248" lineno="248" type="str">'set'</Const>
                </Index>
              </Subscript>
            </Getattr>
          </CallFunc>
          <Print fromlineno="249" tolineno="249" lineno="249">
            <Name fromlineno="249" tolineno="249" lineno="249" name="x"/>
          </Print>
        </For>
        <Print fromlineno="250" tolineno="250" lineno="250">
          <Const fromlineno="250" tolineno="250" lineno="250" type="str">'--'</Const>
        </Print>
        <Print fromlineno="251" tolineno="251" lineno="251">
          <Const fromlineno="251" tolineno="251" lineno="251" type="str">'b'</Const>
          <Name fromlineno="251" tolineno="251" lineno="251" name="b"/>
        </Print>
        <For fromlineno="252" tolineno="253" lineno="252">
          <AssName fromlineno="252" tolineno="252" lineno="252" name="x"/>
          <CallFunc fromlineno="252" tolineno="252" lineno="252" func="Getattr(itervalues)">
            <Getattr fromlineno="252" tolineno="252" lineno="252" attrname="itervalues" expr="b['set']">
              <Subscript fromlineno="252" tolineno="252" lineno="252">
                <Name fromlineno="252" tolineno="252" lineno="252" name="b"/>
                <Index fromlineno="252" tolineno="252" lineno="None">
                  <Const fromlineno="252" tolineno="252" lineno="252" type="str">'set'</Const>
                </Index>
              </Subscript>
            </Getattr>
          </CallFunc>
          <Print fromlineno="253" tolineno="253" lineno="253">
            <Name fromlineno="253" tolineno="253" lineno="253" name="x"/>
          </Print>
        </For>
        <Print fromlineno="254" tolineno="254" lineno="254"/>
        <Discard fromlineno="256" tolineno="256" lineno="256">
          <CallFunc fromlineno="256" tolineno="256" lineno="256" func="Getattr(add)">
            <Getattr fromlineno="256" tolineno="256" lineno="256" attrname="add" expr="b['set']">
              <Subscript fromlineno="256" tolineno="256" lineno="256">
                <Name fromlineno="256" tolineno="256" lineno="256" name="b"/>
                <Index fromlineno="256" tolineno="256" lineno="None">
                  <Const fromlineno="256" tolineno="256" lineno="256" type="str">'set'</Const>
                </Index>
              </Subscript>
            </Getattr>
            <Const fromlineno="256" tolineno="256" lineno="256" type="str">'o3'</Const>
          </CallFunc>
        </Discard>
        <Print fromlineno="258" tolineno="258" lineno="258">
          <Const fromlineno="258" tolineno="258" lineno="258" type="str">'a'</Const>
          <Name fromlineno="258" tolineno="258" lineno="258" name="a"/>
        </Print>
        <For fromlineno="259" tolineno="260" lineno="259">
          <AssName fromlineno="259" tolineno="259" lineno="259" name="x"/>
          <CallFunc fromlineno="259" tolineno="259" lineno="259" func="Getattr(itervalues)">
            <Getattr fromlineno="259" tolineno="259" lineno="259" attrname="itervalues" expr="a['set']">
              <Subscript fromlineno="259" tolineno="259" lineno="259">
                <Name fromlineno="259" tolineno="259" lineno="259" name="a"/>
                <Index fromlineno="259" tolineno="259" lineno="None">
                  <Const fromlineno="259" tolineno="259" lineno="259" type="str">'set'</Const>
                </Index>
              </Subscript>
            </Getattr>
          </CallFunc>
          <Print fromlineno="260" tolineno="260" lineno="260">
            <Name fromlineno="260" tolineno="260" lineno="260" name="x"/>
          </Print>
        </For>
        <Print fromlineno="261" tolineno="261" lineno="261">
          <Const fromlineno="261" tolineno="261" lineno="261" type="str">'--'</Const>
        </Print>
        <Print fromlineno="262" tolineno="262" lineno="262">
          <Const fromlineno="262" tolineno="262" lineno="262" type="str">'b'</Const>
          <Name fromlineno="262" tolineno="262" lineno="262" name="b"/>
        </Print>
        <For fromlineno="263" tolineno="264" lineno="263">
          <AssName fromlineno="263" tolineno="263" lineno="263" name="x"/>
          <CallFunc fromlineno="263" tolineno="263" lineno="263" func="Getattr(itervalues)">
            <Getattr fromlineno="263" tolineno="263" lineno="263" attrname="itervalues" expr="b['set']">
              <Subscript fromlineno="263" tolineno="263" lineno="263">
                <Name fromlineno="263" tolineno="263" lineno="263" name="b"/>
                <Index fromlineno="263" tolineno="263" lineno="None">
                  <Const fromlineno="263" tolineno="263" lineno="263" type="str">'set'</Const>
                </Index>
              </Subscript>
            </Getattr>
          </CallFunc>
          <Print fromlineno="264" tolineno="264" lineno="264">
            <Name fromlineno="264" tolineno="264" lineno="264" name="x"/>
          </Print>
        </For>
        <Print fromlineno="265" tolineno="265" lineno="265"/>
        <Assign fromlineno="267" tolineno="267" lineno="267" targets="[&lt;Subscript() l.267 [bb.COW] at Ox92810ec&gt;]" value="set()">
          <Subscript fromlineno="267" tolineno="267" lineno="267">
            <Name fromlineno="267" tolineno="267" lineno="267" name="a"/>
            <Index fromlineno="267" tolineno="267" lineno="None">
              <Const fromlineno="267" tolineno="267" lineno="267" type="str">'set2'</Const>
            </Index>
          </Subscript>
          <CallFunc fromlineno="267" tolineno="267" lineno="267" func="Name(set)">
            <Name fromlineno="267" tolineno="267" lineno="267" name="set"/>
          </CallFunc>
        </Assign>
        <Discard fromlineno="268" tolineno="268" lineno="268">
          <CallFunc fromlineno="268" tolineno="268" lineno="268" func="Getattr(add)">
            <Getattr fromlineno="268" tolineno="268" lineno="268" attrname="add" expr="a['set2']">
              <Subscript fromlineno="268" tolineno="268" lineno="268">
                <Name fromlineno="268" tolineno="268" lineno="268" name="a"/>
                <Index fromlineno="268" tolineno="268" lineno="None">
                  <Const fromlineno="268" tolineno="268" lineno="268" type="str">'set2'</Const>
                </Index>
              </Subscript>
            </Getattr>
            <Const fromlineno="268" tolineno="268" lineno="268" type="str">'o1'</Const>
          </CallFunc>
        </Discard>
        <Discard fromlineno="269" tolineno="269" lineno="269">
          <CallFunc fromlineno="269" tolineno="269" lineno="269" func="Getattr(add)">
            <Getattr fromlineno="269" tolineno="269" lineno="269" attrname="add" expr="a['set2']">
              <Subscript fromlineno="269" tolineno="269" lineno="269">
                <Name fromlineno="269" tolineno="269" lineno="269" name="a"/>
                <Index fromlineno="269" tolineno="269" lineno="None">
                  <Const fromlineno="269" tolineno="269" lineno="269" type="str">'set2'</Const>
                </Index>
              </Subscript>
            </Getattr>
            <Const fromlineno="269" tolineno="269" lineno="269" type="str">'o1'</Const>
          </CallFunc>
        </Discard>
        <Discard fromlineno="270" tolineno="270" lineno="270">
          <CallFunc fromlineno="270" tolineno="270" lineno="270" func="Getattr(add)">
            <Getattr fromlineno="270" tolineno="270" lineno="270" attrname="add" expr="a['set2']">
              <Subscript fromlineno="270" tolineno="270" lineno="270">
                <Name fromlineno="270" tolineno="270" lineno="270" name="a"/>
                <Index fromlineno="270" tolineno="270" lineno="None">
                  <Const fromlineno="270" tolineno="270" lineno="270" type="str">'set2'</Const>
                </Index>
              </Subscript>
            </Getattr>
            <Const fromlineno="270" tolineno="270" lineno="270" type="str">'o2'</Const>
          </CallFunc>
        </Discard>
        <Print fromlineno="272" tolineno="272" lineno="272">
          <Const fromlineno="272" tolineno="272" lineno="272" type="str">'a'</Const>
          <Name fromlineno="272" tolineno="272" lineno="272" name="a"/>
        </Print>
        <For fromlineno="273" tolineno="274" lineno="273">
          <AssName fromlineno="273" tolineno="273" lineno="273" name="x"/>
          <CallFunc fromlineno="273" tolineno="273" lineno="273" func="Getattr(iteritems)">
            <Getattr fromlineno="273" tolineno="273" lineno="273" attrname="iteritems" expr="a">
              <Name fromlineno="273" tolineno="273" lineno="273" name="a"/>
            </Getattr>
          </CallFunc>
          <Print fromlineno="274" tolineno="274" lineno="274">
            <Name fromlineno="274" tolineno="274" lineno="274" name="x"/>
          </Print>
        </For>
        <Print fromlineno="275" tolineno="275" lineno="275">
          <Const fromlineno="275" tolineno="275" lineno="275" type="str">'--'</Const>
        </Print>
        <Print fromlineno="276" tolineno="276" lineno="276">
          <Const fromlineno="276" tolineno="276" lineno="276" type="str">'b'</Const>
          <Name fromlineno="276" tolineno="276" lineno="276" name="b"/>
        </Print>
        <For fromlineno="277" tolineno="278" lineno="277">
          <AssName fromlineno="277" tolineno="277" lineno="277" name="x"/>
          <CallFunc fromlineno="277" tolineno="277" lineno="277" func="Getattr(iteritems)">
            <Getattr fromlineno="277" tolineno="277" lineno="277" attrname="iteritems" expr="b">
              <Name fromlineno="277" tolineno="277" lineno="277" name="b"/>
            </Getattr>
            <Keyword fromlineno="277" tolineno="277" lineno="None">
              <Const fromlineno="277" tolineno="277" lineno="277" type="bool">True</Const>
            </Keyword>
          </CallFunc>
          <Print fromlineno="278" tolineno="278" lineno="278">
            <Name fromlineno="278" tolineno="278" lineno="278" name="x"/>
          </Print>
        </For>
        <Print fromlineno="279" tolineno="279" lineno="279"/>
        <Delete fromlineno="281" tolineno="281" lineno="281">
          <Subscript fromlineno="281" tolineno="281" lineno="281">
            <Name fromlineno="281" tolineno="281" lineno="281" name="b"/>
            <Index fromlineno="281" tolineno="281" lineno="None">
              <Const fromlineno="281" tolineno="281" lineno="281" type="str">'b'</Const>
            </Index>
          </Subscript>
        </Delete>
        <TryExcept fromlineno="282" tolineno="285" lineno="282">
          <Print fromlineno="283" tolineno="283" lineno="283">
            <Subscript fromlineno="283" tolineno="283" lineno="283">
              <Name fromlineno="283" tolineno="283" lineno="283" name="b"/>
              <Index fromlineno="283" tolineno="283" lineno="None">
                <Const fromlineno="283" tolineno="283" lineno="283" type="str">'b'</Const>
              </Index>
            </Subscript>
          </Print>
          <ExceptHandler fromlineno="284" tolineno="285" lineno="284">
            <Name fromlineno="284" tolineno="284" lineno="284" name="KeyError"/>
            <Print fromlineno="285" tolineno="285" lineno="285">
              <Const fromlineno="285" tolineno="285" lineno="285" type="str">'Yay! deleted key raises error'</Const>
            </Print>
          </ExceptHandler>
        </TryExcept>
        <If fromlineno="287" tolineno="290" lineno="287">
          <CallFunc fromlineno="287" tolineno="287" lineno="287" func="Getattr(has_key)">
            <Getattr fromlineno="287" tolineno="287" lineno="287" attrname="has_key" expr="b">
              <Name fromlineno="287" tolineno="287" lineno="287" name="b"/>
            </Getattr>
            <Const fromlineno="287" tolineno="287" lineno="287" type="str">'b'</Const>
          </CallFunc>
          <Print fromlineno="288" tolineno="288" lineno="288">
            <Const fromlineno="288" tolineno="288" lineno="288" type="str">'Boo!'</Const>
          </Print>
          <Print fromlineno="290" tolineno="290" lineno="290">
            <Const fromlineno="290" tolineno="290" lineno="290" type="str">'Yay - has_key with delete works!'</Const>
          </Print>
        </If>
        <Print fromlineno="292" tolineno="292" lineno="292">
          <Const fromlineno="292" tolineno="292" lineno="292" type="str">'a'</Const>
          <Name fromlineno="292" tolineno="292" lineno="292" name="a"/>
        </Print>
        <For fromlineno="293" tolineno="294" lineno="293">
          <AssName fromlineno="293" tolineno="293" lineno="293" name="x"/>
          <CallFunc fromlineno="293" tolineno="293" lineno="293" func="Getattr(iteritems)">
            <Getattr fromlineno="293" tolineno="293" lineno="293" attrname="iteritems" expr="a">
              <Name fromlineno="293" tolineno="293" lineno="293" name="a"/>
            </Getattr>
          </CallFunc>
          <Print fromlineno="294" tolineno="294" lineno="294">
            <Name fromlineno="294" tolineno="294" lineno="294" name="x"/>
          </Print>
        </For>
        <Print fromlineno="295" tolineno="295" lineno="295">
          <Const fromlineno="295" tolineno="295" lineno="295" type="str">'--'</Const>
        </Print>
        <Print fromlineno="296" tolineno="296" lineno="296">
          <Const fromlineno="296" tolineno="296" lineno="296" type="str">'b'</Const>
          <Name fromlineno="296" tolineno="296" lineno="296" name="b"/>
        </Print>
        <For fromlineno="297" tolineno="298" lineno="297">
          <AssName fromlineno="297" tolineno="297" lineno="297" name="x"/>
          <CallFunc fromlineno="297" tolineno="297" lineno="297" func="Getattr(iteritems)">
            <Getattr fromlineno="297" tolineno="297" lineno="297" attrname="iteritems" expr="b">
              <Name fromlineno="297" tolineno="297" lineno="297" name="b"/>
            </Getattr>
            <Keyword fromlineno="297" tolineno="297" lineno="None">
              <Const fromlineno="297" tolineno="297" lineno="297" type="bool">True</Const>
            </Keyword>
          </CallFunc>
          <Print fromlineno="298" tolineno="298" lineno="298">
            <Name fromlineno="298" tolineno="298" lineno="298" name="x"/>
          </Print>
        </For>
        <Print fromlineno="299" tolineno="299" lineno="299"/>
        <Discard fromlineno="301" tolineno="301" lineno="301">
          <CallFunc fromlineno="301" tolineno="301" lineno="301" func="Getattr(__revertitem__)">
            <Getattr fromlineno="301" tolineno="301" lineno="301" attrname="__revertitem__" expr="b">
              <Name fromlineno="301" tolineno="301" lineno="301" name="b"/>
            </Getattr>
            <Const fromlineno="301" tolineno="301" lineno="301" type="str">'b'</Const>
          </CallFunc>
        </Discard>
        <Print fromlineno="303" tolineno="303" lineno="303">
          <Const fromlineno="303" tolineno="303" lineno="303" type="str">'a'</Const>
          <Name fromlineno="303" tolineno="303" lineno="303" name="a"/>
        </Print>
        <For fromlineno="304" tolineno="305" lineno="304">
          <AssName fromlineno="304" tolineno="304" lineno="304" name="x"/>
          <CallFunc fromlineno="304" tolineno="304" lineno="304" func="Getattr(iteritems)">
            <Getattr fromlineno="304" tolineno="304" lineno="304" attrname="iteritems" expr="a">
              <Name fromlineno="304" tolineno="304" lineno="304" name="a"/>
            </Getattr>
          </CallFunc>
          <Print fromlineno="305" tolineno="305" lineno="305">
            <Name fromlineno="305" tolineno="305" lineno="305" name="x"/>
          </Print>
        </For>
        <Print fromlineno="306" tolineno="306" lineno="306">
          <Const fromlineno="306" tolineno="306" lineno="306" type="str">'--'</Const>
        </Print>
        <Print fromlineno="307" tolineno="307" lineno="307">
          <Const fromlineno="307" tolineno="307" lineno="307" type="str">'b'</Const>
          <Name fromlineno="307" tolineno="307" lineno="307" name="b"/>
        </Print>
        <For fromlineno="308" tolineno="309" lineno="308">
          <AssName fromlineno="308" tolineno="308" lineno="308" name="x"/>
          <CallFunc fromlineno="308" tolineno="308" lineno="308" func="Getattr(iteritems)">
            <Getattr fromlineno="308" tolineno="308" lineno="308" attrname="iteritems" expr="b">
              <Name fromlineno="308" tolineno="308" lineno="308" name="b"/>
            </Getattr>
            <Keyword fromlineno="308" tolineno="308" lineno="None">
              <Const fromlineno="308" tolineno="308" lineno="308" type="bool">True</Const>
            </Keyword>
          </CallFunc>
          <Print fromlineno="309" tolineno="309" lineno="309">
            <Name fromlineno="309" tolineno="309" lineno="309" name="x"/>
          </Print>
        </For>
        <Print fromlineno="310" tolineno="310" lineno="310"/>
        <Discard fromlineno="312" tolineno="312" lineno="312">
          <CallFunc fromlineno="312" tolineno="312" lineno="312" func="Getattr(__revertitem__)">
            <Getattr fromlineno="312" tolineno="312" lineno="312" attrname="__revertitem__" expr="b">
              <Name fromlineno="312" tolineno="312" lineno="312" name="b"/>
            </Getattr>
            <Const fromlineno="312" tolineno="312" lineno="312" type="str">'dict'</Const>
          </CallFunc>
        </Discard>
        <Print fromlineno="313" tolineno="313" lineno="313">
          <Const fromlineno="313" tolineno="313" lineno="313" type="str">'a'</Const>
          <Name fromlineno="313" tolineno="313" lineno="313" name="a"/>
        </Print>
        <For fromlineno="314" tolineno="315" lineno="314">
          <AssName fromlineno="314" tolineno="314" lineno="314" name="x"/>
          <CallFunc fromlineno="314" tolineno="314" lineno="314" func="Getattr(iteritems)">
            <Getattr fromlineno="314" tolineno="314" lineno="314" attrname="iteritems" expr="a">
              <Name fromlineno="314" tolineno="314" lineno="314" name="a"/>
            </Getattr>
          </CallFunc>
          <Print fromlineno="315" tolineno="315" lineno="315">
            <Name fromlineno="315" tolineno="315" lineno="315" name="x"/>
          </Print>
        </For>
        <Print fromlineno="316" tolineno="316" lineno="316">
          <Const fromlineno="316" tolineno="316" lineno="316" type="str">'--'</Const>
        </Print>
        <Print fromlineno="317" tolineno="317" lineno="317">
          <Const fromlineno="317" tolineno="317" lineno="317" type="str">'b'</Const>
          <Name fromlineno="317" tolineno="317" lineno="317" name="b"/>
        </Print>
        <For fromlineno="318" tolineno="319" lineno="318">
          <AssName fromlineno="318" tolineno="318" lineno="318" name="x"/>
          <CallFunc fromlineno="318" tolineno="318" lineno="318" func="Getattr(iteritems)">
            <Getattr fromlineno="318" tolineno="318" lineno="318" attrname="iteritems" expr="b">
              <Name fromlineno="318" tolineno="318" lineno="318" name="b"/>
            </Getattr>
            <Keyword fromlineno="318" tolineno="318" lineno="None">
              <Const fromlineno="318" tolineno="318" lineno="318" type="bool">True</Const>
            </Keyword>
          </CallFunc>
          <Print fromlineno="319" tolineno="319" lineno="319">
            <Name fromlineno="319" tolineno="319" lineno="319" name="x"/>
          </Print>
        </For>
        <Print fromlineno="320" tolineno="320" lineno="320"/>
      </If>
    </Module>
    <Module fromlineno="0" tolineno="1051" lineno="0" name="bb.runqueue">
      <From fromlineno="24" tolineno="24" lineno="24" modname="bb">
        <ImportName name="msg"/>
        <ImportName name="data"/>
        <ImportName name="event"/>
        <ImportName name="mkdirhier"/>
        <ImportName name="utils"/>
      </From>
      <Import fromlineno="25" tolineno="25" lineno="25">
        <ImportName name="bb"/>
        <ImportName name="os"/>
        <ImportName name="sys"/>
      </Import>
      <Import fromlineno="26" tolineno="26" lineno="26">
        <ImportName name="signal"/>
      </Import>
      <Import fromlineno="27" tolineno="27" lineno="27">
        <ImportName name="stat"/>
      </Import>
      <Class fromlineno="29" tolineno="32" lineno="29">
        <Name fromlineno="29" tolineno="29" lineno="29" name="Exception"/>
        <Function fromlineno="31" tolineno="32" lineno="31">
          <Arguments fromlineno="31" tolineno="31" lineno="None" format_args="self, x">
            <AssName fromlineno="31" tolineno="31" lineno="31" name="self"/>
            <AssName fromlineno="31" tolineno="31" lineno="31" name="x"/>
          </Arguments>
          <Assign fromlineno="32" tolineno="32" lineno="32" targets="[&lt;AssAttr(args) l.32 [bb.runqueue] at Ox95b59cc&gt;]" value="x">
            <AssAttr fromlineno="32" tolineno="32" lineno="32" attrname="args" expr="self">
              <Name fromlineno="32" tolineno="32" lineno="32" name="self"/>
            </AssAttr>
            <Name fromlineno="32" tolineno="32" lineno="32" name="x"/>
          </Assign>
        </Function>
      </Class>
      <Class fromlineno="35" tolineno="51" lineno="35">
        <Function fromlineno="39" tolineno="42" lineno="39">
          <Arguments fromlineno="39" tolineno="39" lineno="None" format_args="self">
            <AssName fromlineno="39" tolineno="39" lineno="39" name="self"/>
          </Arguments>
          <Assign fromlineno="40" tolineno="40" lineno="40" targets="[&lt;AssAttr(completed) l.40 [bb.runqueue] at Ox95b5bac&gt;]" value="0">
            <AssAttr fromlineno="40" tolineno="40" lineno="40" attrname="completed" expr="self">
              <Name fromlineno="40" tolineno="40" lineno="40" name="self"/>
            </AssAttr>
            <Const fromlineno="40" tolineno="40" lineno="40" type="int">0</Const>
          </Assign>
          <Assign fromlineno="41" tolineno="41" lineno="41" targets="[&lt;AssAttr(skipped) l.41 [bb.runqueue] at Ox95b5c4c&gt;]" value="0">
            <AssAttr fromlineno="41" tolineno="41" lineno="41" attrname="skipped" expr="self">
              <Name fromlineno="41" tolineno="41" lineno="41" name="self"/>
            </AssAttr>
            <Const fromlineno="41" tolineno="41" lineno="41" type="int">0</Const>
          </Assign>
          <Assign fromlineno="42" tolineno="42" lineno="42" targets="[&lt;AssAttr(failed) l.42 [bb.runqueue] at Ox95b5cec&gt;]" value="0">
            <AssAttr fromlineno="42" tolineno="42" lineno="42" attrname="failed" expr="self">
              <Name fromlineno="42" tolineno="42" lineno="42" name="self"/>
            </AssAttr>
            <Const fromlineno="42" tolineno="42" lineno="42" type="int">0</Const>
          </Assign>
        </Function>
        <Function fromlineno="44" tolineno="45" lineno="44">
          <Arguments fromlineno="44" tolineno="44" lineno="None" format_args="self">
            <AssName fromlineno="44" tolineno="44" lineno="44" name="self"/>
          </Arguments>
          <Assign fromlineno="45" tolineno="45" lineno="45" targets="[&lt;AssAttr(failed) l.45 [bb.runqueue] at Ox95b5e8c&gt;]" value="(self.failed) + (1)">
            <AssAttr fromlineno="45" tolineno="45" lineno="45" attrname="failed" expr="self">
              <Name fromlineno="45" tolineno="45" lineno="45" name="self"/>
            </AssAttr>
            <BinOp fromlineno="45" tolineno="45" lineno="45" op="+" left="self.failed" right="1">
              <Getattr fromlineno="45" tolineno="45" lineno="45" attrname="failed" expr="self">
                <Name fromlineno="45" tolineno="45" lineno="45" name="self"/>
              </Getattr>
              <Const fromlineno="45" tolineno="45" lineno="45" type="int">1</Const>
            </BinOp>
          </Assign>
        </Function>
        <Function fromlineno="47" tolineno="48" lineno="47">
          <Arguments fromlineno="47" tolineno="47" lineno="None" format_args="self, number=1">
            <AssName fromlineno="47" tolineno="47" lineno="47" name="self"/>
            <AssName fromlineno="47" tolineno="47" lineno="47" name="number"/>
            <Const fromlineno="47" tolineno="47" lineno="47" type="int">1</Const>
          </Arguments>
          <Assign fromlineno="48" tolineno="48" lineno="48" targets="[&lt;AssAttr(completed) l.48 [bb.runqueue] at Ox95b910c&gt;]" value="(self.completed) + (number)">
            <AssAttr fromlineno="48" tolineno="48" lineno="48" attrname="completed" expr="self">
              <Name fromlineno="48" tolineno="48" lineno="48" name="self"/>
            </AssAttr>
            <BinOp fromlineno="48" tolineno="48" lineno="48" op="+" left="self.completed" right="number">
              <Getattr fromlineno="48" tolineno="48" lineno="48" attrname="completed" expr="self">
                <Name fromlineno="48" tolineno="48" lineno="48" name="self"/>
              </Getattr>
              <Name fromlineno="48" tolineno="48" lineno="48" name="number"/>
            </BinOp>
          </Assign>
        </Function>
        <Function fromlineno="50" tolineno="51" lineno="50">
          <Arguments fromlineno="50" tolineno="50" lineno="None" format_args="self, number=1">
            <AssName fromlineno="50" tolineno="50" lineno="50" name="self"/>
            <AssName fromlineno="50" tolineno="50" lineno="50" name="number"/>
            <Const fromlineno="50" tolineno="50" lineno="50" type="int">1</Const>
          </Arguments>
          <Assign fromlineno="51" tolineno="51" lineno="51" targets="[&lt;AssAttr(skipped) l.51 [bb.runqueue] at Ox95b936c&gt;]" value="(self.skipped) + (number)">
            <AssAttr fromlineno="51" tolineno="51" lineno="51" attrname="skipped" expr="self">
              <Name fromlineno="51" tolineno="51" lineno="51" name="self"/>
            </AssAttr>
            <BinOp fromlineno="51" tolineno="51" lineno="51" op="+" left="self.skipped" right="number">
              <Getattr fromlineno="51" tolineno="51" lineno="51" attrname="skipped" expr="self">
                <Name fromlineno="51" tolineno="51" lineno="51" name="self"/>
              </Getattr>
              <Name fromlineno="51" tolineno="51" lineno="51" name="number"/>
            </BinOp>
          </Assign>
        </Function>
      </Class>
      <Class fromlineno="53" tolineno="77" lineno="53">
        <Function fromlineno="57" tolineno="66" lineno="57">
          <Arguments fromlineno="57" tolineno="57" lineno="None" format_args="self, runqueue">
            <AssName fromlineno="57" tolineno="57" lineno="57" name="self"/>
            <AssName fromlineno="57" tolineno="57" lineno="57" name="runqueue"/>
          </Arguments>
          <Assign fromlineno="62" tolineno="62" lineno="62" targets="[&lt;AssAttr(rq) l.62 [bb.runqueue] at Ox95b95ac&gt;]" value="runqueue">
            <AssAttr fromlineno="62" tolineno="62" lineno="62" attrname="rq" expr="self">
              <Name fromlineno="62" tolineno="62" lineno="62" name="self"/>
            </AssAttr>
            <Name fromlineno="62" tolineno="62" lineno="62" name="runqueue"/>
          </Assign>
          <Assign fromlineno="63" tolineno="63" lineno="63" targets="[&lt;AssName(numTasks) l.63 [bb.runqueue] at Ox95b964c&gt;]" value="len(self.rq.runq_fnid)">
            <AssName fromlineno="63" tolineno="63" lineno="63" name="numTasks"/>
            <CallFunc fromlineno="63" tolineno="63" lineno="63" func="Name(len)">
              <Name fromlineno="63" tolineno="63" lineno="63" name="len"/>
              <Getattr fromlineno="63" tolineno="63" lineno="63" attrname="runq_fnid" expr="self.rq">
                <Getattr fromlineno="63" tolineno="63" lineno="63" attrname="rq" expr="self">
                  <Name fromlineno="63" tolineno="63" lineno="63" name="self"/>
                </Getattr>
              </Getattr>
            </CallFunc>
          </Assign>
          <Assign fromlineno="65" tolineno="65" lineno="65" targets="[&lt;AssAttr(prio_map) l.65 [bb.runqueue] at Ox95b978c&gt;]" value="[]">
            <AssAttr fromlineno="65" tolineno="65" lineno="65" attrname="prio_map" expr="self">
              <Name fromlineno="65" tolineno="65" lineno="65" name="self"/>
            </AssAttr>
            <List fromlineno="65" tolineno="65" lineno="65"/>
          </Assign>
          <Discard fromlineno="66" tolineno="66" lineno="66">
            <CallFunc fromlineno="66" tolineno="66" lineno="66" func="Getattr(extend)">
              <Getattr fromlineno="66" tolineno="66" lineno="66" attrname="extend" expr="self.prio_map">
                <Getattr fromlineno="66" tolineno="66" lineno="66" attrname="prio_map" expr="self">
                  <Name fromlineno="66" tolineno="66" lineno="66" name="self"/>
                </Getattr>
              </Getattr>
              <CallFunc fromlineno="66" tolineno="66" lineno="66" func="Name(range)">
                <Name fromlineno="66" tolineno="66" lineno="66" name="range"/>
                <Name fromlineno="66" tolineno="66" lineno="66" name="numTasks"/>
              </CallFunc>
            </CallFunc>
          </Discard>
        </Function>
        <Function fromlineno="68" tolineno="77" lineno="68">
          <Arguments fromlineno="68" tolineno="68" lineno="None" format_args="self">
            <AssName fromlineno="68" tolineno="68" lineno="68" name="self"/>
          </Arguments>
          <For fromlineno="72" tolineno="77" lineno="72">
            <AssName fromlineno="72" tolineno="72" lineno="72" name="task1"/>
            <CallFunc fromlineno="72" tolineno="72" lineno="72" func="Name(range)">
              <Name fromlineno="72" tolineno="72" lineno="72" name="range"/>
              <CallFunc fromlineno="72" tolineno="72" lineno="72" func="Name(len)">
                <Name fromlineno="72" tolineno="72" lineno="72" name="len"/>
                <Getattr fromlineno="72" tolineno="72" lineno="72" attrname="runq_fnid" expr="self.rq">
                  <Getattr fromlineno="72" tolineno="72" lineno="72" attrname="rq" expr="self">
                    <Name fromlineno="72" tolineno="72" lineno="72" name="self"/>
                  </Getattr>
                </Getattr>
              </CallFunc>
            </CallFunc>
            <Assign fromlineno="73" tolineno="73" lineno="73" targets="[&lt;AssName(task) l.73 [bb.runqueue] at Ox95b9c0c&gt;]" value="self.prio_map[task1]">
              <AssName fromlineno="73" tolineno="73" lineno="73" name="task"/>
              <Subscript fromlineno="73" tolineno="73" lineno="73">
                <Getattr fromlineno="73" tolineno="73" lineno="73" attrname="prio_map" expr="self">
                  <Name fromlineno="73" tolineno="73" lineno="73" name="self"/>
                </Getattr>
                <Index fromlineno="73" tolineno="73" lineno="None">
                  <Name fromlineno="73" tolineno="73" lineno="73" name="task1"/>
                </Index>
              </Subscript>
            </Assign>
            <If fromlineno="74" tolineno="75" lineno="74">
              <Compare fromlineno="74" tolineno="74" lineno="74" op="('==', &lt;Const(int) l.74 [bb.runqueue] at Ox95b9e2c&gt;)">
                <Subscript fromlineno="74" tolineno="74" lineno="74">
                  <Getattr fromlineno="74" tolineno="74" lineno="74" attrname="runq_running" expr="self.rq">
                    <Getattr fromlineno="74" tolineno="74" lineno="74" attrname="rq" expr="self">
                      <Name fromlineno="74" tolineno="74" lineno="74" name="self"/>
                    </Getattr>
                  </Getattr>
                  <Index fromlineno="74" tolineno="74" lineno="None">
                    <Name fromlineno="74" tolineno="74" lineno="74" name="task"/>
                  </Index>
                </Subscript>
                <Const fromlineno="74" tolineno="74" lineno="74" type="int">1</Const>
              </Compare>
              <Continue fromlineno="75" tolineno="75" lineno="75"/>
            </If>
            <If fromlineno="76" tolineno="77" lineno="76">
              <Compare fromlineno="76" tolineno="76" lineno="76" op="('==', &lt;Const(int) l.76 [bb.runqueue] at Ox95b9fcc&gt;)">
                <Subscript fromlineno="76" tolineno="76" lineno="76">
                  <Getattr fromlineno="76" tolineno="76" lineno="76" attrname="runq_buildable" expr="self.rq">
                    <Getattr fromlineno="76" tolineno="76" lineno="76" attrname="rq" expr="self">
                      <Name fromlineno="76" tolineno="76" lineno="76" name="self"/>
                    </Getattr>
                  </Getattr>
                  <Index fromlineno="76" tolineno="76" lineno="None">
                    <Name fromlineno="76" tolineno="76" lineno="76" name="task"/>
                  </Index>
                </Subscript>
                <Const fromlineno="76" tolineno="76" lineno="76" type="int">1</Const>
              </Compare>
              <Return fromlineno="77" tolineno="77" lineno="77">
                <Name fromlineno="77" tolineno="77" lineno="77" name="task"/>
              </Return>
            </If>
          </For>
        </Function>
      </Class>
      <Class fromlineno="79" tolineno="102" lineno="79">
        <Name fromlineno="79" tolineno="79" lineno="79" name="RunQueueScheduler"/>
        <Function fromlineno="84" tolineno="102" lineno="84">
          <Arguments fromlineno="84" tolineno="84" lineno="None" format_args="self, runqueue">
            <AssName fromlineno="84" tolineno="84" lineno="84" name="self"/>
            <AssName fromlineno="84" tolineno="84" lineno="84" name="runqueue"/>
          </Arguments>
          <From fromlineno="88" tolineno="88" lineno="88" modname="copy">
            <ImportName name="deepcopy"/>
          </From>
          <Assign fromlineno="90" tolineno="90" lineno="90" targets="[&lt;AssAttr(rq) l.90 [bb.runqueue] at Ox95bd24c&gt;]" value="runqueue">
            <AssAttr fromlineno="90" tolineno="90" lineno="90" attrname="rq" expr="self">
              <Name fromlineno="90" tolineno="90" lineno="90" name="self"/>
            </AssAttr>
            <Name fromlineno="90" tolineno="90" lineno="90" name="runqueue"/>
          </Assign>
          <Assign fromlineno="92" tolineno="92" lineno="92" targets="[&lt;AssName(sortweight) l.92 [bb.runqueue] at Ox95bd2ec&gt;]" value="deepcopy(self.rq.runq_weight)">
            <AssName fromlineno="92" tolineno="92" lineno="92" name="sortweight"/>
            <CallFunc fromlineno="92" tolineno="92" lineno="92" func="Name(deepcopy)">
              <Name fromlineno="92" tolineno="92" lineno="92" name="deepcopy"/>
              <Getattr fromlineno="92" tolineno="92" lineno="92" attrname="runq_weight" expr="self.rq">
                <Getattr fromlineno="92" tolineno="92" lineno="92" attrname="rq" expr="self">
                  <Name fromlineno="92" tolineno="92" lineno="92" name="self"/>
                </Getattr>
              </Getattr>
            </CallFunc>
          </Assign>
          <Discard fromlineno="93" tolineno="93" lineno="93">
            <CallFunc fromlineno="93" tolineno="93" lineno="93" func="Getattr(sort)">
              <Getattr fromlineno="93" tolineno="93" lineno="93" attrname="sort" expr="sortweight">
                <Name fromlineno="93" tolineno="93" lineno="93" name="sortweight"/>
              </Getattr>
            </CallFunc>
          </Discard>
          <Assign fromlineno="94" tolineno="94" lineno="94" targets="[&lt;AssName(copyweight) l.94 [bb.runqueue] at Ox95bd4cc&gt;]" value="deepcopy(self.rq.runq_weight)">
            <AssName fromlineno="94" tolineno="94" lineno="94" name="copyweight"/>
            <CallFunc fromlineno="94" tolineno="94" lineno="94" func="Name(deepcopy)">
              <Name fromlineno="94" tolineno="94" lineno="94" name="deepcopy"/>
              <Getattr fromlineno="94" tolineno="94" lineno="94" attrname="runq_weight" expr="self.rq">
                <Getattr fromlineno="94" tolineno="94" lineno="94" attrname="rq" expr="self">
                  <Name fromlineno="94" tolineno="94" lineno="94" name="self"/>
                </Getattr>
              </Getattr>
            </CallFunc>
          </Assign>
          <Assign fromlineno="95" tolineno="95" lineno="95" targets="[&lt;AssAttr(prio_map) l.95 [bb.runqueue] at Ox95bd60c&gt;]" value="[]">
            <AssAttr fromlineno="95" tolineno="95" lineno="95" attrname="prio_map" expr="self">
              <Name fromlineno="95" tolineno="95" lineno="95" name="self"/>
            </AssAttr>
            <List fromlineno="95" tolineno="95" lineno="95"/>
          </Assign>
          <For fromlineno="97" tolineno="100" lineno="97">
            <AssName fromlineno="97" tolineno="97" lineno="97" name="weight"/>
            <Name fromlineno="97" tolineno="97" lineno="97" name="sortweight"/>
            <Assign fromlineno="98" tolineno="98" lineno="98" targets="[&lt;AssName(idx) l.98 [bb.runqueue] at Ox95bd78c&gt;]" value="copyweight.index(weight)">
              <AssName fromlineno="98" tolineno="98" lineno="98" name="idx"/>
              <CallFunc fromlineno="98" tolineno="98" lineno="98" func="Getattr(index)">
                <Getattr fromlineno="98" tolineno="98" lineno="98" attrname="index" expr="copyweight">
                  <Name fromlineno="98" tolineno="98" lineno="98" name="copyweight"/>
                </Getattr>
                <Name fromlineno="98" tolineno="98" lineno="98" name="weight"/>
              </CallFunc>
            </Assign>
            <Discard fromlineno="99" tolineno="99" lineno="99">
              <CallFunc fromlineno="99" tolineno="99" lineno="99" func="Getattr(append)">
                <Getattr fromlineno="99" tolineno="99" lineno="99" attrname="append" expr="self.prio_map">
                  <Getattr fromlineno="99" tolineno="99" lineno="99" attrname="prio_map" expr="self">
                    <Name fromlineno="99" tolineno="99" lineno="99" name="self"/>
                  </Getattr>
                </Getattr>
                <Name fromlineno="99" tolineno="99" lineno="99" name="idx"/>
              </CallFunc>
            </Discard>
            <Assign fromlineno="100" tolineno="100" lineno="100" targets="[&lt;Subscript() l.100 [bb.runqueue] at Ox95bd98c&gt;]" value="-1">
              <Subscript fromlineno="100" tolineno="100" lineno="100">
                <Name fromlineno="100" tolineno="100" lineno="100" name="copyweight"/>
                <Index fromlineno="100" tolineno="100" lineno="None">
                  <Name fromlineno="100" tolineno="100" lineno="100" name="idx"/>
                </Index>
              </Subscript>
              <Const fromlineno="100" tolineno="100" lineno="100" type="int">-1</Const>
            </Assign>
          </For>
          <Discard fromlineno="102" tolineno="102" lineno="102">
            <CallFunc fromlineno="102" tolineno="102" lineno="102" func="Getattr(reverse)">
              <Getattr fromlineno="102" tolineno="102" lineno="102" attrname="reverse" expr="self.prio_map">
                <Getattr fromlineno="102" tolineno="102" lineno="102" attrname="prio_map" expr="self">
                  <Name fromlineno="102" tolineno="102" lineno="102" name="self"/>
                </Getattr>
              </Getattr>
            </CallFunc>
          </Discard>
        </Function>
      </Class>
      <Class fromlineno="104" tolineno="133" lineno="104">
        <Name fromlineno="104" tolineno="104" lineno="104" name="RunQueueSchedulerSpeed"/>
        <Function fromlineno="112" tolineno="133" lineno="112">
          <Arguments fromlineno="112" tolineno="112" lineno="None" format_args="self, runqueue">
            <AssName fromlineno="112" tolineno="112" lineno="112" name="self"/>
            <AssName fromlineno="112" tolineno="112" lineno="112" name="runqueue"/>
          </Arguments>
          <Discard fromlineno="113" tolineno="113" lineno="113">
            <CallFunc fromlineno="113" tolineno="113" lineno="113" func="Getattr(__init__)">
              <Getattr fromlineno="113" tolineno="113" lineno="113" attrname="__init__" expr="RunQueueSchedulerSpeed">
                <Name fromlineno="113" tolineno="113" lineno="113" name="RunQueueSchedulerSpeed"/>
              </Getattr>
              <Name fromlineno="113" tolineno="113" lineno="113" name="self"/>
              <Name fromlineno="113" tolineno="113" lineno="113" name="runqueue"/>
            </CallFunc>
          </Discard>
          <From fromlineno="114" tolineno="114" lineno="114" modname="copy">
            <ImportName name="deepcopy"/>
          </From>
          <Assign fromlineno="119" tolineno="119" lineno="119" targets="[&lt;AssName(basemap) l.119 [bb.runqueue] at Ox95bddec&gt;]" value="deepcopy(self.prio_map)">
            <AssName fromlineno="119" tolineno="119" lineno="119" name="basemap"/>
            <CallFunc fromlineno="119" tolineno="119" lineno="119" func="Name(deepcopy)">
              <Name fromlineno="119" tolineno="119" lineno="119" name="deepcopy"/>
              <Getattr fromlineno="119" tolineno="119" lineno="119" attrname="prio_map" expr="self">
                <Name fromlineno="119" tolineno="119" lineno="119" name="self"/>
              </Getattr>
            </CallFunc>
          </Assign>
          <Assign fromlineno="120" tolineno="120" lineno="120" targets="[&lt;AssAttr(prio_map) l.120 [bb.runqueue] at Ox95bdf0c&gt;]" value="[]">
            <AssAttr fromlineno="120" tolineno="120" lineno="120" attrname="prio_map" expr="self">
              <Name fromlineno="120" tolineno="120" lineno="120" name="self"/>
            </AssAttr>
            <List fromlineno="120" tolineno="120" lineno="120"/>
          </Assign>
          <While fromlineno="121" tolineno="133" lineno="121">
            <Compare fromlineno="121" tolineno="121" lineno="121" op="('&gt;', &lt;Const(int) l.121 [bb.runqueue] at Ox95c10ac&gt;)">
              <CallFunc fromlineno="121" tolineno="121" lineno="121" func="Name(len)">
                <Name fromlineno="121" tolineno="121" lineno="121" name="len"/>
                <Name fromlineno="121" tolineno="121" lineno="121" name="basemap"/>
              </CallFunc>
              <Const fromlineno="121" tolineno="121" lineno="121" type="int">0</Const>
            </Compare>
            <Assign fromlineno="122" tolineno="122" lineno="122" targets="[&lt;AssName(entry) l.122 [bb.runqueue] at Ox95c112c&gt;]" value="basemap.pop(0)">
              <AssName fromlineno="122" tolineno="122" lineno="122" name="entry"/>
              <CallFunc fromlineno="122" tolineno="122" lineno="122" func="Getattr(pop)">
                <Getattr fromlineno="122" tolineno="122" lineno="122" attrname="pop" expr="basemap">
                  <Name fromlineno="122" tolineno="122" lineno="122" name="basemap"/>
                </Getattr>
                <Const fromlineno="122" tolineno="122" lineno="122" type="int">0</Const>
              </CallFunc>
            </Assign>
            <Discard fromlineno="123" tolineno="123" lineno="123">
              <CallFunc fromlineno="123" tolineno="123" lineno="123" func="Getattr(append)">
                <Getattr fromlineno="123" tolineno="123" lineno="123" attrname="append" expr="self.prio_map">
                  <Getattr fromlineno="123" tolineno="123" lineno="123" attrname="prio_map" expr="self">
                    <Name fromlineno="123" tolineno="123" lineno="123" name="self"/>
                  </Getattr>
                </Getattr>
                <Name fromlineno="123" tolineno="123" lineno="123" name="entry"/>
              </CallFunc>
            </Discard>
            <Assign fromlineno="124" tolineno="124" lineno="124" targets="[&lt;AssName(fnid) l.124 [bb.runqueue] at Ox95c132c&gt;]" value="self.rq.runq_fnid[entry]">
              <AssName fromlineno="124" tolineno="124" lineno="124" name="fnid"/>
              <Subscript fromlineno="124" tolineno="124" lineno="124">
                <Getattr fromlineno="124" tolineno="124" lineno="124" attrname="runq_fnid" expr="self.rq">
                  <Getattr fromlineno="124" tolineno="124" lineno="124" attrname="rq" expr="self">
                    <Name fromlineno="124" tolineno="124" lineno="124" name="self"/>
                  </Getattr>
                </Getattr>
                <Index fromlineno="124" tolineno="124" lineno="None">
                  <Name fromlineno="124" tolineno="124" lineno="124" name="entry"/>
                </Index>
              </Subscript>
            </Assign>
            <Assign fromlineno="125" tolineno="125" lineno="125" targets="[&lt;AssName(todel) l.125 [bb.runqueue] at Ox95c146c&gt;]" value="[]">
              <AssName fromlineno="125" tolineno="125" lineno="125" name="todel"/>
              <List fromlineno="125" tolineno="125" lineno="125"/>
            </Assign>
            <For fromlineno="126" tolineno="130" lineno="126">
              <AssName fromlineno="126" tolineno="126" lineno="126" name="entry"/>
              <Name fromlineno="126" tolineno="126" lineno="126" name="basemap"/>
              <Assign fromlineno="127" tolineno="127" lineno="127" targets="[&lt;AssName(entry_fnid) l.127 [bb.runqueue] at Ox95c15cc&gt;]" value="self.rq.runq_fnid[entry]">
                <AssName fromlineno="127" tolineno="127" lineno="127" name="entry_fnid"/>
                <Subscript fromlineno="127" tolineno="127" lineno="127">
                  <Getattr fromlineno="127" tolineno="127" lineno="127" attrname="runq_fnid" expr="self.rq">
                    <Getattr fromlineno="127" tolineno="127" lineno="127" attrname="rq" expr="self">
                      <Name fromlineno="127" tolineno="127" lineno="127" name="self"/>
                    </Getattr>
                  </Getattr>
                  <Index fromlineno="127" tolineno="127" lineno="None">
                    <Name fromlineno="127" tolineno="127" lineno="127" name="entry"/>
                  </Index>
                </Subscript>
              </Assign>
              <If fromlineno="128" tolineno="130" lineno="128">
                <Compare fromlineno="128" tolineno="128" lineno="128" op="('==', &lt;Name(fnid) l.128 [bb.runqueue] at Ox95c176c&gt;)">
                  <Name fromlineno="128" tolineno="128" lineno="128" name="entry_fnid"/>
                  <Name fromlineno="128" tolineno="128" lineno="128" name="fnid"/>
                </Compare>
                <Discard fromlineno="129" tolineno="129" lineno="129">
                  <CallFunc fromlineno="129" tolineno="129" lineno="129" func="Getattr(append)">
                    <Getattr fromlineno="129" tolineno="129" lineno="129" attrname="append" expr="todel">
                      <Name fromlineno="129" tolineno="129" lineno="129" name="todel"/>
                    </Getattr>
                    <CallFunc fromlineno="129" tolineno="129" lineno="129" func="Getattr(index)">
                      <Getattr fromlineno="129" tolineno="129" lineno="129" attrname="index" expr="basemap">
                        <Name fromlineno="129" tolineno="129" lineno="129" name="basemap"/>
                      </Getattr>
                      <Name fromlineno="129" tolineno="129" lineno="129" name="entry"/>
                    </CallFunc>
                  </CallFunc>
                </Discard>
                <Discard fromlineno="130" tolineno="130" lineno="130">
                  <CallFunc fromlineno="130" tolineno="130" lineno="130" func="Getattr(append)">
                    <Getattr fromlineno="130" tolineno="130" lineno="130" attrname="append" expr="self.prio_map">
                      <Getattr fromlineno="130" tolineno="130" lineno="130" attrname="prio_map" expr="self">
                        <Name fromlineno="130" tolineno="130" lineno="130" name="self"/>
                      </Getattr>
                    </Getattr>
                    <Name fromlineno="130" tolineno="130" lineno="130" name="entry"/>
                  </CallFunc>
                </Discard>
              </If>
            </For>
            <Discard fromlineno="131" tolineno="131" lineno="131">
              <CallFunc fromlineno="131" tolineno="131" lineno="131" func="Getattr(reverse)">
                <Getattr fromlineno="131" tolineno="131" lineno="131" attrname="reverse" expr="todel">
                  <Name fromlineno="131" tolineno="131" lineno="131" name="todel"/>
                </Getattr>
              </CallFunc>
            </Discard>
            <For fromlineno="132" tolineno="133" lineno="132">
              <AssName fromlineno="132" tolineno="132" lineno="132" name="idx"/>
              <Name fromlineno="132" tolineno="132" lineno="132" name="todel"/>
              <Delete fromlineno="133" tolineno="133" lineno="133">
                <Subscript fromlineno="133" tolineno="133" lineno="133">
                  <Name fromlineno="133" tolineno="133" lineno="133" name="basemap"/>
                  <Index fromlineno="133" tolineno="133" lineno="None">
                    <Name fromlineno="133" tolineno="133" lineno="133" name="idx"/>
                  </Index>
                </Subscript>
              </Delete>
            </For>
          </While>
        </Function>
      </Class>
      <Class fromlineno="135" tolineno="1042" lineno="135">
        <Function fromlineno="139" tolineno="151" lineno="139">
          <Arguments fromlineno="139" tolineno="139" lineno="None" format_args="self, cooker, cfgData, dataCache, taskData, targets">
            <AssName fromlineno="139" tolineno="139" lineno="139" name="self"/>
            <AssName fromlineno="139" tolineno="139" lineno="139" name="cooker"/>
            <AssName fromlineno="139" tolineno="139" lineno="139" name="cfgData"/>
            <AssName fromlineno="139" tolineno="139" lineno="139" name="dataCache"/>
            <AssName fromlineno="139" tolineno="139" lineno="139" name="taskData"/>
            <AssName fromlineno="139" tolineno="139" lineno="139" name="targets"/>
          </Arguments>
          <Discard fromlineno="140" tolineno="140" lineno="140">
            <CallFunc fromlineno="140" tolineno="140" lineno="140" func="Getattr(reset_runqueue)">
              <Getattr fromlineno="140" tolineno="140" lineno="140" attrname="reset_runqueue" expr="self">
                <Name fromlineno="140" tolineno="140" lineno="140" name="self"/>
              </Getattr>
            </CallFunc>
          </Discard>
          <Assign fromlineno="141" tolineno="141" lineno="141" targets="[&lt;AssAttr(cooker) l.141 [bb.runqueue] at Ox95c1f4c&gt;]" value="cooker">
            <AssAttr fromlineno="141" tolineno="141" lineno="141" attrname="cooker" expr="self">
              <Name fromlineno="141" tolineno="141" lineno="141" name="self"/>
            </AssAttr>
            <Name fromlineno="141" tolineno="141" lineno="141" name="cooker"/>
          </Assign>
          <Assign fromlineno="142" tolineno="142" lineno="142" targets="[&lt;AssAttr(dataCache) l.142 [bb.runqueue] at Ox95c1fec&gt;]" value="dataCache">
            <AssAttr fromlineno="142" tolineno="142" lineno="142" attrname="dataCache" expr="self">
              <Name fromlineno="142" tolineno="142" lineno="142" name="self"/>
            </AssAttr>
            <Name fromlineno="142" tolineno="142" lineno="142" name="dataCache"/>
          </Assign>
          <Assign fromlineno="143" tolineno="143" lineno="143" targets="[&lt;AssAttr(taskData) l.143 [bb.runqueue] at Ox95c50ac&gt;]" value="taskData">
            <AssAttr fromlineno="143" tolineno="143" lineno="143" attrname="taskData" expr="self">
              <Name fromlineno="143" tolineno="143" lineno="143" name="self"/>
            </AssAttr>
            <Name fromlineno="143" tolineno="143" lineno="143" name="taskData"/>
          </Assign>
          <Assign fromlineno="144" tolineno="144" lineno="144" targets="[&lt;AssAttr(targets) l.144 [bb.runqueue] at Ox95c514c&gt;]" value="targets">
            <AssAttr fromlineno="144" tolineno="144" lineno="144" attrname="targets" expr="self">
              <Name fromlineno="144" tolineno="144" lineno="144" name="self"/>
            </AssAttr>
            <Name fromlineno="144" tolineno="144" lineno="144" name="targets"/>
          </Assign>
          <Assign fromlineno="146" tolineno="146" lineno="146" targets="[&lt;AssAttr(cfgdata) l.146 [bb.runqueue] at Ox95c51ec&gt;]" value="cfgData">
            <AssAttr fromlineno="146" tolineno="146" lineno="146" attrname="cfgdata" expr="self">
              <Name fromlineno="146" tolineno="146" lineno="146" name="self"/>
            </AssAttr>
            <Name fromlineno="146" tolineno="146" lineno="146" name="cfgData"/>
          </Assign>
          <Assign fromlineno="147" tolineno="147" lineno="147" targets="[&lt;AssAttr(number_tasks) l.147 [bb.runqueue] at Ox95c528c&gt;]" value="int((bb.data.getVar('BB_NUMBER_THREADS', cfgData, 1)) or (1))">
            <AssAttr fromlineno="147" tolineno="147" lineno="147" attrname="number_tasks" expr="self">
              <Name fromlineno="147" tolineno="147" lineno="147" name="self"/>
            </AssAttr>
            <CallFunc fromlineno="147" tolineno="147" lineno="147" func="Name(int)">
              <Name fromlineno="147" tolineno="147" lineno="147" name="int"/>
              <BoolOp fromlineno="147" tolineno="147" lineno="147" op="or" values="bb.data.getVar('BB_NUMBER_THREADS', cfgData, 1),1,">
                <CallFunc fromlineno="147" tolineno="147" lineno="147" func="Getattr(getVar)">
                  <Getattr fromlineno="147" tolineno="147" lineno="147" attrname="getVar" expr="bb.data">
                    <Getattr fromlineno="147" tolineno="147" lineno="147" attrname="data" expr="bb">
                      <Name fromlineno="147" tolineno="147" lineno="147" name="bb"/>
                    </Getattr>
                  </Getattr>
                  <Const fromlineno="147" tolineno="147" lineno="147" type="str">'BB_NUMBER_THREADS'</Const>
                  <Name fromlineno="147" tolineno="147" lineno="147" name="cfgData"/>
                  <Const fromlineno="147" tolineno="147" lineno="147" type="int">1</Const>
                </CallFunc>
                <Const fromlineno="147" tolineno="147" lineno="147" type="int">1</Const>
              </BoolOp>
            </CallFunc>
          </Assign>
          <Assign fromlineno="148" tolineno="148" lineno="148" targets="[&lt;AssAttr(multi_provider_whitelist) l.148 [bb.runqueue] at Ox95c54cc&gt;]" value="(bb.data.getVar('MULTI_PROVIDER_WHITELIST', cfgData, 1)) or ('').split()">
            <AssAttr fromlineno="148" tolineno="148" lineno="148" attrname="multi_provider_whitelist" expr="self">
              <Name fromlineno="148" tolineno="148" lineno="148" name="self"/>
            </AssAttr>
            <CallFunc fromlineno="148" tolineno="148" lineno="148" func="Getattr(split)">
              <Getattr fromlineno="148" tolineno="148" lineno="148" attrname="split" expr="(bb.data.getVar('MULTI_PROVIDER_WHITELIST', cfgData, 1)) or ('')">
                <BoolOp fromlineno="148" tolineno="148" lineno="148" op="or" values="bb.data.getVar('MULTI_PROVIDER_WHITELIST', cfgData, 1),'',">
                  <CallFunc fromlineno="148" tolineno="148" lineno="148" func="Getattr(getVar)">
                    <Getattr fromlineno="148" tolineno="148" lineno="148" attrname="getVar" expr="bb.data">
                      <Getattr fromlineno="148" tolineno="148" lineno="148" attrname="data" expr="bb">
                        <Name fromlineno="148" tolineno="148" lineno="148" name="bb"/>
                      </Getattr>
                    </Getattr>
                    <Const fromlineno="148" tolineno="148" lineno="148" type="str">'MULTI_PROVIDER_WHITELIST'</Const>
                    <Name fromlineno="148" tolineno="148" lineno="148" name="cfgData"/>
                    <Const fromlineno="148" tolineno="148" lineno="148" type="int">1</Const>
                  </CallFunc>
                  <Const fromlineno="148" tolineno="148" lineno="148" type="str">''</Const>
                </BoolOp>
              </Getattr>
            </CallFunc>
          </Assign>
          <Assign fromlineno="149" tolineno="149" lineno="149" targets="[&lt;AssAttr(scheduler) l.149 [bb.runqueue] at Ox95c570c&gt;]" value="(bb.data.getVar('BB_SCHEDULER', cfgData, 1)) or ('speed')">
            <AssAttr fromlineno="149" tolineno="149" lineno="149" attrname="scheduler" expr="self">
              <Name fromlineno="149" tolineno="149" lineno="149" name="self"/>
            </AssAttr>
            <BoolOp fromlineno="149" tolineno="149" lineno="149" op="or" values="bb.data.getVar('BB_SCHEDULER', cfgData, 1),'speed',">
              <CallFunc fromlineno="149" tolineno="149" lineno="149" func="Getattr(getVar)">
                <Getattr fromlineno="149" tolineno="149" lineno="149" attrname="getVar" expr="bb.data">
                  <Getattr fromlineno="149" tolineno="149" lineno="149" attrname="data" expr="bb">
                    <Name fromlineno="149" tolineno="149" lineno="149" name="bb"/>
                  </Getattr>
                </Getattr>
                <Const fromlineno="149" tolineno="149" lineno="149" type="str">'BB_SCHEDULER'</Const>
                <Name fromlineno="149" tolineno="149" lineno="149" name="cfgData"/>
                <Const fromlineno="149" tolineno="149" lineno="149" type="int">1</Const>
              </CallFunc>
              <Const fromlineno="149" tolineno="149" lineno="149" type="str">'speed'</Const>
            </BoolOp>
          </Assign>
          <Assign fromlineno="150" tolineno="150" lineno="150" targets="[&lt;AssAttr(stamppolicy) l.150 [bb.runqueue] at Ox95c58ec&gt;]" value="(bb.data.getVar('BB_STAMP_POLICY', cfgData, 1)) or ('perfile')">
            <AssAttr fromlineno="150" tolineno="150" lineno="150" attrname="stamppolicy" expr="self">
              <Name fromlineno="150" tolineno="150" lineno="150" name="self"/>
            </AssAttr>
            <BoolOp fromlineno="150" tolineno="150" lineno="150" op="or" values="bb.data.getVar('BB_STAMP_POLICY', cfgData, 1),'perfile',">
              <CallFunc fromlineno="150" tolineno="150" lineno="150" func="Getattr(getVar)">
                <Getattr fromlineno="150" tolineno="150" lineno="150" attrname="getVar" expr="bb.data">
                  <Getattr fromlineno="150" tolineno="150" lineno="150" attrname="data" expr="bb">
                    <Name fromlineno="150" tolineno="150" lineno="150" name="bb"/>
                  </Getattr>
                </Getattr>
                <Const fromlineno="150" tolineno="150" lineno="150" type="str">'BB_STAMP_POLICY'</Const>
                <Name fromlineno="150" tolineno="150" lineno="150" name="cfgData"/>
                <Const fromlineno="150" tolineno="150" lineno="150" type="int">1</Const>
              </CallFunc>
              <Const fromlineno="150" tolineno="150" lineno="150" type="str">'perfile'</Const>
            </BoolOp>
          </Assign>
          <Assign fromlineno="151" tolineno="151" lineno="151" targets="[&lt;AssAttr(stampwhitelist) l.151 [bb.runqueue] at Ox95c5acc&gt;]" value="(bb.data.getVar('BB_STAMP_WHITELIST', cfgData, 1)) or ('')">
            <AssAttr fromlineno="151" tolineno="151" lineno="151" attrname="stampwhitelist" expr="self">
              <Name fromlineno="151" tolineno="151" lineno="151" name="self"/>
            </AssAttr>
            <BoolOp fromlineno="151" tolineno="151" lineno="151" op="or" values="bb.data.getVar('BB_STAMP_WHITELIST', cfgData, 1),'',">
              <CallFunc fromlineno="151" tolineno="151" lineno="151" func="Getattr(getVar)">
                <Getattr fromlineno="151" tolineno="151" lineno="151" attrname="getVar" expr="bb.data">
                  <Getattr fromlineno="151" tolineno="151" lineno="151" attrname="data" expr="bb">
                    <Name fromlineno="151" tolineno="151" lineno="151" name="bb"/>
                  </Getattr>
                </Getattr>
                <Const fromlineno="151" tolineno="151" lineno="151" type="str">'BB_STAMP_WHITELIST'</Const>
                <Name fromlineno="151" tolineno="151" lineno="151" name="cfgData"/>
                <Const fromlineno="151" tolineno="151" lineno="151" type="int">1</Const>
              </CallFunc>
              <Const fromlineno="151" tolineno="151" lineno="151" type="str">''</Const>
            </BoolOp>
          </Assign>
        </Function>
        <Function fromlineno="153" tolineno="158" lineno="153">
          <Arguments fromlineno="153" tolineno="153" lineno="None" format_args="self">
            <AssName fromlineno="153" tolineno="153" lineno="153" name="self"/>
          </Arguments>
          <Assign fromlineno="155" tolineno="155" lineno="155" targets="[&lt;AssAttr(runq_fnid) l.155 [bb.runqueue] at Ox95c5dac&gt;]" value="[]">
            <AssAttr fromlineno="155" tolineno="155" lineno="155" attrname="runq_fnid" expr="self">
              <Name fromlineno="155" tolineno="155" lineno="155" name="self"/>
            </AssAttr>
            <List fromlineno="155" tolineno="155" lineno="155"/>
          </Assign>
          <Assign fromlineno="156" tolineno="156" lineno="156" targets="[&lt;AssAttr(runq_task) l.156 [bb.runqueue] at Ox95c5e6c&gt;]" value="[]">
            <AssAttr fromlineno="156" tolineno="156" lineno="156" attrname="runq_task" expr="self">
              <Name fromlineno="156" tolineno="156" lineno="156" name="self"/>
            </AssAttr>
            <List fromlineno="156" tolineno="156" lineno="156"/>
          </Assign>
          <Assign fromlineno="157" tolineno="157" lineno="157" targets="[&lt;AssAttr(runq_depends) l.157 [bb.runqueue] at Ox95c5f2c&gt;]" value="[]">
            <AssAttr fromlineno="157" tolineno="157" lineno="157" attrname="runq_depends" expr="self">
              <Name fromlineno="157" tolineno="157" lineno="157" name="self"/>
            </AssAttr>
            <List fromlineno="157" tolineno="157" lineno="157"/>
          </Assign>
          <Assign fromlineno="158" tolineno="158" lineno="158" targets="[&lt;AssAttr(runq_revdeps) l.158 [bb.runqueue] at Ox95c5fec&gt;]" value="[]">
            <AssAttr fromlineno="158" tolineno="158" lineno="158" attrname="runq_revdeps" expr="self">
              <Name fromlineno="158" tolineno="158" lineno="158" name="self"/>
            </AssAttr>
            <List fromlineno="158" tolineno="158" lineno="158"/>
          </Assign>
        </Function>
        <Function fromlineno="160" tolineno="163" lineno="160">
          <Arguments fromlineno="160" tolineno="160" lineno="None" format_args="self, task">
            <AssName fromlineno="160" tolineno="160" lineno="160" name="self"/>
            <AssName fromlineno="160" tolineno="160" lineno="160" name="task"/>
          </Arguments>
          <Assign fromlineno="161" tolineno="161" lineno="161" targets="[&lt;AssName(fn) l.161 [bb.runqueue] at Ox95c920c&gt;]" value="self.taskData.fn_index[self.runq_fnid[task]]">
            <AssName fromlineno="161" tolineno="161" lineno="161" name="fn"/>
            <Subscript fromlineno="161" tolineno="161" lineno="161">
              <Getattr fromlineno="161" tolineno="161" lineno="161" attrname="fn_index" expr="self.taskData">
                <Getattr fromlineno="161" tolineno="161" lineno="161" attrname="taskData" expr="self">
                  <Name fromlineno="161" tolineno="161" lineno="161" name="self"/>
                </Getattr>
              </Getattr>
              <Index fromlineno="161" tolineno="161" lineno="None">
                <Subscript fromlineno="161" tolineno="161" lineno="161">
                  <Getattr fromlineno="161" tolineno="161" lineno="161" attrname="runq_fnid" expr="self">
                    <Name fromlineno="161" tolineno="161" lineno="161" name="self"/>
                  </Getattr>
                  <Index fromlineno="161" tolineno="161" lineno="None">
                    <Name fromlineno="161" tolineno="161" lineno="161" name="task"/>
                  </Index>
                </Subscript>
              </Index>
            </Subscript>
          </Assign>
          <Assign fromlineno="162" tolineno="162" lineno="162" targets="[&lt;AssName(taskname) l.162 [bb.runqueue] at Ox95c93cc&gt;]" value="self.runq_task[task]">
            <AssName fromlineno="162" tolineno="162" lineno="162" name="taskname"/>
            <Subscript fromlineno="162" tolineno="162" lineno="162">
              <Getattr fromlineno="162" tolineno="162" lineno="162" attrname="runq_task" expr="self">
                <Name fromlineno="162" tolineno="162" lineno="162" name="self"/>
              </Getattr>
              <Index fromlineno="162" tolineno="162" lineno="None">
                <Name fromlineno="162" tolineno="162" lineno="162" name="task"/>
              </Index>
            </Subscript>
          </Assign>
          <Return fromlineno="163" tolineno="163" lineno="163">
            <BinOp fromlineno="163" tolineno="163" lineno="163" op="%" left="'%s, %s'" right="(fn, taskname)">
              <Const fromlineno="163" tolineno="163" lineno="163" type="str">'%s, %s'</Const>
              <Tuple fromlineno="163" tolineno="163" lineno="163">
                <Name fromlineno="163" tolineno="163" lineno="163" name="fn"/>
                <Name fromlineno="163" tolineno="163" lineno="163" name="taskname"/>
              </Tuple>
            </BinOp>
          </Return>
        </Function>
        <Function fromlineno="165" tolineno="169" lineno="165">
          <Arguments fromlineno="165" tolineno="165" lineno="None" format_args="self, fnid, taskname">
            <AssName fromlineno="165" tolineno="165" lineno="165" name="self"/>
            <AssName fromlineno="165" tolineno="165" lineno="165" name="fnid"/>
            <AssName fromlineno="165" tolineno="165" lineno="165" name="taskname"/>
          </Arguments>
          <For fromlineno="166" tolineno="168" lineno="166">
            <AssName fromlineno="166" tolineno="166" lineno="166" name="listid"/>
            <CallFunc fromlineno="166" tolineno="166" lineno="166" func="Name(range)">
              <Name fromlineno="166" tolineno="166" lineno="166" name="range"/>
              <CallFunc fromlineno="166" tolineno="166" lineno="166" func="Name(len)">
                <Name fromlineno="166" tolineno="166" lineno="166" name="len"/>
                <Getattr fromlineno="166" tolineno="166" lineno="166" attrname="runq_fnid" expr="self">
                  <Name fromlineno="166" tolineno="166" lineno="166" name="self"/>
                </Getattr>
              </CallFunc>
            </CallFunc>
            <If fromlineno="167" tolineno="168" lineno="167">
              <BoolOp fromlineno="167" tolineno="167" lineno="167" op="and" values="self.runq_fnid[listid] == fnid,self.runq_task[listid] == taskname,">
                <Compare fromlineno="167" tolineno="167" lineno="167" op="('==', &lt;Name(fnid) l.167 [bb.runqueue] at Ox95c9a2c&gt;)">
                  <Subscript fromlineno="167" tolineno="167" lineno="167">
                    <Getattr fromlineno="167" tolineno="167" lineno="167" attrname="runq_fnid" expr="self">
                      <Name fromlineno="167" tolineno="167" lineno="167" name="self"/>
                    </Getattr>
                    <Index fromlineno="167" tolineno="167" lineno="None">
                      <Name fromlineno="167" tolineno="167" lineno="167" name="listid"/>
                    </Index>
                  </Subscript>
                  <Name fromlineno="167" tolineno="167" lineno="167" name="fnid"/>
                </Compare>
                <Compare fromlineno="167" tolineno="167" lineno="167" op="('==', &lt;Name(taskname) l.167 [bb.runqueue] at Ox95c9b2c&gt;)">
                  <Subscript fromlineno="167" tolineno="167" lineno="167">
                    <Getattr fromlineno="167" tolineno="167" lineno="167" attrname="runq_task" expr="self">
                      <Name fromlineno="167" tolineno="167" lineno="167" name="self"/>
                    </Getattr>
                    <Index fromlineno="167" tolineno="167" lineno="None">
                      <Name fromlineno="167" tolineno="167" lineno="167" name="listid"/>
                    </Index>
                  </Subscript>
                  <Name fromlineno="167" tolineno="167" lineno="167" name="taskname"/>
                </Compare>
              </BoolOp>
              <Return fromlineno="168" tolineno="168" lineno="168">
                <Name fromlineno="168" tolineno="168" lineno="168" name="listid"/>
              </Return>
            </If>
          </For>
          <Return fromlineno="169" tolineno="169" lineno="169">
            <Const fromlineno="169" tolineno="169" lineno="169" type="NoneType">None</Const>
          </Return>
        </Function>
        <Function fromlineno="171" tolineno="256" lineno="171">
          <Arguments fromlineno="171" tolineno="171" lineno="None" format_args="self, tasks">
            <AssName fromlineno="171" tolineno="171" lineno="171" name="self"/>
            <AssName fromlineno="171" tolineno="171" lineno="171" name="tasks"/>
          </Arguments>
          <From fromlineno="176" tolineno="176" lineno="176" modname="copy">
            <ImportName name="deepcopy"/>
          </From>
          <Assign fromlineno="178" tolineno="178" lineno="178" targets="[&lt;AssName(valid_chains) l.178 [bb.runqueue] at Ox95c9d4c&gt;]" value="[]">
            <AssName fromlineno="178" tolineno="178" lineno="178" name="valid_chains"/>
            <List fromlineno="178" tolineno="178" lineno="178"/>
          </Assign>
          <Assign fromlineno="179" tolineno="179" lineno="179" targets="[&lt;AssName(explored_deps) l.179 [bb.runqueue] at Ox95c9e0c&gt;]" value="{}">
            <AssName fromlineno="179" tolineno="179" lineno="179" name="explored_deps"/>
            <Dict fromlineno="179" tolineno="179" lineno="179"/>
          </Assign>
          <Assign fromlineno="180" tolineno="180" lineno="180" targets="[&lt;AssName(msgs) l.180 [bb.runqueue] at Ox95c9ecc&gt;]" value="[]">
            <AssName fromlineno="180" tolineno="180" lineno="180" name="msgs"/>
            <List fromlineno="180" tolineno="180" lineno="180"/>
          </Assign>
          <Function fromlineno="182" tolineno="193" lineno="182">
            <Arguments fromlineno="182" tolineno="182" lineno="None" format_args="chain">
              <AssName fromlineno="182" tolineno="182" lineno="182" name="chain"/>
            </Arguments>
            <Assign fromlineno="186" tolineno="186" lineno="186" targets="[&lt;AssName(lowest) l.186 [bb.runqueue] at Ox95cd08c&gt;]" value="0">
              <AssName fromlineno="186" tolineno="186" lineno="186" name="lowest"/>
              <Const fromlineno="186" tolineno="186" lineno="186" type="int">0</Const>
            </Assign>
            <Assign fromlineno="187" tolineno="187" lineno="187" targets="[&lt;AssName(new_chain) l.187 [bb.runqueue] at Ox95cd12c&gt;]" value="[]">
              <AssName fromlineno="187" tolineno="187" lineno="187" name="new_chain"/>
              <List fromlineno="187" tolineno="187" lineno="187"/>
            </Assign>
            <For fromlineno="188" tolineno="190" lineno="188">
              <AssName fromlineno="188" tolineno="188" lineno="188" name="entry"/>
              <CallFunc fromlineno="188" tolineno="188" lineno="188" func="Name(range)">
                <Name fromlineno="188" tolineno="188" lineno="188" name="range"/>
                <CallFunc fromlineno="188" tolineno="188" lineno="188" func="Name(len)">
                  <Name fromlineno="188" tolineno="188" lineno="188" name="len"/>
                  <Name fromlineno="188" tolineno="188" lineno="188" name="chain"/>
                </CallFunc>
              </CallFunc>
              <If fromlineno="189" tolineno="190" lineno="189">
                <Compare fromlineno="189" tolineno="189" lineno="189" op="('&lt;', &lt;Subscript() l.189 [bb.runqueue] at Ox95cd42c&gt;)">
                  <Subscript fromlineno="189" tolineno="189" lineno="189">
                    <Name fromlineno="189" tolineno="189" lineno="189" name="chain"/>
                    <Index fromlineno="189" tolineno="189" lineno="None">
                      <Name fromlineno="189" tolineno="189" lineno="189" name="entry"/>
                    </Index>
                  </Subscript>
                  <Subscript fromlineno="189" tolineno="189" lineno="189">
                    <Name fromlineno="189" tolineno="189" lineno="189" name="chain"/>
                    <Index fromlineno="189" tolineno="189" lineno="None">
                      <Name fromlineno="189" tolineno="189" lineno="189" name="lowest"/>
                    </Index>
                  </Subscript>
                </Compare>
                <Assign fromlineno="190" tolineno="190" lineno="190" targets="[&lt;AssName(lowest) l.190 [bb.runqueue] at Ox95cd50c&gt;]" value="entry">
                  <AssName fromlineno="190" tolineno="190" lineno="190" name="lowest"/>
                  <Name fromlineno="190" tolineno="190" lineno="190" name="entry"/>
                </Assign>
              </If>
            </For>
            <Discard fromlineno="191" tolineno="191" lineno="191">
              <CallFunc fromlineno="191" tolineno="191" lineno="191" func="Getattr(extend)">
                <Getattr fromlineno="191" tolineno="191" lineno="191" attrname="extend" expr="new_chain">
                  <Name fromlineno="191" tolineno="191" lineno="191" name="new_chain"/>
                </Getattr>
                <Subscript fromlineno="191" tolineno="191" lineno="191">
                  <Name fromlineno="191" tolineno="191" lineno="191" name="chain"/>
                  <Slice fromlineno="191" tolineno="191" lineno="None">
                    <Name fromlineno="191" tolineno="191" lineno="191" name="lowest"/>
                  </Slice>
                </Subscript>
              </CallFunc>
            </Discard>
            <Discard fromlineno="192" tolineno="192" lineno="192">
              <CallFunc fromlineno="192" tolineno="192" lineno="192" func="Getattr(extend)">
                <Getattr fromlineno="192" tolineno="192" lineno="192" attrname="extend" expr="new_chain">
                  <Name fromlineno="192" tolineno="192" lineno="192" name="new_chain"/>
                </Getattr>
                <Subscript fromlineno="192" tolineno="192" lineno="192">
                  <Name fromlineno="192" tolineno="192" lineno="192" name="chain"/>
                  <Slice fromlineno="192" tolineno="192" lineno="None">
                    <Name fromlineno="192" tolineno="192" lineno="192" name="lowest"/>
                  </Slice>
                </Subscript>
              </CallFunc>
            </Discard>
            <Return fromlineno="193" tolineno="193" lineno="193">
              <Name fromlineno="193" tolineno="193" lineno="193" name="new_chain"/>
            </Return>
          </Function>
          <Function fromlineno="195" tolineno="204" lineno="195">
            <Arguments fromlineno="195" tolineno="195" lineno="None" format_args="chain1, chain2">
              <AssName fromlineno="195" tolineno="195" lineno="195" name="chain1"/>
              <AssName fromlineno="195" tolineno="195" lineno="195" name="chain2"/>
            </Arguments>
            <If fromlineno="199" tolineno="200" lineno="199">
              <Compare fromlineno="199" tolineno="199" lineno="199" op="('!=', &lt;CallFunc() l.199 [bb.runqueue] at Ox95cd9cc&gt;)">
                <CallFunc fromlineno="199" tolineno="199" lineno="199" func="Name(len)">
                  <Name fromlineno="199" tolineno="199" lineno="199" name="len"/>
                  <Name fromlineno="199" tolineno="199" lineno="199" name="chain1"/>
                </CallFunc>
                <CallFunc fromlineno="199" tolineno="199" lineno="199" func="Name(len)">
                  <Name fromlineno="199" tolineno="199" lineno="199" name="len"/>
                  <Name fromlineno="199" tolineno="199" lineno="199" name="chain2"/>
                </CallFunc>
              </Compare>
              <Return fromlineno="200" tolineno="200" lineno="200">
                <Const fromlineno="200" tolineno="200" lineno="200" type="bool">False</Const>
              </Return>
            </If>
            <For fromlineno="201" tolineno="203" lineno="201">
              <AssName fromlineno="201" tolineno="201" lineno="201" name="index"/>
              <CallFunc fromlineno="201" tolineno="201" lineno="201" func="Name(range)">
                <Name fromlineno="201" tolineno="201" lineno="201" name="range"/>
                <CallFunc fromlineno="201" tolineno="201" lineno="201" func="Name(len)">
                  <Name fromlineno="201" tolineno="201" lineno="201" name="len"/>
                  <Name fromlineno="201" tolineno="201" lineno="201" name="chain1"/>
                </CallFunc>
              </CallFunc>
              <If fromlineno="202" tolineno="203" lineno="202">
                <Compare fromlineno="202" tolineno="202" lineno="202" op="('!=', &lt;Subscript() l.202 [bb.runqueue] at Ox95cdd2c&gt;)">
                  <Subscript fromlineno="202" tolineno="202" lineno="202">
                    <Name fromlineno="202" tolineno="202" lineno="202" name="chain1"/>
                    <Index fromlineno="202" tolineno="202" lineno="None">
                      <Name fromlineno="202" tolineno="202" lineno="202" name="index"/>
                    </Index>
                  </Subscript>
                  <Subscript fromlineno="202" tolineno="202" lineno="202">
                    <Name fromlineno="202" tolineno="202" lineno="202" name="chain2"/>
                    <Index fromlineno="202" tolineno="202" lineno="None">
                      <Name fromlineno="202" tolineno="202" lineno="202" name="index"/>
                    </Index>
                  </Subscript>
                </Compare>
                <Return fromlineno="203" tolineno="203" lineno="203">
                  <Const fromlineno="203" tolineno="203" lineno="203" type="bool">False</Const>
                </Return>
              </If>
            </For>
            <Return fromlineno="204" tolineno="204" lineno="204">
              <Const fromlineno="204" tolineno="204" lineno="204" type="bool">True</Const>
            </Return>
          </Function>
          <Function fromlineno="206" tolineno="213" lineno="206">
            <Arguments fromlineno="206" tolineno="206" lineno="None" format_args="chain, chain_array">
              <AssName fromlineno="206" tolineno="206" lineno="206" name="chain"/>
              <AssName fromlineno="206" tolineno="206" lineno="206" name="chain_array"/>
            </Arguments>
            <For fromlineno="210" tolineno="212" lineno="210">
              <AssName fromlineno="210" tolineno="210" lineno="210" name="ch"/>
              <Name fromlineno="210" tolineno="210" lineno="210" name="chain_array"/>
              <If fromlineno="211" tolineno="212" lineno="211">
                <CallFunc fromlineno="211" tolineno="211" lineno="211" func="Name(chain_compare_equal)">
                  <Name fromlineno="211" tolineno="211" lineno="211" name="chain_compare_equal"/>
                  <Name fromlineno="211" tolineno="211" lineno="211" name="ch"/>
                  <Name fromlineno="211" tolineno="211" lineno="211" name="chain"/>
                </CallFunc>
                <Return fromlineno="212" tolineno="212" lineno="212">
                  <Const fromlineno="212" tolineno="212" lineno="212" type="bool">True</Const>
                </Return>
              </If>
            </For>
            <Return fromlineno="213" tolineno="213" lineno="213">
              <Const fromlineno="213" tolineno="213" lineno="213" type="bool">False</Const>
            </Return>
          </Function>
          <Function fromlineno="215" tolineno="251" lineno="215">
            <Arguments fromlineno="215" tolineno="215" lineno="None" format_args="taskid, prev_chain">
              <AssName fromlineno="215" tolineno="215" lineno="215" name="taskid"/>
              <AssName fromlineno="215" tolineno="215" lineno="215" name="prev_chain"/>
            </Arguments>
            <Discard fromlineno="216" tolineno="216" lineno="216">
              <CallFunc fromlineno="216" tolineno="216" lineno="216" func="Getattr(append)">
                <Getattr fromlineno="216" tolineno="216" lineno="216" attrname="append" expr="prev_chain">
                  <Name fromlineno="216" tolineno="216" lineno="216" name="prev_chain"/>
                </Getattr>
                <Name fromlineno="216" tolineno="216" lineno="216" name="taskid"/>
              </CallFunc>
            </Discard>
            <Assign fromlineno="217" tolineno="217" lineno="217" targets="[&lt;AssName(total_deps) l.217 [bb.runqueue] at Ox95d13ec&gt;]" value="[]">
              <AssName fromlineno="217" tolineno="217" lineno="217" name="total_deps"/>
              <List fromlineno="217" tolineno="217" lineno="217"/>
            </Assign>
            <Discard fromlineno="218" tolineno="218" lineno="218">
              <CallFunc fromlineno="218" tolineno="218" lineno="218" func="Getattr(extend)">
                <Getattr fromlineno="218" tolineno="218" lineno="218" attrname="extend" expr="total_deps">
                  <Name fromlineno="218" tolineno="218" lineno="218" name="total_deps"/>
                </Getattr>
                <Subscript fromlineno="218" tolineno="218" lineno="218">
                  <Getattr fromlineno="218" tolineno="218" lineno="218" attrname="runq_revdeps" expr="self">
                    <Name fromlineno="218" tolineno="218" lineno="218" name="self"/>
                  </Getattr>
                  <Index fromlineno="218" tolineno="218" lineno="None">
                    <Name fromlineno="218" tolineno="218" lineno="218" name="taskid"/>
                  </Index>
                </Subscript>
              </CallFunc>
            </Discard>
            <For fromlineno="219" tolineno="249" lineno="219">
              <AssName fromlineno="219" tolineno="219" lineno="219" name="revdep"/>
              <Subscript fromlineno="219" tolineno="219" lineno="219">
                <Getattr fromlineno="219" tolineno="219" lineno="219" attrname="runq_revdeps" expr="self">
                  <Name fromlineno="219" tolineno="219" lineno="219" name="self"/>
                </Getattr>
                <Index fromlineno="219" tolineno="219" lineno="None">
                  <Name fromlineno="219" tolineno="219" lineno="219" name="taskid"/>
                </Index>
              </Subscript>
              <If fromlineno="220" tolineno="235" lineno="220">
                <Compare fromlineno="220" tolineno="220" lineno="220" op="('in', &lt;Name(prev_chain) l.220 [bb.runqueue] at Ox95d178c&gt;)">
                  <Name fromlineno="220" tolineno="220" lineno="220" name="revdep"/>
                  <Name fromlineno="220" tolineno="220" lineno="220" name="prev_chain"/>
                </Compare>
                <Assign fromlineno="221" tolineno="221" lineno="221" targets="[&lt;AssName(idx) l.221 [bb.runqueue] at Ox95d180c&gt;]" value="prev_chain.index(revdep)">
                  <AssName fromlineno="221" tolineno="221" lineno="221" name="idx"/>
                  <CallFunc fromlineno="221" tolineno="221" lineno="221" func="Getattr(index)">
                    <Getattr fromlineno="221" tolineno="221" lineno="221" attrname="index" expr="prev_chain">
                      <Name fromlineno="221" tolineno="221" lineno="221" name="prev_chain"/>
                    </Getattr>
                    <Name fromlineno="221" tolineno="221" lineno="221" name="revdep"/>
                  </CallFunc>
                </Assign>
                <Assign fromlineno="224" tolineno="224" lineno="224" targets="[&lt;AssName(chain) l.224 [bb.runqueue] at Ox95d192c&gt;]" value="prev_chain[idx:]">
                  <AssName fromlineno="224" tolineno="224" lineno="224" name="chain"/>
                  <Subscript fromlineno="224" tolineno="224" lineno="224">
                    <Name fromlineno="224" tolineno="224" lineno="224" name="prev_chain"/>
                    <Slice fromlineno="224" tolineno="224" lineno="None">
                      <Name fromlineno="224" tolineno="224" lineno="224" name="idx"/>
                    </Slice>
                  </Subscript>
                </Assign>
                <Assign fromlineno="225" tolineno="225" lineno="225" targets="[&lt;AssName(new_chain) l.225 [bb.runqueue] at Ox95d1a2c&gt;]" value="chain_reorder(chain)">
                  <AssName fromlineno="225" tolineno="225" lineno="225" name="new_chain"/>
                  <CallFunc fromlineno="225" tolineno="225" lineno="225" func="Name(chain_reorder)">
                    <Name fromlineno="225" tolineno="225" lineno="225" name="chain_reorder"/>
                    <Name fromlineno="225" tolineno="225" lineno="225" name="chain"/>
                  </CallFunc>
                </Assign>
                <If fromlineno="226" tolineno="231" lineno="226">
                  <UnaryOp fromlineno="226" tolineno="226" lineno="226">
                    <CallFunc fromlineno="226" tolineno="226" lineno="226" func="Name(chain_array_contains)">
                      <Name fromlineno="226" tolineno="226" lineno="226" name="chain_array_contains"/>
                      <Name fromlineno="226" tolineno="226" lineno="226" name="new_chain"/>
                      <Name fromlineno="226" tolineno="226" lineno="226" name="valid_chains"/>
                    </CallFunc>
                  </UnaryOp>
                  <Discard fromlineno="227" tolineno="227" lineno="227">
                    <CallFunc fromlineno="227" tolineno="227" lineno="227" func="Getattr(append)">
                      <Getattr fromlineno="227" tolineno="227" lineno="227" attrname="append" expr="valid_chains">
                        <Name fromlineno="227" tolineno="227" lineno="227" name="valid_chains"/>
                      </Getattr>
                      <Name fromlineno="227" tolineno="227" lineno="227" name="new_chain"/>
                    </CallFunc>
                  </Discard>
                  <Discard fromlineno="228" tolineno="228" lineno="228">
                    <CallFunc fromlineno="228" tolineno="228" lineno="228" func="Getattr(append)">
                      <Getattr fromlineno="228" tolineno="228" lineno="228" attrname="append" expr="msgs">
                        <Name fromlineno="228" tolineno="228" lineno="228" name="msgs"/>
                      </Getattr>
                      <BinOp fromlineno="228" tolineno="228" lineno="228" op="%" left="'Dependency loop #%d found:\n'" right="len(valid_chains)">
                        <Const fromlineno="228" tolineno="228" lineno="228" type="str">'Dependency loop #%d found:\n'</Const>
                        <CallFunc fromlineno="228" tolineno="228" lineno="228" func="Name(len)">
                          <Name fromlineno="228" tolineno="228" lineno="228" name="len"/>
                          <Name fromlineno="228" tolineno="228" lineno="228" name="valid_chains"/>
                        </CallFunc>
                      </BinOp>
                    </CallFunc>
                  </Discard>
                  <For fromlineno="229" tolineno="230" lineno="229">
                    <AssName fromlineno="229" tolineno="229" lineno="229" name="dep"/>
                    <Name fromlineno="229" tolineno="229" lineno="229" name="new_chain"/>
                    <Discard fromlineno="230" tolineno="230" lineno="230">
                      <CallFunc fromlineno="230" tolineno="230" lineno="230" func="Getattr(append)">
                        <Getattr fromlineno="230" tolineno="230" lineno="230" attrname="append" expr="msgs">
                          <Name fromlineno="230" tolineno="230" lineno="230" name="msgs"/>
                        </Getattr>
                        <BinOp fromlineno="230" tolineno="230" lineno="230" op="%" left="'  Task %s (%s) (depends: %s)\n'" right="(dep, self.get_user_idstring(dep), self.runq_depends[dep])">
                          <Const fromlineno="230" tolineno="230" lineno="230" type="str">'  Task %s (%s) (depends: %s)\n'</Const>
                          <Tuple fromlineno="230" tolineno="230" lineno="230">
                            <Name fromlineno="230" tolineno="230" lineno="230" name="dep"/>
                            <CallFunc fromlineno="230" tolineno="230" lineno="230" func="Getattr(get_user_idstring)">
                              <Getattr fromlineno="230" tolineno="230" lineno="230" attrname="get_user_idstring" expr="self">
                                <Name fromlineno="230" tolineno="230" lineno="230" name="self"/>
                              </Getattr>
                              <Name fromlineno="230" tolineno="230" lineno="230" name="dep"/>
                            </CallFunc>
                            <Subscript fromlineno="230" tolineno="230" lineno="230">
                              <Getattr fromlineno="230" tolineno="230" lineno="230" attrname="runq_depends" expr="self">
                                <Name fromlineno="230" tolineno="230" lineno="230" name="self"/>
                              </Getattr>
                              <Index fromlineno="230" tolineno="230" lineno="None">
                                <Name fromlineno="230" tolineno="230" lineno="230" name="dep"/>
                              </Index>
                            </Subscript>
                          </Tuple>
                        </BinOp>
                      </CallFunc>
                    </Discard>
                  </For>
                  <Discard fromlineno="231" tolineno="231" lineno="231">
                    <CallFunc fromlineno="231" tolineno="231" lineno="231" func="Getattr(append)">
                      <Getattr fromlineno="231" tolineno="231" lineno="231" attrname="append" expr="msgs">
                        <Name fromlineno="231" tolineno="231" lineno="231" name="msgs"/>
                      </Getattr>
                      <Const fromlineno="231" tolineno="231" lineno="231" type="str">'\n'</Const>
                    </CallFunc>
                  </Discard>
                </If>
                <If fromlineno="232" tolineno="234" lineno="232">
                  <Compare fromlineno="232" tolineno="232" lineno="232" op="('&gt;', &lt;Const(int) l.232 [bb.runqueue] at Ox95d636c&gt;)">
                    <CallFunc fromlineno="232" tolineno="232" lineno="232" func="Name(len)">
                      <Name fromlineno="232" tolineno="232" lineno="232" name="len"/>
                      <Name fromlineno="232" tolineno="232" lineno="232" name="valid_chains"/>
                    </CallFunc>
                    <Const fromlineno="232" tolineno="232" lineno="232" type="int">10</Const>
                  </Compare>
                  <Discard fromlineno="233" tolineno="233" lineno="233">
                    <CallFunc fromlineno="233" tolineno="233" lineno="233" func="Getattr(append)">
                      <Getattr fromlineno="233" tolineno="233" lineno="233" attrname="append" expr="msgs">
                        <Name fromlineno="233" tolineno="233" lineno="233" name="msgs"/>
                      </Getattr>
                      <Const fromlineno="233" tolineno="233" lineno="233" type="str">'Aborted dependency loops search after 10 matches.\n'</Const>
                    </CallFunc>
                  </Discard>
                  <Return fromlineno="234" tolineno="234" lineno="234">
                    <Name fromlineno="234" tolineno="234" lineno="234" name="msgs"/>
                  </Return>
                </If>
                <Continue fromlineno="235" tolineno="235" lineno="235"/>
              </If>
              <Assign fromlineno="236" tolineno="236" lineno="236" targets="[&lt;AssName(scan) l.236 [bb.runqueue] at Ox95d64ec&gt;]" value="False">
                <AssName fromlineno="236" tolineno="236" lineno="236" name="scan"/>
                <Const fromlineno="236" tolineno="236" lineno="236" type="bool">False</Const>
              </Assign>
              <If fromlineno="237" tolineno="244" lineno="237">
                <Compare fromlineno="237" tolineno="237" lineno="237" op="('not in', &lt;Name(explored_deps) l.237 [bb.runqueue] at Ox95d65ec&gt;)">
                  <Name fromlineno="237" tolineno="237" lineno="237" name="revdep"/>
                  <Name fromlineno="237" tolineno="237" lineno="237" name="explored_deps"/>
                </Compare>
                <Assign fromlineno="238" tolineno="238" lineno="238" targets="[&lt;AssName(scan) l.238 [bb.runqueue] at Ox95d666c&gt;]" value="True">
                  <AssName fromlineno="238" tolineno="238" lineno="238" name="scan"/>
                  <Const fromlineno="238" tolineno="238" lineno="238" type="bool">True</Const>
                </Assign>
                <If fromlineno="239" tolineno="244" lineno="239">
                  <Compare fromlineno="239" tolineno="239" lineno="239" op="('in', &lt;Subscript() l.239 [bb.runqueue] at Ox95d678c&gt;)">
                    <Name fromlineno="239" tolineno="239" lineno="239" name="revdep"/>
                    <Subscript fromlineno="239" tolineno="239" lineno="239">
                      <Name fromlineno="239" tolineno="239" lineno="239" name="explored_deps"/>
                      <Index fromlineno="239" tolineno="239" lineno="None">
                        <Name fromlineno="239" tolineno="239" lineno="239" name="revdep"/>
                      </Index>
                    </Subscript>
                  </Compare>
                  <Assign fromlineno="240" tolineno="240" lineno="240" targets="[&lt;AssName(scan) l.240 [bb.runqueue] at Ox95d686c&gt;]" value="True">
                    <AssName fromlineno="240" tolineno="240" lineno="240" name="scan"/>
                    <Const fromlineno="240" tolineno="240" lineno="240" type="bool">True</Const>
                  </Assign>
                  <For fromlineno="242" tolineno="244" lineno="242">
                    <AssName fromlineno="242" tolineno="242" lineno="242" name="dep"/>
                    <Name fromlineno="242" tolineno="242" lineno="242" name="prev_chain"/>
                    <If fromlineno="243" tolineno="244" lineno="243">
                      <Compare fromlineno="243" tolineno="243" lineno="243" op="('in', &lt;Subscript() l.243 [bb.runqueue] at Ox95d6a2c&gt;)">
                        <Name fromlineno="243" tolineno="243" lineno="243" name="dep"/>
                        <Subscript fromlineno="243" tolineno="243" lineno="243">
                          <Name fromlineno="243" tolineno="243" lineno="243" name="explored_deps"/>
                          <Index fromlineno="243" tolineno="243" lineno="None">
                            <Name fromlineno="243" tolineno="243" lineno="243" name="revdep"/>
                          </Index>
                        </Subscript>
                      </Compare>
                      <Assign fromlineno="244" tolineno="244" lineno="244" targets="[&lt;AssName(scan) l.244 [bb.runqueue] at Ox95d6b0c&gt;]" value="True">
                        <AssName fromlineno="244" tolineno="244" lineno="244" name="scan"/>
                        <Const fromlineno="244" tolineno="244" lineno="244" type="bool">True</Const>
                      </Assign>
                    </If>
                  </For>
                </If>
              </If>
              <If fromlineno="245" tolineno="246" lineno="245">
                <Name fromlineno="245" tolineno="245" lineno="245" name="scan"/>
                <Discard fromlineno="246" tolineno="246" lineno="246">
                  <CallFunc fromlineno="246" tolineno="246" lineno="246" func="Name(find_chains)">
                    <Name fromlineno="246" tolineno="246" lineno="246" name="find_chains"/>
                    <Name fromlineno="246" tolineno="246" lineno="246" name="revdep"/>
                    <CallFunc fromlineno="246" tolineno="246" lineno="246" func="Name(deepcopy)">
                      <Name fromlineno="246" tolineno="246" lineno="246" name="deepcopy"/>
                      <Name fromlineno="246" tolineno="246" lineno="246" name="prev_chain"/>
                    </CallFunc>
                  </CallFunc>
                </Discard>
              </If>
              <For fromlineno="247" tolineno="249" lineno="247">
                <AssName fromlineno="247" tolineno="247" lineno="247" name="dep"/>
                <Subscript fromlineno="247" tolineno="247" lineno="247">
                  <Name fromlineno="247" tolineno="247" lineno="247" name="explored_deps"/>
                  <Index fromlineno="247" tolineno="247" lineno="None">
                    <Name fromlineno="247" tolineno="247" lineno="247" name="revdep"/>
                  </Index>
                </Subscript>
                <If fromlineno="248" tolineno="249" lineno="248">
                  <Compare fromlineno="248" tolineno="248" lineno="248" op="('not in', &lt;Name(total_deps) l.248 [bb.runqueue] at Ox95d6e0c&gt;)">
                    <Name fromlineno="248" tolineno="248" lineno="248" name="dep"/>
                    <Name fromlineno="248" tolineno="248" lineno="248" name="total_deps"/>
                  </Compare>
                  <Discard fromlineno="249" tolineno="249" lineno="249">
                    <CallFunc fromlineno="249" tolineno="249" lineno="249" func="Getattr(append)">
                      <Getattr fromlineno="249" tolineno="249" lineno="249" attrname="append" expr="total_deps">
                        <Name fromlineno="249" tolineno="249" lineno="249" name="total_deps"/>
                      </Getattr>
                      <Name fromlineno="249" tolineno="249" lineno="249" name="dep"/>
                    </CallFunc>
                  </Discard>
                </If>
              </For>
            </For>
            <Assign fromlineno="251" tolineno="251" lineno="251" targets="[&lt;Subscript() l.251 [bb.runqueue] at Ox95d6f4c&gt;]" value="total_deps">
              <Subscript fromlineno="251" tolineno="251" lineno="251">
                <Name fromlineno="251" tolineno="251" lineno="251" name="explored_deps"/>
                <Index fromlineno="251" tolineno="251" lineno="None">
                  <Name fromlineno="251" tolineno="251" lineno="251" name="taskid"/>
                </Index>
              </Subscript>
              <Name fromlineno="251" tolineno="251" lineno="251" name="total_deps"/>
            </Assign>
          </Function>
          <For fromlineno="253" tolineno="254" lineno="253">
            <AssName fromlineno="253" tolineno="253" lineno="253" name="task"/>
            <Name fromlineno="253" tolineno="253" lineno="253" name="tasks"/>
            <Discard fromlineno="254" tolineno="254" lineno="254">
              <CallFunc fromlineno="254" tolineno="254" lineno="254" func="Name(find_chains)">
                <Name fromlineno="254" tolineno="254" lineno="254" name="find_chains"/>
                <Name fromlineno="254" tolineno="254" lineno="254" name="task"/>
                <List fromlineno="254" tolineno="254" lineno="254"/>
              </CallFunc>
            </Discard>
          </For>
          <Return fromlineno="256" tolineno="256" lineno="256">
            <Name fromlineno="256" tolineno="256" lineno="256" name="msgs"/>
          </Return>
        </Function>
        <Function fromlineno="258" tolineno="315" lineno="258">
          <Arguments fromlineno="258" tolineno="258" lineno="None" format_args="self, endpoints">
            <AssName fromlineno="258" tolineno="258" lineno="258" name="self"/>
            <AssName fromlineno="258" tolineno="258" lineno="258" name="endpoints"/>
          </Arguments>
          <Assign fromlineno="267" tolineno="267" lineno="267" targets="[&lt;AssName(numTasks) l.267 [bb.runqueue] at Ox95d930c&gt;]" value="len(self.runq_fnid)">
            <AssName fromlineno="267" tolineno="267" lineno="267" name="numTasks"/>
            <CallFunc fromlineno="267" tolineno="267" lineno="267" func="Name(len)">
              <Name fromlineno="267" tolineno="267" lineno="267" name="len"/>
              <Getattr fromlineno="267" tolineno="267" lineno="267" attrname="runq_fnid" expr="self">
                <Name fromlineno="267" tolineno="267" lineno="267" name="self"/>
              </Getattr>
            </CallFunc>
          </Assign>
          <Assign fromlineno="268" tolineno="268" lineno="268" targets="[&lt;AssName(weight) l.268 [bb.runqueue] at Ox95d942c&gt;]" value="[]">
            <AssName fromlineno="268" tolineno="268" lineno="268" name="weight"/>
            <List fromlineno="268" tolineno="268" lineno="268"/>
          </Assign>
          <Assign fromlineno="269" tolineno="269" lineno="269" targets="[&lt;AssName(deps_left) l.269 [bb.runqueue] at Ox95d94ec&gt;]" value="[]">
            <AssName fromlineno="269" tolineno="269" lineno="269" name="deps_left"/>
            <List fromlineno="269" tolineno="269" lineno="269"/>
          </Assign>
          <Assign fromlineno="270" tolineno="270" lineno="270" targets="[&lt;AssName(task_done) l.270 [bb.runqueue] at Ox95d95ac&gt;]" value="[]">
            <AssName fromlineno="270" tolineno="270" lineno="270" name="task_done"/>
            <List fromlineno="270" tolineno="270" lineno="270"/>
          </Assign>
          <For fromlineno="272" tolineno="275" lineno="272">
            <AssName fromlineno="272" tolineno="272" lineno="272" name="listid"/>
            <CallFunc fromlineno="272" tolineno="272" lineno="272" func="Name(range)">
              <Name fromlineno="272" tolineno="272" lineno="272" name="range"/>
              <Name fromlineno="272" tolineno="272" lineno="272" name="numTasks"/>
            </CallFunc>
            <Discard fromlineno="273" tolineno="273" lineno="273">
              <CallFunc fromlineno="273" tolineno="273" lineno="273" func="Getattr(append)">
                <Getattr fromlineno="273" tolineno="273" lineno="273" attrname="append" expr="task_done">
                  <Name fromlineno="273" tolineno="273" lineno="273" name="task_done"/>
                </Getattr>
                <Const fromlineno="273" tolineno="273" lineno="273" type="bool">False</Const>
              </CallFunc>
            </Discard>
            <Discard fromlineno="274" tolineno="274" lineno="274">
              <CallFunc fromlineno="274" tolineno="274" lineno="274" func="Getattr(append)">
                <Getattr fromlineno="274" tolineno="274" lineno="274" attrname="append" expr="weight">
                  <Name fromlineno="274" tolineno="274" lineno="274" name="weight"/>
                </Getattr>
                <Const fromlineno="274" tolineno="274" lineno="274" type="int">0</Const>
              </CallFunc>
            </Discard>
            <Discard fromlineno="275" tolineno="275" lineno="275">
              <CallFunc fromlineno="275" tolineno="275" lineno="275" func="Getattr(append)">
                <Getattr fromlineno="275" tolineno="275" lineno="275" attrname="append" expr="deps_left">
                  <Name fromlineno="275" tolineno="275" lineno="275" name="deps_left"/>
                </Getattr>
                <CallFunc fromlineno="275" tolineno="275" lineno="275" func="Name(len)">
                  <Name fromlineno="275" tolineno="275" lineno="275" name="len"/>
                  <Subscript fromlineno="275" tolineno="275" lineno="275">
                    <Getattr fromlineno="275" tolineno="275" lineno="275" attrname="runq_revdeps" expr="self">
                      <Name fromlineno="275" tolineno="275" lineno="275" name="self"/>
                    </Getattr>
                    <Index fromlineno="275" tolineno="275" lineno="None">
                      <Name fromlineno="275" tolineno="275" lineno="275" name="listid"/>
                    </Index>
                  </Subscript>
                </CallFunc>
              </CallFunc>
            </Discard>
          </For>
          <For fromlineno="277" tolineno="279" lineno="277">
            <AssName fromlineno="277" tolineno="277" lineno="277" name="listid"/>
            <Name fromlineno="277" tolineno="277" lineno="277" name="endpoints"/>
            <Assign fromlineno="278" tolineno="278" lineno="278" targets="[&lt;Subscript() l.278 [bb.runqueue] at Ox95d9b4c&gt;]" value="1">
              <Subscript fromlineno="278" tolineno="278" lineno="278">
                <Name fromlineno="278" tolineno="278" lineno="278" name="weight"/>
                <Index fromlineno="278" tolineno="278" lineno="None">
                  <Name fromlineno="278" tolineno="278" lineno="278" name="listid"/>
                </Index>
              </Subscript>
              <Const fromlineno="278" tolineno="278" lineno="278" type="int">1</Const>
            </Assign>
            <Assign fromlineno="279" tolineno="279" lineno="279" targets="[&lt;Subscript() l.279 [bb.runqueue] at Ox95d9c2c&gt;]" value="True">
              <Subscript fromlineno="279" tolineno="279" lineno="279">
                <Name fromlineno="279" tolineno="279" lineno="279" name="task_done"/>
                <Index fromlineno="279" tolineno="279" lineno="None">
                  <Name fromlineno="279" tolineno="279" lineno="279" name="listid"/>
                </Index>
              </Subscript>
              <Const fromlineno="279" tolineno="279" lineno="279" type="bool">True</Const>
            </Assign>
          </For>
          <While fromlineno="281" tolineno="292" lineno="281">
            <Const fromlineno="281" tolineno="281" lineno="281" type="int">1</Const>
            <Assign fromlineno="282" tolineno="282" lineno="282" targets="[&lt;AssName(next_points) l.282 [bb.runqueue] at Ox95d9d8c&gt;]" value="[]">
              <AssName fromlineno="282" tolineno="282" lineno="282" name="next_points"/>
              <List fromlineno="282" tolineno="282" lineno="282"/>
            </Assign>
            <For fromlineno="283" tolineno="289" lineno="283">
              <AssName fromlineno="283" tolineno="283" lineno="283" name="listid"/>
              <Name fromlineno="283" tolineno="283" lineno="283" name="endpoints"/>
              <For fromlineno="284" tolineno="289" lineno="284">
                <AssName fromlineno="284" tolineno="284" lineno="284" name="revdep"/>
                <Subscript fromlineno="284" tolineno="284" lineno="284">
                  <Getattr fromlineno="284" tolineno="284" lineno="284" attrname="runq_depends" expr="self">
                    <Name fromlineno="284" tolineno="284" lineno="284" name="self"/>
                  </Getattr>
                  <Index fromlineno="284" tolineno="284" lineno="None">
                    <Name fromlineno="284" tolineno="284" lineno="284" name="listid"/>
                  </Index>
                </Subscript>
                <Assign fromlineno="285" tolineno="285" lineno="285" targets="[&lt;Subscript() l.285 [bb.runqueue] at Ox95dd04c&gt;]" value="(weight[revdep]) + (weight[listid])">
                  <Subscript fromlineno="285" tolineno="285" lineno="285">
                    <Name fromlineno="285" tolineno="285" lineno="285" name="weight"/>
                    <Index fromlineno="285" tolineno="285" lineno="None">
                      <Name fromlineno="285" tolineno="285" lineno="285" name="revdep"/>
                    </Index>
                  </Subscript>
                  <BinOp fromlineno="285" tolineno="285" lineno="285" op="+" left="weight[revdep]" right="weight[listid]">
                    <Subscript fromlineno="285" tolineno="285" lineno="285">
                      <Name fromlineno="285" tolineno="285" lineno="285" name="weight"/>
                      <Index fromlineno="285" tolineno="285" lineno="None">
                        <Name fromlineno="285" tolineno="285" lineno="285" name="revdep"/>
                      </Index>
                    </Subscript>
                    <Subscript fromlineno="285" tolineno="285" lineno="285">
                      <Name fromlineno="285" tolineno="285" lineno="285" name="weight"/>
                      <Index fromlineno="285" tolineno="285" lineno="None">
                        <Name fromlineno="285" tolineno="285" lineno="285" name="listid"/>
                      </Index>
                    </Subscript>
                  </BinOp>
                </Assign>
                <Assign fromlineno="286" tolineno="286" lineno="286" targets="[&lt;Subscript() l.286 [bb.runqueue] at Ox95dd22c&gt;]" value="(deps_left[revdep]) - (1)">
                  <Subscript fromlineno="286" tolineno="286" lineno="286">
                    <Name fromlineno="286" tolineno="286" lineno="286" name="deps_left"/>
                    <Index fromlineno="286" tolineno="286" lineno="None">
                      <Name fromlineno="286" tolineno="286" lineno="286" name="revdep"/>
                    </Index>
                  </Subscript>
                  <BinOp fromlineno="286" tolineno="286" lineno="286" op="-" left="deps_left[revdep]" right="1">
                    <Subscript fromlineno="286" tolineno="286" lineno="286">
                      <Name fromlineno="286" tolineno="286" lineno="286" name="deps_left"/>
                      <Index fromlineno="286" tolineno="286" lineno="None">
                        <Name fromlineno="286" tolineno="286" lineno="286" name="revdep"/>
                      </Index>
                    </Subscript>
                    <Const fromlineno="286" tolineno="286" lineno="286" type="int">1</Const>
                  </BinOp>
                </Assign>
                <If fromlineno="287" tolineno="289" lineno="287">
                  <Compare fromlineno="287" tolineno="287" lineno="287" op="('==', &lt;Const(int) l.287 [bb.runqueue] at Ox95dd46c&gt;)">
                    <Subscript fromlineno="287" tolineno="287" lineno="287">
                      <Name fromlineno="287" tolineno="287" lineno="287" name="deps_left"/>
                      <Index fromlineno="287" tolineno="287" lineno="None">
                        <Name fromlineno="287" tolineno="287" lineno="287" name="revdep"/>
                      </Index>
                    </Subscript>
                    <Const fromlineno="287" tolineno="287" lineno="287" type="int">0</Const>
                  </Compare>
                  <Discard fromlineno="288" tolineno="288" lineno="288">
                    <CallFunc fromlineno="288" tolineno="288" lineno="288" func="Getattr(append)">
                      <Getattr fromlineno="288" tolineno="288" lineno="288" attrname="append" expr="next_points">
                        <Name fromlineno="288" tolineno="288" lineno="288" name="next_points"/>
                      </Getattr>
                      <Name fromlineno="288" tolineno="288" lineno="288" name="revdep"/>
                    </CallFunc>
                  </Discard>
                  <Assign fromlineno="289" tolineno="289" lineno="289" targets="[&lt;Subscript() l.289 [bb.runqueue] at Ox95dd5ac&gt;]" value="True">
                    <Subscript fromlineno="289" tolineno="289" lineno="289">
                      <Name fromlineno="289" tolineno="289" lineno="289" name="task_done"/>
                      <Index fromlineno="289" tolineno="289" lineno="None">
                        <Name fromlineno="289" tolineno="289" lineno="289" name="revdep"/>
                      </Index>
                    </Subscript>
                    <Const fromlineno="289" tolineno="289" lineno="289" type="bool">True</Const>
                  </Assign>
                </If>
              </For>
            </For>
            <Assign fromlineno="290" tolineno="290" lineno="290" targets="[&lt;AssName(endpoints) l.290 [bb.runqueue] at Ox95dd68c&gt;]" value="next_points">
              <AssName fromlineno="290" tolineno="290" lineno="290" name="endpoints"/>
              <Name fromlineno="290" tolineno="290" lineno="290" name="next_points"/>
            </Assign>
            <If fromlineno="291" tolineno="292" lineno="291">
              <Compare fromlineno="291" tolineno="291" lineno="291" op="('==', &lt;Const(int) l.291 [bb.runqueue] at Ox95dd7cc&gt;)">
                <CallFunc fromlineno="291" tolineno="291" lineno="291" func="Name(len)">
                  <Name fromlineno="291" tolineno="291" lineno="291" name="len"/>
                  <Name fromlineno="291" tolineno="291" lineno="291" name="next_points"/>
                </CallFunc>
                <Const fromlineno="291" tolineno="291" lineno="291" type="int">0</Const>
              </Compare>
              <Break fromlineno="292" tolineno="292" lineno="292"/>
            </If>
          </While>
          <Assign fromlineno="295" tolineno="295" lineno="295" targets="[&lt;AssName(problem_tasks) l.295 [bb.runqueue] at Ox95dd88c&gt;]" value="[]">
            <AssName fromlineno="295" tolineno="295" lineno="295" name="problem_tasks"/>
            <List fromlineno="295" tolineno="295" lineno="295"/>
          </Assign>
          <For fromlineno="296" tolineno="300" lineno="296">
            <AssName fromlineno="296" tolineno="296" lineno="296" name="task"/>
            <CallFunc fromlineno="296" tolineno="296" lineno="296" func="Name(range)">
              <Name fromlineno="296" tolineno="296" lineno="296" name="range"/>
              <Name fromlineno="296" tolineno="296" lineno="296" name="numTasks"/>
            </CallFunc>
            <If fromlineno="297" tolineno="300" lineno="297">
              <BoolOp fromlineno="297" tolineno="297" lineno="297" op="or" values="task_done[task] is False,deps_left[task] != 0,">
                <Compare fromlineno="297" tolineno="297" lineno="297" op="('is', &lt;Const(bool) l.297 [bb.runqueue] at Ox95ddb8c&gt;)">
                  <Subscript fromlineno="297" tolineno="297" lineno="297">
                    <Name fromlineno="297" tolineno="297" lineno="297" name="task_done"/>
                    <Index fromlineno="297" tolineno="297" lineno="None">
                      <Name fromlineno="297" tolineno="297" lineno="297" name="task"/>
                    </Index>
                  </Subscript>
                  <Const fromlineno="297" tolineno="297" lineno="297" type="bool">False</Const>
                </Compare>
                <Compare fromlineno="297" tolineno="297" lineno="297" op="('!=', &lt;Const(int) l.297 [bb.runqueue] at Ox95ddc8c&gt;)">
                  <Subscript fromlineno="297" tolineno="297" lineno="297">
                    <Name fromlineno="297" tolineno="297" lineno="297" name="deps_left"/>
                    <Index fromlineno="297" tolineno="297" lineno="None">
                      <Name fromlineno="297" tolineno="297" lineno="297" name="task"/>
                    </Index>
                  </Subscript>
                  <Const fromlineno="297" tolineno="297" lineno="297" type="int">0</Const>
                </Compare>
              </BoolOp>
              <Discard fromlineno="298" tolineno="298" lineno="298">
                <CallFunc fromlineno="298" tolineno="298" lineno="298" func="Getattr(append)">
                  <Getattr fromlineno="298" tolineno="298" lineno="298" attrname="append" expr="problem_tasks">
                    <Name fromlineno="298" tolineno="298" lineno="298" name="problem_tasks"/>
                  </Getattr>
                  <Name fromlineno="298" tolineno="298" lineno="298" name="task"/>
                </CallFunc>
              </Discard>
              <Discard fromlineno="299" tolineno="299" lineno="299">
                <CallFunc fromlineno="299" tolineno="299" lineno="299" func="Getattr(debug)">
                  <Getattr fromlineno="299" tolineno="299" lineno="299" attrname="debug" expr="bb.msg">
                    <Getattr fromlineno="299" tolineno="299" lineno="299" attrname="msg" expr="bb">
                      <Name fromlineno="299" tolineno="299" lineno="299" name="bb"/>
                    </Getattr>
                  </Getattr>
                  <Const fromlineno="299" tolineno="299" lineno="299" type="int">2</Const>
                  <Getattr fromlineno="299" tolineno="299" lineno="299" attrname="RunQueue" expr="bb.msg.domain">
                    <Getattr fromlineno="299" tolineno="299" lineno="299" attrname="domain" expr="bb.msg">
                      <Getattr fromlineno="299" tolineno="299" lineno="299" attrname="msg" expr="bb">
                        <Name fromlineno="299" tolineno="299" lineno="299" name="bb"/>
                      </Getattr>
                    </Getattr>
                  </Getattr>
                  <BinOp fromlineno="299" tolineno="299" lineno="299" op="%" left="'Task %s (%s) is not buildable\n'" right="(task, self.get_user_idstring(task))">
                    <Const fromlineno="299" tolineno="299" lineno="299" type="str">'Task %s (%s) is not buildable\n'</Const>
                    <Tuple fromlineno="299" tolineno="299" lineno="299">
                      <Name fromlineno="299" tolineno="299" lineno="299" name="task"/>
                      <CallFunc fromlineno="299" tolineno="299" lineno="299" func="Getattr(get_user_idstring)">
                        <Getattr fromlineno="299" tolineno="299" lineno="299" attrname="get_user_idstring" expr="self">
                          <Name fromlineno="299" tolineno="299" lineno="299" name="self"/>
                        </Getattr>
                        <Name fromlineno="299" tolineno="299" lineno="299" name="task"/>
                      </CallFunc>
                    </Tuple>
                  </BinOp>
                </CallFunc>
              </Discard>
              <Discard fromlineno="300" tolineno="300" lineno="300">
                <CallFunc fromlineno="300" tolineno="300" lineno="300" func="Getattr(debug)">
                  <Getattr fromlineno="300" tolineno="300" lineno="300" attrname="debug" expr="bb.msg">
                    <Getattr fromlineno="300" tolineno="300" lineno="300" attrname="msg" expr="bb">
                      <Name fromlineno="300" tolineno="300" lineno="300" name="bb"/>
                    </Getattr>
                  </Getattr>
                  <Const fromlineno="300" tolineno="300" lineno="300" type="int">2</Const>
                  <Getattr fromlineno="300" tolineno="300" lineno="300" attrname="RunQueue" expr="bb.msg.domain">
                    <Getattr fromlineno="300" tolineno="300" lineno="300" attrname="domain" expr="bb.msg">
                      <Getattr fromlineno="300" tolineno="300" lineno="300" attrname="msg" expr="bb">
                        <Name fromlineno="300" tolineno="300" lineno="300" name="bb"/>
                      </Getattr>
                    </Getattr>
                  </Getattr>
                  <BinOp fromlineno="300" tolineno="300" lineno="300" op="%" left="'(Complete marker was %s and the remaining dependency count was %s)\n\n'" right="(task_done[task], deps_left[task])">
                    <Const fromlineno="300" tolineno="300" lineno="300" type="str">'(Complete marker was %s and the remaining dependency count was %s)\n\n'</Const>
                    <Tuple fromlineno="300" tolineno="300" lineno="300">
                      <Subscript fromlineno="300" tolineno="300" lineno="300">
                        <Name fromlineno="300" tolineno="300" lineno="300" name="task_done"/>
                        <Index fromlineno="300" tolineno="300" lineno="None">
                          <Name fromlineno="300" tolineno="300" lineno="300" name="task"/>
                        </Index>
                      </Subscript>
                      <Subscript fromlineno="300" tolineno="300" lineno="300">
                        <Name fromlineno="300" tolineno="300" lineno="300" name="deps_left"/>
                        <Index fromlineno="300" tolineno="300" lineno="None">
                          <Name fromlineno="300" tolineno="300" lineno="300" name="task"/>
                        </Index>
                      </Subscript>
                    </Tuple>
                  </BinOp>
                </CallFunc>
              </Discard>
            </If>
          </For>
          <If fromlineno="302" tolineno="313" lineno="302">
            <Name fromlineno="302" tolineno="302" lineno="302" name="problem_tasks"/>
            <Assign fromlineno="303" tolineno="303" lineno="303" targets="[&lt;AssName(message) l.303 [bb.runqueue] at Ox95e23ec&gt;]" value="'Unbuildable tasks were found.\n'">
              <AssName fromlineno="303" tolineno="303" lineno="303" name="message"/>
              <Const fromlineno="303" tolineno="303" lineno="303" type="str">'Unbuildable tasks were found.\n'</Const>
            </Assign>
            <Assign fromlineno="304" tolineno="304" lineno="304" targets="[&lt;AssName(message) l.304 [bb.runqueue] at Ox95e248c&gt;]" value="(message) + ('These are usually caused by circular dependencies and any circular dependency chains found will be printed below. Increase the debug level to see a list of unbuildable tasks.\n\n')">
              <AssName fromlineno="304" tolineno="304" lineno="304" name="message"/>
              <BinOp fromlineno="304" tolineno="304" lineno="304" op="+" left="message" right="'These are usually caused by circular dependencies and any circular dependency chains found will be printed below. Increase the debug level to see a list of unbuildable tasks.\n\n'">
                <Name fromlineno="304" tolineno="304" lineno="304" name="message"/>
                <Const fromlineno="304" tolineno="304" lineno="304" type="str">'These are usually caused by circular dependencies and any circular dependency chains found will be printed below. Increase the debug level to see a list of unbuildable tasks.\n\n'</Const>
              </BinOp>
            </Assign>
            <Assign fromlineno="305" tolineno="305" lineno="305" targets="[&lt;AssName(message) l.305 [bb.runqueue] at Ox95e254c&gt;]" value="(message) + ('Identifying dependency loops (this may take a short while)...\n')">
              <AssName fromlineno="305" tolineno="305" lineno="305" name="message"/>
              <BinOp fromlineno="305" tolineno="305" lineno="305" op="+" left="message" right="'Identifying dependency loops (this may take a short while)...\n'">
                <Name fromlineno="305" tolineno="305" lineno="305" name="message"/>
                <Const fromlineno="305" tolineno="305" lineno="305" type="str">'Identifying dependency loops (this may take a short while)...\n'</Const>
              </BinOp>
            </Assign>
            <Discard fromlineno="306" tolineno="306" lineno="306">
              <CallFunc fromlineno="306" tolineno="306" lineno="306" func="Getattr(error)">
                <Getattr fromlineno="306" tolineno="306" lineno="306" attrname="error" expr="bb.msg">
                  <Getattr fromlineno="306" tolineno="306" lineno="306" attrname="msg" expr="bb">
                    <Name fromlineno="306" tolineno="306" lineno="306" name="bb"/>
                  </Getattr>
                </Getattr>
                <Getattr fromlineno="306" tolineno="306" lineno="306" attrname="RunQueue" expr="bb.msg.domain">
                  <Getattr fromlineno="306" tolineno="306" lineno="306" attrname="domain" expr="bb.msg">
                    <Getattr fromlineno="306" tolineno="306" lineno="306" attrname="msg" expr="bb">
                      <Name fromlineno="306" tolineno="306" lineno="306" name="bb"/>
                    </Getattr>
                  </Getattr>
                </Getattr>
                <Name fromlineno="306" tolineno="306" lineno="306" name="message"/>
              </CallFunc>
            </Discard>
            <Assign fromlineno="308" tolineno="308" lineno="308" targets="[&lt;AssName(msgs) l.308 [bb.runqueue] at Ox95e276c&gt;]" value="self.circular_depchains_handler(problem_tasks)">
              <AssName fromlineno="308" tolineno="308" lineno="308" name="msgs"/>
              <CallFunc fromlineno="308" tolineno="308" lineno="308" func="Getattr(circular_depchains_handler)">
                <Getattr fromlineno="308" tolineno="308" lineno="308" attrname="circular_depchains_handler" expr="self">
                  <Name fromlineno="308" tolineno="308" lineno="308" name="self"/>
                </Getattr>
                <Name fromlineno="308" tolineno="308" lineno="308" name="problem_tasks"/>
              </CallFunc>
            </Assign>
            <Assign fromlineno="310" tolineno="310" lineno="310" targets="[&lt;AssName(message) l.310 [bb.runqueue] at Ox95e288c&gt;]" value="'\n'">
              <AssName fromlineno="310" tolineno="310" lineno="310" name="message"/>
              <Const fromlineno="310" tolineno="310" lineno="310" type="str">'\n'</Const>
            </Assign>
            <For fromlineno="311" tolineno="312" lineno="311">
              <AssName fromlineno="311" tolineno="311" lineno="311" name="msg"/>
              <Name fromlineno="311" tolineno="311" lineno="311" name="msgs"/>
              <Assign fromlineno="312" tolineno="312" lineno="312" targets="[&lt;AssName(message) l.312 [bb.runqueue] at Ox95e29cc&gt;]" value="(message) + (msg)">
                <AssName fromlineno="312" tolineno="312" lineno="312" name="message"/>
                <BinOp fromlineno="312" tolineno="312" lineno="312" op="+" left="message" right="msg">
                  <Name fromlineno="312" tolineno="312" lineno="312" name="message"/>
                  <Name fromlineno="312" tolineno="312" lineno="312" name="msg"/>
                </BinOp>
              </Assign>
            </For>
            <Discard fromlineno="313" tolineno="313" lineno="313">
              <CallFunc fromlineno="313" tolineno="313" lineno="313" func="Getattr(fatal)">
                <Getattr fromlineno="313" tolineno="313" lineno="313" attrname="fatal" expr="bb.msg">
                  <Getattr fromlineno="313" tolineno="313" lineno="313" attrname="msg" expr="bb">
                    <Name fromlineno="313" tolineno="313" lineno="313" name="bb"/>
                  </Getattr>
                </Getattr>
                <Getattr fromlineno="313" tolineno="313" lineno="313" attrname="RunQueue" expr="bb.msg.domain">
                  <Getattr fromlineno="313" tolineno="313" lineno="313" attrname="domain" expr="bb.msg">
                    <Getattr fromlineno="313" tolineno="313" lineno="313" attrname="msg" expr="bb">
                      <Name fromlineno="313" tolineno="313" lineno="313" name="bb"/>
                    </Getattr>
                  </Getattr>
                </Getattr>
                <Name fromlineno="313" tolineno="313" lineno="313" name="message"/>
              </CallFunc>
            </Discard>
          </If>
          <Return fromlineno="315" tolineno="315" lineno="315">
            <Name fromlineno="315" tolineno="315" lineno="315" name="weight"/>
          </Return>
        </Function>
        <Function fromlineno="317" tolineno="689" lineno="317">
          <Arguments fromlineno="317" tolineno="317" lineno="None" format_args="self">
            <AssName fromlineno="317" tolineno="317" lineno="317" name="self"/>
          </Arguments>
          <Assign fromlineno="323" tolineno="323" lineno="323" targets="[&lt;AssName(depends) l.323 [bb.runqueue] at Ox95e2cec&gt;]" value="[]">
            <AssName fromlineno="323" tolineno="323" lineno="323" name="depends"/>
            <List fromlineno="323" tolineno="323" lineno="323"/>
          </Assign>
          <Assign fromlineno="324" tolineno="324" lineno="324" targets="[&lt;AssName(runq_build) l.324 [bb.runqueue] at Ox95e2dac&gt;]" value="[]">
            <AssName fromlineno="324" tolineno="324" lineno="324" name="runq_build"/>
            <List fromlineno="324" tolineno="324" lineno="324"/>
          </Assign>
          <Assign fromlineno="325" tolineno="325" lineno="325" targets="[&lt;AssName(recursive_tdepends) l.325 [bb.runqueue] at Ox95e2e6c&gt;]" value="{}">
            <AssName fromlineno="325" tolineno="325" lineno="325" name="recursive_tdepends"/>
            <Dict fromlineno="325" tolineno="325" lineno="325"/>
          </Assign>
          <Assign fromlineno="327" tolineno="327" lineno="327" targets="[&lt;AssName(taskData) l.327 [bb.runqueue] at Ox95e2f2c&gt;]" value="self.taskData">
            <AssName fromlineno="327" tolineno="327" lineno="327" name="taskData"/>
            <Getattr fromlineno="327" tolineno="327" lineno="327" attrname="taskData" expr="self">
              <Name fromlineno="327" tolineno="327" lineno="327" name="self"/>
            </Getattr>
          </Assign>
          <If fromlineno="329" tolineno="331" lineno="329">
            <Compare fromlineno="329" tolineno="329" lineno="329" op="('==', &lt;Const(int) l.329 [bb.runqueue] at Ox95e60ec&gt;)">
              <CallFunc fromlineno="329" tolineno="329" lineno="329" func="Name(len)">
                <Name fromlineno="329" tolineno="329" lineno="329" name="len"/>
                <Getattr fromlineno="329" tolineno="329" lineno="329" attrname="tasks_name" expr="taskData">
                  <Name fromlineno="329" tolineno="329" lineno="329" name="taskData"/>
                </Getattr>
              </CallFunc>
              <Const fromlineno="329" tolineno="329" lineno="329" type="int">0</Const>
            </Compare>
            <Return fromlineno="331" tolineno="331" lineno="331"/>
          </If>
          <Discard fromlineno="333" tolineno="333" lineno="333">
            <CallFunc fromlineno="333" tolineno="333" lineno="333" func="Getattr(note)">
              <Getattr fromlineno="333" tolineno="333" lineno="333" attrname="note" expr="bb.msg">
                <Getattr fromlineno="333" tolineno="333" lineno="333" attrname="msg" expr="bb">
                  <Name fromlineno="333" tolineno="333" lineno="333" name="bb"/>
                </Getattr>
              </Getattr>
              <Const fromlineno="333" tolineno="333" lineno="333" type="int">1</Const>
              <Getattr fromlineno="333" tolineno="333" lineno="333" attrname="RunQueue" expr="bb.msg.domain">
                <Getattr fromlineno="333" tolineno="333" lineno="333" attrname="domain" expr="bb.msg">
                  <Getattr fromlineno="333" tolineno="333" lineno="333" attrname="msg" expr="bb">
                    <Name fromlineno="333" tolineno="333" lineno="333" name="bb"/>
                  </Getattr>
                </Getattr>
              </Getattr>
              <Const fromlineno="333" tolineno="333" lineno="333" type="str">'Preparing runqueue'</Const>
            </CallFunc>
          </Discard>
          <For fromlineno="346" tolineno="529" lineno="346">
            <AssName fromlineno="346" tolineno="346" lineno="346" name="task"/>
            <CallFunc fromlineno="346" tolineno="346" lineno="346" func="Name(range)">
              <Name fromlineno="346" tolineno="346" lineno="346" name="range"/>
              <CallFunc fromlineno="346" tolineno="346" lineno="346" func="Name(len)">
                <Name fromlineno="346" tolineno="346" lineno="346" name="len"/>
                <Getattr fromlineno="346" tolineno="346" lineno="346" attrname="tasks_name" expr="taskData">
                  <Name fromlineno="346" tolineno="346" lineno="346" name="taskData"/>
                </Getattr>
              </CallFunc>
            </CallFunc>
            <Assign fromlineno="347" tolineno="347" lineno="347" targets="[&lt;AssName(fnid) l.347 [bb.runqueue] at Ox95e64cc&gt;]" value="taskData.tasks_fnid[task]">
              <AssName fromlineno="347" tolineno="347" lineno="347" name="fnid"/>
              <Subscript fromlineno="347" tolineno="347" lineno="347">
                <Getattr fromlineno="347" tolineno="347" lineno="347" attrname="tasks_fnid" expr="taskData">
                  <Name fromlineno="347" tolineno="347" lineno="347" name="taskData"/>
                </Getattr>
                <Index fromlineno="347" tolineno="347" lineno="None">
                  <Name fromlineno="347" tolineno="347" lineno="347" name="task"/>
                </Index>
              </Subscript>
            </Assign>
            <Assign fromlineno="348" tolineno="348" lineno="348" targets="[&lt;AssName(fn) l.348 [bb.runqueue] at Ox95e65ec&gt;]" value="taskData.fn_index[fnid]">
              <AssName fromlineno="348" tolineno="348" lineno="348" name="fn"/>
              <Subscript fromlineno="348" tolineno="348" lineno="348">
                <Getattr fromlineno="348" tolineno="348" lineno="348" attrname="fn_index" expr="taskData">
                  <Name fromlineno="348" tolineno="348" lineno="348" name="taskData"/>
                </Getattr>
                <Index fromlineno="348" tolineno="348" lineno="None">
                  <Name fromlineno="348" tolineno="348" lineno="348" name="fnid"/>
                </Index>
              </Subscript>
            </Assign>
            <Assign fromlineno="349" tolineno="349" lineno="349" targets="[&lt;AssName(task_deps) l.349 [bb.runqueue] at Ox95e670c&gt;]" value="self.dataCache.task_deps[fn]">
              <AssName fromlineno="349" tolineno="349" lineno="349" name="task_deps"/>
              <Subscript fromlineno="349" tolineno="349" lineno="349">
                <Getattr fromlineno="349" tolineno="349" lineno="349" attrname="task_deps" expr="self.dataCache">
                  <Getattr fromlineno="349" tolineno="349" lineno="349" attrname="dataCache" expr="self">
                    <Name fromlineno="349" tolineno="349" lineno="349" name="self"/>
                  </Getattr>
                </Getattr>
                <Index fromlineno="349" tolineno="349" lineno="None">
                  <Name fromlineno="349" tolineno="349" lineno="349" name="fn"/>
                </Index>
              </Subscript>
            </Assign>
            <If fromlineno="351" tolineno="521" lineno="351">
              <Compare fromlineno="351" tolineno="351" lineno="351" op="('not in', &lt;Getattr(failed_fnids) l.351 [bb.runqueue] at Ox95e68ac&gt;)">
                <Name fromlineno="351" tolineno="351" lineno="351" name="fnid"/>
                <Getattr fromlineno="351" tolineno="351" lineno="351" attrname="failed_fnids" expr="taskData">
                  <Name fromlineno="351" tolineno="351" lineno="351" name="taskData"/>
                </Getattr>
              </Compare>
              <Assign fromlineno="356" tolineno="356" lineno="356" targets="[&lt;AssName(depends) l.356 [bb.runqueue] at Ox95e696c&gt;]" value="taskData.tasks_tdepends[task]">
                <AssName fromlineno="356" tolineno="356" lineno="356" name="depends"/>
                <Subscript fromlineno="356" tolineno="356" lineno="356">
                  <Getattr fromlineno="356" tolineno="356" lineno="356" attrname="tasks_tdepends" expr="taskData">
                    <Name fromlineno="356" tolineno="356" lineno="356" name="taskData"/>
                  </Getattr>
                  <Index fromlineno="356" tolineno="356" lineno="None">
                    <Name fromlineno="356" tolineno="356" lineno="356" name="task"/>
                  </Index>
                </Subscript>
              </Assign>
              <If fromlineno="362" tolineno="371" lineno="362">
                <BoolOp fromlineno="362" tolineno="362" lineno="362" op="and" values="'deptask' in task_deps,taskData.tasks_name[task] in task_deps['deptask'],">
                  <Compare fromlineno="362" tolineno="362" lineno="362" op="('in', &lt;Name(task_deps) l.362 [bb.runqueue] at Ox95e6b4c&gt;)">
                    <Const fromlineno="362" tolineno="362" lineno="362" type="str">'deptask'</Const>
                    <Name fromlineno="362" tolineno="362" lineno="362" name="task_deps"/>
                  </Compare>
                  <Compare fromlineno="362" tolineno="362" lineno="362" op="('in', &lt;Subscript() l.362 [bb.runqueue] at Ox95e6c6c&gt;)">
                    <Subscript fromlineno="362" tolineno="362" lineno="362">
                      <Getattr fromlineno="362" tolineno="362" lineno="362" attrname="tasks_name" expr="taskData">
                        <Name fromlineno="362" tolineno="362" lineno="362" name="taskData"/>
                      </Getattr>
                      <Index fromlineno="362" tolineno="362" lineno="None">
                        <Name fromlineno="362" tolineno="362" lineno="362" name="task"/>
                      </Index>
                    </Subscript>
                    <Subscript fromlineno="362" tolineno="362" lineno="362">
                      <Name fromlineno="362" tolineno="362" lineno="362" name="task_deps"/>
                      <Index fromlineno="362" tolineno="362" lineno="None">
                        <Const fromlineno="362" tolineno="362" lineno="362" type="str">'deptask'</Const>
                      </Index>
                    </Subscript>
                  </Compare>
                </BoolOp>
                <Assign fromlineno="363" tolineno="363" lineno="363" targets="[&lt;AssName(tasknames) l.363 [bb.runqueue] at Ox95e6d4c&gt;]" value="task_deps['deptask'][taskData.tasks_name[task]].split()">
                  <AssName fromlineno="363" tolineno="363" lineno="363" name="tasknames"/>
                  <CallFunc fromlineno="363" tolineno="363" lineno="363" func="Getattr(split)">
                    <Getattr fromlineno="363" tolineno="363" lineno="363" attrname="split" expr="task_deps['deptask'][taskData.tasks_name[task]]">
                      <Subscript fromlineno="363" tolineno="363" lineno="363">
                        <Subscript fromlineno="363" tolineno="363" lineno="363">
                          <Name fromlineno="363" tolineno="363" lineno="363" name="task_deps"/>
                          <Index fromlineno="363" tolineno="363" lineno="None">
                            <Const fromlineno="363" tolineno="363" lineno="363" type="str">'deptask'</Const>
                          </Index>
                        </Subscript>
                        <Index fromlineno="363" tolineno="363" lineno="None">
                          <Subscript fromlineno="363" tolineno="363" lineno="363">
                            <Getattr fromlineno="363" tolineno="363" lineno="363" attrname="tasks_name" expr="taskData">
                              <Name fromlineno="363" tolineno="363" lineno="363" name="taskData"/>
                            </Getattr>
                            <Index fromlineno="363" tolineno="363" lineno="None">
                              <Name fromlineno="363" tolineno="363" lineno="363" name="task"/>
                            </Index>
                          </Subscript>
                        </Index>
                      </Subscript>
                    </Getattr>
                  </CallFunc>
                </Assign>
                <For fromlineno="364" tolineno="371" lineno="364">
                  <AssName fromlineno="364" tolineno="364" lineno="364" name="depid"/>
                  <Subscript fromlineno="364" tolineno="364" lineno="364">
                    <Getattr fromlineno="364" tolineno="364" lineno="364" attrname="depids" expr="taskData">
                      <Name fromlineno="364" tolineno="364" lineno="364" name="taskData"/>
                    </Getattr>
                    <Index fromlineno="364" tolineno="364" lineno="None">
                      <Name fromlineno="364" tolineno="364" lineno="364" name="fnid"/>
                    </Index>
                  </Subscript>
                  <If fromlineno="366" tolineno="371" lineno="366">
                    <Compare fromlineno="366" tolineno="366" lineno="366" op="('in', &lt;Getattr(build_targets) l.366 [bb.runqueue] at Ox95ea16c&gt;)">
                      <Name fromlineno="366" tolineno="366" lineno="366" name="depid"/>
                      <Getattr fromlineno="366" tolineno="366" lineno="366" attrname="build_targets" expr="taskData">
                        <Name fromlineno="366" tolineno="366" lineno="366" name="taskData"/>
                      </Getattr>
                    </Compare>
                    <Assign fromlineno="367" tolineno="367" lineno="367" targets="[&lt;AssName(depdata) l.367 [bb.runqueue] at Ox95ea22c&gt;]" value="taskData.build_targets[depid][0]">
                      <AssName fromlineno="367" tolineno="367" lineno="367" name="depdata"/>
                      <Subscript fromlineno="367" tolineno="367" lineno="367">
                        <Subscript fromlineno="367" tolineno="367" lineno="367">
                          <Getattr fromlineno="367" tolineno="367" lineno="367" attrname="build_targets" expr="taskData">
                            <Name fromlineno="367" tolineno="367" lineno="367" name="taskData"/>
                          </Getattr>
                          <Index fromlineno="367" tolineno="367" lineno="None">
                            <Name fromlineno="367" tolineno="367" lineno="367" name="depid"/>
                          </Index>
                        </Subscript>
                        <Index fromlineno="367" tolineno="367" lineno="None">
                          <Const fromlineno="367" tolineno="367" lineno="367" type="int">0</Const>
                        </Index>
                      </Subscript>
                    </Assign>
                    <If fromlineno="368" tolineno="371" lineno="368">
                      <Compare fromlineno="368" tolineno="368" lineno="368" op="('is not', &lt;Const(NoneType) l.368 [bb.runqueue] at Ox95ea42c&gt;)">
                        <Name fromlineno="368" tolineno="368" lineno="368" name="depdata"/>
                        <Const fromlineno="368" tolineno="368" lineno="368" type="NoneType">None</Const>
                      </Compare>
                      <Assign fromlineno="369" tolineno="369" lineno="369" targets="[&lt;AssName(dep) l.369 [bb.runqueue] at Ox95ea4cc&gt;]" value="taskData.fn_index[depdata]">
                        <AssName fromlineno="369" tolineno="369" lineno="369" name="dep"/>
                        <Subscript fromlineno="369" tolineno="369" lineno="369">
                          <Getattr fromlineno="369" tolineno="369" lineno="369" attrname="fn_index" expr="taskData">
                            <Name fromlineno="369" tolineno="369" lineno="369" name="taskData"/>
                          </Getattr>
                          <Index fromlineno="369" tolineno="369" lineno="None">
                            <Name fromlineno="369" tolineno="369" lineno="369" name="depdata"/>
                          </Index>
                        </Subscript>
                      </Assign>
                      <For fromlineno="370" tolineno="371" lineno="370">
                        <AssName fromlineno="370" tolineno="370" lineno="370" name="taskname"/>
                        <Name fromlineno="370" tolineno="370" lineno="370" name="tasknames"/>
                        <Discard fromlineno="371" tolineno="371" lineno="371">
                          <CallFunc fromlineno="371" tolineno="371" lineno="371" func="Getattr(append)">
                            <Getattr fromlineno="371" tolineno="371" lineno="371" attrname="append" expr="depends">
                              <Name fromlineno="371" tolineno="371" lineno="371" name="depends"/>
                            </Getattr>
                            <CallFunc fromlineno="371" tolineno="371" lineno="371" func="Getattr(gettask_id)">
                              <Getattr fromlineno="371" tolineno="371" lineno="371" attrname="gettask_id" expr="taskData">
                                <Name fromlineno="371" tolineno="371" lineno="371" name="taskData"/>
                              </Getattr>
                              <Name fromlineno="371" tolineno="371" lineno="371" name="dep"/>
                              <Name fromlineno="371" tolineno="371" lineno="371" name="taskname"/>
                            </CallFunc>
                          </CallFunc>
                        </Discard>
                      </For>
                    </If>
                  </If>
                </For>
              </If>
              <If fromlineno="377" tolineno="384" lineno="377">
                <BoolOp fromlineno="377" tolineno="377" lineno="377" op="and" values="'rdeptask' in task_deps,taskData.tasks_name[task] in task_deps['rdeptask'],">
                  <Compare fromlineno="377" tolineno="377" lineno="377" op="('in', &lt;Name(task_deps) l.377 [bb.runqueue] at Ox95ea88c&gt;)">
                    <Const fromlineno="377" tolineno="377" lineno="377" type="str">'rdeptask'</Const>
                    <Name fromlineno="377" tolineno="377" lineno="377" name="task_deps"/>
                  </Compare>
                  <Compare fromlineno="377" tolineno="377" lineno="377" op="('in', &lt;Subscript() l.377 [bb.runqueue] at Ox95ea9ac&gt;)">
                    <Subscript fromlineno="377" tolineno="377" lineno="377">
                      <Getattr fromlineno="377" tolineno="377" lineno="377" attrname="tasks_name" expr="taskData">
                        <Name fromlineno="377" tolineno="377" lineno="377" name="taskData"/>
                      </Getattr>
                      <Index fromlineno="377" tolineno="377" lineno="None">
                        <Name fromlineno="377" tolineno="377" lineno="377" name="task"/>
                      </Index>
                    </Subscript>
                    <Subscript fromlineno="377" tolineno="377" lineno="377">
                      <Name fromlineno="377" tolineno="377" lineno="377" name="task_deps"/>
                      <Index fromlineno="377" tolineno="377" lineno="None">
                        <Const fromlineno="377" tolineno="377" lineno="377" type="str">'rdeptask'</Const>
                      </Index>
                    </Subscript>
                  </Compare>
                </BoolOp>
                <Assign fromlineno="378" tolineno="378" lineno="378" targets="[&lt;AssName(taskname) l.378 [bb.runqueue] at Ox95eaa8c&gt;]" value="task_deps['rdeptask'][taskData.tasks_name[task]]">
                  <AssName fromlineno="378" tolineno="378" lineno="378" name="taskname"/>
                  <Subscript fromlineno="378" tolineno="378" lineno="378">
                    <Subscript fromlineno="378" tolineno="378" lineno="378">
                      <Name fromlineno="378" tolineno="378" lineno="378" name="task_deps"/>
                      <Index fromlineno="378" tolineno="378" lineno="None">
                        <Const fromlineno="378" tolineno="378" lineno="378" type="str">'rdeptask'</Const>
                      </Index>
                    </Subscript>
                    <Index fromlineno="378" tolineno="378" lineno="None">
                      <Subscript fromlineno="378" tolineno="378" lineno="378">
                        <Getattr fromlineno="378" tolineno="378" lineno="378" attrname="tasks_name" expr="taskData">
                          <Name fromlineno="378" tolineno="378" lineno="378" name="taskData"/>
                        </Getattr>
                        <Index fromlineno="378" tolineno="378" lineno="None">
                          <Name fromlineno="378" tolineno="378" lineno="378" name="task"/>
                        </Index>
                      </Subscript>
                    </Index>
                  </Subscript>
                </Assign>
                <For fromlineno="379" tolineno="384" lineno="379">
                  <AssName fromlineno="379" tolineno="379" lineno="379" name="depid"/>
                  <Subscript fromlineno="379" tolineno="379" lineno="379">
                    <Getattr fromlineno="379" tolineno="379" lineno="379" attrname="rdepids" expr="taskData">
                      <Name fromlineno="379" tolineno="379" lineno="379" name="taskData"/>
                    </Getattr>
                    <Index fromlineno="379" tolineno="379" lineno="None">
                      <Name fromlineno="379" tolineno="379" lineno="379" name="fnid"/>
                    </Index>
                  </Subscript>
                  <If fromlineno="380" tolineno="384" lineno="380">
                    <Compare fromlineno="380" tolineno="380" lineno="380" op="('in', &lt;Getattr(run_targets) l.380 [bb.runqueue] at Ox95eadec&gt;)">
                      <Name fromlineno="380" tolineno="380" lineno="380" name="depid"/>
                      <Getattr fromlineno="380" tolineno="380" lineno="380" attrname="run_targets" expr="taskData">
                        <Name fromlineno="380" tolineno="380" lineno="380" name="taskData"/>
                      </Getattr>
                    </Compare>
                    <Assign fromlineno="381" tolineno="381" lineno="381" targets="[&lt;AssName(depdata) l.381 [bb.runqueue] at Ox95eaeac&gt;]" value="taskData.run_targets[depid][0]">
                      <AssName fromlineno="381" tolineno="381" lineno="381" name="depdata"/>
                      <Subscript fromlineno="381" tolineno="381" lineno="381">
                        <Subscript fromlineno="381" tolineno="381" lineno="381">
                          <Getattr fromlineno="381" tolineno="381" lineno="381" attrname="run_targets" expr="taskData">
                            <Name fromlineno="381" tolineno="381" lineno="381" name="taskData"/>
                          </Getattr>
                          <Index fromlineno="381" tolineno="381" lineno="None">
                            <Name fromlineno="381" tolineno="381" lineno="381" name="depid"/>
                          </Index>
                        </Subscript>
                        <Index fromlineno="381" tolineno="381" lineno="None">
                          <Const fromlineno="381" tolineno="381" lineno="381" type="int">0</Const>
                        </Index>
                      </Subscript>
                    </Assign>
                    <If fromlineno="382" tolineno="384" lineno="382">
                      <Compare fromlineno="382" tolineno="382" lineno="382" op="('is not', &lt;Const(NoneType) l.382 [bb.runqueue] at Ox96690ac&gt;)">
                        <Name fromlineno="382" tolineno="382" lineno="382" name="depdata"/>
                        <Const fromlineno="382" tolineno="382" lineno="382" type="NoneType">None</Const>
                      </Compare>
                      <Assign fromlineno="383" tolineno="383" lineno="383" targets="[&lt;AssName(dep) l.383 [bb.runqueue] at Ox966914c&gt;]" value="taskData.fn_index[depdata]">
                        <AssName fromlineno="383" tolineno="383" lineno="383" name="dep"/>
                        <Subscript fromlineno="383" tolineno="383" lineno="383">
                          <Getattr fromlineno="383" tolineno="383" lineno="383" attrname="fn_index" expr="taskData">
                            <Name fromlineno="383" tolineno="383" lineno="383" name="taskData"/>
                          </Getattr>
                          <Index fromlineno="383" tolineno="383" lineno="None">
                            <Name fromlineno="383" tolineno="383" lineno="383" name="depdata"/>
                          </Index>
                        </Subscript>
                      </Assign>
                      <Discard fromlineno="384" tolineno="384" lineno="384">
                        <CallFunc fromlineno="384" tolineno="384" lineno="384" func="Getattr(append)">
                          <Getattr fromlineno="384" tolineno="384" lineno="384" attrname="append" expr="depends">
                            <Name fromlineno="384" tolineno="384" lineno="384" name="depends"/>
                          </Getattr>
                          <CallFunc fromlineno="384" tolineno="384" lineno="384" func="Getattr(gettask_id)">
                            <Getattr fromlineno="384" tolineno="384" lineno="384" attrname="gettask_id" expr="taskData">
                              <Name fromlineno="384" tolineno="384" lineno="384" name="taskData"/>
                            </Getattr>
                            <Name fromlineno="384" tolineno="384" lineno="384" name="dep"/>
                            <Name fromlineno="384" tolineno="384" lineno="384" name="taskname"/>
                          </CallFunc>
                        </CallFunc>
                      </Discard>
                    </If>
                  </If>
                </For>
              </If>
              <Assign fromlineno="390" tolineno="390" lineno="390" targets="[&lt;AssName(idepends) l.390 [bb.runqueue] at Ox966932c&gt;]" value="taskData.tasks_idepends[task]">
                <AssName fromlineno="390" tolineno="390" lineno="390" name="idepends"/>
                <Subscript fromlineno="390" tolineno="390" lineno="390">
                  <Getattr fromlineno="390" tolineno="390" lineno="390" attrname="tasks_idepends" expr="taskData">
                    <Name fromlineno="390" tolineno="390" lineno="390" name="taskData"/>
                  </Getattr>
                  <Index fromlineno="390" tolineno="390" lineno="None">
                    <Name fromlineno="390" tolineno="390" lineno="390" name="task"/>
                  </Index>
                </Subscript>
              </Assign>
              <For fromlineno="391" tolineno="397" lineno="391">
                <Tuple fromlineno="391" tolineno="391" lineno="391">
                  <AssName fromlineno="391" tolineno="391" lineno="391" name="depid"/>
                  <AssName fromlineno="391" tolineno="391" lineno="391" name="idependtask"/>
                </Tuple>
                <Name fromlineno="391" tolineno="391" lineno="391" name="idepends"/>
                <If fromlineno="392" tolineno="397" lineno="392">
                  <Compare fromlineno="392" tolineno="392" lineno="392" op="('in', &lt;Getattr(build_targets) l.392 [bb.runqueue] at Ox966960c&gt;)">
                    <Name fromlineno="392" tolineno="392" lineno="392" name="depid"/>
                    <Getattr fromlineno="392" tolineno="392" lineno="392" attrname="build_targets" expr="taskData">
                      <Name fromlineno="392" tolineno="392" lineno="392" name="taskData"/>
                    </Getattr>
                  </Compare>
                  <Assign fromlineno="394" tolineno="394" lineno="394" targets="[&lt;AssName(depdata) l.394 [bb.runqueue] at Ox96696cc&gt;]" value="taskData.build_targets[depid][0]">
                    <AssName fromlineno="394" tolineno="394" lineno="394" name="depdata"/>
                    <Subscript fromlineno="394" tolineno="394" lineno="394">
                      <Subscript fromlineno="394" tolineno="394" lineno="394">
                        <Getattr fromlineno="394" tolineno="394" lineno="394" attrname="build_targets" expr="taskData">
                          <Name fromlineno="394" tolineno="394" lineno="394" name="taskData"/>
                        </Getattr>
                        <Index fromlineno="394" tolineno="394" lineno="None">
                          <Name fromlineno="394" tolineno="394" lineno="394" name="depid"/>
                        </Index>
                      </Subscript>
                      <Index fromlineno="394" tolineno="394" lineno="None">
                        <Const fromlineno="394" tolineno="394" lineno="394" type="int">0</Const>
                      </Index>
                    </Subscript>
                  </Assign>
                  <If fromlineno="395" tolineno="397" lineno="395">
                    <Compare fromlineno="395" tolineno="395" lineno="395" op="('is not', &lt;Const(NoneType) l.395 [bb.runqueue] at Ox96698ac&gt;)">
                      <Name fromlineno="395" tolineno="395" lineno="395" name="depdata"/>
                      <Const fromlineno="395" tolineno="395" lineno="395" type="NoneType">None</Const>
                    </Compare>
                    <Assign fromlineno="396" tolineno="396" lineno="396" targets="[&lt;AssName(dep) l.396 [bb.runqueue] at Ox966994c&gt;]" value="taskData.fn_index[depdata]">
                      <AssName fromlineno="396" tolineno="396" lineno="396" name="dep"/>
                      <Subscript fromlineno="396" tolineno="396" lineno="396">
                        <Getattr fromlineno="396" tolineno="396" lineno="396" attrname="fn_index" expr="taskData">
                          <Name fromlineno="396" tolineno="396" lineno="396" name="taskData"/>
                        </Getattr>
                        <Index fromlineno="396" tolineno="396" lineno="None">
                          <Name fromlineno="396" tolineno="396" lineno="396" name="depdata"/>
                        </Index>
                      </Subscript>
                    </Assign>
                    <Discard fromlineno="397" tolineno="397" lineno="397">
                      <CallFunc fromlineno="397" tolineno="397" lineno="397" func="Getattr(append)">
                        <Getattr fromlineno="397" tolineno="397" lineno="397" attrname="append" expr="depends">
                          <Name fromlineno="397" tolineno="397" lineno="397" name="depends"/>
                        </Getattr>
                        <CallFunc fromlineno="397" tolineno="397" lineno="397" func="Getattr(gettask_id)">
                          <Getattr fromlineno="397" tolineno="397" lineno="397" attrname="gettask_id" expr="taskData">
                            <Name fromlineno="397" tolineno="397" lineno="397" name="taskData"/>
                          </Getattr>
                          <Name fromlineno="397" tolineno="397" lineno="397" name="dep"/>
                          <Name fromlineno="397" tolineno="397" lineno="397" name="idependtask"/>
                        </CallFunc>
                      </CallFunc>
                    </Discard>
                  </If>
                </If>
              </For>
              <Function fromlineno="400" tolineno="420" lineno="400">
                <Arguments fromlineno="400" tolineno="400" lineno="None" format_args="task">
                  <AssName fromlineno="400" tolineno="400" lineno="400" name="task"/>
                </Arguments>
                <If fromlineno="401" tolineno="402" lineno="401">
                  <UnaryOp fromlineno="401" tolineno="401" lineno="401">
                    <Name fromlineno="401" tolineno="401" lineno="401" name="task"/>
                  </UnaryOp>
                  <Return fromlineno="402" tolineno="402" lineno="402">
                    <List fromlineno="402" tolineno="402" lineno="402"/>
                  </Return>
                </If>
                <If fromlineno="403" tolineno="404" lineno="403">
                  <Compare fromlineno="403" tolineno="403" lineno="403" op="('in', &lt;Name(recursive_tdepends) l.403 [bb.runqueue] at Ox9669e0c&gt;)">
                    <Name fromlineno="403" tolineno="403" lineno="403" name="task"/>
                    <Name fromlineno="403" tolineno="403" lineno="403" name="recursive_tdepends"/>
                  </Compare>
                  <Return fromlineno="404" tolineno="404" lineno="404">
                    <Subscript fromlineno="404" tolineno="404" lineno="404">
                      <Name fromlineno="404" tolineno="404" lineno="404" name="recursive_tdepends"/>
                      <Index fromlineno="404" tolineno="404" lineno="None">
                        <Name fromlineno="404" tolineno="404" lineno="404" name="task"/>
                      </Index>
                    </Subscript>
                  </Return>
                </If>
                <Assign fromlineno="406" tolineno="406" lineno="406" targets="[&lt;AssName(fnid) l.406 [bb.runqueue] at Ox9669f4c&gt;]" value="taskData.tasks_fnid[task]">
                  <AssName fromlineno="406" tolineno="406" lineno="406" name="fnid"/>
                  <Subscript fromlineno="406" tolineno="406" lineno="406">
                    <Getattr fromlineno="406" tolineno="406" lineno="406" attrname="tasks_fnid" expr="taskData">
                      <Name fromlineno="406" tolineno="406" lineno="406" name="taskData"/>
                    </Getattr>
                    <Index fromlineno="406" tolineno="406" lineno="None">
                      <Name fromlineno="406" tolineno="406" lineno="406" name="task"/>
                    </Index>
                  </Subscript>
                </Assign>
                <Assign fromlineno="407" tolineno="407" lineno="407" targets="[&lt;AssName(taskids) l.407 [bb.runqueue] at Ox966e08c&gt;]" value="taskData.gettask_ids(fnid)">
                  <AssName fromlineno="407" tolineno="407" lineno="407" name="taskids"/>
                  <CallFunc fromlineno="407" tolineno="407" lineno="407" func="Getattr(gettask_ids)">
                    <Getattr fromlineno="407" tolineno="407" lineno="407" attrname="gettask_ids" expr="taskData">
                      <Name fromlineno="407" tolineno="407" lineno="407" name="taskData"/>
                    </Getattr>
                    <Name fromlineno="407" tolineno="407" lineno="407" name="fnid"/>
                  </CallFunc>
                </Assign>
                <Assign fromlineno="409" tolineno="409" lineno="409" targets="[&lt;AssName(rectdepends) l.409 [bb.runqueue] at Ox966e1ac&gt;]" value="taskids">
                  <AssName fromlineno="409" tolineno="409" lineno="409" name="rectdepends"/>
                  <Name fromlineno="409" tolineno="409" lineno="409" name="taskids"/>
                </Assign>
                <Assign fromlineno="410" tolineno="410" lineno="410" targets="[&lt;AssName(nextdeps) l.410 [bb.runqueue] at Ox966e24c&gt;]" value="taskids">
                  <AssName fromlineno="410" tolineno="410" lineno="410" name="nextdeps"/>
                  <Name fromlineno="410" tolineno="410" lineno="410" name="taskids"/>
                </Assign>
                <While fromlineno="411" tolineno="418" lineno="411">
                  <Compare fromlineno="411" tolineno="411" lineno="411" op="('!=', &lt;Const(int) l.411 [bb.runqueue] at Ox966e3ac&gt;)">
                    <CallFunc fromlineno="411" tolineno="411" lineno="411" func="Name(len)">
                      <Name fromlineno="411" tolineno="411" lineno="411" name="len"/>
                      <Name fromlineno="411" tolineno="411" lineno="411" name="nextdeps"/>
                    </CallFunc>
                    <Const fromlineno="411" tolineno="411" lineno="411" type="int">0</Const>
                  </Compare>
                  <Assign fromlineno="412" tolineno="412" lineno="412" targets="[&lt;AssName(newdeps) l.412 [bb.runqueue] at Ox966e44c&gt;]" value="[]">
                    <AssName fromlineno="412" tolineno="412" lineno="412" name="newdeps"/>
                    <List fromlineno="412" tolineno="412" lineno="412"/>
                  </Assign>
                  <For fromlineno="413" tolineno="417" lineno="413">
                    <AssName fromlineno="413" tolineno="413" lineno="413" name="nextdep"/>
                    <Name fromlineno="413" tolineno="413" lineno="413" name="nextdeps"/>
                    <For fromlineno="414" tolineno="417" lineno="414">
                      <AssName fromlineno="414" tolineno="414" lineno="414" name="tdepend"/>
                      <Subscript fromlineno="414" tolineno="414" lineno="414">
                        <Getattr fromlineno="414" tolineno="414" lineno="414" attrname="tasks_tdepends" expr="taskData">
                          <Name fromlineno="414" tolineno="414" lineno="414" name="taskData"/>
                        </Getattr>
                        <Index fromlineno="414" tolineno="414" lineno="None">
                          <Name fromlineno="414" tolineno="414" lineno="414" name="nextdep"/>
                        </Index>
                      </Subscript>
                      <If fromlineno="415" tolineno="417" lineno="415">
                        <Compare fromlineno="415" tolineno="415" lineno="415" op="('not in', &lt;Name(rectdepends) l.415 [bb.runqueue] at Ox966e76c&gt;)">
                          <Name fromlineno="415" tolineno="415" lineno="415" name="tdepend"/>
                          <Name fromlineno="415" tolineno="415" lineno="415" name="rectdepends"/>
                        </Compare>
                        <Discard fromlineno="416" tolineno="416" lineno="416">
                          <CallFunc fromlineno="416" tolineno="416" lineno="416" func="Getattr(append)">
                            <Getattr fromlineno="416" tolineno="416" lineno="416" attrname="append" expr="rectdepends">
                              <Name fromlineno="416" tolineno="416" lineno="416" name="rectdepends"/>
                            </Getattr>
                            <Name fromlineno="416" tolineno="416" lineno="416" name="tdepend"/>
                          </CallFunc>
                        </Discard>
                        <Discard fromlineno="417" tolineno="417" lineno="417">
                          <CallFunc fromlineno="417" tolineno="417" lineno="417" func="Getattr(append)">
                            <Getattr fromlineno="417" tolineno="417" lineno="417" attrname="append" expr="newdeps">
                              <Name fromlineno="417" tolineno="417" lineno="417" name="newdeps"/>
                            </Getattr>
                            <Name fromlineno="417" tolineno="417" lineno="417" name="tdepend"/>
                          </CallFunc>
                        </Discard>
                      </If>
                    </For>
                  </For>
                  <Assign fromlineno="418" tolineno="418" lineno="418" targets="[&lt;AssName(nextdeps) l.418 [bb.runqueue] at Ox966e98c&gt;]" value="newdeps">
                    <AssName fromlineno="418" tolineno="418" lineno="418" name="nextdeps"/>
                    <Name fromlineno="418" tolineno="418" lineno="418" name="newdeps"/>
                  </Assign>
                </While>
                <Assign fromlineno="419" tolineno="419" lineno="419" targets="[&lt;Subscript() l.419 [bb.runqueue] at Ox966ea0c&gt;]" value="rectdepends">
                  <Subscript fromlineno="419" tolineno="419" lineno="419">
                    <Name fromlineno="419" tolineno="419" lineno="419" name="recursive_tdepends"/>
                    <Index fromlineno="419" tolineno="419" lineno="None">
                      <Name fromlineno="419" tolineno="419" lineno="419" name="task"/>
                    </Index>
                  </Subscript>
                  <Name fromlineno="419" tolineno="419" lineno="419" name="rectdepends"/>
                </Assign>
                <Return fromlineno="420" tolineno="420" lineno="420">
                  <Name fromlineno="420" tolineno="420" lineno="420" name="rectdepends"/>
                </Return>
              </Function>
              <Function fromlineno="424" tolineno="433" lineno="424">
                <Arguments fromlineno="424" tolineno="424" lineno="None" format_args="task">
                  <AssName fromlineno="424" tolineno="424" lineno="424" name="task"/>
                </Arguments>
                <If fromlineno="425" tolineno="426" lineno="425">
                  <UnaryOp fromlineno="425" tolineno="425" lineno="425">
                    <Name fromlineno="425" tolineno="425" lineno="425" name="task"/>
                  </UnaryOp>
                  <Return fromlineno="426" tolineno="426" lineno="426">
                    <List fromlineno="426" tolineno="426" lineno="426"/>
                  </Return>
                </If>
                <Assign fromlineno="427" tolineno="427" lineno="427" targets="[&lt;AssName(rectdepends) l.427 [bb.runqueue] at Ox966ed2c&gt;]" value="get_recursive_tdepends(task)">
                  <AssName fromlineno="427" tolineno="427" lineno="427" name="rectdepends"/>
                  <CallFunc fromlineno="427" tolineno="427" lineno="427" func="Name(get_recursive_tdepends)">
                    <Name fromlineno="427" tolineno="427" lineno="427" name="get_recursive_tdepends"/>
                    <Name fromlineno="427" tolineno="427" lineno="427" name="task"/>
                  </CallFunc>
                </Assign>
                <Assign fromlineno="429" tolineno="429" lineno="429" targets="[&lt;AssName(recidepends) l.429 [bb.runqueue] at Ox966ee2c&gt;]" value="[]">
                  <AssName fromlineno="429" tolineno="429" lineno="429" name="recidepends"/>
                  <List fromlineno="429" tolineno="429" lineno="429"/>
                </Assign>
                <For fromlineno="430" tolineno="432" lineno="430">
                  <AssName fromlineno="430" tolineno="430" lineno="430" name="tdepend"/>
                  <Name fromlineno="430" tolineno="430" lineno="430" name="rectdepends"/>
                  <For fromlineno="431" tolineno="432" lineno="431">
                    <AssName fromlineno="431" tolineno="431" lineno="431" name="idepend"/>
                    <Subscript fromlineno="431" tolineno="431" lineno="431">
                      <Getattr fromlineno="431" tolineno="431" lineno="431" attrname="tasks_idepends" expr="taskData">
                        <Name fromlineno="431" tolineno="431" lineno="431" name="taskData"/>
                      </Getattr>
                      <Index fromlineno="431" tolineno="431" lineno="None">
                        <Name fromlineno="431" tolineno="431" lineno="431" name="tdepend"/>
                      </Index>
                    </Subscript>
                    <Discard fromlineno="432" tolineno="432" lineno="432">
                      <CallFunc fromlineno="432" tolineno="432" lineno="432" func="Getattr(append)">
                        <Getattr fromlineno="432" tolineno="432" lineno="432" attrname="append" expr="recidepends">
                          <Name fromlineno="432" tolineno="432" lineno="432" name="recidepends"/>
                        </Getattr>
                        <Name fromlineno="432" tolineno="432" lineno="432" name="idepend"/>
                      </CallFunc>
                    </Discard>
                  </For>
                </For>
                <Return fromlineno="433" tolineno="433" lineno="433">
                  <Name fromlineno="433" tolineno="433" lineno="433" name="recidepends"/>
                </Return>
              </Function>
              <Function fromlineno="435" tolineno="464" lineno="435">
                <Arguments fromlineno="435" tolineno="435" lineno="None" format_args="depid, depfnid">
                  <AssName fromlineno="435" tolineno="435" lineno="435" name="depid"/>
                  <AssName fromlineno="435" tolineno="435" lineno="435" name="depfnid"/>
                </Arguments>
                <If fromlineno="441" tolineno="442" lineno="441">
                  <Compare fromlineno="441" tolineno="441" lineno="441" op="('in', &lt;Name(dep_seen) l.441 [bb.runqueue] at Ox96713cc&gt;)">
                    <CallFunc fromlineno="441" tolineno="441" lineno="441" func="Name(str)">
                      <Name fromlineno="441" tolineno="441" lineno="441" name="str"/>
                      <Name fromlineno="441" tolineno="441" lineno="441" name="depid"/>
                    </CallFunc>
                    <Name fromlineno="441" tolineno="441" lineno="441" name="dep_seen"/>
                  </Compare>
                  <Return fromlineno="442" tolineno="442" lineno="442"/>
                </If>
                <Discard fromlineno="443" tolineno="443" lineno="443">
                  <CallFunc fromlineno="443" tolineno="443" lineno="443" func="Getattr(append)">
                    <Getattr fromlineno="443" tolineno="443" lineno="443" attrname="append" expr="dep_seen">
                      <Name fromlineno="443" tolineno="443" lineno="443" name="dep_seen"/>
                    </Getattr>
                    <Name fromlineno="443" tolineno="443" lineno="443" name="depid"/>
                  </CallFunc>
                </Discard>
                <If fromlineno="444" tolineno="464" lineno="444">
                  <Compare fromlineno="444" tolineno="444" lineno="444" op="('in', &lt;Getattr(build_targets) l.444 [bb.runqueue] at Ox96715ac&gt;)">
                    <Name fromlineno="444" tolineno="444" lineno="444" name="depid"/>
                    <Getattr fromlineno="444" tolineno="444" lineno="444" attrname="build_targets" expr="taskData">
                      <Name fromlineno="444" tolineno="444" lineno="444" name="taskData"/>
                    </Getattr>
                  </Compare>
                  <Assign fromlineno="445" tolineno="445" lineno="445" targets="[&lt;AssName(depdata) l.445 [bb.runqueue] at Ox967166c&gt;]" value="taskData.build_targets[depid][0]">
                    <AssName fromlineno="445" tolineno="445" lineno="445" name="depdata"/>
                    <Subscript fromlineno="445" tolineno="445" lineno="445">
                      <Subscript fromlineno="445" tolineno="445" lineno="445">
                        <Getattr fromlineno="445" tolineno="445" lineno="445" attrname="build_targets" expr="taskData">
                          <Name fromlineno="445" tolineno="445" lineno="445" name="taskData"/>
                        </Getattr>
                        <Index fromlineno="445" tolineno="445" lineno="None">
                          <Name fromlineno="445" tolineno="445" lineno="445" name="depid"/>
                        </Index>
                      </Subscript>
                      <Index fromlineno="445" tolineno="445" lineno="None">
                        <Const fromlineno="445" tolineno="445" lineno="445" type="int">0</Const>
                      </Index>
                    </Subscript>
                  </Assign>
                  <If fromlineno="446" tolineno="464" lineno="446">
                    <Compare fromlineno="446" tolineno="446" lineno="446" op="('is not', &lt;Const(NoneType) l.446 [bb.runqueue] at Ox967186c&gt;)">
                      <Name fromlineno="446" tolineno="446" lineno="446" name="depdata"/>
                      <Const fromlineno="446" tolineno="446" lineno="446" type="NoneType">None</Const>
                    </Compare>
                    <Assign fromlineno="447" tolineno="447" lineno="447" targets="[&lt;AssName(dep) l.447 [bb.runqueue] at Ox967190c&gt;]" value="taskData.fn_index[depdata]">
                      <AssName fromlineno="447" tolineno="447" lineno="447" name="dep"/>
                      <Subscript fromlineno="447" tolineno="447" lineno="447">
                        <Getattr fromlineno="447" tolineno="447" lineno="447" attrname="fn_index" expr="taskData">
                          <Name fromlineno="447" tolineno="447" lineno="447" name="taskData"/>
                        </Getattr>
                        <Index fromlineno="447" tolineno="447" lineno="None">
                          <Name fromlineno="447" tolineno="447" lineno="447" name="depdata"/>
                        </Index>
                      </Subscript>
                    </Assign>
                    <Assign fromlineno="449" tolineno="449" lineno="449" targets="[&lt;AssName(taskid) l.449 [bb.runqueue] at Ox9671a2c&gt;]" value="taskData.gettask_id(dep, taskname, False)">
                      <AssName fromlineno="449" tolineno="449" lineno="449" name="taskid"/>
                      <CallFunc fromlineno="449" tolineno="449" lineno="449" func="Getattr(gettask_id)">
                        <Getattr fromlineno="449" tolineno="449" lineno="449" attrname="gettask_id" expr="taskData">
                          <Name fromlineno="449" tolineno="449" lineno="449" name="taskData"/>
                        </Getattr>
                        <Name fromlineno="449" tolineno="449" lineno="449" name="dep"/>
                        <Name fromlineno="449" tolineno="449" lineno="449" name="taskname"/>
                        <Const fromlineno="449" tolineno="449" lineno="449" type="bool">False</Const>
                      </CallFunc>
                    </Assign>
                    <If fromlineno="450" tolineno="455" lineno="450">
                      <Compare fromlineno="450" tolineno="450" lineno="450" op="('is not', &lt;Const(NoneType) l.450 [bb.runqueue] at Ox9671c0c&gt;)">
                        <Name fromlineno="450" tolineno="450" lineno="450" name="taskid"/>
                        <Const fromlineno="450" tolineno="450" lineno="450" type="NoneType">None</Const>
                      </Compare>
                      <Discard fromlineno="451" tolineno="451" lineno="451">
                        <CallFunc fromlineno="451" tolineno="451" lineno="451" func="Getattr(append)">
                          <Getattr fromlineno="451" tolineno="451" lineno="451" attrname="append" expr="depends">
                            <Name fromlineno="451" tolineno="451" lineno="451" name="depends"/>
                          </Getattr>
                          <Name fromlineno="451" tolineno="451" lineno="451" name="taskid"/>
                        </CallFunc>
                      </Discard>
                      <Assign fromlineno="452" tolineno="452" lineno="452" targets="[&lt;AssName(fnid) l.452 [bb.runqueue] at Ox9671d6c&gt;]" value="taskData.tasks_fnid[taskid]">
                        <AssName fromlineno="452" tolineno="452" lineno="452" name="fnid"/>
                        <Subscript fromlineno="452" tolineno="452" lineno="452">
                          <Getattr fromlineno="452" tolineno="452" lineno="452" attrname="tasks_fnid" expr="taskData">
                            <Name fromlineno="452" tolineno="452" lineno="452" name="taskData"/>
                          </Getattr>
                          <Index fromlineno="452" tolineno="452" lineno="None">
                            <Name fromlineno="452" tolineno="452" lineno="452" name="taskid"/>
                          </Index>
                        </Subscript>
                      </Assign>
                      <Assign fromlineno="455" tolineno="455" lineno="455" targets="[&lt;AssName(fnid) l.455 [bb.runqueue] at Ox9671eac&gt;]" value="taskData.getfn_id(dep)">
                        <AssName fromlineno="455" tolineno="455" lineno="455" name="fnid"/>
                        <CallFunc fromlineno="455" tolineno="455" lineno="455" func="Getattr(getfn_id)">
                          <Getattr fromlineno="455" tolineno="455" lineno="455" attrname="getfn_id" expr="taskData">
                            <Name fromlineno="455" tolineno="455" lineno="455" name="taskData"/>
                          </Getattr>
                          <Name fromlineno="455" tolineno="455" lineno="455" name="dep"/>
                        </CallFunc>
                      </Assign>
                    </If>
                    <For fromlineno="456" tolineno="458" lineno="456">
                      <AssName fromlineno="456" tolineno="456" lineno="456" name="nextdepid"/>
                      <Subscript fromlineno="456" tolineno="456" lineno="456">
                        <Getattr fromlineno="456" tolineno="456" lineno="456" attrname="depids" expr="taskData">
                          <Name fromlineno="456" tolineno="456" lineno="456" name="taskData"/>
                        </Getattr>
                        <Index fromlineno="456" tolineno="456" lineno="None">
                          <Name fromlineno="456" tolineno="456" lineno="456" name="fnid"/>
                        </Index>
                      </Subscript>
                      <If fromlineno="457" tolineno="458" lineno="457">
                        <Compare fromlineno="457" tolineno="457" lineno="457" op="('not in', &lt;Name(dep_seen) l.457 [bb.runqueue] at Ox967514c&gt;)">
                          <Name fromlineno="457" tolineno="457" lineno="457" name="nextdepid"/>
                          <Name fromlineno="457" tolineno="457" lineno="457" name="dep_seen"/>
                        </Compare>
                        <Discard fromlineno="458" tolineno="458" lineno="458">
                          <CallFunc fromlineno="458" tolineno="458" lineno="458" func="Name(add_recursive_build)">
                            <Name fromlineno="458" tolineno="458" lineno="458" name="add_recursive_build"/>
                            <Name fromlineno="458" tolineno="458" lineno="458" name="nextdepid"/>
                            <Name fromlineno="458" tolineno="458" lineno="458" name="fnid"/>
                          </CallFunc>
                        </Discard>
                      </If>
                    </For>
                    <For fromlineno="459" tolineno="461" lineno="459">
                      <AssName fromlineno="459" tolineno="459" lineno="459" name="nextdepid"/>
                      <Subscript fromlineno="459" tolineno="459" lineno="459">
                        <Getattr fromlineno="459" tolineno="459" lineno="459" attrname="rdepids" expr="taskData">
                          <Name fromlineno="459" tolineno="459" lineno="459" name="taskData"/>
                        </Getattr>
                        <Index fromlineno="459" tolineno="459" lineno="None">
                          <Name fromlineno="459" tolineno="459" lineno="459" name="fnid"/>
                        </Index>
                      </Subscript>
                      <If fromlineno="460" tolineno="461" lineno="460">
                        <Compare fromlineno="460" tolineno="460" lineno="460" op="('not in', &lt;Name(rdep_seen) l.460 [bb.runqueue] at Ox967542c&gt;)">
                          <Name fromlineno="460" tolineno="460" lineno="460" name="nextdepid"/>
                          <Name fromlineno="460" tolineno="460" lineno="460" name="rdep_seen"/>
                        </Compare>
                        <Discard fromlineno="461" tolineno="461" lineno="461">
                          <CallFunc fromlineno="461" tolineno="461" lineno="461" func="Name(add_recursive_run)">
                            <Name fromlineno="461" tolineno="461" lineno="461" name="add_recursive_run"/>
                            <Name fromlineno="461" tolineno="461" lineno="461" name="nextdepid"/>
                            <Name fromlineno="461" tolineno="461" lineno="461" name="fnid"/>
                          </CallFunc>
                        </Discard>
                      </If>
                    </For>
                    <For fromlineno="462" tolineno="464" lineno="462">
                      <Tuple fromlineno="462" tolineno="462" lineno="462">
                        <AssName fromlineno="462" tolineno="462" lineno="462" name="idependid"/>
                        <AssName fromlineno="462" tolineno="462" lineno="462" name="idependtask"/>
                      </Tuple>
                      <CallFunc fromlineno="462" tolineno="462" lineno="462" func="Name(get_recursive_idepends)">
                        <Name fromlineno="462" tolineno="462" lineno="462" name="get_recursive_idepends"/>
                        <Name fromlineno="462" tolineno="462" lineno="462" name="taskid"/>
                      </CallFunc>
                      <If fromlineno="463" tolineno="464" lineno="463">
                        <Compare fromlineno="463" tolineno="463" lineno="463" op="('not in', &lt;Name(dep_seen) l.463 [bb.runqueue] at Ox967578c&gt;)">
                          <Name fromlineno="463" tolineno="463" lineno="463" name="idependid"/>
                          <Name fromlineno="463" tolineno="463" lineno="463" name="dep_seen"/>
                        </Compare>
                        <Discard fromlineno="464" tolineno="464" lineno="464">
                          <CallFunc fromlineno="464" tolineno="464" lineno="464" func="Name(add_recursive_build)">
                            <Name fromlineno="464" tolineno="464" lineno="464" name="add_recursive_build"/>
                            <Name fromlineno="464" tolineno="464" lineno="464" name="idependid"/>
                            <Name fromlineno="464" tolineno="464" lineno="464" name="fnid"/>
                          </CallFunc>
                        </Discard>
                      </If>
                    </For>
                  </If>
                </If>
              </Function>
              <Function fromlineno="466" tolineno="495" lineno="466">
                <Arguments fromlineno="466" tolineno="466" lineno="None" format_args="rdepid, depfnid">
                  <AssName fromlineno="466" tolineno="466" lineno="466" name="rdepid"/>
                  <AssName fromlineno="466" tolineno="466" lineno="466" name="depfnid"/>
                </Arguments>
                <If fromlineno="472" tolineno="473" lineno="472">
                  <Compare fromlineno="472" tolineno="472" lineno="472" op="('in', &lt;Name(rdep_seen) l.472 [bb.runqueue] at Ox9675a6c&gt;)">
                    <CallFunc fromlineno="472" tolineno="472" lineno="472" func="Name(str)">
                      <Name fromlineno="472" tolineno="472" lineno="472" name="str"/>
                      <Name fromlineno="472" tolineno="472" lineno="472" name="rdepid"/>
                    </CallFunc>
                    <Name fromlineno="472" tolineno="472" lineno="472" name="rdep_seen"/>
                  </Compare>
                  <Return fromlineno="473" tolineno="473" lineno="473"/>
                </If>
                <Discard fromlineno="474" tolineno="474" lineno="474">
                  <CallFunc fromlineno="474" tolineno="474" lineno="474" func="Getattr(append)">
                    <Getattr fromlineno="474" tolineno="474" lineno="474" attrname="append" expr="rdep_seen">
                      <Name fromlineno="474" tolineno="474" lineno="474" name="rdep_seen"/>
                    </Getattr>
                    <Name fromlineno="474" tolineno="474" lineno="474" name="rdepid"/>
                  </CallFunc>
                </Discard>
                <If fromlineno="475" tolineno="495" lineno="475">
                  <Compare fromlineno="475" tolineno="475" lineno="475" op="('in', &lt;Getattr(run_targets) l.475 [bb.runqueue] at Ox9675c4c&gt;)">
                    <Name fromlineno="475" tolineno="475" lineno="475" name="rdepid"/>
                    <Getattr fromlineno="475" tolineno="475" lineno="475" attrname="run_targets" expr="taskData">
                      <Name fromlineno="475" tolineno="475" lineno="475" name="taskData"/>
                    </Getattr>
                  </Compare>
                  <Assign fromlineno="476" tolineno="476" lineno="476" targets="[&lt;AssName(depdata) l.476 [bb.runqueue] at Ox9675d0c&gt;]" value="taskData.run_targets[rdepid][0]">
                    <AssName fromlineno="476" tolineno="476" lineno="476" name="depdata"/>
                    <Subscript fromlineno="476" tolineno="476" lineno="476">
                      <Subscript fromlineno="476" tolineno="476" lineno="476">
                        <Getattr fromlineno="476" tolineno="476" lineno="476" attrname="run_targets" expr="taskData">
                          <Name fromlineno="476" tolineno="476" lineno="476" name="taskData"/>
                        </Getattr>
                        <Index fromlineno="476" tolineno="476" lineno="None">
                          <Name fromlineno="476" tolineno="476" lineno="476" name="rdepid"/>
                        </Index>
                      </Subscript>
                      <Index fromlineno="476" tolineno="476" lineno="None">
                        <Const fromlineno="476" tolineno="476" lineno="476" type="int">0</Const>
                      </Index>
                    </Subscript>
                  </Assign>
                  <If fromlineno="477" tolineno="495" lineno="477">
                    <Compare fromlineno="477" tolineno="477" lineno="477" op="('is not', &lt;Const(NoneType) l.477 [bb.runqueue] at Ox9675f0c&gt;)">
                      <Name fromlineno="477" tolineno="477" lineno="477" name="depdata"/>
                      <Const fromlineno="477" tolineno="477" lineno="477" type="NoneType">None</Const>
                    </Compare>
                    <Assign fromlineno="478" tolineno="478" lineno="478" targets="[&lt;AssName(dep) l.478 [bb.runqueue] at Ox9675fac&gt;]" value="taskData.fn_index[depdata]">
                      <AssName fromlineno="478" tolineno="478" lineno="478" name="dep"/>
                      <Subscript fromlineno="478" tolineno="478" lineno="478">
                        <Getattr fromlineno="478" tolineno="478" lineno="478" attrname="fn_index" expr="taskData">
                          <Name fromlineno="478" tolineno="478" lineno="478" name="taskData"/>
                        </Getattr>
                        <Index fromlineno="478" tolineno="478" lineno="None">
                          <Name fromlineno="478" tolineno="478" lineno="478" name="depdata"/>
                        </Index>
                      </Subscript>
                    </Assign>
                    <Assign fromlineno="480" tolineno="480" lineno="480" targets="[&lt;AssName(taskid) l.480 [bb.runqueue] at Ox96790ec&gt;]" value="taskData.gettask_id(dep, taskname, False)">
                      <AssName fromlineno="480" tolineno="480" lineno="480" name="taskid"/>
                      <CallFunc fromlineno="480" tolineno="480" lineno="480" func="Getattr(gettask_id)">
                        <Getattr fromlineno="480" tolineno="480" lineno="480" attrname="gettask_id" expr="taskData">
                          <Name fromlineno="480" tolineno="480" lineno="480" name="taskData"/>
                        </Getattr>
                        <Name fromlineno="480" tolineno="480" lineno="480" name="dep"/>
                        <Name fromlineno="480" tolineno="480" lineno="480" name="taskname"/>
                        <Const fromlineno="480" tolineno="480" lineno="480" type="bool">False</Const>
                      </CallFunc>
                    </Assign>
                    <If fromlineno="481" tolineno="486" lineno="481">
                      <Compare fromlineno="481" tolineno="481" lineno="481" op="('is not', &lt;Const(NoneType) l.481 [bb.runqueue] at Ox96792cc&gt;)">
                        <Name fromlineno="481" tolineno="481" lineno="481" name="taskid"/>
                        <Const fromlineno="481" tolineno="481" lineno="481" type="NoneType">None</Const>
                      </Compare>
                      <Discard fromlineno="482" tolineno="482" lineno="482">
                        <CallFunc fromlineno="482" tolineno="482" lineno="482" func="Getattr(append)">
                          <Getattr fromlineno="482" tolineno="482" lineno="482" attrname="append" expr="depends">
                            <Name fromlineno="482" tolineno="482" lineno="482" name="depends"/>
                          </Getattr>
                          <Name fromlineno="482" tolineno="482" lineno="482" name="taskid"/>
                        </CallFunc>
                      </Discard>
                      <Assign fromlineno="483" tolineno="483" lineno="483" targets="[&lt;AssName(fnid) l.483 [bb.runqueue] at Ox967942c&gt;]" value="taskData.tasks_fnid[taskid]">
                        <AssName fromlineno="483" tolineno="483" lineno="483" name="fnid"/>
                        <Subscript fromlineno="483" tolineno="483" lineno="483">
                          <Getattr fromlineno="483" tolineno="483" lineno="483" attrname="tasks_fnid" expr="taskData">
                            <Name fromlineno="483" tolineno="483" lineno="483" name="taskData"/>
                          </Getattr>
                          <Index fromlineno="483" tolineno="483" lineno="None">
                            <Name fromlineno="483" tolineno="483" lineno="483" name="taskid"/>
                          </Index>
                        </Subscript>
                      </Assign>
                      <Assign fromlineno="486" tolineno="486" lineno="486" targets="[&lt;AssName(fnid) l.486 [bb.runqueue] at Ox967956c&gt;]" value="taskData.getfn_id(dep)">
                        <AssName fromlineno="486" tolineno="486" lineno="486" name="fnid"/>
                        <CallFunc fromlineno="486" tolineno="486" lineno="486" func="Getattr(getfn_id)">
                          <Getattr fromlineno="486" tolineno="486" lineno="486" attrname="getfn_id" expr="taskData">
                            <Name fromlineno="486" tolineno="486" lineno="486" name="taskData"/>
                          </Getattr>
                          <Name fromlineno="486" tolineno="486" lineno="486" name="dep"/>
                        </CallFunc>
                      </Assign>
                    </If>
                    <For fromlineno="487" tolineno="489" lineno="487">
                      <AssName fromlineno="487" tolineno="487" lineno="487" name="nextdepid"/>
                      <Subscript fromlineno="487" tolineno="487" lineno="487">
                        <Getattr fromlineno="487" tolineno="487" lineno="487" attrname="depids" expr="taskData">
                          <Name fromlineno="487" tolineno="487" lineno="487" name="taskData"/>
                        </Getattr>
                        <Index fromlineno="487" tolineno="487" lineno="None">
                          <Name fromlineno="487" tolineno="487" lineno="487" name="fnid"/>
                        </Index>
                      </Subscript>
                      <If fromlineno="488" tolineno="489" lineno="488">
                        <Compare fromlineno="488" tolineno="488" lineno="488" op="('not in', &lt;Name(dep_seen) l.488 [bb.runqueue] at Ox96797ec&gt;)">
                          <Name fromlineno="488" tolineno="488" lineno="488" name="nextdepid"/>
                          <Name fromlineno="488" tolineno="488" lineno="488" name="dep_seen"/>
                        </Compare>
                        <Discard fromlineno="489" tolineno="489" lineno="489">
                          <CallFunc fromlineno="489" tolineno="489" lineno="489" func="Name(add_recursive_build)">
                            <Name fromlineno="489" tolineno="489" lineno="489" name="add_recursive_build"/>
                            <Name fromlineno="489" tolineno="489" lineno="489" name="nextdepid"/>
                            <Name fromlineno="489" tolineno="489" lineno="489" name="fnid"/>
                          </CallFunc>
                        </Discard>
                      </If>
                    </For>
                    <For fromlineno="490" tolineno="492" lineno="490">
                      <AssName fromlineno="490" tolineno="490" lineno="490" name="nextdepid"/>
                      <Subscript fromlineno="490" tolineno="490" lineno="490">
                        <Getattr fromlineno="490" tolineno="490" lineno="490" attrname="rdepids" expr="taskData">
                          <Name fromlineno="490" tolineno="490" lineno="490" name="taskData"/>
                        </Getattr>
                        <Index fromlineno="490" tolineno="490" lineno="None">
                          <Name fromlineno="490" tolineno="490" lineno="490" name="fnid"/>
                        </Index>
                      </Subscript>
                      <If fromlineno="491" tolineno="492" lineno="491">
                        <Compare fromlineno="491" tolineno="491" lineno="491" op="('not in', &lt;Name(rdep_seen) l.491 [bb.runqueue] at Ox9679acc&gt;)">
                          <Name fromlineno="491" tolineno="491" lineno="491" name="nextdepid"/>
                          <Name fromlineno="491" tolineno="491" lineno="491" name="rdep_seen"/>
                        </Compare>
                        <Discard fromlineno="492" tolineno="492" lineno="492">
                          <CallFunc fromlineno="492" tolineno="492" lineno="492" func="Name(add_recursive_run)">
                            <Name fromlineno="492" tolineno="492" lineno="492" name="add_recursive_run"/>
                            <Name fromlineno="492" tolineno="492" lineno="492" name="nextdepid"/>
                            <Name fromlineno="492" tolineno="492" lineno="492" name="fnid"/>
                          </CallFunc>
                        </Discard>
                      </If>
                    </For>
                    <For fromlineno="493" tolineno="495" lineno="493">
                      <Tuple fromlineno="493" tolineno="493" lineno="493">
                        <AssName fromlineno="493" tolineno="493" lineno="493" name="idependid"/>
                        <AssName fromlineno="493" tolineno="493" lineno="493" name="idependtask"/>
                      </Tuple>
                      <CallFunc fromlineno="493" tolineno="493" lineno="493" func="Name(get_recursive_idepends)">
                        <Name fromlineno="493" tolineno="493" lineno="493" name="get_recursive_idepends"/>
                        <Name fromlineno="493" tolineno="493" lineno="493" name="taskid"/>
                      </CallFunc>
                      <If fromlineno="494" tolineno="495" lineno="494">
                        <Compare fromlineno="494" tolineno="494" lineno="494" op="('not in', &lt;Name(dep_seen) l.494 [bb.runqueue] at Ox9679e2c&gt;)">
                          <Name fromlineno="494" tolineno="494" lineno="494" name="idependid"/>
                          <Name fromlineno="494" tolineno="494" lineno="494" name="dep_seen"/>
                        </Compare>
                        <Discard fromlineno="495" tolineno="495" lineno="495">
                          <CallFunc fromlineno="495" tolineno="495" lineno="495" func="Name(add_recursive_build)">
                            <Name fromlineno="495" tolineno="495" lineno="495" name="add_recursive_build"/>
                            <Name fromlineno="495" tolineno="495" lineno="495" name="idependid"/>
                            <Name fromlineno="495" tolineno="495" lineno="495" name="fnid"/>
                          </CallFunc>
                        </Discard>
                      </If>
                    </For>
                  </If>
                </If>
              </Function>
              <If fromlineno="501" tolineno="512" lineno="501">
                <BoolOp fromlineno="501" tolineno="501" lineno="501" op="and" values="'recrdeptask' in task_deps,taskData.tasks_name[task] in task_deps['recrdeptask'],">
                  <Compare fromlineno="501" tolineno="501" lineno="501" op="('in', &lt;Name(task_deps) l.501 [bb.runqueue] at Ox9679fec&gt;)">
                    <Const fromlineno="501" tolineno="501" lineno="501" type="str">'recrdeptask'</Const>
                    <Name fromlineno="501" tolineno="501" lineno="501" name="task_deps"/>
                  </Compare>
                  <Compare fromlineno="501" tolineno="501" lineno="501" op="('in', &lt;Subscript() l.501 [bb.runqueue] at Ox967d12c&gt;)">
                    <Subscript fromlineno="501" tolineno="501" lineno="501">
                      <Getattr fromlineno="501" tolineno="501" lineno="501" attrname="tasks_name" expr="taskData">
                        <Name fromlineno="501" tolineno="501" lineno="501" name="taskData"/>
                      </Getattr>
                      <Index fromlineno="501" tolineno="501" lineno="None">
                        <Name fromlineno="501" tolineno="501" lineno="501" name="task"/>
                      </Index>
                    </Subscript>
                    <Subscript fromlineno="501" tolineno="501" lineno="501">
                      <Name fromlineno="501" tolineno="501" lineno="501" name="task_deps"/>
                      <Index fromlineno="501" tolineno="501" lineno="None">
                        <Const fromlineno="501" tolineno="501" lineno="501" type="str">'recrdeptask'</Const>
                      </Index>
                    </Subscript>
                  </Compare>
                </BoolOp>
                <For fromlineno="502" tolineno="512" lineno="502">
                  <AssName fromlineno="502" tolineno="502" lineno="502" name="taskname"/>
                  <CallFunc fromlineno="502" tolineno="502" lineno="502" func="Getattr(split)">
                    <Getattr fromlineno="502" tolineno="502" lineno="502" attrname="split" expr="task_deps['recrdeptask'][taskData.tasks_name[task]]">
                      <Subscript fromlineno="502" tolineno="502" lineno="502">
                        <Subscript fromlineno="502" tolineno="502" lineno="502">
                          <Name fromlineno="502" tolineno="502" lineno="502" name="task_deps"/>
                          <Index fromlineno="502" tolineno="502" lineno="None">
                            <Const fromlineno="502" tolineno="502" lineno="502" type="str">'recrdeptask'</Const>
                          </Index>
                        </Subscript>
                        <Index fromlineno="502" tolineno="502" lineno="None">
                          <Subscript fromlineno="502" tolineno="502" lineno="502">
                            <Getattr fromlineno="502" tolineno="502" lineno="502" attrname="tasks_name" expr="taskData">
                              <Name fromlineno="502" tolineno="502" lineno="502" name="taskData"/>
                            </Getattr>
                            <Index fromlineno="502" tolineno="502" lineno="None">
                              <Name fromlineno="502" tolineno="502" lineno="502" name="task"/>
                            </Index>
                          </Subscript>
                        </Index>
                      </Subscript>
                    </Getattr>
                  </CallFunc>
                  <Assign fromlineno="503" tolineno="503" lineno="503" targets="[&lt;AssName(dep_seen) l.503 [bb.runqueue] at Ox967d44c&gt;]" value="[]">
                    <AssName fromlineno="503" tolineno="503" lineno="503" name="dep_seen"/>
                    <List fromlineno="503" tolineno="503" lineno="503"/>
                  </Assign>
                  <Assign fromlineno="504" tolineno="504" lineno="504" targets="[&lt;AssName(rdep_seen) l.504 [bb.runqueue] at Ox967d50c&gt;]" value="[]">
                    <AssName fromlineno="504" tolineno="504" lineno="504" name="rdep_seen"/>
                    <List fromlineno="504" tolineno="504" lineno="504"/>
                  </Assign>
                  <Assign fromlineno="505" tolineno="505" lineno="505" targets="[&lt;AssName(idep_seen) l.505 [bb.runqueue] at Ox967d5cc&gt;]" value="[]">
                    <AssName fromlineno="505" tolineno="505" lineno="505" name="idep_seen"/>
                    <List fromlineno="505" tolineno="505" lineno="505"/>
                  </Assign>
                  <For fromlineno="506" tolineno="507" lineno="506">
                    <AssName fromlineno="506" tolineno="506" lineno="506" name="depid"/>
                    <Subscript fromlineno="506" tolineno="506" lineno="506">
                      <Getattr fromlineno="506" tolineno="506" lineno="506" attrname="depids" expr="taskData">
                        <Name fromlineno="506" tolineno="506" lineno="506" name="taskData"/>
                      </Getattr>
                      <Index fromlineno="506" tolineno="506" lineno="None">
                        <Name fromlineno="506" tolineno="506" lineno="506" name="fnid"/>
                      </Index>
                    </Subscript>
                    <Discard fromlineno="507" tolineno="507" lineno="507">
                      <CallFunc fromlineno="507" tolineno="507" lineno="507" func="Name(add_recursive_build)">
                        <Name fromlineno="507" tolineno="507" lineno="507" name="add_recursive_build"/>
                        <Name fromlineno="507" tolineno="507" lineno="507" name="depid"/>
                        <Name fromlineno="507" tolineno="507" lineno="507" name="fnid"/>
                      </CallFunc>
                    </Discard>
                  </For>
                  <For fromlineno="508" tolineno="509" lineno="508">
                    <AssName fromlineno="508" tolineno="508" lineno="508" name="rdepid"/>
                    <Subscript fromlineno="508" tolineno="508" lineno="508">
                      <Getattr fromlineno="508" tolineno="508" lineno="508" attrname="rdepids" expr="taskData">
                        <Name fromlineno="508" tolineno="508" lineno="508" name="taskData"/>
                      </Getattr>
                      <Index fromlineno="508" tolineno="508" lineno="None">
                        <Name fromlineno="508" tolineno="508" lineno="508" name="fnid"/>
                      </Index>
                    </Subscript>
                    <Discard fromlineno="509" tolineno="509" lineno="509">
                      <CallFunc fromlineno="509" tolineno="509" lineno="509" func="Name(add_recursive_run)">
                        <Name fromlineno="509" tolineno="509" lineno="509" name="add_recursive_run"/>
                        <Name fromlineno="509" tolineno="509" lineno="509" name="rdepid"/>
                        <Name fromlineno="509" tolineno="509" lineno="509" name="fnid"/>
                      </CallFunc>
                    </Discard>
                  </For>
                  <Assign fromlineno="510" tolineno="510" lineno="510" targets="[&lt;AssName(deptaskid) l.510 [bb.runqueue] at Ox967da6c&gt;]" value="taskData.gettask_id(fn, taskname, False)">
                    <AssName fromlineno="510" tolineno="510" lineno="510" name="deptaskid"/>
                    <CallFunc fromlineno="510" tolineno="510" lineno="510" func="Getattr(gettask_id)">
                      <Getattr fromlineno="510" tolineno="510" lineno="510" attrname="gettask_id" expr="taskData">
                        <Name fromlineno="510" tolineno="510" lineno="510" name="taskData"/>
                      </Getattr>
                      <Name fromlineno="510" tolineno="510" lineno="510" name="fn"/>
                      <Name fromlineno="510" tolineno="510" lineno="510" name="taskname"/>
                      <Const fromlineno="510" tolineno="510" lineno="510" type="bool">False</Const>
                    </CallFunc>
                  </Assign>
                  <For fromlineno="511" tolineno="512" lineno="511">
                    <Tuple fromlineno="511" tolineno="511" lineno="511">
                      <AssName fromlineno="511" tolineno="511" lineno="511" name="idependid"/>
                      <AssName fromlineno="511" tolineno="511" lineno="511" name="idependtask"/>
                    </Tuple>
                    <CallFunc fromlineno="511" tolineno="511" lineno="511" func="Name(get_recursive_idepends)">
                      <Name fromlineno="511" tolineno="511" lineno="511" name="get_recursive_idepends"/>
                      <Name fromlineno="511" tolineno="511" lineno="511" name="deptaskid"/>
                    </CallFunc>
                    <Discard fromlineno="512" tolineno="512" lineno="512">
                      <CallFunc fromlineno="512" tolineno="512" lineno="512" func="Name(add_recursive_build)">
                        <Name fromlineno="512" tolineno="512" lineno="512" name="add_recursive_build"/>
                        <Name fromlineno="512" tolineno="512" lineno="512" name="idependid"/>
                        <Name fromlineno="512" tolineno="512" lineno="512" name="fnid"/>
                      </CallFunc>
                    </Discard>
                  </For>
                </For>
              </If>
              <If fromlineno="515" tolineno="521" lineno="515">
                <Compare fromlineno="515" tolineno="515" lineno="515" op="('in', &lt;Name(depends) l.515 [bb.runqueue] at Ox967de6c&gt;)">
                  <Name fromlineno="515" tolineno="515" lineno="515" name="task"/>
                  <Name fromlineno="515" tolineno="515" lineno="515" name="depends"/>
                </Compare>
                <Assign fromlineno="516" tolineno="516" lineno="516" targets="[&lt;AssName(newdep) l.516 [bb.runqueue] at Ox967df0c&gt;]" value="[]">
                  <AssName fromlineno="516" tolineno="516" lineno="516" name="newdep"/>
                  <List fromlineno="516" tolineno="516" lineno="516"/>
                </Assign>
                <Discard fromlineno="517" tolineno="517" lineno="517">
                  <CallFunc fromlineno="517" tolineno="517" lineno="517" func="Getattr(debug)">
                    <Getattr fromlineno="517" tolineno="517" lineno="517" attrname="debug" expr="bb.msg">
                      <Getattr fromlineno="517" tolineno="517" lineno="517" attrname="msg" expr="bb">
                        <Name fromlineno="517" tolineno="517" lineno="517" name="bb"/>
                      </Getattr>
                    </Getattr>
                    <Const fromlineno="517" tolineno="517" lineno="517" type="int">2</Const>
                    <Getattr fromlineno="517" tolineno="517" lineno="517" attrname="RunQueue" expr="bb.msg.domain">
                      <Getattr fromlineno="517" tolineno="517" lineno="517" attrname="domain" expr="bb.msg">
                        <Getattr fromlineno="517" tolineno="517" lineno="517" attrname="msg" expr="bb">
                          <Name fromlineno="517" tolineno="517" lineno="517" name="bb"/>
                        </Getattr>
                      </Getattr>
                    </Getattr>
                    <BinOp fromlineno="517" tolineno="517" lineno="517" op="%" left="'Task %s (%s %s) contains self reference! %s'" right="(task, taskData.fn_index[taskData.tasks_fnid[task]], taskData.tasks_name[task], depends)">
                      <Const fromlineno="517" tolineno="517" lineno="517" type="str">'Task %s (%s %s) contains self reference! %s'</Const>
                      <Tuple fromlineno="517" tolineno="517" lineno="517">
                        <Name fromlineno="517" tolineno="517" lineno="517" name="task"/>
                        <Subscript fromlineno="517" tolineno="517" lineno="517">
                          <Getattr fromlineno="517" tolineno="517" lineno="517" attrname="fn_index" expr="taskData">
                            <Name fromlineno="517" tolineno="517" lineno="517" name="taskData"/>
                          </Getattr>
                          <Index fromlineno="517" tolineno="517" lineno="None">
                            <Subscript fromlineno="517" tolineno="517" lineno="517">
                              <Getattr fromlineno="517" tolineno="517" lineno="517" attrname="tasks_fnid" expr="taskData">
                                <Name fromlineno="517" tolineno="517" lineno="517" name="taskData"/>
                              </Getattr>
                              <Index fromlineno="517" tolineno="517" lineno="None">
                                <Name fromlineno="517" tolineno="517" lineno="517" name="task"/>
                              </Index>
                            </Subscript>
                          </Index>
                        </Subscript>
                        <Subscript fromlineno="517" tolineno="517" lineno="517">
                          <Getattr fromlineno="517" tolineno="517" lineno="517" attrname="tasks_name" expr="taskData">
                            <Name fromlineno="517" tolineno="517" lineno="517" name="taskData"/>
                          </Getattr>
                          <Index fromlineno="517" tolineno="517" lineno="None">
                            <Name fromlineno="517" tolineno="517" lineno="517" name="task"/>
                          </Index>
                        </Subscript>
                        <Name fromlineno="517" tolineno="517" lineno="517" name="depends"/>
                      </Tuple>
                    </BinOp>
                  </CallFunc>
                </Discard>
                <For fromlineno="518" tolineno="520" lineno="518">
                  <AssName fromlineno="518" tolineno="518" lineno="518" name="dep"/>
                  <Name fromlineno="518" tolineno="518" lineno="518" name="depends"/>
                  <If fromlineno="519" tolineno="520" lineno="519">
                    <Compare fromlineno="519" tolineno="519" lineno="519" op="('!=', &lt;Name(dep) l.519 [bb.runqueue] at Ox96814ec&gt;)">
                      <Name fromlineno="519" tolineno="519" lineno="519" name="task"/>
                      <Name fromlineno="519" tolineno="519" lineno="519" name="dep"/>
                    </Compare>
                    <Discard fromlineno="520" tolineno="520" lineno="520">
                      <CallFunc fromlineno="520" tolineno="520" lineno="520" func="Getattr(append)">
                        <Getattr fromlineno="520" tolineno="520" lineno="520" attrname="append" expr="newdep">
                          <Name fromlineno="520" tolineno="520" lineno="520" name="newdep"/>
                        </Getattr>
                        <Name fromlineno="520" tolineno="520" lineno="520" name="dep"/>
                      </CallFunc>
                    </Discard>
                  </If>
                </For>
                <Assign fromlineno="521" tolineno="521" lineno="521" targets="[&lt;AssName(depends) l.521 [bb.runqueue] at Ox968164c&gt;]" value="newdep">
                  <AssName fromlineno="521" tolineno="521" lineno="521" name="depends"/>
                  <Name fromlineno="521" tolineno="521" lineno="521" name="newdep"/>
                </Assign>
              </If>
            </If>
            <Discard fromlineno="524" tolineno="524" lineno="524">
              <CallFunc fromlineno="524" tolineno="524" lineno="524" func="Getattr(append)">
                <Getattr fromlineno="524" tolineno="524" lineno="524" attrname="append" expr="self.runq_fnid">
                  <Getattr fromlineno="524" tolineno="524" lineno="524" attrname="runq_fnid" expr="self">
                    <Name fromlineno="524" tolineno="524" lineno="524" name="self"/>
                  </Getattr>
                </Getattr>
                <Subscript fromlineno="524" tolineno="524" lineno="524">
                  <Getattr fromlineno="524" tolineno="524" lineno="524" attrname="tasks_fnid" expr="taskData">
                    <Name fromlineno="524" tolineno="524" lineno="524" name="taskData"/>
                  </Getattr>
                  <Index fromlineno="524" tolineno="524" lineno="None">
                    <Name fromlineno="524" tolineno="524" lineno="524" name="task"/>
                  </Index>
                </Subscript>
              </CallFunc>
            </Discard>
            <Discard fromlineno="525" tolineno="525" lineno="525">
              <CallFunc fromlineno="525" tolineno="525" lineno="525" func="Getattr(append)">
                <Getattr fromlineno="525" tolineno="525" lineno="525" attrname="append" expr="self.runq_task">
                  <Getattr fromlineno="525" tolineno="525" lineno="525" attrname="runq_task" expr="self">
                    <Name fromlineno="525" tolineno="525" lineno="525" name="self"/>
                  </Getattr>
                </Getattr>
                <Subscript fromlineno="525" tolineno="525" lineno="525">
                  <Getattr fromlineno="525" tolineno="525" lineno="525" attrname="tasks_name" expr="taskData">
                    <Name fromlineno="525" tolineno="525" lineno="525" name="taskData"/>
                  </Getattr>
                  <Index fromlineno="525" tolineno="525" lineno="None">
                    <Name fromlineno="525" tolineno="525" lineno="525" name="task"/>
                  </Index>
                </Subscript>
              </CallFunc>
            </Discard>
            <Discard fromlineno="526" tolineno="526" lineno="526">
              <CallFunc fromlineno="526" tolineno="526" lineno="526" func="Getattr(append)">
                <Getattr fromlineno="526" tolineno="526" lineno="526" attrname="append" expr="self.runq_depends">
                  <Getattr fromlineno="526" tolineno="526" lineno="526" attrname="runq_depends" expr="self">
                    <Name fromlineno="526" tolineno="526" lineno="526" name="self"/>
                  </Getattr>
                </Getattr>
                <CallFunc fromlineno="526" tolineno="526" lineno="526" func="Name(set)">
                  <Name fromlineno="526" tolineno="526" lineno="526" name="set"/>
                  <Name fromlineno="526" tolineno="526" lineno="526" name="depends"/>
                </CallFunc>
              </CallFunc>
            </Discard>
            <Discard fromlineno="527" tolineno="527" lineno="527">
              <CallFunc fromlineno="527" tolineno="527" lineno="527" func="Getattr(append)">
                <Getattr fromlineno="527" tolineno="527" lineno="527" attrname="append" expr="self.runq_revdeps">
                  <Getattr fromlineno="527" tolineno="527" lineno="527" attrname="runq_revdeps" expr="self">
                    <Name fromlineno="527" tolineno="527" lineno="527" name="self"/>
                  </Getattr>
                </Getattr>
                <CallFunc fromlineno="527" tolineno="527" lineno="527" func="Name(set)">
                  <Name fromlineno="527" tolineno="527" lineno="527" name="set"/>
                </CallFunc>
              </CallFunc>
            </Discard>
            <Discard fromlineno="529" tolineno="529" lineno="529">
              <CallFunc fromlineno="529" tolineno="529" lineno="529" func="Getattr(append)">
                <Getattr fromlineno="529" tolineno="529" lineno="529" attrname="append" expr="runq_build">
                  <Name fromlineno="529" tolineno="529" lineno="529" name="runq_build"/>
                </Getattr>
                <Const fromlineno="529" tolineno="529" lineno="529" type="int">0</Const>
              </CallFunc>
            </Discard>
          </For>
          <Discard fromlineno="537" tolineno="537" lineno="537">
            <CallFunc fromlineno="537" tolineno="537" lineno="537" func="Getattr(note)">
              <Getattr fromlineno="537" tolineno="537" lineno="537" attrname="note" expr="bb.msg">
                <Getattr fromlineno="537" tolineno="537" lineno="537" attrname="msg" expr="bb">
                  <Name fromlineno="537" tolineno="537" lineno="537" name="bb"/>
                </Getattr>
              </Getattr>
              <Const fromlineno="537" tolineno="537" lineno="537" type="int">2</Const>
              <Getattr fromlineno="537" tolineno="537" lineno="537" attrname="RunQueue" expr="bb.msg.domain">
                <Getattr fromlineno="537" tolineno="537" lineno="537" attrname="domain" expr="bb.msg">
                  <Getattr fromlineno="537" tolineno="537" lineno="537" attrname="msg" expr="bb">
                    <Name fromlineno="537" tolineno="537" lineno="537" name="bb"/>
                  </Getattr>
                </Getattr>
              </Getattr>
              <Const fromlineno="537" tolineno="537" lineno="537" type="str">'Marking Active Tasks'</Const>
            </CallFunc>
          </Discard>
          <Function fromlineno="539" tolineno="552" lineno="539">
            <Arguments fromlineno="539" tolineno="539" lineno="None" format_args="listid, depth">
              <AssName fromlineno="539" tolineno="539" lineno="539" name="listid"/>
              <AssName fromlineno="539" tolineno="539" lineno="539" name="depth"/>
            </Arguments>
            <If fromlineno="545" tolineno="546" lineno="545">
              <Compare fromlineno="545" tolineno="545" lineno="545" op="('==', &lt;Const(int) l.545 [bb.runqueue] at Ox9681fcc&gt;)">
                <Subscript fromlineno="545" tolineno="545" lineno="545">
                  <Name fromlineno="545" tolineno="545" lineno="545" name="runq_build"/>
                  <Index fromlineno="545" tolineno="545" lineno="None">
                    <Name fromlineno="545" tolineno="545" lineno="545" name="listid"/>
                  </Index>
                </Subscript>
                <Const fromlineno="545" tolineno="545" lineno="545" type="int">1</Const>
              </Compare>
              <Return fromlineno="546" tolineno="546" lineno="546"/>
            </If>
            <Assign fromlineno="548" tolineno="548" lineno="548" targets="[&lt;Subscript() l.548 [bb.runqueue] at Ox96850ac&gt;]" value="1">
              <Subscript fromlineno="548" tolineno="548" lineno="548">
                <Name fromlineno="548" tolineno="548" lineno="548" name="runq_build"/>
                <Index fromlineno="548" tolineno="548" lineno="None">
                  <Name fromlineno="548" tolineno="548" lineno="548" name="listid"/>
                </Index>
              </Subscript>
              <Const fromlineno="548" tolineno="548" lineno="548" type="int">1</Const>
            </Assign>
            <Assign fromlineno="550" tolineno="550" lineno="550" targets="[&lt;AssName(depends) l.550 [bb.runqueue] at Ox968518c&gt;]" value="self.runq_depends[listid]">
              <AssName fromlineno="550" tolineno="550" lineno="550" name="depends"/>
              <Subscript fromlineno="550" tolineno="550" lineno="550">
                <Getattr fromlineno="550" tolineno="550" lineno="550" attrname="runq_depends" expr="self">
                  <Name fromlineno="550" tolineno="550" lineno="550" name="self"/>
                </Getattr>
                <Index fromlineno="550" tolineno="550" lineno="None">
                  <Name fromlineno="550" tolineno="550" lineno="550" name="listid"/>
                </Index>
              </Subscript>
            </Assign>
            <For fromlineno="551" tolineno="552" lineno="551">
              <AssName fromlineno="551" tolineno="551" lineno="551" name="depend"/>
              <Name fromlineno="551" tolineno="551" lineno="551" name="depends"/>
              <Discard fromlineno="552" tolineno="552" lineno="552">
                <CallFunc fromlineno="552" tolineno="552" lineno="552" func="Name(mark_active)">
                  <Name fromlineno="552" tolineno="552" lineno="552" name="mark_active"/>
                  <Name fromlineno="552" tolineno="552" lineno="552" name="depend"/>
                  <BinOp fromlineno="552" tolineno="552" lineno="552" op="+" left="depth" right="1">
                    <Name fromlineno="552" tolineno="552" lineno="552" name="depth"/>
                    <Const fromlineno="552" tolineno="552" lineno="552" type="int">1</Const>
                  </BinOp>
                </CallFunc>
              </Discard>
            </For>
          </Function>
          <Assign fromlineno="554" tolineno="554" lineno="554" targets="[&lt;AssAttr(target_pairs) l.554 [bb.runqueue] at Ox968544c&gt;]" value="[]">
            <AssAttr fromlineno="554" tolineno="554" lineno="554" attrname="target_pairs" expr="self">
              <Name fromlineno="554" tolineno="554" lineno="554" name="self"/>
            </AssAttr>
            <List fromlineno="554" tolineno="554" lineno="554"/>
          </Assign>
          <For fromlineno="555" tolineno="581" lineno="555">
            <AssName fromlineno="555" tolineno="555" lineno="555" name="target"/>
            <Getattr fromlineno="555" tolineno="555" lineno="555" attrname="targets" expr="self">
              <Name fromlineno="555" tolineno="555" lineno="555" name="self"/>
            </Getattr>
            <Assign fromlineno="556" tolineno="556" lineno="556" targets="[&lt;AssName(targetid) l.556 [bb.runqueue] at Ox96855ec&gt;]" value="taskData.getbuild_id(target[0])">
              <AssName fromlineno="556" tolineno="556" lineno="556" name="targetid"/>
              <CallFunc fromlineno="556" tolineno="556" lineno="556" func="Getattr(getbuild_id)">
                <Getattr fromlineno="556" tolineno="556" lineno="556" attrname="getbuild_id" expr="taskData">
                  <Name fromlineno="556" tolineno="556" lineno="556" name="taskData"/>
                </Getattr>
                <Subscript fromlineno="556" tolineno="556" lineno="556">
                  <Name fromlineno="556" tolineno="556" lineno="556" name="target"/>
                  <Index fromlineno="556" tolineno="556" lineno="None">
                    <Const fromlineno="556" tolineno="556" lineno="556" type="int">0</Const>
                  </Index>
                </Subscript>
              </CallFunc>
            </Assign>
            <If fromlineno="558" tolineno="559" lineno="558">
              <Compare fromlineno="558" tolineno="558" lineno="558" op="('not in', &lt;Getattr(build_targets) l.558 [bb.runqueue] at Ox96857cc&gt;)">
                <Name fromlineno="558" tolineno="558" lineno="558" name="targetid"/>
                <Getattr fromlineno="558" tolineno="558" lineno="558" attrname="build_targets" expr="taskData">
                  <Name fromlineno="558" tolineno="558" lineno="558" name="taskData"/>
                </Getattr>
              </Compare>
              <Continue fromlineno="559" tolineno="559" lineno="559"/>
            </If>
            <If fromlineno="561" tolineno="562" lineno="561">
              <Compare fromlineno="561" tolineno="561" lineno="561" op="('in', &lt;Getattr(failed_deps) l.561 [bb.runqueue] at Ox968590c&gt;)">
                <Name fromlineno="561" tolineno="561" lineno="561" name="targetid"/>
                <Getattr fromlineno="561" tolineno="561" lineno="561" attrname="failed_deps" expr="taskData">
                  <Name fromlineno="561" tolineno="561" lineno="561" name="taskData"/>
                </Getattr>
              </Compare>
              <Continue fromlineno="562" tolineno="562" lineno="562"/>
            </If>
            <Assign fromlineno="564" tolineno="564" lineno="564" targets="[&lt;AssName(fnid) l.564 [bb.runqueue] at Ox96859ec&gt;]" value="taskData.build_targets[targetid][0]">
              <AssName fromlineno="564" tolineno="564" lineno="564" name="fnid"/>
              <Subscript fromlineno="564" tolineno="564" lineno="564">
                <Subscript fromlineno="564" tolineno="564" lineno="564">
                  <Getattr fromlineno="564" tolineno="564" lineno="564" attrname="build_targets" expr="taskData">
                    <Name fromlineno="564" tolineno="564" lineno="564" name="taskData"/>
                  </Getattr>
                  <Index fromlineno="564" tolineno="564" lineno="None">
                    <Name fromlineno="564" tolineno="564" lineno="564" name="targetid"/>
                  </Index>
                </Subscript>
                <Index fromlineno="564" tolineno="564" lineno="None">
                  <Const fromlineno="564" tolineno="564" lineno="564" type="int">0</Const>
                </Index>
              </Subscript>
            </Assign>
            <Assign fromlineno="565" tolineno="565" lineno="565" targets="[&lt;AssName(fn) l.565 [bb.runqueue] at Ox9685b4c&gt;]" value="taskData.fn_index[fnid]">
              <AssName fromlineno="565" tolineno="565" lineno="565" name="fn"/>
              <Subscript fromlineno="565" tolineno="565" lineno="565">
                <Getattr fromlineno="565" tolineno="565" lineno="565" attrname="fn_index" expr="taskData">
                  <Name fromlineno="565" tolineno="565" lineno="565" name="taskData"/>
                </Getattr>
                <Index fromlineno="565" tolineno="565" lineno="None">
                  <Name fromlineno="565" tolineno="565" lineno="565" name="fnid"/>
                </Index>
              </Subscript>
            </Assign>
            <Discard fromlineno="566" tolineno="566" lineno="566">
              <CallFunc fromlineno="566" tolineno="566" lineno="566" func="Getattr(append)">
                <Getattr fromlineno="566" tolineno="566" lineno="566" attrname="append" expr="self.target_pairs">
                  <Getattr fromlineno="566" tolineno="566" lineno="566" attrname="target_pairs" expr="self">
                    <Name fromlineno="566" tolineno="566" lineno="566" name="self"/>
                  </Getattr>
                </Getattr>
                <Tuple fromlineno="566" tolineno="566" lineno="566">
                  <Name fromlineno="566" tolineno="566" lineno="566" name="fn"/>
                  <Subscript fromlineno="566" tolineno="566" lineno="566">
                    <Name fromlineno="566" tolineno="566" lineno="566" name="target"/>
                    <Index fromlineno="566" tolineno="566" lineno="None">
                      <Const fromlineno="566" tolineno="566" lineno="566" type="int">1</Const>
                    </Index>
                  </Subscript>
                </Tuple>
              </CallFunc>
            </Discard>
            <If fromlineno="569" tolineno="571" lineno="569">
              <Getattr fromlineno="569" tolineno="569" lineno="569" attrname="force" expr="self.cooker.configuration">
                <Getattr fromlineno="569" tolineno="569" lineno="569" attrname="configuration" expr="self.cooker">
                  <Getattr fromlineno="569" tolineno="569" lineno="569" attrname="cooker" expr="self">
                    <Name fromlineno="569" tolineno="569" lineno="569" name="self"/>
                  </Getattr>
                </Getattr>
              </Getattr>
              <Discard fromlineno="570" tolineno="570" lineno="570">
                <CallFunc fromlineno="570" tolineno="570" lineno="570" func="Getattr(note)">
                  <Getattr fromlineno="570" tolineno="570" lineno="570" attrname="note" expr="bb.msg">
                    <Getattr fromlineno="570" tolineno="570" lineno="570" attrname="msg" expr="bb">
                      <Name fromlineno="570" tolineno="570" lineno="570" name="bb"/>
                    </Getattr>
                  </Getattr>
                  <Const fromlineno="570" tolineno="570" lineno="570" type="int">2</Const>
                  <Getattr fromlineno="570" tolineno="570" lineno="570" attrname="RunQueue" expr="bb.msg.domain">
                    <Getattr fromlineno="570" tolineno="570" lineno="570" attrname="domain" expr="bb.msg">
                      <Getattr fromlineno="570" tolineno="570" lineno="570" attrname="msg" expr="bb">
                        <Name fromlineno="570" tolineno="570" lineno="570" name="bb"/>
                      </Getattr>
                    </Getattr>
                  </Getattr>
                  <BinOp fromlineno="570" tolineno="570" lineno="570" op="%" left="'Remove stamp %s, %s'" right="(target[1], fn)">
                    <Const fromlineno="570" tolineno="570" lineno="570" type="str">'Remove stamp %s, %s'</Const>
                    <Tuple fromlineno="570" tolineno="570" lineno="570">
                      <Subscript fromlineno="570" tolineno="570" lineno="570">
                        <Name fromlineno="570" tolineno="570" lineno="570" name="target"/>
                        <Index fromlineno="570" tolineno="570" lineno="None">
                          <Const fromlineno="570" tolineno="570" lineno="570" type="int">1</Const>
                        </Index>
                      </Subscript>
                      <Name fromlineno="570" tolineno="570" lineno="570" name="fn"/>
                    </Tuple>
                  </BinOp>
                </CallFunc>
              </Discard>
              <Discard fromlineno="571" tolineno="571" lineno="571">
                <CallFunc fromlineno="571" tolineno="571" lineno="571" func="Getattr(del_stamp)">
                  <Getattr fromlineno="571" tolineno="571" lineno="571" attrname="del_stamp" expr="bb.build">
                    <Getattr fromlineno="571" tolineno="571" lineno="571" attrname="build" expr="bb">
                      <Name fromlineno="571" tolineno="571" lineno="571" name="bb"/>
                    </Getattr>
                  </Getattr>
                  <Subscript fromlineno="571" tolineno="571" lineno="571">
                    <Name fromlineno="571" tolineno="571" lineno="571" name="target"/>
                    <Index fromlineno="571" tolineno="571" lineno="None">
                      <Const fromlineno="571" tolineno="571" lineno="571" type="int">1</Const>
                    </Index>
                  </Subscript>
                  <Getattr fromlineno="571" tolineno="571" lineno="571" attrname="dataCache" expr="self">
                    <Name fromlineno="571" tolineno="571" lineno="571" name="self"/>
                  </Getattr>
                  <Name fromlineno="571" tolineno="571" lineno="571" name="fn"/>
                </CallFunc>
              </Discard>
            </If>
            <If fromlineno="573" tolineno="574" lineno="573">
              <Compare fromlineno="573" tolineno="573" lineno="573" op="('in', &lt;Getattr(failed_fnids) l.573 [bb.runqueue] at Ox968a36c&gt;)">
                <Name fromlineno="573" tolineno="573" lineno="573" name="fnid"/>
                <Getattr fromlineno="573" tolineno="573" lineno="573" attrname="failed_fnids" expr="taskData">
                  <Name fromlineno="573" tolineno="573" lineno="573" name="taskData"/>
                </Getattr>
              </Compare>
              <Continue fromlineno="574" tolineno="574" lineno="574"/>
            </If>
            <If fromlineno="576" tolineno="577" lineno="576">
              <Compare fromlineno="576" tolineno="576" lineno="576" op="('not in', &lt;Subscript() l.576 [bb.runqueue] at Ox968a50c&gt;)">
                <Subscript fromlineno="576" tolineno="576" lineno="576">
                  <Name fromlineno="576" tolineno="576" lineno="576" name="target"/>
                  <Index fromlineno="576" tolineno="576" lineno="None">
                    <Const fromlineno="576" tolineno="576" lineno="576" type="int">1</Const>
                  </Index>
                </Subscript>
                <Subscript fromlineno="576" tolineno="576" lineno="576">
                  <Getattr fromlineno="576" tolineno="576" lineno="576" attrname="tasks_lookup" expr="taskData">
                    <Name fromlineno="576" tolineno="576" lineno="576" name="taskData"/>
                  </Getattr>
                  <Index fromlineno="576" tolineno="576" lineno="None">
                    <Name fromlineno="576" tolineno="576" lineno="576" name="fnid"/>
                  </Index>
                </Subscript>
              </Compare>
              <Discard fromlineno="577" tolineno="577" lineno="577">
                <CallFunc fromlineno="577" tolineno="577" lineno="577" func="Getattr(fatal)">
                  <Getattr fromlineno="577" tolineno="577" lineno="577" attrname="fatal" expr="bb.msg">
                    <Getattr fromlineno="577" tolineno="577" lineno="577" attrname="msg" expr="bb">
                      <Name fromlineno="577" tolineno="577" lineno="577" name="bb"/>
                    </Getattr>
                  </Getattr>
                  <Getattr fromlineno="577" tolineno="577" lineno="577" attrname="RunQueue" expr="bb.msg.domain">
                    <Getattr fromlineno="577" tolineno="577" lineno="577" attrname="domain" expr="bb.msg">
                      <Getattr fromlineno="577" tolineno="577" lineno="577" attrname="msg" expr="bb">
                        <Name fromlineno="577" tolineno="577" lineno="577" name="bb"/>
                      </Getattr>
                    </Getattr>
                  </Getattr>
                  <BinOp fromlineno="577" tolineno="577" lineno="577" op="%" left="'Task %s does not exist for target %s'" right="(target[1], target[0])">
                    <Const fromlineno="577" tolineno="577" lineno="577" type="str">'Task %s does not exist for target %s'</Const>
                    <Tuple fromlineno="577" tolineno="577" lineno="577">
                      <Subscript fromlineno="577" tolineno="577" lineno="577">
                        <Name fromlineno="577" tolineno="577" lineno="577" name="target"/>
                        <Index fromlineno="577" tolineno="577" lineno="None">
                          <Const fromlineno="577" tolineno="577" lineno="577" type="int">1</Const>
                        </Index>
                      </Subscript>
                      <Subscript fromlineno="577" tolineno="577" lineno="577">
                        <Name fromlineno="577" tolineno="577" lineno="577" name="target"/>
                        <Index fromlineno="577" tolineno="577" lineno="None">
                          <Const fromlineno="577" tolineno="577" lineno="577" type="int">0</Const>
                        </Index>
                      </Subscript>
                    </Tuple>
                  </BinOp>
                </CallFunc>
              </Discard>
            </If>
            <Assign fromlineno="579" tolineno="579" lineno="579" targets="[&lt;AssName(listid) l.579 [bb.runqueue] at Ox968a8ec&gt;]" value="taskData.tasks_lookup[fnid][target[1]]">
              <AssName fromlineno="579" tolineno="579" lineno="579" name="listid"/>
              <Subscript fromlineno="579" tolineno="579" lineno="579">
                <Subscript fromlineno="579" tolineno="579" lineno="579">
                  <Getattr fromlineno="579" tolineno="579" lineno="579" attrname="tasks_lookup" expr="taskData">
                    <Name fromlineno="579" tolineno="579" lineno="579" name="taskData"/>
                  </Getattr>
                  <Index fromlineno="579" tolineno="579" lineno="None">
                    <Name fromlineno="579" tolineno="579" lineno="579" name="fnid"/>
                  </Index>
                </Subscript>
                <Index fromlineno="579" tolineno="579" lineno="None">
                  <Subscript fromlineno="579" tolineno="579" lineno="579">
                    <Name fromlineno="579" tolineno="579" lineno="579" name="target"/>
                    <Index fromlineno="579" tolineno="579" lineno="None">
                      <Const fromlineno="579" tolineno="579" lineno="579" type="int">1</Const>
                    </Index>
                  </Subscript>
                </Index>
              </Subscript>
            </Assign>
            <Discard fromlineno="581" tolineno="581" lineno="581">
              <CallFunc fromlineno="581" tolineno="581" lineno="581" func="Name(mark_active)">
                <Name fromlineno="581" tolineno="581" lineno="581" name="mark_active"/>
                <Name fromlineno="581" tolineno="581" lineno="581" name="listid"/>
                <Const fromlineno="581" tolineno="581" lineno="581" type="int">1</Const>
              </CallFunc>
            </Discard>
          </For>
          <Assign fromlineno="587" tolineno="587" lineno="587" targets="[&lt;AssName(maps) l.587 [bb.runqueue] at Ox968ab8c&gt;]" value="[]">
            <AssName fromlineno="587" tolineno="587" lineno="587" name="maps"/>
            <List fromlineno="587" tolineno="587" lineno="587"/>
          </Assign>
          <Assign fromlineno="588" tolineno="588" lineno="588" targets="[&lt;AssName(delcount) l.588 [bb.runqueue] at Ox968ac4c&gt;]" value="0">
            <AssName fromlineno="588" tolineno="588" lineno="588" name="delcount"/>
            <Const fromlineno="588" tolineno="588" lineno="588" type="int">0</Const>
          </Assign>
          <For fromlineno="589" tolineno="599" lineno="589">
            <AssName fromlineno="589" tolineno="589" lineno="589" name="listid"/>
            <CallFunc fromlineno="589" tolineno="589" lineno="589" func="Name(range)">
              <Name fromlineno="589" tolineno="589" lineno="589" name="range"/>
              <CallFunc fromlineno="589" tolineno="589" lineno="589" func="Name(len)">
                <Name fromlineno="589" tolineno="589" lineno="589" name="len"/>
                <Getattr fromlineno="589" tolineno="589" lineno="589" attrname="runq_fnid" expr="self">
                  <Name fromlineno="589" tolineno="589" lineno="589" name="self"/>
                </Getattr>
              </CallFunc>
            </CallFunc>
            <If fromlineno="590" tolineno="599" lineno="590">
              <Compare fromlineno="590" tolineno="590" lineno="590" op="('==', &lt;Const(int) l.590 [bb.runqueue] at Ox968af6c&gt;)">
                <Subscript fromlineno="590" tolineno="590" lineno="590">
                  <Name fromlineno="590" tolineno="590" lineno="590" name="runq_build"/>
                  <Index fromlineno="590" tolineno="590" lineno="None">
                    <BinOp fromlineno="590" tolineno="590" lineno="590" op="-" left="listid" right="delcount">
                      <Name fromlineno="590" tolineno="590" lineno="590" name="listid"/>
                      <Name fromlineno="590" tolineno="590" lineno="590" name="delcount"/>
                    </BinOp>
                  </Index>
                </Subscript>
                <Const fromlineno="590" tolineno="590" lineno="590" type="int">1</Const>
              </Compare>
              <Discard fromlineno="591" tolineno="591" lineno="591">
                <CallFunc fromlineno="591" tolineno="591" lineno="591" func="Getattr(append)">
                  <Getattr fromlineno="591" tolineno="591" lineno="591" attrname="append" expr="maps">
                    <Name fromlineno="591" tolineno="591" lineno="591" name="maps"/>
                  </Getattr>
                  <BinOp fromlineno="591" tolineno="591" lineno="591" op="-" left="listid" right="delcount">
                    <Name fromlineno="591" tolineno="591" lineno="591" name="listid"/>
                    <Name fromlineno="591" tolineno="591" lineno="591" name="delcount"/>
                  </BinOp>
                </CallFunc>
              </Discard>
              <Delete fromlineno="593" tolineno="593" lineno="593">
                <Subscript fromlineno="593" tolineno="593" lineno="593">
                  <Getattr fromlineno="593" tolineno="593" lineno="593" attrname="runq_fnid" expr="self">
                    <Name fromlineno="593" tolineno="593" lineno="593" name="self"/>
                  </Getattr>
                  <Index fromlineno="593" tolineno="593" lineno="None">
                    <BinOp fromlineno="593" tolineno="593" lineno="593" op="-" left="listid" right="delcount">
                      <Name fromlineno="593" tolineno="593" lineno="593" name="listid"/>
                      <Name fromlineno="593" tolineno="593" lineno="593" name="delcount"/>
                    </BinOp>
                  </Index>
                </Subscript>
              </Delete>
              <Delete fromlineno="594" tolineno="594" lineno="594">
                <Subscript fromlineno="594" tolineno="594" lineno="594">
                  <Getattr fromlineno="594" tolineno="594" lineno="594" attrname="runq_task" expr="self">
                    <Name fromlineno="594" tolineno="594" lineno="594" name="self"/>
                  </Getattr>
                  <Index fromlineno="594" tolineno="594" lineno="None">
                    <BinOp fromlineno="594" tolineno="594" lineno="594" op="-" left="listid" right="delcount">
                      <Name fromlineno="594" tolineno="594" lineno="594" name="listid"/>
                      <Name fromlineno="594" tolineno="594" lineno="594" name="delcount"/>
                    </BinOp>
                  </Index>
                </Subscript>
              </Delete>
              <Delete fromlineno="595" tolineno="595" lineno="595">
                <Subscript fromlineno="595" tolineno="595" lineno="595">
                  <Getattr fromlineno="595" tolineno="595" lineno="595" attrname="runq_depends" expr="self">
                    <Name fromlineno="595" tolineno="595" lineno="595" name="self"/>
                  </Getattr>
                  <Index fromlineno="595" tolineno="595" lineno="None">
                    <BinOp fromlineno="595" tolineno="595" lineno="595" op="-" left="listid" right="delcount">
                      <Name fromlineno="595" tolineno="595" lineno="595" name="listid"/>
                      <Name fromlineno="595" tolineno="595" lineno="595" name="delcount"/>
                    </BinOp>
                  </Index>
                </Subscript>
              </Delete>
              <Delete fromlineno="596" tolineno="596" lineno="596">
                <Subscript fromlineno="596" tolineno="596" lineno="596">
                  <Name fromlineno="596" tolineno="596" lineno="596" name="runq_build"/>
                  <Index fromlineno="596" tolineno="596" lineno="None">
                    <BinOp fromlineno="596" tolineno="596" lineno="596" op="-" left="listid" right="delcount">
                      <Name fromlineno="596" tolineno="596" lineno="596" name="listid"/>
                      <Name fromlineno="596" tolineno="596" lineno="596" name="delcount"/>
                    </BinOp>
                  </Index>
                </Subscript>
              </Delete>
              <Delete fromlineno="597" tolineno="597" lineno="597">
                <Subscript fromlineno="597" tolineno="597" lineno="597">
                  <Getattr fromlineno="597" tolineno="597" lineno="597" attrname="runq_revdeps" expr="self">
                    <Name fromlineno="597" tolineno="597" lineno="597" name="self"/>
                  </Getattr>
                  <Index fromlineno="597" tolineno="597" lineno="None">
                    <BinOp fromlineno="597" tolineno="597" lineno="597" op="-" left="listid" right="delcount">
                      <Name fromlineno="597" tolineno="597" lineno="597" name="listid"/>
                      <Name fromlineno="597" tolineno="597" lineno="597" name="delcount"/>
                    </BinOp>
                  </Index>
                </Subscript>
              </Delete>
              <Assign fromlineno="598" tolineno="598" lineno="598" targets="[&lt;AssName(delcount) l.598 [bb.runqueue] at Ox968e6cc&gt;]" value="(delcount) + (1)">
                <AssName fromlineno="598" tolineno="598" lineno="598" name="delcount"/>
                <BinOp fromlineno="598" tolineno="598" lineno="598" op="+" left="delcount" right="1">
                  <Name fromlineno="598" tolineno="598" lineno="598" name="delcount"/>
                  <Const fromlineno="598" tolineno="598" lineno="598" type="int">1</Const>
                </BinOp>
              </Assign>
              <Discard fromlineno="599" tolineno="599" lineno="599">
                <CallFunc fromlineno="599" tolineno="599" lineno="599" func="Getattr(append)">
                  <Getattr fromlineno="599" tolineno="599" lineno="599" attrname="append" expr="maps">
                    <Name fromlineno="599" tolineno="599" lineno="599" name="maps"/>
                  </Getattr>
                  <Const fromlineno="599" tolineno="599" lineno="599" type="int">-1</Const>
                </CallFunc>
              </Discard>
            </If>
          </For>
          <If fromlineno="606" tolineno="610" lineno="606">
            <Compare fromlineno="606" tolineno="606" lineno="606" op="('==', &lt;Const(int) l.606 [bb.runqueue] at Ox968e90c&gt;)">
              <CallFunc fromlineno="606" tolineno="606" lineno="606" func="Name(len)">
                <Name fromlineno="606" tolineno="606" lineno="606" name="len"/>
                <Getattr fromlineno="606" tolineno="606" lineno="606" attrname="runq_fnid" expr="self">
                  <Name fromlineno="606" tolineno="606" lineno="606" name="self"/>
                </Getattr>
              </CallFunc>
              <Const fromlineno="606" tolineno="606" lineno="606" type="int">0</Const>
            </Compare>
            <If fromlineno="607" tolineno="610" lineno="607">
              <UnaryOp fromlineno="607" tolineno="607" lineno="607">
                <Getattr fromlineno="607" tolineno="607" lineno="607" attrname="abort" expr="taskData">
                  <Name fromlineno="607" tolineno="607" lineno="607" name="taskData"/>
                </Getattr>
              </UnaryOp>
              <Discard fromlineno="608" tolineno="608" lineno="608">
                <CallFunc fromlineno="608" tolineno="608" lineno="608" func="Getattr(fatal)">
                  <Getattr fromlineno="608" tolineno="608" lineno="608" attrname="fatal" expr="bb.msg">
                    <Getattr fromlineno="608" tolineno="608" lineno="608" attrname="msg" expr="bb">
                      <Name fromlineno="608" tolineno="608" lineno="608" name="bb"/>
                    </Getattr>
                  </Getattr>
                  <Getattr fromlineno="608" tolineno="608" lineno="608" attrname="RunQueue" expr="bb.msg.domain">
                    <Getattr fromlineno="608" tolineno="608" lineno="608" attrname="domain" expr="bb.msg">
                      <Getattr fromlineno="608" tolineno="608" lineno="608" attrname="msg" expr="bb">
                        <Name fromlineno="608" tolineno="608" lineno="608" name="bb"/>
                      </Getattr>
                    </Getattr>
                  </Getattr>
                  <Const fromlineno="608" tolineno="608" lineno="608" type="str">'All buildable tasks have been run but the build is incomplete (--continue mode). Errors for the tasks that failed will have been printed above.'</Const>
                </CallFunc>
              </Discard>
              <Discard fromlineno="610" tolineno="610" lineno="610">
                <CallFunc fromlineno="610" tolineno="610" lineno="610" func="Getattr(fatal)">
                  <Getattr fromlineno="610" tolineno="610" lineno="610" attrname="fatal" expr="bb.msg">
                    <Getattr fromlineno="610" tolineno="610" lineno="610" attrname="msg" expr="bb">
                      <Name fromlineno="610" tolineno="610" lineno="610" name="bb"/>
                    </Getattr>
                  </Getattr>
                  <Getattr fromlineno="610" tolineno="610" lineno="610" attrname="RunQueue" expr="bb.msg.domain">
                    <Getattr fromlineno="610" tolineno="610" lineno="610" attrname="domain" expr="bb.msg">
                      <Getattr fromlineno="610" tolineno="610" lineno="610" attrname="msg" expr="bb">
                        <Name fromlineno="610" tolineno="610" lineno="610" name="bb"/>
                      </Getattr>
                    </Getattr>
                  </Getattr>
                  <Const fromlineno="610" tolineno="610" lineno="610" type="str">'No active tasks and not in --continue mode?! Please report this bug.'</Const>
                </CallFunc>
              </Discard>
            </If>
          </If>
          <Discard fromlineno="612" tolineno="612" lineno="612">
            <CallFunc fromlineno="612" tolineno="612" lineno="612" func="Getattr(note)">
              <Getattr fromlineno="612" tolineno="612" lineno="612" attrname="note" expr="bb.msg">
                <Getattr fromlineno="612" tolineno="612" lineno="612" attrname="msg" expr="bb">
                  <Name fromlineno="612" tolineno="612" lineno="612" name="bb"/>
                </Getattr>
              </Getattr>
              <Const fromlineno="612" tolineno="612" lineno="612" type="int">2</Const>
              <Getattr fromlineno="612" tolineno="612" lineno="612" attrname="RunQueue" expr="bb.msg.domain">
                <Getattr fromlineno="612" tolineno="612" lineno="612" attrname="domain" expr="bb.msg">
                  <Getattr fromlineno="612" tolineno="612" lineno="612" attrname="msg" expr="bb">
                    <Name fromlineno="612" tolineno="612" lineno="612" name="bb"/>
                  </Getattr>
                </Getattr>
              </Getattr>
              <BinOp fromlineno="612" tolineno="612" lineno="612" op="%" left="'Pruned %s inactive tasks, %s left'" right="(delcount, len(self.runq_fnid))">
                <Const fromlineno="612" tolineno="612" lineno="612" type="str">'Pruned %s inactive tasks, %s left'</Const>
                <Tuple fromlineno="612" tolineno="612" lineno="612">
                  <Name fromlineno="612" tolineno="612" lineno="612" name="delcount"/>
                  <CallFunc fromlineno="612" tolineno="612" lineno="612" func="Name(len)">
                    <Name fromlineno="612" tolineno="612" lineno="612" name="len"/>
                    <Getattr fromlineno="612" tolineno="612" lineno="612" attrname="runq_fnid" expr="self">
                      <Name fromlineno="612" tolineno="612" lineno="612" name="self"/>
                    </Getattr>
                  </CallFunc>
                </Tuple>
              </BinOp>
            </CallFunc>
          </Discard>
          <For fromlineno="616" tolineno="623" lineno="616">
            <AssName fromlineno="616" tolineno="616" lineno="616" name="listid"/>
            <CallFunc fromlineno="616" tolineno="616" lineno="616" func="Name(range)">
              <Name fromlineno="616" tolineno="616" lineno="616" name="range"/>
              <CallFunc fromlineno="616" tolineno="616" lineno="616" func="Name(len)">
                <Name fromlineno="616" tolineno="616" lineno="616" name="len"/>
                <Getattr fromlineno="616" tolineno="616" lineno="616" attrname="runq_fnid" expr="self">
                  <Name fromlineno="616" tolineno="616" lineno="616" name="self"/>
                </Getattr>
              </CallFunc>
            </CallFunc>
            <Assign fromlineno="617" tolineno="617" lineno="617" targets="[&lt;AssName(newdeps) l.617 [bb.runqueue] at Ox969316c&gt;]" value="[]">
              <AssName fromlineno="617" tolineno="617" lineno="617" name="newdeps"/>
              <List fromlineno="617" tolineno="617" lineno="617"/>
            </Assign>
            <Assign fromlineno="618" tolineno="618" lineno="618" targets="[&lt;AssName(origdeps) l.618 [bb.runqueue] at Ox969322c&gt;]" value="self.runq_depends[listid]">
              <AssName fromlineno="618" tolineno="618" lineno="618" name="origdeps"/>
              <Subscript fromlineno="618" tolineno="618" lineno="618">
                <Getattr fromlineno="618" tolineno="618" lineno="618" attrname="runq_depends" expr="self">
                  <Name fromlineno="618" tolineno="618" lineno="618" name="self"/>
                </Getattr>
                <Index fromlineno="618" tolineno="618" lineno="None">
                  <Name fromlineno="618" tolineno="618" lineno="618" name="listid"/>
                </Index>
              </Subscript>
            </Assign>
            <For fromlineno="619" tolineno="622" lineno="619">
              <AssName fromlineno="619" tolineno="619" lineno="619" name="origdep"/>
              <Name fromlineno="619" tolineno="619" lineno="619" name="origdeps"/>
              <If fromlineno="620" tolineno="621" lineno="620">
                <Compare fromlineno="620" tolineno="620" lineno="620" op="('==', &lt;Const(int) l.620 [bb.runqueue] at Ox96934cc&gt;)">
                  <Subscript fromlineno="620" tolineno="620" lineno="620">
                    <Name fromlineno="620" tolineno="620" lineno="620" name="maps"/>
                    <Index fromlineno="620" tolineno="620" lineno="None">
                      <Name fromlineno="620" tolineno="620" lineno="620" name="origdep"/>
                    </Index>
                  </Subscript>
                  <Const fromlineno="620" tolineno="620" lineno="620" type="int">-1</Const>
                </Compare>
                <Discard fromlineno="621" tolineno="621" lineno="621">
                  <CallFunc fromlineno="621" tolineno="621" lineno="621" func="Getattr(fatal)">
                    <Getattr fromlineno="621" tolineno="621" lineno="621" attrname="fatal" expr="bb.msg">
                      <Getattr fromlineno="621" tolineno="621" lineno="621" attrname="msg" expr="bb">
                        <Name fromlineno="621" tolineno="621" lineno="621" name="bb"/>
                      </Getattr>
                    </Getattr>
                    <Getattr fromlineno="621" tolineno="621" lineno="621" attrname="RunQueue" expr="bb.msg.domain">
                      <Getattr fromlineno="621" tolineno="621" lineno="621" attrname="domain" expr="bb.msg">
                        <Getattr fromlineno="621" tolineno="621" lineno="621" attrname="msg" expr="bb">
                          <Name fromlineno="621" tolineno="621" lineno="621" name="bb"/>
                        </Getattr>
                      </Getattr>
                    </Getattr>
                    <Const fromlineno="621" tolineno="621" lineno="621" type="str">'Invalid mapping - Should never happen!'</Const>
                  </CallFunc>
                </Discard>
              </If>
              <Discard fromlineno="622" tolineno="622" lineno="622">
                <CallFunc fromlineno="622" tolineno="622" lineno="622" func="Getattr(append)">
                  <Getattr fromlineno="622" tolineno="622" lineno="622" attrname="append" expr="newdeps">
                    <Name fromlineno="622" tolineno="622" lineno="622" name="newdeps"/>
                  </Getattr>
                  <Subscript fromlineno="622" tolineno="622" lineno="622">
                    <Name fromlineno="622" tolineno="622" lineno="622" name="maps"/>
                    <Index fromlineno="622" tolineno="622" lineno="None">
                      <Name fromlineno="622" tolineno="622" lineno="622" name="origdep"/>
                    </Index>
                  </Subscript>
                </CallFunc>
              </Discard>
            </For>
            <Assign fromlineno="623" tolineno="623" lineno="623" targets="[&lt;Subscript() l.623 [bb.runqueue] at Ox96937ec&gt;]" value="set(newdeps)">
              <Subscript fromlineno="623" tolineno="623" lineno="623">
                <Getattr fromlineno="623" tolineno="623" lineno="623" attrname="runq_depends" expr="self">
                  <Name fromlineno="623" tolineno="623" lineno="623" name="self"/>
                </Getattr>
                <Index fromlineno="623" tolineno="623" lineno="None">
                  <Name fromlineno="623" tolineno="623" lineno="623" name="listid"/>
                </Index>
              </Subscript>
              <CallFunc fromlineno="623" tolineno="623" lineno="623" func="Name(set)">
                <Name fromlineno="623" tolineno="623" lineno="623" name="set"/>
                <Name fromlineno="623" tolineno="623" lineno="623" name="newdeps"/>
              </CallFunc>
            </Assign>
          </For>
          <Discard fromlineno="625" tolineno="625" lineno="625">
            <CallFunc fromlineno="625" tolineno="625" lineno="625" func="Getattr(note)">
              <Getattr fromlineno="625" tolineno="625" lineno="625" attrname="note" expr="bb.msg">
                <Getattr fromlineno="625" tolineno="625" lineno="625" attrname="msg" expr="bb">
                  <Name fromlineno="625" tolineno="625" lineno="625" name="bb"/>
                </Getattr>
              </Getattr>
              <Const fromlineno="625" tolineno="625" lineno="625" type="int">2</Const>
              <Getattr fromlineno="625" tolineno="625" lineno="625" attrname="RunQueue" expr="bb.msg.domain">
                <Getattr fromlineno="625" tolineno="625" lineno="625" attrname="domain" expr="bb.msg">
                  <Getattr fromlineno="625" tolineno="625" lineno="625" attrname="msg" expr="bb">
                    <Name fromlineno="625" tolineno="625" lineno="625" name="bb"/>
                  </Getattr>
                </Getattr>
              </Getattr>
              <Const fromlineno="625" tolineno="625" lineno="625" type="str">'Assign Weightings'</Const>
            </CallFunc>
          </Discard>
          <For fromlineno="628" tolineno="630" lineno="628">
            <AssName fromlineno="628" tolineno="628" lineno="628" name="listid"/>
            <CallFunc fromlineno="628" tolineno="628" lineno="628" func="Name(range)">
              <Name fromlineno="628" tolineno="628" lineno="628" name="range"/>
              <CallFunc fromlineno="628" tolineno="628" lineno="628" func="Name(len)">
                <Name fromlineno="628" tolineno="628" lineno="628" name="len"/>
                <Getattr fromlineno="628" tolineno="628" lineno="628" attrname="runq_fnid" expr="self">
                  <Name fromlineno="628" tolineno="628" lineno="628" name="self"/>
                </Getattr>
              </CallFunc>
            </CallFunc>
            <For fromlineno="629" tolineno="630" lineno="629">
              <AssName fromlineno="629" tolineno="629" lineno="629" name="dep"/>
              <Subscript fromlineno="629" tolineno="629" lineno="629">
                <Getattr fromlineno="629" tolineno="629" lineno="629" attrname="runq_depends" expr="self">
                  <Name fromlineno="629" tolineno="629" lineno="629" name="self"/>
                </Getattr>
                <Index fromlineno="629" tolineno="629" lineno="None">
                  <Name fromlineno="629" tolineno="629" lineno="629" name="listid"/>
                </Index>
              </Subscript>
              <Discard fromlineno="630" tolineno="630" lineno="630">
                <CallFunc fromlineno="630" tolineno="630" lineno="630" func="Getattr(add)">
                  <Getattr fromlineno="630" tolineno="630" lineno="630" attrname="add" expr="self.runq_revdeps[dep]">
                    <Subscript fromlineno="630" tolineno="630" lineno="630">
                      <Getattr fromlineno="630" tolineno="630" lineno="630" attrname="runq_revdeps" expr="self">
                        <Name fromlineno="630" tolineno="630" lineno="630" name="self"/>
                      </Getattr>
                      <Index fromlineno="630" tolineno="630" lineno="None">
                        <Name fromlineno="630" tolineno="630" lineno="630" name="dep"/>
                      </Index>
                    </Subscript>
                  </Getattr>
                  <Name fromlineno="630" tolineno="630" lineno="630" name="listid"/>
                </CallFunc>
              </Discard>
            </For>
          </For>
          <Assign fromlineno="634" tolineno="634" lineno="634" targets="[&lt;AssName(endpoints) l.634 [bb.runqueue] at Ox9693eac&gt;]" value="[]">
            <AssName fromlineno="634" tolineno="634" lineno="634" name="endpoints"/>
            <List fromlineno="634" tolineno="634" lineno="634"/>
          </Assign>
          <For fromlineno="635" tolineno="642" lineno="635">
            <AssName fromlineno="635" tolineno="635" lineno="635" name="listid"/>
            <CallFunc fromlineno="635" tolineno="635" lineno="635" func="Name(range)">
              <Name fromlineno="635" tolineno="635" lineno="635" name="range"/>
              <CallFunc fromlineno="635" tolineno="635" lineno="635" func="Name(len)">
                <Name fromlineno="635" tolineno="635" lineno="635" name="len"/>
                <Getattr fromlineno="635" tolineno="635" lineno="635" attrname="runq_fnid" expr="self">
                  <Name fromlineno="635" tolineno="635" lineno="635" name="self"/>
                </Getattr>
              </CallFunc>
            </CallFunc>
            <Assign fromlineno="636" tolineno="636" lineno="636" targets="[&lt;AssName(revdeps) l.636 [bb.runqueue] at Ox969710c&gt;]" value="self.runq_revdeps[listid]">
              <AssName fromlineno="636" tolineno="636" lineno="636" name="revdeps"/>
              <Subscript fromlineno="636" tolineno="636" lineno="636">
                <Getattr fromlineno="636" tolineno="636" lineno="636" attrname="runq_revdeps" expr="self">
                  <Name fromlineno="636" tolineno="636" lineno="636" name="self"/>
                </Getattr>
                <Index fromlineno="636" tolineno="636" lineno="None">
                  <Name fromlineno="636" tolineno="636" lineno="636" name="listid"/>
                </Index>
              </Subscript>
            </Assign>
            <If fromlineno="637" tolineno="638" lineno="637">
              <Compare fromlineno="637" tolineno="637" lineno="637" op="('==', &lt;Const(int) l.637 [bb.runqueue] at Ox96972ec&gt;)">
                <CallFunc fromlineno="637" tolineno="637" lineno="637" func="Name(len)">
                  <Name fromlineno="637" tolineno="637" lineno="637" name="len"/>
                  <Name fromlineno="637" tolineno="637" lineno="637" name="revdeps"/>
                </CallFunc>
                <Const fromlineno="637" tolineno="637" lineno="637" type="int">0</Const>
              </Compare>
              <Discard fromlineno="638" tolineno="638" lineno="638">
                <CallFunc fromlineno="638" tolineno="638" lineno="638" func="Getattr(append)">
                  <Getattr fromlineno="638" tolineno="638" lineno="638" attrname="append" expr="endpoints">
                    <Name fromlineno="638" tolineno="638" lineno="638" name="endpoints"/>
                  </Getattr>
                  <Name fromlineno="638" tolineno="638" lineno="638" name="listid"/>
                </CallFunc>
              </Discard>
            </If>
            <For fromlineno="639" tolineno="642" lineno="639">
              <AssName fromlineno="639" tolineno="639" lineno="639" name="dep"/>
              <Name fromlineno="639" tolineno="639" lineno="639" name="revdeps"/>
              <If fromlineno="640" tolineno="642" lineno="640">
                <Compare fromlineno="640" tolineno="640" lineno="640" op="('in', &lt;Subscript() l.640 [bb.runqueue] at Ox969754c&gt;)">
                  <Name fromlineno="640" tolineno="640" lineno="640" name="dep"/>
                  <Subscript fromlineno="640" tolineno="640" lineno="640">
                    <Getattr fromlineno="640" tolineno="640" lineno="640" attrname="runq_depends" expr="self">
                      <Name fromlineno="640" tolineno="640" lineno="640" name="self"/>
                    </Getattr>
                    <Index fromlineno="640" tolineno="640" lineno="None">
                      <Name fromlineno="640" tolineno="640" lineno="640" name="listid"/>
                    </Index>
                  </Subscript>
                </Compare>
                <Discard fromlineno="642" tolineno="642" lineno="642">
                  <CallFunc fromlineno="642" tolineno="642" lineno="642" func="Getattr(fatal)">
                    <Getattr fromlineno="642" tolineno="642" lineno="642" attrname="fatal" expr="bb.msg">
                      <Getattr fromlineno="642" tolineno="642" lineno="642" attrname="msg" expr="bb">
                        <Name fromlineno="642" tolineno="642" lineno="642" name="bb"/>
                      </Getattr>
                    </Getattr>
                    <Getattr fromlineno="642" tolineno="642" lineno="642" attrname="RunQueue" expr="bb.msg.domain">
                      <Getattr fromlineno="642" tolineno="642" lineno="642" attrname="domain" expr="bb.msg">
                        <Getattr fromlineno="642" tolineno="642" lineno="642" attrname="msg" expr="bb">
                          <Name fromlineno="642" tolineno="642" lineno="642" name="bb"/>
                        </Getattr>
                      </Getattr>
                    </Getattr>
                    <BinOp fromlineno="642" tolineno="642" lineno="642" op="%" left="'Task %s (%s) has circular dependency on %s (%s)'" right="(taskData.fn_index[self.runq_fnid[dep]], self.runq_task[dep], taskData.fn_index[self.runq_fnid[listid]], self.runq_task[listid])">
                      <Const fromlineno="642" tolineno="642" lineno="642" type="str">'Task %s (%s) has circular dependency on %s (%s)'</Const>
                      <Tuple fromlineno="642" tolineno="642" lineno="642">
                        <Subscript fromlineno="642" tolineno="642" lineno="642">
                          <Getattr fromlineno="642" tolineno="642" lineno="642" attrname="fn_index" expr="taskData">
                            <Name fromlineno="642" tolineno="642" lineno="642" name="taskData"/>
                          </Getattr>
                          <Index fromlineno="642" tolineno="642" lineno="None">
                            <Subscript fromlineno="642" tolineno="642" lineno="642">
                              <Getattr fromlineno="642" tolineno="642" lineno="642" attrname="runq_fnid" expr="self">
                                <Name fromlineno="642" tolineno="642" lineno="642" name="self"/>
                              </Getattr>
                              <Index fromlineno="642" tolineno="642" lineno="None">
                                <Name fromlineno="642" tolineno="642" lineno="642" name="dep"/>
                              </Index>
                            </Subscript>
                          </Index>
                        </Subscript>
                        <Subscript fromlineno="642" tolineno="642" lineno="642">
                          <Getattr fromlineno="642" tolineno="642" lineno="642" attrname="runq_task" expr="self">
                            <Name fromlineno="642" tolineno="642" lineno="642" name="self"/>
                          </Getattr>
                          <Index fromlineno="642" tolineno="642" lineno="None">
                            <Name fromlineno="642" tolineno="642" lineno="642" name="dep"/>
                          </Index>
                        </Subscript>
                        <Subscript fromlineno="642" tolineno="642" lineno="642">
                          <Getattr fromlineno="642" tolineno="642" lineno="642" attrname="fn_index" expr="taskData">
                            <Name fromlineno="642" tolineno="642" lineno="642" name="taskData"/>
                          </Getattr>
                          <Index fromlineno="642" tolineno="642" lineno="None">
                            <Subscript fromlineno="642" tolineno="642" lineno="642">
                              <Getattr fromlineno="642" tolineno="642" lineno="642" attrname="runq_fnid" expr="self">
                                <Name fromlineno="642" tolineno="642" lineno="642" name="self"/>
                              </Getattr>
                              <Index fromlineno="642" tolineno="642" lineno="None">
                                <Name fromlineno="642" tolineno="642" lineno="642" name="listid"/>
                              </Index>
                            </Subscript>
                          </Index>
                        </Subscript>
                        <Subscript fromlineno="642" tolineno="642" lineno="642">
                          <Getattr fromlineno="642" tolineno="642" lineno="642" attrname="runq_task" expr="self">
                            <Name fromlineno="642" tolineno="642" lineno="642" name="self"/>
                          </Getattr>
                          <Index fromlineno="642" tolineno="642" lineno="None">
                            <Name fromlineno="642" tolineno="642" lineno="642" name="listid"/>
                          </Index>
                        </Subscript>
                      </Tuple>
                    </BinOp>
                  </CallFunc>
                </Discard>
              </If>
            </For>
          </For>
          <Discard fromlineno="644" tolineno="644" lineno="644">
            <CallFunc fromlineno="644" tolineno="644" lineno="644" func="Getattr(note)">
              <Getattr fromlineno="644" tolineno="644" lineno="644" attrname="note" expr="bb.msg">
                <Getattr fromlineno="644" tolineno="644" lineno="644" attrname="msg" expr="bb">
                  <Name fromlineno="644" tolineno="644" lineno="644" name="bb"/>
                </Getattr>
              </Getattr>
              <Const fromlineno="644" tolineno="644" lineno="644" type="int">2</Const>
              <Getattr fromlineno="644" tolineno="644" lineno="644" attrname="RunQueue" expr="bb.msg.domain">
                <Getattr fromlineno="644" tolineno="644" lineno="644" attrname="domain" expr="bb.msg">
                  <Getattr fromlineno="644" tolineno="644" lineno="644" attrname="msg" expr="bb">
                    <Name fromlineno="644" tolineno="644" lineno="644" name="bb"/>
                  </Getattr>
                </Getattr>
              </Getattr>
              <BinOp fromlineno="644" tolineno="644" lineno="644" op="%" left="'Compute totals (have %s endpoint(s))'" right="len(endpoints)">
                <Const fromlineno="644" tolineno="644" lineno="644" type="str">'Compute totals (have %s endpoint(s))'</Const>
                <CallFunc fromlineno="644" tolineno="644" lineno="644" func="Name(len)">
                  <Name fromlineno="644" tolineno="644" lineno="644" name="len"/>
                  <Name fromlineno="644" tolineno="644" lineno="644" name="endpoints"/>
                </CallFunc>
              </BinOp>
            </CallFunc>
          </Discard>
          <Assign fromlineno="649" tolineno="649" lineno="649" targets="[&lt;AssAttr(runq_weight) l.649 [bb.runqueue] at Ox9697dcc&gt;]" value="self.calculate_task_weights(endpoints)">
            <AssAttr fromlineno="649" tolineno="649" lineno="649" attrname="runq_weight" expr="self">
              <Name fromlineno="649" tolineno="649" lineno="649" name="self"/>
            </AssAttr>
            <CallFunc fromlineno="649" tolineno="649" lineno="649" func="Getattr(calculate_task_weights)">
              <Getattr fromlineno="649" tolineno="649" lineno="649" attrname="calculate_task_weights" expr="self">
                <Name fromlineno="649" tolineno="649" lineno="649" name="self"/>
              </Getattr>
              <Name fromlineno="649" tolineno="649" lineno="649" name="endpoints"/>
            </CallFunc>
          </Assign>
          <If fromlineno="653" tolineno="656" lineno="653">
            <Compare fromlineno="653" tolineno="653" lineno="653" op="('==', &lt;Const(str) l.653 [bb.runqueue] at Ox9697f6c&gt;)">
              <Getattr fromlineno="653" tolineno="653" lineno="653" attrname="scheduler" expr="self">
                <Name fromlineno="653" tolineno="653" lineno="653" name="self"/>
              </Getattr>
              <Const fromlineno="653" tolineno="653" lineno="653" type="str">'completion'</Const>
            </Compare>
            <Assign fromlineno="654" tolineno="654" lineno="654" targets="[&lt;AssAttr(sched) l.654 [bb.runqueue] at Ox969b02c&gt;]" value="RunQueueSchedulerCompletion(self)">
              <AssAttr fromlineno="654" tolineno="654" lineno="654" attrname="sched" expr="self">
                <Name fromlineno="654" tolineno="654" lineno="654" name="self"/>
              </AssAttr>
              <CallFunc fromlineno="654" tolineno="654" lineno="654" func="Name(RunQueueSchedulerCompletion)">
                <Name fromlineno="654" tolineno="654" lineno="654" name="RunQueueSchedulerCompletion"/>
                <Name fromlineno="654" tolineno="654" lineno="654" name="self"/>
              </CallFunc>
            </Assign>
            <Assign fromlineno="656" tolineno="656" lineno="656" targets="[&lt;AssAttr(sched) l.656 [bb.runqueue] at Ox969b14c&gt;]" value="RunQueueSchedulerSpeed(self)">
              <AssAttr fromlineno="656" tolineno="656" lineno="656" attrname="sched" expr="self">
                <Name fromlineno="656" tolineno="656" lineno="656" name="self"/>
              </AssAttr>
              <CallFunc fromlineno="656" tolineno="656" lineno="656" func="Name(RunQueueSchedulerSpeed)">
                <Name fromlineno="656" tolineno="656" lineno="656" name="RunQueueSchedulerSpeed"/>
                <Name fromlineno="656" tolineno="656" lineno="656" name="self"/>
              </CallFunc>
            </Assign>
          </If>
          <Assign fromlineno="659" tolineno="659" lineno="659" targets="[&lt;AssName(prov_list) l.659 [bb.runqueue] at Ox969b22c&gt;]" value="{}">
            <AssName fromlineno="659" tolineno="659" lineno="659" name="prov_list"/>
            <Dict fromlineno="659" tolineno="659" lineno="659"/>
          </Assign>
          <Assign fromlineno="660" tolineno="660" lineno="660" targets="[&lt;AssName(seen_fn) l.660 [bb.runqueue] at Ox969b2ec&gt;]" value="[]">
            <AssName fromlineno="660" tolineno="660" lineno="660" name="seen_fn"/>
            <List fromlineno="660" tolineno="660" lineno="660"/>
          </Assign>
          <For fromlineno="661" tolineno="670" lineno="661">
            <AssName fromlineno="661" tolineno="661" lineno="661" name="task"/>
            <CallFunc fromlineno="661" tolineno="661" lineno="661" func="Name(range)">
              <Name fromlineno="661" tolineno="661" lineno="661" name="range"/>
              <CallFunc fromlineno="661" tolineno="661" lineno="661" func="Name(len)">
                <Name fromlineno="661" tolineno="661" lineno="661" name="len"/>
                <Getattr fromlineno="661" tolineno="661" lineno="661" attrname="runq_fnid" expr="self">
                  <Name fromlineno="661" tolineno="661" lineno="661" name="self"/>
                </Getattr>
              </CallFunc>
            </CallFunc>
            <Assign fromlineno="662" tolineno="662" lineno="662" targets="[&lt;AssName(fn) l.662 [bb.runqueue] at Ox969b52c&gt;]" value="taskData.fn_index[self.runq_fnid[task]]">
              <AssName fromlineno="662" tolineno="662" lineno="662" name="fn"/>
              <Subscript fromlineno="662" tolineno="662" lineno="662">
                <Getattr fromlineno="662" tolineno="662" lineno="662" attrname="fn_index" expr="taskData">
                  <Name fromlineno="662" tolineno="662" lineno="662" name="taskData"/>
                </Getattr>
                <Index fromlineno="662" tolineno="662" lineno="None">
                  <Subscript fromlineno="662" tolineno="662" lineno="662">
                    <Getattr fromlineno="662" tolineno="662" lineno="662" attrname="runq_fnid" expr="self">
                      <Name fromlineno="662" tolineno="662" lineno="662" name="self"/>
                    </Getattr>
                    <Index fromlineno="662" tolineno="662" lineno="None">
                      <Name fromlineno="662" tolineno="662" lineno="662" name="task"/>
                    </Index>
                  </Subscript>
                </Index>
              </Subscript>
            </Assign>
            <If fromlineno="663" tolineno="664" lineno="663">
              <Compare fromlineno="663" tolineno="663" lineno="663" op="('in', &lt;Name(seen_fn) l.663 [bb.runqueue] at Ox969b70c&gt;)">
                <Name fromlineno="663" tolineno="663" lineno="663" name="fn"/>
                <Name fromlineno="663" tolineno="663" lineno="663" name="seen_fn"/>
              </Compare>
              <Continue fromlineno="664" tolineno="664" lineno="664"/>
            </If>
            <Discard fromlineno="665" tolineno="665" lineno="665">
              <CallFunc fromlineno="665" tolineno="665" lineno="665" func="Getattr(append)">
                <Getattr fromlineno="665" tolineno="665" lineno="665" attrname="append" expr="seen_fn">
                  <Name fromlineno="665" tolineno="665" lineno="665" name="seen_fn"/>
                </Getattr>
                <Name fromlineno="665" tolineno="665" lineno="665" name="fn"/>
              </CallFunc>
            </Discard>
            <For fromlineno="666" tolineno="670" lineno="666">
              <AssName fromlineno="666" tolineno="666" lineno="666" name="prov"/>
              <Subscript fromlineno="666" tolineno="666" lineno="666">
                <Getattr fromlineno="666" tolineno="666" lineno="666" attrname="fn_provides" expr="self.dataCache">
                  <Getattr fromlineno="666" tolineno="666" lineno="666" attrname="dataCache" expr="self">
                    <Name fromlineno="666" tolineno="666" lineno="666" name="self"/>
                  </Getattr>
                </Getattr>
                <Index fromlineno="666" tolineno="666" lineno="None">
                  <Name fromlineno="666" tolineno="666" lineno="666" name="fn"/>
                </Index>
              </Subscript>
              <If fromlineno="667" tolineno="670" lineno="667">
                <Compare fromlineno="667" tolineno="667" lineno="667" op="('not in', &lt;Name(prov_list) l.667 [bb.runqueue] at Ox969ba4c&gt;)">
                  <Name fromlineno="667" tolineno="667" lineno="667" name="prov"/>
                  <Name fromlineno="667" tolineno="667" lineno="667" name="prov_list"/>
                </Compare>
                <Assign fromlineno="668" tolineno="668" lineno="668" targets="[&lt;Subscript() l.668 [bb.runqueue] at Ox969baec&gt;]" value="[fn]">
                  <Subscript fromlineno="668" tolineno="668" lineno="668">
                    <Name fromlineno="668" tolineno="668" lineno="668" name="prov_list"/>
                    <Index fromlineno="668" tolineno="668" lineno="None">
                      <Name fromlineno="668" tolineno="668" lineno="668" name="prov"/>
                    </Index>
                  </Subscript>
                  <List fromlineno="668" tolineno="668" lineno="668">
                    <Name fromlineno="668" tolineno="668" lineno="668" name="fn"/>
                  </List>
                </Assign>
                <If fromlineno="669" tolineno="670" lineno="669">
                  <Compare fromlineno="669" tolineno="669" lineno="669" op="('not in', &lt;Subscript() l.669 [bb.runqueue] at Ox969bcac&gt;)">
                    <Name fromlineno="669" tolineno="669" lineno="669" name="fn"/>
                    <Subscript fromlineno="669" tolineno="669" lineno="669">
                      <Name fromlineno="669" tolineno="669" lineno="669" name="prov_list"/>
                      <Index fromlineno="669" tolineno="669" lineno="None">
                        <Name fromlineno="669" tolineno="669" lineno="669" name="prov"/>
                      </Index>
                    </Subscript>
                  </Compare>
                  <Discard fromlineno="670" tolineno="670" lineno="670">
                    <CallFunc fromlineno="670" tolineno="670" lineno="670" func="Getattr(append)">
                      <Getattr fromlineno="670" tolineno="670" lineno="670" attrname="append" expr="prov_list[prov]">
                        <Subscript fromlineno="670" tolineno="670" lineno="670">
                          <Name fromlineno="670" tolineno="670" lineno="670" name="prov_list"/>
                          <Index fromlineno="670" tolineno="670" lineno="None">
                            <Name fromlineno="670" tolineno="670" lineno="670" name="prov"/>
                          </Index>
                        </Subscript>
                      </Getattr>
                      <Name fromlineno="670" tolineno="670" lineno="670" name="fn"/>
                    </CallFunc>
                  </Discard>
                </If>
              </If>
            </For>
          </For>
          <Assign fromlineno="671" tolineno="671" lineno="671" targets="[&lt;AssName(error) l.671 [bb.runqueue] at Ox969be8c&gt;]" value="False">
            <AssName fromlineno="671" tolineno="671" lineno="671" name="error"/>
            <Const fromlineno="671" tolineno="671" lineno="671" type="bool">False</Const>
          </Assign>
          <For fromlineno="672" tolineno="675" lineno="672">
            <AssName fromlineno="672" tolineno="672" lineno="672" name="prov"/>
            <Name fromlineno="672" tolineno="672" lineno="672" name="prov_list"/>
            <If fromlineno="673" tolineno="675" lineno="673">
              <BoolOp fromlineno="673" tolineno="673" lineno="673" op="and" values="len(prov_list[prov]) &gt; 1,prov not in self.multi_provider_whitelist,">
                <Compare fromlineno="673" tolineno="673" lineno="673" op="('&gt;', &lt;Const(int) l.673 [bb.runqueue] at Ox96a016c&gt;)">
                  <CallFunc fromlineno="673" tolineno="673" lineno="673" func="Name(len)">
                    <Name fromlineno="673" tolineno="673" lineno="673" name="len"/>
                    <Subscript fromlineno="673" tolineno="673" lineno="673">
                      <Name fromlineno="673" tolineno="673" lineno="673" name="prov_list"/>
                      <Index fromlineno="673" tolineno="673" lineno="None">
                        <Name fromlineno="673" tolineno="673" lineno="673" name="prov"/>
                      </Index>
                    </Subscript>
                  </CallFunc>
                  <Const fromlineno="673" tolineno="673" lineno="673" type="int">1</Const>
                </Compare>
                <Compare fromlineno="673" tolineno="673" lineno="673" op="('not in', &lt;Getattr(multi_provider_whitelist) l.673 [bb.runqueue] at Ox96a020c&gt;)">
                  <Name fromlineno="673" tolineno="673" lineno="673" name="prov"/>
                  <Getattr fromlineno="673" tolineno="673" lineno="673" attrname="multi_provider_whitelist" expr="self">
                    <Name fromlineno="673" tolineno="673" lineno="673" name="self"/>
                  </Getattr>
                </Compare>
              </BoolOp>
              <Assign fromlineno="674" tolineno="674" lineno="674" targets="[&lt;AssName(error) l.674 [bb.runqueue] at Ox96a02ac&gt;]" value="True">
                <AssName fromlineno="674" tolineno="674" lineno="674" name="error"/>
                <Const fromlineno="674" tolineno="674" lineno="674" type="bool">True</Const>
              </Assign>
              <Discard fromlineno="675" tolineno="675" lineno="675">
                <CallFunc fromlineno="675" tolineno="675" lineno="675" func="Getattr(error)">
                  <Getattr fromlineno="675" tolineno="675" lineno="675" attrname="error" expr="bb.msg">
                    <Getattr fromlineno="675" tolineno="675" lineno="675" attrname="msg" expr="bb">
                      <Name fromlineno="675" tolineno="675" lineno="675" name="bb"/>
                    </Getattr>
                  </Getattr>
                  <Getattr fromlineno="675" tolineno="675" lineno="675" attrname="RunQueue" expr="bb.msg.domain">
                    <Getattr fromlineno="675" tolineno="675" lineno="675" attrname="domain" expr="bb.msg">
                      <Getattr fromlineno="675" tolineno="675" lineno="675" attrname="msg" expr="bb">
                        <Name fromlineno="675" tolineno="675" lineno="675" name="bb"/>
                      </Getattr>
                    </Getattr>
                  </Getattr>
                  <BinOp fromlineno="675" tolineno="675" lineno="675" op="%" left="&quot;Multiple .bb files are due to be built which each provide %s (%s).\n This usually means one provides something the other doesn't and should.&quot;" right="(prov, ' '.join(prov_list[prov]))">
                    <Const fromlineno="675" tolineno="675" lineno="675" type="str">"Multiple .bb files are due to be built which each provide %s (%s).\n This usually means one provides something the other doesn't and should."</Const>
                    <Tuple fromlineno="675" tolineno="675" lineno="675">
                      <Name fromlineno="675" tolineno="675" lineno="675" name="prov"/>
                      <CallFunc fromlineno="675" tolineno="675" lineno="675" func="Getattr(join)">
                        <Getattr fromlineno="675" tolineno="675" lineno="675" attrname="join" expr="' '">
                          <Const fromlineno="675" tolineno="675" lineno="675" type="str">' '</Const>
                        </Getattr>
                        <Subscript fromlineno="675" tolineno="675" lineno="675">
                          <Name fromlineno="675" tolineno="675" lineno="675" name="prov_list"/>
                          <Index fromlineno="675" tolineno="675" lineno="None">
                            <Name fromlineno="675" tolineno="675" lineno="675" name="prov"/>
                          </Index>
                        </Subscript>
                      </CallFunc>
                    </Tuple>
                  </BinOp>
                </CallFunc>
              </Discard>
            </If>
          </For>
          <Assign fromlineno="681" tolineno="681" lineno="681" targets="[&lt;AssName(stampfnwhitelist) l.681 [bb.runqueue] at Ox96a060c&gt;]" value="[]">
            <AssName fromlineno="681" tolineno="681" lineno="681" name="stampfnwhitelist"/>
            <List fromlineno="681" tolineno="681" lineno="681"/>
          </Assign>
          <For fromlineno="682" tolineno="688" lineno="682">
            <AssName fromlineno="682" tolineno="682" lineno="682" name="entry"/>
            <CallFunc fromlineno="682" tolineno="682" lineno="682" func="Getattr(split)">
              <Getattr fromlineno="682" tolineno="682" lineno="682" attrname="split" expr="self.stampwhitelist">
                <Getattr fromlineno="682" tolineno="682" lineno="682" attrname="stampwhitelist" expr="self">
                  <Name fromlineno="682" tolineno="682" lineno="682" name="self"/>
                </Getattr>
              </Getattr>
            </CallFunc>
            <Assign fromlineno="683" tolineno="683" lineno="683" targets="[&lt;AssName(entryid) l.683 [bb.runqueue] at Ox96a080c&gt;]" value="self.taskData.getbuild_id(entry)">
              <AssName fromlineno="683" tolineno="683" lineno="683" name="entryid"/>
              <CallFunc fromlineno="683" tolineno="683" lineno="683" func="Getattr(getbuild_id)">
                <Getattr fromlineno="683" tolineno="683" lineno="683" attrname="getbuild_id" expr="self.taskData">
                  <Getattr fromlineno="683" tolineno="683" lineno="683" attrname="taskData" expr="self">
                    <Name fromlineno="683" tolineno="683" lineno="683" name="self"/>
                  </Getattr>
                </Getattr>
                <Name fromlineno="683" tolineno="683" lineno="683" name="entry"/>
              </CallFunc>
            </Assign>
            <If fromlineno="684" tolineno="685" lineno="684">
              <Compare fromlineno="684" tolineno="684" lineno="684" op="('not in', &lt;Getattr(build_targets) l.684 [bb.runqueue] at Ox96a09ac&gt;)">
                <Name fromlineno="684" tolineno="684" lineno="684" name="entryid"/>
                <Getattr fromlineno="684" tolineno="684" lineno="684" attrname="build_targets" expr="self.taskData">
                  <Getattr fromlineno="684" tolineno="684" lineno="684" attrname="taskData" expr="self">
                    <Name fromlineno="684" tolineno="684" lineno="684" name="self"/>
                  </Getattr>
                </Getattr>
              </Compare>
              <Continue fromlineno="685" tolineno="685" lineno="685"/>
            </If>
            <Assign fromlineno="686" tolineno="686" lineno="686" targets="[&lt;AssName(fnid) l.686 [bb.runqueue] at Ox96a0aac&gt;]" value="self.taskData.build_targets[entryid][0]">
              <AssName fromlineno="686" tolineno="686" lineno="686" name="fnid"/>
              <Subscript fromlineno="686" tolineno="686" lineno="686">
                <Subscript fromlineno="686" tolineno="686" lineno="686">
                  <Getattr fromlineno="686" tolineno="686" lineno="686" attrname="build_targets" expr="self.taskData">
                    <Getattr fromlineno="686" tolineno="686" lineno="686" attrname="taskData" expr="self">
                      <Name fromlineno="686" tolineno="686" lineno="686" name="self"/>
                    </Getattr>
                  </Getattr>
                  <Index fromlineno="686" tolineno="686" lineno="None">
                    <Name fromlineno="686" tolineno="686" lineno="686" name="entryid"/>
                  </Index>
                </Subscript>
                <Index fromlineno="686" tolineno="686" lineno="None">
                  <Const fromlineno="686" tolineno="686" lineno="686" type="int">0</Const>
                </Index>
              </Subscript>
            </Assign>
            <Assign fromlineno="687" tolineno="687" lineno="687" targets="[&lt;AssName(fn) l.687 [bb.runqueue] at Ox96a0c2c&gt;]" value="self.taskData.fn_index[fnid]">
              <AssName fromlineno="687" tolineno="687" lineno="687" name="fn"/>
              <Subscript fromlineno="687" tolineno="687" lineno="687">
                <Getattr fromlineno="687" tolineno="687" lineno="687" attrname="fn_index" expr="self.taskData">
                  <Getattr fromlineno="687" tolineno="687" lineno="687" attrname="taskData" expr="self">
                    <Name fromlineno="687" tolineno="687" lineno="687" name="self"/>
                  </Getattr>
                </Getattr>
                <Index fromlineno="687" tolineno="687" lineno="None">
                  <Name fromlineno="687" tolineno="687" lineno="687" name="fnid"/>
                </Index>
              </Subscript>
            </Assign>
            <Discard fromlineno="688" tolineno="688" lineno="688">
              <CallFunc fromlineno="688" tolineno="688" lineno="688" func="Getattr(append)">
                <Getattr fromlineno="688" tolineno="688" lineno="688" attrname="append" expr="stampfnwhitelist">
                  <Name fromlineno="688" tolineno="688" lineno="688" name="stampfnwhitelist"/>
                </Getattr>
                <Name fromlineno="688" tolineno="688" lineno="688" name="fn"/>
              </CallFunc>
            </Discard>
          </For>
          <Assign fromlineno="689" tolineno="689" lineno="689" targets="[&lt;AssAttr(stampfnwhitelist) l.689 [bb.runqueue] at Ox96a0e0c&gt;]" value="stampfnwhitelist">
            <AssAttr fromlineno="689" tolineno="689" lineno="689" attrname="stampfnwhitelist" expr="self">
              <Name fromlineno="689" tolineno="689" lineno="689" name="self"/>
            </AssAttr>
            <Name fromlineno="689" tolineno="689" lineno="689" name="stampfnwhitelist"/>
          </Assign>
        </Function>
        <Function fromlineno="693" tolineno="785" lineno="693">
          <Arguments fromlineno="693" tolineno="693" lineno="None" format_args="self">
            <AssName fromlineno="693" tolineno="693" lineno="693" name="self"/>
          </Arguments>
          <Assign fromlineno="694" tolineno="694" lineno="694" targets="[&lt;AssName(unchecked) l.694 [bb.runqueue] at Ox96a0fac&gt;]" value="{}">
            <AssName fromlineno="694" tolineno="694" lineno="694" name="unchecked"/>
            <Dict fromlineno="694" tolineno="694" lineno="694"/>
          </Assign>
          <Assign fromlineno="695" tolineno="695" lineno="695" targets="[&lt;AssName(current) l.695 [bb.runqueue] at Ox96a408c&gt;]" value="[]">
            <AssName fromlineno="695" tolineno="695" lineno="695" name="current"/>
            <List fromlineno="695" tolineno="695" lineno="695"/>
          </Assign>
          <Assign fromlineno="696" tolineno="696" lineno="696" targets="[&lt;AssName(notcurrent) l.696 [bb.runqueue] at Ox96a414c&gt;]" value="[]">
            <AssName fromlineno="696" tolineno="696" lineno="696" name="notcurrent"/>
            <List fromlineno="696" tolineno="696" lineno="696"/>
          </Assign>
          <Assign fromlineno="697" tolineno="697" lineno="697" targets="[&lt;AssName(buildable) l.697 [bb.runqueue] at Ox96a420c&gt;]" value="[]">
            <AssName fromlineno="697" tolineno="697" lineno="697" name="buildable"/>
            <List fromlineno="697" tolineno="697" lineno="697"/>
          </Assign>
          <If fromlineno="699" tolineno="705" lineno="699">
            <Compare fromlineno="699" tolineno="699" lineno="699" op="('==', &lt;Const(str) l.699 [bb.runqueue] at Ox96a434c&gt;)">
              <Getattr fromlineno="699" tolineno="699" lineno="699" attrname="stamppolicy" expr="self">
                <Name fromlineno="699" tolineno="699" lineno="699" name="self"/>
              </Getattr>
              <Const fromlineno="699" tolineno="699" lineno="699" type="str">'perfile'</Const>
            </Compare>
            <Assign fromlineno="700" tolineno="700" lineno="700" targets="[&lt;AssName(fulldeptree) l.700 [bb.runqueue] at Ox96a43ec&gt;]" value="False">
              <AssName fromlineno="700" tolineno="700" lineno="700" name="fulldeptree"/>
              <Const fromlineno="700" tolineno="700" lineno="700" type="bool">False</Const>
            </Assign>
            <Assign fromlineno="702" tolineno="702" lineno="702" targets="[&lt;AssName(fulldeptree) l.702 [bb.runqueue] at Ox96a44ac&gt;]" value="True">
              <AssName fromlineno="702" tolineno="702" lineno="702" name="fulldeptree"/>
              <Const fromlineno="702" tolineno="702" lineno="702" type="bool">True</Const>
            </Assign>
            <Assign fromlineno="703" tolineno="703" lineno="703" targets="[&lt;AssName(stampwhitelist) l.703 [bb.runqueue] at Ox96a452c&gt;]" value="[]">
              <AssName fromlineno="703" tolineno="703" lineno="703" name="stampwhitelist"/>
              <List fromlineno="703" tolineno="703" lineno="703"/>
            </Assign>
            <If fromlineno="704" tolineno="705" lineno="704">
              <Compare fromlineno="704" tolineno="704" lineno="704" op="('==', &lt;Const(str) l.704 [bb.runqueue] at Ox96a468c&gt;)">
                <Getattr fromlineno="704" tolineno="704" lineno="704" attrname="stamppolicy" expr="self">
                  <Name fromlineno="704" tolineno="704" lineno="704" name="self"/>
                </Getattr>
                <Const fromlineno="704" tolineno="704" lineno="704" type="str">'whitelist'</Const>
              </Compare>
              <Assign fromlineno="705" tolineno="705" lineno="705" targets="[&lt;AssName(stampwhitelist) l.705 [bb.runqueue] at Ox96a472c&gt;]" value="self.self.stampfnwhitelist">
                <AssName fromlineno="705" tolineno="705" lineno="705" name="stampwhitelist"/>
                <Getattr fromlineno="705" tolineno="705" lineno="705" attrname="stampfnwhitelist" expr="self.self">
                  <Getattr fromlineno="705" tolineno="705" lineno="705" attrname="self" expr="self">
                    <Name fromlineno="705" tolineno="705" lineno="705" name="self"/>
                  </Getattr>
                </Getattr>
              </Assign>
            </If>
          </If>
          <For fromlineno="707" tolineno="710" lineno="707">
            <AssName fromlineno="707" tolineno="707" lineno="707" name="task"/>
            <CallFunc fromlineno="707" tolineno="707" lineno="707" func="Name(range)">
              <Name fromlineno="707" tolineno="707" lineno="707" name="range"/>
              <CallFunc fromlineno="707" tolineno="707" lineno="707" func="Name(len)">
                <Name fromlineno="707" tolineno="707" lineno="707" name="len"/>
                <Getattr fromlineno="707" tolineno="707" lineno="707" attrname="runq_fnid" expr="self">
                  <Name fromlineno="707" tolineno="707" lineno="707" name="self"/>
                </Getattr>
              </CallFunc>
            </CallFunc>
            <Assign fromlineno="708" tolineno="708" lineno="708" targets="[&lt;Subscript() l.708 [bb.runqueue] at Ox96a494c&gt;]" value="''">
              <Subscript fromlineno="708" tolineno="708" lineno="708">
                <Name fromlineno="708" tolineno="708" lineno="708" name="unchecked"/>
                <Index fromlineno="708" tolineno="708" lineno="None">
                  <Name fromlineno="708" tolineno="708" lineno="708" name="task"/>
                </Index>
              </Subscript>
              <Const fromlineno="708" tolineno="708" lineno="708" type="str">''</Const>
            </Assign>
            <If fromlineno="709" tolineno="710" lineno="709">
              <Compare fromlineno="709" tolineno="709" lineno="709" op="('==', &lt;Const(int) l.709 [bb.runqueue] at Ox96a4b6c&gt;)">
                <CallFunc fromlineno="709" tolineno="709" lineno="709" func="Name(len)">
                  <Name fromlineno="709" tolineno="709" lineno="709" name="len"/>
                  <Subscript fromlineno="709" tolineno="709" lineno="709">
                    <Getattr fromlineno="709" tolineno="709" lineno="709" attrname="runq_depends" expr="self">
                      <Name fromlineno="709" tolineno="709" lineno="709" name="self"/>
                    </Getattr>
                    <Index fromlineno="709" tolineno="709" lineno="None">
                      <Name fromlineno="709" tolineno="709" lineno="709" name="task"/>
                    </Index>
                  </Subscript>
                </CallFunc>
                <Const fromlineno="709" tolineno="709" lineno="709" type="int">0</Const>
              </Compare>
              <Discard fromlineno="710" tolineno="710" lineno="710">
                <CallFunc fromlineno="710" tolineno="710" lineno="710" func="Getattr(append)">
                  <Getattr fromlineno="710" tolineno="710" lineno="710" attrname="append" expr="buildable">
                    <Name fromlineno="710" tolineno="710" lineno="710" name="buildable"/>
                  </Getattr>
                  <Name fromlineno="710" tolineno="710" lineno="710" name="task"/>
                </CallFunc>
              </Discard>
            </If>
          </For>
          <Function fromlineno="712" tolineno="720" lineno="712">
            <Arguments fromlineno="712" tolineno="712" lineno="None" format_args="self, task, buildable">
              <AssName fromlineno="712" tolineno="712" lineno="712" name="self"/>
              <AssName fromlineno="712" tolineno="712" lineno="712" name="task"/>
              <AssName fromlineno="712" tolineno="712" lineno="712" name="buildable"/>
            </Arguments>
            <For fromlineno="713" tolineno="720" lineno="713">
              <AssName fromlineno="713" tolineno="713" lineno="713" name="revdep"/>
              <Subscript fromlineno="713" tolineno="713" lineno="713">
                <Getattr fromlineno="713" tolineno="713" lineno="713" attrname="runq_revdeps" expr="self">
                  <Name fromlineno="713" tolineno="713" lineno="713" name="self"/>
                </Getattr>
                <Index fromlineno="713" tolineno="713" lineno="None">
                  <Name fromlineno="713" tolineno="713" lineno="713" name="task"/>
                </Index>
              </Subscript>
              <Assign fromlineno="714" tolineno="714" lineno="714" targets="[&lt;AssName(alldeps) l.714 [bb.runqueue] at Ox96a4fac&gt;]" value="1">
                <AssName fromlineno="714" tolineno="714" lineno="714" name="alldeps"/>
                <Const fromlineno="714" tolineno="714" lineno="714" type="int">1</Const>
              </Assign>
              <For fromlineno="715" tolineno="717" lineno="715">
                <AssName fromlineno="715" tolineno="715" lineno="715" name="dep"/>
                <Subscript fromlineno="715" tolineno="715" lineno="715">
                  <Getattr fromlineno="715" tolineno="715" lineno="715" attrname="runq_depends" expr="self">
                    <Name fromlineno="715" tolineno="715" lineno="715" name="self"/>
                  </Getattr>
                  <Index fromlineno="715" tolineno="715" lineno="None">
                    <Name fromlineno="715" tolineno="715" lineno="715" name="revdep"/>
                  </Index>
                </Subscript>
                <If fromlineno="716" tolineno="717" lineno="716">
                  <Compare fromlineno="716" tolineno="716" lineno="716" op="('in', &lt;Name(unchecked) l.716 [bb.runqueue] at Ox96d420c&gt;)">
                    <Name fromlineno="716" tolineno="716" lineno="716" name="dep"/>
                    <Name fromlineno="716" tolineno="716" lineno="716" name="unchecked"/>
                  </Compare>
                  <Assign fromlineno="717" tolineno="717" lineno="717" targets="[&lt;AssName(alldeps) l.717 [bb.runqueue] at Ox96d42ac&gt;]" value="0">
                    <AssName fromlineno="717" tolineno="717" lineno="717" name="alldeps"/>
                    <Const fromlineno="717" tolineno="717" lineno="717" type="int">0</Const>
                  </Assign>
                </If>
              </For>
              <If fromlineno="718" tolineno="720" lineno="718">
                <Compare fromlineno="718" tolineno="718" lineno="718" op="('==', &lt;Const(int) l.718 [bb.runqueue] at Ox96d438c&gt;)">
                  <Name fromlineno="718" tolineno="718" lineno="718" name="alldeps"/>
                  <Const fromlineno="718" tolineno="718" lineno="718" type="int">1</Const>
                </Compare>
                <If fromlineno="719" tolineno="720" lineno="719">
                  <Compare fromlineno="719" tolineno="719" lineno="719" op="('in', &lt;Name(unchecked) l.719 [bb.runqueue] at Ox96d44ac&gt;)">
                    <Name fromlineno="719" tolineno="719" lineno="719" name="revdep"/>
                    <Name fromlineno="719" tolineno="719" lineno="719" name="unchecked"/>
                  </Compare>
                  <Discard fromlineno="720" tolineno="720" lineno="720">
                    <CallFunc fromlineno="720" tolineno="720" lineno="720" func="Getattr(append)">
                      <Getattr fromlineno="720" tolineno="720" lineno="720" attrname="append" expr="buildable">
                        <Name fromlineno="720" tolineno="720" lineno="720" name="buildable"/>
                      </Getattr>
                      <Name fromlineno="720" tolineno="720" lineno="720" name="revdep"/>
                    </CallFunc>
                  </Discard>
                </If>
              </If>
            </For>
          </Function>
          <For fromlineno="722" tolineno="740" lineno="722">
            <AssName fromlineno="722" tolineno="722" lineno="722" name="task"/>
            <CallFunc fromlineno="722" tolineno="722" lineno="722" func="Name(range)">
              <Name fromlineno="722" tolineno="722" lineno="722" name="range"/>
              <CallFunc fromlineno="722" tolineno="722" lineno="722" func="Name(len)">
                <Name fromlineno="722" tolineno="722" lineno="722" name="len"/>
                <Getattr fromlineno="722" tolineno="722" lineno="722" attrname="runq_fnid" expr="self">
                  <Name fromlineno="722" tolineno="722" lineno="722" name="self"/>
                </Getattr>
              </CallFunc>
            </CallFunc>
            <If fromlineno="723" tolineno="724" lineno="723">
              <Compare fromlineno="723" tolineno="723" lineno="723" op="('not in', &lt;Name(unchecked) l.723 [bb.runqueue] at Ox96d47ac&gt;)">
                <Name fromlineno="723" tolineno="723" lineno="723" name="task"/>
                <Name fromlineno="723" tolineno="723" lineno="723" name="unchecked"/>
              </Compare>
              <Continue fromlineno="724" tolineno="724" lineno="724"/>
            </If>
            <Assign fromlineno="725" tolineno="725" lineno="725" targets="[&lt;AssName(fn) l.725 [bb.runqueue] at Ox96d486c&gt;]" value="self.taskData.fn_index[self.runq_fnid[task]]">
              <AssName fromlineno="725" tolineno="725" lineno="725" name="fn"/>
              <Subscript fromlineno="725" tolineno="725" lineno="725">
                <Getattr fromlineno="725" tolineno="725" lineno="725" attrname="fn_index" expr="self.taskData">
                  <Getattr fromlineno="725" tolineno="725" lineno="725" attrname="taskData" expr="self">
                    <Name fromlineno="725" tolineno="725" lineno="725" name="self"/>
                  </Getattr>
                </Getattr>
                <Index fromlineno="725" tolineno="725" lineno="None">
                  <Subscript fromlineno="725" tolineno="725" lineno="725">
                    <Getattr fromlineno="725" tolineno="725" lineno="725" attrname="runq_fnid" expr="self">
                      <Name fromlineno="725" tolineno="725" lineno="725" name="self"/>
                    </Getattr>
                    <Index fromlineno="725" tolineno="725" lineno="None">
                      <Name fromlineno="725" tolineno="725" lineno="725" name="task"/>
                    </Index>
                  </Subscript>
                </Index>
              </Subscript>
            </Assign>
            <Assign fromlineno="726" tolineno="726" lineno="726" targets="[&lt;AssName(taskname) l.726 [bb.runqueue] at Ox96d4a2c&gt;]" value="self.runq_task[task]">
              <AssName fromlineno="726" tolineno="726" lineno="726" name="taskname"/>
              <Subscript fromlineno="726" tolineno="726" lineno="726">
                <Getattr fromlineno="726" tolineno="726" lineno="726" attrname="runq_task" expr="self">
                  <Name fromlineno="726" tolineno="726" lineno="726" name="self"/>
                </Getattr>
                <Index fromlineno="726" tolineno="726" lineno="None">
                  <Name fromlineno="726" tolineno="726" lineno="726" name="task"/>
                </Index>
              </Subscript>
            </Assign>
            <Assign fromlineno="727" tolineno="727" lineno="727" targets="[&lt;AssName(stampfile) l.727 [bb.runqueue] at Ox96d4b4c&gt;]" value="('%s.%s') % ((self.dataCache.stamp[fn], taskname))">
              <AssName fromlineno="727" tolineno="727" lineno="727" name="stampfile"/>
              <BinOp fromlineno="727" tolineno="727" lineno="727" op="%" left="'%s.%s'" right="(self.dataCache.stamp[fn], taskname)">
                <Const fromlineno="727" tolineno="727" lineno="727" type="str">'%s.%s'</Const>
                <Tuple fromlineno="727" tolineno="727" lineno="727">
                  <Subscript fromlineno="727" tolineno="727" lineno="727">
                    <Getattr fromlineno="727" tolineno="727" lineno="727" attrname="stamp" expr="self.dataCache">
                      <Getattr fromlineno="727" tolineno="727" lineno="727" attrname="dataCache" expr="self">
                        <Name fromlineno="727" tolineno="727" lineno="727" name="self"/>
                      </Getattr>
                    </Getattr>
                    <Index fromlineno="727" tolineno="727" lineno="None">
                      <Name fromlineno="727" tolineno="727" lineno="727" name="fn"/>
                    </Index>
                  </Subscript>
                  <Name fromlineno="727" tolineno="727" lineno="727" name="taskname"/>
                </Tuple>
              </BinOp>
            </Assign>
            <If fromlineno="729" tolineno="733" lineno="729">
              <UnaryOp fromlineno="729" tolineno="729" lineno="729">
                <CallFunc fromlineno="729" tolineno="729" lineno="729" func="Getattr(access)">
                  <Getattr fromlineno="729" tolineno="729" lineno="729" attrname="access" expr="os">
                    <Name fromlineno="729" tolineno="729" lineno="729" name="os"/>
                  </Getattr>
                  <Name fromlineno="729" tolineno="729" lineno="729" name="stampfile"/>
                  <Getattr fromlineno="729" tolineno="729" lineno="729" attrname="F_OK" expr="os">
                    <Name fromlineno="729" tolineno="729" lineno="729" name="os"/>
                  </Getattr>
                </CallFunc>
              </UnaryOp>
              <Delete fromlineno="730" tolineno="730" lineno="730">
                <Subscript fromlineno="730" tolineno="730" lineno="730">
                  <Name fromlineno="730" tolineno="730" lineno="730" name="unchecked"/>
                  <Index fromlineno="730" tolineno="730" lineno="None">
                    <Name fromlineno="730" tolineno="730" lineno="730" name="task"/>
                  </Index>
                </Subscript>
              </Delete>
              <Discard fromlineno="731" tolineno="731" lineno="731">
                <CallFunc fromlineno="731" tolineno="731" lineno="731" func="Getattr(append)">
                  <Getattr fromlineno="731" tolineno="731" lineno="731" attrname="append" expr="notcurrent">
                    <Name fromlineno="731" tolineno="731" lineno="731" name="notcurrent"/>
                  </Getattr>
                  <Name fromlineno="731" tolineno="731" lineno="731" name="task"/>
                </CallFunc>
              </Discard>
              <Discard fromlineno="732" tolineno="732" lineno="732">
                <CallFunc fromlineno="732" tolineno="732" lineno="732" func="Name(check_buildable)">
                  <Name fromlineno="732" tolineno="732" lineno="732" name="check_buildable"/>
                  <Name fromlineno="732" tolineno="732" lineno="732" name="self"/>
                  <Name fromlineno="732" tolineno="732" lineno="732" name="task"/>
                  <Name fromlineno="732" tolineno="732" lineno="732" name="buildable"/>
                </CallFunc>
              </Discard>
              <Continue fromlineno="733" tolineno="733" lineno="733"/>
            </If>
            <Assign fromlineno="735" tolineno="735" lineno="735" targets="[&lt;AssName(taskdep) l.735 [bb.runqueue] at Ox96d912c&gt;]" value="self.dataCache.task_deps[fn]">
              <AssName fromlineno="735" tolineno="735" lineno="735" name="taskdep"/>
              <Subscript fromlineno="735" tolineno="735" lineno="735">
                <Getattr fromlineno="735" tolineno="735" lineno="735" attrname="task_deps" expr="self.dataCache">
                  <Getattr fromlineno="735" tolineno="735" lineno="735" attrname="dataCache" expr="self">
                    <Name fromlineno="735" tolineno="735" lineno="735" name="self"/>
                  </Getattr>
                </Getattr>
                <Index fromlineno="735" tolineno="735" lineno="None">
                  <Name fromlineno="735" tolineno="735" lineno="735" name="fn"/>
                </Index>
              </Subscript>
            </Assign>
            <If fromlineno="736" tolineno="740" lineno="736">
              <BoolOp fromlineno="736" tolineno="736" lineno="736" op="and" values="'nostamp' in taskdep,task in taskdep['nostamp'],">
                <Compare fromlineno="736" tolineno="736" lineno="736" op="('in', &lt;Name(taskdep) l.736 [bb.runqueue] at Ox96d932c&gt;)">
                  <Const fromlineno="736" tolineno="736" lineno="736" type="str">'nostamp'</Const>
                  <Name fromlineno="736" tolineno="736" lineno="736" name="taskdep"/>
                </Compare>
                <Compare fromlineno="736" tolineno="736" lineno="736" op="('in', &lt;Subscript() l.736 [bb.runqueue] at Ox96d93cc&gt;)">
                  <Name fromlineno="736" tolineno="736" lineno="736" name="task"/>
                  <Subscript fromlineno="736" tolineno="736" lineno="736">
                    <Name fromlineno="736" tolineno="736" lineno="736" name="taskdep"/>
                    <Index fromlineno="736" tolineno="736" lineno="None">
                      <Const fromlineno="736" tolineno="736" lineno="736" type="str">'nostamp'</Const>
                    </Index>
                  </Subscript>
                </Compare>
              </BoolOp>
              <Delete fromlineno="737" tolineno="737" lineno="737">
                <Subscript fromlineno="737" tolineno="737" lineno="737">
                  <Name fromlineno="737" tolineno="737" lineno="737" name="unchecked"/>
                  <Index fromlineno="737" tolineno="737" lineno="None">
                    <Name fromlineno="737" tolineno="737" lineno="737" name="task"/>
                  </Index>
                </Subscript>
              </Delete>
              <Discard fromlineno="738" tolineno="738" lineno="738">
                <CallFunc fromlineno="738" tolineno="738" lineno="738" func="Getattr(append)">
                  <Getattr fromlineno="738" tolineno="738" lineno="738" attrname="append" expr="notcurrent">
                    <Name fromlineno="738" tolineno="738" lineno="738" name="notcurrent"/>
                  </Getattr>
                  <Name fromlineno="738" tolineno="738" lineno="738" name="task"/>
                </CallFunc>
              </Discard>
              <Discard fromlineno="739" tolineno="739" lineno="739">
                <CallFunc fromlineno="739" tolineno="739" lineno="739" func="Name(check_buildable)">
                  <Name fromlineno="739" tolineno="739" lineno="739" name="check_buildable"/>
                  <Name fromlineno="739" tolineno="739" lineno="739" name="self"/>
                  <Name fromlineno="739" tolineno="739" lineno="739" name="task"/>
                  <Name fromlineno="739" tolineno="739" lineno="739" name="buildable"/>
                </CallFunc>
              </Discard>
              <Continue fromlineno="740" tolineno="740" lineno="740"/>
            </If>
          </For>
          <While fromlineno="742" tolineno="772" lineno="742">
            <Compare fromlineno="742" tolineno="742" lineno="742" op="('&gt;', &lt;Const(int) l.742 [bb.runqueue] at Ox96d97ec&gt;)">
              <CallFunc fromlineno="742" tolineno="742" lineno="742" func="Name(len)">
                <Name fromlineno="742" tolineno="742" lineno="742" name="len"/>
                <Name fromlineno="742" tolineno="742" lineno="742" name="buildable"/>
              </CallFunc>
              <Const fromlineno="742" tolineno="742" lineno="742" type="int">0</Const>
            </Compare>
            <Assign fromlineno="743" tolineno="743" lineno="743" targets="[&lt;AssName(nextbuildable) l.743 [bb.runqueue] at Ox96d988c&gt;]" value="[]">
              <AssName fromlineno="743" tolineno="743" lineno="743" name="nextbuildable"/>
              <List fromlineno="743" tolineno="743" lineno="743"/>
            </Assign>
            <For fromlineno="744" tolineno="770" lineno="744">
              <AssName fromlineno="744" tolineno="744" lineno="744" name="task"/>
              <Name fromlineno="744" tolineno="744" lineno="744" name="buildable"/>
              <If fromlineno="745" tolineno="768" lineno="745">
                <Compare fromlineno="745" tolineno="745" lineno="745" op="('in', &lt;Name(unchecked) l.745 [bb.runqueue] at Ox96d9a4c&gt;)">
                  <Name fromlineno="745" tolineno="745" lineno="745" name="task"/>
                  <Name fromlineno="745" tolineno="745" lineno="745" name="unchecked"/>
                </Compare>
                <Assign fromlineno="746" tolineno="746" lineno="746" targets="[&lt;AssName(fn) l.746 [bb.runqueue] at Ox96d9aec&gt;]" value="self.taskData.fn_index[self.runq_fnid[task]]">
                  <AssName fromlineno="746" tolineno="746" lineno="746" name="fn"/>
                  <Subscript fromlineno="746" tolineno="746" lineno="746">
                    <Getattr fromlineno="746" tolineno="746" lineno="746" attrname="fn_index" expr="self.taskData">
                      <Getattr fromlineno="746" tolineno="746" lineno="746" attrname="taskData" expr="self">
                        <Name fromlineno="746" tolineno="746" lineno="746" name="self"/>
                      </Getattr>
                    </Getattr>
                    <Index fromlineno="746" tolineno="746" lineno="None">
                      <Subscript fromlineno="746" tolineno="746" lineno="746">
                        <Getattr fromlineno="746" tolineno="746" lineno="746" attrname="runq_fnid" expr="self">
                          <Name fromlineno="746" tolineno="746" lineno="746" name="self"/>
                        </Getattr>
                        <Index fromlineno="746" tolineno="746" lineno="None">
                          <Name fromlineno="746" tolineno="746" lineno="746" name="task"/>
                        </Index>
                      </Subscript>
                    </Index>
                  </Subscript>
                </Assign>
                <Assign fromlineno="747" tolineno="747" lineno="747" targets="[&lt;AssName(taskname) l.747 [bb.runqueue] at Ox96d9c8c&gt;]" value="self.runq_task[task]">
                  <AssName fromlineno="747" tolineno="747" lineno="747" name="taskname"/>
                  <Subscript fromlineno="747" tolineno="747" lineno="747">
                    <Getattr fromlineno="747" tolineno="747" lineno="747" attrname="runq_task" expr="self">
                      <Name fromlineno="747" tolineno="747" lineno="747" name="self"/>
                    </Getattr>
                    <Index fromlineno="747" tolineno="747" lineno="None">
                      <Name fromlineno="747" tolineno="747" lineno="747" name="task"/>
                    </Index>
                  </Subscript>
                </Assign>
                <Assign fromlineno="748" tolineno="748" lineno="748" targets="[&lt;AssName(stampfile) l.748 [bb.runqueue] at Ox96d9d8c&gt;]" value="('%s.%s') % ((self.dataCache.stamp[fn], taskname))">
                  <AssName fromlineno="748" tolineno="748" lineno="748" name="stampfile"/>
                  <BinOp fromlineno="748" tolineno="748" lineno="748" op="%" left="'%s.%s'" right="(self.dataCache.stamp[fn], taskname)">
                    <Const fromlineno="748" tolineno="748" lineno="748" type="str">'%s.%s'</Const>
                    <Tuple fromlineno="748" tolineno="748" lineno="748">
                      <Subscript fromlineno="748" tolineno="748" lineno="748">
                        <Getattr fromlineno="748" tolineno="748" lineno="748" attrname="stamp" expr="self.dataCache">
                          <Getattr fromlineno="748" tolineno="748" lineno="748" attrname="dataCache" expr="self">
                            <Name fromlineno="748" tolineno="748" lineno="748" name="self"/>
                          </Getattr>
                        </Getattr>
                        <Index fromlineno="748" tolineno="748" lineno="None">
                          <Name fromlineno="748" tolineno="748" lineno="748" name="fn"/>
                        </Index>
                      </Subscript>
                      <Name fromlineno="748" tolineno="748" lineno="748" name="taskname"/>
                    </Tuple>
                  </BinOp>
                </Assign>
                <Assign fromlineno="749" tolineno="749" lineno="749" targets="[&lt;AssName(iscurrent) l.749 [bb.runqueue] at Ox96d9f4c&gt;]" value="True">
                  <AssName fromlineno="749" tolineno="749" lineno="749" name="iscurrent"/>
                  <Const fromlineno="749" tolineno="749" lineno="749" type="bool">True</Const>
                </Assign>
                <Assign fromlineno="751" tolineno="751" lineno="751" targets="[&lt;AssName(t1) l.751 [bb.runqueue] at Ox96d9fec&gt;]" value="os.stat(stampfile)[stat.ST_MTIME]">
                  <AssName fromlineno="751" tolineno="751" lineno="751" name="t1"/>
                  <Subscript fromlineno="751" tolineno="751" lineno="751">
                    <CallFunc fromlineno="751" tolineno="751" lineno="751" func="Getattr(stat)">
                      <Getattr fromlineno="751" tolineno="751" lineno="751" attrname="stat" expr="os">
                        <Name fromlineno="751" tolineno="751" lineno="751" name="os"/>
                      </Getattr>
                      <Name fromlineno="751" tolineno="751" lineno="751" name="stampfile"/>
                    </CallFunc>
                    <Index fromlineno="751" tolineno="751" lineno="None">
                      <Getattr fromlineno="751" tolineno="751" lineno="751" attrname="ST_MTIME" expr="stat">
                        <Name fromlineno="751" tolineno="751" lineno="751" name="stat"/>
                      </Getattr>
                    </Index>
                  </Subscript>
                </Assign>
                <For fromlineno="752" tolineno="763" lineno="752">
                  <AssName fromlineno="752" tolineno="752" lineno="752" name="dep"/>
                  <Subscript fromlineno="752" tolineno="752" lineno="752">
                    <Getattr fromlineno="752" tolineno="752" lineno="752" attrname="runq_depends" expr="self">
                      <Name fromlineno="752" tolineno="752" lineno="752" name="self"/>
                    </Getattr>
                    <Index fromlineno="752" tolineno="752" lineno="None">
                      <Name fromlineno="752" tolineno="752" lineno="752" name="task"/>
                    </Index>
                  </Subscript>
                  <If fromlineno="753" tolineno="763" lineno="753">
                    <Name fromlineno="753" tolineno="753" lineno="753" name="iscurrent"/>
                    <Assign fromlineno="754" tolineno="754" lineno="754" targets="[&lt;AssName(fn2) l.754 [bb.runqueue] at Ox96dd38c&gt;]" value="self.taskData.fn_index[self.runq_fnid[dep]]">
                      <AssName fromlineno="754" tolineno="754" lineno="754" name="fn2"/>
                      <Subscript fromlineno="754" tolineno="754" lineno="754">
                        <Getattr fromlineno="754" tolineno="754" lineno="754" attrname="fn_index" expr="self.taskData">
                          <Getattr fromlineno="754" tolineno="754" lineno="754" attrname="taskData" expr="self">
                            <Name fromlineno="754" tolineno="754" lineno="754" name="self"/>
                          </Getattr>
                        </Getattr>
                        <Index fromlineno="754" tolineno="754" lineno="None">
                          <Subscript fromlineno="754" tolineno="754" lineno="754">
                            <Getattr fromlineno="754" tolineno="754" lineno="754" attrname="runq_fnid" expr="self">
                              <Name fromlineno="754" tolineno="754" lineno="754" name="self"/>
                            </Getattr>
                            <Index fromlineno="754" tolineno="754" lineno="None">
                              <Name fromlineno="754" tolineno="754" lineno="754" name="dep"/>
                            </Index>
                          </Subscript>
                        </Index>
                      </Subscript>
                    </Assign>
                    <Assign fromlineno="755" tolineno="755" lineno="755" targets="[&lt;AssName(taskname2) l.755 [bb.runqueue] at Ox96dd54c&gt;]" value="self.runq_task[dep]">
                      <AssName fromlineno="755" tolineno="755" lineno="755" name="taskname2"/>
                      <Subscript fromlineno="755" tolineno="755" lineno="755">
                        <Getattr fromlineno="755" tolineno="755" lineno="755" attrname="runq_task" expr="self">
                          <Name fromlineno="755" tolineno="755" lineno="755" name="self"/>
                        </Getattr>
                        <Index fromlineno="755" tolineno="755" lineno="None">
                          <Name fromlineno="755" tolineno="755" lineno="755" name="dep"/>
                        </Index>
                      </Subscript>
                    </Assign>
                    <Assign fromlineno="756" tolineno="756" lineno="756" targets="[&lt;AssName(stampfile2) l.756 [bb.runqueue] at Ox96dd66c&gt;]" value="('%s.%s') % ((self.dataCache.stamp[fn2], taskname2))">
                      <AssName fromlineno="756" tolineno="756" lineno="756" name="stampfile2"/>
                      <BinOp fromlineno="756" tolineno="756" lineno="756" op="%" left="'%s.%s'" right="(self.dataCache.stamp[fn2], taskname2)">
                        <Const fromlineno="756" tolineno="756" lineno="756" type="str">'%s.%s'</Const>
                        <Tuple fromlineno="756" tolineno="756" lineno="756">
                          <Subscript fromlineno="756" tolineno="756" lineno="756">
                            <Getattr fromlineno="756" tolineno="756" lineno="756" attrname="stamp" expr="self.dataCache">
                              <Getattr fromlineno="756" tolineno="756" lineno="756" attrname="dataCache" expr="self">
                                <Name fromlineno="756" tolineno="756" lineno="756" name="self"/>
                              </Getattr>
                            </Getattr>
                            <Index fromlineno="756" tolineno="756" lineno="None">
                              <Name fromlineno="756" tolineno="756" lineno="756" name="fn2"/>
                            </Index>
                          </Subscript>
                          <Name fromlineno="756" tolineno="756" lineno="756" name="taskname2"/>
                        </Tuple>
                      </BinOp>
                    </Assign>
                    <If fromlineno="757" tolineno="763" lineno="757">
                      <BoolOp fromlineno="757" tolineno="757" lineno="757" op="or" values="fn == fn2,(fulldeptree) and (fn2 not in stampwhitelist),">
                        <Compare fromlineno="757" tolineno="757" lineno="757" op="('==', &lt;Name(fn2) l.757 [bb.runqueue] at Ox96dd92c&gt;)">
                          <Name fromlineno="757" tolineno="757" lineno="757" name="fn"/>
                          <Name fromlineno="757" tolineno="757" lineno="757" name="fn2"/>
                        </Compare>
                        <BoolOp fromlineno="757" tolineno="757" lineno="757" op="and" values="fulldeptree,fn2 not in stampwhitelist,">
                          <Name fromlineno="757" tolineno="757" lineno="757" name="fulldeptree"/>
                          <Compare fromlineno="757" tolineno="757" lineno="757" op="('not in', &lt;Name(stampwhitelist) l.757 [bb.runqueue] at Ox96dda4c&gt;)">
                            <Name fromlineno="757" tolineno="757" lineno="757" name="fn2"/>
                            <Name fromlineno="757" tolineno="757" lineno="757" name="stampwhitelist"/>
                          </Compare>
                        </BoolOp>
                      </BoolOp>
                      <If fromlineno="758" tolineno="763" lineno="758">
                        <Compare fromlineno="758" tolineno="758" lineno="758" op="('in', &lt;Name(notcurrent) l.758 [bb.runqueue] at Ox96ddb2c&gt;)">
                          <Name fromlineno="758" tolineno="758" lineno="758" name="dep"/>
                          <Name fromlineno="758" tolineno="758" lineno="758" name="notcurrent"/>
                        </Compare>
                        <Assign fromlineno="759" tolineno="759" lineno="759" targets="[&lt;AssName(iscurrent) l.759 [bb.runqueue] at Ox96ddbcc&gt;]" value="False">
                          <AssName fromlineno="759" tolineno="759" lineno="759" name="iscurrent"/>
                          <Const fromlineno="759" tolineno="759" lineno="759" type="bool">False</Const>
                        </Assign>
                        <Assign fromlineno="761" tolineno="761" lineno="761" targets="[&lt;AssName(t2) l.761 [bb.runqueue] at Ox96ddc6c&gt;]" value="os.stat(stampfile2)[stat.ST_MTIME]">
                          <AssName fromlineno="761" tolineno="761" lineno="761" name="t2"/>
                          <Subscript fromlineno="761" tolineno="761" lineno="761">
                            <CallFunc fromlineno="761" tolineno="761" lineno="761" func="Getattr(stat)">
                              <Getattr fromlineno="761" tolineno="761" lineno="761" attrname="stat" expr="os">
                                <Name fromlineno="761" tolineno="761" lineno="761" name="os"/>
                              </Getattr>
                              <Name fromlineno="761" tolineno="761" lineno="761" name="stampfile2"/>
                            </CallFunc>
                            <Index fromlineno="761" tolineno="761" lineno="None">
                              <Getattr fromlineno="761" tolineno="761" lineno="761" attrname="ST_MTIME" expr="stat">
                                <Name fromlineno="761" tolineno="761" lineno="761" name="stat"/>
                              </Getattr>
                            </Index>
                          </Subscript>
                        </Assign>
                        <If fromlineno="762" tolineno="763" lineno="762">
                          <Compare fromlineno="762" tolineno="762" lineno="762" op="('&lt;', &lt;Name(t2) l.762 [bb.runqueue] at Ox96dde8c&gt;)">
                            <Name fromlineno="762" tolineno="762" lineno="762" name="t1"/>
                            <Name fromlineno="762" tolineno="762" lineno="762" name="t2"/>
                          </Compare>
                          <Assign fromlineno="763" tolineno="763" lineno="763" targets="[&lt;AssName(iscurrent) l.763 [bb.runqueue] at Ox96ddf2c&gt;]" value="False">
                            <AssName fromlineno="763" tolineno="763" lineno="763" name="iscurrent"/>
                            <Const fromlineno="763" tolineno="763" lineno="763" type="bool">False</Const>
                          </Assign>
                        </If>
                      </If>
                    </If>
                  </If>
                </For>
                <Delete fromlineno="764" tolineno="764" lineno="764">
                  <Subscript fromlineno="764" tolineno="764" lineno="764">
                    <Name fromlineno="764" tolineno="764" lineno="764" name="unchecked"/>
                    <Index fromlineno="764" tolineno="764" lineno="None">
                      <Name fromlineno="764" tolineno="764" lineno="764" name="task"/>
                    </Index>
                  </Subscript>
                </Delete>
                <If fromlineno="765" tolineno="768" lineno="765">
                  <Name fromlineno="765" tolineno="765" lineno="765" name="iscurrent"/>
                  <Discard fromlineno="766" tolineno="766" lineno="766">
                    <CallFunc fromlineno="766" tolineno="766" lineno="766" func="Getattr(append)">
                      <Getattr fromlineno="766" tolineno="766" lineno="766" attrname="append" expr="current">
                        <Name fromlineno="766" tolineno="766" lineno="766" name="current"/>
                      </Getattr>
                      <Name fromlineno="766" tolineno="766" lineno="766" name="task"/>
                    </CallFunc>
                  </Discard>
                  <Discard fromlineno="768" tolineno="768" lineno="768">
                    <CallFunc fromlineno="768" tolineno="768" lineno="768" func="Getattr(append)">
                      <Getattr fromlineno="768" tolineno="768" lineno="768" attrname="append" expr="notcurrent">
                        <Name fromlineno="768" tolineno="768" lineno="768" name="notcurrent"/>
                      </Getattr>
                      <Name fromlineno="768" tolineno="768" lineno="768" name="task"/>
                    </CallFunc>
                  </Discard>
                </If>
              </If>
              <Discard fromlineno="770" tolineno="770" lineno="770">
                <CallFunc fromlineno="770" tolineno="770" lineno="770" func="Name(check_buildable)">
                  <Name fromlineno="770" tolineno="770" lineno="770" name="check_buildable"/>
                  <Name fromlineno="770" tolineno="770" lineno="770" name="self"/>
                  <Name fromlineno="770" tolineno="770" lineno="770" name="task"/>
                  <Name fromlineno="770" tolineno="770" lineno="770" name="nextbuildable"/>
                </CallFunc>
              </Discard>
            </For>
            <Assign fromlineno="772" tolineno="772" lineno="772" targets="[&lt;AssName(buildable) l.772 [bb.runqueue] at Ox96e12cc&gt;]" value="nextbuildable">
              <AssName fromlineno="772" tolineno="772" lineno="772" name="buildable"/>
              <Name fromlineno="772" tolineno="772" lineno="772" name="nextbuildable"/>
            </Assign>
          </While>
          <If fromlineno="783" tolineno="784" lineno="783">
            <Compare fromlineno="783" tolineno="783" lineno="783" op="('&gt;', &lt;Const(int) l.783 [bb.runqueue] at Ox96e140c&gt;)">
              <CallFunc fromlineno="783" tolineno="783" lineno="783" func="Name(len)">
                <Name fromlineno="783" tolineno="783" lineno="783" name="len"/>
                <Name fromlineno="783" tolineno="783" lineno="783" name="unchecked"/>
              </CallFunc>
              <Const fromlineno="783" tolineno="783" lineno="783" type="int">0</Const>
            </Compare>
            <Discard fromlineno="784" tolineno="784" lineno="784">
              <CallFunc fromlineno="784" tolineno="784" lineno="784" func="Getattr(fatal)">
                <Getattr fromlineno="784" tolineno="784" lineno="784" attrname="fatal" expr="bb">
                  <Name fromlineno="784" tolineno="784" lineno="784" name="bb"/>
                </Getattr>
                <Const fromlineno="784" tolineno="784" lineno="784" type="str">'check_stamps fatal internal error'</Const>
              </CallFunc>
            </Discard>
          </If>
          <Return fromlineno="785" tolineno="785" lineno="785">
            <Name fromlineno="785" tolineno="785" lineno="785" name="current"/>
          </Return>
        </Function>
        <Function fromlineno="787" tolineno="827" lineno="787">
          <Arguments fromlineno="787" tolineno="787" lineno="None" format_args="self, task">
            <AssName fromlineno="787" tolineno="787" lineno="787" name="self"/>
            <AssName fromlineno="787" tolineno="787" lineno="787" name="task"/>
          </Arguments>
          <If fromlineno="789" tolineno="795" lineno="789">
            <Compare fromlineno="789" tolineno="789" lineno="789" op="('==', &lt;Const(str) l.789 [bb.runqueue] at Ox96e176c&gt;)">
              <Getattr fromlineno="789" tolineno="789" lineno="789" attrname="stamppolicy" expr="self">
                <Name fromlineno="789" tolineno="789" lineno="789" name="self"/>
              </Getattr>
              <Const fromlineno="789" tolineno="789" lineno="789" type="str">'perfile'</Const>
            </Compare>
            <Assign fromlineno="790" tolineno="790" lineno="790" targets="[&lt;AssName(fulldeptree) l.790 [bb.runqueue] at Ox96e180c&gt;]" value="False">
              <AssName fromlineno="790" tolineno="790" lineno="790" name="fulldeptree"/>
              <Const fromlineno="790" tolineno="790" lineno="790" type="bool">False</Const>
            </Assign>
            <Assign fromlineno="792" tolineno="792" lineno="792" targets="[&lt;AssName(fulldeptree) l.792 [bb.runqueue] at Ox96e18cc&gt;]" value="True">
              <AssName fromlineno="792" tolineno="792" lineno="792" name="fulldeptree"/>
              <Const fromlineno="792" tolineno="792" lineno="792" type="bool">True</Const>
            </Assign>
            <Assign fromlineno="793" tolineno="793" lineno="793" targets="[&lt;AssName(stampwhitelist) l.793 [bb.runqueue] at Ox96e194c&gt;]" value="[]">
              <AssName fromlineno="793" tolineno="793" lineno="793" name="stampwhitelist"/>
              <List fromlineno="793" tolineno="793" lineno="793"/>
            </Assign>
            <If fromlineno="794" tolineno="795" lineno="794">
              <Compare fromlineno="794" tolineno="794" lineno="794" op="('==', &lt;Const(str) l.794 [bb.runqueue] at Ox96e1aac&gt;)">
                <Getattr fromlineno="794" tolineno="794" lineno="794" attrname="stamppolicy" expr="self">
                  <Name fromlineno="794" tolineno="794" lineno="794" name="self"/>
                </Getattr>
                <Const fromlineno="794" tolineno="794" lineno="794" type="str">'whitelist'</Const>
              </Compare>
              <Assign fromlineno="795" tolineno="795" lineno="795" targets="[&lt;AssName(stampwhitelist) l.795 [bb.runqueue] at Ox96e1b4c&gt;]" value="self.stampfnwhitelist">
                <AssName fromlineno="795" tolineno="795" lineno="795" name="stampwhitelist"/>
                <Getattr fromlineno="795" tolineno="795" lineno="795" attrname="stampfnwhitelist" expr="self">
                  <Name fromlineno="795" tolineno="795" lineno="795" name="self"/>
                </Getattr>
              </Assign>
            </If>
          </If>
          <Assign fromlineno="797" tolineno="797" lineno="797" targets="[&lt;AssName(fn) l.797 [bb.runqueue] at Ox96e1bac&gt;]" value="self.taskData.fn_index[self.runq_fnid[task]]">
            <AssName fromlineno="797" tolineno="797" lineno="797" name="fn"/>
            <Subscript fromlineno="797" tolineno="797" lineno="797">
              <Getattr fromlineno="797" tolineno="797" lineno="797" attrname="fn_index" expr="self.taskData">
                <Getattr fromlineno="797" tolineno="797" lineno="797" attrname="taskData" expr="self">
                  <Name fromlineno="797" tolineno="797" lineno="797" name="self"/>
                </Getattr>
              </Getattr>
              <Index fromlineno="797" tolineno="797" lineno="None">
                <Subscript fromlineno="797" tolineno="797" lineno="797">
                  <Getattr fromlineno="797" tolineno="797" lineno="797" attrname="runq_fnid" expr="self">
                    <Name fromlineno="797" tolineno="797" lineno="797" name="self"/>
                  </Getattr>
                  <Index fromlineno="797" tolineno="797" lineno="None">
                    <Name fromlineno="797" tolineno="797" lineno="797" name="task"/>
                  </Index>
                </Subscript>
              </Index>
            </Subscript>
          </Assign>
          <Assign fromlineno="798" tolineno="798" lineno="798" targets="[&lt;AssName(taskname) l.798 [bb.runqueue] at Ox96e1d6c&gt;]" value="self.runq_task[task]">
            <AssName fromlineno="798" tolineno="798" lineno="798" name="taskname"/>
            <Subscript fromlineno="798" tolineno="798" lineno="798">
              <Getattr fromlineno="798" tolineno="798" lineno="798" attrname="runq_task" expr="self">
                <Name fromlineno="798" tolineno="798" lineno="798" name="self"/>
              </Getattr>
              <Index fromlineno="798" tolineno="798" lineno="None">
                <Name fromlineno="798" tolineno="798" lineno="798" name="task"/>
              </Index>
            </Subscript>
          </Assign>
          <Assign fromlineno="799" tolineno="799" lineno="799" targets="[&lt;AssName(stampfile) l.799 [bb.runqueue] at Ox96e1e8c&gt;]" value="('%s.%s') % ((self.dataCache.stamp[fn], taskname))">
            <AssName fromlineno="799" tolineno="799" lineno="799" name="stampfile"/>
            <BinOp fromlineno="799" tolineno="799" lineno="799" op="%" left="'%s.%s'" right="(self.dataCache.stamp[fn], taskname)">
              <Const fromlineno="799" tolineno="799" lineno="799" type="str">'%s.%s'</Const>
              <Tuple fromlineno="799" tolineno="799" lineno="799">
                <Subscript fromlineno="799" tolineno="799" lineno="799">
                  <Getattr fromlineno="799" tolineno="799" lineno="799" attrname="stamp" expr="self.dataCache">
                    <Getattr fromlineno="799" tolineno="799" lineno="799" attrname="dataCache" expr="self">
                      <Name fromlineno="799" tolineno="799" lineno="799" name="self"/>
                    </Getattr>
                  </Getattr>
                  <Index fromlineno="799" tolineno="799" lineno="None">
                    <Name fromlineno="799" tolineno="799" lineno="799" name="fn"/>
                  </Index>
                </Subscript>
                <Name fromlineno="799" tolineno="799" lineno="799" name="taskname"/>
              </Tuple>
            </BinOp>
          </Assign>
          <If fromlineno="801" tolineno="803" lineno="801">
            <UnaryOp fromlineno="801" tolineno="801" lineno="801">
              <CallFunc fromlineno="801" tolineno="801" lineno="801" func="Getattr(access)">
                <Getattr fromlineno="801" tolineno="801" lineno="801" attrname="access" expr="os">
                  <Name fromlineno="801" tolineno="801" lineno="801" name="os"/>
                </Getattr>
                <Name fromlineno="801" tolineno="801" lineno="801" name="stampfile"/>
                <Getattr fromlineno="801" tolineno="801" lineno="801" attrname="F_OK" expr="os">
                  <Name fromlineno="801" tolineno="801" lineno="801" name="os"/>
                </Getattr>
              </CallFunc>
            </UnaryOp>
            <Discard fromlineno="802" tolineno="802" lineno="802">
              <CallFunc fromlineno="802" tolineno="802" lineno="802" func="Getattr(debug)">
                <Getattr fromlineno="802" tolineno="802" lineno="802" attrname="debug" expr="bb.msg">
                  <Getattr fromlineno="802" tolineno="802" lineno="802" attrname="msg" expr="bb">
                    <Name fromlineno="802" tolineno="802" lineno="802" name="bb"/>
                  </Getattr>
                </Getattr>
                <Const fromlineno="802" tolineno="802" lineno="802" type="int">2</Const>
                <Getattr fromlineno="802" tolineno="802" lineno="802" attrname="RunQueue" expr="bb.msg.domain">
                  <Getattr fromlineno="802" tolineno="802" lineno="802" attrname="domain" expr="bb.msg">
                    <Getattr fromlineno="802" tolineno="802" lineno="802" attrname="msg" expr="bb">
                      <Name fromlineno="802" tolineno="802" lineno="802" name="bb"/>
                    </Getattr>
                  </Getattr>
                </Getattr>
                <BinOp fromlineno="802" tolineno="802" lineno="802" op="%" left="'Stampfile %s not available\n'" right="stampfile">
                  <Const fromlineno="802" tolineno="802" lineno="802" type="str">'Stampfile %s not available\n'</Const>
                  <Name fromlineno="802" tolineno="802" lineno="802" name="stampfile"/>
                </BinOp>
              </CallFunc>
            </Discard>
            <Return fromlineno="803" tolineno="803" lineno="803">
              <Const fromlineno="803" tolineno="803" lineno="803" type="bool">False</Const>
            </Return>
          </If>
          <Assign fromlineno="805" tolineno="805" lineno="805" targets="[&lt;AssName(taskdep) l.805 [bb.runqueue] at Ox96e53ec&gt;]" value="self.dataCache.task_deps[fn]">
            <AssName fromlineno="805" tolineno="805" lineno="805" name="taskdep"/>
            <Subscript fromlineno="805" tolineno="805" lineno="805">
              <Getattr fromlineno="805" tolineno="805" lineno="805" attrname="task_deps" expr="self.dataCache">
                <Getattr fromlineno="805" tolineno="805" lineno="805" attrname="dataCache" expr="self">
                  <Name fromlineno="805" tolineno="805" lineno="805" name="self"/>
                </Getattr>
              </Getattr>
              <Index fromlineno="805" tolineno="805" lineno="None">
                <Name fromlineno="805" tolineno="805" lineno="805" name="fn"/>
              </Index>
            </Subscript>
          </Assign>
          <If fromlineno="806" tolineno="808" lineno="806">
            <BoolOp fromlineno="806" tolineno="806" lineno="806" op="and" values="'nostamp' in taskdep,taskname in taskdep['nostamp'],">
              <Compare fromlineno="806" tolineno="806" lineno="806" op="('in', &lt;Name(taskdep) l.806 [bb.runqueue] at Ox96e55ec&gt;)">
                <Const fromlineno="806" tolineno="806" lineno="806" type="str">'nostamp'</Const>
                <Name fromlineno="806" tolineno="806" lineno="806" name="taskdep"/>
              </Compare>
              <Compare fromlineno="806" tolineno="806" lineno="806" op="('in', &lt;Subscript() l.806 [bb.runqueue] at Ox96e568c&gt;)">
                <Name fromlineno="806" tolineno="806" lineno="806" name="taskname"/>
                <Subscript fromlineno="806" tolineno="806" lineno="806">
                  <Name fromlineno="806" tolineno="806" lineno="806" name="taskdep"/>
                  <Index fromlineno="806" tolineno="806" lineno="None">
                    <Const fromlineno="806" tolineno="806" lineno="806" type="str">'nostamp'</Const>
                  </Index>
                </Subscript>
              </Compare>
            </BoolOp>
            <Discard fromlineno="807" tolineno="807" lineno="807">
              <CallFunc fromlineno="807" tolineno="807" lineno="807" func="Getattr(debug)">
                <Getattr fromlineno="807" tolineno="807" lineno="807" attrname="debug" expr="bb.msg">
                  <Getattr fromlineno="807" tolineno="807" lineno="807" attrname="msg" expr="bb">
                    <Name fromlineno="807" tolineno="807" lineno="807" name="bb"/>
                  </Getattr>
                </Getattr>
                <Const fromlineno="807" tolineno="807" lineno="807" type="int">2</Const>
                <Getattr fromlineno="807" tolineno="807" lineno="807" attrname="RunQueue" expr="bb.msg.domain">
                  <Getattr fromlineno="807" tolineno="807" lineno="807" attrname="domain" expr="bb.msg">
                    <Getattr fromlineno="807" tolineno="807" lineno="807" attrname="msg" expr="bb">
                      <Name fromlineno="807" tolineno="807" lineno="807" name="bb"/>
                    </Getattr>
                  </Getattr>
                </Getattr>
                <BinOp fromlineno="807" tolineno="807" lineno="807" op="%" left="'%s.%s is nostamp\n'" right="(fn, taskname)">
                  <Const fromlineno="807" tolineno="807" lineno="807" type="str">'%s.%s is nostamp\n'</Const>
                  <Tuple fromlineno="807" tolineno="807" lineno="807">
                    <Name fromlineno="807" tolineno="807" lineno="807" name="fn"/>
                    <Name fromlineno="807" tolineno="807" lineno="807" name="taskname"/>
                  </Tuple>
                </BinOp>
              </CallFunc>
            </Discard>
            <Return fromlineno="808" tolineno="808" lineno="808">
              <Const fromlineno="808" tolineno="808" lineno="808" type="bool">False</Const>
            </Return>
          </If>
          <Assign fromlineno="810" tolineno="810" lineno="810" targets="[&lt;AssName(iscurrent) l.810 [bb.runqueue] at Ox96e59cc&gt;]" value="True">
            <AssName fromlineno="810" tolineno="810" lineno="810" name="iscurrent"/>
            <Const fromlineno="810" tolineno="810" lineno="810" type="bool">True</Const>
          </Assign>
          <Assign fromlineno="811" tolineno="811" lineno="811" targets="[&lt;AssName(t1) l.811 [bb.runqueue] at Ox96e5a6c&gt;]" value="os.stat(stampfile)[stat.ST_MTIME]">
            <AssName fromlineno="811" tolineno="811" lineno="811" name="t1"/>
            <Subscript fromlineno="811" tolineno="811" lineno="811">
              <CallFunc fromlineno="811" tolineno="811" lineno="811" func="Getattr(stat)">
                <Getattr fromlineno="811" tolineno="811" lineno="811" attrname="stat" expr="os">
                  <Name fromlineno="811" tolineno="811" lineno="811" name="os"/>
                </Getattr>
                <Name fromlineno="811" tolineno="811" lineno="811" name="stampfile"/>
              </CallFunc>
              <Index fromlineno="811" tolineno="811" lineno="None">
                <Getattr fromlineno="811" tolineno="811" lineno="811" attrname="ST_MTIME" expr="stat">
                  <Name fromlineno="811" tolineno="811" lineno="811" name="stat"/>
                </Getattr>
              </Index>
            </Subscript>
          </Assign>
          <For fromlineno="812" tolineno="825" lineno="812">
            <AssName fromlineno="812" tolineno="812" lineno="812" name="dep"/>
            <Subscript fromlineno="812" tolineno="812" lineno="812">
              <Getattr fromlineno="812" tolineno="812" lineno="812" attrname="runq_depends" expr="self">
                <Name fromlineno="812" tolineno="812" lineno="812" name="self"/>
              </Getattr>
              <Index fromlineno="812" tolineno="812" lineno="None">
                <Name fromlineno="812" tolineno="812" lineno="812" name="task"/>
              </Index>
            </Subscript>
            <If fromlineno="813" tolineno="825" lineno="813">
              <Name fromlineno="813" tolineno="813" lineno="813" name="iscurrent"/>
              <Assign fromlineno="814" tolineno="814" lineno="814" targets="[&lt;AssName(fn2) l.814 [bb.runqueue] at Ox96e5dcc&gt;]" value="self.taskData.fn_index[self.runq_fnid[dep]]">
                <AssName fromlineno="814" tolineno="814" lineno="814" name="fn2"/>
                <Subscript fromlineno="814" tolineno="814" lineno="814">
                  <Getattr fromlineno="814" tolineno="814" lineno="814" attrname="fn_index" expr="self.taskData">
                    <Getattr fromlineno="814" tolineno="814" lineno="814" attrname="taskData" expr="self">
                      <Name fromlineno="814" tolineno="814" lineno="814" name="self"/>
                    </Getattr>
                  </Getattr>
                  <Index fromlineno="814" tolineno="814" lineno="None">
                    <Subscript fromlineno="814" tolineno="814" lineno="814">
                      <Getattr fromlineno="814" tolineno="814" lineno="814" attrname="runq_fnid" expr="self">
                        <Name fromlineno="814" tolineno="814" lineno="814" name="self"/>
                      </Getattr>
                      <Index fromlineno="814" tolineno="814" lineno="None">
                        <Name fromlineno="814" tolineno="814" lineno="814" name="dep"/>
                      </Index>
                    </Subscript>
                  </Index>
                </Subscript>
              </Assign>
              <Assign fromlineno="815" tolineno="815" lineno="815" targets="[&lt;AssName(taskname2) l.815 [bb.runqueue] at Ox96e5f8c&gt;]" value="self.runq_task[dep]">
                <AssName fromlineno="815" tolineno="815" lineno="815" name="taskname2"/>
                <Subscript fromlineno="815" tolineno="815" lineno="815">
                  <Getattr fromlineno="815" tolineno="815" lineno="815" attrname="runq_task" expr="self">
                    <Name fromlineno="815" tolineno="815" lineno="815" name="self"/>
                  </Getattr>
                  <Index fromlineno="815" tolineno="815" lineno="None">
                    <Name fromlineno="815" tolineno="815" lineno="815" name="dep"/>
                  </Index>
                </Subscript>
              </Assign>
              <Assign fromlineno="816" tolineno="816" lineno="816" targets="[&lt;AssName(stampfile2) l.816 [bb.runqueue] at Ox96e90cc&gt;]" value="('%s.%s') % ((self.dataCache.stamp[fn2], taskname2))">
                <AssName fromlineno="816" tolineno="816" lineno="816" name="stampfile2"/>
                <BinOp fromlineno="816" tolineno="816" lineno="816" op="%" left="'%s.%s'" right="(self.dataCache.stamp[fn2], taskname2)">
                  <Const fromlineno="816" tolineno="816" lineno="816" type="str">'%s.%s'</Const>
                  <Tuple fromlineno="816" tolineno="816" lineno="816">
                    <Subscript fromlineno="816" tolineno="816" lineno="816">
                      <Getattr fromlineno="816" tolineno="816" lineno="816" attrname="stamp" expr="self.dataCache">
                        <Getattr fromlineno="816" tolineno="816" lineno="816" attrname="dataCache" expr="self">
                          <Name fromlineno="816" tolineno="816" lineno="816" name="self"/>
                        </Getattr>
                      </Getattr>
                      <Index fromlineno="816" tolineno="816" lineno="None">
                        <Name fromlineno="816" tolineno="816" lineno="816" name="fn2"/>
                      </Index>
                    </Subscript>
                    <Name fromlineno="816" tolineno="816" lineno="816" name="taskname2"/>
                  </Tuple>
                </BinOp>
              </Assign>
              <If fromlineno="817" tolineno="825" lineno="817">
                <BoolOp fromlineno="817" tolineno="817" lineno="817" op="or" values="fn == fn2,(fulldeptree) and (fn2 not in stampwhitelist),">
                  <Compare fromlineno="817" tolineno="817" lineno="817" op="('==', &lt;Name(fn2) l.817 [bb.runqueue] at Ox96e938c&gt;)">
                    <Name fromlineno="817" tolineno="817" lineno="817" name="fn"/>
                    <Name fromlineno="817" tolineno="817" lineno="817" name="fn2"/>
                  </Compare>
                  <BoolOp fromlineno="817" tolineno="817" lineno="817" op="and" values="fulldeptree,fn2 not in stampwhitelist,">
                    <Name fromlineno="817" tolineno="817" lineno="817" name="fulldeptree"/>
                    <Compare fromlineno="817" tolineno="817" lineno="817" op="('not in', &lt;Name(stampwhitelist) l.817 [bb.runqueue] at Ox96e94ac&gt;)">
                      <Name fromlineno="817" tolineno="817" lineno="817" name="fn2"/>
                      <Name fromlineno="817" tolineno="817" lineno="817" name="stampwhitelist"/>
                    </Compare>
                  </BoolOp>
                </BoolOp>
                <TryExcept fromlineno="818" tolineno="825" lineno="818">
                  <Assign fromlineno="819" tolineno="819" lineno="819" targets="[&lt;AssName(t2) l.819 [bb.runqueue] at Ox96e956c&gt;]" value="os.stat(stampfile2)[stat.ST_MTIME]">
                    <AssName fromlineno="819" tolineno="819" lineno="819" name="t2"/>
                    <Subscript fromlineno="819" tolineno="819" lineno="819">
                      <CallFunc fromlineno="819" tolineno="819" lineno="819" func="Getattr(stat)">
                        <Getattr fromlineno="819" tolineno="819" lineno="819" attrname="stat" expr="os">
                          <Name fromlineno="819" tolineno="819" lineno="819" name="os"/>
                        </Getattr>
                        <Name fromlineno="819" tolineno="819" lineno="819" name="stampfile2"/>
                      </CallFunc>
                      <Index fromlineno="819" tolineno="819" lineno="None">
                        <Getattr fromlineno="819" tolineno="819" lineno="819" attrname="ST_MTIME" expr="stat">
                          <Name fromlineno="819" tolineno="819" lineno="819" name="stat"/>
                        </Getattr>
                      </Index>
                    </Subscript>
                  </Assign>
                  <If fromlineno="820" tolineno="822" lineno="820">
                    <Compare fromlineno="820" tolineno="820" lineno="820" op="('&lt;', &lt;Name(t2) l.820 [bb.runqueue] at Ox96e978c&gt;)">
                      <Name fromlineno="820" tolineno="820" lineno="820" name="t1"/>
                      <Name fromlineno="820" tolineno="820" lineno="820" name="t2"/>
                    </Compare>
                    <Discard fromlineno="821" tolineno="821" lineno="821">
                      <CallFunc fromlineno="821" tolineno="821" lineno="821" func="Getattr(debug)">
                        <Getattr fromlineno="821" tolineno="821" lineno="821" attrname="debug" expr="bb.msg">
                          <Getattr fromlineno="821" tolineno="821" lineno="821" attrname="msg" expr="bb">
                            <Name fromlineno="821" tolineno="821" lineno="821" name="bb"/>
                          </Getattr>
                        </Getattr>
                        <Const fromlineno="821" tolineno="821" lineno="821" type="int">2</Const>
                        <Getattr fromlineno="821" tolineno="821" lineno="821" attrname="RunQueue" expr="bb.msg.domain">
                          <Getattr fromlineno="821" tolineno="821" lineno="821" attrname="domain" expr="bb.msg">
                            <Getattr fromlineno="821" tolineno="821" lineno="821" attrname="msg" expr="bb">
                              <Name fromlineno="821" tolineno="821" lineno="821" name="bb"/>
                            </Getattr>
                          </Getattr>
                        </Getattr>
                        <BinOp fromlineno="821" tolineno="821" lineno="821" op="%" left="'Stampfile %s &lt; %s'" right="(stampfile, stampfile2)">
                          <Const fromlineno="821" tolineno="821" lineno="821" type="str">'Stampfile %s &lt; %s'</Const>
                          <Tuple fromlineno="821" tolineno="821" lineno="821">
                            <Name fromlineno="821" tolineno="821" lineno="821" name="stampfile"/>
                            <Name fromlineno="821" tolineno="821" lineno="821" name="stampfile2"/>
                          </Tuple>
                        </BinOp>
                      </CallFunc>
                    </Discard>
                    <Assign fromlineno="822" tolineno="822" lineno="822" targets="[&lt;AssName(iscurrent) l.822 [bb.runqueue] at Ox96e9a4c&gt;]" value="False">
                      <AssName fromlineno="822" tolineno="822" lineno="822" name="iscurrent"/>
                      <Const fromlineno="822" tolineno="822" lineno="822" type="bool">False</Const>
                    </Assign>
                  </If>
                  <ExceptHandler fromlineno="823" tolineno="825" lineno="823">
                    <Discard fromlineno="824" tolineno="824" lineno="824">
                      <CallFunc fromlineno="824" tolineno="824" lineno="824" func="Getattr(debug)">
                        <Getattr fromlineno="824" tolineno="824" lineno="824" attrname="debug" expr="bb.msg">
                          <Getattr fromlineno="824" tolineno="824" lineno="824" attrname="msg" expr="bb">
                            <Name fromlineno="824" tolineno="824" lineno="824" name="bb"/>
                          </Getattr>
                        </Getattr>
                        <Const fromlineno="824" tolineno="824" lineno="824" type="int">2</Const>
                        <Getattr fromlineno="824" tolineno="824" lineno="824" attrname="RunQueue" expr="bb.msg.domain">
                          <Getattr fromlineno="824" tolineno="824" lineno="824" attrname="domain" expr="bb.msg">
                            <Getattr fromlineno="824" tolineno="824" lineno="824" attrname="msg" expr="bb">
                              <Name fromlineno="824" tolineno="824" lineno="824" name="bb"/>
                            </Getattr>
                          </Getattr>
                        </Getattr>
                        <BinOp fromlineno="824" tolineno="824" lineno="824" op="%" left="'Exception reading %s for %s'" right="(stampfile2, stampfile)">
                          <Const fromlineno="824" tolineno="824" lineno="824" type="str">'Exception reading %s for %s'</Const>
                          <Tuple fromlineno="824" tolineno="824" lineno="824">
                            <Name fromlineno="824" tolineno="824" lineno="824" name="stampfile2"/>
                            <Name fromlineno="824" tolineno="824" lineno="824" name="stampfile"/>
                          </Tuple>
                        </BinOp>
                      </CallFunc>
                    </Discard>
                    <Assign fromlineno="825" tolineno="825" lineno="825" targets="[&lt;AssName(iscurrent) l.825 [bb.runqueue] at Ox96e9d6c&gt;]" value="False">
                      <AssName fromlineno="825" tolineno="825" lineno="825" name="iscurrent"/>
                      <Const fromlineno="825" tolineno="825" lineno="825" type="bool">False</Const>
                    </Assign>
                  </ExceptHandler>
                </TryExcept>
              </If>
            </If>
          </For>
          <Return fromlineno="827" tolineno="827" lineno="827">
            <Name fromlineno="827" tolineno="827" lineno="827" name="iscurrent"/>
          </Return>
        </Function>
        <Function fromlineno="829" tolineno="853" lineno="829">
          <Arguments fromlineno="829" tolineno="829" lineno="None" format_args="self">
            <AssName fromlineno="829" tolineno="829" lineno="829" name="self"/>
          </Arguments>
          <Assign fromlineno="836" tolineno="836" lineno="836" targets="[&lt;AssName(failures) l.836 [bb.runqueue] at Ox96e9e8c&gt;]" value="0">
            <AssName fromlineno="836" tolineno="836" lineno="836" name="failures"/>
            <Const fromlineno="836" tolineno="836" lineno="836" type="int">0</Const>
          </Assign>
          <While fromlineno="837" tolineno="853" lineno="837">
            <Const fromlineno="837" tolineno="837" lineno="837" type="int">1</Const>
            <Assign fromlineno="838" tolineno="838" lineno="838" targets="[&lt;AssName(failed_fnids) l.838 [bb.runqueue] at Ox96e9fac&gt;]" value="[]">
              <AssName fromlineno="838" tolineno="838" lineno="838" name="failed_fnids"/>
              <List fromlineno="838" tolineno="838" lineno="838"/>
            </Assign>
            <TryFinally fromlineno="839" tolineno="843" lineno="839">
              <Discard fromlineno="840" tolineno="840" lineno="840">
                <CallFunc fromlineno="840" tolineno="840" lineno="840" func="Getattr(execute_runqueue_internal)">
                  <Getattr fromlineno="840" tolineno="840" lineno="840" attrname="execute_runqueue_internal" expr="self">
                    <Name fromlineno="840" tolineno="840" lineno="840" name="self"/>
                  </Getattr>
                </CallFunc>
              </Discard>
              <If fromlineno="842" tolineno="843" lineno="842">
                <Getattr fromlineno="842" tolineno="842" lineno="842" attrname="master_process" expr="self">
                  <Name fromlineno="842" tolineno="842" lineno="842" name="self"/>
                </Getattr>
                <Assign fromlineno="843" tolineno="843" lineno="843" targets="[&lt;AssName(failed_fnids) l.843 [bb.runqueue] at Ox96ed24c&gt;]" value="self.finish_runqueue()">
                  <AssName fromlineno="843" tolineno="843" lineno="843" name="failed_fnids"/>
                  <CallFunc fromlineno="843" tolineno="843" lineno="843" func="Getattr(finish_runqueue)">
                    <Getattr fromlineno="843" tolineno="843" lineno="843" attrname="finish_runqueue" expr="self">
                      <Name fromlineno="843" tolineno="843" lineno="843" name="self"/>
                    </Getattr>
                  </CallFunc>
                </Assign>
              </If>
            </TryFinally>
            <If fromlineno="844" tolineno="845" lineno="844">
              <Compare fromlineno="844" tolineno="844" lineno="844" op="('==', &lt;Const(int) l.844 [bb.runqueue] at Ox96ed3cc&gt;)">
                <CallFunc fromlineno="844" tolineno="844" lineno="844" func="Name(len)">
                  <Name fromlineno="844" tolineno="844" lineno="844" name="len"/>
                  <Name fromlineno="844" tolineno="844" lineno="844" name="failed_fnids"/>
                </CallFunc>
                <Const fromlineno="844" tolineno="844" lineno="844" type="int">0</Const>
              </Compare>
              <Return fromlineno="845" tolineno="845" lineno="845">
                <Name fromlineno="845" tolineno="845" lineno="845" name="failures"/>
              </Return>
            </If>
            <If fromlineno="846" tolineno="847" lineno="846">
              <UnaryOp fromlineno="846" tolineno="846" lineno="846">
                <Getattr fromlineno="846" tolineno="846" lineno="846" attrname="tryaltconfigs" expr="self.taskData">
                  <Getattr fromlineno="846" tolineno="846" lineno="846" attrname="taskData" expr="self">
                    <Name fromlineno="846" tolineno="846" lineno="846" name="self"/>
                  </Getattr>
                </Getattr>
              </UnaryOp>
              <Raise fromlineno="847" tolineno="847" lineno="847">
                <CallFunc fromlineno="847" tolineno="847" lineno="847" func="Getattr(TaskFailure)">
                  <Getattr fromlineno="847" tolineno="847" lineno="847" attrname="TaskFailure" expr="bb.runqueue">
                    <Getattr fromlineno="847" tolineno="847" lineno="847" attrname="runqueue" expr="bb">
                      <Name fromlineno="847" tolineno="847" lineno="847" name="bb"/>
                    </Getattr>
                  </Getattr>
                  <Name fromlineno="847" tolineno="847" lineno="847" name="failed_fnids"/>
                </CallFunc>
              </Raise>
            </If>
            <For fromlineno="848" tolineno="851" lineno="848">
              <AssName fromlineno="848" tolineno="848" lineno="848" name="fnid"/>
              <Name fromlineno="848" tolineno="848" lineno="848" name="failed_fnids"/>
              <Discard fromlineno="850" tolineno="850" lineno="850">
                <CallFunc fromlineno="850" tolineno="850" lineno="850" func="Getattr(fail_fnid)">
                  <Getattr fromlineno="850" tolineno="850" lineno="850" attrname="fail_fnid" expr="self.taskData">
                    <Getattr fromlineno="850" tolineno="850" lineno="850" attrname="taskData" expr="self">
                      <Name fromlineno="850" tolineno="850" lineno="850" name="self"/>
                    </Getattr>
                  </Getattr>
                  <Name fromlineno="850" tolineno="850" lineno="850" name="fnid"/>
                </CallFunc>
              </Discard>
              <Assign fromlineno="851" tolineno="851" lineno="851" targets="[&lt;AssName(failures) l.851 [bb.runqueue] at Ox96ed80c&gt;]" value="(failures) + (1)">
                <AssName fromlineno="851" tolineno="851" lineno="851" name="failures"/>
                <BinOp fromlineno="851" tolineno="851" lineno="851" op="+" left="failures" right="1">
                  <Name fromlineno="851" tolineno="851" lineno="851" name="failures"/>
                  <Const fromlineno="851" tolineno="851" lineno="851" type="int">1</Const>
                </BinOp>
              </Assign>
            </For>
            <Discard fromlineno="852" tolineno="852" lineno="852">
              <CallFunc fromlineno="852" tolineno="852" lineno="852" func="Getattr(reset_runqueue)">
                <Getattr fromlineno="852" tolineno="852" lineno="852" attrname="reset_runqueue" expr="self">
                  <Name fromlineno="852" tolineno="852" lineno="852" name="self"/>
                </Getattr>
              </CallFunc>
            </Discard>
            <Discard fromlineno="853" tolineno="853" lineno="853">
              <CallFunc fromlineno="853" tolineno="853" lineno="853" func="Getattr(prepare_runqueue)">
                <Getattr fromlineno="853" tolineno="853" lineno="853" attrname="prepare_runqueue" expr="self">
                  <Name fromlineno="853" tolineno="853" lineno="853" name="self"/>
                </Getattr>
              </CallFunc>
            </Discard>
          </While>
        </Function>
        <Function fromlineno="855" tolineno="874" lineno="855">
          <Arguments fromlineno="855" tolineno="855" lineno="None" format_args="self">
            <AssName fromlineno="855" tolineno="855" lineno="855" name="self"/>
          </Arguments>
          <Assign fromlineno="857" tolineno="857" lineno="857" targets="[&lt;AssAttr(stats) l.857 [bb.runqueue] at Ox96edb0c&gt;]" value="RunQueueStats()">
            <AssAttr fromlineno="857" tolineno="857" lineno="857" attrname="stats" expr="self">
              <Name fromlineno="857" tolineno="857" lineno="857" name="self"/>
            </AssAttr>
            <CallFunc fromlineno="857" tolineno="857" lineno="857" func="Name(RunQueueStats)">
              <Name fromlineno="857" tolineno="857" lineno="857" name="RunQueueStats"/>
            </CallFunc>
          </Assign>
          <Assign fromlineno="859" tolineno="859" lineno="859" targets="[&lt;AssAttr(active_builds) l.859 [bb.runqueue] at Ox96edbec&gt;]" value="0">
            <AssAttr fromlineno="859" tolineno="859" lineno="859" attrname="active_builds" expr="self">
              <Name fromlineno="859" tolineno="859" lineno="859" name="self"/>
            </AssAttr>
            <Const fromlineno="859" tolineno="859" lineno="859" type="int">0</Const>
          </Assign>
          <Assign fromlineno="860" tolineno="860" lineno="860" targets="[&lt;AssAttr(runq_buildable) l.860 [bb.runqueue] at Ox96edc8c&gt;]" value="[]">
            <AssAttr fromlineno="860" tolineno="860" lineno="860" attrname="runq_buildable" expr="self">
              <Name fromlineno="860" tolineno="860" lineno="860" name="self"/>
            </AssAttr>
            <List fromlineno="860" tolineno="860" lineno="860"/>
          </Assign>
          <Assign fromlineno="861" tolineno="861" lineno="861" targets="[&lt;AssAttr(runq_running) l.861 [bb.runqueue] at Ox96edd4c&gt;]" value="[]">
            <AssAttr fromlineno="861" tolineno="861" lineno="861" attrname="runq_running" expr="self">
              <Name fromlineno="861" tolineno="861" lineno="861" name="self"/>
            </AssAttr>
            <List fromlineno="861" tolineno="861" lineno="861"/>
          </Assign>
          <Assign fromlineno="862" tolineno="862" lineno="862" targets="[&lt;AssAttr(runq_complete) l.862 [bb.runqueue] at Ox96ede0c&gt;]" value="[]">
            <AssAttr fromlineno="862" tolineno="862" lineno="862" attrname="runq_complete" expr="self">
              <Name fromlineno="862" tolineno="862" lineno="862" name="self"/>
            </AssAttr>
            <List fromlineno="862" tolineno="862" lineno="862"/>
          </Assign>
          <Assign fromlineno="863" tolineno="863" lineno="863" targets="[&lt;AssAttr(build_pids) l.863 [bb.runqueue] at Ox96edecc&gt;]" value="{}">
            <AssAttr fromlineno="863" tolineno="863" lineno="863" attrname="build_pids" expr="self">
              <Name fromlineno="863" tolineno="863" lineno="863" name="self"/>
            </AssAttr>
            <Dict fromlineno="863" tolineno="863" lineno="863"/>
          </Assign>
          <Assign fromlineno="864" tolineno="864" lineno="864" targets="[&lt;AssAttr(failed_fnids) l.864 [bb.runqueue] at Ox96edf8c&gt;]" value="[]">
            <AssAttr fromlineno="864" tolineno="864" lineno="864" attrname="failed_fnids" expr="self">
              <Name fromlineno="864" tolineno="864" lineno="864" name="self"/>
            </AssAttr>
            <List fromlineno="864" tolineno="864" lineno="864"/>
          </Assign>
          <Assign fromlineno="865" tolineno="865" lineno="865" targets="[&lt;AssAttr(master_process) l.865 [bb.runqueue] at Ox96f106c&gt;]" value="True">
            <AssAttr fromlineno="865" tolineno="865" lineno="865" attrname="master_process" expr="self">
              <Name fromlineno="865" tolineno="865" lineno="865" name="self"/>
            </AssAttr>
            <Const fromlineno="865" tolineno="865" lineno="865" type="bool">True</Const>
          </Assign>
          <For fromlineno="868" tolineno="874" lineno="868">
            <AssName fromlineno="868" tolineno="868" lineno="868" name="task"/>
            <CallFunc fromlineno="868" tolineno="868" lineno="868" func="Name(range)">
              <Name fromlineno="868" tolineno="868" lineno="868" name="range"/>
              <CallFunc fromlineno="868" tolineno="868" lineno="868" func="Name(len)">
                <Name fromlineno="868" tolineno="868" lineno="868" name="len"/>
                <Getattr fromlineno="868" tolineno="868" lineno="868" attrname="runq_fnid" expr="self">
                  <Name fromlineno="868" tolineno="868" lineno="868" name="self"/>
                </Getattr>
              </CallFunc>
            </CallFunc>
            <Discard fromlineno="869" tolineno="869" lineno="869">
              <CallFunc fromlineno="869" tolineno="869" lineno="869" func="Getattr(append)">
                <Getattr fromlineno="869" tolineno="869" lineno="869" attrname="append" expr="self.runq_running">
                  <Getattr fromlineno="869" tolineno="869" lineno="869" attrname="runq_running" expr="self">
                    <Name fromlineno="869" tolineno="869" lineno="869" name="self"/>
                  </Getattr>
                </Getattr>
                <Const fromlineno="869" tolineno="869" lineno="869" type="int">0</Const>
              </CallFunc>
            </Discard>
            <Discard fromlineno="870" tolineno="870" lineno="870">
              <CallFunc fromlineno="870" tolineno="870" lineno="870" func="Getattr(append)">
                <Getattr fromlineno="870" tolineno="870" lineno="870" attrname="append" expr="self.runq_complete">
                  <Getattr fromlineno="870" tolineno="870" lineno="870" attrname="runq_complete" expr="self">
                    <Name fromlineno="870" tolineno="870" lineno="870" name="self"/>
                  </Getattr>
                </Getattr>
                <Const fromlineno="870" tolineno="870" lineno="870" type="int">0</Const>
              </CallFunc>
            </Discard>
            <If fromlineno="871" tolineno="874" lineno="871">
              <Compare fromlineno="871" tolineno="871" lineno="871" op="('==', &lt;Const(int) l.871 [bb.runqueue] at Ox96f15ac&gt;)">
                <CallFunc fromlineno="871" tolineno="871" lineno="871" func="Name(len)">
                  <Name fromlineno="871" tolineno="871" lineno="871" name="len"/>
                  <Subscript fromlineno="871" tolineno="871" lineno="871">
                    <Getattr fromlineno="871" tolineno="871" lineno="871" attrname="runq_depends" expr="self">
                      <Name fromlineno="871" tolineno="871" lineno="871" name="self"/>
                    </Getattr>
                    <Index fromlineno="871" tolineno="871" lineno="None">
                      <Name fromlineno="871" tolineno="871" lineno="871" name="task"/>
                    </Index>
                  </Subscript>
                </CallFunc>
                <Const fromlineno="871" tolineno="871" lineno="871" type="int">0</Const>
              </Compare>
              <Discard fromlineno="872" tolineno="872" lineno="872">
                <CallFunc fromlineno="872" tolineno="872" lineno="872" func="Getattr(append)">
                  <Getattr fromlineno="872" tolineno="872" lineno="872" attrname="append" expr="self.runq_buildable">
                    <Getattr fromlineno="872" tolineno="872" lineno="872" attrname="runq_buildable" expr="self">
                      <Name fromlineno="872" tolineno="872" lineno="872" name="self"/>
                    </Getattr>
                  </Getattr>
                  <Const fromlineno="872" tolineno="872" lineno="872" type="int">1</Const>
                </CallFunc>
              </Discard>
              <Discard fromlineno="874" tolineno="874" lineno="874">
                <CallFunc fromlineno="874" tolineno="874" lineno="874" func="Getattr(append)">
                  <Getattr fromlineno="874" tolineno="874" lineno="874" attrname="append" expr="self.runq_buildable">
                    <Getattr fromlineno="874" tolineno="874" lineno="874" attrname="runq_buildable" expr="self">
                      <Name fromlineno="874" tolineno="874" lineno="874" name="self"/>
                    </Getattr>
                  </Getattr>
                  <Const fromlineno="874" tolineno="874" lineno="874" type="int">0</Const>
                </CallFunc>
              </Discard>
            </If>
          </For>
        </Function>
        <Function fromlineno="876" tolineno="896" lineno="876">
          <Arguments fromlineno="876" tolineno="876" lineno="None" format_args="self, task">
            <AssName fromlineno="876" tolineno="876" lineno="876" name="self"/>
            <AssName fromlineno="876" tolineno="876" lineno="876" name="task"/>
          </Arguments>
          <Assign fromlineno="882" tolineno="882" lineno="882" targets="[&lt;Subscript() l.882 [bb.runqueue] at Ox96f190c&gt;]" value="1">
            <Subscript fromlineno="882" tolineno="882" lineno="882">
              <Getattr fromlineno="882" tolineno="882" lineno="882" attrname="runq_complete" expr="self">
                <Name fromlineno="882" tolineno="882" lineno="882" name="self"/>
              </Getattr>
              <Index fromlineno="882" tolineno="882" lineno="None">
                <Name fromlineno="882" tolineno="882" lineno="882" name="task"/>
              </Index>
            </Subscript>
            <Const fromlineno="882" tolineno="882" lineno="882" type="int">1</Const>
          </Assign>
          <For fromlineno="883" tolineno="896" lineno="883">
            <AssName fromlineno="883" tolineno="883" lineno="883" name="revdep"/>
            <Subscript fromlineno="883" tolineno="883" lineno="883">
              <Getattr fromlineno="883" tolineno="883" lineno="883" attrname="runq_revdeps" expr="self">
                <Name fromlineno="883" tolineno="883" lineno="883" name="self"/>
              </Getattr>
              <Index fromlineno="883" tolineno="883" lineno="None">
                <Name fromlineno="883" tolineno="883" lineno="883" name="task"/>
              </Index>
            </Subscript>
            <If fromlineno="884" tolineno="885" lineno="884">
              <Compare fromlineno="884" tolineno="884" lineno="884" op="('==', &lt;Const(int) l.884 [bb.runqueue] at Ox96f1c2c&gt;)">
                <Subscript fromlineno="884" tolineno="884" lineno="884">
                  <Getattr fromlineno="884" tolineno="884" lineno="884" attrname="runq_running" expr="self">
                    <Name fromlineno="884" tolineno="884" lineno="884" name="self"/>
                  </Getattr>
                  <Index fromlineno="884" tolineno="884" lineno="None">
                    <Name fromlineno="884" tolineno="884" lineno="884" name="revdep"/>
                  </Index>
                </Subscript>
                <Const fromlineno="884" tolineno="884" lineno="884" type="int">1</Const>
              </Compare>
              <Continue fromlineno="885" tolineno="885" lineno="885"/>
            </If>
            <If fromlineno="886" tolineno="887" lineno="886">
              <Compare fromlineno="886" tolineno="886" lineno="886" op="('==', &lt;Const(int) l.886 [bb.runqueue] at Ox96f1dcc&gt;)">
                <Subscript fromlineno="886" tolineno="886" lineno="886">
                  <Getattr fromlineno="886" tolineno="886" lineno="886" attrname="runq_buildable" expr="self">
                    <Name fromlineno="886" tolineno="886" lineno="886" name="self"/>
                  </Getattr>
                  <Index fromlineno="886" tolineno="886" lineno="None">
                    <Name fromlineno="886" tolineno="886" lineno="886" name="revdep"/>
                  </Index>
                </Subscript>
                <Const fromlineno="886" tolineno="886" lineno="886" type="int">1</Const>
              </Compare>
              <Continue fromlineno="887" tolineno="887" lineno="887"/>
            </If>
            <Assign fromlineno="888" tolineno="888" lineno="888" targets="[&lt;AssName(alldeps) l.888 [bb.runqueue] at Ox96f1e8c&gt;]" value="1">
              <AssName fromlineno="888" tolineno="888" lineno="888" name="alldeps"/>
              <Const fromlineno="888" tolineno="888" lineno="888" type="int">1</Const>
            </Assign>
            <For fromlineno="889" tolineno="891" lineno="889">
              <AssName fromlineno="889" tolineno="889" lineno="889" name="dep"/>
              <Subscript fromlineno="889" tolineno="889" lineno="889">
                <Getattr fromlineno="889" tolineno="889" lineno="889" attrname="runq_depends" expr="self">
                  <Name fromlineno="889" tolineno="889" lineno="889" name="self"/>
                </Getattr>
                <Index fromlineno="889" tolineno="889" lineno="None">
                  <Name fromlineno="889" tolineno="889" lineno="889" name="revdep"/>
                </Index>
              </Subscript>
              <If fromlineno="890" tolineno="891" lineno="890">
                <Compare fromlineno="890" tolineno="890" lineno="890" op="('!=', &lt;Const(int) l.890 [bb.runqueue] at Ox96f616c&gt;)">
                  <Subscript fromlineno="890" tolineno="890" lineno="890">
                    <Getattr fromlineno="890" tolineno="890" lineno="890" attrname="runq_complete" expr="self">
                      <Name fromlineno="890" tolineno="890" lineno="890" name="self"/>
                    </Getattr>
                    <Index fromlineno="890" tolineno="890" lineno="None">
                      <Name fromlineno="890" tolineno="890" lineno="890" name="dep"/>
                    </Index>
                  </Subscript>
                  <Const fromlineno="890" tolineno="890" lineno="890" type="int">1</Const>
                </Compare>
                <Assign fromlineno="891" tolineno="891" lineno="891" targets="[&lt;AssName(alldeps) l.891 [bb.runqueue] at Ox96f620c&gt;]" value="0">
                  <AssName fromlineno="891" tolineno="891" lineno="891" name="alldeps"/>
                  <Const fromlineno="891" tolineno="891" lineno="891" type="int">0</Const>
                </Assign>
              </If>
            </For>
            <If fromlineno="892" tolineno="896" lineno="892">
              <Compare fromlineno="892" tolineno="892" lineno="892" op="('==', &lt;Const(int) l.892 [bb.runqueue] at Ox96f62ec&gt;)">
                <Name fromlineno="892" tolineno="892" lineno="892" name="alldeps"/>
                <Const fromlineno="892" tolineno="892" lineno="892" type="int">1</Const>
              </Compare>
              <Assign fromlineno="893" tolineno="893" lineno="893" targets="[&lt;Subscript() l.893 [bb.runqueue] at Ox96f638c&gt;]" value="1">
                <Subscript fromlineno="893" tolineno="893" lineno="893">
                  <Getattr fromlineno="893" tolineno="893" lineno="893" attrname="runq_buildable" expr="self">
                    <Name fromlineno="893" tolineno="893" lineno="893" name="self"/>
                  </Getattr>
                  <Index fromlineno="893" tolineno="893" lineno="None">
                    <Name fromlineno="893" tolineno="893" lineno="893" name="revdep"/>
                  </Index>
                </Subscript>
                <Const fromlineno="893" tolineno="893" lineno="893" type="int">1</Const>
              </Assign>
              <Assign fromlineno="894" tolineno="894" lineno="894" targets="[&lt;AssName(fn) l.894 [bb.runqueue] at Ox96f648c&gt;]" value="self.taskData.fn_index[self.runq_fnid[revdep]]">
                <AssName fromlineno="894" tolineno="894" lineno="894" name="fn"/>
                <Subscript fromlineno="894" tolineno="894" lineno="894">
                  <Getattr fromlineno="894" tolineno="894" lineno="894" attrname="fn_index" expr="self.taskData">
                    <Getattr fromlineno="894" tolineno="894" lineno="894" attrname="taskData" expr="self">
                      <Name fromlineno="894" tolineno="894" lineno="894" name="self"/>
                    </Getattr>
                  </Getattr>
                  <Index fromlineno="894" tolineno="894" lineno="None">
                    <Subscript fromlineno="894" tolineno="894" lineno="894">
                      <Getattr fromlineno="894" tolineno="894" lineno="894" attrname="runq_fnid" expr="self">
                        <Name fromlineno="894" tolineno="894" lineno="894" name="self"/>
                      </Getattr>
                      <Index fromlineno="894" tolineno="894" lineno="None">
                        <Name fromlineno="894" tolineno="894" lineno="894" name="revdep"/>
                      </Index>
                    </Subscript>
                  </Index>
                </Subscript>
              </Assign>
              <Assign fromlineno="895" tolineno="895" lineno="895" targets="[&lt;AssName(taskname) l.895 [bb.runqueue] at Ox96f664c&gt;]" value="self.runq_task[revdep]">
                <AssName fromlineno="895" tolineno="895" lineno="895" name="taskname"/>
                <Subscript fromlineno="895" tolineno="895" lineno="895">
                  <Getattr fromlineno="895" tolineno="895" lineno="895" attrname="runq_task" expr="self">
                    <Name fromlineno="895" tolineno="895" lineno="895" name="self"/>
                  </Getattr>
                  <Index fromlineno="895" tolineno="895" lineno="None">
                    <Name fromlineno="895" tolineno="895" lineno="895" name="revdep"/>
                  </Index>
                </Subscript>
              </Assign>
              <Discard fromlineno="896" tolineno="896" lineno="896">
                <CallFunc fromlineno="896" tolineno="896" lineno="896" func="Getattr(debug)">
                  <Getattr fromlineno="896" tolineno="896" lineno="896" attrname="debug" expr="bb.msg">
                    <Getattr fromlineno="896" tolineno="896" lineno="896" attrname="msg" expr="bb">
                      <Name fromlineno="896" tolineno="896" lineno="896" name="bb"/>
                    </Getattr>
                  </Getattr>
                  <Const fromlineno="896" tolineno="896" lineno="896" type="int">1</Const>
                  <Getattr fromlineno="896" tolineno="896" lineno="896" attrname="RunQueue" expr="bb.msg.domain">
                    <Getattr fromlineno="896" tolineno="896" lineno="896" attrname="domain" expr="bb.msg">
                      <Getattr fromlineno="896" tolineno="896" lineno="896" attrname="msg" expr="bb">
                        <Name fromlineno="896" tolineno="896" lineno="896" name="bb"/>
                      </Getattr>
                    </Getattr>
                  </Getattr>
                  <BinOp fromlineno="896" tolineno="896" lineno="896" op="%" left="'Marking task %s (%s, %s) as buildable'" right="(revdep, fn, taskname)">
                    <Const fromlineno="896" tolineno="896" lineno="896" type="str">'Marking task %s (%s, %s) as buildable'</Const>
                    <Tuple fromlineno="896" tolineno="896" lineno="896">
                      <Name fromlineno="896" tolineno="896" lineno="896" name="revdep"/>
                      <Name fromlineno="896" tolineno="896" lineno="896" name="fn"/>
                      <Name fromlineno="896" tolineno="896" lineno="896" name="taskname"/>
                    </Tuple>
                  </BinOp>
                </CallFunc>
              </Discard>
            </If>
          </For>
        </Function>
        <Function fromlineno="898" tolineno="978" lineno="898">
          <Arguments fromlineno="898" tolineno="898" lineno="None" format_args="self">
            <AssName fromlineno="898" tolineno="898" lineno="898" name="self"/>
          </Arguments>
          <Discard fromlineno="903" tolineno="903" lineno="903">
            <CallFunc fromlineno="903" tolineno="903" lineno="903" func="Getattr(note)">
              <Getattr fromlineno="903" tolineno="903" lineno="903" attrname="note" expr="bb.msg">
                <Getattr fromlineno="903" tolineno="903" lineno="903" attrname="msg" expr="bb">
                  <Name fromlineno="903" tolineno="903" lineno="903" name="bb"/>
                </Getattr>
              </Getattr>
              <Const fromlineno="903" tolineno="903" lineno="903" type="int">1</Const>
              <Getattr fromlineno="903" tolineno="903" lineno="903" attrname="RunQueue" expr="bb.msg.domain">
                <Getattr fromlineno="903" tolineno="903" lineno="903" attrname="domain" expr="bb.msg">
                  <Getattr fromlineno="903" tolineno="903" lineno="903" attrname="msg" expr="bb">
                    <Name fromlineno="903" tolineno="903" lineno="903" name="bb"/>
                  </Getattr>
                </Getattr>
              </Getattr>
              <Const fromlineno="903" tolineno="903" lineno="903" type="str">'Executing runqueue'</Const>
            </CallFunc>
          </Discard>
          <Discard fromlineno="905" tolineno="905" lineno="905">
            <CallFunc fromlineno="905" tolineno="905" lineno="905" func="Getattr(execute_runqueue_initVars)">
              <Getattr fromlineno="905" tolineno="905" lineno="905" attrname="execute_runqueue_initVars" expr="self">
                <Name fromlineno="905" tolineno="905" lineno="905" name="self"/>
              </Getattr>
            </CallFunc>
          </Discard>
          <If fromlineno="907" tolineno="909" lineno="907">
            <Compare fromlineno="907" tolineno="907" lineno="907" op="('==', &lt;Const(int) l.907 [bb.runqueue] at Ox96f6d6c&gt;)">
              <CallFunc fromlineno="907" tolineno="907" lineno="907" func="Name(len)">
                <Name fromlineno="907" tolineno="907" lineno="907" name="len"/>
                <Getattr fromlineno="907" tolineno="907" lineno="907" attrname="runq_fnid" expr="self">
                  <Name fromlineno="907" tolineno="907" lineno="907" name="self"/>
                </Getattr>
              </CallFunc>
              <Const fromlineno="907" tolineno="907" lineno="907" type="int">0</Const>
            </Compare>
            <Return fromlineno="909" tolineno="909" lineno="909">
              <List fromlineno="909" tolineno="909" lineno="909"/>
            </Return>
          </If>
          <Function fromlineno="911" tolineno="912" lineno="911">
            <Arguments fromlineno="911" tolineno="911" lineno="None" format_args="signum, frame">
              <AssName fromlineno="911" tolineno="911" lineno="911" name="signum"/>
              <AssName fromlineno="911" tolineno="911" lineno="911" name="frame"/>
            </Arguments>
            <Raise fromlineno="912" tolineno="912" lineno="912">
              <Name fromlineno="912" tolineno="912" lineno="912" name="KeyboardInterrupt"/>
            </Raise>
          </Function>
          <Discard fromlineno="914" tolineno="914" lineno="914">
            <CallFunc fromlineno="914" tolineno="914" lineno="914" func="Getattr(fire)">
              <Getattr fromlineno="914" tolineno="914" lineno="914" attrname="fire" expr="event">
                <Name fromlineno="914" tolineno="914" lineno="914" name="event"/>
              </Getattr>
              <CallFunc fromlineno="914" tolineno="914" lineno="914" func="Getattr(StampUpdate)">
                <Getattr fromlineno="914" tolineno="914" lineno="914" attrname="StampUpdate" expr="bb.event">
                  <Getattr fromlineno="914" tolineno="914" lineno="914" attrname="event" expr="bb">
                    <Name fromlineno="914" tolineno="914" lineno="914" name="bb"/>
                  </Getattr>
                </Getattr>
                <Getattr fromlineno="914" tolineno="914" lineno="914" attrname="target_pairs" expr="self">
                  <Name fromlineno="914" tolineno="914" lineno="914" name="self"/>
                </Getattr>
                <Getattr fromlineno="914" tolineno="914" lineno="914" attrname="stamp" expr="self.dataCache">
                  <Getattr fromlineno="914" tolineno="914" lineno="914" attrname="dataCache" expr="self">
                    <Name fromlineno="914" tolineno="914" lineno="914" name="self"/>
                  </Getattr>
                </Getattr>
                <Getattr fromlineno="914" tolineno="914" lineno="914" attrname="cfgdata" expr="self">
                  <Name fromlineno="914" tolineno="914" lineno="914" name="self"/>
                </Getattr>
              </CallFunc>
            </CallFunc>
          </Discard>
          <While fromlineno="916" tolineno="978" lineno="916">
            <Const fromlineno="916" tolineno="916" lineno="916" type="bool">True</Const>
            <Assign fromlineno="917" tolineno="917" lineno="917" targets="[&lt;AssName(task) l.917 [bb.runqueue] at Ox96fa2ac&gt;]" value="self.sched.next()">
              <AssName fromlineno="917" tolineno="917" lineno="917" name="task"/>
              <CallFunc fromlineno="917" tolineno="917" lineno="917" func="Getattr(next)">
                <Getattr fromlineno="917" tolineno="917" lineno="917" attrname="next" expr="self.sched">
                  <Getattr fromlineno="917" tolineno="917" lineno="917" attrname="sched" expr="self">
                    <Name fromlineno="917" tolineno="917" lineno="917" name="self"/>
                  </Getattr>
                </Getattr>
              </CallFunc>
            </Assign>
            <If fromlineno="918" tolineno="961" lineno="918">
              <Compare fromlineno="918" tolineno="918" lineno="918" op="('is not', &lt;Const(NoneType) l.918 [bb.runqueue] at Ox96fa42c&gt;)">
                <Name fromlineno="918" tolineno="918" lineno="918" name="task"/>
                <Const fromlineno="918" tolineno="918" lineno="918" type="NoneType">None</Const>
              </Compare>
              <Assign fromlineno="919" tolineno="919" lineno="919" targets="[&lt;AssName(fn) l.919 [bb.runqueue] at Ox96fa4cc&gt;]" value="self.taskData.fn_index[self.runq_fnid[task]]">
                <AssName fromlineno="919" tolineno="919" lineno="919" name="fn"/>
                <Subscript fromlineno="919" tolineno="919" lineno="919">
                  <Getattr fromlineno="919" tolineno="919" lineno="919" attrname="fn_index" expr="self.taskData">
                    <Getattr fromlineno="919" tolineno="919" lineno="919" attrname="taskData" expr="self">
                      <Name fromlineno="919" tolineno="919" lineno="919" name="self"/>
                    </Getattr>
                  </Getattr>
                  <Index fromlineno="919" tolineno="919" lineno="None">
                    <Subscript fromlineno="919" tolineno="919" lineno="919">
                      <Getattr fromlineno="919" tolineno="919" lineno="919" attrname="runq_fnid" expr="self">
                        <Name fromlineno="919" tolineno="919" lineno="919" name="self"/>
                      </Getattr>
                      <Index fromlineno="919" tolineno="919" lineno="None">
                        <Name fromlineno="919" tolineno="919" lineno="919" name="task"/>
                      </Index>
                    </Subscript>
                  </Index>
                </Subscript>
              </Assign>
              <Assign fromlineno="921" tolineno="921" lineno="921" targets="[&lt;AssName(taskname) l.921 [bb.runqueue] at Ox96fa68c&gt;]" value="self.runq_task[task]">
                <AssName fromlineno="921" tolineno="921" lineno="921" name="taskname"/>
                <Subscript fromlineno="921" tolineno="921" lineno="921">
                  <Getattr fromlineno="921" tolineno="921" lineno="921" attrname="runq_task" expr="self">
                    <Name fromlineno="921" tolineno="921" lineno="921" name="self"/>
                  </Getattr>
                  <Index fromlineno="921" tolineno="921" lineno="None">
                    <Name fromlineno="921" tolineno="921" lineno="921" name="task"/>
                  </Index>
                </Subscript>
              </Assign>
              <If fromlineno="922" tolineno="928" lineno="922">
                <CallFunc fromlineno="922" tolineno="922" lineno="922" func="Getattr(check_stamp_task)">
                  <Getattr fromlineno="922" tolineno="922" lineno="922" attrname="check_stamp_task" expr="self">
                    <Name fromlineno="922" tolineno="922" lineno="922" name="self"/>
                  </Getattr>
                  <Name fromlineno="922" tolineno="922" lineno="922" name="task"/>
                </CallFunc>
                <Discard fromlineno="923" tolineno="923" lineno="923">
                  <CallFunc fromlineno="923" tolineno="923" lineno="923" func="Getattr(debug)">
                    <Getattr fromlineno="923" tolineno="923" lineno="923" attrname="debug" expr="bb.msg">
                      <Getattr fromlineno="923" tolineno="923" lineno="923" attrname="msg" expr="bb">
                        <Name fromlineno="923" tolineno="923" lineno="923" name="bb"/>
                      </Getattr>
                    </Getattr>
                    <Const fromlineno="923" tolineno="923" lineno="923" type="int">2</Const>
                    <Getattr fromlineno="923" tolineno="923" lineno="923" attrname="RunQueue" expr="bb.msg.domain">
                      <Getattr fromlineno="923" tolineno="923" lineno="923" attrname="domain" expr="bb.msg">
                        <Getattr fromlineno="923" tolineno="923" lineno="923" attrname="msg" expr="bb">
                          <Name fromlineno="923" tolineno="923" lineno="923" name="bb"/>
                        </Getattr>
                      </Getattr>
                    </Getattr>
                    <BinOp fromlineno="923" tolineno="923" lineno="923" op="%" left="'Stamp current task %s (%s)'" right="(task, self.get_user_idstring(task))">
                      <Const fromlineno="923" tolineno="923" lineno="923" type="str">'Stamp current task %s (%s)'</Const>
                      <Tuple fromlineno="923" tolineno="923" lineno="923">
                        <Name fromlineno="923" tolineno="923" lineno="923" name="task"/>
                        <CallFunc fromlineno="923" tolineno="923" lineno="923" func="Getattr(get_user_idstring)">
                          <Getattr fromlineno="923" tolineno="923" lineno="923" attrname="get_user_idstring" expr="self">
                            <Name fromlineno="923" tolineno="923" lineno="923" name="self"/>
                          </Getattr>
                          <Name fromlineno="923" tolineno="923" lineno="923" name="task"/>
                        </CallFunc>
                      </Tuple>
                    </BinOp>
                  </CallFunc>
                </Discard>
                <Assign fromlineno="924" tolineno="924" lineno="924" targets="[&lt;Subscript() l.924 [bb.runqueue] at Ox96fab6c&gt;]" value="1">
                  <Subscript fromlineno="924" tolineno="924" lineno="924">
                    <Getattr fromlineno="924" tolineno="924" lineno="924" attrname="runq_running" expr="self">
                      <Name fromlineno="924" tolineno="924" lineno="924" name="self"/>
                    </Getattr>
                    <Index fromlineno="924" tolineno="924" lineno="None">
                      <Name fromlineno="924" tolineno="924" lineno="924" name="task"/>
                    </Index>
                  </Subscript>
                  <Const fromlineno="924" tolineno="924" lineno="924" type="int">1</Const>
                </Assign>
                <Discard fromlineno="925" tolineno="925" lineno="925">
                  <CallFunc fromlineno="925" tolineno="925" lineno="925" func="Getattr(task_complete)">
                    <Getattr fromlineno="925" tolineno="925" lineno="925" attrname="task_complete" expr="self">
                      <Name fromlineno="925" tolineno="925" lineno="925" name="self"/>
                    </Getattr>
                    <Name fromlineno="925" tolineno="925" lineno="925" name="task"/>
                  </CallFunc>
                </Discard>
                <Discard fromlineno="926" tolineno="926" lineno="926">
                  <CallFunc fromlineno="926" tolineno="926" lineno="926" func="Getattr(taskCompleted)">
                    <Getattr fromlineno="926" tolineno="926" lineno="926" attrname="taskCompleted" expr="self.stats">
                      <Getattr fromlineno="926" tolineno="926" lineno="926" attrname="stats" expr="self">
                        <Name fromlineno="926" tolineno="926" lineno="926" name="self"/>
                      </Getattr>
                    </Getattr>
                  </CallFunc>
                </Discard>
                <Discard fromlineno="927" tolineno="927" lineno="927">
                  <CallFunc fromlineno="927" tolineno="927" lineno="927" func="Getattr(taskSkipped)">
                    <Getattr fromlineno="927" tolineno="927" lineno="927" attrname="taskSkipped" expr="self.stats">
                      <Getattr fromlineno="927" tolineno="927" lineno="927" attrname="stats" expr="self">
                        <Name fromlineno="927" tolineno="927" lineno="927" name="self"/>
                      </Getattr>
                    </Getattr>
                  </CallFunc>
                </Discard>
                <Continue fromlineno="928" tolineno="928" lineno="928"/>
              </If>
              <Discard fromlineno="930" tolineno="930" lineno="930">
                <CallFunc fromlineno="930" tolineno="930" lineno="930" func="Getattr(note)">
                  <Getattr fromlineno="930" tolineno="930" lineno="930" attrname="note" expr="bb.msg">
                    <Getattr fromlineno="930" tolineno="930" lineno="930" attrname="msg" expr="bb">
                      <Name fromlineno="930" tolineno="930" lineno="930" name="bb"/>
                    </Getattr>
                  </Getattr>
                  <Const fromlineno="930" tolineno="930" lineno="930" type="int">1</Const>
                  <Getattr fromlineno="930" tolineno="930" lineno="930" attrname="RunQueue" expr="bb.msg.domain">
                    <Getattr fromlineno="930" tolineno="930" lineno="930" attrname="domain" expr="bb.msg">
                      <Getattr fromlineno="930" tolineno="930" lineno="930" attrname="msg" expr="bb">
                        <Name fromlineno="930" tolineno="930" lineno="930" name="bb"/>
                      </Getattr>
                    </Getattr>
                  </Getattr>
                  <BinOp fromlineno="930" tolineno="930" lineno="930" op="%" left="'Running task %d of %d (ID: %s, %s)'" right="(((self.stats.completed) + (self.active_builds)) + (1), len(self.runq_fnid), task, self.get_user_idstring(task))">
                    <Const fromlineno="930" tolineno="930" lineno="930" type="str">'Running task %d of %d (ID: %s, %s)'</Const>
                    <Tuple fromlineno="930" tolineno="930" lineno="930">
                      <BinOp fromlineno="930" tolineno="930" lineno="930" op="+" left="(self.stats.completed) + (self.active_builds)" right="1">
                        <BinOp fromlineno="930" tolineno="930" lineno="930" op="+" left="self.stats.completed" right="self.active_builds">
                          <Getattr fromlineno="930" tolineno="930" lineno="930" attrname="completed" expr="self.stats">
                            <Getattr fromlineno="930" tolineno="930" lineno="930" attrname="stats" expr="self">
                              <Name fromlineno="930" tolineno="930" lineno="930" name="self"/>
                            </Getattr>
                          </Getattr>
                          <Getattr fromlineno="930" tolineno="930" lineno="930" attrname="active_builds" expr="self">
                            <Name fromlineno="930" tolineno="930" lineno="930" name="self"/>
                          </Getattr>
                        </BinOp>
                        <Const fromlineno="930" tolineno="930" lineno="930" type="int">1</Const>
                      </BinOp>
                      <CallFunc fromlineno="930" tolineno="930" lineno="930" func="Name(len)">
                        <Name fromlineno="930" tolineno="930" lineno="930" name="len"/>
                        <Getattr fromlineno="930" tolineno="930" lineno="930" attrname="runq_fnid" expr="self">
                          <Name fromlineno="930" tolineno="930" lineno="930" name="self"/>
                        </Getattr>
                      </CallFunc>
                      <Name fromlineno="930" tolineno="930" lineno="930" name="task"/>
                      <CallFunc fromlineno="930" tolineno="930" lineno="930" func="Getattr(get_user_idstring)">
                        <Getattr fromlineno="930" tolineno="930" lineno="930" attrname="get_user_idstring" expr="self">
                          <Name fromlineno="930" tolineno="930" lineno="930" name="self"/>
                        </Getattr>
                        <Name fromlineno="930" tolineno="930" lineno="930" name="task"/>
                      </CallFunc>
                    </Tuple>
                  </BinOp>
                </CallFunc>
              </Discard>
              <Discard fromlineno="931" tolineno="931" lineno="931">
                <CallFunc fromlineno="931" tolineno="931" lineno="931" func="Getattr(flush)">
                  <Getattr fromlineno="931" tolineno="931" lineno="931" attrname="flush" expr="sys.stdout">
                    <Getattr fromlineno="931" tolineno="931" lineno="931" attrname="stdout" expr="sys">
                      <Name fromlineno="931" tolineno="931" lineno="931" name="sys"/>
                    </Getattr>
                  </Getattr>
                </CallFunc>
              </Discard>
              <Discard fromlineno="932" tolineno="932" lineno="932">
                <CallFunc fromlineno="932" tolineno="932" lineno="932" func="Getattr(flush)">
                  <Getattr fromlineno="932" tolineno="932" lineno="932" attrname="flush" expr="sys.stderr">
                    <Getattr fromlineno="932" tolineno="932" lineno="932" attrname="stderr" expr="sys">
                      <Name fromlineno="932" tolineno="932" lineno="932" name="sys"/>
                    </Getattr>
                  </Getattr>
                </CallFunc>
              </Discard>
              <TryExcept fromlineno="933" tolineno="936" lineno="933">
                <Assign fromlineno="934" tolineno="934" lineno="934" targets="[&lt;AssName(pid) l.934 [bb.runqueue] at Ox96fe50c&gt;]" value="os.fork()">
                  <AssName fromlineno="934" tolineno="934" lineno="934" name="pid"/>
                  <CallFunc fromlineno="934" tolineno="934" lineno="934" func="Getattr(fork)">
                    <Getattr fromlineno="934" tolineno="934" lineno="934" attrname="fork" expr="os">
                      <Name fromlineno="934" tolineno="934" lineno="934" name="os"/>
                    </Getattr>
                  </CallFunc>
                </Assign>
                <ExceptHandler fromlineno="935" tolineno="936" lineno="935">
                  <Name fromlineno="935" tolineno="935" lineno="935" name="OSError"/>
                  <AssName fromlineno="935" tolineno="935" lineno="935" name="e"/>
                  <Discard fromlineno="936" tolineno="936" lineno="936">
                    <CallFunc fromlineno="936" tolineno="936" lineno="936" func="Getattr(fatal)">
                      <Getattr fromlineno="936" tolineno="936" lineno="936" attrname="fatal" expr="bb.msg">
                        <Getattr fromlineno="936" tolineno="936" lineno="936" attrname="msg" expr="bb">
                          <Name fromlineno="936" tolineno="936" lineno="936" name="bb"/>
                        </Getattr>
                      </Getattr>
                      <Getattr fromlineno="936" tolineno="936" lineno="936" attrname="RunQueue" expr="bb.msg.domain">
                        <Getattr fromlineno="936" tolineno="936" lineno="936" attrname="domain" expr="bb.msg">
                          <Getattr fromlineno="936" tolineno="936" lineno="936" attrname="msg" expr="bb">
                            <Name fromlineno="936" tolineno="936" lineno="936" name="bb"/>
                          </Getattr>
                        </Getattr>
                      </Getattr>
                      <BinOp fromlineno="936" tolineno="936" lineno="936" op="%" left="'fork failed: %d (%s)'" right="(e.errno, e.strerror)">
                        <Const fromlineno="936" tolineno="936" lineno="936" type="str">'fork failed: %d (%s)'</Const>
                        <Tuple fromlineno="936" tolineno="936" lineno="936">
                          <Getattr fromlineno="936" tolineno="936" lineno="936" attrname="errno" expr="e">
                            <Name fromlineno="936" tolineno="936" lineno="936" name="e"/>
                          </Getattr>
                          <Getattr fromlineno="936" tolineno="936" lineno="936" attrname="strerror" expr="e">
                            <Name fromlineno="936" tolineno="936" lineno="936" name="e"/>
                          </Getattr>
                        </Tuple>
                      </BinOp>
                    </CallFunc>
                  </Discard>
                </ExceptHandler>
              </TryExcept>
              <If fromlineno="937" tolineno="956" lineno="937">
                <Compare fromlineno="937" tolineno="937" lineno="937" op="('==', &lt;Const(int) l.937 [bb.runqueue] at Ox96fe96c&gt;)">
                  <Name fromlineno="937" tolineno="937" lineno="937" name="pid"/>
                  <Const fromlineno="937" tolineno="937" lineno="937" type="int">0</Const>
                </Compare>
                <Assign fromlineno="939" tolineno="939" lineno="939" targets="[&lt;AssAttr(master_process) l.939 [bb.runqueue] at Ox96fea0c&gt;]" value="False">
                  <AssAttr fromlineno="939" tolineno="939" lineno="939" attrname="master_process" expr="self">
                    <Name fromlineno="939" tolineno="939" lineno="939" name="self"/>
                  </AssAttr>
                  <Const fromlineno="939" tolineno="939" lineno="939" type="bool">False</Const>
                </Assign>
                <Discard fromlineno="943" tolineno="943" lineno="943">
                  <CallFunc fromlineno="943" tolineno="943" lineno="943" func="Getattr(setpgid)">
                    <Getattr fromlineno="943" tolineno="943" lineno="943" attrname="setpgid" expr="os">
                      <Name fromlineno="943" tolineno="943" lineno="943" name="os"/>
                    </Getattr>
                    <Const fromlineno="943" tolineno="943" lineno="943" type="int">0</Const>
                    <Const fromlineno="943" tolineno="943" lineno="943" type="int">0</Const>
                  </CallFunc>
                </Discard>
                <Assign fromlineno="944" tolineno="944" lineno="944" targets="[&lt;AssName(newsi) l.944 [bb.runqueue] at Ox96feb8c&gt;]" value="os.open('/dev/null', os.O_RDWR)">
                  <AssName fromlineno="944" tolineno="944" lineno="944" name="newsi"/>
                  <CallFunc fromlineno="944" tolineno="944" lineno="944" func="Getattr(open)">
                    <Getattr fromlineno="944" tolineno="944" lineno="944" attrname="open" expr="os">
                      <Name fromlineno="944" tolineno="944" lineno="944" name="os"/>
                    </Getattr>
                    <Const fromlineno="944" tolineno="944" lineno="944" type="str">'/dev/null'</Const>
                    <Getattr fromlineno="944" tolineno="944" lineno="944" attrname="O_RDWR" expr="os">
                      <Name fromlineno="944" tolineno="944" lineno="944" name="os"/>
                    </Getattr>
                  </CallFunc>
                </Assign>
                <Discard fromlineno="945" tolineno="945" lineno="945">
                  <CallFunc fromlineno="945" tolineno="945" lineno="945" func="Getattr(dup2)">
                    <Getattr fromlineno="945" tolineno="945" lineno="945" attrname="dup2" expr="os">
                      <Name fromlineno="945" tolineno="945" lineno="945" name="os"/>
                    </Getattr>
                    <Name fromlineno="945" tolineno="945" lineno="945" name="newsi"/>
                    <CallFunc fromlineno="945" tolineno="945" lineno="945" func="Getattr(fileno)">
                      <Getattr fromlineno="945" tolineno="945" lineno="945" attrname="fileno" expr="sys.stdin">
                        <Getattr fromlineno="945" tolineno="945" lineno="945" attrname="stdin" expr="sys">
                          <Name fromlineno="945" tolineno="945" lineno="945" name="sys"/>
                        </Getattr>
                      </Getattr>
                    </CallFunc>
                  </CallFunc>
                </Discard>
                <Assign fromlineno="946" tolineno="946" lineno="946" targets="[&lt;AssAttr(cmd) l.946 [bb.runqueue] at Ox96fee4c&gt;]" value="taskname[3:]">
                  <AssAttr fromlineno="946" tolineno="946" lineno="946" attrname="cmd" expr="self.cooker.configuration">
                    <Getattr fromlineno="946" tolineno="946" lineno="946" attrname="configuration" expr="self.cooker">
                      <Getattr fromlineno="946" tolineno="946" lineno="946" attrname="cooker" expr="self">
                        <Name fromlineno="946" tolineno="946" lineno="946" name="self"/>
                      </Getattr>
                    </Getattr>
                  </AssAttr>
                  <Subscript fromlineno="946" tolineno="946" lineno="946">
                    <Name fromlineno="946" tolineno="946" lineno="946" name="taskname"/>
                    <Slice fromlineno="946" tolineno="946" lineno="None">
                      <Const fromlineno="946" tolineno="946" lineno="946" type="int">3</Const>
                    </Slice>
                  </Subscript>
                </Assign>
                <Discard fromlineno="947" tolineno="947" lineno="947">
                  <CallFunc fromlineno="947" tolineno="947" lineno="947" func="Getattr(setVar)">
                    <Getattr fromlineno="947" tolineno="947" lineno="947" attrname="setVar" expr="bb.data">
                      <Getattr fromlineno="947" tolineno="947" lineno="947" attrname="data" expr="bb">
                        <Name fromlineno="947" tolineno="947" lineno="947" name="bb"/>
                      </Getattr>
                    </Getattr>
                    <Const fromlineno="947" tolineno="947" lineno="947" type="str">'__RUNQUEUE_DO_NOT_USE_EXTERNALLY'</Const>
                    <Name fromlineno="947" tolineno="947" lineno="947" name="self"/>
                    <Getattr fromlineno="947" tolineno="947" lineno="947" attrname="data" expr="self.cooker.configuration">
                      <Getattr fromlineno="947" tolineno="947" lineno="947" attrname="configuration" expr="self.cooker">
                        <Getattr fromlineno="947" tolineno="947" lineno="947" attrname="cooker" expr="self">
                          <Name fromlineno="947" tolineno="947" lineno="947" name="self"/>
                        </Getattr>
                      </Getattr>
                    </Getattr>
                  </CallFunc>
                </Discard>
                <TryExcept fromlineno="948" tolineno="955" lineno="948">
                  <Discard fromlineno="949" tolineno="949" lineno="949">
                    <CallFunc fromlineno="949" tolineno="949" lineno="949" func="Getattr(tryBuild)">
                      <Getattr fromlineno="949" tolineno="949" lineno="949" attrname="tryBuild" expr="self.cooker">
                        <Getattr fromlineno="949" tolineno="949" lineno="949" attrname="cooker" expr="self">
                          <Name fromlineno="949" tolineno="949" lineno="949" name="self"/>
                        </Getattr>
                      </Getattr>
                      <Name fromlineno="949" tolineno="949" lineno="949" name="fn"/>
                    </CallFunc>
                  </Discard>
                  <ExceptHandler fromlineno="950" tolineno="952" lineno="950">
                    <Getattr fromlineno="950" tolineno="950" lineno="950" attrname="EventException" expr="bb.build">
                      <Getattr fromlineno="950" tolineno="950" lineno="950" attrname="build" expr="bb">
                        <Name fromlineno="950" tolineno="950" lineno="950" name="bb"/>
                      </Getattr>
                    </Getattr>
                    <Discard fromlineno="951" tolineno="951" lineno="951">
                      <CallFunc fromlineno="951" tolineno="951" lineno="951" func="Getattr(error)">
                        <Getattr fromlineno="951" tolineno="951" lineno="951" attrname="error" expr="bb.msg">
                          <Getattr fromlineno="951" tolineno="951" lineno="951" attrname="msg" expr="bb">
                            <Name fromlineno="951" tolineno="951" lineno="951" name="bb"/>
                          </Getattr>
                        </Getattr>
                        <Getattr fromlineno="951" tolineno="951" lineno="951" attrname="Build" expr="bb.msg.domain">
                          <Getattr fromlineno="951" tolineno="951" lineno="951" attrname="domain" expr="bb.msg">
                            <Getattr fromlineno="951" tolineno="951" lineno="951" attrname="msg" expr="bb">
                              <Name fromlineno="951" tolineno="951" lineno="951" name="bb"/>
                            </Getattr>
                          </Getattr>
                        </Getattr>
                        <BinOp fromlineno="951" tolineno="951" lineno="951" op="+" left="((('Build of ') + (fn)) + (' ')) + (taskname)" right="' failed'">
                          <BinOp fromlineno="951" tolineno="951" lineno="951" op="+" left="(('Build of ') + (fn)) + (' ')" right="taskname">
                            <BinOp fromlineno="951" tolineno="951" lineno="951" op="+" left="('Build of ') + (fn)" right="' '">
                              <BinOp fromlineno="951" tolineno="951" lineno="951" op="+" left="'Build of '" right="fn">
                                <Const fromlineno="951" tolineno="951" lineno="951" type="str">'Build of '</Const>
                                <Name fromlineno="951" tolineno="951" lineno="951" name="fn"/>
                              </BinOp>
                              <Const fromlineno="951" tolineno="951" lineno="951" type="str">' '</Const>
                            </BinOp>
                            <Name fromlineno="951" tolineno="951" lineno="951" name="taskname"/>
                          </BinOp>
                          <Const fromlineno="951" tolineno="951" lineno="951" type="str">' failed'</Const>
                        </BinOp>
                      </CallFunc>
                    </Discard>
                    <Discard fromlineno="952" tolineno="952" lineno="952">
                      <CallFunc fromlineno="952" tolineno="952" lineno="952" func="Getattr(exit)">
                        <Getattr fromlineno="952" tolineno="952" lineno="952" attrname="exit" expr="sys">
                          <Name fromlineno="952" tolineno="952" lineno="952" name="sys"/>
                        </Getattr>
                        <Const fromlineno="952" tolineno="952" lineno="952" type="int">1</Const>
                      </CallFunc>
                    </Discard>
                  </ExceptHandler>
                  <ExceptHandler fromlineno="953" tolineno="955" lineno="953">
                    <Discard fromlineno="954" tolineno="954" lineno="954">
                      <CallFunc fromlineno="954" tolineno="954" lineno="954" func="Getattr(error)">
                        <Getattr fromlineno="954" tolineno="954" lineno="954" attrname="error" expr="bb.msg">
                          <Getattr fromlineno="954" tolineno="954" lineno="954" attrname="msg" expr="bb">
                            <Name fromlineno="954" tolineno="954" lineno="954" name="bb"/>
                          </Getattr>
                        </Getattr>
                        <Getattr fromlineno="954" tolineno="954" lineno="954" attrname="Build" expr="bb.msg.domain">
                          <Getattr fromlineno="954" tolineno="954" lineno="954" attrname="domain" expr="bb.msg">
                            <Getattr fromlineno="954" tolineno="954" lineno="954" attrname="msg" expr="bb">
                              <Name fromlineno="954" tolineno="954" lineno="954" name="bb"/>
                            </Getattr>
                          </Getattr>
                        </Getattr>
                        <BinOp fromlineno="954" tolineno="954" lineno="954" op="+" left="((('Build of ') + (fn)) + (' ')) + (taskname)" right="' failed'">
                          <BinOp fromlineno="954" tolineno="954" lineno="954" op="+" left="(('Build of ') + (fn)) + (' ')" right="taskname">
                            <BinOp fromlineno="954" tolineno="954" lineno="954" op="+" left="('Build of ') + (fn)" right="' '">
                              <BinOp fromlineno="954" tolineno="954" lineno="954" op="+" left="'Build of '" right="fn">
                                <Const fromlineno="954" tolineno="954" lineno="954" type="str">'Build of '</Const>
                                <Name fromlineno="954" tolineno="954" lineno="954" name="fn"/>
                              </BinOp>
                              <Const fromlineno="954" tolineno="954" lineno="954" type="str">' '</Const>
                            </BinOp>
                            <Name fromlineno="954" tolineno="954" lineno="954" name="taskname"/>
                          </BinOp>
                          <Const fromlineno="954" tolineno="954" lineno="954" type="str">' failed'</Const>
                        </BinOp>
                      </CallFunc>
                    </Discard>
                    <Raise fromlineno="955" tolineno="955" lineno="955"/>
                  </ExceptHandler>
                </TryExcept>
                <Discard fromlineno="956" tolineno="956" lineno="956">
                  <CallFunc fromlineno="956" tolineno="956" lineno="956" func="Getattr(exit)">
                    <Getattr fromlineno="956" tolineno="956" lineno="956" attrname="exit" expr="sys">
                      <Name fromlineno="956" tolineno="956" lineno="956" name="sys"/>
                    </Getattr>
                    <Const fromlineno="956" tolineno="956" lineno="956" type="int">0</Const>
                  </CallFunc>
                </Discard>
              </If>
              <Assign fromlineno="957" tolineno="957" lineno="957" targets="[&lt;Subscript() l.957 [bb.runqueue] at Ox97039cc&gt;]" value="task">
                <Subscript fromlineno="957" tolineno="957" lineno="957">
                  <Getattr fromlineno="957" tolineno="957" lineno="957" attrname="build_pids" expr="self">
                    <Name fromlineno="957" tolineno="957" lineno="957" name="self"/>
                  </Getattr>
                  <Index fromlineno="957" tolineno="957" lineno="None">
                    <Name fromlineno="957" tolineno="957" lineno="957" name="pid"/>
                  </Index>
                </Subscript>
                <Name fromlineno="957" tolineno="957" lineno="957" name="task"/>
              </Assign>
              <Assign fromlineno="958" tolineno="958" lineno="958" targets="[&lt;Subscript() l.958 [bb.runqueue] at Ox9703acc&gt;]" value="1">
                <Subscript fromlineno="958" tolineno="958" lineno="958">
                  <Getattr fromlineno="958" tolineno="958" lineno="958" attrname="runq_running" expr="self">
                    <Name fromlineno="958" tolineno="958" lineno="958" name="self"/>
                  </Getattr>
                  <Index fromlineno="958" tolineno="958" lineno="None">
                    <Name fromlineno="958" tolineno="958" lineno="958" name="task"/>
                  </Index>
                </Subscript>
                <Const fromlineno="958" tolineno="958" lineno="958" type="int">1</Const>
              </Assign>
              <Assign fromlineno="959" tolineno="959" lineno="959" targets="[&lt;AssAttr(active_builds) l.959 [bb.runqueue] at Ox9703bcc&gt;]" value="(self.active_builds) + (1)">
                <AssAttr fromlineno="959" tolineno="959" lineno="959" attrname="active_builds" expr="self">
                  <Name fromlineno="959" tolineno="959" lineno="959" name="self"/>
                </AssAttr>
                <BinOp fromlineno="959" tolineno="959" lineno="959" op="+" left="self.active_builds" right="1">
                  <Getattr fromlineno="959" tolineno="959" lineno="959" attrname="active_builds" expr="self">
                    <Name fromlineno="959" tolineno="959" lineno="959" name="self"/>
                  </Getattr>
                  <Const fromlineno="959" tolineno="959" lineno="959" type="int">1</Const>
                </BinOp>
              </Assign>
              <If fromlineno="960" tolineno="961" lineno="960">
                <Compare fromlineno="960" tolineno="960" lineno="960" op="('&lt;', &lt;Getattr(number_tasks) l.960 [bb.runqueue] at Ox9703d4c&gt;)">
                  <Getattr fromlineno="960" tolineno="960" lineno="960" attrname="active_builds" expr="self">
                    <Name fromlineno="960" tolineno="960" lineno="960" name="self"/>
                  </Getattr>
                  <Getattr fromlineno="960" tolineno="960" lineno="960" attrname="number_tasks" expr="self">
                    <Name fromlineno="960" tolineno="960" lineno="960" name="self"/>
                  </Getattr>
                </Compare>
                <Continue fromlineno="961" tolineno="961" lineno="961"/>
              </If>
            </If>
            <If fromlineno="962" tolineno="977" lineno="962">
              <Compare fromlineno="962" tolineno="962" lineno="962" op="('&gt;', &lt;Const(int) l.962 [bb.runqueue] at Ox9703e8c&gt;)">
                <Getattr fromlineno="962" tolineno="962" lineno="962" attrname="active_builds" expr="self">
                  <Name fromlineno="962" tolineno="962" lineno="962" name="self"/>
                </Getattr>
                <Const fromlineno="962" tolineno="962" lineno="962" type="int">0</Const>
              </Compare>
              <Assign fromlineno="963" tolineno="963" lineno="963" targets="[&lt;AssName(result) l.963 [bb.runqueue] at Ox9703f2c&gt;]" value="os.waitpid(-1, 0)">
                <AssName fromlineno="963" tolineno="963" lineno="963" name="result"/>
                <CallFunc fromlineno="963" tolineno="963" lineno="963" func="Getattr(waitpid)">
                  <Getattr fromlineno="963" tolineno="963" lineno="963" attrname="waitpid" expr="os">
                    <Name fromlineno="963" tolineno="963" lineno="963" name="os"/>
                  </Getattr>
                  <Const fromlineno="963" tolineno="963" lineno="963" type="int">-1</Const>
                  <Const fromlineno="963" tolineno="963" lineno="963" type="int">0</Const>
                </CallFunc>
              </Assign>
              <Assign fromlineno="964" tolineno="964" lineno="964" targets="[&lt;AssAttr(active_builds) l.964 [bb.runqueue] at Ox970708c&gt;]" value="(self.active_builds) - (1)">
                <AssAttr fromlineno="964" tolineno="964" lineno="964" attrname="active_builds" expr="self">
                  <Name fromlineno="964" tolineno="964" lineno="964" name="self"/>
                </AssAttr>
                <BinOp fromlineno="964" tolineno="964" lineno="964" op="-" left="self.active_builds" right="1">
                  <Getattr fromlineno="964" tolineno="964" lineno="964" attrname="active_builds" expr="self">
                    <Name fromlineno="964" tolineno="964" lineno="964" name="self"/>
                  </Getattr>
                  <Const fromlineno="964" tolineno="964" lineno="964" type="int">1</Const>
                </BinOp>
              </Assign>
              <Assign fromlineno="965" tolineno="965" lineno="965" targets="[&lt;AssName(task) l.965 [bb.runqueue] at Ox970718c&gt;]" value="self.build_pids[result[0]]">
                <AssName fromlineno="965" tolineno="965" lineno="965" name="task"/>
                <Subscript fromlineno="965" tolineno="965" lineno="965">
                  <Getattr fromlineno="965" tolineno="965" lineno="965" attrname="build_pids" expr="self">
                    <Name fromlineno="965" tolineno="965" lineno="965" name="self"/>
                  </Getattr>
                  <Index fromlineno="965" tolineno="965" lineno="None">
                    <Subscript fromlineno="965" tolineno="965" lineno="965">
                      <Name fromlineno="965" tolineno="965" lineno="965" name="result"/>
                      <Index fromlineno="965" tolineno="965" lineno="None">
                        <Const fromlineno="965" tolineno="965" lineno="965" type="int">0</Const>
                      </Index>
                    </Subscript>
                  </Index>
                </Subscript>
              </Assign>
              <If fromlineno="966" tolineno="973" lineno="966">
                <Compare fromlineno="966" tolineno="966" lineno="966" op="('!=', &lt;Const(int) l.966 [bb.runqueue] at Ox97073cc&gt;)">
                  <Subscript fromlineno="966" tolineno="966" lineno="966">
                    <Name fromlineno="966" tolineno="966" lineno="966" name="result"/>
                    <Index fromlineno="966" tolineno="966" lineno="None">
                      <Const fromlineno="966" tolineno="966" lineno="966" type="int">1</Const>
                    </Index>
                  </Subscript>
                  <Const fromlineno="966" tolineno="966" lineno="966" type="int">0</Const>
                </Compare>
                <Delete fromlineno="967" tolineno="967" lineno="967">
                  <Subscript fromlineno="967" tolineno="967" lineno="967">
                    <Getattr fromlineno="967" tolineno="967" lineno="967" attrname="build_pids" expr="self">
                      <Name fromlineno="967" tolineno="967" lineno="967" name="self"/>
                    </Getattr>
                    <Index fromlineno="967" tolineno="967" lineno="None">
                      <Subscript fromlineno="967" tolineno="967" lineno="967">
                        <Name fromlineno="967" tolineno="967" lineno="967" name="result"/>
                        <Index fromlineno="967" tolineno="967" lineno="None">
                          <Const fromlineno="967" tolineno="967" lineno="967" type="int">0</Const>
                        </Index>
                      </Subscript>
                    </Index>
                  </Subscript>
                </Delete>
                <Discard fromlineno="968" tolineno="968" lineno="968">
                  <CallFunc fromlineno="968" tolineno="968" lineno="968" func="Getattr(error)">
                    <Getattr fromlineno="968" tolineno="968" lineno="968" attrname="error" expr="bb.msg">
                      <Getattr fromlineno="968" tolineno="968" lineno="968" attrname="msg" expr="bb">
                        <Name fromlineno="968" tolineno="968" lineno="968" name="bb"/>
                      </Getattr>
                    </Getattr>
                    <Getattr fromlineno="968" tolineno="968" lineno="968" attrname="RunQueue" expr="bb.msg.domain">
                      <Getattr fromlineno="968" tolineno="968" lineno="968" attrname="domain" expr="bb.msg">
                        <Getattr fromlineno="968" tolineno="968" lineno="968" attrname="msg" expr="bb">
                          <Name fromlineno="968" tolineno="968" lineno="968" name="bb"/>
                        </Getattr>
                      </Getattr>
                    </Getattr>
                    <BinOp fromlineno="968" tolineno="968" lineno="968" op="%" left="'Task %s (%s) failed'" right="(task, self.get_user_idstring(task))">
                      <Const fromlineno="968" tolineno="968" lineno="968" type="str">'Task %s (%s) failed'</Const>
                      <Tuple fromlineno="968" tolineno="968" lineno="968">
                        <Name fromlineno="968" tolineno="968" lineno="968" name="task"/>
                        <CallFunc fromlineno="968" tolineno="968" lineno="968" func="Getattr(get_user_idstring)">
                          <Getattr fromlineno="968" tolineno="968" lineno="968" attrname="get_user_idstring" expr="self">
                            <Name fromlineno="968" tolineno="968" lineno="968" name="self"/>
                          </Getattr>
                          <Name fromlineno="968" tolineno="968" lineno="968" name="task"/>
                        </CallFunc>
                      </Tuple>
                    </BinOp>
                  </CallFunc>
                </Discard>
                <Discard fromlineno="969" tolineno="969" lineno="969">
                  <CallFunc fromlineno="969" tolineno="969" lineno="969" func="Getattr(append)">
                    <Getattr fromlineno="969" tolineno="969" lineno="969" attrname="append" expr="self.failed_fnids">
                      <Getattr fromlineno="969" tolineno="969" lineno="969" attrname="failed_fnids" expr="self">
                        <Name fromlineno="969" tolineno="969" lineno="969" name="self"/>
                      </Getattr>
                    </Getattr>
                    <Subscript fromlineno="969" tolineno="969" lineno="969">
                      <Getattr fromlineno="969" tolineno="969" lineno="969" attrname="runq_fnid" expr="self">
                        <Name fromlineno="969" tolineno="969" lineno="969" name="self"/>
                      </Getattr>
                      <Index fromlineno="969" tolineno="969" lineno="None">
                        <Name fromlineno="969" tolineno="969" lineno="969" name="task"/>
                      </Index>
                    </Subscript>
                  </CallFunc>
                </Discard>
                <Discard fromlineno="970" tolineno="970" lineno="970">
                  <CallFunc fromlineno="970" tolineno="970" lineno="970" func="Getattr(taskFailed)">
                    <Getattr fromlineno="970" tolineno="970" lineno="970" attrname="taskFailed" expr="self.stats">
                      <Getattr fromlineno="970" tolineno="970" lineno="970" attrname="stats" expr="self">
                        <Name fromlineno="970" tolineno="970" lineno="970" name="self"/>
                      </Getattr>
                    </Getattr>
                  </CallFunc>
                </Discard>
                <If fromlineno="971" tolineno="972" lineno="971">
                  <UnaryOp fromlineno="971" tolineno="971" lineno="971">
                    <Getattr fromlineno="971" tolineno="971" lineno="971" attrname="abort" expr="self.taskData">
                      <Getattr fromlineno="971" tolineno="971" lineno="971" attrname="taskData" expr="self">
                        <Name fromlineno="971" tolineno="971" lineno="971" name="self"/>
                      </Getattr>
                    </Getattr>
                  </UnaryOp>
                  <Continue fromlineno="972" tolineno="972" lineno="972"/>
                </If>
                <Break fromlineno="973" tolineno="973" lineno="973"/>
              </If>
              <Discard fromlineno="974" tolineno="974" lineno="974">
                <CallFunc fromlineno="974" tolineno="974" lineno="974" func="Getattr(task_complete)">
                  <Getattr fromlineno="974" tolineno="974" lineno="974" attrname="task_complete" expr="self">
                    <Name fromlineno="974" tolineno="974" lineno="974" name="self"/>
                  </Getattr>
                  <Name fromlineno="974" tolineno="974" lineno="974" name="task"/>
                </CallFunc>
              </Discard>
              <Discard fromlineno="975" tolineno="975" lineno="975">
                <CallFunc fromlineno="975" tolineno="975" lineno="975" func="Getattr(taskCompleted)">
                  <Getattr fromlineno="975" tolineno="975" lineno="975" attrname="taskCompleted" expr="self.stats">
                    <Getattr fromlineno="975" tolineno="975" lineno="975" attrname="stats" expr="self">
                      <Name fromlineno="975" tolineno="975" lineno="975" name="self"/>
                    </Getattr>
                  </Getattr>
                </CallFunc>
              </Discard>
              <Delete fromlineno="976" tolineno="976" lineno="976">
                <Subscript fromlineno="976" tolineno="976" lineno="976">
                  <Getattr fromlineno="976" tolineno="976" lineno="976" attrname="build_pids" expr="self">
                    <Name fromlineno="976" tolineno="976" lineno="976" name="self"/>
                  </Getattr>
                  <Index fromlineno="976" tolineno="976" lineno="None">
                    <Subscript fromlineno="976" tolineno="976" lineno="976">
                      <Name fromlineno="976" tolineno="976" lineno="976" name="result"/>
                      <Index fromlineno="976" tolineno="976" lineno="None">
                        <Const fromlineno="976" tolineno="976" lineno="976" type="int">0</Const>
                      </Index>
                    </Subscript>
                  </Index>
                </Subscript>
              </Delete>
              <Continue fromlineno="977" tolineno="977" lineno="977"/>
            </If>
            <Return fromlineno="978" tolineno="978" lineno="978"/>
          </While>
        </Function>
        <Function fromlineno="980" tolineno="1018" lineno="980">
          <Arguments fromlineno="980" tolineno="980" lineno="None" format_args="self">
            <AssName fromlineno="980" tolineno="980" lineno="980" name="self"/>
          </Arguments>
          <TryExcept fromlineno="981" tolineno="1005" lineno="981">
            <While fromlineno="982" tolineno="995" lineno="982">
              <Compare fromlineno="982" tolineno="982" lineno="982" op="('&gt;', &lt;Const(int) l.982 [bb.runqueue] at Ox970c04c&gt;)">
                <Getattr fromlineno="982" tolineno="982" lineno="982" attrname="active_builds" expr="self">
                  <Name fromlineno="982" tolineno="982" lineno="982" name="self"/>
                </Getattr>
                <Const fromlineno="982" tolineno="982" lineno="982" type="int">0</Const>
              </Compare>
              <Discard fromlineno="983" tolineno="983" lineno="983">
                <CallFunc fromlineno="983" tolineno="983" lineno="983" func="Getattr(note)">
                  <Getattr fromlineno="983" tolineno="983" lineno="983" attrname="note" expr="bb.msg">
                    <Getattr fromlineno="983" tolineno="983" lineno="983" attrname="msg" expr="bb">
                      <Name fromlineno="983" tolineno="983" lineno="983" name="bb"/>
                    </Getattr>
                  </Getattr>
                  <Const fromlineno="983" tolineno="983" lineno="983" type="int">1</Const>
                  <Getattr fromlineno="983" tolineno="983" lineno="983" attrname="RunQueue" expr="bb.msg.domain">
                    <Getattr fromlineno="983" tolineno="983" lineno="983" attrname="domain" expr="bb.msg">
                      <Getattr fromlineno="983" tolineno="983" lineno="983" attrname="msg" expr="bb">
                        <Name fromlineno="983" tolineno="983" lineno="983" name="bb"/>
                      </Getattr>
                    </Getattr>
                  </Getattr>
                  <BinOp fromlineno="983" tolineno="983" lineno="983" op="%" left="'Waiting for %s active tasks to finish'" right="self.active_builds">
                    <Const fromlineno="983" tolineno="983" lineno="983" type="str">'Waiting for %s active tasks to finish'</Const>
                    <Getattr fromlineno="983" tolineno="983" lineno="983" attrname="active_builds" expr="self">
                      <Name fromlineno="983" tolineno="983" lineno="983" name="self"/>
                    </Getattr>
                  </BinOp>
                </CallFunc>
              </Discard>
              <Assign fromlineno="984" tolineno="984" lineno="984" targets="[&lt;AssName(tasknum) l.984 [bb.runqueue] at Ox970c2cc&gt;]" value="1">
                <AssName fromlineno="984" tolineno="984" lineno="984" name="tasknum"/>
                <Const fromlineno="984" tolineno="984" lineno="984" type="int">1</Const>
              </Assign>
              <For fromlineno="985" tolineno="987" lineno="985">
                <Tuple fromlineno="985" tolineno="985" lineno="985">
                  <AssName fromlineno="985" tolineno="985" lineno="985" name="k"/>
                  <AssName fromlineno="985" tolineno="985" lineno="985" name="v"/>
                </Tuple>
                <CallFunc fromlineno="985" tolineno="985" lineno="985" func="Getattr(iteritems)">
                  <Getattr fromlineno="985" tolineno="985" lineno="985" attrname="iteritems" expr="self.build_pids">
                    <Getattr fromlineno="985" tolineno="985" lineno="985" attrname="build_pids" expr="self">
                      <Name fromlineno="985" tolineno="985" lineno="985" name="self"/>
                    </Getattr>
                  </Getattr>
                </CallFunc>
                <Discard fromlineno="986" tolineno="986" lineno="986">
                  <CallFunc fromlineno="986" tolineno="986" lineno="986" func="Getattr(note)">
                    <Getattr fromlineno="986" tolineno="986" lineno="986" attrname="note" expr="bb.msg">
                      <Getattr fromlineno="986" tolineno="986" lineno="986" attrname="msg" expr="bb">
                        <Name fromlineno="986" tolineno="986" lineno="986" name="bb"/>
                      </Getattr>
                    </Getattr>
                    <Const fromlineno="986" tolineno="986" lineno="986" type="int">1</Const>
                    <Getattr fromlineno="986" tolineno="986" lineno="986" attrname="RunQueue" expr="bb.msg.domain">
                      <Getattr fromlineno="986" tolineno="986" lineno="986" attrname="domain" expr="bb.msg">
                        <Getattr fromlineno="986" tolineno="986" lineno="986" attrname="msg" expr="bb">
                          <Name fromlineno="986" tolineno="986" lineno="986" name="bb"/>
                        </Getattr>
                      </Getattr>
                    </Getattr>
                    <BinOp fromlineno="986" tolineno="986" lineno="986" op="%" left="'%s: %s (%s)'" right="(tasknum, self.get_user_idstring(v), k)">
                      <Const fromlineno="986" tolineno="986" lineno="986" type="str">'%s: %s (%s)'</Const>
                      <Tuple fromlineno="986" tolineno="986" lineno="986">
                        <Name fromlineno="986" tolineno="986" lineno="986" name="tasknum"/>
                        <CallFunc fromlineno="986" tolineno="986" lineno="986" func="Getattr(get_user_idstring)">
                          <Getattr fromlineno="986" tolineno="986" lineno="986" attrname="get_user_idstring" expr="self">
                            <Name fromlineno="986" tolineno="986" lineno="986" name="self"/>
                          </Getattr>
                          <Name fromlineno="986" tolineno="986" lineno="986" name="v"/>
                        </CallFunc>
                        <Name fromlineno="986" tolineno="986" lineno="986" name="k"/>
                      </Tuple>
                    </BinOp>
                  </CallFunc>
                </Discard>
                <Assign fromlineno="987" tolineno="987" lineno="987" targets="[&lt;AssName(tasknum) l.987 [bb.runqueue] at Ox970c7ec&gt;]" value="(tasknum) + (1)">
                  <AssName fromlineno="987" tolineno="987" lineno="987" name="tasknum"/>
                  <BinOp fromlineno="987" tolineno="987" lineno="987" op="+" left="tasknum" right="1">
                    <Name fromlineno="987" tolineno="987" lineno="987" name="tasknum"/>
                    <Const fromlineno="987" tolineno="987" lineno="987" type="int">1</Const>
                  </BinOp>
                </Assign>
              </For>
              <Assign fromlineno="988" tolineno="988" lineno="988" targets="[&lt;AssName(result) l.988 [bb.runqueue] at Ox970c8ac&gt;]" value="os.waitpid(-1, 0)">
                <AssName fromlineno="988" tolineno="988" lineno="988" name="result"/>
                <CallFunc fromlineno="988" tolineno="988" lineno="988" func="Getattr(waitpid)">
                  <Getattr fromlineno="988" tolineno="988" lineno="988" attrname="waitpid" expr="os">
                    <Name fromlineno="988" tolineno="988" lineno="988" name="os"/>
                  </Getattr>
                  <Const fromlineno="988" tolineno="988" lineno="988" type="int">-1</Const>
                  <Const fromlineno="988" tolineno="988" lineno="988" type="int">0</Const>
                </CallFunc>
              </Assign>
              <Assign fromlineno="989" tolineno="989" lineno="989" targets="[&lt;AssName(task) l.989 [bb.runqueue] at Ox970c9ec&gt;]" value="self.build_pids[result[0]]">
                <AssName fromlineno="989" tolineno="989" lineno="989" name="task"/>
                <Subscript fromlineno="989" tolineno="989" lineno="989">
                  <Getattr fromlineno="989" tolineno="989" lineno="989" attrname="build_pids" expr="self">
                    <Name fromlineno="989" tolineno="989" lineno="989" name="self"/>
                  </Getattr>
                  <Index fromlineno="989" tolineno="989" lineno="None">
                    <Subscript fromlineno="989" tolineno="989" lineno="989">
                      <Name fromlineno="989" tolineno="989" lineno="989" name="result"/>
                      <Index fromlineno="989" tolineno="989" lineno="None">
                        <Const fromlineno="989" tolineno="989" lineno="989" type="int">0</Const>
                      </Index>
                    </Subscript>
                  </Index>
                </Subscript>
              </Assign>
              <If fromlineno="990" tolineno="993" lineno="990">
                <Compare fromlineno="990" tolineno="990" lineno="990" op="('!=', &lt;Const(int) l.990 [bb.runqueue] at Ox970cc2c&gt;)">
                  <Subscript fromlineno="990" tolineno="990" lineno="990">
                    <Name fromlineno="990" tolineno="990" lineno="990" name="result"/>
                    <Index fromlineno="990" tolineno="990" lineno="None">
                      <Const fromlineno="990" tolineno="990" lineno="990" type="int">1</Const>
                    </Index>
                  </Subscript>
                  <Const fromlineno="990" tolineno="990" lineno="990" type="int">0</Const>
                </Compare>
                <Discard fromlineno="991" tolineno="991" lineno="991">
                  <CallFunc fromlineno="991" tolineno="991" lineno="991" func="Getattr(error)">
                    <Getattr fromlineno="991" tolineno="991" lineno="991" attrname="error" expr="bb.msg">
                      <Getattr fromlineno="991" tolineno="991" lineno="991" attrname="msg" expr="bb">
                        <Name fromlineno="991" tolineno="991" lineno="991" name="bb"/>
                      </Getattr>
                    </Getattr>
                    <Getattr fromlineno="991" tolineno="991" lineno="991" attrname="RunQueue" expr="bb.msg.domain">
                      <Getattr fromlineno="991" tolineno="991" lineno="991" attrname="domain" expr="bb.msg">
                        <Getattr fromlineno="991" tolineno="991" lineno="991" attrname="msg" expr="bb">
                          <Name fromlineno="991" tolineno="991" lineno="991" name="bb"/>
                        </Getattr>
                      </Getattr>
                    </Getattr>
                    <BinOp fromlineno="991" tolineno="991" lineno="991" op="%" left="'Task %s (%s) failed'" right="(task, self.get_user_idstring(task))">
                      <Const fromlineno="991" tolineno="991" lineno="991" type="str">'Task %s (%s) failed'</Const>
                      <Tuple fromlineno="991" tolineno="991" lineno="991">
                        <Name fromlineno="991" tolineno="991" lineno="991" name="task"/>
                        <CallFunc fromlineno="991" tolineno="991" lineno="991" func="Getattr(get_user_idstring)">
                          <Getattr fromlineno="991" tolineno="991" lineno="991" attrname="get_user_idstring" expr="self">
                            <Name fromlineno="991" tolineno="991" lineno="991" name="self"/>
                          </Getattr>
                          <Name fromlineno="991" tolineno="991" lineno="991" name="task"/>
                        </CallFunc>
                      </Tuple>
                    </BinOp>
                  </CallFunc>
                </Discard>
                <Discard fromlineno="992" tolineno="992" lineno="992">
                  <CallFunc fromlineno="992" tolineno="992" lineno="992" func="Getattr(append)">
                    <Getattr fromlineno="992" tolineno="992" lineno="992" attrname="append" expr="self.failed_fnids">
                      <Getattr fromlineno="992" tolineno="992" lineno="992" attrname="failed_fnids" expr="self">
                        <Name fromlineno="992" tolineno="992" lineno="992" name="self"/>
                      </Getattr>
                    </Getattr>
                    <Subscript fromlineno="992" tolineno="992" lineno="992">
                      <Getattr fromlineno="992" tolineno="992" lineno="992" attrname="runq_fnid" expr="self">
                        <Name fromlineno="992" tolineno="992" lineno="992" name="self"/>
                      </Getattr>
                      <Index fromlineno="992" tolineno="992" lineno="None">
                        <Name fromlineno="992" tolineno="992" lineno="992" name="task"/>
                      </Index>
                    </Subscript>
                  </CallFunc>
                </Discard>
                <Discard fromlineno="993" tolineno="993" lineno="993">
                  <CallFunc fromlineno="993" tolineno="993" lineno="993" func="Getattr(taskFailed)">
                    <Getattr fromlineno="993" tolineno="993" lineno="993" attrname="taskFailed" expr="self.stats">
                      <Getattr fromlineno="993" tolineno="993" lineno="993" attrname="stats" expr="self">
                        <Name fromlineno="993" tolineno="993" lineno="993" name="self"/>
                      </Getattr>
                    </Getattr>
                  </CallFunc>
                </Discard>
              </If>
              <Delete fromlineno="994" tolineno="994" lineno="994">
                <Subscript fromlineno="994" tolineno="994" lineno="994">
                  <Getattr fromlineno="994" tolineno="994" lineno="994" attrname="build_pids" expr="self">
                    <Name fromlineno="994" tolineno="994" lineno="994" name="self"/>
                  </Getattr>
                  <Index fromlineno="994" tolineno="994" lineno="None">
                    <Subscript fromlineno="994" tolineno="994" lineno="994">
                      <Name fromlineno="994" tolineno="994" lineno="994" name="result"/>
                      <Index fromlineno="994" tolineno="994" lineno="None">
                        <Const fromlineno="994" tolineno="994" lineno="994" type="int">0</Const>
                      </Index>
                    </Subscript>
                  </Index>
                </Subscript>
              </Delete>
              <Assign fromlineno="995" tolineno="995" lineno="995" targets="[&lt;AssAttr(active_builds) l.995 [bb.runqueue] at Ox97102cc&gt;]" value="(self.active_builds) - (1)">
                <AssAttr fromlineno="995" tolineno="995" lineno="995" attrname="active_builds" expr="self">
                  <Name fromlineno="995" tolineno="995" lineno="995" name="self"/>
                </AssAttr>
                <BinOp fromlineno="995" tolineno="995" lineno="995" op="-" left="self.active_builds" right="1">
                  <Getattr fromlineno="995" tolineno="995" lineno="995" attrname="active_builds" expr="self">
                    <Name fromlineno="995" tolineno="995" lineno="995" name="self"/>
                  </Getattr>
                  <Const fromlineno="995" tolineno="995" lineno="995" type="int">1</Const>
                </BinOp>
              </Assign>
            </While>
            <Discard fromlineno="996" tolineno="996" lineno="996">
              <CallFunc fromlineno="996" tolineno="996" lineno="996" func="Getattr(note)">
                <Getattr fromlineno="996" tolineno="996" lineno="996" attrname="note" expr="bb.msg">
                  <Getattr fromlineno="996" tolineno="996" lineno="996" attrname="msg" expr="bb">
                    <Name fromlineno="996" tolineno="996" lineno="996" name="bb"/>
                  </Getattr>
                </Getattr>
                <Const fromlineno="996" tolineno="996" lineno="996" type="int">1</Const>
                <Getattr fromlineno="996" tolineno="996" lineno="996" attrname="RunQueue" expr="bb.msg.domain">
                  <Getattr fromlineno="996" tolineno="996" lineno="996" attrname="domain" expr="bb.msg">
                    <Getattr fromlineno="996" tolineno="996" lineno="996" attrname="msg" expr="bb">
                      <Name fromlineno="996" tolineno="996" lineno="996" name="bb"/>
                    </Getattr>
                  </Getattr>
                </Getattr>
                <BinOp fromlineno="996" tolineno="996" lineno="996" op="%" left="&quot;Tasks Summary: Attempted %d tasks of which %d didn't need to be rerun and %d failed.&quot;" right="(self.stats.completed, self.stats.skipped, self.stats.failed)">
                  <Const fromlineno="996" tolineno="996" lineno="996" type="str">"Tasks Summary: Attempted %d tasks of which %d didn't need to be rerun and %d failed."</Const>
                  <Tuple fromlineno="996" tolineno="996" lineno="996">
                    <Getattr fromlineno="996" tolineno="996" lineno="996" attrname="completed" expr="self.stats">
                      <Getattr fromlineno="996" tolineno="996" lineno="996" attrname="stats" expr="self">
                        <Name fromlineno="996" tolineno="996" lineno="996" name="self"/>
                      </Getattr>
                    </Getattr>
                    <Getattr fromlineno="996" tolineno="996" lineno="996" attrname="skipped" expr="self.stats">
                      <Getattr fromlineno="996" tolineno="996" lineno="996" attrname="stats" expr="self">
                        <Name fromlineno="996" tolineno="996" lineno="996" name="self"/>
                      </Getattr>
                    </Getattr>
                    <Getattr fromlineno="996" tolineno="996" lineno="996" attrname="failed" expr="self.stats">
                      <Getattr fromlineno="996" tolineno="996" lineno="996" attrname="stats" expr="self">
                        <Name fromlineno="996" tolineno="996" lineno="996" name="self"/>
                      </Getattr>
                    </Getattr>
                  </Tuple>
                </BinOp>
              </CallFunc>
            </Discard>
            <Return fromlineno="997" tolineno="997" lineno="997">
              <Getattr fromlineno="997" tolineno="997" lineno="997" attrname="failed_fnids" expr="self">
                <Name fromlineno="997" tolineno="997" lineno="997" name="self"/>
              </Getattr>
            </Return>
            <ExceptHandler fromlineno="998" tolineno="1005" lineno="998">
              <Name fromlineno="998" tolineno="998" lineno="998" name="KeyboardInterrupt"/>
              <Discard fromlineno="999" tolineno="999" lineno="999">
                <CallFunc fromlineno="999" tolineno="999" lineno="999" func="Getattr(note)">
                  <Getattr fromlineno="999" tolineno="999" lineno="999" attrname="note" expr="bb.msg">
                    <Getattr fromlineno="999" tolineno="999" lineno="999" attrname="msg" expr="bb">
                      <Name fromlineno="999" tolineno="999" lineno="999" name="bb"/>
                    </Getattr>
                  </Getattr>
                  <Const fromlineno="999" tolineno="999" lineno="999" type="int">1</Const>
                  <Getattr fromlineno="999" tolineno="999" lineno="999" attrname="RunQueue" expr="bb.msg.domain">
                    <Getattr fromlineno="999" tolineno="999" lineno="999" attrname="domain" expr="bb.msg">
                      <Getattr fromlineno="999" tolineno="999" lineno="999" attrname="msg" expr="bb">
                        <Name fromlineno="999" tolineno="999" lineno="999" name="bb"/>
                      </Getattr>
                    </Getattr>
                  </Getattr>
                  <BinOp fromlineno="999" tolineno="999" lineno="999" op="%" left="'Sending SIGINT to remaining %s tasks'" right="self.active_builds">
                    <Const fromlineno="999" tolineno="999" lineno="999" type="str">'Sending SIGINT to remaining %s tasks'</Const>
                    <Getattr fromlineno="999" tolineno="999" lineno="999" attrname="active_builds" expr="self">
                      <Name fromlineno="999" tolineno="999" lineno="999" name="self"/>
                    </Getattr>
                  </BinOp>
                </CallFunc>
              </Discard>
              <For fromlineno="1000" tolineno="1004" lineno="1000">
                <Tuple fromlineno="1000" tolineno="1000" lineno="1000">
                  <AssName fromlineno="1000" tolineno="1000" lineno="1000" name="k"/>
                  <AssName fromlineno="1000" tolineno="1000" lineno="1000" name="v"/>
                </Tuple>
                <CallFunc fromlineno="1000" tolineno="1000" lineno="1000" func="Getattr(iteritems)">
                  <Getattr fromlineno="1000" tolineno="1000" lineno="1000" attrname="iteritems" expr="self.build_pids">
                    <Getattr fromlineno="1000" tolineno="1000" lineno="1000" attrname="build_pids" expr="self">
                      <Name fromlineno="1000" tolineno="1000" lineno="1000" name="self"/>
                    </Getattr>
                  </Getattr>
                </CallFunc>
                <TryExcept fromlineno="1001" tolineno="1004" lineno="1001">
                  <Discard fromlineno="1002" tolineno="1002" lineno="1002">
                    <CallFunc fromlineno="1002" tolineno="1002" lineno="1002" func="Getattr(kill)">
                      <Getattr fromlineno="1002" tolineno="1002" lineno="1002" attrname="kill" expr="os">
                        <Name fromlineno="1002" tolineno="1002" lineno="1002" name="os"/>
                      </Getattr>
                      <UnaryOp fromlineno="1002" tolineno="1002" lineno="1002">
                        <Name fromlineno="1002" tolineno="1002" lineno="1002" name="k"/>
                      </UnaryOp>
                      <Getattr fromlineno="1002" tolineno="1002" lineno="1002" attrname="SIGINT" expr="signal">
                        <Name fromlineno="1002" tolineno="1002" lineno="1002" name="signal"/>
                      </Getattr>
                    </CallFunc>
                  </Discard>
                  <ExceptHandler fromlineno="1003" tolineno="1004" lineno="1003">
                    <Pass fromlineno="1004" tolineno="1004" lineno="1004"/>
                  </ExceptHandler>
                </TryExcept>
              </For>
              <Raise fromlineno="1005" tolineno="1005" lineno="1005"/>
            </ExceptHandler>
          </TryExcept>
          <For fromlineno="1008" tolineno="1014" lineno="1008">
            <AssName fromlineno="1008" tolineno="1008" lineno="1008" name="task"/>
            <CallFunc fromlineno="1008" tolineno="1008" lineno="1008" func="Name(range)">
              <Name fromlineno="1008" tolineno="1008" lineno="1008" name="range"/>
              <CallFunc fromlineno="1008" tolineno="1008" lineno="1008" func="Name(len)">
                <Name fromlineno="1008" tolineno="1008" lineno="1008" name="len"/>
                <Getattr fromlineno="1008" tolineno="1008" lineno="1008" attrname="runq_fnid" expr="self">
                  <Name fromlineno="1008" tolineno="1008" lineno="1008" name="self"/>
                </Getattr>
              </CallFunc>
            </CallFunc>
            <If fromlineno="1009" tolineno="1010" lineno="1009">
              <Compare fromlineno="1009" tolineno="1009" lineno="1009" op="('==', &lt;Const(int) l.1009 [bb.runqueue] at Ox9710f8c&gt;)">
                <Subscript fromlineno="1009" tolineno="1009" lineno="1009">
                  <Getattr fromlineno="1009" tolineno="1009" lineno="1009" attrname="runq_buildable" expr="self">
                    <Name fromlineno="1009" tolineno="1009" lineno="1009" name="self"/>
                  </Getattr>
                  <Index fromlineno="1009" tolineno="1009" lineno="None">
                    <Name fromlineno="1009" tolineno="1009" lineno="1009" name="task"/>
                  </Index>
                </Subscript>
                <Const fromlineno="1009" tolineno="1009" lineno="1009" type="int">0</Const>
              </Compare>
              <Discard fromlineno="1010" tolineno="1010" lineno="1010">
                <CallFunc fromlineno="1010" tolineno="1010" lineno="1010" func="Getattr(error)">
                  <Getattr fromlineno="1010" tolineno="1010" lineno="1010" attrname="error" expr="bb.msg">
                    <Getattr fromlineno="1010" tolineno="1010" lineno="1010" attrname="msg" expr="bb">
                      <Name fromlineno="1010" tolineno="1010" lineno="1010" name="bb"/>
                    </Getattr>
                  </Getattr>
                  <Getattr fromlineno="1010" tolineno="1010" lineno="1010" attrname="RunQueue" expr="bb.msg.domain">
                    <Getattr fromlineno="1010" tolineno="1010" lineno="1010" attrname="domain" expr="bb.msg">
                      <Getattr fromlineno="1010" tolineno="1010" lineno="1010" attrname="msg" expr="bb">
                        <Name fromlineno="1010" tolineno="1010" lineno="1010" name="bb"/>
                      </Getattr>
                    </Getattr>
                  </Getattr>
                  <BinOp fromlineno="1010" tolineno="1010" lineno="1010" op="%" left="'Task %s never buildable!'" right="task">
                    <Const fromlineno="1010" tolineno="1010" lineno="1010" type="str">'Task %s never buildable!'</Const>
                    <Name fromlineno="1010" tolineno="1010" lineno="1010" name="task"/>
                  </BinOp>
                </CallFunc>
              </Discard>
            </If>
            <If fromlineno="1011" tolineno="1012" lineno="1011">
              <Compare fromlineno="1011" tolineno="1011" lineno="1011" op="('==', &lt;Const(int) l.1011 [bb.runqueue] at Ox97572cc&gt;)">
                <Subscript fromlineno="1011" tolineno="1011" lineno="1011">
                  <Getattr fromlineno="1011" tolineno="1011" lineno="1011" attrname="runq_running" expr="self">
                    <Name fromlineno="1011" tolineno="1011" lineno="1011" name="self"/>
                  </Getattr>
                  <Index fromlineno="1011" tolineno="1011" lineno="None">
                    <Name fromlineno="1011" tolineno="1011" lineno="1011" name="task"/>
                  </Index>
                </Subscript>
                <Const fromlineno="1011" tolineno="1011" lineno="1011" type="int">0</Const>
              </Compare>
              <Discard fromlineno="1012" tolineno="1012" lineno="1012">
                <CallFunc fromlineno="1012" tolineno="1012" lineno="1012" func="Getattr(error)">
                  <Getattr fromlineno="1012" tolineno="1012" lineno="1012" attrname="error" expr="bb.msg">
                    <Getattr fromlineno="1012" tolineno="1012" lineno="1012" attrname="msg" expr="bb">
                      <Name fromlineno="1012" tolineno="1012" lineno="1012" name="bb"/>
                    </Getattr>
                  </Getattr>
                  <Getattr fromlineno="1012" tolineno="1012" lineno="1012" attrname="RunQueue" expr="bb.msg.domain">
                    <Getattr fromlineno="1012" tolineno="1012" lineno="1012" attrname="domain" expr="bb.msg">
                      <Getattr fromlineno="1012" tolineno="1012" lineno="1012" attrname="msg" expr="bb">
                        <Name fromlineno="1012" tolineno="1012" lineno="1012" name="bb"/>
                      </Getattr>
                    </Getattr>
                  </Getattr>
                  <BinOp fromlineno="1012" tolineno="1012" lineno="1012" op="%" left="'Task %s never ran!'" right="task">
                    <Const fromlineno="1012" tolineno="1012" lineno="1012" type="str">'Task %s never ran!'</Const>
                    <Name fromlineno="1012" tolineno="1012" lineno="1012" name="task"/>
                  </BinOp>
                </CallFunc>
              </Discard>
            </If>
            <If fromlineno="1013" tolineno="1014" lineno="1013">
              <Compare fromlineno="1013" tolineno="1013" lineno="1013" op="('==', &lt;Const(int) l.1013 [bb.runqueue] at Ox97575ec&gt;)">
                <Subscript fromlineno="1013" tolineno="1013" lineno="1013">
                  <Getattr fromlineno="1013" tolineno="1013" lineno="1013" attrname="runq_complete" expr="self">
                    <Name fromlineno="1013" tolineno="1013" lineno="1013" name="self"/>
                  </Getattr>
                  <Index fromlineno="1013" tolineno="1013" lineno="None">
                    <Name fromlineno="1013" tolineno="1013" lineno="1013" name="task"/>
                  </Index>
                </Subscript>
                <Const fromlineno="1013" tolineno="1013" lineno="1013" type="int">0</Const>
              </Compare>
              <Discard fromlineno="1014" tolineno="1014" lineno="1014">
                <CallFunc fromlineno="1014" tolineno="1014" lineno="1014" func="Getattr(error)">
                  <Getattr fromlineno="1014" tolineno="1014" lineno="1014" attrname="error" expr="bb.msg">
                    <Getattr fromlineno="1014" tolineno="1014" lineno="1014" attrname="msg" expr="bb">
                      <Name fromlineno="1014" tolineno="1014" lineno="1014" name="bb"/>
                    </Getattr>
                  </Getattr>
                  <Getattr fromlineno="1014" tolineno="1014" lineno="1014" attrname="RunQueue" expr="bb.msg.domain">
                    <Getattr fromlineno="1014" tolineno="1014" lineno="1014" attrname="domain" expr="bb.msg">
                      <Getattr fromlineno="1014" tolineno="1014" lineno="1014" attrname="msg" expr="bb">
                        <Name fromlineno="1014" tolineno="1014" lineno="1014" name="bb"/>
                      </Getattr>
                    </Getattr>
                  </Getattr>
                  <BinOp fromlineno="1014" tolineno="1014" lineno="1014" op="%" left="'Task %s never completed!'" right="task">
                    <Const fromlineno="1014" tolineno="1014" lineno="1014" type="str">'Task %s never completed!'</Const>
                    <Name fromlineno="1014" tolineno="1014" lineno="1014" name="task"/>
                  </BinOp>
                </CallFunc>
              </Discard>
            </If>
          </For>
          <Discard fromlineno="1016" tolineno="1016" lineno="1016">
            <CallFunc fromlineno="1016" tolineno="1016" lineno="1016" func="Getattr(note)">
              <Getattr fromlineno="1016" tolineno="1016" lineno="1016" attrname="note" expr="bb.msg">
                <Getattr fromlineno="1016" tolineno="1016" lineno="1016" attrname="msg" expr="bb">
                  <Name fromlineno="1016" tolineno="1016" lineno="1016" name="bb"/>
                </Getattr>
              </Getattr>
              <Const fromlineno="1016" tolineno="1016" lineno="1016" type="int">1</Const>
              <Getattr fromlineno="1016" tolineno="1016" lineno="1016" attrname="RunQueue" expr="bb.msg.domain">
                <Getattr fromlineno="1016" tolineno="1016" lineno="1016" attrname="domain" expr="bb.msg">
                  <Getattr fromlineno="1016" tolineno="1016" lineno="1016" attrname="msg" expr="bb">
                    <Name fromlineno="1016" tolineno="1016" lineno="1016" name="bb"/>
                  </Getattr>
                </Getattr>
              </Getattr>
              <BinOp fromlineno="1016" tolineno="1016" lineno="1016" op="%" left="&quot;Tasks Summary: Attempted %d tasks of which %d didn't need to be rerun and %d failed.&quot;" right="(self.stats.completed, self.stats.skipped, self.stats.failed)">
                <Const fromlineno="1016" tolineno="1016" lineno="1016" type="str">"Tasks Summary: Attempted %d tasks of which %d didn't need to be rerun and %d failed."</Const>
                <Tuple fromlineno="1016" tolineno="1016" lineno="1016">
                  <Getattr fromlineno="1016" tolineno="1016" lineno="1016" attrname="completed" expr="self.stats">
                    <Getattr fromlineno="1016" tolineno="1016" lineno="1016" attrname="stats" expr="self">
                      <Name fromlineno="1016" tolineno="1016" lineno="1016" name="self"/>
                    </Getattr>
                  </Getattr>
                  <Getattr fromlineno="1016" tolineno="1016" lineno="1016" attrname="skipped" expr="self.stats">
                    <Getattr fromlineno="1016" tolineno="1016" lineno="1016" attrname="stats" expr="self">
                      <Name fromlineno="1016" tolineno="1016" lineno="1016" name="self"/>
                    </Getattr>
                  </Getattr>
                  <Getattr fromlineno="1016" tolineno="1016" lineno="1016" attrname="failed" expr="self.stats">
                    <Getattr fromlineno="1016" tolineno="1016" lineno="1016" attrname="stats" expr="self">
                      <Name fromlineno="1016" tolineno="1016" lineno="1016" name="self"/>
                    </Getattr>
                  </Getattr>
                </Tuple>
              </BinOp>
            </CallFunc>
          </Discard>
          <Return fromlineno="1018" tolineno="1018" lineno="1018">
            <Getattr fromlineno="1018" tolineno="1018" lineno="1018" attrname="failed_fnids" expr="self">
              <Name fromlineno="1018" tolineno="1018" lineno="1018" name="self"/>
            </Getattr>
          </Return>
        </Function>
        <Function fromlineno="1020" tolineno="1042" lineno="1020">
          <Arguments fromlineno="1020" tolineno="1020" lineno="None" format_args="self, taskQueue">
            <AssName fromlineno="1020" tolineno="1020" lineno="1020" name="self"/>
            <AssName fromlineno="1020" tolineno="1020" lineno="1020" name="taskQueue"/>
          </Arguments>
          <Discard fromlineno="1024" tolineno="1024" lineno="1024">
            <CallFunc fromlineno="1024" tolineno="1024" lineno="1024" func="Getattr(debug)">
              <Getattr fromlineno="1024" tolineno="1024" lineno="1024" attrname="debug" expr="bb.msg">
                <Getattr fromlineno="1024" tolineno="1024" lineno="1024" attrname="msg" expr="bb">
                  <Name fromlineno="1024" tolineno="1024" lineno="1024" name="bb"/>
                </Getattr>
              </Getattr>
              <Const fromlineno="1024" tolineno="1024" lineno="1024" type="int">3</Const>
              <Getattr fromlineno="1024" tolineno="1024" lineno="1024" attrname="RunQueue" expr="bb.msg.domain">
                <Getattr fromlineno="1024" tolineno="1024" lineno="1024" attrname="domain" expr="bb.msg">
                  <Getattr fromlineno="1024" tolineno="1024" lineno="1024" attrname="msg" expr="bb">
                    <Name fromlineno="1024" tolineno="1024" lineno="1024" name="bb"/>
                  </Getattr>
                </Getattr>
              </Getattr>
              <Const fromlineno="1024" tolineno="1024" lineno="1024" type="str">'run_tasks:'</Const>
            </CallFunc>
          </Discard>
          <For fromlineno="1025" tolineno="1031" lineno="1025">
            <AssName fromlineno="1025" tolineno="1025" lineno="1025" name="task"/>
            <CallFunc fromlineno="1025" tolineno="1025" lineno="1025" func="Name(range)">
              <Name fromlineno="1025" tolineno="1025" lineno="1025" name="range"/>
              <CallFunc fromlineno="1025" tolineno="1025" lineno="1025" func="Name(len)">
                <Name fromlineno="1025" tolineno="1025" lineno="1025" name="len"/>
                <Getattr fromlineno="1025" tolineno="1025" lineno="1025" attrname="runq_fnid" expr="self">
                  <Name fromlineno="1025" tolineno="1025" lineno="1025" name="self"/>
                </Getattr>
              </CallFunc>
            </CallFunc>
            <Discard fromlineno="1026" tolineno="1031" lineno="1026">
              <CallFunc fromlineno="1026" tolineno="1031" lineno="1026" func="Getattr(debug)">
                <Getattr fromlineno="1026" tolineno="1026" lineno="1026" attrname="debug" expr="bb.msg">
                  <Getattr fromlineno="1026" tolineno="1026" lineno="1026" attrname="msg" expr="bb">
                    <Name fromlineno="1026" tolineno="1026" lineno="1026" name="bb"/>
                  </Getattr>
                </Getattr>
                <Const fromlineno="1026" tolineno="1026" lineno="1026" type="int">3</Const>
                <Getattr fromlineno="1026" tolineno="1026" lineno="1026" attrname="RunQueue" expr="bb.msg.domain">
                  <Getattr fromlineno="1026" tolineno="1026" lineno="1026" attrname="domain" expr="bb.msg">
                    <Getattr fromlineno="1026" tolineno="1026" lineno="1026" attrname="msg" expr="bb">
                      <Name fromlineno="1026" tolineno="1026" lineno="1026" name="bb"/>
                    </Getattr>
                  </Getattr>
                </Getattr>
                <BinOp fromlineno="1026" tolineno="1031" lineno="1026" op="%" left="' (%s)%s - %s: %s   Deps %s RevDeps %s'" right="(task, taskQueue.fn_index[self.runq_fnid[task]], self.runq_task[task], self.runq_weight[task], self.runq_depends[task], self.runq_revdeps[task])">
                  <Const fromlineno="1026" tolineno="1026" lineno="1026" type="str">' (%s)%s - %s: %s   Deps %s RevDeps %s'</Const>
                  <Tuple fromlineno="1026" tolineno="1031" lineno="1026">
                    <Name fromlineno="1026" tolineno="1026" lineno="1026" name="task"/>
                    <Subscript fromlineno="1027" tolineno="1027" lineno="1027">
                      <Getattr fromlineno="1027" tolineno="1027" lineno="1027" attrname="fn_index" expr="taskQueue">
                        <Name fromlineno="1027" tolineno="1027" lineno="1027" name="taskQueue"/>
                      </Getattr>
                      <Index fromlineno="1027" tolineno="1027" lineno="None">
                        <Subscript fromlineno="1027" tolineno="1027" lineno="1027">
                          <Getattr fromlineno="1027" tolineno="1027" lineno="1027" attrname="runq_fnid" expr="self">
                            <Name fromlineno="1027" tolineno="1027" lineno="1027" name="self"/>
                          </Getattr>
                          <Index fromlineno="1027" tolineno="1027" lineno="None">
                            <Name fromlineno="1027" tolineno="1027" lineno="1027" name="task"/>
                          </Index>
                        </Subscript>
                      </Index>
                    </Subscript>
                    <Subscript fromlineno="1028" tolineno="1028" lineno="1028">
                      <Getattr fromlineno="1028" tolineno="1028" lineno="1028" attrname="runq_task" expr="self">
                        <Name fromlineno="1028" tolineno="1028" lineno="1028" name="self"/>
                      </Getattr>
                      <Index fromlineno="1028" tolineno="1028" lineno="None">
                        <Name fromlineno="1028" tolineno="1028" lineno="1028" name="task"/>
                      </Index>
                    </Subscript>
                    <Subscript fromlineno="1029" tolineno="1029" lineno="1029">
                      <Getattr fromlineno="1029" tolineno="1029" lineno="1029" attrname="runq_weight" expr="self">
                        <Name fromlineno="1029" tolineno="1029" lineno="1029" name="self"/>
                      </Getattr>
                      <Index fromlineno="1029" tolineno="1029" lineno="None">
                        <Name fromlineno="1029" tolineno="1029" lineno="1029" name="task"/>
                      </Index>
                    </Subscript>
                    <Subscript fromlineno="1030" tolineno="1030" lineno="1030">
                      <Getattr fromlineno="1030" tolineno="1030" lineno="1030" attrname="runq_depends" expr="self">
                        <Name fromlineno="1030" tolineno="1030" lineno="1030" name="self"/>
                      </Getattr>
                      <Index fromlineno="1030" tolineno="1030" lineno="None">
                        <Name fromlineno="1030" tolineno="1030" lineno="1030" name="task"/>
                      </Index>
                    </Subscript>
                    <Subscript fromlineno="1031" tolineno="1031" lineno="1031">
                      <Getattr fromlineno="1031" tolineno="1031" lineno="1031" attrname="runq_revdeps" expr="self">
                        <Name fromlineno="1031" tolineno="1031" lineno="1031" name="self"/>
                      </Getattr>
                      <Index fromlineno="1031" tolineno="1031" lineno="None">
                        <Name fromlineno="1031" tolineno="1031" lineno="1031" name="task"/>
                      </Index>
                    </Subscript>
                  </Tuple>
                </BinOp>
              </CallFunc>
            </Discard>
          </For>
          <Discard fromlineno="1033" tolineno="1033" lineno="1033">
            <CallFunc fromlineno="1033" tolineno="1033" lineno="1033" func="Getattr(debug)">
              <Getattr fromlineno="1033" tolineno="1033" lineno="1033" attrname="debug" expr="bb.msg">
                <Getattr fromlineno="1033" tolineno="1033" lineno="1033" attrname="msg" expr="bb">
                  <Name fromlineno="1033" tolineno="1033" lineno="1033" name="bb"/>
                </Getattr>
              </Getattr>
              <Const fromlineno="1033" tolineno="1033" lineno="1033" type="int">3</Const>
              <Getattr fromlineno="1033" tolineno="1033" lineno="1033" attrname="RunQueue" expr="bb.msg.domain">
                <Getattr fromlineno="1033" tolineno="1033" lineno="1033" attrname="domain" expr="bb.msg">
                  <Getattr fromlineno="1033" tolineno="1033" lineno="1033" attrname="msg" expr="bb">
                    <Name fromlineno="1033" tolineno="1033" lineno="1033" name="bb"/>
                  </Getattr>
                </Getattr>
              </Getattr>
              <Const fromlineno="1033" tolineno="1033" lineno="1033" type="str">'sorted_tasks:'</Const>
            </CallFunc>
          </Discard>
          <For fromlineno="1034" tolineno="1042" lineno="1034">
            <AssName fromlineno="1034" tolineno="1034" lineno="1034" name="task1"/>
            <CallFunc fromlineno="1034" tolineno="1034" lineno="1034" func="Name(range)">
              <Name fromlineno="1034" tolineno="1034" lineno="1034" name="range"/>
              <CallFunc fromlineno="1034" tolineno="1034" lineno="1034" func="Name(len)">
                <Name fromlineno="1034" tolineno="1034" lineno="1034" name="len"/>
                <Getattr fromlineno="1034" tolineno="1034" lineno="1034" attrname="runq_fnid" expr="self">
                  <Name fromlineno="1034" tolineno="1034" lineno="1034" name="self"/>
                </Getattr>
              </CallFunc>
            </CallFunc>
            <If fromlineno="1035" tolineno="1042" lineno="1035">
              <Compare fromlineno="1035" tolineno="1035" lineno="1035" op="('in', &lt;Getattr(prio_map) l.1035 [bb.runqueue] at Ox975b8ec&gt;)">
                <Name fromlineno="1035" tolineno="1035" lineno="1035" name="task1"/>
                <Getattr fromlineno="1035" tolineno="1035" lineno="1035" attrname="prio_map" expr="self">
                  <Name fromlineno="1035" tolineno="1035" lineno="1035" name="self"/>
                </Getattr>
              </Compare>
              <Assign fromlineno="1036" tolineno="1036" lineno="1036" targets="[&lt;AssName(task) l.1036 [bb.runqueue] at Ox975b9ac&gt;]" value="self.prio_map[task1]">
                <AssName fromlineno="1036" tolineno="1036" lineno="1036" name="task"/>
                <Subscript fromlineno="1036" tolineno="1036" lineno="1036">
                  <Getattr fromlineno="1036" tolineno="1036" lineno="1036" attrname="prio_map" expr="self">
                    <Name fromlineno="1036" tolineno="1036" lineno="1036" name="self"/>
                  </Getattr>
                  <Index fromlineno="1036" tolineno="1036" lineno="None">
                    <Name fromlineno="1036" tolineno="1036" lineno="1036" name="task1"/>
                  </Index>
                </Subscript>
              </Assign>
              <Discard fromlineno="1037" tolineno="1042" lineno="1037">
                <CallFunc fromlineno="1037" tolineno="1042" lineno="1037" func="Getattr(debug)">
                  <Getattr fromlineno="1037" tolineno="1037" lineno="1037" attrname="debug" expr="bb.msg">
                    <Getattr fromlineno="1037" tolineno="1037" lineno="1037" attrname="msg" expr="bb">
                      <Name fromlineno="1037" tolineno="1037" lineno="1037" name="bb"/>
                    </Getattr>
                  </Getattr>
                  <Const fromlineno="1037" tolineno="1037" lineno="1037" type="int">3</Const>
                  <Getattr fromlineno="1037" tolineno="1037" lineno="1037" attrname="RunQueue" expr="bb.msg.domain">
                    <Getattr fromlineno="1037" tolineno="1037" lineno="1037" attrname="domain" expr="bb.msg">
                      <Getattr fromlineno="1037" tolineno="1037" lineno="1037" attrname="msg" expr="bb">
                        <Name fromlineno="1037" tolineno="1037" lineno="1037" name="bb"/>
                      </Getattr>
                    </Getattr>
                  </Getattr>
                  <BinOp fromlineno="1037" tolineno="1042" lineno="1037" op="%" left="' (%s)%s - %s: %s   Deps %s RevDeps %s'" right="(task, taskQueue.fn_index[self.runq_fnid[task]], self.runq_task[task], self.runq_weight[task], self.runq_depends[task], self.runq_revdeps[task])">
                    <Const fromlineno="1037" tolineno="1037" lineno="1037" type="str">' (%s)%s - %s: %s   Deps %s RevDeps %s'</Const>
                    <Tuple fromlineno="1037" tolineno="1042" lineno="1037">
                      <Name fromlineno="1037" tolineno="1037" lineno="1037" name="task"/>
                      <Subscript fromlineno="1038" tolineno="1038" lineno="1038">
                        <Getattr fromlineno="1038" tolineno="1038" lineno="1038" attrname="fn_index" expr="taskQueue">
                          <Name fromlineno="1038" tolineno="1038" lineno="1038" name="taskQueue"/>
                        </Getattr>
                        <Index fromlineno="1038" tolineno="1038" lineno="None">
                          <Subscript fromlineno="1038" tolineno="1038" lineno="1038">
                            <Getattr fromlineno="1038" tolineno="1038" lineno="1038" attrname="runq_fnid" expr="self">
                              <Name fromlineno="1038" tolineno="1038" lineno="1038" name="self"/>
                            </Getattr>
                            <Index fromlineno="1038" tolineno="1038" lineno="None">
                              <Name fromlineno="1038" tolineno="1038" lineno="1038" name="task"/>
                            </Index>
                          </Subscript>
                        </Index>
                      </Subscript>
                      <Subscript fromlineno="1039" tolineno="1039" lineno="1039">
                        <Getattr fromlineno="1039" tolineno="1039" lineno="1039" attrname="runq_task" expr="self">
                          <Name fromlineno="1039" tolineno="1039" lineno="1039" name="self"/>
                        </Getattr>
                        <Index fromlineno="1039" tolineno="1039" lineno="None">
                          <Name fromlineno="1039" tolineno="1039" lineno="1039" name="task"/>
                        </Index>
                      </Subscript>
                      <Subscript fromlineno="1040" tolineno="1040" lineno="1040">
                        <Getattr fromlineno="1040" tolineno="1040" lineno="1040" attrname="runq_weight" expr="self">
                          <Name fromlineno="1040" tolineno="1040" lineno="1040" name="self"/>
                        </Getattr>
                        <Index fromlineno="1040" tolineno="1040" lineno="None">
                          <Name fromlineno="1040" tolineno="1040" lineno="1040" name="task"/>
                        </Index>
                      </Subscript>
                      <Subscript fromlineno="1041" tolineno="1041" lineno="1041">
                        <Getattr fromlineno="1041" tolineno="1041" lineno="1041" attrname="runq_depends" expr="self">
                          <Name fromlineno="1041" tolineno="1041" lineno="1041" name="self"/>
                        </Getattr>
                        <Index fromlineno="1041" tolineno="1041" lineno="None">
                          <Name fromlineno="1041" tolineno="1041" lineno="1041" name="task"/>
                        </Index>
                      </Subscript>
                      <Subscript fromlineno="1042" tolineno="1042" lineno="1042">
                        <Getattr fromlineno="1042" tolineno="1042" lineno="1042" attrname="runq_revdeps" expr="self">
                          <Name fromlineno="1042" tolineno="1042" lineno="1042" name="self"/>
                        </Getattr>
                        <Index fromlineno="1042" tolineno="1042" lineno="None">
                          <Name fromlineno="1042" tolineno="1042" lineno="1042" name="task"/>
                        </Index>
                      </Subscript>
                    </Tuple>
                  </BinOp>
                </CallFunc>
              </Discard>
            </If>
          </For>
        </Function>
      </Class>
      <Function fromlineno="1045" tolineno="1051" lineno="1045">
        <Arguments fromlineno="1045" tolineno="1045" lineno="None" format_args="fn, taskname, d">
          <AssName fromlineno="1045" tolineno="1045" lineno="1045" name="fn"/>
          <AssName fromlineno="1045" tolineno="1045" lineno="1045" name="taskname"/>
          <AssName fromlineno="1045" tolineno="1045" lineno="1045" name="d"/>
        </Arguments>
        <Assign fromlineno="1046" tolineno="1046" lineno="1046" targets="[&lt;AssName(rq) l.1046 [bb.runqueue] at Ox97601cc&gt;]" value="bb.data.getVar('__RUNQUEUE_DO_NOT_USE_EXTERNALLY', d)">
          <AssName fromlineno="1046" tolineno="1046" lineno="1046" name="rq"/>
          <CallFunc fromlineno="1046" tolineno="1046" lineno="1046" func="Getattr(getVar)">
            <Getattr fromlineno="1046" tolineno="1046" lineno="1046" attrname="getVar" expr="bb.data">
              <Getattr fromlineno="1046" tolineno="1046" lineno="1046" attrname="data" expr="bb">
                <Name fromlineno="1046" tolineno="1046" lineno="1046" name="bb"/>
              </Getattr>
            </Getattr>
            <Const fromlineno="1046" tolineno="1046" lineno="1046" type="str">'__RUNQUEUE_DO_NOT_USE_EXTERNALLY'</Const>
            <Name fromlineno="1046" tolineno="1046" lineno="1046" name="d"/>
          </CallFunc>
        </Assign>
        <Assign fromlineno="1047" tolineno="1047" lineno="1047" targets="[&lt;AssName(fnid) l.1047 [bb.runqueue] at Ox976032c&gt;]" value="rq.taskData.getfn_id(fn)">
          <AssName fromlineno="1047" tolineno="1047" lineno="1047" name="fnid"/>
          <CallFunc fromlineno="1047" tolineno="1047" lineno="1047" func="Getattr(getfn_id)">
            <Getattr fromlineno="1047" tolineno="1047" lineno="1047" attrname="getfn_id" expr="rq.taskData">
              <Getattr fromlineno="1047" tolineno="1047" lineno="1047" attrname="taskData" expr="rq">
                <Name fromlineno="1047" tolineno="1047" lineno="1047" name="rq"/>
              </Getattr>
            </Getattr>
            <Name fromlineno="1047" tolineno="1047" lineno="1047" name="fn"/>
          </CallFunc>
        </Assign>
        <Assign fromlineno="1048" tolineno="1048" lineno="1048" targets="[&lt;AssName(taskid) l.1048 [bb.runqueue] at Ox976046c&gt;]" value="rq.get_task_id(fnid, taskname)">
          <AssName fromlineno="1048" tolineno="1048" lineno="1048" name="taskid"/>
          <CallFunc fromlineno="1048" tolineno="1048" lineno="1048" func="Getattr(get_task_id)">
            <Getattr fromlineno="1048" tolineno="1048" lineno="1048" attrname="get_task_id" expr="rq">
              <Name fromlineno="1048" tolineno="1048" lineno="1048" name="rq"/>
            </Getattr>
            <Name fromlineno="1048" tolineno="1048" lineno="1048" name="fnid"/>
            <Name fromlineno="1048" tolineno="1048" lineno="1048" name="taskname"/>
          </CallFunc>
        </Assign>
        <If fromlineno="1049" tolineno="1050" lineno="1049">
          <Compare fromlineno="1049" tolineno="1049" lineno="1049" op="('is not', &lt;Const(NoneType) l.1049 [bb.runqueue] at Ox976060c&gt;)">
            <Name fromlineno="1049" tolineno="1049" lineno="1049" name="taskid"/>
            <Const fromlineno="1049" tolineno="1049" lineno="1049" type="NoneType">None</Const>
          </Compare>
          <Return fromlineno="1050" tolineno="1050" lineno="1050">
            <CallFunc fromlineno="1050" tolineno="1050" lineno="1050" func="Getattr(check_stamp_task)">
              <Getattr fromlineno="1050" tolineno="1050" lineno="1050" attrname="check_stamp_task" expr="rq">
                <Name fromlineno="1050" tolineno="1050" lineno="1050" name="rq"/>
              </Getattr>
              <Name fromlineno="1050" tolineno="1050" lineno="1050" name="taskid"/>
            </CallFunc>
          </Return>
        </If>
        <Return fromlineno="1051" tolineno="1051" lineno="1051">
          <Const fromlineno="1051" tolineno="1051" lineno="1051" type="NoneType">None</Const>
        </Return>
      </Function>
    </Module>
    <Module fromlineno="0" tolineno="562" lineno="0" name="bb.data">
      <Import fromlineno="40" tolineno="40" lineno="40">
        <ImportName name="sys"/>
        <ImportName name="os"/>
        <ImportName name="re"/>
        <ImportName name="time"/>
        <ImportName name="types"/>
      </Import>
      <If fromlineno="41" tolineno="44" lineno="41">
        <Compare fromlineno="41" tolineno="41" lineno="41" op="('==', &lt;Const(str) l.41 [bb.data] at Ox92f864c&gt;)">
          <Subscript fromlineno="41" tolineno="41" lineno="41">
            <Subscript fromlineno="41" tolineno="41" lineno="41">
              <Getattr fromlineno="41" tolineno="41" lineno="41" attrname="argv" expr="sys">
                <Name fromlineno="41" tolineno="41" lineno="41" name="sys"/>
              </Getattr>
              <Index fromlineno="41" tolineno="41" lineno="None">
                <Const fromlineno="41" tolineno="41" lineno="41" type="int">0</Const>
              </Index>
            </Subscript>
            <Slice fromlineno="41" tolineno="41" lineno="None">
              <Const fromlineno="41" tolineno="41" lineno="41" type="int">-5</Const>
            </Slice>
          </Subscript>
          <Const fromlineno="41" tolineno="41" lineno="41" type="str">'pydoc'</Const>
        </Compare>
        <Assign fromlineno="42" tolineno="42" lineno="42" targets="[&lt;AssName(path) l.42 [bb.data] at Ox92f8e6c&gt;]" value="os.path.dirname(os.path.dirname(sys.argv[1]))">
          <AssName fromlineno="42" tolineno="42" lineno="42" name="path"/>
          <CallFunc fromlineno="42" tolineno="42" lineno="42" func="Getattr(dirname)">
            <Getattr fromlineno="42" tolineno="42" lineno="42" attrname="dirname" expr="os.path">
              <Getattr fromlineno="42" tolineno="42" lineno="42" attrname="path" expr="os">
                <Name fromlineno="42" tolineno="42" lineno="42" name="os"/>
              </Getattr>
            </Getattr>
            <CallFunc fromlineno="42" tolineno="42" lineno="42" func="Getattr(dirname)">
              <Getattr fromlineno="42" tolineno="42" lineno="42" attrname="dirname" expr="os.path">
                <Getattr fromlineno="42" tolineno="42" lineno="42" attrname="path" expr="os">
                  <Name fromlineno="42" tolineno="42" lineno="42" name="os"/>
                </Getattr>
              </Getattr>
              <Subscript fromlineno="42" tolineno="42" lineno="42">
                <Getattr fromlineno="42" tolineno="42" lineno="42" attrname="argv" expr="sys">
                  <Name fromlineno="42" tolineno="42" lineno="42" name="sys"/>
                </Getattr>
                <Index fromlineno="42" tolineno="42" lineno="None">
                  <Const fromlineno="42" tolineno="42" lineno="42" type="int">1</Const>
                </Index>
              </Subscript>
            </CallFunc>
          </CallFunc>
        </Assign>
        <Assign fromlineno="44" tolineno="44" lineno="44" targets="[&lt;AssName(path) l.44 [bb.data] at Ox930ebcc&gt;]" value="os.path.dirname(os.path.dirname(sys.argv[0]))">
          <AssName fromlineno="44" tolineno="44" lineno="44" name="path"/>
          <CallFunc fromlineno="44" tolineno="44" lineno="44" func="Getattr(dirname)">
            <Getattr fromlineno="44" tolineno="44" lineno="44" attrname="dirname" expr="os.path">
              <Getattr fromlineno="44" tolineno="44" lineno="44" attrname="path" expr="os">
                <Name fromlineno="44" tolineno="44" lineno="44" name="os"/>
              </Getattr>
            </Getattr>
            <CallFunc fromlineno="44" tolineno="44" lineno="44" func="Getattr(dirname)">
              <Getattr fromlineno="44" tolineno="44" lineno="44" attrname="dirname" expr="os.path">
                <Getattr fromlineno="44" tolineno="44" lineno="44" attrname="path" expr="os">
                  <Name fromlineno="44" tolineno="44" lineno="44" name="os"/>
                </Getattr>
              </Getattr>
              <Subscript fromlineno="44" tolineno="44" lineno="44">
                <Getattr fromlineno="44" tolineno="44" lineno="44" attrname="argv" expr="sys">
                  <Name fromlineno="44" tolineno="44" lineno="44" name="sys"/>
                </Getattr>
                <Index fromlineno="44" tolineno="44" lineno="None">
                  <Const fromlineno="44" tolineno="44" lineno="44" type="int">0</Const>
                </Index>
              </Subscript>
            </CallFunc>
          </CallFunc>
        </Assign>
      </If>
      <Discard fromlineno="45" tolineno="45" lineno="45">
        <CallFunc fromlineno="45" tolineno="45" lineno="45" func="Getattr(insert)">
          <Getattr fromlineno="45" tolineno="45" lineno="45" attrname="insert" expr="sys.path">
            <Getattr fromlineno="45" tolineno="45" lineno="45" attrname="path" expr="sys">
              <Name fromlineno="45" tolineno="45" lineno="45" name="sys"/>
            </Getattr>
          </Getattr>
          <Const fromlineno="45" tolineno="45" lineno="45" type="int">0</Const>
          <Name fromlineno="45" tolineno="45" lineno="45" name="path"/>
        </CallFunc>
      </Discard>
      <From fromlineno="47" tolineno="47" lineno="47" modname="bb">
        <ImportName name="data_smart"/>
      </From>
      <Import fromlineno="48" tolineno="48" lineno="48">
        <ImportName name="bb"/>
      </Import>
      <Assign fromlineno="50" tolineno="50" lineno="50" targets="[&lt;AssName(_dict_type) l.50 [bb.data] at Ox930e02c&gt;]" value="data_smart.DataSmart">
        <AssName fromlineno="50" tolineno="50" lineno="50" name="_dict_type"/>
        <Getattr fromlineno="50" tolineno="50" lineno="50" attrname="DataSmart" expr="data_smart">
          <Name fromlineno="50" tolineno="50" lineno="50" name="data_smart"/>
        </Getattr>
      </Assign>
      <Function fromlineno="52" tolineno="53" lineno="52">
        <Arguments fromlineno="52" tolineno="52" lineno="None" format_args=""/>
        <Return fromlineno="53" tolineno="53" lineno="53">
          <CallFunc fromlineno="53" tolineno="53" lineno="53" func="Name(_dict_type)">
            <Name fromlineno="53" tolineno="53" lineno="53" name="_dict_type"/>
          </CallFunc>
        </Return>
      </Function>
      <Function fromlineno="55" tolineno="59" lineno="55">
        <Arguments fromlineno="55" tolineno="55" lineno="None" format_args="parent=None">
          <AssName fromlineno="55" tolineno="55" lineno="55" name="parent"/>
          <Const fromlineno="55" tolineno="55" lineno="55" type="NoneType">None</Const>
        </Arguments>
        <If fromlineno="56" tolineno="59" lineno="56">
          <Name fromlineno="56" tolineno="56" lineno="56" name="parent"/>
          <Return fromlineno="57" tolineno="57" lineno="57">
            <CallFunc fromlineno="57" tolineno="57" lineno="57" func="Getattr(createCopy)">
              <Getattr fromlineno="57" tolineno="57" lineno="57" attrname="createCopy" expr="parent">
                <Name fromlineno="57" tolineno="57" lineno="57" name="parent"/>
              </Getattr>
            </CallFunc>
          </Return>
          <Return fromlineno="59" tolineno="59" lineno="59">
            <CallFunc fromlineno="59" tolineno="59" lineno="59" func="Name(_dict_type)">
              <Name fromlineno="59" tolineno="59" lineno="59" name="_dict_type"/>
            </CallFunc>
          </Return>
        </If>
      </Function>
      <Function fromlineno="61" tolineno="69" lineno="61">
        <Arguments fromlineno="61" tolineno="61" lineno="None" format_args="source">
          <AssName fromlineno="61" tolineno="61" lineno="61" name="source"/>
        </Arguments>
        <Return fromlineno="69" tolineno="69" lineno="69">
          <CallFunc fromlineno="69" tolineno="69" lineno="69" func="Getattr(createCopy)">
            <Getattr fromlineno="69" tolineno="69" lineno="69" attrname="createCopy" expr="source">
              <Name fromlineno="69" tolineno="69" lineno="69" name="source"/>
            </Getattr>
          </CallFunc>
        </Return>
      </Function>
      <Function fromlineno="71" tolineno="73" lineno="71">
        <Arguments fromlineno="71" tolineno="71" lineno="None" format_args="var, d">
          <AssName fromlineno="71" tolineno="71" lineno="71" name="var"/>
          <AssName fromlineno="71" tolineno="71" lineno="71" name="d"/>
        </Arguments>
        <Discard fromlineno="73" tolineno="73" lineno="73">
          <CallFunc fromlineno="73" tolineno="73" lineno="73" func="Getattr(initVar)">
            <Getattr fromlineno="73" tolineno="73" lineno="73" attrname="initVar" expr="d">
              <Name fromlineno="73" tolineno="73" lineno="73" name="d"/>
            </Getattr>
            <Name fromlineno="73" tolineno="73" lineno="73" name="var"/>
          </CallFunc>
        </Discard>
      </Function>
      <Function fromlineno="76" tolineno="85" lineno="76">
        <Arguments fromlineno="76" tolineno="76" lineno="None" format_args="var, value, d">
          <AssName fromlineno="76" tolineno="76" lineno="76" name="var"/>
          <AssName fromlineno="76" tolineno="76" lineno="76" name="value"/>
          <AssName fromlineno="76" tolineno="76" lineno="76" name="d"/>
        </Arguments>
        <Discard fromlineno="85" tolineno="85" lineno="85">
          <CallFunc fromlineno="85" tolineno="85" lineno="85" func="Getattr(setVar)">
            <Getattr fromlineno="85" tolineno="85" lineno="85" attrname="setVar" expr="d">
              <Name fromlineno="85" tolineno="85" lineno="85" name="d"/>
            </Getattr>
            <Name fromlineno="85" tolineno="85" lineno="85" name="var"/>
            <Name fromlineno="85" tolineno="85" lineno="85" name="value"/>
          </CallFunc>
        </Discard>
      </Function>
      <Function fromlineno="88" tolineno="97" lineno="88">
        <Arguments fromlineno="88" tolineno="88" lineno="None" format_args="var, d, exp=0">
          <AssName fromlineno="88" tolineno="88" lineno="88" name="var"/>
          <AssName fromlineno="88" tolineno="88" lineno="88" name="d"/>
          <AssName fromlineno="88" tolineno="88" lineno="88" name="exp"/>
          <Const fromlineno="88" tolineno="88" lineno="88" type="int">0</Const>
        </Arguments>
        <Return fromlineno="97" tolineno="97" lineno="97">
          <CallFunc fromlineno="97" tolineno="97" lineno="97" func="Getattr(getVar)">
            <Getattr fromlineno="97" tolineno="97" lineno="97" attrname="getVar" expr="d">
              <Name fromlineno="97" tolineno="97" lineno="97" name="d"/>
            </Getattr>
            <Name fromlineno="97" tolineno="97" lineno="97" name="var"/>
            <Name fromlineno="97" tolineno="97" lineno="97" name="exp"/>
          </CallFunc>
        </Return>
      </Function>
      <Function fromlineno="100" tolineno="110" lineno="100">
        <Arguments fromlineno="100" tolineno="100" lineno="None" format_args="key, newkey, d">
          <AssName fromlineno="100" tolineno="100" lineno="100" name="key"/>
          <AssName fromlineno="100" tolineno="100" lineno="100" name="newkey"/>
          <AssName fromlineno="100" tolineno="100" lineno="100" name="d"/>
        </Arguments>
        <Discard fromlineno="110" tolineno="110" lineno="110">
          <CallFunc fromlineno="110" tolineno="110" lineno="110" func="Getattr(renameVar)">
            <Getattr fromlineno="110" tolineno="110" lineno="110" attrname="renameVar" expr="d">
              <Name fromlineno="110" tolineno="110" lineno="110" name="d"/>
            </Getattr>
            <Name fromlineno="110" tolineno="110" lineno="110" name="key"/>
            <Name fromlineno="110" tolineno="110" lineno="110" name="newkey"/>
          </CallFunc>
        </Discard>
      </Function>
      <Function fromlineno="112" tolineno="124" lineno="112">
        <Arguments fromlineno="112" tolineno="112" lineno="None" format_args="var, d">
          <AssName fromlineno="112" tolineno="112" lineno="112" name="var"/>
          <AssName fromlineno="112" tolineno="112" lineno="112" name="d"/>
        </Arguments>
        <Discard fromlineno="124" tolineno="124" lineno="124">
          <CallFunc fromlineno="124" tolineno="124" lineno="124" func="Getattr(delVar)">
            <Getattr fromlineno="124" tolineno="124" lineno="124" attrname="delVar" expr="d">
              <Name fromlineno="124" tolineno="124" lineno="124" name="d"/>
            </Getattr>
            <Name fromlineno="124" tolineno="124" lineno="124" name="var"/>
          </CallFunc>
        </Discard>
      </Function>
      <Function fromlineno="126" tolineno="135" lineno="126">
        <Arguments fromlineno="126" tolineno="126" lineno="None" format_args="var, flag, flagvalue, d">
          <AssName fromlineno="126" tolineno="126" lineno="126" name="var"/>
          <AssName fromlineno="126" tolineno="126" lineno="126" name="flag"/>
          <AssName fromlineno="126" tolineno="126" lineno="126" name="flagvalue"/>
          <AssName fromlineno="126" tolineno="126" lineno="126" name="d"/>
        </Arguments>
        <Discard fromlineno="135" tolineno="135" lineno="135">
          <CallFunc fromlineno="135" tolineno="135" lineno="135" func="Getattr(setVarFlag)">
            <Getattr fromlineno="135" tolineno="135" lineno="135" attrname="setVarFlag" expr="d">
              <Name fromlineno="135" tolineno="135" lineno="135" name="d"/>
            </Getattr>
            <Name fromlineno="135" tolineno="135" lineno="135" name="var"/>
            <Name fromlineno="135" tolineno="135" lineno="135" name="flag"/>
            <Name fromlineno="135" tolineno="135" lineno="135" name="flagvalue"/>
          </CallFunc>
        </Discard>
      </Function>
      <Function fromlineno="137" tolineno="146" lineno="137">
        <Arguments fromlineno="137" tolineno="137" lineno="None" format_args="var, flag, d">
          <AssName fromlineno="137" tolineno="137" lineno="137" name="var"/>
          <AssName fromlineno="137" tolineno="137" lineno="137" name="flag"/>
          <AssName fromlineno="137" tolineno="137" lineno="137" name="d"/>
        </Arguments>
        <Return fromlineno="146" tolineno="146" lineno="146">
          <CallFunc fromlineno="146" tolineno="146" lineno="146" func="Getattr(getVarFlag)">
            <Getattr fromlineno="146" tolineno="146" lineno="146" attrname="getVarFlag" expr="d">
              <Name fromlineno="146" tolineno="146" lineno="146" name="d"/>
            </Getattr>
            <Name fromlineno="146" tolineno="146" lineno="146" name="var"/>
            <Name fromlineno="146" tolineno="146" lineno="146" name="flag"/>
          </CallFunc>
        </Return>
      </Function>
      <Function fromlineno="148" tolineno="161" lineno="148">
        <Arguments fromlineno="148" tolineno="148" lineno="None" format_args="var, flag, d">
          <AssName fromlineno="148" tolineno="148" lineno="148" name="var"/>
          <AssName fromlineno="148" tolineno="148" lineno="148" name="flag"/>
          <AssName fromlineno="148" tolineno="148" lineno="148" name="d"/>
        </Arguments>
        <Discard fromlineno="161" tolineno="161" lineno="161">
          <CallFunc fromlineno="161" tolineno="161" lineno="161" func="Getattr(delVarFlag)">
            <Getattr fromlineno="161" tolineno="161" lineno="161" attrname="delVarFlag" expr="d">
              <Name fromlineno="161" tolineno="161" lineno="161" name="d"/>
            </Getattr>
            <Name fromlineno="161" tolineno="161" lineno="161" name="var"/>
            <Name fromlineno="161" tolineno="161" lineno="161" name="flag"/>
          </CallFunc>
        </Discard>
      </Function>
      <Function fromlineno="163" tolineno="179" lineno="163">
        <Arguments fromlineno="163" tolineno="163" lineno="None" format_args="var, flags, d">
          <AssName fromlineno="163" tolineno="163" lineno="163" name="var"/>
          <AssName fromlineno="163" tolineno="163" lineno="163" name="flags"/>
          <AssName fromlineno="163" tolineno="163" lineno="163" name="d"/>
        </Arguments>
        <Discard fromlineno="179" tolineno="179" lineno="179">
          <CallFunc fromlineno="179" tolineno="179" lineno="179" func="Getattr(setVarFlags)">
            <Getattr fromlineno="179" tolineno="179" lineno="179" attrname="setVarFlags" expr="d">
              <Name fromlineno="179" tolineno="179" lineno="179" name="d"/>
            </Getattr>
            <Name fromlineno="179" tolineno="179" lineno="179" name="var"/>
            <Name fromlineno="179" tolineno="179" lineno="179" name="flags"/>
          </CallFunc>
        </Discard>
      </Function>
      <Function fromlineno="181" tolineno="190" lineno="181">
        <Arguments fromlineno="181" tolineno="181" lineno="None" format_args="var, d">
          <AssName fromlineno="181" tolineno="181" lineno="181" name="var"/>
          <AssName fromlineno="181" tolineno="181" lineno="181" name="d"/>
        </Arguments>
        <Return fromlineno="190" tolineno="190" lineno="190">
          <CallFunc fromlineno="190" tolineno="190" lineno="190" func="Getattr(getVarFlags)">
            <Getattr fromlineno="190" tolineno="190" lineno="190" attrname="getVarFlags" expr="d">
              <Name fromlineno="190" tolineno="190" lineno="190" name="d"/>
            </Getattr>
            <Name fromlineno="190" tolineno="190" lineno="190" name="var"/>
          </CallFunc>
        </Return>
      </Function>
      <Function fromlineno="192" tolineno="205" lineno="192">
        <Arguments fromlineno="192" tolineno="192" lineno="None" format_args="var, d">
          <AssName fromlineno="192" tolineno="192" lineno="192" name="var"/>
          <AssName fromlineno="192" tolineno="192" lineno="192" name="d"/>
        </Arguments>
        <Discard fromlineno="205" tolineno="205" lineno="205">
          <CallFunc fromlineno="205" tolineno="205" lineno="205" func="Getattr(delVarFlags)">
            <Getattr fromlineno="205" tolineno="205" lineno="205" attrname="delVarFlags" expr="d">
              <Name fromlineno="205" tolineno="205" lineno="205" name="d"/>
            </Getattr>
            <Name fromlineno="205" tolineno="205" lineno="205" name="var"/>
          </CallFunc>
        </Discard>
      </Function>
      <Function fromlineno="207" tolineno="218" lineno="207">
        <Arguments fromlineno="207" tolineno="207" lineno="None" format_args="d">
          <AssName fromlineno="207" tolineno="207" lineno="207" name="d"/>
        </Arguments>
        <Return fromlineno="218" tolineno="218" lineno="218">
          <CallFunc fromlineno="218" tolineno="218" lineno="218" func="Getattr(keys)">
            <Getattr fromlineno="218" tolineno="218" lineno="218" attrname="keys" expr="d">
              <Name fromlineno="218" tolineno="218" lineno="218" name="d"/>
            </Getattr>
          </CallFunc>
        </Return>
      </Function>
      <Function fromlineno="220" tolineno="222" lineno="220">
        <Arguments fromlineno="220" tolineno="220" lineno="None" format_args="d">
          <AssName fromlineno="220" tolineno="220" lineno="220" name="d"/>
        </Arguments>
        <Return fromlineno="222" tolineno="222" lineno="222">
          <Name fromlineno="222" tolineno="222" lineno="222" name="d"/>
        </Return>
      </Function>
      <Function fromlineno="224" tolineno="226" lineno="224">
        <Arguments fromlineno="224" tolineno="224" lineno="None" format_args="newData, d">
          <AssName fromlineno="224" tolineno="224" lineno="224" name="newData"/>
          <AssName fromlineno="224" tolineno="224" lineno="224" name="d"/>
        </Arguments>
        <Assign fromlineno="226" tolineno="226" lineno="226" targets="[&lt;AssName(d) l.226 [bb.data] at Ox920712c&gt;]" value="newData">
          <AssName fromlineno="226" tolineno="226" lineno="226" name="d"/>
          <Name fromlineno="226" tolineno="226" lineno="226" name="newData"/>
        </Assign>
      </Function>
      <Function fromlineno="232" tolineno="240" lineno="232">
        <Arguments fromlineno="232" tolineno="232" lineno="None" format_args="d, override">
          <AssName fromlineno="232" tolineno="232" lineno="232" name="d"/>
          <AssName fromlineno="232" tolineno="232" lineno="232" name="override"/>
        </Arguments>
        <Return fromlineno="240" tolineno="240" lineno="240">
          <List fromlineno="240" tolineno="240" lineno="240"/>
        </Return>
      </Function>
      <Function fromlineno="242" tolineno="247" lineno="242">
        <Arguments fromlineno="242" tolineno="242" lineno="None" format_args="d">
          <AssName fromlineno="242" tolineno="242" lineno="242" name="d"/>
        </Arguments>
        <Return fromlineno="247" tolineno="247" lineno="247">
          <List fromlineno="247" tolineno="247" lineno="247"/>
        </Return>
      </Function>
      <Assign fromlineno="249" tolineno="249" lineno="249" targets="[&lt;AssName(__expand_var_regexp__) l.249 [bb.data] at Ox920746c&gt;]" value="re.compile('\\${[^{}]+}')">
        <AssName fromlineno="249" tolineno="249" lineno="249" name="__expand_var_regexp__"/>
        <CallFunc fromlineno="249" tolineno="249" lineno="249" func="Getattr(compile)">
          <Getattr fromlineno="249" tolineno="249" lineno="249" attrname="compile" expr="re">
            <Name fromlineno="249" tolineno="249" lineno="249" name="re"/>
          </Getattr>
          <Const fromlineno="249" tolineno="249" lineno="249" type="str">'\\${[^{}]+}'</Const>
        </CallFunc>
      </Assign>
      <Assign fromlineno="250" tolineno="250" lineno="250" targets="[&lt;AssName(__expand_python_regexp__) l.250 [bb.data] at Ox92075ec&gt;]" value="re.compile('\\${@.+?}')">
        <AssName fromlineno="250" tolineno="250" lineno="250" name="__expand_python_regexp__"/>
        <CallFunc fromlineno="250" tolineno="250" lineno="250" func="Getattr(compile)">
          <Getattr fromlineno="250" tolineno="250" lineno="250" attrname="compile" expr="re">
            <Name fromlineno="250" tolineno="250" lineno="250" name="re"/>
          </Getattr>
          <Const fromlineno="250" tolineno="250" lineno="250" type="str">'\\${@.+?}'</Const>
        </CallFunc>
      </Assign>
      <Function fromlineno="252" tolineno="279" lineno="252">
        <Arguments fromlineno="252" tolineno="252" lineno="None" format_args="s, d, varname=None">
          <AssName fromlineno="252" tolineno="252" lineno="252" name="s"/>
          <AssName fromlineno="252" tolineno="252" lineno="252" name="d"/>
          <AssName fromlineno="252" tolineno="252" lineno="252" name="varname"/>
          <Const fromlineno="252" tolineno="252" lineno="252" type="NoneType">None</Const>
        </Arguments>
        <Return fromlineno="279" tolineno="279" lineno="279">
          <CallFunc fromlineno="279" tolineno="279" lineno="279" func="Getattr(expand)">
            <Getattr fromlineno="279" tolineno="279" lineno="279" attrname="expand" expr="d">
              <Name fromlineno="279" tolineno="279" lineno="279" name="d"/>
            </Getattr>
            <Name fromlineno="279" tolineno="279" lineno="279" name="s"/>
            <Name fromlineno="279" tolineno="279" lineno="279" name="varname"/>
          </CallFunc>
        </Return>
      </Function>
      <Function fromlineno="281" tolineno="300" lineno="281">
        <Arguments fromlineno="281" tolineno="281" lineno="None" format_args="alterdata, readdata=None">
          <AssName fromlineno="281" tolineno="281" lineno="281" name="alterdata"/>
          <AssName fromlineno="281" tolineno="281" lineno="281" name="readdata"/>
          <Const fromlineno="281" tolineno="281" lineno="281" type="NoneType">None</Const>
        </Arguments>
        <If fromlineno="282" tolineno="283" lineno="282">
          <Compare fromlineno="282" tolineno="282" lineno="282" op="('==', &lt;Const(NoneType) l.282 [bb.data] at Ox9207c8c&gt;)">
            <Name fromlineno="282" tolineno="282" lineno="282" name="readdata"/>
            <Const fromlineno="282" tolineno="282" lineno="282" type="NoneType">None</Const>
          </Compare>
          <Assign fromlineno="283" tolineno="283" lineno="283" targets="[&lt;AssName(readdata) l.283 [bb.data] at Ox9207d2c&gt;]" value="alterdata">
            <AssName fromlineno="283" tolineno="283" lineno="283" name="readdata"/>
            <Name fromlineno="283" tolineno="283" lineno="283" name="alterdata"/>
          </Assign>
        </If>
        <Assign fromlineno="285" tolineno="285" lineno="285" targets="[&lt;AssName(todolist) l.285 [bb.data] at Ox9207eac&gt;]" value="{}">
          <AssName fromlineno="285" tolineno="285" lineno="285" name="todolist"/>
          <Dict fromlineno="285" tolineno="285" lineno="285"/>
        </Assign>
        <For fromlineno="286" tolineno="293" lineno="286">
          <AssName fromlineno="286" tolineno="286" lineno="286" name="key"/>
          <CallFunc fromlineno="286" tolineno="286" lineno="286" func="Name(keys)">
            <Name fromlineno="286" tolineno="286" lineno="286" name="keys"/>
            <Name fromlineno="286" tolineno="286" lineno="286" name="alterdata"/>
          </CallFunc>
          <If fromlineno="287" tolineno="288" lineno="287">
            <UnaryOp fromlineno="287" tolineno="287" lineno="287">
              <Compare fromlineno="287" tolineno="287" lineno="287" op="('in', &lt;Name(key) l.287 [bb.data] at Ox922610c&gt;)">
                <Const fromlineno="287" tolineno="287" lineno="287" type="str">'${'</Const>
                <Name fromlineno="287" tolineno="287" lineno="287" name="key"/>
              </Compare>
            </UnaryOp>
            <Continue fromlineno="288" tolineno="288" lineno="288"/>
          </If>
          <Assign fromlineno="290" tolineno="290" lineno="290" targets="[&lt;AssName(ekey) l.290 [bb.data] at Ox922680c&gt;]" value="expand(key, readdata)">
            <AssName fromlineno="290" tolineno="290" lineno="290" name="ekey"/>
            <CallFunc fromlineno="290" tolineno="290" lineno="290" func="Name(expand)">
              <Name fromlineno="290" tolineno="290" lineno="290" name="expand"/>
              <Name fromlineno="290" tolineno="290" lineno="290" name="key"/>
              <Name fromlineno="290" tolineno="290" lineno="290" name="readdata"/>
            </CallFunc>
          </Assign>
          <If fromlineno="291" tolineno="292" lineno="291">
            <Compare fromlineno="291" tolineno="291" lineno="291" op="('==', &lt;Name(ekey) l.291 [bb.data] at Ox922676c&gt;)">
              <Name fromlineno="291" tolineno="291" lineno="291" name="key"/>
              <Name fromlineno="291" tolineno="291" lineno="291" name="ekey"/>
            </Compare>
            <Continue fromlineno="292" tolineno="292" lineno="292"/>
          </If>
          <Assign fromlineno="293" tolineno="293" lineno="293" targets="[&lt;Subscript() l.293 [bb.data] at Ox922678c&gt;]" value="ekey">
            <Subscript fromlineno="293" tolineno="293" lineno="293">
              <Name fromlineno="293" tolineno="293" lineno="293" name="todolist"/>
              <Index fromlineno="293" tolineno="293" lineno="None">
                <Name fromlineno="293" tolineno="293" lineno="293" name="key"/>
              </Index>
            </Subscript>
            <Name fromlineno="293" tolineno="293" lineno="293" name="ekey"/>
          </Assign>
        </For>
        <For fromlineno="298" tolineno="300" lineno="298">
          <AssName fromlineno="298" tolineno="298" lineno="298" name="key"/>
          <Name fromlineno="298" tolineno="298" lineno="298" name="todolist"/>
          <Assign fromlineno="299" tolineno="299" lineno="299" targets="[&lt;AssName(ekey) l.299 [bb.data] at Ox9226d4c&gt;]" value="todolist[key]">
            <AssName fromlineno="299" tolineno="299" lineno="299" name="ekey"/>
            <Subscript fromlineno="299" tolineno="299" lineno="299">
              <Name fromlineno="299" tolineno="299" lineno="299" name="todolist"/>
              <Index fromlineno="299" tolineno="299" lineno="None">
                <Name fromlineno="299" tolineno="299" lineno="299" name="key"/>
              </Index>
            </Subscript>
          </Assign>
          <Discard fromlineno="300" tolineno="300" lineno="300">
            <CallFunc fromlineno="300" tolineno="300" lineno="300" func="Name(renameVar)">
              <Name fromlineno="300" tolineno="300" lineno="300" name="renameVar"/>
              <Name fromlineno="300" tolineno="300" lineno="300" name="key"/>
              <Name fromlineno="300" tolineno="300" lineno="300" name="ekey"/>
              <Name fromlineno="300" tolineno="300" lineno="300" name="alterdata"/>
            </CallFunc>
          </Discard>
        </For>
      </Function>
      <Function fromlineno="302" tolineno="325" lineno="302">
        <Arguments fromlineno="302" tolineno="302" lineno="None" format_args="alterdata, readdata=None">
          <AssName fromlineno="302" tolineno="302" lineno="302" name="alterdata"/>
          <AssName fromlineno="302" tolineno="302" lineno="302" name="readdata"/>
          <Const fromlineno="302" tolineno="302" lineno="302" type="NoneType">None</Const>
        </Arguments>
        <If fromlineno="315" tolineno="316" lineno="315">
          <Compare fromlineno="315" tolineno="315" lineno="315" op="('==', &lt;Const(NoneType) l.315 [bb.data] at Ox9226e0c&gt;)">
            <Name fromlineno="315" tolineno="315" lineno="315" name="readdata"/>
            <Const fromlineno="315" tolineno="315" lineno="315" type="NoneType">None</Const>
          </Compare>
          <Assign fromlineno="316" tolineno="316" lineno="316" targets="[&lt;AssName(readdata) l.316 [bb.data] at Ox922696c&gt;]" value="alterdata">
            <AssName fromlineno="316" tolineno="316" lineno="316" name="readdata"/>
            <Name fromlineno="316" tolineno="316" lineno="316" name="alterdata"/>
          </Assign>
        </If>
        <For fromlineno="318" tolineno="325" lineno="318">
          <AssName fromlineno="318" tolineno="318" lineno="318" name="key"/>
          <CallFunc fromlineno="318" tolineno="318" lineno="318" func="Name(keys)">
            <Name fromlineno="318" tolineno="318" lineno="318" name="keys"/>
            <Name fromlineno="318" tolineno="318" lineno="318" name="alterdata"/>
          </CallFunc>
          <Assign fromlineno="319" tolineno="319" lineno="319" targets="[&lt;AssName(val) l.319 [bb.data] at Ox9226c0c&gt;]" value="getVar(key, alterdata)">
            <AssName fromlineno="319" tolineno="319" lineno="319" name="val"/>
            <CallFunc fromlineno="319" tolineno="319" lineno="319" func="Name(getVar)">
              <Name fromlineno="319" tolineno="319" lineno="319" name="getVar"/>
              <Name fromlineno="319" tolineno="319" lineno="319" name="key"/>
              <Name fromlineno="319" tolineno="319" lineno="319" name="alterdata"/>
            </CallFunc>
          </Assign>
          <If fromlineno="320" tolineno="321" lineno="320">
            <Compare fromlineno="320" tolineno="320" lineno="320" op="('is not', &lt;Getattr(StringType) l.320 [bb.data] at Ox92220cc&gt;)">
              <CallFunc fromlineno="320" tolineno="320" lineno="320" func="Name(type)">
                <Name fromlineno="320" tolineno="320" lineno="320" name="type"/>
                <Name fromlineno="320" tolineno="320" lineno="320" name="val"/>
              </CallFunc>
              <Getattr fromlineno="320" tolineno="320" lineno="320" attrname="StringType" expr="types">
                <Name fromlineno="320" tolineno="320" lineno="320" name="types"/>
              </Getattr>
            </Compare>
            <Continue fromlineno="321" tolineno="321" lineno="321"/>
          </If>
          <Assign fromlineno="322" tolineno="322" lineno="322" targets="[&lt;AssName(expanded) l.322 [bb.data] at Ox922274c&gt;]" value="expand(val, readdata)">
            <AssName fromlineno="322" tolineno="322" lineno="322" name="expanded"/>
            <CallFunc fromlineno="322" tolineno="322" lineno="322" func="Name(expand)">
              <Name fromlineno="322" tolineno="322" lineno="322" name="expand"/>
              <Name fromlineno="322" tolineno="322" lineno="322" name="val"/>
              <Name fromlineno="322" tolineno="322" lineno="322" name="readdata"/>
            </CallFunc>
          </Assign>
          <If fromlineno="324" tolineno="325" lineno="324">
            <Compare fromlineno="324" tolineno="324" lineno="324" op="('!=', &lt;Name(expanded) l.324 [bb.data] at Ox92222ec&gt;)">
              <Name fromlineno="324" tolineno="324" lineno="324" name="val"/>
              <Name fromlineno="324" tolineno="324" lineno="324" name="expanded"/>
            </Compare>
            <Discard fromlineno="325" tolineno="325" lineno="325">
              <CallFunc fromlineno="325" tolineno="325" lineno="325" func="Name(setVar)">
                <Name fromlineno="325" tolineno="325" lineno="325" name="setVar"/>
                <Name fromlineno="325" tolineno="325" lineno="325" name="key"/>
                <Name fromlineno="325" tolineno="325" lineno="325" name="expanded"/>
                <Name fromlineno="325" tolineno="325" lineno="325" name="alterdata"/>
              </CallFunc>
            </Discard>
          </If>
        </For>
      </Function>
      <Function fromlineno="327" tolineno="334" lineno="327">
        <Arguments fromlineno="327" tolineno="327" lineno="None" format_args="d">
          <AssName fromlineno="327" tolineno="327" lineno="327" name="d"/>
        </Arguments>
        <For fromlineno="329" tolineno="334" lineno="329">
          <AssName fromlineno="329" tolineno="329" lineno="329" name="s"/>
          <CallFunc fromlineno="329" tolineno="329" lineno="329" func="Getattr(keys)">
            <Getattr fromlineno="329" tolineno="329" lineno="329" attrname="keys" expr="os.environ">
              <Getattr fromlineno="329" tolineno="329" lineno="329" attrname="environ" expr="os">
                <Name fromlineno="329" tolineno="329" lineno="329" name="os"/>
              </Getattr>
            </Getattr>
          </CallFunc>
          <TryExcept fromlineno="330" tolineno="334" lineno="330">
            <Discard fromlineno="331" tolineno="331" lineno="331">
              <CallFunc fromlineno="331" tolineno="331" lineno="331" func="Name(setVar)">
                <Name fromlineno="331" tolineno="331" lineno="331" name="setVar"/>
                <Name fromlineno="331" tolineno="331" lineno="331" name="s"/>
                <Subscript fromlineno="331" tolineno="331" lineno="331">
                  <Getattr fromlineno="331" tolineno="331" lineno="331" attrname="environ" expr="os">
                    <Name fromlineno="331" tolineno="331" lineno="331" name="os"/>
                  </Getattr>
                  <Index fromlineno="331" tolineno="331" lineno="None">
                    <Name fromlineno="331" tolineno="331" lineno="331" name="s"/>
                  </Index>
                </Subscript>
                <Name fromlineno="331" tolineno="331" lineno="331" name="d"/>
              </CallFunc>
            </Discard>
            <Discard fromlineno="332" tolineno="332" lineno="332">
              <CallFunc fromlineno="332" tolineno="332" lineno="332" func="Name(setVarFlag)">
                <Name fromlineno="332" tolineno="332" lineno="332" name="setVarFlag"/>
                <Name fromlineno="332" tolineno="332" lineno="332" name="s"/>
                <Const fromlineno="332" tolineno="332" lineno="332" type="str">'export'</Const>
                <Const fromlineno="332" tolineno="332" lineno="332" type="bool">True</Const>
                <Name fromlineno="332" tolineno="332" lineno="332" name="d"/>
              </CallFunc>
            </Discard>
            <ExceptHandler fromlineno="333" tolineno="334" lineno="333">
              <Name fromlineno="333" tolineno="333" lineno="333" name="TypeError"/>
              <Pass fromlineno="334" tolineno="334" lineno="334"/>
            </ExceptHandler>
          </TryExcept>
        </For>
      </Function>
      <Function fromlineno="336" tolineno="391" lineno="336">
        <Arguments fromlineno="336" tolineno="336" lineno="None" format_args="var, o=sys.__stdout__, d=init(), all=False">
          <AssName fromlineno="336" tolineno="336" lineno="336" name="var"/>
          <AssName fromlineno="336" tolineno="336" lineno="336" name="o"/>
          <AssName fromlineno="336" tolineno="336" lineno="336" name="d"/>
          <AssName fromlineno="336" tolineno="336" lineno="336" name="all"/>
          <Getattr fromlineno="336" tolineno="336" lineno="336" attrname="__stdout__" expr="sys">
            <Name fromlineno="336" tolineno="336" lineno="336" name="sys"/>
          </Getattr>
          <CallFunc fromlineno="336" tolineno="336" lineno="336" func="Name(init)">
            <Name fromlineno="336" tolineno="336" lineno="336" name="init"/>
          </CallFunc>
          <Const fromlineno="336" tolineno="336" lineno="336" type="bool">False</Const>
        </Arguments>
        <If fromlineno="338" tolineno="339" lineno="338">
          <CallFunc fromlineno="338" tolineno="338" lineno="338" func="Name(getVarFlag)">
            <Name fromlineno="338" tolineno="338" lineno="338" name="getVarFlag"/>
            <Name fromlineno="338" tolineno="338" lineno="338" name="var"/>
            <Const fromlineno="338" tolineno="338" lineno="338" type="str">'python'</Const>
            <Name fromlineno="338" tolineno="338" lineno="338" name="d"/>
          </CallFunc>
          <Return fromlineno="339" tolineno="339" lineno="339">
            <Const fromlineno="339" tolineno="339" lineno="339" type="int">0</Const>
          </Return>
        </If>
        <Assign fromlineno="341" tolineno="341" lineno="341" targets="[&lt;AssName(export) l.341 [bb.data] at Ox9222e2c&gt;]" value="getVarFlag(var, 'export', d)">
          <AssName fromlineno="341" tolineno="341" lineno="341" name="export"/>
          <CallFunc fromlineno="341" tolineno="341" lineno="341" func="Name(getVarFlag)">
            <Name fromlineno="341" tolineno="341" lineno="341" name="getVarFlag"/>
            <Name fromlineno="341" tolineno="341" lineno="341" name="var"/>
            <Const fromlineno="341" tolineno="341" lineno="341" type="str">'export'</Const>
            <Name fromlineno="341" tolineno="341" lineno="341" name="d"/>
          </CallFunc>
        </Assign>
        <Assign fromlineno="342" tolineno="342" lineno="342" targets="[&lt;AssName(unexport) l.342 [bb.data] at Ox9222f6c&gt;]" value="getVarFlag(var, 'unexport', d)">
          <AssName fromlineno="342" tolineno="342" lineno="342" name="unexport"/>
          <CallFunc fromlineno="342" tolineno="342" lineno="342" func="Name(getVarFlag)">
            <Name fromlineno="342" tolineno="342" lineno="342" name="getVarFlag"/>
            <Name fromlineno="342" tolineno="342" lineno="342" name="var"/>
            <Const fromlineno="342" tolineno="342" lineno="342" type="str">'unexport'</Const>
            <Name fromlineno="342" tolineno="342" lineno="342" name="d"/>
          </CallFunc>
        </Assign>
        <Assign fromlineno="343" tolineno="343" lineno="343" targets="[&lt;AssName(func) l.343 [bb.data] at Ox961818c&gt;]" value="getVarFlag(var, 'func', d)">
          <AssName fromlineno="343" tolineno="343" lineno="343" name="func"/>
          <CallFunc fromlineno="343" tolineno="343" lineno="343" func="Name(getVarFlag)">
            <Name fromlineno="343" tolineno="343" lineno="343" name="getVarFlag"/>
            <Name fromlineno="343" tolineno="343" lineno="343" name="var"/>
            <Const fromlineno="343" tolineno="343" lineno="343" type="str">'func'</Const>
            <Name fromlineno="343" tolineno="343" lineno="343" name="d"/>
          </CallFunc>
        </Assign>
        <If fromlineno="344" tolineno="345" lineno="344">
          <BoolOp fromlineno="344" tolineno="344" lineno="344" op="and" values="not all,not export,not unexport,not func,">
            <UnaryOp fromlineno="344" tolineno="344" lineno="344">
              <Name fromlineno="344" tolineno="344" lineno="344" name="all"/>
            </UnaryOp>
            <UnaryOp fromlineno="344" tolineno="344" lineno="344">
              <Name fromlineno="344" tolineno="344" lineno="344" name="export"/>
            </UnaryOp>
            <UnaryOp fromlineno="344" tolineno="344" lineno="344">
              <Name fromlineno="344" tolineno="344" lineno="344" name="unexport"/>
            </UnaryOp>
            <UnaryOp fromlineno="344" tolineno="344" lineno="344">
              <Name fromlineno="344" tolineno="344" lineno="344" name="func"/>
            </UnaryOp>
          </BoolOp>
          <Return fromlineno="345" tolineno="345" lineno="345">
            <Const fromlineno="345" tolineno="345" lineno="345" type="int">0</Const>
          </Return>
        </If>
        <TryExcept fromlineno="347" tolineno="358" lineno="347">
          <If fromlineno="348" tolineno="349" lineno="348">
            <Name fromlineno="348" tolineno="348" lineno="348" name="all"/>
            <Assign fromlineno="349" tolineno="349" lineno="349" targets="[&lt;AssName(oval) l.349 [bb.data] at Ox96184ec&gt;]" value="getVar(var, d, 0)">
              <AssName fromlineno="349" tolineno="349" lineno="349" name="oval"/>
              <CallFunc fromlineno="349" tolineno="349" lineno="349" func="Name(getVar)">
                <Name fromlineno="349" tolineno="349" lineno="349" name="getVar"/>
                <Name fromlineno="349" tolineno="349" lineno="349" name="var"/>
                <Name fromlineno="349" tolineno="349" lineno="349" name="d"/>
                <Const fromlineno="349" tolineno="349" lineno="349" type="int">0</Const>
              </CallFunc>
            </Assign>
          </If>
          <Assign fromlineno="350" tolineno="350" lineno="350" targets="[&lt;AssName(val) l.350 [bb.data] at Ox961872c&gt;]" value="getVar(var, d, 1)">
            <AssName fromlineno="350" tolineno="350" lineno="350" name="val"/>
            <CallFunc fromlineno="350" tolineno="350" lineno="350" func="Name(getVar)">
              <Name fromlineno="350" tolineno="350" lineno="350" name="getVar"/>
              <Name fromlineno="350" tolineno="350" lineno="350" name="var"/>
              <Name fromlineno="350" tolineno="350" lineno="350" name="d"/>
              <Const fromlineno="350" tolineno="350" lineno="350" type="int">1</Const>
            </CallFunc>
          </Assign>
          <ExceptHandler fromlineno="351" tolineno="352" lineno="351">
            <Name fromlineno="351" tolineno="351" lineno="351" name="KeyboardInterrupt"/>
            <Raise fromlineno="352" tolineno="352" lineno="352"/>
          </ExceptHandler>
          <ExceptHandler fromlineno="353" tolineno="358" lineno="353">
            <Assign fromlineno="354" tolineno="354" lineno="354" targets="[&lt;AssName(excname) l.354 [bb.data] at Ox961884c&gt;]" value="str(sys.exc_info()[0])">
              <AssName fromlineno="354" tolineno="354" lineno="354" name="excname"/>
              <CallFunc fromlineno="354" tolineno="354" lineno="354" func="Name(str)">
                <Name fromlineno="354" tolineno="354" lineno="354" name="str"/>
                <Subscript fromlineno="354" tolineno="354" lineno="354">
                  <CallFunc fromlineno="354" tolineno="354" lineno="354" func="Getattr(exc_info)">
                    <Getattr fromlineno="354" tolineno="354" lineno="354" attrname="exc_info" expr="sys">
                      <Name fromlineno="354" tolineno="354" lineno="354" name="sys"/>
                    </Getattr>
                  </CallFunc>
                  <Index fromlineno="354" tolineno="354" lineno="None">
                    <Const fromlineno="354" tolineno="354" lineno="354" type="int">0</Const>
                  </Index>
                </Subscript>
              </CallFunc>
            </Assign>
            <If fromlineno="355" tolineno="356" lineno="355">
              <Compare fromlineno="355" tolineno="355" lineno="355" op="('==', &lt;Const(str) l.355 [bb.data] at Ox9618acc&gt;)">
                <Name fromlineno="355" tolineno="355" lineno="355" name="excname"/>
                <Const fromlineno="355" tolineno="355" lineno="355" type="str">'bb.build.FuncFailed'</Const>
              </Compare>
              <Raise fromlineno="356" tolineno="356" lineno="356"/>
            </If>
            <Discard fromlineno="357" tolineno="357" lineno="357">
              <CallFunc fromlineno="357" tolineno="357" lineno="357" func="Getattr(write)">
                <Getattr fromlineno="357" tolineno="357" lineno="357" attrname="write" expr="o">
                  <Name fromlineno="357" tolineno="357" lineno="357" name="o"/>
                </Getattr>
                <BinOp fromlineno="357" tolineno="357" lineno="357" op="%" left="'# expansion of %s threw %s\n'" right="(var, excname)">
                  <Const fromlineno="357" tolineno="357" lineno="357" type="str">'# expansion of %s threw %s\n'</Const>
                  <Tuple fromlineno="357" tolineno="357" lineno="357">
                    <Name fromlineno="357" tolineno="357" lineno="357" name="var"/>
                    <Name fromlineno="357" tolineno="357" lineno="357" name="excname"/>
                  </Tuple>
                </BinOp>
              </CallFunc>
            </Discard>
            <Return fromlineno="358" tolineno="358" lineno="358">
              <Const fromlineno="358" tolineno="358" lineno="358" type="int">0</Const>
            </Return>
          </ExceptHandler>
        </TryExcept>
        <If fromlineno="360" tolineno="361" lineno="360">
          <Name fromlineno="360" tolineno="360" lineno="360" name="all"/>
          <Discard fromlineno="361" tolineno="361" lineno="361">
            <CallFunc fromlineno="361" tolineno="361" lineno="361" func="Getattr(write)">
              <Getattr fromlineno="361" tolineno="361" lineno="361" attrname="write" expr="o">
                <Name fromlineno="361" tolineno="361" lineno="361" name="o"/>
              </Getattr>
              <BinOp fromlineno="361" tolineno="361" lineno="361" op="%" left="'# %s=%s\n'" right="(var, oval)">
                <Const fromlineno="361" tolineno="361" lineno="361" type="str">'# %s=%s\n'</Const>
                <Tuple fromlineno="361" tolineno="361" lineno="361">
                  <Name fromlineno="361" tolineno="361" lineno="361" name="var"/>
                  <Name fromlineno="361" tolineno="361" lineno="361" name="oval"/>
                </Tuple>
              </BinOp>
            </CallFunc>
          </Discard>
        </If>
        <If fromlineno="363" tolineno="364" lineno="363">
          <Compare fromlineno="363" tolineno="363" lineno="363" op="('is not', &lt;Getattr(StringType) l.363 [bb.data] at Ox9618fac&gt;)">
            <CallFunc fromlineno="363" tolineno="363" lineno="363" func="Name(type)">
              <Name fromlineno="363" tolineno="363" lineno="363" name="type"/>
              <Name fromlineno="363" tolineno="363" lineno="363" name="val"/>
            </CallFunc>
            <Getattr fromlineno="363" tolineno="363" lineno="363" attrname="StringType" expr="types">
              <Name fromlineno="363" tolineno="363" lineno="363" name="types"/>
            </Getattr>
          </Compare>
          <Return fromlineno="364" tolineno="364" lineno="364">
            <Const fromlineno="364" tolineno="364" lineno="364" type="int">0</Const>
          </Return>
        </If>
        <If fromlineno="366" tolineno="367" lineno="366">
          <BoolOp fromlineno="366" tolineno="366" lineno="366" op="and" values="(var.find('-') != -1) or (var.find('.') != -1) or (var.find('{') != -1) or (var.find('}') != -1) or (var.find('+') != -1),not all,">
            <BoolOp fromlineno="366" tolineno="366" lineno="366" op="or" values="var.find('-') != -1,var.find('.') != -1,var.find('{') != -1,var.find('}') != -1,var.find('+') != -1,">
              <Compare fromlineno="366" tolineno="366" lineno="366" op="('!=', &lt;Const(int) l.366 [bb.data] at Ox961b26c&gt;)">
                <CallFunc fromlineno="366" tolineno="366" lineno="366" func="Getattr(find)">
                  <Getattr fromlineno="366" tolineno="366" lineno="366" attrname="find" expr="var">
                    <Name fromlineno="366" tolineno="366" lineno="366" name="var"/>
                  </Getattr>
                  <Const fromlineno="366" tolineno="366" lineno="366" type="str">'-'</Const>
                </CallFunc>
                <Const fromlineno="366" tolineno="366" lineno="366" type="int">-1</Const>
              </Compare>
              <Compare fromlineno="366" tolineno="366" lineno="366" op="('!=', &lt;Const(int) l.366 [bb.data] at Ox961b2ec&gt;)">
                <CallFunc fromlineno="366" tolineno="366" lineno="366" func="Getattr(find)">
                  <Getattr fromlineno="366" tolineno="366" lineno="366" attrname="find" expr="var">
                    <Name fromlineno="366" tolineno="366" lineno="366" name="var"/>
                  </Getattr>
                  <Const fromlineno="366" tolineno="366" lineno="366" type="str">'.'</Const>
                </CallFunc>
                <Const fromlineno="366" tolineno="366" lineno="366" type="int">-1</Const>
              </Compare>
              <Compare fromlineno="366" tolineno="366" lineno="366" op="('!=', &lt;Const(int) l.366 [bb.data] at Ox961b4ac&gt;)">
                <CallFunc fromlineno="366" tolineno="366" lineno="366" func="Getattr(find)">
                  <Getattr fromlineno="366" tolineno="366" lineno="366" attrname="find" expr="var">
                    <Name fromlineno="366" tolineno="366" lineno="366" name="var"/>
                  </Getattr>
                  <Const fromlineno="366" tolineno="366" lineno="366" type="str">'{'</Const>
                </CallFunc>
                <Const fromlineno="366" tolineno="366" lineno="366" type="int">-1</Const>
              </Compare>
              <Compare fromlineno="366" tolineno="366" lineno="366" op="('!=', &lt;Const(int) l.366 [bb.data] at Ox961b50c&gt;)">
                <CallFunc fromlineno="366" tolineno="366" lineno="366" func="Getattr(find)">
                  <Getattr fromlineno="366" tolineno="366" lineno="366" attrname="find" expr="var">
                    <Name fromlineno="366" tolineno="366" lineno="366" name="var"/>
                  </Getattr>
                  <Const fromlineno="366" tolineno="366" lineno="366" type="str">'}'</Const>
                </CallFunc>
                <Const fromlineno="366" tolineno="366" lineno="366" type="int">-1</Const>
              </Compare>
              <Compare fromlineno="366" tolineno="366" lineno="366" op="('!=', &lt;Const(int) l.366 [bb.data] at Ox961b6ec&gt;)">
                <CallFunc fromlineno="366" tolineno="366" lineno="366" func="Getattr(find)">
                  <Getattr fromlineno="366" tolineno="366" lineno="366" attrname="find" expr="var">
                    <Name fromlineno="366" tolineno="366" lineno="366" name="var"/>
                  </Getattr>
                  <Const fromlineno="366" tolineno="366" lineno="366" type="str">'+'</Const>
                </CallFunc>
                <Const fromlineno="366" tolineno="366" lineno="366" type="int">-1</Const>
              </Compare>
            </BoolOp>
            <UnaryOp fromlineno="366" tolineno="366" lineno="366">
              <Name fromlineno="366" tolineno="366" lineno="366" name="all"/>
            </UnaryOp>
          </BoolOp>
          <Return fromlineno="367" tolineno="367" lineno="367">
            <Const fromlineno="367" tolineno="367" lineno="367" type="int">0</Const>
          </Return>
        </If>
        <Assign fromlineno="369" tolineno="369" lineno="369" targets="[&lt;AssName(varExpanded) l.369 [bb.data] at Ox961b86c&gt;]" value="expand(var, d)">
          <AssName fromlineno="369" tolineno="369" lineno="369" name="varExpanded"/>
          <CallFunc fromlineno="369" tolineno="369" lineno="369" func="Name(expand)">
            <Name fromlineno="369" tolineno="369" lineno="369" name="expand"/>
            <Name fromlineno="369" tolineno="369" lineno="369" name="var"/>
            <Name fromlineno="369" tolineno="369" lineno="369" name="d"/>
          </CallFunc>
        </Assign>
        <If fromlineno="371" tolineno="373" lineno="371">
          <Name fromlineno="371" tolineno="371" lineno="371" name="unexport"/>
          <Discard fromlineno="372" tolineno="372" lineno="372">
            <CallFunc fromlineno="372" tolineno="372" lineno="372" func="Getattr(write)">
              <Getattr fromlineno="372" tolineno="372" lineno="372" attrname="write" expr="o">
                <Name fromlineno="372" tolineno="372" lineno="372" name="o"/>
              </Getattr>
              <BinOp fromlineno="372" tolineno="372" lineno="372" op="%" left="'unset %s\n'" right="varExpanded">
                <Const fromlineno="372" tolineno="372" lineno="372" type="str">'unset %s\n'</Const>
                <Name fromlineno="372" tolineno="372" lineno="372" name="varExpanded"/>
              </BinOp>
            </CallFunc>
          </Discard>
          <Return fromlineno="373" tolineno="373" lineno="373">
            <Const fromlineno="373" tolineno="373" lineno="373" type="int">1</Const>
          </Return>
        </If>
        <Discard fromlineno="375" tolineno="375" lineno="375">
          <CallFunc fromlineno="375" tolineno="375" lineno="375" func="Getattr(rstrip)">
            <Getattr fromlineno="375" tolineno="375" lineno="375" attrname="rstrip" expr="val">
              <Name fromlineno="375" tolineno="375" lineno="375" name="val"/>
            </Getattr>
          </CallFunc>
        </Discard>
        <If fromlineno="376" tolineno="377" lineno="376">
          <UnaryOp fromlineno="376" tolineno="376" lineno="376">
            <Name fromlineno="376" tolineno="376" lineno="376" name="val"/>
          </UnaryOp>
          <Return fromlineno="377" tolineno="377" lineno="377">
            <Const fromlineno="377" tolineno="377" lineno="377" type="int">0</Const>
          </Return>
        </If>
        <If fromlineno="379" tolineno="382" lineno="379">
          <Name fromlineno="379" tolineno="379" lineno="379" name="func"/>
          <Discard fromlineno="381" tolineno="381" lineno="381">
            <CallFunc fromlineno="381" tolineno="381" lineno="381" func="Getattr(write)">
              <Getattr fromlineno="381" tolineno="381" lineno="381" attrname="write" expr="o">
                <Name fromlineno="381" tolineno="381" lineno="381" name="o"/>
              </Getattr>
              <BinOp fromlineno="381" tolineno="381" lineno="381" op="%" left="'%s() {\n%s\n}\n'" right="(varExpanded, val)">
                <Const fromlineno="381" tolineno="381" lineno="381" type="str">'%s() {\n%s\n}\n'</Const>
                <Tuple fromlineno="381" tolineno="381" lineno="381">
                  <Name fromlineno="381" tolineno="381" lineno="381" name="varExpanded"/>
                  <Name fromlineno="381" tolineno="381" lineno="381" name="val"/>
                </Tuple>
              </BinOp>
            </CallFunc>
          </Discard>
          <Return fromlineno="382" tolineno="382" lineno="382">
            <Const fromlineno="382" tolineno="382" lineno="382" type="int">1</Const>
          </Return>
        </If>
        <If fromlineno="384" tolineno="385" lineno="384">
          <Name fromlineno="384" tolineno="384" lineno="384" name="export"/>
          <Discard fromlineno="385" tolineno="385" lineno="385">
            <CallFunc fromlineno="385" tolineno="385" lineno="385" func="Getattr(write)">
              <Getattr fromlineno="385" tolineno="385" lineno="385" attrname="write" expr="o">
                <Name fromlineno="385" tolineno="385" lineno="385" name="o"/>
              </Getattr>
              <Const fromlineno="385" tolineno="385" lineno="385" type="str">'export '</Const>
            </CallFunc>
          </Discard>
        </If>
        <Assign fromlineno="389" tolineno="389" lineno="389" targets="[&lt;AssName(alter) l.389 [bb.data] at Ox961bf2c&gt;]" value="re.sub('&quot;', '\\&quot;', val.strip())">
          <AssName fromlineno="389" tolineno="389" lineno="389" name="alter"/>
          <CallFunc fromlineno="389" tolineno="389" lineno="389" func="Getattr(sub)">
            <Getattr fromlineno="389" tolineno="389" lineno="389" attrname="sub" expr="re">
              <Name fromlineno="389" tolineno="389" lineno="389" name="re"/>
            </Getattr>
            <Const fromlineno="389" tolineno="389" lineno="389" type="str">'"'</Const>
            <Const fromlineno="389" tolineno="389" lineno="389" type="str">'\\"'</Const>
            <CallFunc fromlineno="389" tolineno="389" lineno="389" func="Getattr(strip)">
              <Getattr fromlineno="389" tolineno="389" lineno="389" attrname="strip" expr="val">
                <Name fromlineno="389" tolineno="389" lineno="389" name="val"/>
              </Getattr>
            </CallFunc>
          </CallFunc>
        </Assign>
        <Discard fromlineno="390" tolineno="390" lineno="390">
          <CallFunc fromlineno="390" tolineno="390" lineno="390" func="Getattr(write)">
            <Getattr fromlineno="390" tolineno="390" lineno="390" attrname="write" expr="o">
              <Name fromlineno="390" tolineno="390" lineno="390" name="o"/>
            </Getattr>
            <BinOp fromlineno="390" tolineno="390" lineno="390" op="%" left="'%s=&quot;%s&quot;\n'" right="(varExpanded, alter)">
              <Const fromlineno="390" tolineno="390" lineno="390" type="str">'%s="%s"\n'</Const>
              <Tuple fromlineno="390" tolineno="390" lineno="390">
                <Name fromlineno="390" tolineno="390" lineno="390" name="varExpanded"/>
                <Name fromlineno="390" tolineno="390" lineno="390" name="alter"/>
              </Tuple>
            </BinOp>
          </CallFunc>
        </Discard>
        <Return fromlineno="391" tolineno="391" lineno="391">
          <Const fromlineno="391" tolineno="391" lineno="391" type="int">1</Const>
        </Return>
      </Function>
      <Function fromlineno="394" tolineno="407" lineno="394">
        <Arguments fromlineno="394" tolineno="394" lineno="None" format_args="o=sys.__stdout__, d=init(), all=False">
          <AssName fromlineno="394" tolineno="394" lineno="394" name="o"/>
          <AssName fromlineno="394" tolineno="394" lineno="394" name="d"/>
          <AssName fromlineno="394" tolineno="394" lineno="394" name="all"/>
          <Getattr fromlineno="394" tolineno="394" lineno="394" attrname="__stdout__" expr="sys">
            <Name fromlineno="394" tolineno="394" lineno="394" name="sys"/>
          </Getattr>
          <CallFunc fromlineno="394" tolineno="394" lineno="394" func="Name(init)">
            <Name fromlineno="394" tolineno="394" lineno="394" name="init"/>
          </CallFunc>
          <Const fromlineno="394" tolineno="394" lineno="394" type="bool">False</Const>
        </Arguments>
        <Assign fromlineno="397" tolineno="397" lineno="397" targets="[&lt;AssName(env) l.397 [bb.data] at Ox962448c&gt;]" value="keys(d)">
          <AssName fromlineno="397" tolineno="397" lineno="397" name="env"/>
          <CallFunc fromlineno="397" tolineno="397" lineno="397" func="Name(keys)">
            <Name fromlineno="397" tolineno="397" lineno="397" name="keys"/>
            <Name fromlineno="397" tolineno="397" lineno="397" name="d"/>
          </CallFunc>
        </Assign>
        <For fromlineno="399" tolineno="402" lineno="399">
          <AssName fromlineno="399" tolineno="399" lineno="399" name="e"/>
          <Name fromlineno="399" tolineno="399" lineno="399" name="env"/>
          <If fromlineno="400" tolineno="401" lineno="400">
            <CallFunc fromlineno="400" tolineno="400" lineno="400" func="Name(getVarFlag)">
              <Name fromlineno="400" tolineno="400" lineno="400" name="getVarFlag"/>
              <Name fromlineno="400" tolineno="400" lineno="400" name="e"/>
              <Const fromlineno="400" tolineno="400" lineno="400" type="str">'func'</Const>
              <Name fromlineno="400" tolineno="400" lineno="400" name="d"/>
            </CallFunc>
            <Continue fromlineno="401" tolineno="401" lineno="401"/>
          </If>
          <Discard fromlineno="402" tolineno="402" lineno="402">
            <BoolOp fromlineno="402" tolineno="402" lineno="402" op="and" values="emit_var(e, o, d, all),o.write('\n'),">
              <CallFunc fromlineno="402" tolineno="402" lineno="402" func="Name(emit_var)">
                <Name fromlineno="402" tolineno="402" lineno="402" name="emit_var"/>
                <Name fromlineno="402" tolineno="402" lineno="402" name="e"/>
                <Name fromlineno="402" tolineno="402" lineno="402" name="o"/>
                <Name fromlineno="402" tolineno="402" lineno="402" name="d"/>
                <Name fromlineno="402" tolineno="402" lineno="402" name="all"/>
              </CallFunc>
              <CallFunc fromlineno="402" tolineno="402" lineno="402" func="Getattr(write)">
                <Getattr fromlineno="402" tolineno="402" lineno="402" attrname="write" expr="o">
                  <Name fromlineno="402" tolineno="402" lineno="402" name="o"/>
                </Getattr>
                <Const fromlineno="402" tolineno="402" lineno="402" type="str">'\n'</Const>
              </CallFunc>
            </BoolOp>
          </Discard>
        </For>
        <For fromlineno="404" tolineno="407" lineno="404">
          <AssName fromlineno="404" tolineno="404" lineno="404" name="e"/>
          <Name fromlineno="404" tolineno="404" lineno="404" name="env"/>
          <If fromlineno="405" tolineno="406" lineno="405">
            <UnaryOp fromlineno="405" tolineno="405" lineno="405">
              <CallFunc fromlineno="405" tolineno="405" lineno="405" func="Name(getVarFlag)">
                <Name fromlineno="405" tolineno="405" lineno="405" name="getVarFlag"/>
                <Name fromlineno="405" tolineno="405" lineno="405" name="e"/>
                <Const fromlineno="405" tolineno="405" lineno="405" type="str">'func'</Const>
                <Name fromlineno="405" tolineno="405" lineno="405" name="d"/>
              </CallFunc>
            </UnaryOp>
            <Continue fromlineno="406" tolineno="406" lineno="406"/>
          </If>
          <Discard fromlineno="407" tolineno="407" lineno="407">
            <BoolOp fromlineno="407" tolineno="407" lineno="407" op="and" values="emit_var(e, o, d),o.write('\n'),">
              <CallFunc fromlineno="407" tolineno="407" lineno="407" func="Name(emit_var)">
                <Name fromlineno="407" tolineno="407" lineno="407" name="emit_var"/>
                <Name fromlineno="407" tolineno="407" lineno="407" name="e"/>
                <Name fromlineno="407" tolineno="407" lineno="407" name="o"/>
                <Name fromlineno="407" tolineno="407" lineno="407" name="d"/>
              </CallFunc>
              <CallFunc fromlineno="407" tolineno="407" lineno="407" func="Getattr(write)">
                <Getattr fromlineno="407" tolineno="407" lineno="407" attrname="write" expr="o">
                  <Name fromlineno="407" tolineno="407" lineno="407" name="o"/>
                </Getattr>
                <Const fromlineno="407" tolineno="407" lineno="407" type="str">'\n'</Const>
              </CallFunc>
            </BoolOp>
          </Discard>
        </For>
      </Function>
      <Function fromlineno="409" tolineno="544" lineno="409">
        <Arguments fromlineno="409" tolineno="409" lineno="None" format_args="d">
          <AssName fromlineno="409" tolineno="409" lineno="409" name="d"/>
        </Arguments>
        <Discard fromlineno="476" tolineno="476" lineno="476">
          <CallFunc fromlineno="476" tolineno="476" lineno="476" func="Getattr(debug)">
            <Getattr fromlineno="476" tolineno="476" lineno="476" attrname="debug" expr="bb.msg">
              <Getattr fromlineno="476" tolineno="476" lineno="476" attrname="msg" expr="bb">
                <Name fromlineno="476" tolineno="476" lineno="476" name="bb"/>
              </Getattr>
            </Getattr>
            <Const fromlineno="476" tolineno="476" lineno="476" type="int">2</Const>
            <Getattr fromlineno="476" tolineno="476" lineno="476" attrname="Data" expr="bb.msg.domain">
              <Getattr fromlineno="476" tolineno="476" lineno="476" attrname="domain" expr="bb.msg">
                <Getattr fromlineno="476" tolineno="476" lineno="476" attrname="msg" expr="bb">
                  <Name fromlineno="476" tolineno="476" lineno="476" name="bb"/>
                </Getattr>
              </Getattr>
            </Getattr>
            <Const fromlineno="476" tolineno="476" lineno="476" type="str">'update_data()'</Const>
          </CallFunc>
        </Discard>
        <Assign fromlineno="483" tolineno="483" lineno="483" targets="[&lt;AssName(overrides) l.483 [bb.data] at Ox964120c&gt;]" value="((getVar('OVERRIDES', d, 1)) or ('').split(':')) or ([])">
          <AssName fromlineno="483" tolineno="483" lineno="483" name="overrides"/>
          <BoolOp fromlineno="483" tolineno="483" lineno="483" op="or" values="(getVar('OVERRIDES', d, 1)) or ('').split(':'),[],">
            <CallFunc fromlineno="483" tolineno="483" lineno="483" func="Getattr(split)">
              <Getattr fromlineno="483" tolineno="483" lineno="483" attrname="split" expr="(getVar('OVERRIDES', d, 1)) or ('')">
                <BoolOp fromlineno="483" tolineno="483" lineno="483" op="or" values="getVar('OVERRIDES', d, 1),'',">
                  <CallFunc fromlineno="483" tolineno="483" lineno="483" func="Name(getVar)">
                    <Name fromlineno="483" tolineno="483" lineno="483" name="getVar"/>
                    <Const fromlineno="483" tolineno="483" lineno="483" type="str">'OVERRIDES'</Const>
                    <Name fromlineno="483" tolineno="483" lineno="483" name="d"/>
                    <Const fromlineno="483" tolineno="483" lineno="483" type="int">1</Const>
                  </CallFunc>
                  <Const fromlineno="483" tolineno="483" lineno="483" type="str">''</Const>
                </BoolOp>
              </Getattr>
              <Const fromlineno="483" tolineno="483" lineno="483" type="str">':'</Const>
            </CallFunc>
            <List fromlineno="483" tolineno="483" lineno="483"/>
          </BoolOp>
        </Assign>
        <For fromlineno="500" tolineno="514" lineno="500">
          <AssName fromlineno="500" tolineno="500" lineno="500" name="o"/>
          <Name fromlineno="500" tolineno="500" lineno="500" name="overrides"/>
          <Assign fromlineno="502" tolineno="502" lineno="502" targets="[&lt;AssName(l) l.502 [bb.data] at Ox964148c&gt;]" value="(len(o)) + (1)">
            <AssName fromlineno="502" tolineno="502" lineno="502" name="l"/>
            <BinOp fromlineno="502" tolineno="502" lineno="502" op="+" left="len(o)" right="1">
              <CallFunc fromlineno="502" tolineno="502" lineno="502" func="Name(len)">
                <Name fromlineno="502" tolineno="502" lineno="502" name="len"/>
                <Name fromlineno="502" tolineno="502" lineno="502" name="o"/>
              </CallFunc>
              <Const fromlineno="502" tolineno="502" lineno="502" type="int">1</Const>
            </BinOp>
          </Assign>
          <If fromlineno="505" tolineno="506" lineno="505">
            <UnaryOp fromlineno="505" tolineno="505" lineno="505">
              <CallFunc fromlineno="505" tolineno="505" lineno="505" func="Getattr(has_key)">
                <Getattr fromlineno="505" tolineno="505" lineno="505" attrname="has_key" expr="d._seen_overrides">
                  <Getattr fromlineno="505" tolineno="505" lineno="505" attrname="_seen_overrides" expr="d">
                    <Name fromlineno="505" tolineno="505" lineno="505" name="d"/>
                  </Getattr>
                </Getattr>
                <Name fromlineno="505" tolineno="505" lineno="505" name="o"/>
              </CallFunc>
            </UnaryOp>
            <Continue fromlineno="506" tolineno="506" lineno="506"/>
          </If>
          <Assign fromlineno="508" tolineno="508" lineno="508" targets="[&lt;AssName(vars) l.508 [bb.data] at Ox964172c&gt;]" value="d._seen_overrides[o]">
            <AssName fromlineno="508" tolineno="508" lineno="508" name="vars"/>
            <Subscript fromlineno="508" tolineno="508" lineno="508">
              <Getattr fromlineno="508" tolineno="508" lineno="508" attrname="_seen_overrides" expr="d">
                <Name fromlineno="508" tolineno="508" lineno="508" name="d"/>
              </Getattr>
              <Index fromlineno="508" tolineno="508" lineno="None">
                <Name fromlineno="508" tolineno="508" lineno="508" name="o"/>
              </Index>
            </Subscript>
          </Assign>
          <For fromlineno="509" tolineno="514" lineno="509">
            <AssName fromlineno="509" tolineno="509" lineno="509" name="var"/>
            <Name fromlineno="509" tolineno="509" lineno="509" name="vars"/>
            <Assign fromlineno="510" tolineno="510" lineno="510" targets="[&lt;AssName(name) l.510 [bb.data] at Ox96411ac&gt;]" value="var[:-l]">
              <AssName fromlineno="510" tolineno="510" lineno="510" name="name"/>
              <Subscript fromlineno="510" tolineno="510" lineno="510">
                <Name fromlineno="510" tolineno="510" lineno="510" name="var"/>
                <Slice fromlineno="510" tolineno="510" lineno="None">
                  <UnaryOp fromlineno="510" tolineno="510" lineno="510">
                    <Name fromlineno="510" tolineno="510" lineno="510" name="l"/>
                  </UnaryOp>
                </Slice>
              </Subscript>
            </Assign>
            <TryExcept fromlineno="511" tolineno="514" lineno="511">
              <Assign fromlineno="512" tolineno="512" lineno="512" targets="[&lt;Subscript() l.512 [bb.data] at Ox964198c&gt;]" value="d[var]">
                <Subscript fromlineno="512" tolineno="512" lineno="512">
                  <Name fromlineno="512" tolineno="512" lineno="512" name="d"/>
                  <Index fromlineno="512" tolineno="512" lineno="None">
                    <Name fromlineno="512" tolineno="512" lineno="512" name="name"/>
                  </Index>
                </Subscript>
                <Subscript fromlineno="512" tolineno="512" lineno="512">
                  <Name fromlineno="512" tolineno="512" lineno="512" name="d"/>
                  <Index fromlineno="512" tolineno="512" lineno="None">
                    <Name fromlineno="512" tolineno="512" lineno="512" name="var"/>
                  </Index>
                </Subscript>
              </Assign>
              <ExceptHandler fromlineno="513" tolineno="514" lineno="513">
                <Discard fromlineno="514" tolineno="514" lineno="514">
                  <CallFunc fromlineno="514" tolineno="514" lineno="514" func="Getattr(note)">
                    <Getattr fromlineno="514" tolineno="514" lineno="514" attrname="note" expr="bb.msg">
                      <Getattr fromlineno="514" tolineno="514" lineno="514" attrname="msg" expr="bb">
                        <Name fromlineno="514" tolineno="514" lineno="514" name="bb"/>
                      </Getattr>
                    </Getattr>
                    <Const fromlineno="514" tolineno="514" lineno="514" type="int">1</Const>
                    <Getattr fromlineno="514" tolineno="514" lineno="514" attrname="Data" expr="bb.msg.domain">
                      <Getattr fromlineno="514" tolineno="514" lineno="514" attrname="domain" expr="bb.msg">
                        <Getattr fromlineno="514" tolineno="514" lineno="514" attrname="msg" expr="bb">
                          <Name fromlineno="514" tolineno="514" lineno="514" name="bb"/>
                        </Getattr>
                      </Getattr>
                    </Getattr>
                    <Const fromlineno="514" tolineno="514" lineno="514" type="str">'Untracked delVar'</Const>
                  </CallFunc>
                </Discard>
              </ExceptHandler>
            </TryExcept>
          </For>
        </For>
        <If fromlineno="517" tolineno="529" lineno="517">
          <CallFunc fromlineno="517" tolineno="517" lineno="517" func="Getattr(has_key)">
            <Getattr fromlineno="517" tolineno="517" lineno="517" attrname="has_key" expr="d._special_values">
              <Getattr fromlineno="517" tolineno="517" lineno="517" attrname="_special_values" expr="d">
                <Name fromlineno="517" tolineno="517" lineno="517" name="d"/>
              </Getattr>
            </Getattr>
            <Const fromlineno="517" tolineno="517" lineno="517" type="str">'_append'</Const>
          </CallFunc>
          <Assign fromlineno="518" tolineno="518" lineno="518" targets="[&lt;AssName(appends) l.518 [bb.data] at Ox9641f8c&gt;]" value="(d._special_values['_append']) or ([])">
            <AssName fromlineno="518" tolineno="518" lineno="518" name="appends"/>
            <BoolOp fromlineno="518" tolineno="518" lineno="518" op="or" values="d._special_values['_append'],[],">
              <Subscript fromlineno="518" tolineno="518" lineno="518">
                <Getattr fromlineno="518" tolineno="518" lineno="518" attrname="_special_values" expr="d">
                  <Name fromlineno="518" tolineno="518" lineno="518" name="d"/>
                </Getattr>
                <Index fromlineno="518" tolineno="518" lineno="None">
                  <Const fromlineno="518" tolineno="518" lineno="518" type="str">'_append'</Const>
                </Index>
              </Subscript>
              <List fromlineno="518" tolineno="518" lineno="518"/>
            </BoolOp>
          </Assign>
          <For fromlineno="519" tolineno="529" lineno="519">
            <AssName fromlineno="519" tolineno="519" lineno="519" name="append"/>
            <Name fromlineno="519" tolineno="519" lineno="519" name="appends"/>
            <For fromlineno="520" tolineno="529" lineno="520">
              <Tuple fromlineno="520" tolineno="520" lineno="520">
                <AssName fromlineno="520" tolineno="520" lineno="520" name="a"/>
                <AssName fromlineno="520" tolineno="520" lineno="520" name="o"/>
              </Tuple>
              <BoolOp fromlineno="520" tolineno="520" lineno="520" op="or" values="getVarFlag(append, '_append', d),[],">
                <CallFunc fromlineno="520" tolineno="520" lineno="520" func="Name(getVarFlag)">
                  <Name fromlineno="520" tolineno="520" lineno="520" name="getVarFlag"/>
                  <Name fromlineno="520" tolineno="520" lineno="520" name="append"/>
                  <Const fromlineno="520" tolineno="520" lineno="520" type="str">'_append'</Const>
                  <Name fromlineno="520" tolineno="520" lineno="520" name="d"/>
                </CallFunc>
                <List fromlineno="520" tolineno="520" lineno="520"/>
              </BoolOp>
              <If fromlineno="522" tolineno="523" lineno="522">
                <BoolOp fromlineno="522" tolineno="522" lineno="522" op="or" values="(o) and (o in overrides),not o,">
                  <BoolOp fromlineno="522" tolineno="522" lineno="522" op="and" values="o,o in overrides,">
                    <Name fromlineno="522" tolineno="522" lineno="522" name="o"/>
                    <Compare fromlineno="522" tolineno="522" lineno="522" op="('in', &lt;Name(overrides) l.522 [bb.data] at Ox96495ec&gt;)">
                      <Name fromlineno="522" tolineno="522" lineno="522" name="o"/>
                      <Name fromlineno="522" tolineno="522" lineno="522" name="overrides"/>
                    </Compare>
                  </BoolOp>
                  <UnaryOp fromlineno="522" tolineno="522" lineno="522">
                    <Name fromlineno="522" tolineno="522" lineno="522" name="o"/>
                  </UnaryOp>
                </BoolOp>
                <Discard fromlineno="523" tolineno="523" lineno="523">
                  <CallFunc fromlineno="523" tolineno="523" lineno="523" func="Name(delVarFlag)">
                    <Name fromlineno="523" tolineno="523" lineno="523" name="delVarFlag"/>
                    <Name fromlineno="523" tolineno="523" lineno="523" name="append"/>
                    <Const fromlineno="523" tolineno="523" lineno="523" type="str">'_append'</Const>
                    <Name fromlineno="523" tolineno="523" lineno="523" name="d"/>
                  </CallFunc>
                </Discard>
              </If>
              <If fromlineno="524" tolineno="525" lineno="524">
                <BoolOp fromlineno="524" tolineno="524" lineno="524" op="and" values="o,not o in overrides,">
                  <Name fromlineno="524" tolineno="524" lineno="524" name="o"/>
                  <UnaryOp fromlineno="524" tolineno="524" lineno="524">
                    <Compare fromlineno="524" tolineno="524" lineno="524" op="('in', &lt;Name(overrides) l.524 [bb.data] at Ox964994c&gt;)">
                      <Name fromlineno="524" tolineno="524" lineno="524" name="o"/>
                      <Name fromlineno="524" tolineno="524" lineno="524" name="overrides"/>
                    </Compare>
                  </UnaryOp>
                </BoolOp>
                <Continue fromlineno="525" tolineno="525" lineno="525"/>
              </If>
              <Assign fromlineno="527" tolineno="527" lineno="527" targets="[&lt;AssName(sval) l.527 [bb.data] at Ox9649a0c&gt;]" value="(getVar(append, d)) or ('')">
                <AssName fromlineno="527" tolineno="527" lineno="527" name="sval"/>
                <BoolOp fromlineno="527" tolineno="527" lineno="527" op="or" values="getVar(append, d),'',">
                  <CallFunc fromlineno="527" tolineno="527" lineno="527" func="Name(getVar)">
                    <Name fromlineno="527" tolineno="527" lineno="527" name="getVar"/>
                    <Name fromlineno="527" tolineno="527" lineno="527" name="append"/>
                    <Name fromlineno="527" tolineno="527" lineno="527" name="d"/>
                  </CallFunc>
                  <Const fromlineno="527" tolineno="527" lineno="527" type="str">''</Const>
                </BoolOp>
              </Assign>
              <AugAssign fromlineno="528" tolineno="528" lineno="528" target="sval" value="a">
                <AssName fromlineno="528" tolineno="528" lineno="528" name="sval"/>
                <Name fromlineno="528" tolineno="528" lineno="528" name="a"/>
              </AugAssign>
              <Discard fromlineno="529" tolineno="529" lineno="529">
                <CallFunc fromlineno="529" tolineno="529" lineno="529" func="Name(setVar)">
                  <Name fromlineno="529" tolineno="529" lineno="529" name="setVar"/>
                  <Name fromlineno="529" tolineno="529" lineno="529" name="append"/>
                  <Name fromlineno="529" tolineno="529" lineno="529" name="sval"/>
                  <Name fromlineno="529" tolineno="529" lineno="529" name="d"/>
                </CallFunc>
              </Discard>
            </For>
          </For>
        </If>
        <If fromlineno="532" tolineno="544" lineno="532">
          <CallFunc fromlineno="532" tolineno="532" lineno="532" func="Getattr(has_key)">
            <Getattr fromlineno="532" tolineno="532" lineno="532" attrname="has_key" expr="d._special_values">
              <Getattr fromlineno="532" tolineno="532" lineno="532" attrname="_special_values" expr="d">
                <Name fromlineno="532" tolineno="532" lineno="532" name="d"/>
              </Getattr>
            </Getattr>
            <Const fromlineno="532" tolineno="532" lineno="532" type="str">'_prepend'</Const>
          </CallFunc>
          <Assign fromlineno="533" tolineno="533" lineno="533" targets="[&lt;AssName(prepends) l.533 [bb.data] at Ox9649eec&gt;]" value="(d._special_values['_prepend']) or ([])">
            <AssName fromlineno="533" tolineno="533" lineno="533" name="prepends"/>
            <BoolOp fromlineno="533" tolineno="533" lineno="533" op="or" values="d._special_values['_prepend'],[],">
              <Subscript fromlineno="533" tolineno="533" lineno="533">
                <Getattr fromlineno="533" tolineno="533" lineno="533" attrname="_special_values" expr="d">
                  <Name fromlineno="533" tolineno="533" lineno="533" name="d"/>
                </Getattr>
                <Index fromlineno="533" tolineno="533" lineno="None">
                  <Const fromlineno="533" tolineno="533" lineno="533" type="str">'_prepend'</Const>
                </Index>
              </Subscript>
              <List fromlineno="533" tolineno="533" lineno="533"/>
            </BoolOp>
          </Assign>
          <For fromlineno="535" tolineno="544" lineno="535">
            <AssName fromlineno="535" tolineno="535" lineno="535" name="prepend"/>
            <Name fromlineno="535" tolineno="535" lineno="535" name="prepends"/>
            <For fromlineno="536" tolineno="544" lineno="536">
              <Tuple fromlineno="536" tolineno="536" lineno="536">
                <AssName fromlineno="536" tolineno="536" lineno="536" name="a"/>
                <AssName fromlineno="536" tolineno="536" lineno="536" name="o"/>
              </Tuple>
              <BoolOp fromlineno="536" tolineno="536" lineno="536" op="or" values="getVarFlag(prepend, '_prepend', d),[],">
                <CallFunc fromlineno="536" tolineno="536" lineno="536" func="Name(getVarFlag)">
                  <Name fromlineno="536" tolineno="536" lineno="536" name="getVarFlag"/>
                  <Name fromlineno="536" tolineno="536" lineno="536" name="prepend"/>
                  <Const fromlineno="536" tolineno="536" lineno="536" type="str">'_prepend'</Const>
                  <Name fromlineno="536" tolineno="536" lineno="536" name="d"/>
                </CallFunc>
                <List fromlineno="536" tolineno="536" lineno="536"/>
              </BoolOp>
              <If fromlineno="538" tolineno="539" lineno="538">
                <BoolOp fromlineno="538" tolineno="538" lineno="538" op="or" values="(o) and (o in overrides),not o,">
                  <BoolOp fromlineno="538" tolineno="538" lineno="538" op="and" values="o,o in overrides,">
                    <Name fromlineno="538" tolineno="538" lineno="538" name="o"/>
                    <Compare fromlineno="538" tolineno="538" lineno="538" op="('in', &lt;Name(overrides) l.538 [bb.data] at Ox95b070c&gt;)">
                      <Name fromlineno="538" tolineno="538" lineno="538" name="o"/>
                      <Name fromlineno="538" tolineno="538" lineno="538" name="overrides"/>
                    </Compare>
                  </BoolOp>
                  <UnaryOp fromlineno="538" tolineno="538" lineno="538">
                    <Name fromlineno="538" tolineno="538" lineno="538" name="o"/>
                  </UnaryOp>
                </BoolOp>
                <Discard fromlineno="539" tolineno="539" lineno="539">
                  <CallFunc fromlineno="539" tolineno="539" lineno="539" func="Name(delVarFlag)">
                    <Name fromlineno="539" tolineno="539" lineno="539" name="delVarFlag"/>
                    <Name fromlineno="539" tolineno="539" lineno="539" name="prepend"/>
                    <Const fromlineno="539" tolineno="539" lineno="539" type="str">'_prepend'</Const>
                    <Name fromlineno="539" tolineno="539" lineno="539" name="d"/>
                  </CallFunc>
                </Discard>
              </If>
              <If fromlineno="540" tolineno="541" lineno="540">
                <BoolOp fromlineno="540" tolineno="540" lineno="540" op="and" values="o,not o in overrides,">
                  <Name fromlineno="540" tolineno="540" lineno="540" name="o"/>
                  <UnaryOp fromlineno="540" tolineno="540" lineno="540">
                    <Compare fromlineno="540" tolineno="540" lineno="540" op="('in', &lt;Name(overrides) l.540 [bb.data] at Ox95b09ac&gt;)">
                      <Name fromlineno="540" tolineno="540" lineno="540" name="o"/>
                      <Name fromlineno="540" tolineno="540" lineno="540" name="overrides"/>
                    </Compare>
                  </UnaryOp>
                </BoolOp>
                <Continue fromlineno="541" tolineno="541" lineno="541"/>
              </If>
              <Assign fromlineno="543" tolineno="543" lineno="543" targets="[&lt;AssName(sval) l.543 [bb.data] at Ox95b0a4c&gt;]" value="(a) + ((getVar(prepend, d)) or (''))">
                <AssName fromlineno="543" tolineno="543" lineno="543" name="sval"/>
                <BinOp fromlineno="543" tolineno="543" lineno="543" op="+" left="a" right="(getVar(prepend, d)) or ('')">
                  <Name fromlineno="543" tolineno="543" lineno="543" name="a"/>
                  <BoolOp fromlineno="543" tolineno="543" lineno="543" op="or" values="getVar(prepend, d),'',">
                    <CallFunc fromlineno="543" tolineno="543" lineno="543" func="Name(getVar)">
                      <Name fromlineno="543" tolineno="543" lineno="543" name="getVar"/>
                      <Name fromlineno="543" tolineno="543" lineno="543" name="prepend"/>
                      <Name fromlineno="543" tolineno="543" lineno="543" name="d"/>
                    </CallFunc>
                    <Const fromlineno="543" tolineno="543" lineno="543" type="str">''</Const>
                  </BoolOp>
                </BinOp>
              </Assign>
              <Discard fromlineno="544" tolineno="544" lineno="544">
                <CallFunc fromlineno="544" tolineno="544" lineno="544" func="Name(setVar)">
                  <Name fromlineno="544" tolineno="544" lineno="544" name="setVar"/>
                  <Name fromlineno="544" tolineno="544" lineno="544" name="prepend"/>
                  <Name fromlineno="544" tolineno="544" lineno="544" name="sval"/>
                  <Name fromlineno="544" tolineno="544" lineno="544" name="d"/>
                </CallFunc>
              </Discard>
            </For>
          </For>
        </If>
      </Function>
      <Function fromlineno="547" tolineno="551" lineno="547">
        <Arguments fromlineno="547" tolineno="547" lineno="None" format_args="klass, d">
          <AssName fromlineno="547" tolineno="547" lineno="547" name="klass"/>
          <AssName fromlineno="547" tolineno="547" lineno="547" name="d"/>
        </Arguments>
        <Assign fromlineno="548" tolineno="548" lineno="548" targets="[&lt;AssName(val) l.548 [bb.data] at Ox95b0e2c&gt;]" value="(getVar('__inherit_cache', d)) or ([])">
          <AssName fromlineno="548" tolineno="548" lineno="548" name="val"/>
          <BoolOp fromlineno="548" tolineno="548" lineno="548" op="or" values="getVar('__inherit_cache', d),[],">
            <CallFunc fromlineno="548" tolineno="548" lineno="548" func="Name(getVar)">
              <Name fromlineno="548" tolineno="548" lineno="548" name="getVar"/>
              <Const fromlineno="548" tolineno="548" lineno="548" type="str">'__inherit_cache'</Const>
              <Name fromlineno="548" tolineno="548" lineno="548" name="d"/>
            </CallFunc>
            <List fromlineno="548" tolineno="548" lineno="548"/>
          </BoolOp>
        </Assign>
        <If fromlineno="549" tolineno="550" lineno="549">
          <Compare fromlineno="549" tolineno="549" lineno="549" op="('in', &lt;Name(val) l.549 [bb.data] at Ox95b51ec&gt;)">
            <CallFunc fromlineno="549" tolineno="549" lineno="549" func="Getattr(join)">
              <Getattr fromlineno="549" tolineno="549" lineno="549" attrname="join" expr="os.path">
                <Getattr fromlineno="549" tolineno="549" lineno="549" attrname="path" expr="os">
                  <Name fromlineno="549" tolineno="549" lineno="549" name="os"/>
                </Getattr>
              </Getattr>
              <Const fromlineno="549" tolineno="549" lineno="549" type="str">'classes'</Const>
              <BinOp fromlineno="549" tolineno="549" lineno="549" op="%" left="'%s.bbclass'" right="klass">
                <Const fromlineno="549" tolineno="549" lineno="549" type="str">'%s.bbclass'</Const>
                <Name fromlineno="549" tolineno="549" lineno="549" name="klass"/>
              </BinOp>
            </CallFunc>
            <Name fromlineno="549" tolineno="549" lineno="549" name="val"/>
          </Compare>
          <Return fromlineno="550" tolineno="550" lineno="550">
            <Const fromlineno="550" tolineno="550" lineno="550" type="bool">True</Const>
          </Return>
        </If>
        <Return fromlineno="551" tolineno="551" lineno="551">
          <Const fromlineno="551" tolineno="551" lineno="551" type="bool">False</Const>
        </Return>
      </Function>
      <Function fromlineno="553" tolineno="559" lineno="553">
        <Arguments fromlineno="553" tolineno="553" lineno="None" format_args=""/>
        <Import fromlineno="555" tolineno="555" lineno="555">
          <ImportName name="doctest"/>
        </Import>
        <Import fromlineno="556" tolineno="556" lineno="556">
          <ImportName name="bb"/>
        </Import>
        <From fromlineno="557" tolineno="557" lineno="557" modname="bb">
          <ImportName name="data"/>
        </From>
        <Discard fromlineno="558" tolineno="558" lineno="558">
          <CallFunc fromlineno="558" tolineno="558" lineno="558" func="Getattr(set_debug_level)">
            <Getattr fromlineno="558" tolineno="558" lineno="558" attrname="set_debug_level" expr="bb.msg">
              <Getattr fromlineno="558" tolineno="558" lineno="558" attrname="msg" expr="bb">
                <Name fromlineno="558" tolineno="558" lineno="558" name="bb"/>
              </Getattr>
            </Getattr>
            <Const fromlineno="558" tolineno="558" lineno="558" type="int">0</Const>
          </CallFunc>
        </Discard>
        <Discard fromlineno="559" tolineno="559" lineno="559">
          <CallFunc fromlineno="559" tolineno="559" lineno="559" func="Getattr(testmod)">
            <Getattr fromlineno="559" tolineno="559" lineno="559" attrname="testmod" expr="doctest">
              <Name fromlineno="559" tolineno="559" lineno="559" name="doctest"/>
            </Getattr>
            <Name fromlineno="559" tolineno="559" lineno="559" name="data"/>
          </CallFunc>
        </Discard>
      </Function>
      <If fromlineno="561" tolineno="562" lineno="561">
        <Compare fromlineno="561" tolineno="561" lineno="561" op="('==', &lt;Const(str) l.561 [bb.data] at Ox920b0ac&gt;)">
          <Name fromlineno="561" tolineno="561" lineno="561" name="__name__"/>
          <Const fromlineno="561" tolineno="561" lineno="561" type="str">'__main__'</Const>
        </Compare>
        <Discard fromlineno="562" tolineno="562" lineno="562">
          <CallFunc fromlineno="562" tolineno="562" lineno="562" func="Name(_test)">
            <Name fromlineno="562" tolineno="562" lineno="562" name="_test"/>
          </CallFunc>
        </Discard>
      </If>
    </Module>
    <Module fromlineno="0" tolineno="529" lineno="0" name="bb.cache">
      <Import fromlineno="31" tolineno="31" lineno="31">
        <ImportName name="os"/>
        <ImportName name="re"/>
      </Import>
      <Import fromlineno="32" tolineno="32" lineno="32">
        <ImportName name="bb.data"/>
      </Import>
      <Import fromlineno="33" tolineno="33" lineno="33">
        <ImportName name="bb.utils"/>
      </Import>
      <TryExcept fromlineno="35" tolineno="39" lineno="35">
        <Import fromlineno="36" tolineno="36" lineno="36">
          <ImportName name="cPickle" asname="pickle"/>
        </Import>
        <ExceptHandler fromlineno="37" tolineno="39" lineno="37">
          <Name fromlineno="37" tolineno="37" lineno="37" name="ImportError"/>
          <Import fromlineno="38" tolineno="38" lineno="38">
            <ImportName name="pickle"/>
          </Import>
          <Discard fromlineno="39" tolineno="39" lineno="39">
            <CallFunc fromlineno="39" tolineno="39" lineno="39" func="Getattr(note)">
              <Getattr fromlineno="39" tolineno="39" lineno="39" attrname="note" expr="bb.msg">
                <Getattr fromlineno="39" tolineno="39" lineno="39" attrname="msg" expr="bb">
                  <Name fromlineno="39" tolineno="39" lineno="39" name="bb"/>
                </Getattr>
              </Getattr>
              <Const fromlineno="39" tolineno="39" lineno="39" type="int">1</Const>
              <Getattr fromlineno="39" tolineno="39" lineno="39" attrname="Cache" expr="bb.msg.domain">
                <Getattr fromlineno="39" tolineno="39" lineno="39" attrname="domain" expr="bb.msg">
                  <Getattr fromlineno="39" tolineno="39" lineno="39" attrname="msg" expr="bb">
                    <Name fromlineno="39" tolineno="39" lineno="39" name="bb"/>
                  </Getattr>
                </Getattr>
              </Getattr>
              <Const fromlineno="39" tolineno="39" lineno="39" type="str">'Importing cPickle failed. Falling back to a very slow implementation.'</Const>
            </CallFunc>
          </Discard>
        </ExceptHandler>
      </TryExcept>
      <Assign fromlineno="41" tolineno="41" lineno="41" targets="[&lt;AssName(__cache_version__) l.41 [bb.cache] at Ox9526e8c&gt;]" value="'130'">
        <AssName fromlineno="41" tolineno="41" lineno="41" name="__cache_version__"/>
        <Const fromlineno="41" tolineno="41" lineno="41" type="str">'130'</Const>
      </Assign>
      <Class fromlineno="43" tolineno="466" lineno="43">
        <Function fromlineno="47" tolineno="99" lineno="47">
          <Arguments fromlineno="47" tolineno="47" lineno="None" format_args="self, cooker">
            <AssName fromlineno="47" tolineno="47" lineno="47" name="self"/>
            <AssName fromlineno="47" tolineno="47" lineno="47" name="cooker"/>
          </Arguments>
          <Assign fromlineno="50" tolineno="50" lineno="50" targets="[&lt;AssAttr(cachedir) l.50 [bb.cache] at Ox952a12c&gt;]" value="bb.data.getVar('CACHE', cooker.configuration.data, True)">
            <AssAttr fromlineno="50" tolineno="50" lineno="50" attrname="cachedir" expr="self">
              <Name fromlineno="50" tolineno="50" lineno="50" name="self"/>
            </AssAttr>
            <CallFunc fromlineno="50" tolineno="50" lineno="50" func="Getattr(getVar)">
              <Getattr fromlineno="50" tolineno="50" lineno="50" attrname="getVar" expr="bb.data">
                <Getattr fromlineno="50" tolineno="50" lineno="50" attrname="data" expr="bb">
                  <Name fromlineno="50" tolineno="50" lineno="50" name="bb"/>
                </Getattr>
              </Getattr>
              <Const fromlineno="50" tolineno="50" lineno="50" type="str">'CACHE'</Const>
              <Getattr fromlineno="50" tolineno="50" lineno="50" attrname="data" expr="cooker.configuration">
                <Getattr fromlineno="50" tolineno="50" lineno="50" attrname="configuration" expr="cooker">
                  <Name fromlineno="50" tolineno="50" lineno="50" name="cooker"/>
                </Getattr>
              </Getattr>
              <Const fromlineno="50" tolineno="50" lineno="50" type="bool">True</Const>
            </CallFunc>
          </Assign>
          <Assign fromlineno="51" tolineno="51" lineno="51" targets="[&lt;AssAttr(clean) l.51 [bb.cache] at Ox952a2ec&gt;]" value="{}">
            <AssAttr fromlineno="51" tolineno="51" lineno="51" attrname="clean" expr="self">
              <Name fromlineno="51" tolineno="51" lineno="51" name="self"/>
            </AssAttr>
            <Dict fromlineno="51" tolineno="51" lineno="51"/>
          </Assign>
          <Assign fromlineno="52" tolineno="52" lineno="52" targets="[&lt;AssAttr(checked) l.52 [bb.cache] at Ox952a3ac&gt;]" value="{}">
            <AssAttr fromlineno="52" tolineno="52" lineno="52" attrname="checked" expr="self">
              <Name fromlineno="52" tolineno="52" lineno="52" name="self"/>
            </AssAttr>
            <Dict fromlineno="52" tolineno="52" lineno="52"/>
          </Assign>
          <Assign fromlineno="53" tolineno="53" lineno="53" targets="[&lt;AssAttr(depends_cache) l.53 [bb.cache] at Ox952a46c&gt;]" value="{}">
            <AssAttr fromlineno="53" tolineno="53" lineno="53" attrname="depends_cache" expr="self">
              <Name fromlineno="53" tolineno="53" lineno="53" name="self"/>
            </AssAttr>
            <Dict fromlineno="53" tolineno="53" lineno="53"/>
          </Assign>
          <Assign fromlineno="54" tolineno="54" lineno="54" targets="[&lt;AssAttr(data) l.54 [bb.cache] at Ox952a52c&gt;]" value="None">
            <AssAttr fromlineno="54" tolineno="54" lineno="54" attrname="data" expr="self">
              <Name fromlineno="54" tolineno="54" lineno="54" name="self"/>
            </AssAttr>
            <Const fromlineno="54" tolineno="54" lineno="54" type="NoneType">None</Const>
          </Assign>
          <Assign fromlineno="55" tolineno="55" lineno="55" targets="[&lt;AssAttr(data_fn) l.55 [bb.cache] at Ox952a5cc&gt;]" value="None">
            <AssAttr fromlineno="55" tolineno="55" lineno="55" attrname="data_fn" expr="self">
              <Name fromlineno="55" tolineno="55" lineno="55" name="self"/>
            </AssAttr>
            <Const fromlineno="55" tolineno="55" lineno="55" type="NoneType">None</Const>
          </Assign>
          <Assign fromlineno="56" tolineno="56" lineno="56" targets="[&lt;AssAttr(cacheclean) l.56 [bb.cache] at Ox952a66c&gt;]" value="True">
            <AssAttr fromlineno="56" tolineno="56" lineno="56" attrname="cacheclean" expr="self">
              <Name fromlineno="56" tolineno="56" lineno="56" name="self"/>
            </AssAttr>
            <Const fromlineno="56" tolineno="56" lineno="56" type="bool">True</Const>
          </Assign>
          <If fromlineno="58" tolineno="61" lineno="58">
            <Compare fromlineno="58" tolineno="58" lineno="58" op="('in', &lt;List(list) l.58 [bb.cache] at Ox952a78c&gt;)">
              <Getattr fromlineno="58" tolineno="58" lineno="58" attrname="cachedir" expr="self">
                <Name fromlineno="58" tolineno="58" lineno="58" name="self"/>
              </Getattr>
              <List fromlineno="58" tolineno="58" lineno="58">
                <Const fromlineno="58" tolineno="58" lineno="58" type="NoneType">None</Const>
                <Const fromlineno="58" tolineno="58" lineno="58" type="str">''</Const>
              </List>
            </Compare>
            <Assign fromlineno="59" tolineno="59" lineno="59" targets="[&lt;AssAttr(has_cache) l.59 [bb.cache] at Ox952a88c&gt;]" value="False">
              <AssAttr fromlineno="59" tolineno="59" lineno="59" attrname="has_cache" expr="self">
                <Name fromlineno="59" tolineno="59" lineno="59" name="self"/>
              </AssAttr>
              <Const fromlineno="59" tolineno="59" lineno="59" type="bool">False</Const>
            </Assign>
            <Discard fromlineno="60" tolineno="60" lineno="60">
              <CallFunc fromlineno="60" tolineno="60" lineno="60" func="Getattr(note)">
                <Getattr fromlineno="60" tolineno="60" lineno="60" attrname="note" expr="bb.msg">
                  <Getattr fromlineno="60" tolineno="60" lineno="60" attrname="msg" expr="bb">
                    <Name fromlineno="60" tolineno="60" lineno="60" name="bb"/>
                  </Getattr>
                </Getattr>
                <Const fromlineno="60" tolineno="60" lineno="60" type="int">1</Const>
                <Getattr fromlineno="60" tolineno="60" lineno="60" attrname="Cache" expr="bb.msg.domain">
                  <Getattr fromlineno="60" tolineno="60" lineno="60" attrname="domain" expr="bb.msg">
                    <Getattr fromlineno="60" tolineno="60" lineno="60" attrname="msg" expr="bb">
                      <Name fromlineno="60" tolineno="60" lineno="60" name="bb"/>
                    </Getattr>
                  </Getattr>
                </Getattr>
                <Const fromlineno="60" tolineno="60" lineno="60" type="str">'Not using a cache. Set CACHE = &lt;directory&gt; to enable.'</Const>
              </CallFunc>
            </Discard>
            <Return fromlineno="61" tolineno="61" lineno="61"/>
          </If>
          <Assign fromlineno="63" tolineno="63" lineno="63" targets="[&lt;AssAttr(has_cache) l.63 [bb.cache] at Ox952aacc&gt;]" value="True">
            <AssAttr fromlineno="63" tolineno="63" lineno="63" attrname="has_cache" expr="self">
              <Name fromlineno="63" tolineno="63" lineno="63" name="self"/>
            </AssAttr>
            <Const fromlineno="63" tolineno="63" lineno="63" type="bool">True</Const>
          </Assign>
          <Assign fromlineno="64" tolineno="64" lineno="64" targets="[&lt;AssAttr(cachefile) l.64 [bb.cache] at Ox952ab6c&gt;]" value="os.path.join(self.cachedir, 'bb_cache.dat')">
            <AssAttr fromlineno="64" tolineno="64" lineno="64" attrname="cachefile" expr="self">
              <Name fromlineno="64" tolineno="64" lineno="64" name="self"/>
            </AssAttr>
            <CallFunc fromlineno="64" tolineno="64" lineno="64" func="Getattr(join)">
              <Getattr fromlineno="64" tolineno="64" lineno="64" attrname="join" expr="os.path">
                <Getattr fromlineno="64" tolineno="64" lineno="64" attrname="path" expr="os">
                  <Name fromlineno="64" tolineno="64" lineno="64" name="os"/>
                </Getattr>
              </Getattr>
              <Getattr fromlineno="64" tolineno="64" lineno="64" attrname="cachedir" expr="self">
                <Name fromlineno="64" tolineno="64" lineno="64" name="self"/>
              </Getattr>
              <Const fromlineno="64" tolineno="64" lineno="64" type="str">'bb_cache.dat'</Const>
            </CallFunc>
          </Assign>
          <Discard fromlineno="66" tolineno="66" lineno="66">
            <CallFunc fromlineno="66" tolineno="66" lineno="66" func="Getattr(debug)">
              <Getattr fromlineno="66" tolineno="66" lineno="66" attrname="debug" expr="bb.msg">
                <Getattr fromlineno="66" tolineno="66" lineno="66" attrname="msg" expr="bb">
                  <Name fromlineno="66" tolineno="66" lineno="66" name="bb"/>
                </Getattr>
              </Getattr>
              <Const fromlineno="66" tolineno="66" lineno="66" type="int">1</Const>
              <Getattr fromlineno="66" tolineno="66" lineno="66" attrname="Cache" expr="bb.msg.domain">
                <Getattr fromlineno="66" tolineno="66" lineno="66" attrname="domain" expr="bb.msg">
                  <Getattr fromlineno="66" tolineno="66" lineno="66" attrname="msg" expr="bb">
                    <Name fromlineno="66" tolineno="66" lineno="66" name="bb"/>
                  </Getattr>
                </Getattr>
              </Getattr>
              <BinOp fromlineno="66" tolineno="66" lineno="66" op="%" left="&quot;Using cache in '%s'&quot;" right="self.cachedir">
                <Const fromlineno="66" tolineno="66" lineno="66" type="str">"Using cache in '%s'"</Const>
                <Getattr fromlineno="66" tolineno="66" lineno="66" attrname="cachedir" expr="self">
                  <Name fromlineno="66" tolineno="66" lineno="66" name="self"/>
                </Getattr>
              </BinOp>
            </CallFunc>
          </Discard>
          <TryExcept fromlineno="67" tolineno="70" lineno="67">
            <Discard fromlineno="68" tolineno="68" lineno="68">
              <CallFunc fromlineno="68" tolineno="68" lineno="68" func="Getattr(stat)">
                <Getattr fromlineno="68" tolineno="68" lineno="68" attrname="stat" expr="os">
                  <Name fromlineno="68" tolineno="68" lineno="68" name="os"/>
                </Getattr>
                <Getattr fromlineno="68" tolineno="68" lineno="68" attrname="cachedir" expr="self">
                  <Name fromlineno="68" tolineno="68" lineno="68" name="self"/>
                </Getattr>
              </CallFunc>
            </Discard>
            <ExceptHandler fromlineno="69" tolineno="70" lineno="69">
              <Name fromlineno="69" tolineno="69" lineno="69" name="OSError"/>
              <Discard fromlineno="70" tolineno="70" lineno="70">
                <CallFunc fromlineno="70" tolineno="70" lineno="70" func="Getattr(mkdirhier)">
                  <Getattr fromlineno="70" tolineno="70" lineno="70" attrname="mkdirhier" expr="bb">
                    <Name fromlineno="70" tolineno="70" lineno="70" name="bb"/>
                  </Getattr>
                  <Getattr fromlineno="70" tolineno="70" lineno="70" attrname="cachedir" expr="self">
                    <Name fromlineno="70" tolineno="70" lineno="70" name="self"/>
                  </Getattr>
                </CallFunc>
              </Discard>
            </ExceptHandler>
          </TryExcept>
          <Assign fromlineno="74" tolineno="74" lineno="74" targets="[&lt;AssName(newest_mtime) l.74 [bb.cache] at Ox953318c&gt;]" value="0">
            <AssName fromlineno="74" tolineno="74" lineno="74" name="newest_mtime"/>
            <Const fromlineno="74" tolineno="74" lineno="74" type="int">0</Const>
          </Assign>
          <Assign fromlineno="75" tolineno="75" lineno="75" targets="[&lt;AssName(deps) l.75 [bb.cache] at Ox953322c&gt;]" value="bb.data.getVar('__depends', cooker.configuration.data, True)">
            <AssName fromlineno="75" tolineno="75" lineno="75" name="deps"/>
            <CallFunc fromlineno="75" tolineno="75" lineno="75" func="Getattr(getVar)">
              <Getattr fromlineno="75" tolineno="75" lineno="75" attrname="getVar" expr="bb.data">
                <Getattr fromlineno="75" tolineno="75" lineno="75" attrname="data" expr="bb">
                  <Name fromlineno="75" tolineno="75" lineno="75" name="bb"/>
                </Getattr>
              </Getattr>
              <Const fromlineno="75" tolineno="75" lineno="75" type="str">'__depends'</Const>
              <Getattr fromlineno="75" tolineno="75" lineno="75" attrname="data" expr="cooker.configuration">
                <Getattr fromlineno="75" tolineno="75" lineno="75" attrname="configuration" expr="cooker">
                  <Name fromlineno="75" tolineno="75" lineno="75" name="cooker"/>
                </Getattr>
              </Getattr>
              <Const fromlineno="75" tolineno="75" lineno="75" type="bool">True</Const>
            </CallFunc>
          </Assign>
          <For fromlineno="76" tolineno="78" lineno="76">
            <Tuple fromlineno="76" tolineno="76" lineno="76">
              <AssName fromlineno="76" tolineno="76" lineno="76" name="f"/>
              <AssName fromlineno="76" tolineno="76" lineno="76" name="old_mtime"/>
            </Tuple>
            <Name fromlineno="76" tolineno="76" lineno="76" name="deps"/>
            <If fromlineno="77" tolineno="78" lineno="77">
              <Compare fromlineno="77" tolineno="77" lineno="77" op="('&gt;', &lt;Name(newest_mtime) l.77 [bb.cache] at Ox953358c&gt;)">
                <Name fromlineno="77" tolineno="77" lineno="77" name="old_mtime"/>
                <Name fromlineno="77" tolineno="77" lineno="77" name="newest_mtime"/>
              </Compare>
              <Assign fromlineno="78" tolineno="78" lineno="78" targets="[&lt;AssName(newest_mtime) l.78 [bb.cache] at Ox953362c&gt;]" value="old_mtime">
                <AssName fromlineno="78" tolineno="78" lineno="78" name="newest_mtime"/>
                <Name fromlineno="78" tolineno="78" lineno="78" name="old_mtime"/>
              </Assign>
            </If>
          </For>
          <If fromlineno="80" tolineno="99" lineno="80">
            <Compare fromlineno="80" tolineno="80" lineno="80" op="('&gt;=', &lt;Name(newest_mtime) l.80 [bb.cache] at Ox95337cc&gt;)">
              <CallFunc fromlineno="80" tolineno="80" lineno="80" func="Getattr(cached_mtime_noerror)">
                <Getattr fromlineno="80" tolineno="80" lineno="80" attrname="cached_mtime_noerror" expr="bb.parse">
                  <Getattr fromlineno="80" tolineno="80" lineno="80" attrname="parse" expr="bb">
                    <Name fromlineno="80" tolineno="80" lineno="80" name="bb"/>
                  </Getattr>
                </Getattr>
                <Getattr fromlineno="80" tolineno="80" lineno="80" attrname="cachefile" expr="self">
                  <Name fromlineno="80" tolineno="80" lineno="80" name="self"/>
                </Getattr>
              </CallFunc>
              <Name fromlineno="80" tolineno="80" lineno="80" name="newest_mtime"/>
            </Compare>
            <TryExcept fromlineno="81" tolineno="93" lineno="81">
              <Assign fromlineno="82" tolineno="82" lineno="82" targets="[&lt;AssName(p) l.82 [bb.cache] at Ox95338cc&gt;]" value="pickle.Unpickler(file(self.cachefile, 'rb'))">
                <AssName fromlineno="82" tolineno="82" lineno="82" name="p"/>
                <CallFunc fromlineno="82" tolineno="82" lineno="82" func="Getattr(Unpickler)">
                  <Getattr fromlineno="82" tolineno="82" lineno="82" attrname="Unpickler" expr="pickle">
                    <Name fromlineno="82" tolineno="82" lineno="82" name="pickle"/>
                  </Getattr>
                  <CallFunc fromlineno="82" tolineno="82" lineno="82" func="Name(file)">
                    <Name fromlineno="82" tolineno="82" lineno="82" name="file"/>
                    <Getattr fromlineno="82" tolineno="82" lineno="82" attrname="cachefile" expr="self">
                      <Name fromlineno="82" tolineno="82" lineno="82" name="self"/>
                    </Getattr>
                    <Const fromlineno="82" tolineno="82" lineno="82" type="str">'rb'</Const>
                  </CallFunc>
                </CallFunc>
              </Assign>
              <Assign fromlineno="83" tolineno="83" lineno="83" targets="[&lt;Tuple(tuple) l.83 [bb.cache] at Ox9533a8c&gt;]" value="p.load()">
                <Tuple fromlineno="83" tolineno="83" lineno="83">
                  <AssAttr fromlineno="83" tolineno="83" lineno="83" attrname="depends_cache" expr="self">
                    <Name fromlineno="83" tolineno="83" lineno="83" name="self"/>
                  </AssAttr>
                  <AssName fromlineno="83" tolineno="83" lineno="83" name="version_data"/>
                </Tuple>
                <CallFunc fromlineno="83" tolineno="83" lineno="83" func="Getattr(load)">
                  <Getattr fromlineno="83" tolineno="83" lineno="83" attrname="load" expr="p">
                    <Name fromlineno="83" tolineno="83" lineno="83" name="p"/>
                  </Getattr>
                </CallFunc>
              </Assign>
              <If fromlineno="84" tolineno="85" lineno="84">
                <Compare fromlineno="84" tolineno="84" lineno="84" op="('!=', &lt;Name(__cache_version__) l.84 [bb.cache] at Ox9533cec&gt;)">
                  <Subscript fromlineno="84" tolineno="84" lineno="84">
                    <Name fromlineno="84" tolineno="84" lineno="84" name="version_data"/>
                    <Index fromlineno="84" tolineno="84" lineno="None">
                      <Const fromlineno="84" tolineno="84" lineno="84" type="str">'CACHE_VER'</Const>
                    </Index>
                  </Subscript>
                  <Name fromlineno="84" tolineno="84" lineno="84" name="__cache_version__"/>
                </Compare>
                <Raise fromlineno="85" tolineno="85" lineno="85">
                  <Name fromlineno="85" tolineno="85" lineno="85" name="ValueError"/>
                  <Const fromlineno="85" tolineno="85" lineno="85" type="str">'Cache Version Mismatch'</Const>
                </Raise>
              </If>
              <If fromlineno="86" tolineno="87" lineno="86">
                <Compare fromlineno="86" tolineno="86" lineno="86" op="('!=', &lt;Getattr(__version__) l.86 [bb.cache] at Ox9533eac&gt;)">
                  <Subscript fromlineno="86" tolineno="86" lineno="86">
                    <Name fromlineno="86" tolineno="86" lineno="86" name="version_data"/>
                    <Index fromlineno="86" tolineno="86" lineno="None">
                      <Const fromlineno="86" tolineno="86" lineno="86" type="str">'BITBAKE_VER'</Const>
                    </Index>
                  </Subscript>
                  <Getattr fromlineno="86" tolineno="86" lineno="86" attrname="__version__" expr="bb">
                    <Name fromlineno="86" tolineno="86" lineno="86" name="bb"/>
                  </Getattr>
                </Compare>
                <Raise fromlineno="87" tolineno="87" lineno="87">
                  <Name fromlineno="87" tolineno="87" lineno="87" name="ValueError"/>
                  <Const fromlineno="87" tolineno="87" lineno="87" type="str">'Bitbake Version Mismatch'</Const>
                </Raise>
              </If>
              <ExceptHandler fromlineno="88" tolineno="90" lineno="88">
                <Name fromlineno="88" tolineno="88" lineno="88" name="EOFError"/>
                <Discard fromlineno="89" tolineno="89" lineno="89">
                  <CallFunc fromlineno="89" tolineno="89" lineno="89" func="Getattr(note)">
                    <Getattr fromlineno="89" tolineno="89" lineno="89" attrname="note" expr="bb.msg">
                      <Getattr fromlineno="89" tolineno="89" lineno="89" attrname="msg" expr="bb">
                        <Name fromlineno="89" tolineno="89" lineno="89" name="bb"/>
                      </Getattr>
                    </Getattr>
                    <Const fromlineno="89" tolineno="89" lineno="89" type="int">1</Const>
                    <Getattr fromlineno="89" tolineno="89" lineno="89" attrname="Cache" expr="bb.msg.domain">
                      <Getattr fromlineno="89" tolineno="89" lineno="89" attrname="domain" expr="bb.msg">
                        <Getattr fromlineno="89" tolineno="89" lineno="89" attrname="msg" expr="bb">
                          <Name fromlineno="89" tolineno="89" lineno="89" name="bb"/>
                        </Getattr>
                      </Getattr>
                    </Getattr>
                    <Const fromlineno="89" tolineno="89" lineno="89" type="str">'Truncated cache found, rebuilding...'</Const>
                  </CallFunc>
                </Discard>
                <Assign fromlineno="90" tolineno="90" lineno="90" targets="[&lt;AssAttr(depends_cache) l.90 [bb.cache] at Ox953520c&gt;]" value="{}">
                  <AssAttr fromlineno="90" tolineno="90" lineno="90" attrname="depends_cache" expr="self">
                    <Name fromlineno="90" tolineno="90" lineno="90" name="self"/>
                  </AssAttr>
                  <Dict fromlineno="90" tolineno="90" lineno="90"/>
                </Assign>
              </ExceptHandler>
              <ExceptHandler fromlineno="91" tolineno="93" lineno="91">
                <Discard fromlineno="92" tolineno="92" lineno="92">
                  <CallFunc fromlineno="92" tolineno="92" lineno="92" func="Getattr(note)">
                    <Getattr fromlineno="92" tolineno="92" lineno="92" attrname="note" expr="bb.msg">
                      <Getattr fromlineno="92" tolineno="92" lineno="92" attrname="msg" expr="bb">
                        <Name fromlineno="92" tolineno="92" lineno="92" name="bb"/>
                      </Getattr>
                    </Getattr>
                    <Const fromlineno="92" tolineno="92" lineno="92" type="int">1</Const>
                    <Getattr fromlineno="92" tolineno="92" lineno="92" attrname="Cache" expr="bb.msg.domain">
                      <Getattr fromlineno="92" tolineno="92" lineno="92" attrname="domain" expr="bb.msg">
                        <Getattr fromlineno="92" tolineno="92" lineno="92" attrname="msg" expr="bb">
                          <Name fromlineno="92" tolineno="92" lineno="92" name="bb"/>
                        </Getattr>
                      </Getattr>
                    </Getattr>
                    <Const fromlineno="92" tolineno="92" lineno="92" type="str">'Invalid cache found, rebuilding...'</Const>
                  </CallFunc>
                </Discard>
                <Assign fromlineno="93" tolineno="93" lineno="93" targets="[&lt;AssAttr(depends_cache) l.93 [bb.cache] at Ox953548c&gt;]" value="{}">
                  <AssAttr fromlineno="93" tolineno="93" lineno="93" attrname="depends_cache" expr="self">
                    <Name fromlineno="93" tolineno="93" lineno="93" name="self"/>
                  </AssAttr>
                  <Dict fromlineno="93" tolineno="93" lineno="93"/>
                </Assign>
              </ExceptHandler>
            </TryExcept>
            <TryExcept fromlineno="95" tolineno="99" lineno="95">
              <Discard fromlineno="96" tolineno="96" lineno="96">
                <CallFunc fromlineno="96" tolineno="96" lineno="96" func="Getattr(stat)">
                  <Getattr fromlineno="96" tolineno="96" lineno="96" attrname="stat" expr="os">
                    <Name fromlineno="96" tolineno="96" lineno="96" name="os"/>
                  </Getattr>
                  <Getattr fromlineno="96" tolineno="96" lineno="96" attrname="cachefile" expr="self">
                    <Name fromlineno="96" tolineno="96" lineno="96" name="self"/>
                  </Getattr>
                </CallFunc>
              </Discard>
              <Discard fromlineno="97" tolineno="97" lineno="97">
                <CallFunc fromlineno="97" tolineno="97" lineno="97" func="Getattr(note)">
                  <Getattr fromlineno="97" tolineno="97" lineno="97" attrname="note" expr="bb.msg">
                    <Getattr fromlineno="97" tolineno="97" lineno="97" attrname="msg" expr="bb">
                      <Name fromlineno="97" tolineno="97" lineno="97" name="bb"/>
                    </Getattr>
                  </Getattr>
                  <Const fromlineno="97" tolineno="97" lineno="97" type="int">1</Const>
                  <Getattr fromlineno="97" tolineno="97" lineno="97" attrname="Cache" expr="bb.msg.domain">
                    <Getattr fromlineno="97" tolineno="97" lineno="97" attrname="domain" expr="bb.msg">
                      <Getattr fromlineno="97" tolineno="97" lineno="97" attrname="msg" expr="bb">
                        <Name fromlineno="97" tolineno="97" lineno="97" name="bb"/>
                      </Getattr>
                    </Getattr>
                  </Getattr>
                  <Const fromlineno="97" tolineno="97" lineno="97" type="str">'Out of date cache found, rebuilding...'</Const>
                </CallFunc>
              </Discard>
              <ExceptHandler fromlineno="98" tolineno="99" lineno="98">
                <Name fromlineno="98" tolineno="98" lineno="98" name="OSError"/>
                <Pass fromlineno="99" tolineno="99" lineno="99"/>
              </ExceptHandler>
            </TryExcept>
          </If>
        </Function>
        <Function fromlineno="101" tolineno="125" lineno="101">
          <Arguments fromlineno="101" tolineno="101" lineno="None" format_args="self, var, fn, exp=0">
            <AssName fromlineno="101" tolineno="101" lineno="101" name="self"/>
            <AssName fromlineno="101" tolineno="101" lineno="101" name="var"/>
            <AssName fromlineno="101" tolineno="101" lineno="101" name="fn"/>
            <AssName fromlineno="101" tolineno="101" lineno="101" name="exp"/>
            <Const fromlineno="101" tolineno="101" lineno="101" type="int">0</Const>
          </Arguments>
          <If fromlineno="111" tolineno="112" lineno="111">
            <Compare fromlineno="111" tolineno="111" lineno="111" op="('in', &lt;Getattr(clean) l.111 [bb.cache] at Ox9535a6c&gt;)">
              <Name fromlineno="111" tolineno="111" lineno="111" name="fn"/>
              <Getattr fromlineno="111" tolineno="111" lineno="111" attrname="clean" expr="self">
                <Name fromlineno="111" tolineno="111" lineno="111" name="self"/>
              </Getattr>
            </Compare>
            <Return fromlineno="112" tolineno="112" lineno="112">
              <Subscript fromlineno="112" tolineno="112" lineno="112">
                <Subscript fromlineno="112" tolineno="112" lineno="112">
                  <Getattr fromlineno="112" tolineno="112" lineno="112" attrname="depends_cache" expr="self">
                    <Name fromlineno="112" tolineno="112" lineno="112" name="self"/>
                  </Getattr>
                  <Index fromlineno="112" tolineno="112" lineno="None">
                    <Name fromlineno="112" tolineno="112" lineno="112" name="fn"/>
                  </Index>
                </Subscript>
                <Index fromlineno="112" tolineno="112" lineno="None">
                  <Name fromlineno="112" tolineno="112" lineno="112" name="var"/>
                </Index>
              </Subscript>
            </Return>
          </If>
          <If fromlineno="114" tolineno="115" lineno="114">
            <UnaryOp fromlineno="114" tolineno="114" lineno="114">
              <Compare fromlineno="114" tolineno="114" lineno="114" op="('in', &lt;Getattr(depends_cache) l.114 [bb.cache] at Ox9535ccc&gt;)">
                <Name fromlineno="114" tolineno="114" lineno="114" name="fn"/>
                <Getattr fromlineno="114" tolineno="114" lineno="114" attrname="depends_cache" expr="self">
                  <Name fromlineno="114" tolineno="114" lineno="114" name="self"/>
                </Getattr>
              </Compare>
            </UnaryOp>
            <Assign fromlineno="115" tolineno="115" lineno="115" targets="[&lt;Subscript() l.115 [bb.cache] at Ox9535d8c&gt;]" value="{}">
              <Subscript fromlineno="115" tolineno="115" lineno="115">
                <Getattr fromlineno="115" tolineno="115" lineno="115" attrname="depends_cache" expr="self">
                  <Name fromlineno="115" tolineno="115" lineno="115" name="self"/>
                </Getattr>
                <Index fromlineno="115" tolineno="115" lineno="None">
                  <Name fromlineno="115" tolineno="115" lineno="115" name="fn"/>
                </Index>
              </Subscript>
              <Dict fromlineno="115" tolineno="115" lineno="115"/>
            </Assign>
          </If>
          <If fromlineno="117" tolineno="120" lineno="117">
            <Compare fromlineno="117" tolineno="117" lineno="117" op="('!=', &lt;Getattr(data_fn) l.117 [bb.cache] at Ox9535f0c&gt;)">
              <Name fromlineno="117" tolineno="117" lineno="117" name="fn"/>
              <Getattr fromlineno="117" tolineno="117" lineno="117" attrname="data_fn" expr="self">
                <Name fromlineno="117" tolineno="117" lineno="117" name="self"/>
              </Getattr>
            </Compare>
            <Discard fromlineno="120" tolineno="120" lineno="120">
              <CallFunc fromlineno="120" tolineno="120" lineno="120" func="Getattr(error)">
                <Getattr fromlineno="120" tolineno="120" lineno="120" attrname="error" expr="bb.msg">
                  <Getattr fromlineno="120" tolineno="120" lineno="120" attrname="msg" expr="bb">
                    <Name fromlineno="120" tolineno="120" lineno="120" name="bb"/>
                  </Getattr>
                </Getattr>
                <Getattr fromlineno="120" tolineno="120" lineno="120" attrname="Cache" expr="bb.msg.domain">
                  <Getattr fromlineno="120" tolineno="120" lineno="120" attrname="domain" expr="bb.msg">
                    <Getattr fromlineno="120" tolineno="120" lineno="120" attrname="msg" expr="bb">
                      <Name fromlineno="120" tolineno="120" lineno="120" name="bb"/>
                    </Getattr>
                  </Getattr>
                </Getattr>
                <BinOp fromlineno="120" tolineno="120" lineno="120" op="%" left="&quot;Parsing error data_fn %s and fn %s don't match&quot;" right="(self.data_fn, fn)">
                  <Const fromlineno="120" tolineno="120" lineno="120" type="str">"Parsing error data_fn %s and fn %s don't match"</Const>
                  <Tuple fromlineno="120" tolineno="120" lineno="120">
                    <Getattr fromlineno="120" tolineno="120" lineno="120" attrname="data_fn" expr="self">
                      <Name fromlineno="120" tolineno="120" lineno="120" name="self"/>
                    </Getattr>
                    <Name fromlineno="120" tolineno="120" lineno="120" name="fn"/>
                  </Tuple>
                </BinOp>
              </CallFunc>
            </Discard>
          </If>
          <Assign fromlineno="122" tolineno="122" lineno="122" targets="[&lt;AssAttr(cacheclean) l.122 [bb.cache] at Ox953920c&gt;]" value="False">
            <AssAttr fromlineno="122" tolineno="122" lineno="122" attrname="cacheclean" expr="self">
              <Name fromlineno="122" tolineno="122" lineno="122" name="self"/>
            </AssAttr>
            <Const fromlineno="122" tolineno="122" lineno="122" type="bool">False</Const>
          </Assign>
          <Assign fromlineno="123" tolineno="123" lineno="123" targets="[&lt;AssName(result) l.123 [bb.cache] at Ox95392ac&gt;]" value="bb.data.getVar(var, self.data, exp)">
            <AssName fromlineno="123" tolineno="123" lineno="123" name="result"/>
            <CallFunc fromlineno="123" tolineno="123" lineno="123" func="Getattr(getVar)">
              <Getattr fromlineno="123" tolineno="123" lineno="123" attrname="getVar" expr="bb.data">
                <Getattr fromlineno="123" tolineno="123" lineno="123" attrname="data" expr="bb">
                  <Name fromlineno="123" tolineno="123" lineno="123" name="bb"/>
                </Getattr>
              </Getattr>
              <Name fromlineno="123" tolineno="123" lineno="123" name="var"/>
              <Getattr fromlineno="123" tolineno="123" lineno="123" attrname="data" expr="self">
                <Name fromlineno="123" tolineno="123" lineno="123" name="self"/>
              </Getattr>
              <Name fromlineno="123" tolineno="123" lineno="123" name="exp"/>
            </CallFunc>
          </Assign>
          <Assign fromlineno="124" tolineno="124" lineno="124" targets="[&lt;Subscript() l.124 [bb.cache] at Ox953944c&gt;]" value="result">
            <Subscript fromlineno="124" tolineno="124" lineno="124">
              <Subscript fromlineno="124" tolineno="124" lineno="124">
                <Getattr fromlineno="124" tolineno="124" lineno="124" attrname="depends_cache" expr="self">
                  <Name fromlineno="124" tolineno="124" lineno="124" name="self"/>
                </Getattr>
                <Index fromlineno="124" tolineno="124" lineno="None">
                  <Name fromlineno="124" tolineno="124" lineno="124" name="fn"/>
                </Index>
              </Subscript>
              <Index fromlineno="124" tolineno="124" lineno="None">
                <Name fromlineno="124" tolineno="124" lineno="124" name="var"/>
              </Index>
            </Subscript>
            <Name fromlineno="124" tolineno="124" lineno="124" name="result"/>
          </Assign>
          <Return fromlineno="125" tolineno="125" lineno="125">
            <Name fromlineno="125" tolineno="125" lineno="125" name="result"/>
          </Return>
        </Function>
        <Function fromlineno="127" tolineno="138" lineno="127">
          <Arguments fromlineno="127" tolineno="127" lineno="None" format_args="self, virtualfn, fn, data">
            <AssName fromlineno="127" tolineno="127" lineno="127" name="self"/>
            <AssName fromlineno="127" tolineno="127" lineno="127" name="virtualfn"/>
            <AssName fromlineno="127" tolineno="127" lineno="127" name="fn"/>
            <AssName fromlineno="127" tolineno="127" lineno="127" name="data"/>
          </Arguments>
          <Assign fromlineno="133" tolineno="133" lineno="133" targets="[&lt;AssAttr(data_fn) l.133 [bb.cache] at Ox953976c&gt;]" value="virtualfn">
            <AssAttr fromlineno="133" tolineno="133" lineno="133" attrname="data_fn" expr="self">
              <Name fromlineno="133" tolineno="133" lineno="133" name="self"/>
            </AssAttr>
            <Name fromlineno="133" tolineno="133" lineno="133" name="virtualfn"/>
          </Assign>
          <Assign fromlineno="134" tolineno="134" lineno="134" targets="[&lt;AssAttr(data) l.134 [bb.cache] at Ox953980c&gt;]" value="data">
            <AssAttr fromlineno="134" tolineno="134" lineno="134" attrname="data" expr="self">
              <Name fromlineno="134" tolineno="134" lineno="134" name="self"/>
            </AssAttr>
            <Name fromlineno="134" tolineno="134" lineno="134" name="data"/>
          </Assign>
          <Discard fromlineno="137" tolineno="137" lineno="137">
            <CallFunc fromlineno="137" tolineno="137" lineno="137" func="Getattr(getVar)">
              <Getattr fromlineno="137" tolineno="137" lineno="137" attrname="getVar" expr="self">
                <Name fromlineno="137" tolineno="137" lineno="137" name="self"/>
              </Getattr>
              <Const fromlineno="137" tolineno="137" lineno="137" type="str">'__depends'</Const>
              <Name fromlineno="137" tolineno="137" lineno="137" name="virtualfn"/>
              <Const fromlineno="137" tolineno="137" lineno="137" type="bool">True</Const>
            </CallFunc>
          </Discard>
          <Assign fromlineno="138" tolineno="138" lineno="138" targets="[&lt;Subscript() l.138 [bb.cache] at Ox95399ac&gt;]" value="bb.parse.cached_mtime(fn)">
            <Subscript fromlineno="138" tolineno="138" lineno="138">
              <Subscript fromlineno="138" tolineno="138" lineno="138">
                <Getattr fromlineno="138" tolineno="138" lineno="138" attrname="depends_cache" expr="self">
                  <Name fromlineno="138" tolineno="138" lineno="138" name="self"/>
                </Getattr>
                <Index fromlineno="138" tolineno="138" lineno="None">
                  <Name fromlineno="138" tolineno="138" lineno="138" name="virtualfn"/>
                </Index>
              </Subscript>
              <Index fromlineno="138" tolineno="138" lineno="None">
                <Const fromlineno="138" tolineno="138" lineno="138" type="str">'CACHETIMESTAMP'</Const>
              </Index>
            </Subscript>
            <CallFunc fromlineno="138" tolineno="138" lineno="138" func="Getattr(cached_mtime)">
              <Getattr fromlineno="138" tolineno="138" lineno="138" attrname="cached_mtime" expr="bb.parse">
                <Getattr fromlineno="138" tolineno="138" lineno="138" attrname="parse" expr="bb">
                  <Name fromlineno="138" tolineno="138" lineno="138" name="bb"/>
                </Getattr>
              </Getattr>
              <Name fromlineno="138" tolineno="138" lineno="138" name="fn"/>
            </CallFunc>
          </Assign>
        </Function>
        <Function fromlineno="140" tolineno="151" lineno="140">
          <Arguments fromlineno="140" tolineno="140" lineno="None" format_args="self, virtualfn">
            <AssName fromlineno="140" tolineno="140" lineno="140" name="self"/>
            <AssName fromlineno="140" tolineno="140" lineno="140" name="virtualfn"/>
          </Arguments>
          <Assign fromlineno="145" tolineno="145" lineno="145" targets="[&lt;AssName(fn) l.145 [bb.cache] at Ox9539cac&gt;]" value="virtualfn">
            <AssName fromlineno="145" tolineno="145" lineno="145" name="fn"/>
            <Name fromlineno="145" tolineno="145" lineno="145" name="virtualfn"/>
          </Assign>
          <Assign fromlineno="146" tolineno="146" lineno="146" targets="[&lt;AssName(cls) l.146 [bb.cache] at Ox9539d4c&gt;]" value="''">
            <AssName fromlineno="146" tolineno="146" lineno="146" name="cls"/>
            <Const fromlineno="146" tolineno="146" lineno="146" type="str">''</Const>
          </Assign>
          <If fromlineno="147" tolineno="149" lineno="147">
            <CallFunc fromlineno="147" tolineno="147" lineno="147" func="Getattr(startswith)">
              <Getattr fromlineno="147" tolineno="147" lineno="147" attrname="startswith" expr="virtualfn">
                <Name fromlineno="147" tolineno="147" lineno="147" name="virtualfn"/>
              </Getattr>
              <Const fromlineno="147" tolineno="147" lineno="147" type="str">'virtual:'</Const>
            </CallFunc>
            <Assign fromlineno="148" tolineno="148" lineno="148" targets="[&lt;AssName(cls) l.148 [bb.cache] at Ox9539eec&gt;]" value="virtualfn.split(':', 2)[1]">
              <AssName fromlineno="148" tolineno="148" lineno="148" name="cls"/>
              <Subscript fromlineno="148" tolineno="148" lineno="148">
                <CallFunc fromlineno="148" tolineno="148" lineno="148" func="Getattr(split)">
                  <Getattr fromlineno="148" tolineno="148" lineno="148" attrname="split" expr="virtualfn">
                    <Name fromlineno="148" tolineno="148" lineno="148" name="virtualfn"/>
                  </Getattr>
                  <Const fromlineno="148" tolineno="148" lineno="148" type="str">':'</Const>
                  <Const fromlineno="148" tolineno="148" lineno="148" type="int">2</Const>
                </CallFunc>
                <Index fromlineno="148" tolineno="148" lineno="None">
                  <Const fromlineno="148" tolineno="148" lineno="148" type="int">1</Const>
                </Index>
              </Subscript>
            </Assign>
            <Assign fromlineno="149" tolineno="149" lineno="149" targets="[&lt;AssName(fn) l.149 [bb.cache] at Ox976508c&gt;]" value="virtualfn.replace((('virtual:') + (cls)) + (':'), '')">
              <AssName fromlineno="149" tolineno="149" lineno="149" name="fn"/>
              <CallFunc fromlineno="149" tolineno="149" lineno="149" func="Getattr(replace)">
                <Getattr fromlineno="149" tolineno="149" lineno="149" attrname="replace" expr="virtualfn">
                  <Name fromlineno="149" tolineno="149" lineno="149" name="virtualfn"/>
                </Getattr>
                <BinOp fromlineno="149" tolineno="149" lineno="149" op="+" left="('virtual:') + (cls)" right="':'">
                  <BinOp fromlineno="149" tolineno="149" lineno="149" op="+" left="'virtual:'" right="cls">
                    <Const fromlineno="149" tolineno="149" lineno="149" type="str">'virtual:'</Const>
                    <Name fromlineno="149" tolineno="149" lineno="149" name="cls"/>
                  </BinOp>
                  <Const fromlineno="149" tolineno="149" lineno="149" type="str">':'</Const>
                </BinOp>
                <Const fromlineno="149" tolineno="149" lineno="149" type="str">''</Const>
              </CallFunc>
            </Assign>
          </If>
          <Return fromlineno="151" tolineno="151" lineno="151">
            <Tuple fromlineno="151" tolineno="151" lineno="151">
              <Name fromlineno="151" tolineno="151" lineno="151" name="fn"/>
              <Name fromlineno="151" tolineno="151" lineno="151" name="cls"/>
            </Tuple>
          </Return>
        </Function>
        <Function fromlineno="153" tolineno="161" lineno="153">
          <Arguments fromlineno="153" tolineno="153" lineno="None" format_args="self, realfn, cls">
            <AssName fromlineno="153" tolineno="153" lineno="153" name="self"/>
            <AssName fromlineno="153" tolineno="153" lineno="153" name="realfn"/>
            <AssName fromlineno="153" tolineno="153" lineno="153" name="cls"/>
          </Arguments>
          <If fromlineno="157" tolineno="159" lineno="157">
            <Compare fromlineno="157" tolineno="157" lineno="157" op="('==', &lt;Const(str) l.157 [bb.cache] at Ox976546c&gt;)">
              <Name fromlineno="157" tolineno="157" lineno="157" name="cls"/>
              <Const fromlineno="157" tolineno="157" lineno="157" type="str">''</Const>
            </Compare>
            <Return fromlineno="159" tolineno="159" lineno="159">
              <Name fromlineno="159" tolineno="159" lineno="159" name="realfn"/>
            </Return>
          </If>
          <Return fromlineno="161" tolineno="161" lineno="161">
            <BinOp fromlineno="161" tolineno="161" lineno="161" op="+" left="(('virtual:') + (cls)) + (':')" right="realfn">
              <BinOp fromlineno="161" tolineno="161" lineno="161" op="+" left="('virtual:') + (cls)" right="':'">
                <BinOp fromlineno="161" tolineno="161" lineno="161" op="+" left="'virtual:'" right="cls">
                  <Const fromlineno="161" tolineno="161" lineno="161" type="str">'virtual:'</Const>
                  <Name fromlineno="161" tolineno="161" lineno="161" name="cls"/>
                </BinOp>
                <Const fromlineno="161" tolineno="161" lineno="161" type="str">':'</Const>
              </BinOp>
              <Name fromlineno="161" tolineno="161" lineno="161" name="realfn"/>
            </BinOp>
          </Return>
        </Function>
        <Function fromlineno="163" tolineno="177" lineno="163">
          <Arguments fromlineno="163" tolineno="163" lineno="None" format_args="self, virtualfn, cfgData">
            <AssName fromlineno="163" tolineno="163" lineno="163" name="self"/>
            <AssName fromlineno="163" tolineno="163" lineno="163" name="virtualfn"/>
            <AssName fromlineno="163" tolineno="163" lineno="163" name="cfgData"/>
          </Arguments>
          <Assign fromlineno="169" tolineno="169" lineno="169" targets="[&lt;Tuple(tuple) l.169 [bb.cache] at Ox976578c&gt;]" value="self.virtualfn2realfn(virtualfn)">
            <Tuple fromlineno="169" tolineno="169" lineno="169">
              <AssName fromlineno="169" tolineno="169" lineno="169" name="fn"/>
              <AssName fromlineno="169" tolineno="169" lineno="169" name="cls"/>
            </Tuple>
            <CallFunc fromlineno="169" tolineno="169" lineno="169" func="Getattr(virtualfn2realfn)">
              <Getattr fromlineno="169" tolineno="169" lineno="169" attrname="virtualfn2realfn" expr="self">
                <Name fromlineno="169" tolineno="169" lineno="169" name="self"/>
              </Getattr>
              <Name fromlineno="169" tolineno="169" lineno="169" name="virtualfn"/>
            </CallFunc>
          </Assign>
          <Discard fromlineno="171" tolineno="171" lineno="171">
            <CallFunc fromlineno="171" tolineno="171" lineno="171" func="Getattr(debug)">
              <Getattr fromlineno="171" tolineno="171" lineno="171" attrname="debug" expr="bb.msg">
                <Getattr fromlineno="171" tolineno="171" lineno="171" attrname="msg" expr="bb">
                  <Name fromlineno="171" tolineno="171" lineno="171" name="bb"/>
                </Getattr>
              </Getattr>
              <Const fromlineno="171" tolineno="171" lineno="171" type="int">1</Const>
              <Getattr fromlineno="171" tolineno="171" lineno="171" attrname="Cache" expr="bb.msg.domain">
                <Getattr fromlineno="171" tolineno="171" lineno="171" attrname="domain" expr="bb.msg">
                  <Getattr fromlineno="171" tolineno="171" lineno="171" attrname="msg" expr="bb">
                    <Name fromlineno="171" tolineno="171" lineno="171" name="bb"/>
                  </Getattr>
                </Getattr>
              </Getattr>
              <BinOp fromlineno="171" tolineno="171" lineno="171" op="%" left="'Parsing %s (full)'" right="fn">
                <Const fromlineno="171" tolineno="171" lineno="171" type="str">'Parsing %s (full)'</Const>
                <Name fromlineno="171" tolineno="171" lineno="171" name="fn"/>
              </BinOp>
            </CallFunc>
          </Discard>
          <Assign fromlineno="173" tolineno="173" lineno="173" targets="[&lt;Tuple(tuple) l.173 [bb.cache] at Ox9765aec&gt;]" value="self.load_bbfile(fn, cfgData)">
            <Tuple fromlineno="173" tolineno="173" lineno="173">
              <AssName fromlineno="173" tolineno="173" lineno="173" name="bb_data"/>
              <AssName fromlineno="173" tolineno="173" lineno="173" name="skipped"/>
            </Tuple>
            <CallFunc fromlineno="173" tolineno="173" lineno="173" func="Getattr(load_bbfile)">
              <Getattr fromlineno="173" tolineno="173" lineno="173" attrname="load_bbfile" expr="self">
                <Name fromlineno="173" tolineno="173" lineno="173" name="self"/>
              </Getattr>
              <Name fromlineno="173" tolineno="173" lineno="173" name="fn"/>
              <Name fromlineno="173" tolineno="173" lineno="173" name="cfgData"/>
            </CallFunc>
          </Assign>
          <If fromlineno="174" tolineno="175" lineno="174">
            <CallFunc fromlineno="174" tolineno="174" lineno="174" func="Name(isinstance)">
              <Name fromlineno="174" tolineno="174" lineno="174" name="isinstance"/>
              <Name fromlineno="174" tolineno="174" lineno="174" name="bb_data"/>
              <Name fromlineno="174" tolineno="174" lineno="174" name="dict"/>
            </CallFunc>
            <Return fromlineno="175" tolineno="175" lineno="175">
              <Subscript fromlineno="175" tolineno="175" lineno="175">
                <Name fromlineno="175" tolineno="175" lineno="175" name="bb_data"/>
                <Index fromlineno="175" tolineno="175" lineno="None">
                  <Name fromlineno="175" tolineno="175" lineno="175" name="cls"/>
                </Index>
              </Subscript>
            </Return>
          </If>
          <Return fromlineno="177" tolineno="177" lineno="177">
            <Name fromlineno="177" tolineno="177" lineno="177" name="bb_data"/>
          </Return>
        </Function>
        <Function fromlineno="179" tolineno="222" lineno="179">
          <Arguments fromlineno="179" tolineno="179" lineno="None" format_args="self, fn, cfgData, cacheData">
            <AssName fromlineno="179" tolineno="179" lineno="179" name="self"/>
            <AssName fromlineno="179" tolineno="179" lineno="179" name="fn"/>
            <AssName fromlineno="179" tolineno="179" lineno="179" name="cfgData"/>
            <AssName fromlineno="179" tolineno="179" lineno="179" name="cacheData"/>
          </Arguments>
          <If fromlineno="187" tolineno="188" lineno="187">
            <Compare fromlineno="187" tolineno="187" lineno="187" op="('not in', &lt;Getattr(checked) l.187 [bb.cache] at Ox976b08c&gt;)">
              <Name fromlineno="187" tolineno="187" lineno="187" name="fn"/>
              <Getattr fromlineno="187" tolineno="187" lineno="187" attrname="checked" expr="self">
                <Name fromlineno="187" tolineno="187" lineno="187" name="self"/>
              </Getattr>
            </Compare>
            <Discard fromlineno="188" tolineno="188" lineno="188">
              <CallFunc fromlineno="188" tolineno="188" lineno="188" func="Getattr(cacheValidUpdate)">
                <Getattr fromlineno="188" tolineno="188" lineno="188" attrname="cacheValidUpdate" expr="self">
                  <Name fromlineno="188" tolineno="188" lineno="188" name="self"/>
                </Getattr>
                <Name fromlineno="188" tolineno="188" lineno="188" name="fn"/>
              </CallFunc>
            </Discard>
          </If>
          <If fromlineno="189" tolineno="200" lineno="189">
            <CallFunc fromlineno="189" tolineno="189" lineno="189" func="Getattr(cacheValid)">
              <Getattr fromlineno="189" tolineno="189" lineno="189" attrname="cacheValid" expr="self">
                <Name fromlineno="189" tolineno="189" lineno="189" name="self"/>
              </Getattr>
              <Name fromlineno="189" tolineno="189" lineno="189" name="fn"/>
            </CallFunc>
            <If fromlineno="190" tolineno="191" lineno="190">
              <Compare fromlineno="190" tolineno="190" lineno="190" op="('in', &lt;Subscript() l.190 [bb.cache] at Ox976b38c&gt;)">
                <Const fromlineno="190" tolineno="190" lineno="190" type="str">'SKIPPED'</Const>
                <Subscript fromlineno="190" tolineno="190" lineno="190">
                  <Getattr fromlineno="190" tolineno="190" lineno="190" attrname="depends_cache" expr="self">
                    <Name fromlineno="190" tolineno="190" lineno="190" name="self"/>
                  </Getattr>
                  <Index fromlineno="190" tolineno="190" lineno="None">
                    <Name fromlineno="190" tolineno="190" lineno="190" name="fn"/>
                  </Index>
                </Subscript>
              </Compare>
              <Return fromlineno="191" tolineno="191" lineno="191">
                <Tuple fromlineno="191" tolineno="191" lineno="191">
                  <Const fromlineno="191" tolineno="191" lineno="191" type="bool">True</Const>
                  <Const fromlineno="191" tolineno="191" lineno="191" type="bool">True</Const>
                </Tuple>
              </Return>
            </If>
            <Discard fromlineno="192" tolineno="192" lineno="192">
              <CallFunc fromlineno="192" tolineno="192" lineno="192" func="Getattr(handle_data)">
                <Getattr fromlineno="192" tolineno="192" lineno="192" attrname="handle_data" expr="self">
                  <Name fromlineno="192" tolineno="192" lineno="192" name="self"/>
                </Getattr>
                <Name fromlineno="192" tolineno="192" lineno="192" name="fn"/>
                <Name fromlineno="192" tolineno="192" lineno="192" name="cacheData"/>
              </CallFunc>
            </Discard>
            <Assign fromlineno="193" tolineno="193" lineno="193" targets="[&lt;AssName(multi) l.193 [bb.cache] at Ox976b62c&gt;]" value="self.getVar('BBCLASSEXTEND', fn, True)">
              <AssName fromlineno="193" tolineno="193" lineno="193" name="multi"/>
              <CallFunc fromlineno="193" tolineno="193" lineno="193" func="Getattr(getVar)">
                <Getattr fromlineno="193" tolineno="193" lineno="193" attrname="getVar" expr="self">
                  <Name fromlineno="193" tolineno="193" lineno="193" name="self"/>
                </Getattr>
                <Const fromlineno="193" tolineno="193" lineno="193" type="str">'BBCLASSEXTEND'</Const>
                <Name fromlineno="193" tolineno="193" lineno="193" name="fn"/>
                <Const fromlineno="193" tolineno="193" lineno="193" type="bool">True</Const>
              </CallFunc>
            </Assign>
            <If fromlineno="194" tolineno="199" lineno="194">
              <Name fromlineno="194" tolineno="194" lineno="194" name="multi"/>
              <For fromlineno="195" tolineno="199" lineno="195">
                <AssName fromlineno="195" tolineno="195" lineno="195" name="cls"/>
                <CallFunc fromlineno="195" tolineno="195" lineno="195" func="Getattr(split)">
                  <Getattr fromlineno="195" tolineno="195" lineno="195" attrname="split" expr="multi">
                    <Name fromlineno="195" tolineno="195" lineno="195" name="multi"/>
                  </Getattr>
                </CallFunc>
                <Assign fromlineno="196" tolineno="196" lineno="196" targets="[&lt;AssName(virtualfn) l.196 [bb.cache] at Ox976b92c&gt;]" value="self.realfn2virtual(fn, cls)">
                  <AssName fromlineno="196" tolineno="196" lineno="196" name="virtualfn"/>
                  <CallFunc fromlineno="196" tolineno="196" lineno="196" func="Getattr(realfn2virtual)">
                    <Getattr fromlineno="196" tolineno="196" lineno="196" attrname="realfn2virtual" expr="self">
                      <Name fromlineno="196" tolineno="196" lineno="196" name="self"/>
                    </Getattr>
                    <Name fromlineno="196" tolineno="196" lineno="196" name="fn"/>
                    <Name fromlineno="196" tolineno="196" lineno="196" name="cls"/>
                  </CallFunc>
                </Assign>
                <Assign fromlineno="198" tolineno="198" lineno="198" targets="[&lt;Subscript() l.198 [bb.cache] at Ox976ba6c&gt;]" value="''">
                  <Subscript fromlineno="198" tolineno="198" lineno="198">
                    <Getattr fromlineno="198" tolineno="198" lineno="198" attrname="clean" expr="self">
                      <Name fromlineno="198" tolineno="198" lineno="198" name="self"/>
                    </Getattr>
                    <Index fromlineno="198" tolineno="198" lineno="None">
                      <Name fromlineno="198" tolineno="198" lineno="198" name="virtualfn"/>
                    </Index>
                  </Subscript>
                  <Const fromlineno="198" tolineno="198" lineno="198" type="str">''</Const>
                </Assign>
                <Discard fromlineno="199" tolineno="199" lineno="199">
                  <CallFunc fromlineno="199" tolineno="199" lineno="199" func="Getattr(handle_data)">
                    <Getattr fromlineno="199" tolineno="199" lineno="199" attrname="handle_data" expr="self">
                      <Name fromlineno="199" tolineno="199" lineno="199" name="self"/>
                    </Getattr>
                    <Name fromlineno="199" tolineno="199" lineno="199" name="virtualfn"/>
                    <Name fromlineno="199" tolineno="199" lineno="199" name="cacheData"/>
                  </CallFunc>
                </Discard>
              </For>
            </If>
            <Return fromlineno="200" tolineno="200" lineno="200">
              <Tuple fromlineno="200" tolineno="200" lineno="200">
                <Const fromlineno="200" tolineno="200" lineno="200" type="bool">True</Const>
                <Const fromlineno="200" tolineno="200" lineno="200" type="bool">False</Const>
              </Tuple>
            </Return>
          </If>
          <Discard fromlineno="202" tolineno="202" lineno="202">
            <CallFunc fromlineno="202" tolineno="202" lineno="202" func="Getattr(debug)">
              <Getattr fromlineno="202" tolineno="202" lineno="202" attrname="debug" expr="bb.msg">
                <Getattr fromlineno="202" tolineno="202" lineno="202" attrname="msg" expr="bb">
                  <Name fromlineno="202" tolineno="202" lineno="202" name="bb"/>
                </Getattr>
              </Getattr>
              <Const fromlineno="202" tolineno="202" lineno="202" type="int">1</Const>
              <Getattr fromlineno="202" tolineno="202" lineno="202" attrname="Cache" expr="bb.msg.domain">
                <Getattr fromlineno="202" tolineno="202" lineno="202" attrname="domain" expr="bb.msg">
                  <Getattr fromlineno="202" tolineno="202" lineno="202" attrname="msg" expr="bb">
                    <Name fromlineno="202" tolineno="202" lineno="202" name="bb"/>
                  </Getattr>
                </Getattr>
              </Getattr>
              <BinOp fromlineno="202" tolineno="202" lineno="202" op="%" left="'Parsing %s'" right="fn">
                <Const fromlineno="202" tolineno="202" lineno="202" type="str">'Parsing %s'</Const>
                <Name fromlineno="202" tolineno="202" lineno="202" name="fn"/>
              </BinOp>
            </CallFunc>
          </Discard>
          <Assign fromlineno="204" tolineno="204" lineno="204" targets="[&lt;Tuple(tuple) l.204 [bb.cache] at Ox976be8c&gt;]" value="self.load_bbfile(fn, cfgData)">
            <Tuple fromlineno="204" tolineno="204" lineno="204">
              <AssName fromlineno="204" tolineno="204" lineno="204" name="bb_data"/>
              <AssName fromlineno="204" tolineno="204" lineno="204" name="skipped"/>
            </Tuple>
            <CallFunc fromlineno="204" tolineno="204" lineno="204" func="Getattr(load_bbfile)">
              <Getattr fromlineno="204" tolineno="204" lineno="204" attrname="load_bbfile" expr="self">
                <Name fromlineno="204" tolineno="204" lineno="204" name="self"/>
              </Getattr>
              <Name fromlineno="204" tolineno="204" lineno="204" name="fn"/>
              <Name fromlineno="204" tolineno="204" lineno="204" name="cfgData"/>
            </CallFunc>
          </Assign>
          <If fromlineno="206" tolineno="211" lineno="206">
            <Name fromlineno="206" tolineno="206" lineno="206" name="skipped"/>
            <If fromlineno="207" tolineno="210" lineno="207">
              <CallFunc fromlineno="207" tolineno="207" lineno="207" func="Name(isinstance)">
                <Name fromlineno="207" tolineno="207" lineno="207" name="isinstance"/>
                <Name fromlineno="207" tolineno="207" lineno="207" name="bb_data"/>
                <Name fromlineno="207" tolineno="207" lineno="207" name="dict"/>
              </CallFunc>
              <Discard fromlineno="208" tolineno="208" lineno="208">
                <CallFunc fromlineno="208" tolineno="208" lineno="208" func="Getattr(setData)">
                  <Getattr fromlineno="208" tolineno="208" lineno="208" attrname="setData" expr="self">
                    <Name fromlineno="208" tolineno="208" lineno="208" name="self"/>
                  </Getattr>
                  <Name fromlineno="208" tolineno="208" lineno="208" name="fn"/>
                  <Name fromlineno="208" tolineno="208" lineno="208" name="fn"/>
                  <Subscript fromlineno="208" tolineno="208" lineno="208">
                    <Name fromlineno="208" tolineno="208" lineno="208" name="bb_data"/>
                    <Index fromlineno="208" tolineno="208" lineno="None">
                      <Const fromlineno="208" tolineno="208" lineno="208" type="str">''</Const>
                    </Index>
                  </Subscript>
                </CallFunc>
              </Discard>
              <Discard fromlineno="210" tolineno="210" lineno="210">
                <CallFunc fromlineno="210" tolineno="210" lineno="210" func="Getattr(setData)">
                  <Getattr fromlineno="210" tolineno="210" lineno="210" attrname="setData" expr="self">
                    <Name fromlineno="210" tolineno="210" lineno="210" name="self"/>
                  </Getattr>
                  <Name fromlineno="210" tolineno="210" lineno="210" name="fn"/>
                  <Name fromlineno="210" tolineno="210" lineno="210" name="fn"/>
                  <Name fromlineno="210" tolineno="210" lineno="210" name="bb_data"/>
                </CallFunc>
              </Discard>
            </If>
            <Return fromlineno="211" tolineno="211" lineno="211">
              <Tuple fromlineno="211" tolineno="211" lineno="211">
                <Const fromlineno="211" tolineno="211" lineno="211" type="bool">False</Const>
                <Name fromlineno="211" tolineno="211" lineno="211" name="skipped"/>
              </Tuple>
            </Return>
          </If>
          <If fromlineno="213" tolineno="218" lineno="213">
            <CallFunc fromlineno="213" tolineno="213" lineno="213" func="Name(isinstance)">
              <Name fromlineno="213" tolineno="213" lineno="213" name="isinstance"/>
              <Name fromlineno="213" tolineno="213" lineno="213" name="bb_data"/>
              <Name fromlineno="213" tolineno="213" lineno="213" name="dict"/>
            </CallFunc>
            <For fromlineno="214" tolineno="217" lineno="214">
              <AssName fromlineno="214" tolineno="214" lineno="214" name="data"/>
              <Name fromlineno="214" tolineno="214" lineno="214" name="bb_data"/>
              <Assign fromlineno="215" tolineno="215" lineno="215" targets="[&lt;AssName(virtualfn) l.215 [bb.cache] at Ox976f6ac&gt;]" value="self.realfn2virtual(fn, data)">
                <AssName fromlineno="215" tolineno="215" lineno="215" name="virtualfn"/>
                <CallFunc fromlineno="215" tolineno="215" lineno="215" func="Getattr(realfn2virtual)">
                  <Getattr fromlineno="215" tolineno="215" lineno="215" attrname="realfn2virtual" expr="self">
                    <Name fromlineno="215" tolineno="215" lineno="215" name="self"/>
                  </Getattr>
                  <Name fromlineno="215" tolineno="215" lineno="215" name="fn"/>
                  <Name fromlineno="215" tolineno="215" lineno="215" name="data"/>
                </CallFunc>
              </Assign>
              <Discard fromlineno="216" tolineno="216" lineno="216">
                <CallFunc fromlineno="216" tolineno="216" lineno="216" func="Getattr(setData)">
                  <Getattr fromlineno="216" tolineno="216" lineno="216" attrname="setData" expr="self">
                    <Name fromlineno="216" tolineno="216" lineno="216" name="self"/>
                  </Getattr>
                  <Name fromlineno="216" tolineno="216" lineno="216" name="virtualfn"/>
                  <Name fromlineno="216" tolineno="216" lineno="216" name="fn"/>
                  <Subscript fromlineno="216" tolineno="216" lineno="216">
                    <Name fromlineno="216" tolineno="216" lineno="216" name="bb_data"/>
                    <Index fromlineno="216" tolineno="216" lineno="None">
                      <Name fromlineno="216" tolineno="216" lineno="216" name="data"/>
                    </Index>
                  </Subscript>
                </CallFunc>
              </Discard>
              <Discard fromlineno="217" tolineno="217" lineno="217">
                <CallFunc fromlineno="217" tolineno="217" lineno="217" func="Getattr(handle_data)">
                  <Getattr fromlineno="217" tolineno="217" lineno="217" attrname="handle_data" expr="self">
                    <Name fromlineno="217" tolineno="217" lineno="217" name="self"/>
                  </Getattr>
                  <Name fromlineno="217" tolineno="217" lineno="217" name="virtualfn"/>
                  <Name fromlineno="217" tolineno="217" lineno="217" name="cacheData"/>
                </CallFunc>
              </Discard>
            </For>
            <Return fromlineno="218" tolineno="218" lineno="218">
              <Tuple fromlineno="218" tolineno="218" lineno="218">
                <Const fromlineno="218" tolineno="218" lineno="218" type="bool">False</Const>
                <Name fromlineno="218" tolineno="218" lineno="218" name="skipped"/>
              </Tuple>
            </Return>
          </If>
          <Discard fromlineno="220" tolineno="220" lineno="220">
            <CallFunc fromlineno="220" tolineno="220" lineno="220" func="Getattr(setData)">
              <Getattr fromlineno="220" tolineno="220" lineno="220" attrname="setData" expr="self">
                <Name fromlineno="220" tolineno="220" lineno="220" name="self"/>
              </Getattr>
              <Name fromlineno="220" tolineno="220" lineno="220" name="fn"/>
              <Name fromlineno="220" tolineno="220" lineno="220" name="fn"/>
              <Name fromlineno="220" tolineno="220" lineno="220" name="bb_data"/>
            </CallFunc>
          </Discard>
          <Discard fromlineno="221" tolineno="221" lineno="221">
            <CallFunc fromlineno="221" tolineno="221" lineno="221" func="Getattr(handle_data)">
              <Getattr fromlineno="221" tolineno="221" lineno="221" attrname="handle_data" expr="self">
                <Name fromlineno="221" tolineno="221" lineno="221" name="self"/>
              </Getattr>
              <Name fromlineno="221" tolineno="221" lineno="221" name="fn"/>
              <Name fromlineno="221" tolineno="221" lineno="221" name="cacheData"/>
            </CallFunc>
          </Discard>
          <Return fromlineno="222" tolineno="222" lineno="222">
            <Tuple fromlineno="222" tolineno="222" lineno="222">
              <Const fromlineno="222" tolineno="222" lineno="222" type="bool">False</Const>
              <Name fromlineno="222" tolineno="222" lineno="222" name="skipped"/>
            </Tuple>
          </Return>
        </Function>
        <Function fromlineno="224" tolineno="234" lineno="224">
          <Arguments fromlineno="224" tolineno="224" lineno="None" format_args="self, fn">
            <AssName fromlineno="224" tolineno="224" lineno="224" name="self"/>
            <AssName fromlineno="224" tolineno="224" lineno="224" name="fn"/>
          </Arguments>
          <If fromlineno="230" tolineno="231" lineno="230">
            <UnaryOp fromlineno="230" tolineno="230" lineno="230">
              <Getattr fromlineno="230" tolineno="230" lineno="230" attrname="has_cache" expr="self">
                <Name fromlineno="230" tolineno="230" lineno="230" name="self"/>
              </Getattr>
            </UnaryOp>
            <Return fromlineno="231" tolineno="231" lineno="231">
              <Const fromlineno="231" tolineno="231" lineno="231" type="bool">False</Const>
            </Return>
          </If>
          <If fromlineno="232" tolineno="233" lineno="232">
            <Compare fromlineno="232" tolineno="232" lineno="232" op="('in', &lt;Getattr(clean) l.232 [bb.cache] at Ox976ff8c&gt;)">
              <Name fromlineno="232" tolineno="232" lineno="232" name="fn"/>
              <Getattr fromlineno="232" tolineno="232" lineno="232" attrname="clean" expr="self">
                <Name fromlineno="232" tolineno="232" lineno="232" name="self"/>
              </Getattr>
            </Compare>
            <Return fromlineno="233" tolineno="233" lineno="233">
              <Const fromlineno="233" tolineno="233" lineno="233" type="bool">True</Const>
            </Return>
          </If>
          <Return fromlineno="234" tolineno="234" lineno="234">
            <Const fromlineno="234" tolineno="234" lineno="234" type="bool">False</Const>
          </Return>
        </Function>
        <Function fromlineno="236" tolineno="289" lineno="236">
          <Arguments fromlineno="236" tolineno="236" lineno="None" format_args="self, fn">
            <AssName fromlineno="236" tolineno="236" lineno="236" name="self"/>
            <AssName fromlineno="236" tolineno="236" lineno="236" name="fn"/>
          </Arguments>
          <If fromlineno="242" tolineno="243" lineno="242">
            <UnaryOp fromlineno="242" tolineno="242" lineno="242">
              <Getattr fromlineno="242" tolineno="242" lineno="242" attrname="has_cache" expr="self">
                <Name fromlineno="242" tolineno="242" lineno="242" name="self"/>
              </Getattr>
            </UnaryOp>
            <Return fromlineno="243" tolineno="243" lineno="243">
              <Const fromlineno="243" tolineno="243" lineno="243" type="bool">False</Const>
            </Return>
          </If>
          <Assign fromlineno="245" tolineno="245" lineno="245" targets="[&lt;Subscript() l.245 [bb.cache] at Ox97732ec&gt;]" value="''">
            <Subscript fromlineno="245" tolineno="245" lineno="245">
              <Getattr fromlineno="245" tolineno="245" lineno="245" attrname="checked" expr="self">
                <Name fromlineno="245" tolineno="245" lineno="245" name="self"/>
              </Getattr>
              <Index fromlineno="245" tolineno="245" lineno="None">
                <Name fromlineno="245" tolineno="245" lineno="245" name="fn"/>
              </Index>
            </Subscript>
            <Const fromlineno="245" tolineno="245" lineno="245" type="str">''</Const>
          </Assign>
          <Assign fromlineno="248" tolineno="248" lineno="248" targets="[&lt;Subscript() l.248 [bb.cache] at Ox97733ec&gt;]" value="''">
            <Subscript fromlineno="248" tolineno="248" lineno="248">
              <Getattr fromlineno="248" tolineno="248" lineno="248" attrname="clean" expr="self">
                <Name fromlineno="248" tolineno="248" lineno="248" name="self"/>
              </Getattr>
              <Index fromlineno="248" tolineno="248" lineno="None">
                <Name fromlineno="248" tolineno="248" lineno="248" name="fn"/>
              </Index>
            </Subscript>
            <Const fromlineno="248" tolineno="248" lineno="248" type="str">''</Const>
          </Assign>
          <If fromlineno="251" tolineno="254" lineno="251">
            <UnaryOp fromlineno="251" tolineno="251" lineno="251">
              <Compare fromlineno="251" tolineno="251" lineno="251" op="('in', &lt;Getattr(depends_cache) l.251 [bb.cache] at Ox977356c&gt;)">
                <Name fromlineno="251" tolineno="251" lineno="251" name="fn"/>
                <Getattr fromlineno="251" tolineno="251" lineno="251" attrname="depends_cache" expr="self">
                  <Name fromlineno="251" tolineno="251" lineno="251" name="self"/>
                </Getattr>
              </Compare>
            </UnaryOp>
            <Discard fromlineno="252" tolineno="252" lineno="252">
              <CallFunc fromlineno="252" tolineno="252" lineno="252" func="Getattr(debug)">
                <Getattr fromlineno="252" tolineno="252" lineno="252" attrname="debug" expr="bb.msg">
                  <Getattr fromlineno="252" tolineno="252" lineno="252" attrname="msg" expr="bb">
                    <Name fromlineno="252" tolineno="252" lineno="252" name="bb"/>
                  </Getattr>
                </Getattr>
                <Const fromlineno="252" tolineno="252" lineno="252" type="int">2</Const>
                <Getattr fromlineno="252" tolineno="252" lineno="252" attrname="Cache" expr="bb.msg.domain">
                  <Getattr fromlineno="252" tolineno="252" lineno="252" attrname="domain" expr="bb.msg">
                    <Getattr fromlineno="252" tolineno="252" lineno="252" attrname="msg" expr="bb">
                      <Name fromlineno="252" tolineno="252" lineno="252" name="bb"/>
                    </Getattr>
                  </Getattr>
                </Getattr>
                <BinOp fromlineno="252" tolineno="252" lineno="252" op="%" left="'Cache: %s is not cached'" right="fn">
                  <Const fromlineno="252" tolineno="252" lineno="252" type="str">'Cache: %s is not cached'</Const>
                  <Name fromlineno="252" tolineno="252" lineno="252" name="fn"/>
                </BinOp>
              </CallFunc>
            </Discard>
            <Discard fromlineno="253" tolineno="253" lineno="253">
              <CallFunc fromlineno="253" tolineno="253" lineno="253" func="Getattr(remove)">
                <Getattr fromlineno="253" tolineno="253" lineno="253" attrname="remove" expr="self">
                  <Name fromlineno="253" tolineno="253" lineno="253" name="self"/>
                </Getattr>
                <Name fromlineno="253" tolineno="253" lineno="253" name="fn"/>
              </CallFunc>
            </Discard>
            <Return fromlineno="254" tolineno="254" lineno="254">
              <Const fromlineno="254" tolineno="254" lineno="254" type="bool">False</Const>
            </Return>
          </If>
          <Assign fromlineno="256" tolineno="256" lineno="256" targets="[&lt;AssName(mtime) l.256 [bb.cache] at Ox97738ec&gt;]" value="bb.parse.cached_mtime_noerror(fn)">
            <AssName fromlineno="256" tolineno="256" lineno="256" name="mtime"/>
            <CallFunc fromlineno="256" tolineno="256" lineno="256" func="Getattr(cached_mtime_noerror)">
              <Getattr fromlineno="256" tolineno="256" lineno="256" attrname="cached_mtime_noerror" expr="bb.parse">
                <Getattr fromlineno="256" tolineno="256" lineno="256" attrname="parse" expr="bb">
                  <Name fromlineno="256" tolineno="256" lineno="256" name="bb"/>
                </Getattr>
              </Getattr>
              <Name fromlineno="256" tolineno="256" lineno="256" name="fn"/>
            </CallFunc>
          </Assign>
          <If fromlineno="259" tolineno="262" lineno="259">
            <Compare fromlineno="259" tolineno="259" lineno="259" op="('==', &lt;Const(int) l.259 [bb.cache] at Ox9773a8c&gt;)">
              <Name fromlineno="259" tolineno="259" lineno="259" name="mtime"/>
              <Const fromlineno="259" tolineno="259" lineno="259" type="int">0</Const>
            </Compare>
            <Discard fromlineno="260" tolineno="260" lineno="260">
              <CallFunc fromlineno="260" tolineno="260" lineno="260" func="Getattr(debug)">
                <Getattr fromlineno="260" tolineno="260" lineno="260" attrname="debug" expr="bb.msg">
                  <Getattr fromlineno="260" tolineno="260" lineno="260" attrname="msg" expr="bb">
                    <Name fromlineno="260" tolineno="260" lineno="260" name="bb"/>
                  </Getattr>
                </Getattr>
                <Const fromlineno="260" tolineno="260" lineno="260" type="int">2</Const>
                <Getattr fromlineno="260" tolineno="260" lineno="260" attrname="Cache" expr="bb.msg.domain">
                  <Getattr fromlineno="260" tolineno="260" lineno="260" attrname="domain" expr="bb.msg">
                    <Getattr fromlineno="260" tolineno="260" lineno="260" attrname="msg" expr="bb">
                      <Name fromlineno="260" tolineno="260" lineno="260" name="bb"/>
                    </Getattr>
                  </Getattr>
                </Getattr>
                <BinOp fromlineno="260" tolineno="260" lineno="260" op="%" left="'Cache: %s not longer exists'" right="fn">
                  <Const fromlineno="260" tolineno="260" lineno="260" type="str">'Cache: %s not longer exists'</Const>
                  <Name fromlineno="260" tolineno="260" lineno="260" name="fn"/>
                </BinOp>
              </CallFunc>
            </Discard>
            <Discard fromlineno="261" tolineno="261" lineno="261">
              <CallFunc fromlineno="261" tolineno="261" lineno="261" func="Getattr(remove)">
                <Getattr fromlineno="261" tolineno="261" lineno="261" attrname="remove" expr="self">
                  <Name fromlineno="261" tolineno="261" lineno="261" name="self"/>
                </Getattr>
                <Name fromlineno="261" tolineno="261" lineno="261" name="fn"/>
              </CallFunc>
            </Discard>
            <Return fromlineno="262" tolineno="262" lineno="262">
              <Const fromlineno="262" tolineno="262" lineno="262" type="bool">False</Const>
            </Return>
          </If>
          <If fromlineno="265" tolineno="268" lineno="265">
            <Compare fromlineno="265" tolineno="265" lineno="265" op="('!=', &lt;CallFunc() l.265 [bb.cache] at Ox9773e4c&gt;)">
              <Name fromlineno="265" tolineno="265" lineno="265" name="mtime"/>
              <CallFunc fromlineno="265" tolineno="265" lineno="265" func="Getattr(getVar)">
                <Getattr fromlineno="265" tolineno="265" lineno="265" attrname="getVar" expr="self">
                  <Name fromlineno="265" tolineno="265" lineno="265" name="self"/>
                </Getattr>
                <Const fromlineno="265" tolineno="265" lineno="265" type="str">'CACHETIMESTAMP'</Const>
                <Name fromlineno="265" tolineno="265" lineno="265" name="fn"/>
                <Const fromlineno="265" tolineno="265" lineno="265" type="bool">True</Const>
              </CallFunc>
            </Compare>
            <Discard fromlineno="266" tolineno="266" lineno="266">
              <CallFunc fromlineno="266" tolineno="266" lineno="266" func="Getattr(debug)">
                <Getattr fromlineno="266" tolineno="266" lineno="266" attrname="debug" expr="bb.msg">
                  <Getattr fromlineno="266" tolineno="266" lineno="266" attrname="msg" expr="bb">
                    <Name fromlineno="266" tolineno="266" lineno="266" name="bb"/>
                  </Getattr>
                </Getattr>
                <Const fromlineno="266" tolineno="266" lineno="266" type="int">2</Const>
                <Getattr fromlineno="266" tolineno="266" lineno="266" attrname="Cache" expr="bb.msg.domain">
                  <Getattr fromlineno="266" tolineno="266" lineno="266" attrname="domain" expr="bb.msg">
                    <Getattr fromlineno="266" tolineno="266" lineno="266" attrname="msg" expr="bb">
                      <Name fromlineno="266" tolineno="266" lineno="266" name="bb"/>
                    </Getattr>
                  </Getattr>
                </Getattr>
                <BinOp fromlineno="266" tolineno="266" lineno="266" op="%" left="'Cache: %s changed'" right="fn">
                  <Const fromlineno="266" tolineno="266" lineno="266" type="str">'Cache: %s changed'</Const>
                  <Name fromlineno="266" tolineno="266" lineno="266" name="fn"/>
                </BinOp>
              </CallFunc>
            </Discard>
            <Discard fromlineno="267" tolineno="267" lineno="267">
              <CallFunc fromlineno="267" tolineno="267" lineno="267" func="Getattr(remove)">
                <Getattr fromlineno="267" tolineno="267" lineno="267" attrname="remove" expr="self">
                  <Name fromlineno="267" tolineno="267" lineno="267" name="self"/>
                </Getattr>
                <Name fromlineno="267" tolineno="267" lineno="267" name="fn"/>
              </CallFunc>
            </Discard>
            <Return fromlineno="268" tolineno="268" lineno="268">
              <Const fromlineno="268" tolineno="268" lineno="268" type="bool">False</Const>
            </Return>
          </If>
          <Assign fromlineno="271" tolineno="271" lineno="271" targets="[&lt;AssName(depends) l.271 [bb.cache] at Ox977828c&gt;]" value="self.getVar('__depends', fn, True)">
            <AssName fromlineno="271" tolineno="271" lineno="271" name="depends"/>
            <CallFunc fromlineno="271" tolineno="271" lineno="271" func="Getattr(getVar)">
              <Getattr fromlineno="271" tolineno="271" lineno="271" attrname="getVar" expr="self">
                <Name fromlineno="271" tolineno="271" lineno="271" name="self"/>
              </Getattr>
              <Const fromlineno="271" tolineno="271" lineno="271" type="str">'__depends'</Const>
              <Name fromlineno="271" tolineno="271" lineno="271" name="fn"/>
              <Const fromlineno="271" tolineno="271" lineno="271" type="bool">True</Const>
            </CallFunc>
          </Assign>
          <If fromlineno="272" tolineno="283" lineno="272">
            <Name fromlineno="272" tolineno="272" lineno="272" name="depends"/>
            <For fromlineno="273" tolineno="283" lineno="273">
              <Tuple fromlineno="273" tolineno="273" lineno="273">
                <AssName fromlineno="273" tolineno="273" lineno="273" name="f"/>
                <AssName fromlineno="273" tolineno="273" lineno="273" name="old_mtime"/>
              </Tuple>
              <Name fromlineno="273" tolineno="273" lineno="273" name="depends"/>
              <Assign fromlineno="274" tolineno="274" lineno="274" targets="[&lt;AssName(fmtime) l.274 [bb.cache] at Ox97785ac&gt;]" value="bb.parse.cached_mtime_noerror(f)">
                <AssName fromlineno="274" tolineno="274" lineno="274" name="fmtime"/>
                <CallFunc fromlineno="274" tolineno="274" lineno="274" func="Getattr(cached_mtime_noerror)">
                  <Getattr fromlineno="274" tolineno="274" lineno="274" attrname="cached_mtime_noerror" expr="bb.parse">
                    <Getattr fromlineno="274" tolineno="274" lineno="274" attrname="parse" expr="bb">
                      <Name fromlineno="274" tolineno="274" lineno="274" name="bb"/>
                    </Getattr>
                  </Getattr>
                  <Name fromlineno="274" tolineno="274" lineno="274" name="f"/>
                </CallFunc>
              </Assign>
              <If fromlineno="276" tolineno="278" lineno="276">
                <Compare fromlineno="276" tolineno="276" lineno="276" op="('==', &lt;Const(int) l.276 [bb.cache] at Ox977876c&gt;)">
                  <Name fromlineno="276" tolineno="276" lineno="276" name="fmtime"/>
                  <Const fromlineno="276" tolineno="276" lineno="276" type="int">0</Const>
                </Compare>
                <Discard fromlineno="277" tolineno="277" lineno="277">
                  <CallFunc fromlineno="277" tolineno="277" lineno="277" func="Getattr(remove)">
                    <Getattr fromlineno="277" tolineno="277" lineno="277" attrname="remove" expr="self">
                      <Name fromlineno="277" tolineno="277" lineno="277" name="self"/>
                    </Getattr>
                    <Name fromlineno="277" tolineno="277" lineno="277" name="fn"/>
                  </CallFunc>
                </Discard>
                <Return fromlineno="278" tolineno="278" lineno="278">
                  <Const fromlineno="278" tolineno="278" lineno="278" type="bool">False</Const>
                </Return>
              </If>
              <If fromlineno="280" tolineno="283" lineno="280">
                <Compare fromlineno="280" tolineno="280" lineno="280" op="('!=', &lt;Name(old_mtime) l.280 [bb.cache] at Ox977896c&gt;)">
                  <Name fromlineno="280" tolineno="280" lineno="280" name="fmtime"/>
                  <Name fromlineno="280" tolineno="280" lineno="280" name="old_mtime"/>
                </Compare>
                <Discard fromlineno="281" tolineno="281" lineno="281">
                  <CallFunc fromlineno="281" tolineno="281" lineno="281" func="Getattr(debug)">
                    <Getattr fromlineno="281" tolineno="281" lineno="281" attrname="debug" expr="bb.msg">
                      <Getattr fromlineno="281" tolineno="281" lineno="281" attrname="msg" expr="bb">
                        <Name fromlineno="281" tolineno="281" lineno="281" name="bb"/>
                      </Getattr>
                    </Getattr>
                    <Const fromlineno="281" tolineno="281" lineno="281" type="int">2</Const>
                    <Getattr fromlineno="281" tolineno="281" lineno="281" attrname="Cache" expr="bb.msg.domain">
                      <Getattr fromlineno="281" tolineno="281" lineno="281" attrname="domain" expr="bb.msg">
                        <Getattr fromlineno="281" tolineno="281" lineno="281" attrname="msg" expr="bb">
                          <Name fromlineno="281" tolineno="281" lineno="281" name="bb"/>
                        </Getattr>
                      </Getattr>
                    </Getattr>
                    <BinOp fromlineno="281" tolineno="281" lineno="281" op="%" left="&quot;Cache: %s's dependency %s changed&quot;" right="(fn, f)">
                      <Const fromlineno="281" tolineno="281" lineno="281" type="str">"Cache: %s's dependency %s changed"</Const>
                      <Tuple fromlineno="281" tolineno="281" lineno="281">
                        <Name fromlineno="281" tolineno="281" lineno="281" name="fn"/>
                        <Name fromlineno="281" tolineno="281" lineno="281" name="f"/>
                      </Tuple>
                    </BinOp>
                  </CallFunc>
                </Discard>
                <Discard fromlineno="282" tolineno="282" lineno="282">
                  <CallFunc fromlineno="282" tolineno="282" lineno="282" func="Getattr(remove)">
                    <Getattr fromlineno="282" tolineno="282" lineno="282" attrname="remove" expr="self">
                      <Name fromlineno="282" tolineno="282" lineno="282" name="self"/>
                    </Getattr>
                    <Name fromlineno="282" tolineno="282" lineno="282" name="fn"/>
                  </CallFunc>
                </Discard>
                <Return fromlineno="283" tolineno="283" lineno="283">
                  <Const fromlineno="283" tolineno="283" lineno="283" type="bool">False</Const>
                </Return>
              </If>
            </For>
          </If>
          <If fromlineno="286" tolineno="287" lineno="286">
            <UnaryOp fromlineno="286" tolineno="286" lineno="286">
              <Compare fromlineno="286" tolineno="286" lineno="286" op="('in', &lt;Getattr(clean) l.286 [bb.cache] at Ox9778d8c&gt;)">
                <Name fromlineno="286" tolineno="286" lineno="286" name="fn"/>
                <Getattr fromlineno="286" tolineno="286" lineno="286" attrname="clean" expr="self">
                  <Name fromlineno="286" tolineno="286" lineno="286" name="self"/>
                </Getattr>
              </Compare>
            </UnaryOp>
            <Assign fromlineno="287" tolineno="287" lineno="287" targets="[&lt;Subscript() l.287 [bb.cache] at Ox9778e4c&gt;]" value="''">
              <Subscript fromlineno="287" tolineno="287" lineno="287">
                <Getattr fromlineno="287" tolineno="287" lineno="287" attrname="clean" expr="self">
                  <Name fromlineno="287" tolineno="287" lineno="287" name="self"/>
                </Getattr>
                <Index fromlineno="287" tolineno="287" lineno="None">
                  <Name fromlineno="287" tolineno="287" lineno="287" name="fn"/>
                </Index>
              </Subscript>
              <Const fromlineno="287" tolineno="287" lineno="287" type="str">''</Const>
            </Assign>
          </If>
          <Return fromlineno="289" tolineno="289" lineno="289">
            <Const fromlineno="289" tolineno="289" lineno="289" type="bool">True</Const>
          </Return>
        </Function>
        <Function fromlineno="291" tolineno="298" lineno="291">
          <Arguments fromlineno="291" tolineno="291" lineno="None" format_args="self, fn">
            <AssName fromlineno="291" tolineno="291" lineno="291" name="self"/>
            <AssName fromlineno="291" tolineno="291" lineno="291" name="fn"/>
          </Arguments>
          <If fromlineno="296" tolineno="297" lineno="296">
            <UnaryOp fromlineno="296" tolineno="296" lineno="296">
              <Compare fromlineno="296" tolineno="296" lineno="296" op="('in', &lt;Getattr(depends_cache) l.296 [bb.cache] at Ox977c12c&gt;)">
                <Name fromlineno="296" tolineno="296" lineno="296" name="fn"/>
                <Getattr fromlineno="296" tolineno="296" lineno="296" attrname="depends_cache" expr="self">
                  <Name fromlineno="296" tolineno="296" lineno="296" name="self"/>
                </Getattr>
              </Compare>
            </UnaryOp>
            <Assign fromlineno="297" tolineno="297" lineno="297" targets="[&lt;Subscript() l.297 [bb.cache] at Ox977c1ec&gt;]" value="{}">
              <Subscript fromlineno="297" tolineno="297" lineno="297">
                <Getattr fromlineno="297" tolineno="297" lineno="297" attrname="depends_cache" expr="self">
                  <Name fromlineno="297" tolineno="297" lineno="297" name="self"/>
                </Getattr>
                <Index fromlineno="297" tolineno="297" lineno="None">
                  <Name fromlineno="297" tolineno="297" lineno="297" name="fn"/>
                </Index>
              </Subscript>
              <Dict fromlineno="297" tolineno="297" lineno="297"/>
            </Assign>
          </If>
          <Assign fromlineno="298" tolineno="298" lineno="298" targets="[&lt;Subscript() l.298 [bb.cache] at Ox977c30c&gt;]" value="'1'">
            <Subscript fromlineno="298" tolineno="298" lineno="298">
              <Subscript fromlineno="298" tolineno="298" lineno="298">
                <Getattr fromlineno="298" tolineno="298" lineno="298" attrname="depends_cache" expr="self">
                  <Name fromlineno="298" tolineno="298" lineno="298" name="self"/>
                </Getattr>
                <Index fromlineno="298" tolineno="298" lineno="None">
                  <Name fromlineno="298" tolineno="298" lineno="298" name="fn"/>
                </Index>
              </Subscript>
              <Index fromlineno="298" tolineno="298" lineno="None">
                <Const fromlineno="298" tolineno="298" lineno="298" type="str">'SKIPPED'</Const>
              </Index>
            </Subscript>
            <Const fromlineno="298" tolineno="298" lineno="298" type="str">'1'</Const>
          </Assign>
        </Function>
        <Function fromlineno="300" tolineno="309" lineno="300">
          <Arguments fromlineno="300" tolineno="300" lineno="None" format_args="self, fn">
            <AssName fromlineno="300" tolineno="300" lineno="300" name="self"/>
            <AssName fromlineno="300" tolineno="300" lineno="300" name="fn"/>
          </Arguments>
          <Discard fromlineno="305" tolineno="305" lineno="305">
            <CallFunc fromlineno="305" tolineno="305" lineno="305" func="Getattr(debug)">
              <Getattr fromlineno="305" tolineno="305" lineno="305" attrname="debug" expr="bb.msg">
                <Getattr fromlineno="305" tolineno="305" lineno="305" attrname="msg" expr="bb">
                  <Name fromlineno="305" tolineno="305" lineno="305" name="bb"/>
                </Getattr>
              </Getattr>
              <Const fromlineno="305" tolineno="305" lineno="305" type="int">1</Const>
              <Getattr fromlineno="305" tolineno="305" lineno="305" attrname="Cache" expr="bb.msg.domain">
                <Getattr fromlineno="305" tolineno="305" lineno="305" attrname="domain" expr="bb.msg">
                  <Getattr fromlineno="305" tolineno="305" lineno="305" attrname="msg" expr="bb">
                    <Name fromlineno="305" tolineno="305" lineno="305" name="bb"/>
                  </Getattr>
                </Getattr>
              </Getattr>
              <BinOp fromlineno="305" tolineno="305" lineno="305" op="%" left="'Removing %s from cache'" right="fn">
                <Const fromlineno="305" tolineno="305" lineno="305" type="str">'Removing %s from cache'</Const>
                <Name fromlineno="305" tolineno="305" lineno="305" name="fn"/>
              </BinOp>
            </CallFunc>
          </Discard>
          <If fromlineno="306" tolineno="307" lineno="306">
            <Compare fromlineno="306" tolineno="306" lineno="306" op="('in', &lt;Getattr(depends_cache) l.306 [bb.cache] at Ox977c78c&gt;)">
              <Name fromlineno="306" tolineno="306" lineno="306" name="fn"/>
              <Getattr fromlineno="306" tolineno="306" lineno="306" attrname="depends_cache" expr="self">
                <Name fromlineno="306" tolineno="306" lineno="306" name="self"/>
              </Getattr>
            </Compare>
            <Delete fromlineno="307" tolineno="307" lineno="307">
              <Subscript fromlineno="307" tolineno="307" lineno="307">
                <Getattr fromlineno="307" tolineno="307" lineno="307" attrname="depends_cache" expr="self">
                  <Name fromlineno="307" tolineno="307" lineno="307" name="self"/>
                </Getattr>
                <Index fromlineno="307" tolineno="307" lineno="None">
                  <Name fromlineno="307" tolineno="307" lineno="307" name="fn"/>
                </Index>
              </Subscript>
            </Delete>
          </If>
          <If fromlineno="308" tolineno="309" lineno="308">
            <Compare fromlineno="308" tolineno="308" lineno="308" op="('in', &lt;Getattr(clean) l.308 [bb.cache] at Ox977c98c&gt;)">
              <Name fromlineno="308" tolineno="308" lineno="308" name="fn"/>
              <Getattr fromlineno="308" tolineno="308" lineno="308" attrname="clean" expr="self">
                <Name fromlineno="308" tolineno="308" lineno="308" name="self"/>
              </Getattr>
            </Compare>
            <Delete fromlineno="309" tolineno="309" lineno="309">
              <Subscript fromlineno="309" tolineno="309" lineno="309">
                <Getattr fromlineno="309" tolineno="309" lineno="309" attrname="clean" expr="self">
                  <Name fromlineno="309" tolineno="309" lineno="309" name="self"/>
                </Getattr>
                <Index fromlineno="309" tolineno="309" lineno="None">
                  <Name fromlineno="309" tolineno="309" lineno="309" name="fn"/>
                </Index>
              </Subscript>
            </Delete>
          </If>
        </Function>
        <Function fromlineno="311" tolineno="336" lineno="311">
          <Arguments fromlineno="311" tolineno="311" lineno="None" format_args="self">
            <AssName fromlineno="311" tolineno="311" lineno="311" name="self"/>
          </Arguments>
          <Import fromlineno="316" tolineno="316" lineno="316">
            <ImportName name="copy"/>
          </Import>
          <If fromlineno="318" tolineno="319" lineno="318">
            <UnaryOp fromlineno="318" tolineno="318" lineno="318">
              <Getattr fromlineno="318" tolineno="318" lineno="318" attrname="has_cache" expr="self">
                <Name fromlineno="318" tolineno="318" lineno="318" name="self"/>
              </Getattr>
            </UnaryOp>
            <Return fromlineno="319" tolineno="319" lineno="319"/>
          </If>
          <If fromlineno="321" tolineno="323" lineno="321">
            <Getattr fromlineno="321" tolineno="321" lineno="321" attrname="cacheclean" expr="self">
              <Name fromlineno="321" tolineno="321" lineno="321" name="self"/>
            </Getattr>
            <Discard fromlineno="322" tolineno="322" lineno="322">
              <CallFunc fromlineno="322" tolineno="322" lineno="322" func="Getattr(note)">
                <Getattr fromlineno="322" tolineno="322" lineno="322" attrname="note" expr="bb.msg">
                  <Getattr fromlineno="322" tolineno="322" lineno="322" attrname="msg" expr="bb">
                    <Name fromlineno="322" tolineno="322" lineno="322" name="bb"/>
                  </Getattr>
                </Getattr>
                <Const fromlineno="322" tolineno="322" lineno="322" type="int">1</Const>
                <Getattr fromlineno="322" tolineno="322" lineno="322" attrname="Cache" expr="bb.msg.domain">
                  <Getattr fromlineno="322" tolineno="322" lineno="322" attrname="domain" expr="bb.msg">
                    <Getattr fromlineno="322" tolineno="322" lineno="322" attrname="msg" expr="bb">
                      <Name fromlineno="322" tolineno="322" lineno="322" name="bb"/>
                    </Getattr>
                  </Getattr>
                </Getattr>
                <Const fromlineno="322" tolineno="322" lineno="322" type="str">'Cache is clean, not saving.'</Const>
              </CallFunc>
            </Discard>
            <Return fromlineno="323" tolineno="323" lineno="323"/>
          </If>
          <Assign fromlineno="325" tolineno="325" lineno="325" targets="[&lt;AssName(version_data) l.325 [bb.cache] at Ox977cf6c&gt;]" value="{}">
            <AssName fromlineno="325" tolineno="325" lineno="325" name="version_data"/>
            <Dict fromlineno="325" tolineno="325" lineno="325"/>
          </Assign>
          <Assign fromlineno="326" tolineno="326" lineno="326" targets="[&lt;Subscript() l.326 [bb.cache] at Ox978006c&gt;]" value="__cache_version__">
            <Subscript fromlineno="326" tolineno="326" lineno="326">
              <Name fromlineno="326" tolineno="326" lineno="326" name="version_data"/>
              <Index fromlineno="326" tolineno="326" lineno="None">
                <Const fromlineno="326" tolineno="326" lineno="326" type="str">'CACHE_VER'</Const>
              </Index>
            </Subscript>
            <Name fromlineno="326" tolineno="326" lineno="326" name="__cache_version__"/>
          </Assign>
          <Assign fromlineno="327" tolineno="327" lineno="327" targets="[&lt;Subscript() l.327 [bb.cache] at Ox978014c&gt;]" value="bb.__version__">
            <Subscript fromlineno="327" tolineno="327" lineno="327">
              <Name fromlineno="327" tolineno="327" lineno="327" name="version_data"/>
              <Index fromlineno="327" tolineno="327" lineno="None">
                <Const fromlineno="327" tolineno="327" lineno="327" type="str">'BITBAKE_VER'</Const>
              </Index>
            </Subscript>
            <Getattr fromlineno="327" tolineno="327" lineno="327" attrname="__version__" expr="bb">
              <Name fromlineno="327" tolineno="327" lineno="327" name="bb"/>
            </Getattr>
          </Assign>
          <Assign fromlineno="329" tolineno="329" lineno="329" targets="[&lt;AssName(cache_data) l.329 [bb.cache] at Ox978024c&gt;]" value="copy.deepcopy(self.depends_cache)">
            <AssName fromlineno="329" tolineno="329" lineno="329" name="cache_data"/>
            <CallFunc fromlineno="329" tolineno="329" lineno="329" func="Getattr(deepcopy)">
              <Getattr fromlineno="329" tolineno="329" lineno="329" attrname="deepcopy" expr="copy">
                <Name fromlineno="329" tolineno="329" lineno="329" name="copy"/>
              </Getattr>
              <Getattr fromlineno="329" tolineno="329" lineno="329" attrname="depends_cache" expr="self">
                <Name fromlineno="329" tolineno="329" lineno="329" name="self"/>
              </Getattr>
            </CallFunc>
          </Assign>
          <For fromlineno="330" tolineno="333" lineno="330">
            <AssName fromlineno="330" tolineno="330" lineno="330" name="fn"/>
            <Getattr fromlineno="330" tolineno="330" lineno="330" attrname="depends_cache" expr="self">
              <Name fromlineno="330" tolineno="330" lineno="330" name="self"/>
            </Getattr>
            <If fromlineno="331" tolineno="333" lineno="331">
              <BoolOp fromlineno="331" tolineno="331" lineno="331" op="and" values="'__BB_DONT_CACHE' in self.depends_cache[fn],self.depends_cache[fn]['__BB_DONT_CACHE'],">
                <Compare fromlineno="331" tolineno="331" lineno="331" op="('in', &lt;Subscript() l.331 [bb.cache] at Ox978052c&gt;)">
                  <Const fromlineno="331" tolineno="331" lineno="331" type="str">'__BB_DONT_CACHE'</Const>
                  <Subscript fromlineno="331" tolineno="331" lineno="331">
                    <Getattr fromlineno="331" tolineno="331" lineno="331" attrname="depends_cache" expr="self">
                      <Name fromlineno="331" tolineno="331" lineno="331" name="self"/>
                    </Getattr>
                    <Index fromlineno="331" tolineno="331" lineno="None">
                      <Name fromlineno="331" tolineno="331" lineno="331" name="fn"/>
                    </Index>
                  </Subscript>
                </Compare>
                <Subscript fromlineno="331" tolineno="331" lineno="331">
                  <Subscript fromlineno="331" tolineno="331" lineno="331">
                    <Getattr fromlineno="331" tolineno="331" lineno="331" attrname="depends_cache" expr="self">
                      <Name fromlineno="331" tolineno="331" lineno="331" name="self"/>
                    </Getattr>
                    <Index fromlineno="331" tolineno="331" lineno="None">
                      <Name fromlineno="331" tolineno="331" lineno="331" name="fn"/>
                    </Index>
                  </Subscript>
                  <Index fromlineno="331" tolineno="331" lineno="None">
                    <Const fromlineno="331" tolineno="331" lineno="331" type="str">'__BB_DONT_CACHE'</Const>
                  </Index>
                </Subscript>
              </BoolOp>
              <Discard fromlineno="332" tolineno="332" lineno="332">
                <CallFunc fromlineno="332" tolineno="332" lineno="332" func="Getattr(debug)">
                  <Getattr fromlineno="332" tolineno="332" lineno="332" attrname="debug" expr="bb.msg">
                    <Getattr fromlineno="332" tolineno="332" lineno="332" attrname="msg" expr="bb">
                      <Name fromlineno="332" tolineno="332" lineno="332" name="bb"/>
                    </Getattr>
                  </Getattr>
                  <Const fromlineno="332" tolineno="332" lineno="332" type="int">2</Const>
                  <Getattr fromlineno="332" tolineno="332" lineno="332" attrname="Cache" expr="bb.msg.domain">
                    <Getattr fromlineno="332" tolineno="332" lineno="332" attrname="domain" expr="bb.msg">
                      <Getattr fromlineno="332" tolineno="332" lineno="332" attrname="msg" expr="bb">
                        <Name fromlineno="332" tolineno="332" lineno="332" name="bb"/>
                      </Getattr>
                    </Getattr>
                  </Getattr>
                  <BinOp fromlineno="332" tolineno="332" lineno="332" op="%" left="'Not caching %s, marked as not cacheable'" right="fn">
                    <Const fromlineno="332" tolineno="332" lineno="332" type="str">'Not caching %s, marked as not cacheable'</Const>
                    <Name fromlineno="332" tolineno="332" lineno="332" name="fn"/>
                  </BinOp>
                </CallFunc>
              </Discard>
              <Delete fromlineno="333" tolineno="333" lineno="333">
                <Subscript fromlineno="333" tolineno="333" lineno="333">
                  <Name fromlineno="333" tolineno="333" lineno="333" name="cache_data"/>
                  <Index fromlineno="333" tolineno="333" lineno="None">
                    <Name fromlineno="333" tolineno="333" lineno="333" name="fn"/>
                  </Index>
                </Subscript>
              </Delete>
            </If>
          </For>
          <Assign fromlineno="335" tolineno="335" lineno="335" targets="[&lt;AssName(p) l.335 [bb.cache] at Ox97809ac&gt;]" value="pickle.Pickler(file(self.cachefile, 'wb'), -1)">
            <AssName fromlineno="335" tolineno="335" lineno="335" name="p"/>
            <CallFunc fromlineno="335" tolineno="335" lineno="335" func="Getattr(Pickler)">
              <Getattr fromlineno="335" tolineno="335" lineno="335" attrname="Pickler" expr="pickle">
                <Name fromlineno="335" tolineno="335" lineno="335" name="pickle"/>
              </Getattr>
              <CallFunc fromlineno="335" tolineno="335" lineno="335" func="Name(file)">
                <Name fromlineno="335" tolineno="335" lineno="335" name="file"/>
                <Getattr fromlineno="335" tolineno="335" lineno="335" attrname="cachefile" expr="self">
                  <Name fromlineno="335" tolineno="335" lineno="335" name="self"/>
                </Getattr>
                <Const fromlineno="335" tolineno="335" lineno="335" type="str">'wb'</Const>
              </CallFunc>
              <Const fromlineno="335" tolineno="335" lineno="335" type="int">-1</Const>
            </CallFunc>
          </Assign>
          <Discard fromlineno="336" tolineno="336" lineno="336">
            <CallFunc fromlineno="336" tolineno="336" lineno="336" func="Getattr(dump)">
              <Getattr fromlineno="336" tolineno="336" lineno="336" attrname="dump" expr="p">
                <Name fromlineno="336" tolineno="336" lineno="336" name="p"/>
              </Getattr>
              <List fromlineno="336" tolineno="336" lineno="336">
                <Name fromlineno="336" tolineno="336" lineno="336" name="cache_data"/>
                <Name fromlineno="336" tolineno="336" lineno="336" name="version_data"/>
              </List>
            </CallFunc>
          </Discard>
        </Function>
        <Function fromlineno="338" tolineno="339" lineno="338">
          <Arguments fromlineno="338" tolineno="338" lineno="None" format_args="self, cachefile">
            <AssName fromlineno="338" tolineno="338" lineno="338" name="self"/>
            <AssName fromlineno="338" tolineno="338" lineno="338" name="cachefile"/>
          </Arguments>
          <Return fromlineno="339" tolineno="339" lineno="339">
            <CallFunc fromlineno="339" tolineno="339" lineno="339" func="Getattr(cached_mtime_noerror)">
              <Getattr fromlineno="339" tolineno="339" lineno="339" attrname="cached_mtime_noerror" expr="bb.parse">
                <Getattr fromlineno="339" tolineno="339" lineno="339" attrname="parse" expr="bb">
                  <Name fromlineno="339" tolineno="339" lineno="339" name="bb"/>
                </Getattr>
              </Getattr>
              <Name fromlineno="339" tolineno="339" lineno="339" name="cachefile"/>
            </CallFunc>
          </Return>
        </Function>
        <Function fromlineno="341" tolineno="439" lineno="341">
          <Arguments fromlineno="341" tolineno="341" lineno="None" format_args="self, file_name, cacheData">
            <AssName fromlineno="341" tolineno="341" lineno="341" name="self"/>
            <AssName fromlineno="341" tolineno="341" lineno="341" name="file_name"/>
            <AssName fromlineno="341" tolineno="341" lineno="341" name="cacheData"/>
          </Arguments>
          <Assign fromlineno="346" tolineno="346" lineno="346" targets="[&lt;AssName(pn) l.346 [bb.cache] at Ox978402c&gt;]" value="self.getVar('PN', file_name, True)">
            <AssName fromlineno="346" tolineno="346" lineno="346" name="pn"/>
            <CallFunc fromlineno="346" tolineno="346" lineno="346" func="Getattr(getVar)">
              <Getattr fromlineno="346" tolineno="346" lineno="346" attrname="getVar" expr="self">
                <Name fromlineno="346" tolineno="346" lineno="346" name="self"/>
              </Getattr>
              <Const fromlineno="346" tolineno="346" lineno="346" type="str">'PN'</Const>
              <Name fromlineno="346" tolineno="346" lineno="346" name="file_name"/>
              <Const fromlineno="346" tolineno="346" lineno="346" type="bool">True</Const>
            </CallFunc>
          </Assign>
          <Assign fromlineno="347" tolineno="347" lineno="347" targets="[&lt;AssName(pe) l.347 [bb.cache] at Ox978418c&gt;]" value="(self.getVar('PE', file_name, True)) or ('0')">
            <AssName fromlineno="347" tolineno="347" lineno="347" name="pe"/>
            <BoolOp fromlineno="347" tolineno="347" lineno="347" op="or" values="self.getVar('PE', file_name, True),'0',">
              <CallFunc fromlineno="347" tolineno="347" lineno="347" func="Getattr(getVar)">
                <Getattr fromlineno="347" tolineno="347" lineno="347" attrname="getVar" expr="self">
                  <Name fromlineno="347" tolineno="347" lineno="347" name="self"/>
                </Getattr>
                <Const fromlineno="347" tolineno="347" lineno="347" type="str">'PE'</Const>
                <Name fromlineno="347" tolineno="347" lineno="347" name="file_name"/>
                <Const fromlineno="347" tolineno="347" lineno="347" type="bool">True</Const>
              </CallFunc>
              <Const fromlineno="347" tolineno="347" lineno="347" type="str">'0'</Const>
            </BoolOp>
          </Assign>
          <Assign fromlineno="348" tolineno="348" lineno="348" targets="[&lt;AssName(pv) l.348 [bb.cache] at Ox978434c&gt;]" value="self.getVar('PV', file_name, True)">
            <AssName fromlineno="348" tolineno="348" lineno="348" name="pv"/>
            <CallFunc fromlineno="348" tolineno="348" lineno="348" func="Getattr(getVar)">
              <Getattr fromlineno="348" tolineno="348" lineno="348" attrname="getVar" expr="self">
                <Name fromlineno="348" tolineno="348" lineno="348" name="self"/>
              </Getattr>
              <Const fromlineno="348" tolineno="348" lineno="348" type="str">'PV'</Const>
              <Name fromlineno="348" tolineno="348" lineno="348" name="file_name"/>
              <Const fromlineno="348" tolineno="348" lineno="348" type="bool">True</Const>
            </CallFunc>
          </Assign>
          <Assign fromlineno="349" tolineno="349" lineno="349" targets="[&lt;AssName(pr) l.349 [bb.cache] at Ox97844ac&gt;]" value="self.getVar('PR', file_name, True)">
            <AssName fromlineno="349" tolineno="349" lineno="349" name="pr"/>
            <CallFunc fromlineno="349" tolineno="349" lineno="349" func="Getattr(getVar)">
              <Getattr fromlineno="349" tolineno="349" lineno="349" attrname="getVar" expr="self">
                <Name fromlineno="349" tolineno="349" lineno="349" name="self"/>
              </Getattr>
              <Const fromlineno="349" tolineno="349" lineno="349" type="str">'PR'</Const>
              <Name fromlineno="349" tolineno="349" lineno="349" name="file_name"/>
              <Const fromlineno="349" tolineno="349" lineno="349" type="bool">True</Const>
            </CallFunc>
          </Assign>
          <Assign fromlineno="350" tolineno="350" lineno="350" targets="[&lt;AssName(dp) l.350 [bb.cache] at Ox978460c&gt;]" value="int((self.getVar('DEFAULT_PREFERENCE', file_name, True)) or ('0'))">
            <AssName fromlineno="350" tolineno="350" lineno="350" name="dp"/>
            <CallFunc fromlineno="350" tolineno="350" lineno="350" func="Name(int)">
              <Name fromlineno="350" tolineno="350" lineno="350" name="int"/>
              <BoolOp fromlineno="350" tolineno="350" lineno="350" op="or" values="self.getVar('DEFAULT_PREFERENCE', file_name, True),'0',">
                <CallFunc fromlineno="350" tolineno="350" lineno="350" func="Getattr(getVar)">
                  <Getattr fromlineno="350" tolineno="350" lineno="350" attrname="getVar" expr="self">
                    <Name fromlineno="350" tolineno="350" lineno="350" name="self"/>
                  </Getattr>
                  <Const fromlineno="350" tolineno="350" lineno="350" type="str">'DEFAULT_PREFERENCE'</Const>
                  <Name fromlineno="350" tolineno="350" lineno="350" name="file_name"/>
                  <Const fromlineno="350" tolineno="350" lineno="350" type="bool">True</Const>
                </CallFunc>
                <Const fromlineno="350" tolineno="350" lineno="350" type="str">'0'</Const>
              </BoolOp>
            </CallFunc>
          </Assign>
          <Assign fromlineno="351" tolineno="351" lineno="351" targets="[&lt;AssName(depends) l.351 [bb.cache] at Ox978482c&gt;]" value="bb.utils.explode_deps((self.getVar('DEPENDS', file_name, True)) or (''))">
            <AssName fromlineno="351" tolineno="351" lineno="351" name="depends"/>
            <CallFunc fromlineno="351" tolineno="351" lineno="351" func="Getattr(explode_deps)">
              <Getattr fromlineno="351" tolineno="351" lineno="351" attrname="explode_deps" expr="bb.utils">
                <Getattr fromlineno="351" tolineno="351" lineno="351" attrname="utils" expr="bb">
                  <Name fromlineno="351" tolineno="351" lineno="351" name="bb"/>
                </Getattr>
              </Getattr>
              <BoolOp fromlineno="351" tolineno="351" lineno="351" op="or" values="self.getVar('DEPENDS', file_name, True),'',">
                <CallFunc fromlineno="351" tolineno="351" lineno="351" func="Getattr(getVar)">
                  <Getattr fromlineno="351" tolineno="351" lineno="351" attrname="getVar" expr="self">
                    <Name fromlineno="351" tolineno="351" lineno="351" name="self"/>
                  </Getattr>
                  <Const fromlineno="351" tolineno="351" lineno="351" type="str">'DEPENDS'</Const>
                  <Name fromlineno="351" tolineno="351" lineno="351" name="file_name"/>
                  <Const fromlineno="351" tolineno="351" lineno="351" type="bool">True</Const>
                </CallFunc>
                <Const fromlineno="351" tolineno="351" lineno="351" type="str">''</Const>
              </BoolOp>
            </CallFunc>
          </Assign>
          <Assign fromlineno="352" tolineno="352" lineno="352" targets="[&lt;AssName(packages) l.352 [bb.cache] at Ox9784a8c&gt;]" value="(self.getVar('PACKAGES', file_name, True)) or ('').split()">
            <AssName fromlineno="352" tolineno="352" lineno="352" name="packages"/>
            <CallFunc fromlineno="352" tolineno="352" lineno="352" func="Getattr(split)">
              <Getattr fromlineno="352" tolineno="352" lineno="352" attrname="split" expr="(self.getVar('PACKAGES', file_name, True)) or ('')">
                <BoolOp fromlineno="352" tolineno="352" lineno="352" op="or" values="self.getVar('PACKAGES', file_name, True),'',">
                  <CallFunc fromlineno="352" tolineno="352" lineno="352" func="Getattr(getVar)">
                    <Getattr fromlineno="352" tolineno="352" lineno="352" attrname="getVar" expr="self">
                      <Name fromlineno="352" tolineno="352" lineno="352" name="self"/>
                    </Getattr>
                    <Const fromlineno="352" tolineno="352" lineno="352" type="str">'PACKAGES'</Const>
                    <Name fromlineno="352" tolineno="352" lineno="352" name="file_name"/>
                    <Const fromlineno="352" tolineno="352" lineno="352" type="bool">True</Const>
                  </CallFunc>
                  <Const fromlineno="352" tolineno="352" lineno="352" type="str">''</Const>
                </BoolOp>
              </Getattr>
            </CallFunc>
          </Assign>
          <Assign fromlineno="353" tolineno="353" lineno="353" targets="[&lt;AssName(packages_dynamic) l.353 [bb.cache] at Ox9784cac&gt;]" value="(self.getVar('PACKAGES_DYNAMIC', file_name, True)) or ('').split()">
            <AssName fromlineno="353" tolineno="353" lineno="353" name="packages_dynamic"/>
            <CallFunc fromlineno="353" tolineno="353" lineno="353" func="Getattr(split)">
              <Getattr fromlineno="353" tolineno="353" lineno="353" attrname="split" expr="(self.getVar('PACKAGES_DYNAMIC', file_name, True)) or ('')">
                <BoolOp fromlineno="353" tolineno="353" lineno="353" op="or" values="self.getVar('PACKAGES_DYNAMIC', file_name, True),'',">
                  <CallFunc fromlineno="353" tolineno="353" lineno="353" func="Getattr(getVar)">
                    <Getattr fromlineno="353" tolineno="353" lineno="353" attrname="getVar" expr="self">
                      <Name fromlineno="353" tolineno="353" lineno="353" name="self"/>
                    </Getattr>
                    <Const fromlineno="353" tolineno="353" lineno="353" type="str">'PACKAGES_DYNAMIC'</Const>
                    <Name fromlineno="353" tolineno="353" lineno="353" name="file_name"/>
                    <Const fromlineno="353" tolineno="353" lineno="353" type="bool">True</Const>
                  </CallFunc>
                  <Const fromlineno="353" tolineno="353" lineno="353" type="str">''</Const>
                </BoolOp>
              </Getattr>
            </CallFunc>
          </Assign>
          <Assign fromlineno="354" tolineno="354" lineno="354" targets="[&lt;AssName(rprovides) l.354 [bb.cache] at Ox9784ecc&gt;]" value="(self.getVar('RPROVIDES', file_name, True)) or ('').split()">
            <AssName fromlineno="354" tolineno="354" lineno="354" name="rprovides"/>
            <CallFunc fromlineno="354" tolineno="354" lineno="354" func="Getattr(split)">
              <Getattr fromlineno="354" tolineno="354" lineno="354" attrname="split" expr="(self.getVar('RPROVIDES', file_name, True)) or ('')">
                <BoolOp fromlineno="354" tolineno="354" lineno="354" op="or" values="self.getVar('RPROVIDES', file_name, True),'',">
                  <CallFunc fromlineno="354" tolineno="354" lineno="354" func="Getattr(getVar)">
                    <Getattr fromlineno="354" tolineno="354" lineno="354" attrname="getVar" expr="self">
                      <Name fromlineno="354" tolineno="354" lineno="354" name="self"/>
                    </Getattr>
                    <Const fromlineno="354" tolineno="354" lineno="354" type="str">'RPROVIDES'</Const>
                    <Name fromlineno="354" tolineno="354" lineno="354" name="file_name"/>
                    <Const fromlineno="354" tolineno="354" lineno="354" type="bool">True</Const>
                  </CallFunc>
                  <Const fromlineno="354" tolineno="354" lineno="354" type="str">''</Const>
                </BoolOp>
              </Getattr>
            </CallFunc>
          </Assign>
          <Assign fromlineno="356" tolineno="356" lineno="356" targets="[&lt;Subscript() l.356 [bb.cache] at Ox978810c&gt;]" value="self.getVar('_task_deps', file_name, True)">
            <Subscript fromlineno="356" tolineno="356" lineno="356">
              <Getattr fromlineno="356" tolineno="356" lineno="356" attrname="task_deps" expr="cacheData">
                <Name fromlineno="356" tolineno="356" lineno="356" name="cacheData"/>
              </Getattr>
              <Index fromlineno="356" tolineno="356" lineno="None">
                <Name fromlineno="356" tolineno="356" lineno="356" name="file_name"/>
              </Index>
            </Subscript>
            <CallFunc fromlineno="356" tolineno="356" lineno="356" func="Getattr(getVar)">
              <Getattr fromlineno="356" tolineno="356" lineno="356" attrname="getVar" expr="self">
                <Name fromlineno="356" tolineno="356" lineno="356" name="self"/>
              </Getattr>
              <Const fromlineno="356" tolineno="356" lineno="356" type="str">'_task_deps'</Const>
              <Name fromlineno="356" tolineno="356" lineno="356" name="file_name"/>
              <Const fromlineno="356" tolineno="356" lineno="356" type="bool">True</Const>
            </CallFunc>
          </Assign>
          <If fromlineno="359" tolineno="360" lineno="359">
            <Compare fromlineno="359" tolineno="359" lineno="359" op="('not in', &lt;Getattr(pkg_pn) l.359 [bb.cache] at Ox978832c&gt;)">
              <Name fromlineno="359" tolineno="359" lineno="359" name="pn"/>
              <Getattr fromlineno="359" tolineno="359" lineno="359" attrname="pkg_pn" expr="cacheData">
                <Name fromlineno="359" tolineno="359" lineno="359" name="cacheData"/>
              </Getattr>
            </Compare>
            <Assign fromlineno="360" tolineno="360" lineno="360" targets="[&lt;Subscript() l.360 [bb.cache] at Ox97883ec&gt;]" value="[]">
              <Subscript fromlineno="360" tolineno="360" lineno="360">
                <Getattr fromlineno="360" tolineno="360" lineno="360" attrname="pkg_pn" expr="cacheData">
                  <Name fromlineno="360" tolineno="360" lineno="360" name="cacheData"/>
                </Getattr>
                <Index fromlineno="360" tolineno="360" lineno="None">
                  <Name fromlineno="360" tolineno="360" lineno="360" name="pn"/>
                </Index>
              </Subscript>
              <List fromlineno="360" tolineno="360" lineno="360"/>
            </Assign>
          </If>
          <Discard fromlineno="361" tolineno="361" lineno="361">
            <CallFunc fromlineno="361" tolineno="361" lineno="361" func="Getattr(append)">
              <Getattr fromlineno="361" tolineno="361" lineno="361" attrname="append" expr="cacheData.pkg_pn[pn]">
                <Subscript fromlineno="361" tolineno="361" lineno="361">
                  <Getattr fromlineno="361" tolineno="361" lineno="361" attrname="pkg_pn" expr="cacheData">
                    <Name fromlineno="361" tolineno="361" lineno="361" name="cacheData"/>
                  </Getattr>
                  <Index fromlineno="361" tolineno="361" lineno="None">
                    <Name fromlineno="361" tolineno="361" lineno="361" name="pn"/>
                  </Index>
                </Subscript>
              </Getattr>
              <Name fromlineno="361" tolineno="361" lineno="361" name="file_name"/>
            </CallFunc>
          </Discard>
          <Assign fromlineno="363" tolineno="363" lineno="363" targets="[&lt;Subscript() l.363 [bb.cache] at Ox978864c&gt;]" value="self.getVar('STAMP', file_name, True)">
            <Subscript fromlineno="363" tolineno="363" lineno="363">
              <Getattr fromlineno="363" tolineno="363" lineno="363" attrname="stamp" expr="cacheData">
                <Name fromlineno="363" tolineno="363" lineno="363" name="cacheData"/>
              </Getattr>
              <Index fromlineno="363" tolineno="363" lineno="None">
                <Name fromlineno="363" tolineno="363" lineno="363" name="file_name"/>
              </Index>
            </Subscript>
            <CallFunc fromlineno="363" tolineno="363" lineno="363" func="Getattr(getVar)">
              <Getattr fromlineno="363" tolineno="363" lineno="363" attrname="getVar" expr="self">
                <Name fromlineno="363" tolineno="363" lineno="363" name="self"/>
              </Getattr>
              <Const fromlineno="363" tolineno="363" lineno="363" type="str">'STAMP'</Const>
              <Name fromlineno="363" tolineno="363" lineno="363" name="file_name"/>
              <Const fromlineno="363" tolineno="363" lineno="363" type="bool">True</Const>
            </CallFunc>
          </Assign>
          <Assign fromlineno="366" tolineno="366" lineno="366" targets="[&lt;Subscript() l.366 [bb.cache] at Ox978880c&gt;]" value="pn">
            <Subscript fromlineno="366" tolineno="366" lineno="366">
              <Getattr fromlineno="366" tolineno="366" lineno="366" attrname="pkg_fn" expr="cacheData">
                <Name fromlineno="366" tolineno="366" lineno="366" name="cacheData"/>
              </Getattr>
              <Index fromlineno="366" tolineno="366" lineno="None">
                <Name fromlineno="366" tolineno="366" lineno="366" name="file_name"/>
              </Index>
            </Subscript>
            <Name fromlineno="366" tolineno="366" lineno="366" name="pn"/>
          </Assign>
          <Assign fromlineno="367" tolineno="367" lineno="367" targets="[&lt;Subscript() l.367 [bb.cache] at Ox978890c&gt;]" value="(pe, pv, pr)">
            <Subscript fromlineno="367" tolineno="367" lineno="367">
              <Getattr fromlineno="367" tolineno="367" lineno="367" attrname="pkg_pepvpr" expr="cacheData">
                <Name fromlineno="367" tolineno="367" lineno="367" name="cacheData"/>
              </Getattr>
              <Index fromlineno="367" tolineno="367" lineno="None">
                <Name fromlineno="367" tolineno="367" lineno="367" name="file_name"/>
              </Index>
            </Subscript>
            <Tuple fromlineno="367" tolineno="367" lineno="367">
              <Name fromlineno="367" tolineno="367" lineno="367" name="pe"/>
              <Name fromlineno="367" tolineno="367" lineno="367" name="pv"/>
              <Name fromlineno="367" tolineno="367" lineno="367" name="pr"/>
            </Tuple>
          </Assign>
          <Assign fromlineno="368" tolineno="368" lineno="368" targets="[&lt;Subscript() l.368 [bb.cache] at Ox9788a8c&gt;]" value="dp">
            <Subscript fromlineno="368" tolineno="368" lineno="368">
              <Getattr fromlineno="368" tolineno="368" lineno="368" attrname="pkg_dp" expr="cacheData">
                <Name fromlineno="368" tolineno="368" lineno="368" name="cacheData"/>
              </Getattr>
              <Index fromlineno="368" tolineno="368" lineno="None">
                <Name fromlineno="368" tolineno="368" lineno="368" name="file_name"/>
              </Index>
            </Subscript>
            <Name fromlineno="368" tolineno="368" lineno="368" name="dp"/>
          </Assign>
          <Assign fromlineno="370" tolineno="370" lineno="370" targets="[&lt;AssName(provides) l.370 [bb.cache] at Ox9788b8c&gt;]" value="[pn]">
            <AssName fromlineno="370" tolineno="370" lineno="370" name="provides"/>
            <List fromlineno="370" tolineno="370" lineno="370">
              <Name fromlineno="370" tolineno="370" lineno="370" name="pn"/>
            </List>
          </Assign>
          <For fromlineno="371" tolineno="373" lineno="371">
            <AssName fromlineno="371" tolineno="371" lineno="371" name="provide"/>
            <CallFunc fromlineno="371" tolineno="371" lineno="371" func="Getattr(split)">
              <Getattr fromlineno="371" tolineno="371" lineno="371" attrname="split" expr="(self.getVar('PROVIDES', file_name, True)) or ('')">
                <BoolOp fromlineno="371" tolineno="371" lineno="371" op="or" values="self.getVar('PROVIDES', file_name, True),'',">
                  <CallFunc fromlineno="371" tolineno="371" lineno="371" func="Getattr(getVar)">
                    <Getattr fromlineno="371" tolineno="371" lineno="371" attrname="getVar" expr="self">
                      <Name fromlineno="371" tolineno="371" lineno="371" name="self"/>
                    </Getattr>
                    <Const fromlineno="371" tolineno="371" lineno="371" type="str">'PROVIDES'</Const>
                    <Name fromlineno="371" tolineno="371" lineno="371" name="file_name"/>
                    <Const fromlineno="371" tolineno="371" lineno="371" type="bool">True</Const>
                  </CallFunc>
                  <Const fromlineno="371" tolineno="371" lineno="371" type="str">''</Const>
                </BoolOp>
              </Getattr>
            </CallFunc>
            <If fromlineno="372" tolineno="373" lineno="372">
              <Compare fromlineno="372" tolineno="372" lineno="372" op="('not in', &lt;Name(provides) l.372 [bb.cache] at Ox9788f0c&gt;)">
                <Name fromlineno="372" tolineno="372" lineno="372" name="provide"/>
                <Name fromlineno="372" tolineno="372" lineno="372" name="provides"/>
              </Compare>
              <Discard fromlineno="373" tolineno="373" lineno="373">
                <CallFunc fromlineno="373" tolineno="373" lineno="373" func="Getattr(append)">
                  <Getattr fromlineno="373" tolineno="373" lineno="373" attrname="append" expr="provides">
                    <Name fromlineno="373" tolineno="373" lineno="373" name="provides"/>
                  </Getattr>
                  <Name fromlineno="373" tolineno="373" lineno="373" name="provide"/>
                </CallFunc>
              </Discard>
            </If>
          </For>
          <If fromlineno="378" tolineno="379" lineno="378">
            <Compare fromlineno="378" tolineno="378" lineno="378" op="('not in', &lt;Getattr(pn_provides) l.378 [bb.cache] at Ox978d0ec&gt;)">
              <Name fromlineno="378" tolineno="378" lineno="378" name="pn"/>
              <Getattr fromlineno="378" tolineno="378" lineno="378" attrname="pn_provides" expr="cacheData">
                <Name fromlineno="378" tolineno="378" lineno="378" name="cacheData"/>
              </Getattr>
            </Compare>
            <Assign fromlineno="379" tolineno="379" lineno="379" targets="[&lt;Subscript() l.379 [bb.cache] at Ox978d1ac&gt;]" value="[]">
              <Subscript fromlineno="379" tolineno="379" lineno="379">
                <Getattr fromlineno="379" tolineno="379" lineno="379" attrname="pn_provides" expr="cacheData">
                  <Name fromlineno="379" tolineno="379" lineno="379" name="cacheData"/>
                </Getattr>
                <Index fromlineno="379" tolineno="379" lineno="None">
                  <Name fromlineno="379" tolineno="379" lineno="379" name="pn"/>
                </Index>
              </Subscript>
              <List fromlineno="379" tolineno="379" lineno="379"/>
            </Assign>
          </If>
          <Assign fromlineno="381" tolineno="381" lineno="381" targets="[&lt;Subscript() l.381 [bb.cache] at Ox978d2cc&gt;]" value="provides">
            <Subscript fromlineno="381" tolineno="381" lineno="381">
              <Getattr fromlineno="381" tolineno="381" lineno="381" attrname="fn_provides" expr="cacheData">
                <Name fromlineno="381" tolineno="381" lineno="381" name="cacheData"/>
              </Getattr>
              <Index fromlineno="381" tolineno="381" lineno="None">
                <Name fromlineno="381" tolineno="381" lineno="381" name="file_name"/>
              </Index>
            </Subscript>
            <Name fromlineno="381" tolineno="381" lineno="381" name="provides"/>
          </Assign>
          <For fromlineno="382" tolineno="387" lineno="382">
            <AssName fromlineno="382" tolineno="382" lineno="382" name="provide"/>
            <Name fromlineno="382" tolineno="382" lineno="382" name="provides"/>
            <If fromlineno="383" tolineno="384" lineno="383">
              <Compare fromlineno="383" tolineno="383" lineno="383" op="('not in', &lt;Getattr(providers) l.383 [bb.cache] at Ox978d4cc&gt;)">
                <Name fromlineno="383" tolineno="383" lineno="383" name="provide"/>
                <Getattr fromlineno="383" tolineno="383" lineno="383" attrname="providers" expr="cacheData">
                  <Name fromlineno="383" tolineno="383" lineno="383" name="cacheData"/>
                </Getattr>
              </Compare>
              <Assign fromlineno="384" tolineno="384" lineno="384" targets="[&lt;Subscript() l.384 [bb.cache] at Ox978d58c&gt;]" value="[]">
                <Subscript fromlineno="384" tolineno="384" lineno="384">
                  <Getattr fromlineno="384" tolineno="384" lineno="384" attrname="providers" expr="cacheData">
                    <Name fromlineno="384" tolineno="384" lineno="384" name="cacheData"/>
                  </Getattr>
                  <Index fromlineno="384" tolineno="384" lineno="None">
                    <Name fromlineno="384" tolineno="384" lineno="384" name="provide"/>
                  </Index>
                </Subscript>
                <List fromlineno="384" tolineno="384" lineno="384"/>
              </Assign>
            </If>
            <Discard fromlineno="385" tolineno="385" lineno="385">
              <CallFunc fromlineno="385" tolineno="385" lineno="385" func="Getattr(append)">
                <Getattr fromlineno="385" tolineno="385" lineno="385" attrname="append" expr="cacheData.providers[provide]">
                  <Subscript fromlineno="385" tolineno="385" lineno="385">
                    <Getattr fromlineno="385" tolineno="385" lineno="385" attrname="providers" expr="cacheData">
                      <Name fromlineno="385" tolineno="385" lineno="385" name="cacheData"/>
                    </Getattr>
                    <Index fromlineno="385" tolineno="385" lineno="None">
                      <Name fromlineno="385" tolineno="385" lineno="385" name="provide"/>
                    </Index>
                  </Subscript>
                </Getattr>
                <Name fromlineno="385" tolineno="385" lineno="385" name="file_name"/>
              </CallFunc>
            </Discard>
            <If fromlineno="386" tolineno="387" lineno="386">
              <UnaryOp fromlineno="386" tolineno="386" lineno="386">
                <Compare fromlineno="386" tolineno="386" lineno="386" op="('in', &lt;Subscript() l.386 [bb.cache] at Ox978d86c&gt;)">
                  <Name fromlineno="386" tolineno="386" lineno="386" name="provide"/>
                  <Subscript fromlineno="386" tolineno="386" lineno="386">
                    <Getattr fromlineno="386" tolineno="386" lineno="386" attrname="pn_provides" expr="cacheData">
                      <Name fromlineno="386" tolineno="386" lineno="386" name="cacheData"/>
                    </Getattr>
                    <Index fromlineno="386" tolineno="386" lineno="None">
                      <Name fromlineno="386" tolineno="386" lineno="386" name="pn"/>
                    </Index>
                  </Subscript>
                </Compare>
              </UnaryOp>
              <Discard fromlineno="387" tolineno="387" lineno="387">
                <CallFunc fromlineno="387" tolineno="387" lineno="387" func="Getattr(append)">
                  <Getattr fromlineno="387" tolineno="387" lineno="387" attrname="append" expr="cacheData.pn_provides[pn]">
                    <Subscript fromlineno="387" tolineno="387" lineno="387">
                      <Getattr fromlineno="387" tolineno="387" lineno="387" attrname="pn_provides" expr="cacheData">
                        <Name fromlineno="387" tolineno="387" lineno="387" name="cacheData"/>
                      </Getattr>
                      <Index fromlineno="387" tolineno="387" lineno="None">
                        <Name fromlineno="387" tolineno="387" lineno="387" name="pn"/>
                      </Index>
                    </Subscript>
                  </Getattr>
                  <Name fromlineno="387" tolineno="387" lineno="387" name="provide"/>
                </CallFunc>
              </Discard>
            </If>
          </For>
          <Assign fromlineno="389" tolineno="389" lineno="389" targets="[&lt;Subscript() l.389 [bb.cache] at Ox978dacc&gt;]" value="[]">
            <Subscript fromlineno="389" tolineno="389" lineno="389">
              <Getattr fromlineno="389" tolineno="389" lineno="389" attrname="deps" expr="cacheData">
                <Name fromlineno="389" tolineno="389" lineno="389" name="cacheData"/>
              </Getattr>
              <Index fromlineno="389" tolineno="389" lineno="None">
                <Name fromlineno="389" tolineno="389" lineno="389" name="file_name"/>
              </Index>
            </Subscript>
            <List fromlineno="389" tolineno="389" lineno="389"/>
          </Assign>
          <For fromlineno="390" tolineno="394" lineno="390">
            <AssName fromlineno="390" tolineno="390" lineno="390" name="dep"/>
            <Name fromlineno="390" tolineno="390" lineno="390" name="depends"/>
            <If fromlineno="391" tolineno="392" lineno="391">
              <UnaryOp fromlineno="391" tolineno="391" lineno="391">
                <Compare fromlineno="391" tolineno="391" lineno="391" op="('in', &lt;Subscript() l.391 [bb.cache] at Ox978dd2c&gt;)">
                  <Name fromlineno="391" tolineno="391" lineno="391" name="dep"/>
                  <Subscript fromlineno="391" tolineno="391" lineno="391">
                    <Getattr fromlineno="391" tolineno="391" lineno="391" attrname="deps" expr="cacheData">
                      <Name fromlineno="391" tolineno="391" lineno="391" name="cacheData"/>
                    </Getattr>
                    <Index fromlineno="391" tolineno="391" lineno="None">
                      <Name fromlineno="391" tolineno="391" lineno="391" name="file_name"/>
                    </Index>
                  </Subscript>
                </Compare>
              </UnaryOp>
              <Discard fromlineno="392" tolineno="392" lineno="392">
                <CallFunc fromlineno="392" tolineno="392" lineno="392" func="Getattr(append)">
                  <Getattr fromlineno="392" tolineno="392" lineno="392" attrname="append" expr="cacheData.deps[file_name]">
                    <Subscript fromlineno="392" tolineno="392" lineno="392">
                      <Getattr fromlineno="392" tolineno="392" lineno="392" attrname="deps" expr="cacheData">
                        <Name fromlineno="392" tolineno="392" lineno="392" name="cacheData"/>
                      </Getattr>
                      <Index fromlineno="392" tolineno="392" lineno="None">
                        <Name fromlineno="392" tolineno="392" lineno="392" name="file_name"/>
                      </Index>
                    </Subscript>
                  </Getattr>
                  <Name fromlineno="392" tolineno="392" lineno="392" name="dep"/>
                </CallFunc>
              </Discard>
            </If>
            <If fromlineno="393" tolineno="394" lineno="393">
              <UnaryOp fromlineno="393" tolineno="393" lineno="393">
                <Compare fromlineno="393" tolineno="393" lineno="393" op="('in', &lt;Getattr(all_depends) l.393 [bb.cache] at Ox979102c&gt;)">
                  <Name fromlineno="393" tolineno="393" lineno="393" name="dep"/>
                  <Getattr fromlineno="393" tolineno="393" lineno="393" attrname="all_depends" expr="cacheData">
                    <Name fromlineno="393" tolineno="393" lineno="393" name="cacheData"/>
                  </Getattr>
                </Compare>
              </UnaryOp>
              <Discard fromlineno="394" tolineno="394" lineno="394">
                <CallFunc fromlineno="394" tolineno="394" lineno="394" func="Getattr(append)">
                  <Getattr fromlineno="394" tolineno="394" lineno="394" attrname="append" expr="cacheData.all_depends">
                    <Getattr fromlineno="394" tolineno="394" lineno="394" attrname="all_depends" expr="cacheData">
                      <Name fromlineno="394" tolineno="394" lineno="394" name="cacheData"/>
                    </Getattr>
                  </Getattr>
                  <Name fromlineno="394" tolineno="394" lineno="394" name="dep"/>
                </CallFunc>
              </Discard>
            </If>
          </For>
          <For fromlineno="398" tolineno="402" lineno="398">
            <AssName fromlineno="398" tolineno="398" lineno="398" name="package"/>
            <Name fromlineno="398" tolineno="398" lineno="398" name="packages"/>
            <If fromlineno="399" tolineno="400" lineno="399">
              <UnaryOp fromlineno="399" tolineno="399" lineno="399">
                <Compare fromlineno="399" tolineno="399" lineno="399" op="('in', &lt;Getattr(packages) l.399 [bb.cache] at Ox979130c&gt;)">
                  <Name fromlineno="399" tolineno="399" lineno="399" name="package"/>
                  <Getattr fromlineno="399" tolineno="399" lineno="399" attrname="packages" expr="cacheData">
                    <Name fromlineno="399" tolineno="399" lineno="399" name="cacheData"/>
                  </Getattr>
                </Compare>
              </UnaryOp>
              <Assign fromlineno="400" tolineno="400" lineno="400" targets="[&lt;Subscript() l.400 [bb.cache] at Ox97913cc&gt;]" value="[]">
                <Subscript fromlineno="400" tolineno="400" lineno="400">
                  <Getattr fromlineno="400" tolineno="400" lineno="400" attrname="packages" expr="cacheData">
                    <Name fromlineno="400" tolineno="400" lineno="400" name="cacheData"/>
                  </Getattr>
                  <Index fromlineno="400" tolineno="400" lineno="None">
                    <Name fromlineno="400" tolineno="400" lineno="400" name="package"/>
                  </Index>
                </Subscript>
                <List fromlineno="400" tolineno="400" lineno="400"/>
              </Assign>
            </If>
            <Discard fromlineno="401" tolineno="401" lineno="401">
              <CallFunc fromlineno="401" tolineno="401" lineno="401" func="Getattr(append)">
                <Getattr fromlineno="401" tolineno="401" lineno="401" attrname="append" expr="cacheData.packages[package]">
                  <Subscript fromlineno="401" tolineno="401" lineno="401">
                    <Getattr fromlineno="401" tolineno="401" lineno="401" attrname="packages" expr="cacheData">
                      <Name fromlineno="401" tolineno="401" lineno="401" name="cacheData"/>
                    </Getattr>
                    <Index fromlineno="401" tolineno="401" lineno="None">
                      <Name fromlineno="401" tolineno="401" lineno="401" name="package"/>
                    </Index>
                  </Subscript>
                </Getattr>
                <Name fromlineno="401" tolineno="401" lineno="401" name="file_name"/>
              </CallFunc>
            </Discard>
            <AugAssign fromlineno="402" tolineno="402" lineno="402" target="rprovides" value="(self.getVar(('RPROVIDES_%s') % (package), file_name, 1)) or ('').split()">
              <AssName fromlineno="402" tolineno="402" lineno="402" name="rprovides"/>
              <CallFunc fromlineno="402" tolineno="402" lineno="402" func="Getattr(split)">
                <Getattr fromlineno="402" tolineno="402" lineno="402" attrname="split" expr="(self.getVar(('RPROVIDES_%s') % (package), file_name, 1)) or ('')">
                  <BoolOp fromlineno="402" tolineno="402" lineno="402" op="or" values="self.getVar(('RPROVIDES_%s') % (package), file_name, 1),'',">
                    <CallFunc fromlineno="402" tolineno="402" lineno="402" func="Getattr(getVar)">
                      <Getattr fromlineno="402" tolineno="402" lineno="402" attrname="getVar" expr="self">
                        <Name fromlineno="402" tolineno="402" lineno="402" name="self"/>
                      </Getattr>
                      <BinOp fromlineno="402" tolineno="402" lineno="402" op="%" left="'RPROVIDES_%s'" right="package">
                        <Const fromlineno="402" tolineno="402" lineno="402" type="str">'RPROVIDES_%s'</Const>
                        <Name fromlineno="402" tolineno="402" lineno="402" name="package"/>
                      </BinOp>
                      <Name fromlineno="402" tolineno="402" lineno="402" name="file_name"/>
                      <Const fromlineno="402" tolineno="402" lineno="402" type="int">1</Const>
                    </CallFunc>
                    <Const fromlineno="402" tolineno="402" lineno="402" type="str">''</Const>
                  </BoolOp>
                </Getattr>
              </CallFunc>
            </AugAssign>
          </For>
          <For fromlineno="404" tolineno="407" lineno="404">
            <AssName fromlineno="404" tolineno="404" lineno="404" name="package"/>
            <Name fromlineno="404" tolineno="404" lineno="404" name="packages_dynamic"/>
            <If fromlineno="405" tolineno="406" lineno="405">
              <UnaryOp fromlineno="405" tolineno="405" lineno="405">
                <Compare fromlineno="405" tolineno="405" lineno="405" op="('in', &lt;Getattr(packages_dynamic) l.405 [bb.cache] at Ox979198c&gt;)">
                  <Name fromlineno="405" tolineno="405" lineno="405" name="package"/>
                  <Getattr fromlineno="405" tolineno="405" lineno="405" attrname="packages_dynamic" expr="cacheData">
                    <Name fromlineno="405" tolineno="405" lineno="405" name="cacheData"/>
                  </Getattr>
                </Compare>
              </UnaryOp>
              <Assign fromlineno="406" tolineno="406" lineno="406" targets="[&lt;Subscript() l.406 [bb.cache] at Ox9791a4c&gt;]" value="[]">
                <Subscript fromlineno="406" tolineno="406" lineno="406">
                  <Getattr fromlineno="406" tolineno="406" lineno="406" attrname="packages_dynamic" expr="cacheData">
                    <Name fromlineno="406" tolineno="406" lineno="406" name="cacheData"/>
                  </Getattr>
                  <Index fromlineno="406" tolineno="406" lineno="None">
                    <Name fromlineno="406" tolineno="406" lineno="406" name="package"/>
                  </Index>
                </Subscript>
                <List fromlineno="406" tolineno="406" lineno="406"/>
              </Assign>
            </If>
            <Discard fromlineno="407" tolineno="407" lineno="407">
              <CallFunc fromlineno="407" tolineno="407" lineno="407" func="Getattr(append)">
                <Getattr fromlineno="407" tolineno="407" lineno="407" attrname="append" expr="cacheData.packages_dynamic[package]">
                  <Subscript fromlineno="407" tolineno="407" lineno="407">
                    <Getattr fromlineno="407" tolineno="407" lineno="407" attrname="packages_dynamic" expr="cacheData">
                      <Name fromlineno="407" tolineno="407" lineno="407" name="cacheData"/>
                    </Getattr>
                    <Index fromlineno="407" tolineno="407" lineno="None">
                      <Name fromlineno="407" tolineno="407" lineno="407" name="package"/>
                    </Index>
                  </Subscript>
                </Getattr>
                <Name fromlineno="407" tolineno="407" lineno="407" name="file_name"/>
              </CallFunc>
            </Discard>
          </For>
          <For fromlineno="409" tolineno="412" lineno="409">
            <AssName fromlineno="409" tolineno="409" lineno="409" name="rprovide"/>
            <Name fromlineno="409" tolineno="409" lineno="409" name="rprovides"/>
            <If fromlineno="410" tolineno="411" lineno="410">
              <UnaryOp fromlineno="410" tolineno="410" lineno="410">
                <Compare fromlineno="410" tolineno="410" lineno="410" op="('in', &lt;Getattr(rproviders) l.410 [bb.cache] at Ox9791dec&gt;)">
                  <Name fromlineno="410" tolineno="410" lineno="410" name="rprovide"/>
                  <Getattr fromlineno="410" tolineno="410" lineno="410" attrname="rproviders" expr="cacheData">
                    <Name fromlineno="410" tolineno="410" lineno="410" name="cacheData"/>
                  </Getattr>
                </Compare>
              </UnaryOp>
              <Assign fromlineno="411" tolineno="411" lineno="411" targets="[&lt;Subscript() l.411 [bb.cache] at Ox9791eac&gt;]" value="[]">
                <Subscript fromlineno="411" tolineno="411" lineno="411">
                  <Getattr fromlineno="411" tolineno="411" lineno="411" attrname="rproviders" expr="cacheData">
                    <Name fromlineno="411" tolineno="411" lineno="411" name="cacheData"/>
                  </Getattr>
                  <Index fromlineno="411" tolineno="411" lineno="None">
                    <Name fromlineno="411" tolineno="411" lineno="411" name="rprovide"/>
                  </Index>
                </Subscript>
                <List fromlineno="411" tolineno="411" lineno="411"/>
              </Assign>
            </If>
            <Discard fromlineno="412" tolineno="412" lineno="412">
              <CallFunc fromlineno="412" tolineno="412" lineno="412" func="Getattr(append)">
                <Getattr fromlineno="412" tolineno="412" lineno="412" attrname="append" expr="cacheData.rproviders[rprovide]">
                  <Subscript fromlineno="412" tolineno="412" lineno="412">
                    <Getattr fromlineno="412" tolineno="412" lineno="412" attrname="rproviders" expr="cacheData">
                      <Name fromlineno="412" tolineno="412" lineno="412" name="cacheData"/>
                    </Getattr>
                    <Index fromlineno="412" tolineno="412" lineno="None">
                      <Name fromlineno="412" tolineno="412" lineno="412" name="rprovide"/>
                    </Index>
                  </Subscript>
                </Getattr>
                <Name fromlineno="412" tolineno="412" lineno="412" name="file_name"/>
              </CallFunc>
            </Discard>
          </For>
          <If fromlineno="416" tolineno="417" lineno="416">
            <UnaryOp fromlineno="416" tolineno="416" lineno="416">
              <Compare fromlineno="416" tolineno="416" lineno="416" op="('in', &lt;Getattr(rundeps) l.416 [bb.cache] at Ox960c1ac&gt;)">
                <Name fromlineno="416" tolineno="416" lineno="416" name="file_name"/>
                <Getattr fromlineno="416" tolineno="416" lineno="416" attrname="rundeps" expr="cacheData">
                  <Name fromlineno="416" tolineno="416" lineno="416" name="cacheData"/>
                </Getattr>
              </Compare>
            </UnaryOp>
            <Assign fromlineno="417" tolineno="417" lineno="417" targets="[&lt;Subscript() l.417 [bb.cache] at Ox960c26c&gt;]" value="{}">
              <Subscript fromlineno="417" tolineno="417" lineno="417">
                <Getattr fromlineno="417" tolineno="417" lineno="417" attrname="rundeps" expr="cacheData">
                  <Name fromlineno="417" tolineno="417" lineno="417" name="cacheData"/>
                </Getattr>
                <Index fromlineno="417" tolineno="417" lineno="None">
                  <Name fromlineno="417" tolineno="417" lineno="417" name="file_name"/>
                </Index>
              </Subscript>
              <Dict fromlineno="417" tolineno="417" lineno="417"/>
            </Assign>
          </If>
          <If fromlineno="418" tolineno="419" lineno="418">
            <UnaryOp fromlineno="418" tolineno="418" lineno="418">
              <Compare fromlineno="418" tolineno="418" lineno="418" op="('in', &lt;Getattr(runrecs) l.418 [bb.cache] at Ox960c40c&gt;)">
                <Name fromlineno="418" tolineno="418" lineno="418" name="file_name"/>
                <Getattr fromlineno="418" tolineno="418" lineno="418" attrname="runrecs" expr="cacheData">
                  <Name fromlineno="418" tolineno="418" lineno="418" name="cacheData"/>
                </Getattr>
              </Compare>
            </UnaryOp>
            <Assign fromlineno="419" tolineno="419" lineno="419" targets="[&lt;Subscript() l.419 [bb.cache] at Ox960c4cc&gt;]" value="{}">
              <Subscript fromlineno="419" tolineno="419" lineno="419">
                <Getattr fromlineno="419" tolineno="419" lineno="419" attrname="runrecs" expr="cacheData">
                  <Name fromlineno="419" tolineno="419" lineno="419" name="cacheData"/>
                </Getattr>
                <Index fromlineno="419" tolineno="419" lineno="None">
                  <Name fromlineno="419" tolineno="419" lineno="419" name="file_name"/>
                </Index>
              </Subscript>
              <Dict fromlineno="419" tolineno="419" lineno="419"/>
            </Assign>
          </If>
          <Assign fromlineno="421" tolineno="421" lineno="421" targets="[&lt;AssName(rdepends) l.421 [bb.cache] at Ox960c5ec&gt;]" value="(self.getVar('RDEPENDS', file_name, True)) or ('')">
            <AssName fromlineno="421" tolineno="421" lineno="421" name="rdepends"/>
            <BoolOp fromlineno="421" tolineno="421" lineno="421" op="or" values="self.getVar('RDEPENDS', file_name, True),'',">
              <CallFunc fromlineno="421" tolineno="421" lineno="421" func="Getattr(getVar)">
                <Getattr fromlineno="421" tolineno="421" lineno="421" attrname="getVar" expr="self">
                  <Name fromlineno="421" tolineno="421" lineno="421" name="self"/>
                </Getattr>
                <Const fromlineno="421" tolineno="421" lineno="421" type="str">'RDEPENDS'</Const>
                <Name fromlineno="421" tolineno="421" lineno="421" name="file_name"/>
                <Const fromlineno="421" tolineno="421" lineno="421" type="bool">True</Const>
              </CallFunc>
              <Const fromlineno="421" tolineno="421" lineno="421" type="str">''</Const>
            </BoolOp>
          </Assign>
          <Assign fromlineno="422" tolineno="422" lineno="422" targets="[&lt;AssName(rrecommends) l.422 [bb.cache] at Ox960c7ac&gt;]" value="(self.getVar('RRECOMMENDS', file_name, True)) or ('')">
            <AssName fromlineno="422" tolineno="422" lineno="422" name="rrecommends"/>
            <BoolOp fromlineno="422" tolineno="422" lineno="422" op="or" values="self.getVar('RRECOMMENDS', file_name, True),'',">
              <CallFunc fromlineno="422" tolineno="422" lineno="422" func="Getattr(getVar)">
                <Getattr fromlineno="422" tolineno="422" lineno="422" attrname="getVar" expr="self">
                  <Name fromlineno="422" tolineno="422" lineno="422" name="self"/>
                </Getattr>
                <Const fromlineno="422" tolineno="422" lineno="422" type="str">'RRECOMMENDS'</Const>
                <Name fromlineno="422" tolineno="422" lineno="422" name="file_name"/>
                <Const fromlineno="422" tolineno="422" lineno="422" type="bool">True</Const>
              </CallFunc>
              <Const fromlineno="422" tolineno="422" lineno="422" type="str">''</Const>
            </BoolOp>
          </Assign>
          <For fromlineno="423" tolineno="430" lineno="423">
            <AssName fromlineno="423" tolineno="423" lineno="423" name="package"/>
            <BinOp fromlineno="423" tolineno="423" lineno="423" op="+" left="packages" right="[pn]">
              <Name fromlineno="423" tolineno="423" lineno="423" name="packages"/>
              <List fromlineno="423" tolineno="423" lineno="423">
                <Name fromlineno="423" tolineno="423" lineno="423" name="pn"/>
              </List>
            </BinOp>
            <If fromlineno="424" tolineno="425" lineno="424">
              <UnaryOp fromlineno="424" tolineno="424" lineno="424">
                <Compare fromlineno="424" tolineno="424" lineno="424" op="('in', &lt;Subscript() l.424 [bb.cache] at Ox960cb0c&gt;)">
                  <Name fromlineno="424" tolineno="424" lineno="424" name="package"/>
                  <Subscript fromlineno="424" tolineno="424" lineno="424">
                    <Getattr fromlineno="424" tolineno="424" lineno="424" attrname="rundeps" expr="cacheData">
                      <Name fromlineno="424" tolineno="424" lineno="424" name="cacheData"/>
                    </Getattr>
                    <Index fromlineno="424" tolineno="424" lineno="None">
                      <Name fromlineno="424" tolineno="424" lineno="424" name="file_name"/>
                    </Index>
                  </Subscript>
                </Compare>
              </UnaryOp>
              <Assign fromlineno="425" tolineno="425" lineno="425" targets="[&lt;Subscript() l.425 [bb.cache] at Ox960cc2c&gt;]" value="[]">
                <Subscript fromlineno="425" tolineno="425" lineno="425">
                  <Subscript fromlineno="425" tolineno="425" lineno="425">
                    <Getattr fromlineno="425" tolineno="425" lineno="425" attrname="rundeps" expr="cacheData">
                      <Name fromlineno="425" tolineno="425" lineno="425" name="cacheData"/>
                    </Getattr>
                    <Index fromlineno="425" tolineno="425" lineno="None">
                      <Name fromlineno="425" tolineno="425" lineno="425" name="file_name"/>
                    </Index>
                  </Subscript>
                  <Index fromlineno="425" tolineno="425" lineno="None">
                    <Name fromlineno="425" tolineno="425" lineno="425" name="package"/>
                  </Index>
                </Subscript>
                <List fromlineno="425" tolineno="425" lineno="425"/>
              </Assign>
            </If>
            <If fromlineno="426" tolineno="427" lineno="426">
              <UnaryOp fromlineno="426" tolineno="426" lineno="426">
                <Compare fromlineno="426" tolineno="426" lineno="426" op="('in', &lt;Subscript() l.426 [bb.cache] at Ox960ce2c&gt;)">
                  <Name fromlineno="426" tolineno="426" lineno="426" name="package"/>
                  <Subscript fromlineno="426" tolineno="426" lineno="426">
                    <Getattr fromlineno="426" tolineno="426" lineno="426" attrname="runrecs" expr="cacheData">
                      <Name fromlineno="426" tolineno="426" lineno="426" name="cacheData"/>
                    </Getattr>
                    <Index fromlineno="426" tolineno="426" lineno="None">
                      <Name fromlineno="426" tolineno="426" lineno="426" name="file_name"/>
                    </Index>
                  </Subscript>
                </Compare>
              </UnaryOp>
              <Assign fromlineno="427" tolineno="427" lineno="427" targets="[&lt;Subscript() l.427 [bb.cache] at Ox960cf4c&gt;]" value="[]">
                <Subscript fromlineno="427" tolineno="427" lineno="427">
                  <Subscript fromlineno="427" tolineno="427" lineno="427">
                    <Getattr fromlineno="427" tolineno="427" lineno="427" attrname="runrecs" expr="cacheData">
                      <Name fromlineno="427" tolineno="427" lineno="427" name="cacheData"/>
                    </Getattr>
                    <Index fromlineno="427" tolineno="427" lineno="None">
                      <Name fromlineno="427" tolineno="427" lineno="427" name="file_name"/>
                    </Index>
                  </Subscript>
                  <Index fromlineno="427" tolineno="427" lineno="None">
                    <Name fromlineno="427" tolineno="427" lineno="427" name="package"/>
                  </Index>
                </Subscript>
                <List fromlineno="427" tolineno="427" lineno="427"/>
              </Assign>
            </If>
            <Assign fromlineno="429" tolineno="429" lineno="429" targets="[&lt;Subscript() l.429 [bb.cache] at Ox960e0ec&gt;]" value="((rdepends) + (' ')) + ((self.getVar(('RDEPENDS_%s') % (package), file_name, True)) or (''))">
              <Subscript fromlineno="429" tolineno="429" lineno="429">
                <Subscript fromlineno="429" tolineno="429" lineno="429">
                  <Getattr fromlineno="429" tolineno="429" lineno="429" attrname="rundeps" expr="cacheData">
                    <Name fromlineno="429" tolineno="429" lineno="429" name="cacheData"/>
                  </Getattr>
                  <Index fromlineno="429" tolineno="429" lineno="None">
                    <Name fromlineno="429" tolineno="429" lineno="429" name="file_name"/>
                  </Index>
                </Subscript>
                <Index fromlineno="429" tolineno="429" lineno="None">
                  <Name fromlineno="429" tolineno="429" lineno="429" name="package"/>
                </Index>
              </Subscript>
              <BinOp fromlineno="429" tolineno="429" lineno="429" op="+" left="(rdepends) + (' ')" right="(self.getVar(('RDEPENDS_%s') % (package), file_name, True)) or ('')">
                <BinOp fromlineno="429" tolineno="429" lineno="429" op="+" left="rdepends" right="' '">
                  <Name fromlineno="429" tolineno="429" lineno="429" name="rdepends"/>
                  <Const fromlineno="429" tolineno="429" lineno="429" type="str">' '</Const>
                </BinOp>
                <BoolOp fromlineno="429" tolineno="429" lineno="429" op="or" values="self.getVar(('RDEPENDS_%s') % (package), file_name, True),'',">
                  <CallFunc fromlineno="429" tolineno="429" lineno="429" func="Getattr(getVar)">
                    <Getattr fromlineno="429" tolineno="429" lineno="429" attrname="getVar" expr="self">
                      <Name fromlineno="429" tolineno="429" lineno="429" name="self"/>
                    </Getattr>
                    <BinOp fromlineno="429" tolineno="429" lineno="429" op="%" left="'RDEPENDS_%s'" right="package">
                      <Const fromlineno="429" tolineno="429" lineno="429" type="str">'RDEPENDS_%s'</Const>
                      <Name fromlineno="429" tolineno="429" lineno="429" name="package"/>
                    </BinOp>
                    <Name fromlineno="429" tolineno="429" lineno="429" name="file_name"/>
                    <Const fromlineno="429" tolineno="429" lineno="429" type="bool">True</Const>
                  </CallFunc>
                  <Const fromlineno="429" tolineno="429" lineno="429" type="str">''</Const>
                </BoolOp>
              </BinOp>
            </Assign>
            <Assign fromlineno="430" tolineno="430" lineno="430" targets="[&lt;Subscript() l.430 [bb.cache] at Ox960e42c&gt;]" value="((rrecommends) + (' ')) + ((self.getVar(('RRECOMMENDS_%s') % (package), file_name, True)) or (''))">
              <Subscript fromlineno="430" tolineno="430" lineno="430">
                <Subscript fromlineno="430" tolineno="430" lineno="430">
                  <Getattr fromlineno="430" tolineno="430" lineno="430" attrname="runrecs" expr="cacheData">
                    <Name fromlineno="430" tolineno="430" lineno="430" name="cacheData"/>
                  </Getattr>
                  <Index fromlineno="430" tolineno="430" lineno="None">
                    <Name fromlineno="430" tolineno="430" lineno="430" name="file_name"/>
                  </Index>
                </Subscript>
                <Index fromlineno="430" tolineno="430" lineno="None">
                  <Name fromlineno="430" tolineno="430" lineno="430" name="package"/>
                </Index>
              </Subscript>
              <BinOp fromlineno="430" tolineno="430" lineno="430" op="+" left="(rrecommends) + (' ')" right="(self.getVar(('RRECOMMENDS_%s') % (package), file_name, True)) or ('')">
                <BinOp fromlineno="430" tolineno="430" lineno="430" op="+" left="rrecommends" right="' '">
                  <Name fromlineno="430" tolineno="430" lineno="430" name="rrecommends"/>
                  <Const fromlineno="430" tolineno="430" lineno="430" type="str">' '</Const>
                </BinOp>
                <BoolOp fromlineno="430" tolineno="430" lineno="430" op="or" values="self.getVar(('RRECOMMENDS_%s') % (package), file_name, True),'',">
                  <CallFunc fromlineno="430" tolineno="430" lineno="430" func="Getattr(getVar)">
                    <Getattr fromlineno="430" tolineno="430" lineno="430" attrname="getVar" expr="self">
                      <Name fromlineno="430" tolineno="430" lineno="430" name="self"/>
                    </Getattr>
                    <BinOp fromlineno="430" tolineno="430" lineno="430" op="%" left="'RRECOMMENDS_%s'" right="package">
                      <Const fromlineno="430" tolineno="430" lineno="430" type="str">'RRECOMMENDS_%s'</Const>
                      <Name fromlineno="430" tolineno="430" lineno="430" name="package"/>
                    </BinOp>
                    <Name fromlineno="430" tolineno="430" lineno="430" name="file_name"/>
                    <Const fromlineno="430" tolineno="430" lineno="430" type="bool">True</Const>
                  </CallFunc>
                  <Const fromlineno="430" tolineno="430" lineno="430" type="str">''</Const>
                </BoolOp>
              </BinOp>
            </Assign>
          </For>
          <If fromlineno="434" tolineno="435" lineno="434">
            <BoolOp fromlineno="434" tolineno="434" lineno="434" op="and" values="not self.getVar('BROKEN', file_name, True),not self.getVar('EXCLUDE_FROM_WORLD', file_name, True),">
              <UnaryOp fromlineno="434" tolineno="434" lineno="434">
                <CallFunc fromlineno="434" tolineno="434" lineno="434" func="Getattr(getVar)">
                  <Getattr fromlineno="434" tolineno="434" lineno="434" attrname="getVar" expr="self">
                    <Name fromlineno="434" tolineno="434" lineno="434" name="self"/>
                  </Getattr>
                  <Const fromlineno="434" tolineno="434" lineno="434" type="str">'BROKEN'</Const>
                  <Name fromlineno="434" tolineno="434" lineno="434" name="file_name"/>
                  <Const fromlineno="434" tolineno="434" lineno="434" type="bool">True</Const>
                </CallFunc>
              </UnaryOp>
              <UnaryOp fromlineno="434" tolineno="434" lineno="434">
                <CallFunc fromlineno="434" tolineno="434" lineno="434" func="Getattr(getVar)">
                  <Getattr fromlineno="434" tolineno="434" lineno="434" attrname="getVar" expr="self">
                    <Name fromlineno="434" tolineno="434" lineno="434" name="self"/>
                  </Getattr>
                  <Const fromlineno="434" tolineno="434" lineno="434" type="str">'EXCLUDE_FROM_WORLD'</Const>
                  <Name fromlineno="434" tolineno="434" lineno="434" name="file_name"/>
                  <Const fromlineno="434" tolineno="434" lineno="434" type="bool">True</Const>
                </CallFunc>
              </UnaryOp>
            </BoolOp>
            <Discard fromlineno="435" tolineno="435" lineno="435">
              <CallFunc fromlineno="435" tolineno="435" lineno="435" func="Getattr(append)">
                <Getattr fromlineno="435" tolineno="435" lineno="435" attrname="append" expr="cacheData.possible_world">
                  <Getattr fromlineno="435" tolineno="435" lineno="435" attrname="possible_world" expr="cacheData">
                    <Name fromlineno="435" tolineno="435" lineno="435" name="cacheData"/>
                  </Getattr>
                </Getattr>
                <Name fromlineno="435" tolineno="435" lineno="435" name="file_name"/>
              </CallFunc>
            </Discard>
          </If>
          <Discard fromlineno="438" tolineno="438" lineno="438">
            <CallFunc fromlineno="438" tolineno="438" lineno="438" func="Getattr(getVar)">
              <Getattr fromlineno="438" tolineno="438" lineno="438" attrname="getVar" expr="self">
                <Name fromlineno="438" tolineno="438" lineno="438" name="self"/>
              </Getattr>
              <Const fromlineno="438" tolineno="438" lineno="438" type="str">'__BB_DONT_CACHE'</Const>
              <Name fromlineno="438" tolineno="438" lineno="438" name="file_name"/>
              <Const fromlineno="438" tolineno="438" lineno="438" type="bool">True</Const>
            </CallFunc>
          </Discard>
          <Discard fromlineno="439" tolineno="439" lineno="439">
            <CallFunc fromlineno="439" tolineno="439" lineno="439" func="Getattr(getVar)">
              <Getattr fromlineno="439" tolineno="439" lineno="439" attrname="getVar" expr="self">
                <Name fromlineno="439" tolineno="439" lineno="439" name="self"/>
              </Getattr>
              <Const fromlineno="439" tolineno="439" lineno="439" type="str">'BBCLASSEXTEND'</Const>
              <Name fromlineno="439" tolineno="439" lineno="439" name="file_name"/>
              <Const fromlineno="439" tolineno="439" lineno="439" type="bool">True</Const>
            </CallFunc>
          </Discard>
        </Function>
        <Function fromlineno="441" tolineno="466" lineno="441">
          <Arguments fromlineno="441" tolineno="441" lineno="None" format_args="self, bbfile, config">
            <AssName fromlineno="441" tolineno="441" lineno="441" name="self"/>
            <AssName fromlineno="441" tolineno="441" lineno="441" name="bbfile"/>
            <AssName fromlineno="441" tolineno="441" lineno="441" name="config"/>
          </Arguments>
          <Import fromlineno="447" tolineno="447" lineno="447">
            <ImportName name="bb"/>
          </Import>
          <From fromlineno="448" tolineno="448" lineno="448" modname="bb">
            <ImportName name="utils"/>
            <ImportName name="data"/>
            <ImportName name="parse"/>
            <ImportName name="debug"/>
            <ImportName name="event"/>
            <ImportName name="fatal"/>
          </From>
          <Discard fromlineno="451" tolineno="451" lineno="451">
            <CallFunc fromlineno="451" tolineno="451" lineno="451" func="Getattr(setVar)">
              <Getattr fromlineno="451" tolineno="451" lineno="451" attrname="setVar" expr="data">
                <Name fromlineno="451" tolineno="451" lineno="451" name="data"/>
              </Getattr>
              <Const fromlineno="451" tolineno="451" lineno="451" type="str">'TMPDIR'</Const>
              <BoolOp fromlineno="451" tolineno="451" lineno="451" op="or" values="data.getVar('TMPDIR', config, 1),'',">
                <CallFunc fromlineno="451" tolineno="451" lineno="451" func="Getattr(getVar)">
                  <Getattr fromlineno="451" tolineno="451" lineno="451" attrname="getVar" expr="data">
                    <Name fromlineno="451" tolineno="451" lineno="451" name="data"/>
                  </Getattr>
                  <Const fromlineno="451" tolineno="451" lineno="451" type="str">'TMPDIR'</Const>
                  <Name fromlineno="451" tolineno="451" lineno="451" name="config"/>
                  <Const fromlineno="451" tolineno="451" lineno="451" type="int">1</Const>
                </CallFunc>
                <Const fromlineno="451" tolineno="451" lineno="451" type="str">''</Const>
              </BoolOp>
              <Name fromlineno="451" tolineno="451" lineno="451" name="config"/>
            </CallFunc>
          </Discard>
          <Assign fromlineno="452" tolineno="452" lineno="452" targets="[&lt;AssName(bbfile_loc) l.452 [bb.cache] at Ox961328c&gt;]" value="os.path.abspath(os.path.dirname(bbfile))">
            <AssName fromlineno="452" tolineno="452" lineno="452" name="bbfile_loc"/>
            <CallFunc fromlineno="452" tolineno="452" lineno="452" func="Getattr(abspath)">
              <Getattr fromlineno="452" tolineno="452" lineno="452" attrname="abspath" expr="os.path">
                <Getattr fromlineno="452" tolineno="452" lineno="452" attrname="path" expr="os">
                  <Name fromlineno="452" tolineno="452" lineno="452" name="os"/>
                </Getattr>
              </Getattr>
              <CallFunc fromlineno="452" tolineno="452" lineno="452" func="Getattr(dirname)">
                <Getattr fromlineno="452" tolineno="452" lineno="452" attrname="dirname" expr="os.path">
                  <Getattr fromlineno="452" tolineno="452" lineno="452" attrname="path" expr="os">
                    <Name fromlineno="452" tolineno="452" lineno="452" name="os"/>
                  </Getattr>
                </Getattr>
                <Name fromlineno="452" tolineno="452" lineno="452" name="bbfile"/>
              </CallFunc>
            </CallFunc>
          </Assign>
          <Assign fromlineno="453" tolineno="453" lineno="453" targets="[&lt;AssName(oldpath) l.453 [bb.cache] at Ox961348c&gt;]" value="os.path.abspath(os.getcwd())">
            <AssName fromlineno="453" tolineno="453" lineno="453" name="oldpath"/>
            <CallFunc fromlineno="453" tolineno="453" lineno="453" func="Getattr(abspath)">
              <Getattr fromlineno="453" tolineno="453" lineno="453" attrname="abspath" expr="os.path">
                <Getattr fromlineno="453" tolineno="453" lineno="453" attrname="path" expr="os">
                  <Name fromlineno="453" tolineno="453" lineno="453" name="os"/>
                </Getattr>
              </Getattr>
              <CallFunc fromlineno="453" tolineno="453" lineno="453" func="Getattr(getcwd)">
                <Getattr fromlineno="453" tolineno="453" lineno="453" attrname="getcwd" expr="os">
                  <Name fromlineno="453" tolineno="453" lineno="453" name="os"/>
                </Getattr>
              </CallFunc>
            </CallFunc>
          </Assign>
          <If fromlineno="454" tolineno="455" lineno="454">
            <CallFunc fromlineno="454" tolineno="454" lineno="454" func="Getattr(cached_mtime_noerror)">
              <Getattr fromlineno="454" tolineno="454" lineno="454" attrname="cached_mtime_noerror" expr="bb.parse">
                <Getattr fromlineno="454" tolineno="454" lineno="454" attrname="parse" expr="bb">
                  <Name fromlineno="454" tolineno="454" lineno="454" name="bb"/>
                </Getattr>
              </Getattr>
              <Name fromlineno="454" tolineno="454" lineno="454" name="bbfile_loc"/>
            </CallFunc>
            <Discard fromlineno="455" tolineno="455" lineno="455">
              <CallFunc fromlineno="455" tolineno="455" lineno="455" func="Getattr(chdir)">
                <Getattr fromlineno="455" tolineno="455" lineno="455" attrname="chdir" expr="os">
                  <Name fromlineno="455" tolineno="455" lineno="455" name="os"/>
                </Getattr>
                <Name fromlineno="455" tolineno="455" lineno="455" name="bbfile_loc"/>
              </CallFunc>
            </Discard>
          </If>
          <Assign fromlineno="456" tolineno="456" lineno="456" targets="[&lt;AssName(bb_data) l.456 [bb.cache] at Ox961380c&gt;]" value="data.init_db(config)">
            <AssName fromlineno="456" tolineno="456" lineno="456" name="bb_data"/>
            <CallFunc fromlineno="456" tolineno="456" lineno="456" func="Getattr(init_db)">
              <Getattr fromlineno="456" tolineno="456" lineno="456" attrname="init_db" expr="data">
                <Name fromlineno="456" tolineno="456" lineno="456" name="data"/>
              </Getattr>
              <Name fromlineno="456" tolineno="456" lineno="456" name="config"/>
            </CallFunc>
          </Assign>
          <TryExcept fromlineno="457" tolineno="466" lineno="457">
            <Assign fromlineno="458" tolineno="458" lineno="458" targets="[&lt;AssName(bb_data) l.458 [bb.cache] at Ox961398c&gt;]" value="parse.handle(bbfile, bb_data)">
              <AssName fromlineno="458" tolineno="458" lineno="458" name="bb_data"/>
              <CallFunc fromlineno="458" tolineno="458" lineno="458" func="Getattr(handle)">
                <Getattr fromlineno="458" tolineno="458" lineno="458" attrname="handle" expr="parse">
                  <Name fromlineno="458" tolineno="458" lineno="458" name="parse"/>
                </Getattr>
                <Name fromlineno="458" tolineno="458" lineno="458" name="bbfile"/>
                <Name fromlineno="458" tolineno="458" lineno="458" name="bb_data"/>
              </CallFunc>
            </Assign>
            <Discard fromlineno="459" tolineno="459" lineno="459">
              <CallFunc fromlineno="459" tolineno="459" lineno="459" func="Getattr(chdir)">
                <Getattr fromlineno="459" tolineno="459" lineno="459" attrname="chdir" expr="os">
                  <Name fromlineno="459" tolineno="459" lineno="459" name="os"/>
                </Getattr>
                <Name fromlineno="459" tolineno="459" lineno="459" name="oldpath"/>
              </CallFunc>
            </Discard>
            <Return fromlineno="460" tolineno="460" lineno="460">
              <Tuple fromlineno="460" tolineno="460" lineno="460">
                <Name fromlineno="460" tolineno="460" lineno="460" name="bb_data"/>
                <Const fromlineno="460" tolineno="460" lineno="460" type="bool">False</Const>
              </Tuple>
            </Return>
            <ExceptHandler fromlineno="461" tolineno="463" lineno="461">
              <Getattr fromlineno="461" tolineno="461" lineno="461" attrname="SkipPackage" expr="bb.parse">
                <Getattr fromlineno="461" tolineno="461" lineno="461" attrname="parse" expr="bb">
                  <Name fromlineno="461" tolineno="461" lineno="461" name="bb"/>
                </Getattr>
              </Getattr>
              <Discard fromlineno="462" tolineno="462" lineno="462">
                <CallFunc fromlineno="462" tolineno="462" lineno="462" func="Getattr(chdir)">
                  <Getattr fromlineno="462" tolineno="462" lineno="462" attrname="chdir" expr="os">
                    <Name fromlineno="462" tolineno="462" lineno="462" name="os"/>
                  </Getattr>
                  <Name fromlineno="462" tolineno="462" lineno="462" name="oldpath"/>
                </CallFunc>
              </Discard>
              <Return fromlineno="463" tolineno="463" lineno="463">
                <Tuple fromlineno="463" tolineno="463" lineno="463">
                  <Name fromlineno="463" tolineno="463" lineno="463" name="bb_data"/>
                  <Const fromlineno="463" tolineno="463" lineno="463" type="bool">True</Const>
                </Tuple>
              </Return>
            </ExceptHandler>
            <ExceptHandler fromlineno="464" tolineno="466" lineno="464">
              <Discard fromlineno="465" tolineno="465" lineno="465">
                <CallFunc fromlineno="465" tolineno="465" lineno="465" func="Getattr(chdir)">
                  <Getattr fromlineno="465" tolineno="465" lineno="465" attrname="chdir" expr="os">
                    <Name fromlineno="465" tolineno="465" lineno="465" name="os"/>
                  </Getattr>
                  <Name fromlineno="465" tolineno="465" lineno="465" name="oldpath"/>
                </CallFunc>
              </Discard>
              <Raise fromlineno="466" tolineno="466" lineno="466"/>
            </ExceptHandler>
          </TryExcept>
        </Function>
      </Class>
      <Function fromlineno="468" tolineno="485" lineno="468">
        <Arguments fromlineno="468" tolineno="468" lineno="None" format_args="cooker">
          <AssName fromlineno="468" tolineno="468" lineno="468" name="cooker"/>
        </Arguments>
        <Return fromlineno="485" tolineno="485" lineno="485">
          <CallFunc fromlineno="485" tolineno="485" lineno="485" func="Name(Cache)">
            <Name fromlineno="485" tolineno="485" lineno="485" name="Cache"/>
            <Name fromlineno="485" tolineno="485" lineno="485" name="cooker"/>
          </CallFunc>
        </Return>
      </Function>
      <Class fromlineno="492" tolineno="529" lineno="492">
        <Function fromlineno="497" tolineno="529" lineno="497">
          <Arguments fromlineno="497" tolineno="497" lineno="None" format_args="self">
            <AssName fromlineno="497" tolineno="497" lineno="497" name="self"/>
          </Arguments>
          <Assign fromlineno="502" tolineno="502" lineno="502" targets="[&lt;AssAttr(providers) l.502 [bb.cache] at Ox96191cc&gt;]" value="{}">
            <AssAttr fromlineno="502" tolineno="502" lineno="502" attrname="providers" expr="self">
              <Name fromlineno="502" tolineno="502" lineno="502" name="self"/>
            </AssAttr>
            <Dict fromlineno="502" tolineno="502" lineno="502"/>
          </Assign>
          <Assign fromlineno="503" tolineno="503" lineno="503" targets="[&lt;AssAttr(rproviders) l.503 [bb.cache] at Ox961928c&gt;]" value="{}">
            <AssAttr fromlineno="503" tolineno="503" lineno="503" attrname="rproviders" expr="self">
              <Name fromlineno="503" tolineno="503" lineno="503" name="self"/>
            </AssAttr>
            <Dict fromlineno="503" tolineno="503" lineno="503"/>
          </Assign>
          <Assign fromlineno="504" tolineno="504" lineno="504" targets="[&lt;AssAttr(packages) l.504 [bb.cache] at Ox961934c&gt;]" value="{}">
            <AssAttr fromlineno="504" tolineno="504" lineno="504" attrname="packages" expr="self">
              <Name fromlineno="504" tolineno="504" lineno="504" name="self"/>
            </AssAttr>
            <Dict fromlineno="504" tolineno="504" lineno="504"/>
          </Assign>
          <Assign fromlineno="505" tolineno="505" lineno="505" targets="[&lt;AssAttr(packages_dynamic) l.505 [bb.cache] at Ox961940c&gt;]" value="{}">
            <AssAttr fromlineno="505" tolineno="505" lineno="505" attrname="packages_dynamic" expr="self">
              <Name fromlineno="505" tolineno="505" lineno="505" name="self"/>
            </AssAttr>
            <Dict fromlineno="505" tolineno="505" lineno="505"/>
          </Assign>
          <Assign fromlineno="506" tolineno="506" lineno="506" targets="[&lt;AssAttr(possible_world) l.506 [bb.cache] at Ox96194cc&gt;]" value="[]">
            <AssAttr fromlineno="506" tolineno="506" lineno="506" attrname="possible_world" expr="self">
              <Name fromlineno="506" tolineno="506" lineno="506" name="self"/>
            </AssAttr>
            <List fromlineno="506" tolineno="506" lineno="506"/>
          </Assign>
          <Assign fromlineno="507" tolineno="507" lineno="507" targets="[&lt;AssAttr(pkg_pn) l.507 [bb.cache] at Ox961958c&gt;]" value="{}">
            <AssAttr fromlineno="507" tolineno="507" lineno="507" attrname="pkg_pn" expr="self">
              <Name fromlineno="507" tolineno="507" lineno="507" name="self"/>
            </AssAttr>
            <Dict fromlineno="507" tolineno="507" lineno="507"/>
          </Assign>
          <Assign fromlineno="508" tolineno="508" lineno="508" targets="[&lt;AssAttr(pkg_fn) l.508 [bb.cache] at Ox961964c&gt;]" value="{}">
            <AssAttr fromlineno="508" tolineno="508" lineno="508" attrname="pkg_fn" expr="self">
              <Name fromlineno="508" tolineno="508" lineno="508" name="self"/>
            </AssAttr>
            <Dict fromlineno="508" tolineno="508" lineno="508"/>
          </Assign>
          <Assign fromlineno="509" tolineno="509" lineno="509" targets="[&lt;AssAttr(pkg_pepvpr) l.509 [bb.cache] at Ox961970c&gt;]" value="{}">
            <AssAttr fromlineno="509" tolineno="509" lineno="509" attrname="pkg_pepvpr" expr="self">
              <Name fromlineno="509" tolineno="509" lineno="509" name="self"/>
            </AssAttr>
            <Dict fromlineno="509" tolineno="509" lineno="509"/>
          </Assign>
          <Assign fromlineno="510" tolineno="510" lineno="510" targets="[&lt;AssAttr(pkg_dp) l.510 [bb.cache] at Ox96197cc&gt;]" value="{}">
            <AssAttr fromlineno="510" tolineno="510" lineno="510" attrname="pkg_dp" expr="self">
              <Name fromlineno="510" tolineno="510" lineno="510" name="self"/>
            </AssAttr>
            <Dict fromlineno="510" tolineno="510" lineno="510"/>
          </Assign>
          <Assign fromlineno="511" tolineno="511" lineno="511" targets="[&lt;AssAttr(pn_provides) l.511 [bb.cache] at Ox961988c&gt;]" value="{}">
            <AssAttr fromlineno="511" tolineno="511" lineno="511" attrname="pn_provides" expr="self">
              <Name fromlineno="511" tolineno="511" lineno="511" name="self"/>
            </AssAttr>
            <Dict fromlineno="511" tolineno="511" lineno="511"/>
          </Assign>
          <Assign fromlineno="512" tolineno="512" lineno="512" targets="[&lt;AssAttr(fn_provides) l.512 [bb.cache] at Ox961994c&gt;]" value="{}">
            <AssAttr fromlineno="512" tolineno="512" lineno="512" attrname="fn_provides" expr="self">
              <Name fromlineno="512" tolineno="512" lineno="512" name="self"/>
            </AssAttr>
            <Dict fromlineno="512" tolineno="512" lineno="512"/>
          </Assign>
          <Assign fromlineno="513" tolineno="513" lineno="513" targets="[&lt;AssAttr(all_depends) l.513 [bb.cache] at Ox9619a0c&gt;]" value="[]">
            <AssAttr fromlineno="513" tolineno="513" lineno="513" attrname="all_depends" expr="self">
              <Name fromlineno="513" tolineno="513" lineno="513" name="self"/>
            </AssAttr>
            <List fromlineno="513" tolineno="513" lineno="513"/>
          </Assign>
          <Assign fromlineno="514" tolineno="514" lineno="514" targets="[&lt;AssAttr(deps) l.514 [bb.cache] at Ox9619acc&gt;]" value="{}">
            <AssAttr fromlineno="514" tolineno="514" lineno="514" attrname="deps" expr="self">
              <Name fromlineno="514" tolineno="514" lineno="514" name="self"/>
            </AssAttr>
            <Dict fromlineno="514" tolineno="514" lineno="514"/>
          </Assign>
          <Assign fromlineno="515" tolineno="515" lineno="515" targets="[&lt;AssAttr(rundeps) l.515 [bb.cache] at Ox9619b8c&gt;]" value="{}">
            <AssAttr fromlineno="515" tolineno="515" lineno="515" attrname="rundeps" expr="self">
              <Name fromlineno="515" tolineno="515" lineno="515" name="self"/>
            </AssAttr>
            <Dict fromlineno="515" tolineno="515" lineno="515"/>
          </Assign>
          <Assign fromlineno="516" tolineno="516" lineno="516" targets="[&lt;AssAttr(runrecs) l.516 [bb.cache] at Ox9619c4c&gt;]" value="{}">
            <AssAttr fromlineno="516" tolineno="516" lineno="516" attrname="runrecs" expr="self">
              <Name fromlineno="516" tolineno="516" lineno="516" name="self"/>
            </AssAttr>
            <Dict fromlineno="516" tolineno="516" lineno="516"/>
          </Assign>
          <Assign fromlineno="517" tolineno="517" lineno="517" targets="[&lt;AssAttr(task_queues) l.517 [bb.cache] at Ox9619d0c&gt;]" value="{}">
            <AssAttr fromlineno="517" tolineno="517" lineno="517" attrname="task_queues" expr="self">
              <Name fromlineno="517" tolineno="517" lineno="517" name="self"/>
            </AssAttr>
            <Dict fromlineno="517" tolineno="517" lineno="517"/>
          </Assign>
          <Assign fromlineno="518" tolineno="518" lineno="518" targets="[&lt;AssAttr(task_deps) l.518 [bb.cache] at Ox9619dcc&gt;]" value="{}">
            <AssAttr fromlineno="518" tolineno="518" lineno="518" attrname="task_deps" expr="self">
              <Name fromlineno="518" tolineno="518" lineno="518" name="self"/>
            </AssAttr>
            <Dict fromlineno="518" tolineno="518" lineno="518"/>
          </Assign>
          <Assign fromlineno="519" tolineno="519" lineno="519" targets="[&lt;AssAttr(stamp) l.519 [bb.cache] at Ox9619e8c&gt;]" value="{}">
            <AssAttr fromlineno="519" tolineno="519" lineno="519" attrname="stamp" expr="self">
              <Name fromlineno="519" tolineno="519" lineno="519" name="self"/>
            </AssAttr>
            <Dict fromlineno="519" tolineno="519" lineno="519"/>
          </Assign>
          <Assign fromlineno="520" tolineno="520" lineno="520" targets="[&lt;AssAttr(preferred) l.520 [bb.cache] at Ox9619f4c&gt;]" value="{}">
            <AssAttr fromlineno="520" tolineno="520" lineno="520" attrname="preferred" expr="self">
              <Name fromlineno="520" tolineno="520" lineno="520" name="self"/>
            </AssAttr>
            <Dict fromlineno="520" tolineno="520" lineno="520"/>
          </Assign>
          <Discard fromlineno="525" tolineno="525" lineno="525">
            <Const fromlineno="525" tolineno="525" lineno="525" type="str">'\n        Indirect Cache variables\n        (set elsewhere)\n        '</Const>
          </Discard>
          <Assign fromlineno="526" tolineno="526" lineno="526" targets="[&lt;AssAttr(ignored_dependencies) l.526 [bb.cache] at Ox961f06c&gt;]" value="[]">
            <AssAttr fromlineno="526" tolineno="526" lineno="526" attrname="ignored_dependencies" expr="self">
              <Name fromlineno="526" tolineno="526" lineno="526" name="self"/>
            </AssAttr>
            <List fromlineno="526" tolineno="526" lineno="526"/>
          </Assign>
          <Assign fromlineno="527" tolineno="527" lineno="527" targets="[&lt;AssAttr(world_target) l.527 [bb.cache] at Ox961f12c&gt;]" value="set()">
            <AssAttr fromlineno="527" tolineno="527" lineno="527" attrname="world_target" expr="self">
              <Name fromlineno="527" tolineno="527" lineno="527" name="self"/>
            </AssAttr>
            <CallFunc fromlineno="527" tolineno="527" lineno="527" func="Name(set)">
              <Name fromlineno="527" tolineno="527" lineno="527" name="set"/>
            </CallFunc>
          </Assign>
          <Assign fromlineno="528" tolineno="528" lineno="528" targets="[&lt;AssAttr(bbfile_priority) l.528 [bb.cache] at Ox961f20c&gt;]" value="{}">
            <AssAttr fromlineno="528" tolineno="528" lineno="528" attrname="bbfile_priority" expr="self">
              <Name fromlineno="528" tolineno="528" lineno="528" name="self"/>
            </AssAttr>
            <Dict fromlineno="528" tolineno="528" lineno="528"/>
          </Assign>
          <Assign fromlineno="529" tolineno="529" lineno="529" targets="[&lt;AssAttr(bbfile_config_priorities) l.529 [bb.cache] at Ox961f2cc&gt;]" value="[]">
            <AssAttr fromlineno="529" tolineno="529" lineno="529" attrname="bbfile_config_priorities" expr="self">
              <Name fromlineno="529" tolineno="529" lineno="529" name="self"/>
            </AssAttr>
            <List fromlineno="529" tolineno="529" lineno="529"/>
          </Assign>
        </Function>
      </Class>
    </Module>
    <Module fromlineno="0" tolineno="380" lineno="0" name="bb.build">
      <From fromlineno="28" tolineno="28" lineno="28" modname="bb">
        <ImportName name="data"/>
        <ImportName name="fetch"/>
        <ImportName name="event"/>
        <ImportName name="mkdirhier"/>
        <ImportName name="utils"/>
      </From>
      <Import fromlineno="29" tolineno="29" lineno="29">
        <ImportName name="bb"/>
        <ImportName name="os"/>
      </Import>
      <Assign fromlineno="35" tolineno="35" lineno="35" targets="[&lt;Subscript() l.35 [bb.build] at Ox921d66c&gt;]" value="bb">
        <Subscript fromlineno="35" tolineno="35" lineno="35">
          <Name fromlineno="35" tolineno="35" lineno="35" name="__builtins__"/>
          <Index fromlineno="35" tolineno="35" lineno="None">
            <Const fromlineno="35" tolineno="35" lineno="35" type="str">'bb'</Const>
          </Index>
        </Subscript>
        <Name fromlineno="35" tolineno="35" lineno="35" name="bb"/>
      </Assign>
      <Assign fromlineno="36" tolineno="36" lineno="36" targets="[&lt;Subscript() l.36 [bb.build] at Ox921d78c&gt;]" value="os">
        <Subscript fromlineno="36" tolineno="36" lineno="36">
          <Name fromlineno="36" tolineno="36" lineno="36" name="__builtins__"/>
          <Index fromlineno="36" tolineno="36" lineno="None">
            <Const fromlineno="36" tolineno="36" lineno="36" type="str">'os'</Const>
          </Index>
        </Subscript>
        <Name fromlineno="36" tolineno="36" lineno="36" name="os"/>
      </Assign>
      <Class fromlineno="39" tolineno="39" lineno="39">
        <Name fromlineno="39" tolineno="39" lineno="39" name="Exception"/>
      </Class>
      <Class fromlineno="42" tolineno="46" lineno="42">
        <Name fromlineno="42" tolineno="42" lineno="42" name="Exception"/>
        <Function fromlineno="45" tolineno="46" lineno="45">
          <Arguments fromlineno="45" tolineno="45" lineno="None" format_args="self, msg, event">
            <AssName fromlineno="45" tolineno="45" lineno="45" name="self"/>
            <AssName fromlineno="45" tolineno="45" lineno="45" name="msg"/>
            <AssName fromlineno="45" tolineno="45" lineno="45" name="event"/>
          </Arguments>
          <Assign fromlineno="46" tolineno="46" lineno="46" targets="[&lt;AssAttr(args) l.46 [bb.build] at Ox921daec&gt;]" value="(msg, event)">
            <AssAttr fromlineno="46" tolineno="46" lineno="46" attrname="args" expr="self">
              <Name fromlineno="46" tolineno="46" lineno="46" name="self"/>
            </AssAttr>
            <Tuple fromlineno="46" tolineno="46" lineno="46">
              <Name fromlineno="46" tolineno="46" lineno="46" name="msg"/>
              <Name fromlineno="46" tolineno="46" lineno="46" name="event"/>
            </Tuple>
          </Assign>
        </Function>
      </Class>
      <Class fromlineno="48" tolineno="61" lineno="48">
        <Getattr fromlineno="48" tolineno="48" lineno="48" attrname="Event" expr="event">
          <Name fromlineno="48" tolineno="48" lineno="48" name="event"/>
        </Getattr>
        <Function fromlineno="51" tolineno="53" lineno="51">
          <Arguments fromlineno="51" tolineno="51" lineno="None" format_args="self, t, d">
            <AssName fromlineno="51" tolineno="51" lineno="51" name="self"/>
            <AssName fromlineno="51" tolineno="51" lineno="51" name="t"/>
            <AssName fromlineno="51" tolineno="51" lineno="51" name="d"/>
          </Arguments>
          <Assign fromlineno="52" tolineno="52" lineno="52" targets="[&lt;AssAttr(_task) l.52 [bb.build] at Ox921ddec&gt;]" value="t">
            <AssAttr fromlineno="52" tolineno="52" lineno="52" attrname="_task" expr="self">
              <Name fromlineno="52" tolineno="52" lineno="52" name="self"/>
            </AssAttr>
            <Name fromlineno="52" tolineno="52" lineno="52" name="t"/>
          </Assign>
          <Discard fromlineno="53" tolineno="53" lineno="53">
            <CallFunc fromlineno="53" tolineno="53" lineno="53" func="Getattr(__init__)">
              <Getattr fromlineno="53" tolineno="53" lineno="53" attrname="__init__" expr="event.Event">
                <Getattr fromlineno="53" tolineno="53" lineno="53" attrname="Event" expr="event">
                  <Name fromlineno="53" tolineno="53" lineno="53" name="event"/>
                </Getattr>
              </Getattr>
              <Name fromlineno="53" tolineno="53" lineno="53" name="self"/>
              <Name fromlineno="53" tolineno="53" lineno="53" name="d"/>
            </CallFunc>
          </Discard>
        </Function>
        <Function fromlineno="55" tolineno="56" lineno="55">
          <Arguments fromlineno="55" tolineno="55" lineno="None" format_args="self">
            <AssName fromlineno="55" tolineno="55" lineno="55" name="self"/>
          </Arguments>
          <Return fromlineno="56" tolineno="56" lineno="56">
            <Getattr fromlineno="56" tolineno="56" lineno="56" attrname="_task" expr="self">
              <Name fromlineno="56" tolineno="56" lineno="56" name="self"/>
            </Getattr>
          </Return>
        </Function>
        <Function fromlineno="58" tolineno="59" lineno="58">
          <Arguments fromlineno="58" tolineno="58" lineno="None" format_args="self, task">
            <AssName fromlineno="58" tolineno="58" lineno="58" name="self"/>
            <AssName fromlineno="58" tolineno="58" lineno="58" name="task"/>
          </Arguments>
          <Assign fromlineno="59" tolineno="59" lineno="59" targets="[&lt;AssAttr(_task) l.59 [bb.build] at Ox951824c&gt;]" value="task">
            <AssAttr fromlineno="59" tolineno="59" lineno="59" attrname="_task" expr="self">
              <Name fromlineno="59" tolineno="59" lineno="59" name="self"/>
            </AssAttr>
            <Name fromlineno="59" tolineno="59" lineno="59" name="task"/>
          </Assign>
        </Function>
        <Assign fromlineno="61" tolineno="61" lineno="61" targets="[&lt;AssName(task) l.61 [bb.build] at Ox95182cc&gt;]" value="property(getTask, setTask, None, 'task property')">
          <AssName fromlineno="61" tolineno="61" lineno="61" name="task"/>
          <CallFunc fromlineno="61" tolineno="61" lineno="61" func="Name(property)">
            <Name fromlineno="61" tolineno="61" lineno="61" name="property"/>
            <Name fromlineno="61" tolineno="61" lineno="61" name="getTask"/>
            <Name fromlineno="61" tolineno="61" lineno="61" name="setTask"/>
            <Const fromlineno="61" tolineno="61" lineno="61" type="NoneType">None</Const>
            <Const fromlineno="61" tolineno="61" lineno="61" type="str">'task property'</Const>
          </CallFunc>
        </Assign>
      </Class>
      <Class fromlineno="63" tolineno="63" lineno="63">
        <Name fromlineno="63" tolineno="63" lineno="63" name="TaskBase"/>
      </Class>
      <Class fromlineno="66" tolineno="66" lineno="66">
        <Name fromlineno="66" tolineno="66" lineno="66" name="TaskBase"/>
      </Class>
      <Class fromlineno="69" tolineno="69" lineno="69">
        <Name fromlineno="69" tolineno="69" lineno="69" name="TaskBase"/>
      </Class>
      <Class fromlineno="72" tolineno="72" lineno="72">
        <Name fromlineno="72" tolineno="72" lineno="72" name="TaskBase"/>
      </Class>
      <Function fromlineno="77" tolineno="128" lineno="77">
        <Arguments fromlineno="77" tolineno="77" lineno="None" format_args="func, d, dirs=None">
          <AssName fromlineno="77" tolineno="77" lineno="77" name="func"/>
          <AssName fromlineno="77" tolineno="77" lineno="77" name="d"/>
          <AssName fromlineno="77" tolineno="77" lineno="77" name="dirs"/>
          <Const fromlineno="77" tolineno="77" lineno="77" type="NoneType">None</Const>
        </Arguments>
        <Assign fromlineno="80" tolineno="80" lineno="80" targets="[&lt;AssName(body) l.80 [bb.build] at Ox951870c&gt;]" value="data.getVar(func, d)">
          <AssName fromlineno="80" tolineno="80" lineno="80" name="body"/>
          <CallFunc fromlineno="80" tolineno="80" lineno="80" func="Getattr(getVar)">
            <Getattr fromlineno="80" tolineno="80" lineno="80" attrname="getVar" expr="data">
              <Name fromlineno="80" tolineno="80" lineno="80" name="data"/>
            </Getattr>
            <Name fromlineno="80" tolineno="80" lineno="80" name="func"/>
            <Name fromlineno="80" tolineno="80" lineno="80" name="d"/>
          </CallFunc>
        </Assign>
        <If fromlineno="81" tolineno="82" lineno="81">
          <UnaryOp fromlineno="81" tolineno="81" lineno="81">
            <Name fromlineno="81" tolineno="81" lineno="81" name="body"/>
          </UnaryOp>
          <Return fromlineno="82" tolineno="82" lineno="82"/>
        </If>
        <Assign fromlineno="84" tolineno="84" lineno="84" targets="[&lt;AssName(flags) l.84 [bb.build] at Ox951890c&gt;]" value="data.getVarFlags(func, d)">
          <AssName fromlineno="84" tolineno="84" lineno="84" name="flags"/>
          <CallFunc fromlineno="84" tolineno="84" lineno="84" func="Getattr(getVarFlags)">
            <Getattr fromlineno="84" tolineno="84" lineno="84" attrname="getVarFlags" expr="data">
              <Name fromlineno="84" tolineno="84" lineno="84" name="data"/>
            </Getattr>
            <Name fromlineno="84" tolineno="84" lineno="84" name="func"/>
            <Name fromlineno="84" tolineno="84" lineno="84" name="d"/>
          </CallFunc>
        </Assign>
        <For fromlineno="85" tolineno="87" lineno="85">
          <AssName fromlineno="85" tolineno="85" lineno="85" name="item"/>
          <List fromlineno="85" tolineno="85" lineno="85">
            <Const fromlineno="85" tolineno="85" lineno="85" type="str">'deps'</Const>
            <Const fromlineno="85" tolineno="85" lineno="85" type="str">'check'</Const>
            <Const fromlineno="85" tolineno="85" lineno="85" type="str">'interactive'</Const>
            <Const fromlineno="85" tolineno="85" lineno="85" type="str">'python'</Const>
            <Const fromlineno="85" tolineno="85" lineno="85" type="str">'cleandirs'</Const>
            <Const fromlineno="85" tolineno="85" lineno="85" type="str">'dirs'</Const>
            <Const fromlineno="85" tolineno="85" lineno="85" type="str">'lockfiles'</Const>
            <Const fromlineno="85" tolineno="85" lineno="85" type="str">'fakeroot'</Const>
          </List>
          <If fromlineno="86" tolineno="87" lineno="86">
            <UnaryOp fromlineno="86" tolineno="86" lineno="86">
              <Compare fromlineno="86" tolineno="86" lineno="86" op="('in', &lt;Name(flags) l.86 [bb.build] at Ox9518cac&gt;)">
                <Name fromlineno="86" tolineno="86" lineno="86" name="item"/>
                <Name fromlineno="86" tolineno="86" lineno="86" name="flags"/>
              </Compare>
            </UnaryOp>
            <Assign fromlineno="87" tolineno="87" lineno="87" targets="[&lt;Subscript() l.87 [bb.build] at Ox9518d4c&gt;]" value="None">
              <Subscript fromlineno="87" tolineno="87" lineno="87">
                <Name fromlineno="87" tolineno="87" lineno="87" name="flags"/>
                <Index fromlineno="87" tolineno="87" lineno="None">
                  <Name fromlineno="87" tolineno="87" lineno="87" name="item"/>
                </Index>
              </Subscript>
              <Const fromlineno="87" tolineno="87" lineno="87" type="NoneType">None</Const>
            </Assign>
          </If>
        </For>
        <Assign fromlineno="89" tolineno="89" lineno="89" targets="[&lt;AssName(ispython) l.89 [bb.build] at Ox9518e2c&gt;]" value="flags['python']">
          <AssName fromlineno="89" tolineno="89" lineno="89" name="ispython"/>
          <Subscript fromlineno="89" tolineno="89" lineno="89">
            <Name fromlineno="89" tolineno="89" lineno="89" name="flags"/>
            <Index fromlineno="89" tolineno="89" lineno="None">
              <Const fromlineno="89" tolineno="89" lineno="89" type="str">'python'</Const>
            </Index>
          </Subscript>
        </Assign>
        <Assign fromlineno="91" tolineno="91" lineno="91" targets="[&lt;AssName(cleandirs) l.91 [bb.build] at Ox9518f2c&gt;]" value="(data.expand(flags['cleandirs'], d)) or ('').split()">
          <AssName fromlineno="91" tolineno="91" lineno="91" name="cleandirs"/>
          <CallFunc fromlineno="91" tolineno="91" lineno="91" func="Getattr(split)">
            <Getattr fromlineno="91" tolineno="91" lineno="91" attrname="split" expr="(data.expand(flags['cleandirs'], d)) or ('')">
              <BoolOp fromlineno="91" tolineno="91" lineno="91" op="or" values="data.expand(flags['cleandirs'], d),'',">
                <CallFunc fromlineno="91" tolineno="91" lineno="91" func="Getattr(expand)">
                  <Getattr fromlineno="91" tolineno="91" lineno="91" attrname="expand" expr="data">
                    <Name fromlineno="91" tolineno="91" lineno="91" name="data"/>
                  </Getattr>
                  <Subscript fromlineno="91" tolineno="91" lineno="91">
                    <Name fromlineno="91" tolineno="91" lineno="91" name="flags"/>
                    <Index fromlineno="91" tolineno="91" lineno="None">
                      <Const fromlineno="91" tolineno="91" lineno="91" type="str">'cleandirs'</Const>
                    </Index>
                  </Subscript>
                  <Name fromlineno="91" tolineno="91" lineno="91" name="d"/>
                </CallFunc>
                <Const fromlineno="91" tolineno="91" lineno="91" type="str">''</Const>
              </BoolOp>
            </Getattr>
          </CallFunc>
        </Assign>
        <For fromlineno="92" tolineno="93" lineno="92">
          <AssName fromlineno="92" tolineno="92" lineno="92" name="cdir"/>
          <Name fromlineno="92" tolineno="92" lineno="92" name="cleandirs"/>
          <Discard fromlineno="93" tolineno="93" lineno="93">
            <CallFunc fromlineno="93" tolineno="93" lineno="93" func="Getattr(system)">
              <Getattr fromlineno="93" tolineno="93" lineno="93" attrname="system" expr="os">
                <Name fromlineno="93" tolineno="93" lineno="93" name="os"/>
              </Getattr>
              <BinOp fromlineno="93" tolineno="93" lineno="93" op="%" left="'rm -rf %s'" right="cdir">
                <Const fromlineno="93" tolineno="93" lineno="93" type="str">'rm -rf %s'</Const>
                <Name fromlineno="93" tolineno="93" lineno="93" name="cdir"/>
              </BinOp>
            </CallFunc>
          </Discard>
        </For>
        <If fromlineno="95" tolineno="98" lineno="95">
          <Name fromlineno="95" tolineno="95" lineno="95" name="dirs"/>
          <Assign fromlineno="96" tolineno="96" lineno="96" targets="[&lt;AssName(dirs) l.96 [bb.build] at Ox95123ec&gt;]" value="data.expand(dirs, d)">
            <AssName fromlineno="96" tolineno="96" lineno="96" name="dirs"/>
            <CallFunc fromlineno="96" tolineno="96" lineno="96" func="Getattr(expand)">
              <Getattr fromlineno="96" tolineno="96" lineno="96" attrname="expand" expr="data">
                <Name fromlineno="96" tolineno="96" lineno="96" name="data"/>
              </Getattr>
              <Name fromlineno="96" tolineno="96" lineno="96" name="dirs"/>
              <Name fromlineno="96" tolineno="96" lineno="96" name="d"/>
            </CallFunc>
          </Assign>
          <Assign fromlineno="98" tolineno="98" lineno="98" targets="[&lt;AssName(dirs) l.98 [bb.build] at Ox951252c&gt;]" value="(data.expand(flags['dirs'], d)) or ('').split()">
            <AssName fromlineno="98" tolineno="98" lineno="98" name="dirs"/>
            <CallFunc fromlineno="98" tolineno="98" lineno="98" func="Getattr(split)">
              <Getattr fromlineno="98" tolineno="98" lineno="98" attrname="split" expr="(data.expand(flags['dirs'], d)) or ('')">
                <BoolOp fromlineno="98" tolineno="98" lineno="98" op="or" values="data.expand(flags['dirs'], d),'',">
                  <CallFunc fromlineno="98" tolineno="98" lineno="98" func="Getattr(expand)">
                    <Getattr fromlineno="98" tolineno="98" lineno="98" attrname="expand" expr="data">
                      <Name fromlineno="98" tolineno="98" lineno="98" name="data"/>
                    </Getattr>
                    <Subscript fromlineno="98" tolineno="98" lineno="98">
                      <Name fromlineno="98" tolineno="98" lineno="98" name="flags"/>
                      <Index fromlineno="98" tolineno="98" lineno="None">
                        <Const fromlineno="98" tolineno="98" lineno="98" type="str">'dirs'</Const>
                      </Index>
                    </Subscript>
                    <Name fromlineno="98" tolineno="98" lineno="98" name="d"/>
                  </CallFunc>
                  <Const fromlineno="98" tolineno="98" lineno="98" type="str">''</Const>
                </BoolOp>
              </Getattr>
            </CallFunc>
          </Assign>
        </If>
        <For fromlineno="99" tolineno="100" lineno="99">
          <AssName fromlineno="99" tolineno="99" lineno="99" name="adir"/>
          <Name fromlineno="99" tolineno="99" lineno="99" name="dirs"/>
          <Discard fromlineno="100" tolineno="100" lineno="100">
            <CallFunc fromlineno="100" tolineno="100" lineno="100" func="Name(mkdirhier)">
              <Name fromlineno="100" tolineno="100" lineno="100" name="mkdirhier"/>
              <Name fromlineno="100" tolineno="100" lineno="100" name="adir"/>
            </CallFunc>
          </Discard>
        </For>
        <If fromlineno="102" tolineno="105" lineno="102">
          <Compare fromlineno="102" tolineno="102" lineno="102" op="('&gt;', &lt;Const(int) l.102 [bb.build] at Ox951296c&gt;)">
            <CallFunc fromlineno="102" tolineno="102" lineno="102" func="Name(len)">
              <Name fromlineno="102" tolineno="102" lineno="102" name="len"/>
              <Name fromlineno="102" tolineno="102" lineno="102" name="dirs"/>
            </CallFunc>
            <Const fromlineno="102" tolineno="102" lineno="102" type="int">0</Const>
          </Compare>
          <Assign fromlineno="103" tolineno="103" lineno="103" targets="[&lt;AssName(adir) l.103 [bb.build] at Ox9512a0c&gt;]" value="dirs[-1]">
            <AssName fromlineno="103" tolineno="103" lineno="103" name="adir"/>
            <Subscript fromlineno="103" tolineno="103" lineno="103">
              <Name fromlineno="103" tolineno="103" lineno="103" name="dirs"/>
              <Index fromlineno="103" tolineno="103" lineno="None">
                <Const fromlineno="103" tolineno="103" lineno="103" type="int">-1</Const>
              </Index>
            </Subscript>
          </Assign>
          <Assign fromlineno="105" tolineno="105" lineno="105" targets="[&lt;AssName(adir) l.105 [bb.build] at Ox9512b0c&gt;]" value="data.getVar('B', d, 1)">
            <AssName fromlineno="105" tolineno="105" lineno="105" name="adir"/>
            <CallFunc fromlineno="105" tolineno="105" lineno="105" func="Getattr(getVar)">
              <Getattr fromlineno="105" tolineno="105" lineno="105" attrname="getVar" expr="data">
                <Name fromlineno="105" tolineno="105" lineno="105" name="data"/>
              </Getattr>
              <Const fromlineno="105" tolineno="105" lineno="105" type="str">'B'</Const>
              <Name fromlineno="105" tolineno="105" lineno="105" name="d"/>
              <Const fromlineno="105" tolineno="105" lineno="105" type="int">1</Const>
            </CallFunc>
          </Assign>
        </If>
        <TryExcept fromlineno="107" tolineno="110" lineno="107">
          <Assign fromlineno="108" tolineno="108" lineno="108" targets="[&lt;AssName(prevdir) l.108 [bb.build] at Ox9512c8c&gt;]" value="os.getcwd()">
            <AssName fromlineno="108" tolineno="108" lineno="108" name="prevdir"/>
            <CallFunc fromlineno="108" tolineno="108" lineno="108" func="Getattr(getcwd)">
              <Getattr fromlineno="108" tolineno="108" lineno="108" attrname="getcwd" expr="os">
                <Name fromlineno="108" tolineno="108" lineno="108" name="os"/>
              </Getattr>
            </CallFunc>
          </Assign>
          <ExceptHandler fromlineno="109" tolineno="110" lineno="109">
            <Name fromlineno="109" tolineno="109" lineno="109" name="OSError"/>
            <Assign fromlineno="110" tolineno="110" lineno="110" targets="[&lt;AssName(prevdir) l.110 [bb.build] at Ox9512e2c&gt;]" value="data.getVar('TOPDIR', d, True)">
              <AssName fromlineno="110" tolineno="110" lineno="110" name="prevdir"/>
              <CallFunc fromlineno="110" tolineno="110" lineno="110" func="Getattr(getVar)">
                <Getattr fromlineno="110" tolineno="110" lineno="110" attrname="getVar" expr="data">
                  <Name fromlineno="110" tolineno="110" lineno="110" name="data"/>
                </Getattr>
                <Const fromlineno="110" tolineno="110" lineno="110" type="str">'TOPDIR'</Const>
                <Name fromlineno="110" tolineno="110" lineno="110" name="d"/>
                <Const fromlineno="110" tolineno="110" lineno="110" type="bool">True</Const>
              </CallFunc>
            </Assign>
          </ExceptHandler>
        </TryExcept>
        <If fromlineno="111" tolineno="112" lineno="111">
          <BoolOp fromlineno="111" tolineno="111" lineno="111" op="and" values="adir,os.access(adir, os.F_OK),">
            <Name fromlineno="111" tolineno="111" lineno="111" name="adir"/>
            <CallFunc fromlineno="111" tolineno="111" lineno="111" func="Getattr(access)">
              <Getattr fromlineno="111" tolineno="111" lineno="111" attrname="access" expr="os">
                <Name fromlineno="111" tolineno="111" lineno="111" name="os"/>
              </Getattr>
              <Name fromlineno="111" tolineno="111" lineno="111" name="adir"/>
              <Getattr fromlineno="111" tolineno="111" lineno="111" attrname="F_OK" expr="os">
                <Name fromlineno="111" tolineno="111" lineno="111" name="os"/>
              </Getattr>
            </CallFunc>
          </BoolOp>
          <Discard fromlineno="112" tolineno="112" lineno="112">
            <CallFunc fromlineno="112" tolineno="112" lineno="112" func="Getattr(chdir)">
              <Getattr fromlineno="112" tolineno="112" lineno="112" attrname="chdir" expr="os">
                <Name fromlineno="112" tolineno="112" lineno="112" name="os"/>
              </Getattr>
              <Name fromlineno="112" tolineno="112" lineno="112" name="adir"/>
            </CallFunc>
          </Discard>
        </If>
        <Assign fromlineno="114" tolineno="114" lineno="114" targets="[&lt;AssName(locks) l.114 [bb.build] at Ox95171cc&gt;]" value="[]">
          <AssName fromlineno="114" tolineno="114" lineno="114" name="locks"/>
          <List fromlineno="114" tolineno="114" lineno="114"/>
        </Assign>
        <Assign fromlineno="115" tolineno="115" lineno="115" targets="[&lt;AssName(lockfiles) l.115 [bb.build] at Ox951728c&gt;]" value="(data.expand(flags['lockfiles'], d)) or ('').split()">
          <AssName fromlineno="115" tolineno="115" lineno="115" name="lockfiles"/>
          <CallFunc fromlineno="115" tolineno="115" lineno="115" func="Getattr(split)">
            <Getattr fromlineno="115" tolineno="115" lineno="115" attrname="split" expr="(data.expand(flags['lockfiles'], d)) or ('')">
              <BoolOp fromlineno="115" tolineno="115" lineno="115" op="or" values="data.expand(flags['lockfiles'], d),'',">
                <CallFunc fromlineno="115" tolineno="115" lineno="115" func="Getattr(expand)">
                  <Getattr fromlineno="115" tolineno="115" lineno="115" attrname="expand" expr="data">
                    <Name fromlineno="115" tolineno="115" lineno="115" name="data"/>
                  </Getattr>
                  <Subscript fromlineno="115" tolineno="115" lineno="115">
                    <Name fromlineno="115" tolineno="115" lineno="115" name="flags"/>
                    <Index fromlineno="115" tolineno="115" lineno="None">
                      <Const fromlineno="115" tolineno="115" lineno="115" type="str">'lockfiles'</Const>
                    </Index>
                  </Subscript>
                  <Name fromlineno="115" tolineno="115" lineno="115" name="d"/>
                </CallFunc>
                <Const fromlineno="115" tolineno="115" lineno="115" type="str">''</Const>
              </BoolOp>
            </Getattr>
          </CallFunc>
        </Assign>
        <For fromlineno="116" tolineno="117" lineno="116">
          <AssName fromlineno="116" tolineno="116" lineno="116" name="lock"/>
          <Name fromlineno="116" tolineno="116" lineno="116" name="lockfiles"/>
          <Discard fromlineno="117" tolineno="117" lineno="117">
            <CallFunc fromlineno="117" tolineno="117" lineno="117" func="Getattr(append)">
              <Getattr fromlineno="117" tolineno="117" lineno="117" attrname="append" expr="locks">
                <Name fromlineno="117" tolineno="117" lineno="117" name="locks"/>
              </Getattr>
              <CallFunc fromlineno="117" tolineno="117" lineno="117" func="Getattr(lockfile)">
                <Getattr fromlineno="117" tolineno="117" lineno="117" attrname="lockfile" expr="bb.utils">
                  <Getattr fromlineno="117" tolineno="117" lineno="117" attrname="utils" expr="bb">
                    <Name fromlineno="117" tolineno="117" lineno="117" name="bb"/>
                  </Getattr>
                </Getattr>
                <Name fromlineno="117" tolineno="117" lineno="117" name="lock"/>
              </CallFunc>
            </CallFunc>
          </Discard>
        </For>
        <If fromlineno="119" tolineno="122" lineno="119">
          <Subscript fromlineno="119" tolineno="119" lineno="119">
            <Name fromlineno="119" tolineno="119" lineno="119" name="flags"/>
            <Index fromlineno="119" tolineno="119" lineno="None">
              <Const fromlineno="119" tolineno="119" lineno="119" type="str">'python'</Const>
            </Index>
          </Subscript>
          <Discard fromlineno="120" tolineno="120" lineno="120">
            <CallFunc fromlineno="120" tolineno="120" lineno="120" func="Name(exec_func_python)">
              <Name fromlineno="120" tolineno="120" lineno="120" name="exec_func_python"/>
              <Name fromlineno="120" tolineno="120" lineno="120" name="func"/>
              <Name fromlineno="120" tolineno="120" lineno="120" name="d"/>
            </CallFunc>
          </Discard>
          <Discard fromlineno="122" tolineno="122" lineno="122">
            <CallFunc fromlineno="122" tolineno="122" lineno="122" func="Name(exec_func_shell)">
              <Name fromlineno="122" tolineno="122" lineno="122" name="exec_func_shell"/>
              <Name fromlineno="122" tolineno="122" lineno="122" name="func"/>
              <Name fromlineno="122" tolineno="122" lineno="122" name="d"/>
              <Name fromlineno="122" tolineno="122" lineno="122" name="flags"/>
            </CallFunc>
          </Discard>
        </If>
        <For fromlineno="124" tolineno="125" lineno="124">
          <AssName fromlineno="124" tolineno="124" lineno="124" name="lock"/>
          <Name fromlineno="124" tolineno="124" lineno="124" name="locks"/>
          <Discard fromlineno="125" tolineno="125" lineno="125">
            <CallFunc fromlineno="125" tolineno="125" lineno="125" func="Getattr(unlockfile)">
              <Getattr fromlineno="125" tolineno="125" lineno="125" attrname="unlockfile" expr="bb.utils">
                <Getattr fromlineno="125" tolineno="125" lineno="125" attrname="utils" expr="bb">
                  <Name fromlineno="125" tolineno="125" lineno="125" name="bb"/>
                </Getattr>
              </Getattr>
              <Name fromlineno="125" tolineno="125" lineno="125" name="lock"/>
            </CallFunc>
          </Discard>
        </For>
        <If fromlineno="127" tolineno="128" lineno="127">
          <CallFunc fromlineno="127" tolineno="127" lineno="127" func="Getattr(exists)">
            <Getattr fromlineno="127" tolineno="127" lineno="127" attrname="exists" expr="os.path">
              <Getattr fromlineno="127" tolineno="127" lineno="127" attrname="path" expr="os">
                <Name fromlineno="127" tolineno="127" lineno="127" name="os"/>
              </Getattr>
            </Getattr>
            <Name fromlineno="127" tolineno="127" lineno="127" name="prevdir"/>
          </CallFunc>
          <Discard fromlineno="128" tolineno="128" lineno="128">
            <CallFunc fromlineno="128" tolineno="128" lineno="128" func="Getattr(chdir)">
              <Getattr fromlineno="128" tolineno="128" lineno="128" attrname="chdir" expr="os">
                <Name fromlineno="128" tolineno="128" lineno="128" name="os"/>
              </Getattr>
              <Name fromlineno="128" tolineno="128" lineno="128" name="prevdir"/>
            </CallFunc>
          </Discard>
        </If>
      </Function>
      <Function fromlineno="130" tolineno="143" lineno="130">
        <Arguments fromlineno="130" tolineno="130" lineno="None" format_args="func, d">
          <AssName fromlineno="130" tolineno="130" lineno="130" name="func"/>
          <AssName fromlineno="130" tolineno="130" lineno="130" name="d"/>
        </Arguments>
        <Import fromlineno="132" tolineno="132" lineno="132">
          <ImportName name="re"/>
          <ImportName name="os"/>
        </Import>
        <Assign fromlineno="134" tolineno="134" lineno="134" targets="[&lt;AssName(bbfile) l.134 [bb.build] at Ox9517e6c&gt;]" value="bb.data.getVar('FILE', d, 1)">
          <AssName fromlineno="134" tolineno="134" lineno="134" name="bbfile"/>
          <CallFunc fromlineno="134" tolineno="134" lineno="134" func="Getattr(getVar)">
            <Getattr fromlineno="134" tolineno="134" lineno="134" attrname="getVar" expr="bb.data">
              <Getattr fromlineno="134" tolineno="134" lineno="134" attrname="data" expr="bb">
                <Name fromlineno="134" tolineno="134" lineno="134" name="bb"/>
              </Getattr>
            </Getattr>
            <Const fromlineno="134" tolineno="134" lineno="134" type="str">'FILE'</Const>
            <Name fromlineno="134" tolineno="134" lineno="134" name="d"/>
            <Const fromlineno="134" tolineno="134" lineno="134" type="int">1</Const>
          </CallFunc>
        </Assign>
        <Assign fromlineno="135" tolineno="135" lineno="135" targets="[&lt;AssName(tmp) l.135 [bb.build] at Ox951d04c&gt;]" value="(('def ') + (func)) + (('():\n%s') % (data.getVar(func, d)))">
          <AssName fromlineno="135" tolineno="135" lineno="135" name="tmp"/>
          <BinOp fromlineno="135" tolineno="135" lineno="135" op="+" left="('def ') + (func)" right="('():\n%s') % (data.getVar(func, d))">
            <BinOp fromlineno="135" tolineno="135" lineno="135" op="+" left="'def '" right="func">
              <Const fromlineno="135" tolineno="135" lineno="135" type="str">'def '</Const>
              <Name fromlineno="135" tolineno="135" lineno="135" name="func"/>
            </BinOp>
            <BinOp fromlineno="135" tolineno="135" lineno="135" op="%" left="'():\n%s'" right="data.getVar(func, d)">
              <Const fromlineno="135" tolineno="135" lineno="135" type="str">'():\n%s'</Const>
              <CallFunc fromlineno="135" tolineno="135" lineno="135" func="Getattr(getVar)">
                <Getattr fromlineno="135" tolineno="135" lineno="135" attrname="getVar" expr="data">
                  <Name fromlineno="135" tolineno="135" lineno="135" name="data"/>
                </Getattr>
                <Name fromlineno="135" tolineno="135" lineno="135" name="func"/>
                <Name fromlineno="135" tolineno="135" lineno="135" name="d"/>
              </CallFunc>
            </BinOp>
          </BinOp>
        </Assign>
        <AugAssign fromlineno="136" tolineno="136" lineno="136" target="tmp" value="(('\n') + (func)) + ('()')">
          <AssName fromlineno="136" tolineno="136" lineno="136" name="tmp"/>
          <BinOp fromlineno="136" tolineno="136" lineno="136" op="+" left="('\n') + (func)" right="'()'">
            <BinOp fromlineno="136" tolineno="136" lineno="136" op="+" left="'\n'" right="func">
              <Const fromlineno="136" tolineno="136" lineno="136" type="str">'\n'</Const>
              <Name fromlineno="136" tolineno="136" lineno="136" name="func"/>
            </BinOp>
            <Const fromlineno="136" tolineno="136" lineno="136" type="str">'()'</Const>
          </BinOp>
        </AugAssign>
        <Assign fromlineno="137" tolineno="137" lineno="137" targets="[&lt;AssName(comp) l.137 [bb.build] at Ox951d34c&gt;]" value="utils.better_compile(tmp, func, bbfile)">
          <AssName fromlineno="137" tolineno="137" lineno="137" name="comp"/>
          <CallFunc fromlineno="137" tolineno="137" lineno="137" func="Getattr(better_compile)">
            <Getattr fromlineno="137" tolineno="137" lineno="137" attrname="better_compile" expr="utils">
              <Name fromlineno="137" tolineno="137" lineno="137" name="utils"/>
            </Getattr>
            <Name fromlineno="137" tolineno="137" lineno="137" name="tmp"/>
            <Name fromlineno="137" tolineno="137" lineno="137" name="func"/>
            <Name fromlineno="137" tolineno="137" lineno="137" name="bbfile"/>
          </CallFunc>
        </Assign>
        <Assign fromlineno="138" tolineno="138" lineno="138" targets="[&lt;AssName(prevdir) l.138 [bb.build] at Ox951d4ac&gt;]" value="os.getcwd()">
          <AssName fromlineno="138" tolineno="138" lineno="138" name="prevdir"/>
          <CallFunc fromlineno="138" tolineno="138" lineno="138" func="Getattr(getcwd)">
            <Getattr fromlineno="138" tolineno="138" lineno="138" attrname="getcwd" expr="os">
              <Name fromlineno="138" tolineno="138" lineno="138" name="os"/>
            </Getattr>
          </CallFunc>
        </Assign>
        <Assign fromlineno="139" tolineno="139" lineno="139" targets="[&lt;AssName(g) l.139 [bb.build] at Ox951d5ac&gt;]" value="{}">
          <AssName fromlineno="139" tolineno="139" lineno="139" name="g"/>
          <Dict fromlineno="139" tolineno="139" lineno="139"/>
        </Assign>
        <Assign fromlineno="140" tolineno="140" lineno="140" targets="[&lt;Subscript() l.140 [bb.build] at Ox951d66c&gt;]" value="d">
          <Subscript fromlineno="140" tolineno="140" lineno="140">
            <Name fromlineno="140" tolineno="140" lineno="140" name="g"/>
            <Index fromlineno="140" tolineno="140" lineno="None">
              <Const fromlineno="140" tolineno="140" lineno="140" type="str">'d'</Const>
            </Index>
          </Subscript>
          <Name fromlineno="140" tolineno="140" lineno="140" name="d"/>
        </Assign>
        <Discard fromlineno="141" tolineno="141" lineno="141">
          <CallFunc fromlineno="141" tolineno="141" lineno="141" func="Getattr(better_exec)">
            <Getattr fromlineno="141" tolineno="141" lineno="141" attrname="better_exec" expr="utils">
              <Name fromlineno="141" tolineno="141" lineno="141" name="utils"/>
            </Getattr>
            <Name fromlineno="141" tolineno="141" lineno="141" name="comp"/>
            <Name fromlineno="141" tolineno="141" lineno="141" name="g"/>
            <Name fromlineno="141" tolineno="141" lineno="141" name="tmp"/>
            <Name fromlineno="141" tolineno="141" lineno="141" name="bbfile"/>
          </CallFunc>
        </Discard>
        <If fromlineno="142" tolineno="143" lineno="142">
          <CallFunc fromlineno="142" tolineno="142" lineno="142" func="Getattr(exists)">
            <Getattr fromlineno="142" tolineno="142" lineno="142" attrname="exists" expr="os.path">
              <Getattr fromlineno="142" tolineno="142" lineno="142" attrname="path" expr="os">
                <Name fromlineno="142" tolineno="142" lineno="142" name="os"/>
              </Getattr>
            </Getattr>
            <Name fromlineno="142" tolineno="142" lineno="142" name="prevdir"/>
          </CallFunc>
          <Discard fromlineno="143" tolineno="143" lineno="143">
            <CallFunc fromlineno="143" tolineno="143" lineno="143" func="Getattr(chdir)">
              <Getattr fromlineno="143" tolineno="143" lineno="143" attrname="chdir" expr="os">
                <Name fromlineno="143" tolineno="143" lineno="143" name="os"/>
              </Getattr>
              <Name fromlineno="143" tolineno="143" lineno="143" name="prevdir"/>
            </CallFunc>
          </Discard>
        </If>
      </Function>
      <Function fromlineno="145" tolineno="261" lineno="145">
        <Arguments fromlineno="145" tolineno="145" lineno="None" format_args="func, d, flags">
          <AssName fromlineno="145" tolineno="145" lineno="145" name="func"/>
          <AssName fromlineno="145" tolineno="145" lineno="145" name="d"/>
          <AssName fromlineno="145" tolineno="145" lineno="145" name="flags"/>
        </Arguments>
        <Import fromlineno="155" tolineno="155" lineno="155">
          <ImportName name="sys"/>
        </Import>
        <Assign fromlineno="157" tolineno="157" lineno="157" targets="[&lt;AssName(deps) l.157 [bb.build] at Ox951dbec&gt;]" value="flags['deps']">
          <AssName fromlineno="157" tolineno="157" lineno="157" name="deps"/>
          <Subscript fromlineno="157" tolineno="157" lineno="157">
            <Name fromlineno="157" tolineno="157" lineno="157" name="flags"/>
            <Index fromlineno="157" tolineno="157" lineno="None">
              <Const fromlineno="157" tolineno="157" lineno="157" type="str">'deps'</Const>
            </Index>
          </Subscript>
        </Assign>
        <Assign fromlineno="158" tolineno="158" lineno="158" targets="[&lt;AssName(check) l.158 [bb.build] at Ox951dd0c&gt;]" value="flags['check']">
          <AssName fromlineno="158" tolineno="158" lineno="158" name="check"/>
          <Subscript fromlineno="158" tolineno="158" lineno="158">
            <Name fromlineno="158" tolineno="158" lineno="158" name="flags"/>
            <Index fromlineno="158" tolineno="158" lineno="None">
              <Const fromlineno="158" tolineno="158" lineno="158" type="str">'check'</Const>
            </Index>
          </Subscript>
        </Assign>
        <Assign fromlineno="159" tolineno="159" lineno="159" targets="[&lt;AssName(interact) l.159 [bb.build] at Ox951de0c&gt;]" value="flags['interactive']">
          <AssName fromlineno="159" tolineno="159" lineno="159" name="interact"/>
          <Subscript fromlineno="159" tolineno="159" lineno="159">
            <Name fromlineno="159" tolineno="159" lineno="159" name="flags"/>
            <Index fromlineno="159" tolineno="159" lineno="None">
              <Const fromlineno="159" tolineno="159" lineno="159" type="str">'interactive'</Const>
            </Index>
          </Subscript>
        </Assign>
        <If fromlineno="160" tolineno="162" lineno="160">
          <Compare fromlineno="160" tolineno="160" lineno="160" op="('in', &lt;CallFunc() l.160 [bb.build] at Ox951df6c&gt;)">
            <Name fromlineno="160" tolineno="160" lineno="160" name="check"/>
            <CallFunc fromlineno="160" tolineno="160" lineno="160" func="Name(globals)">
              <Name fromlineno="160" tolineno="160" lineno="160" name="globals"/>
            </CallFunc>
          </Compare>
          <If fromlineno="161" tolineno="162" lineno="161">
            <CallFunc fromlineno="161" tolineno="161" lineno="161" func="Subscript()">
              <Subscript fromlineno="161" tolineno="161" lineno="161">
                <CallFunc fromlineno="161" tolineno="161" lineno="161" func="Name(globals)">
                  <Name fromlineno="161" tolineno="161" lineno="161" name="globals"/>
                </CallFunc>
                <Index fromlineno="161" tolineno="161" lineno="None">
                  <Name fromlineno="161" tolineno="161" lineno="161" name="check"/>
                </Index>
              </Subscript>
              <Name fromlineno="161" tolineno="161" lineno="161" name="func"/>
              <Name fromlineno="161" tolineno="161" lineno="161" name="deps"/>
            </CallFunc>
            <Return fromlineno="162" tolineno="162" lineno="162"/>
          </If>
        </If>
        <Global fromlineno="164" tolineno="164" lineno="164"/>
        <Assign fromlineno="165" tolineno="165" lineno="165" targets="[&lt;AssName(t) l.165 [bb.build] at Ox952226c&gt;]" value="data.getVar('T', d, 1)">
          <AssName fromlineno="165" tolineno="165" lineno="165" name="t"/>
          <CallFunc fromlineno="165" tolineno="165" lineno="165" func="Getattr(getVar)">
            <Getattr fromlineno="165" tolineno="165" lineno="165" attrname="getVar" expr="data">
              <Name fromlineno="165" tolineno="165" lineno="165" name="data"/>
            </Getattr>
            <Const fromlineno="165" tolineno="165" lineno="165" type="str">'T'</Const>
            <Name fromlineno="165" tolineno="165" lineno="165" name="d"/>
            <Const fromlineno="165" tolineno="165" lineno="165" type="int">1</Const>
          </CallFunc>
        </Assign>
        <If fromlineno="166" tolineno="167" lineno="166">
          <UnaryOp fromlineno="166" tolineno="166" lineno="166">
            <Name fromlineno="166" tolineno="166" lineno="166" name="t"/>
          </UnaryOp>
          <Return fromlineno="167" tolineno="167" lineno="167">
            <Const fromlineno="167" tolineno="167" lineno="167" type="int">0</Const>
          </Return>
        </If>
        <Discard fromlineno="168" tolineno="168" lineno="168">
          <CallFunc fromlineno="168" tolineno="168" lineno="168" func="Name(mkdirhier)">
            <Name fromlineno="168" tolineno="168" lineno="168" name="mkdirhier"/>
            <Name fromlineno="168" tolineno="168" lineno="168" name="t"/>
          </CallFunc>
        </Discard>
        <Assign fromlineno="169" tolineno="169" lineno="169" targets="[&lt;AssName(logfile) l.169 [bb.build] at Ox952254c&gt;]" value="('%s/log.%s.%s') % ((t, func, str(os.getpid())))">
          <AssName fromlineno="169" tolineno="169" lineno="169" name="logfile"/>
          <BinOp fromlineno="169" tolineno="169" lineno="169" op="%" left="'%s/log.%s.%s'" right="(t, func, str(os.getpid()))">
            <Const fromlineno="169" tolineno="169" lineno="169" type="str">'%s/log.%s.%s'</Const>
            <Tuple fromlineno="169" tolineno="169" lineno="169">
              <Name fromlineno="169" tolineno="169" lineno="169" name="t"/>
              <Name fromlineno="169" tolineno="169" lineno="169" name="func"/>
              <CallFunc fromlineno="169" tolineno="169" lineno="169" func="Name(str)">
                <Name fromlineno="169" tolineno="169" lineno="169" name="str"/>
                <CallFunc fromlineno="169" tolineno="169" lineno="169" func="Getattr(getpid)">
                  <Getattr fromlineno="169" tolineno="169" lineno="169" attrname="getpid" expr="os">
                    <Name fromlineno="169" tolineno="169" lineno="169" name="os"/>
                  </Getattr>
                </CallFunc>
              </CallFunc>
            </Tuple>
          </BinOp>
        </Assign>
        <Assign fromlineno="170" tolineno="170" lineno="170" targets="[&lt;AssName(runfile) l.170 [bb.build] at Ox952276c&gt;]" value="('%s/run.%s.%s') % ((t, func, str(os.getpid())))">
          <AssName fromlineno="170" tolineno="170" lineno="170" name="runfile"/>
          <BinOp fromlineno="170" tolineno="170" lineno="170" op="%" left="'%s/run.%s.%s'" right="(t, func, str(os.getpid()))">
            <Const fromlineno="170" tolineno="170" lineno="170" type="str">'%s/run.%s.%s'</Const>
            <Tuple fromlineno="170" tolineno="170" lineno="170">
              <Name fromlineno="170" tolineno="170" lineno="170" name="t"/>
              <Name fromlineno="170" tolineno="170" lineno="170" name="func"/>
              <CallFunc fromlineno="170" tolineno="170" lineno="170" func="Name(str)">
                <Name fromlineno="170" tolineno="170" lineno="170" name="str"/>
                <CallFunc fromlineno="170" tolineno="170" lineno="170" func="Getattr(getpid)">
                  <Getattr fromlineno="170" tolineno="170" lineno="170" attrname="getpid" expr="os">
                    <Name fromlineno="170" tolineno="170" lineno="170" name="os"/>
                  </Getattr>
                </CallFunc>
              </CallFunc>
            </Tuple>
          </BinOp>
        </Assign>
        <Assign fromlineno="172" tolineno="172" lineno="172" targets="[&lt;AssName(f) l.172 [bb.build] at Ox952298c&gt;]" value="open(runfile, 'w')">
          <AssName fromlineno="172" tolineno="172" lineno="172" name="f"/>
          <CallFunc fromlineno="172" tolineno="172" lineno="172" func="Name(open)">
            <Name fromlineno="172" tolineno="172" lineno="172" name="open"/>
            <Name fromlineno="172" tolineno="172" lineno="172" name="runfile"/>
            <Const fromlineno="172" tolineno="172" lineno="172" type="str">'w'</Const>
          </CallFunc>
        </Assign>
        <Discard fromlineno="173" tolineno="173" lineno="173">
          <CallFunc fromlineno="173" tolineno="173" lineno="173" func="Getattr(write)">
            <Getattr fromlineno="173" tolineno="173" lineno="173" attrname="write" expr="f">
              <Name fromlineno="173" tolineno="173" lineno="173" name="f"/>
            </Getattr>
            <Const fromlineno="173" tolineno="173" lineno="173" type="str">'#!/bin/sh -e\n'</Const>
          </CallFunc>
        </Discard>
        <If fromlineno="174" tolineno="174" lineno="174">
          <Compare fromlineno="174" tolineno="174" lineno="174" op="('&gt;', &lt;Const(int) l.174 [bb.build] at Ox9522c6c&gt;)">
            <Subscript fromlineno="174" tolineno="174" lineno="174">
              <Getattr fromlineno="174" tolineno="174" lineno="174" attrname="debug_level" expr="bb.msg">
                <Getattr fromlineno="174" tolineno="174" lineno="174" attrname="msg" expr="bb">
                  <Name fromlineno="174" tolineno="174" lineno="174" name="bb"/>
                </Getattr>
              </Getattr>
              <Index fromlineno="174" tolineno="174" lineno="None">
                <Const fromlineno="174" tolineno="174" lineno="174" type="str">'default'</Const>
              </Index>
            </Subscript>
            <Const fromlineno="174" tolineno="174" lineno="174" type="int">0</Const>
          </Compare>
          <Discard fromlineno="174" tolineno="174" lineno="174">
            <CallFunc fromlineno="174" tolineno="174" lineno="174" func="Getattr(write)">
              <Getattr fromlineno="174" tolineno="174" lineno="174" attrname="write" expr="f">
                <Name fromlineno="174" tolineno="174" lineno="174" name="f"/>
              </Getattr>
              <Const fromlineno="174" tolineno="174" lineno="174" type="str">'set -x\n'</Const>
            </CallFunc>
          </Discard>
        </If>
        <Discard fromlineno="175" tolineno="175" lineno="175">
          <CallFunc fromlineno="175" tolineno="175" lineno="175" func="Getattr(emit_env)">
            <Getattr fromlineno="175" tolineno="175" lineno="175" attrname="emit_env" expr="data">
              <Name fromlineno="175" tolineno="175" lineno="175" name="data"/>
            </Getattr>
            <Name fromlineno="175" tolineno="175" lineno="175" name="f"/>
            <Name fromlineno="175" tolineno="175" lineno="175" name="d"/>
          </CallFunc>
        </Discard>
        <Discard fromlineno="177" tolineno="177" lineno="177">
          <CallFunc fromlineno="177" tolineno="177" lineno="177" func="Getattr(write)">
            <Getattr fromlineno="177" tolineno="177" lineno="177" attrname="write" expr="f">
              <Name fromlineno="177" tolineno="177" lineno="177" name="f"/>
            </Getattr>
            <BinOp fromlineno="177" tolineno="177" lineno="177" op="%" left="'cd %s\n'" right="os.getcwd()">
              <Const fromlineno="177" tolineno="177" lineno="177" type="str">'cd %s\n'</Const>
              <CallFunc fromlineno="177" tolineno="177" lineno="177" func="Getattr(getcwd)">
                <Getattr fromlineno="177" tolineno="177" lineno="177" attrname="getcwd" expr="os">
                  <Name fromlineno="177" tolineno="177" lineno="177" name="os"/>
                </Getattr>
              </CallFunc>
            </BinOp>
          </CallFunc>
        </Discard>
        <If fromlineno="178" tolineno="178" lineno="178">
          <Name fromlineno="178" tolineno="178" lineno="178" name="func"/>
          <Discard fromlineno="178" tolineno="178" lineno="178">
            <CallFunc fromlineno="178" tolineno="178" lineno="178" func="Getattr(write)">
              <Getattr fromlineno="178" tolineno="178" lineno="178" attrname="write" expr="f">
                <Name fromlineno="178" tolineno="178" lineno="178" name="f"/>
              </Getattr>
              <BinOp fromlineno="178" tolineno="178" lineno="178" op="%" left="'%s\n'" right="func">
                <Const fromlineno="178" tolineno="178" lineno="178" type="str">'%s\n'</Const>
                <Name fromlineno="178" tolineno="178" lineno="178" name="func"/>
              </BinOp>
            </CallFunc>
          </Discard>
        </If>
        <Discard fromlineno="179" tolineno="179" lineno="179">
          <CallFunc fromlineno="179" tolineno="179" lineno="179" func="Getattr(close)">
            <Getattr fromlineno="179" tolineno="179" lineno="179" attrname="close" expr="f">
              <Name fromlineno="179" tolineno="179" lineno="179" name="f"/>
            </Getattr>
          </CallFunc>
        </Discard>
        <Discard fromlineno="180" tolineno="180" lineno="180">
          <CallFunc fromlineno="180" tolineno="180" lineno="180" func="Getattr(chmod)">
            <Getattr fromlineno="180" tolineno="180" lineno="180" attrname="chmod" expr="os">
              <Name fromlineno="180" tolineno="180" lineno="180" name="os"/>
            </Getattr>
            <Name fromlineno="180" tolineno="180" lineno="180" name="runfile"/>
            <Const fromlineno="180" tolineno="180" lineno="180" type="int">509</Const>
          </CallFunc>
        </Discard>
        <If fromlineno="181" tolineno="183" lineno="181">
          <UnaryOp fromlineno="181" tolineno="181" lineno="181">
            <Name fromlineno="181" tolineno="181" lineno="181" name="func"/>
          </UnaryOp>
          <Discard fromlineno="182" tolineno="182" lineno="182">
            <CallFunc fromlineno="182" tolineno="182" lineno="182" func="Getattr(error)">
              <Getattr fromlineno="182" tolineno="182" lineno="182" attrname="error" expr="bb.msg">
                <Getattr fromlineno="182" tolineno="182" lineno="182" attrname="msg" expr="bb">
                  <Name fromlineno="182" tolineno="182" lineno="182" name="bb"/>
                </Getattr>
              </Getattr>
              <Getattr fromlineno="182" tolineno="182" lineno="182" attrname="Build" expr="bb.msg.domain">
                <Getattr fromlineno="182" tolineno="182" lineno="182" attrname="domain" expr="bb.msg">
                  <Getattr fromlineno="182" tolineno="182" lineno="182" attrname="msg" expr="bb">
                    <Name fromlineno="182" tolineno="182" lineno="182" name="bb"/>
                  </Getattr>
                </Getattr>
              </Getattr>
              <Const fromlineno="182" tolineno="182" lineno="182" type="str">'Function not specified'</Const>
            </CallFunc>
          </Discard>
          <Raise fromlineno="183" tolineno="183" lineno="183">
            <CallFunc fromlineno="183" tolineno="183" lineno="183" func="Name(FuncFailed)">
              <Name fromlineno="183" tolineno="183" lineno="183" name="FuncFailed"/>
            </CallFunc>
          </Raise>
        </If>
        <Assign fromlineno="186" tolineno="186" lineno="186" targets="[&lt;AssName(si) l.186 [bb.build] at Ox96255ac&gt;]" value="file('/dev/null', 'r')">
          <AssName fromlineno="186" tolineno="186" lineno="186" name="si"/>
          <CallFunc fromlineno="186" tolineno="186" lineno="186" func="Name(file)">
            <Name fromlineno="186" tolineno="186" lineno="186" name="file"/>
            <Const fromlineno="186" tolineno="186" lineno="186" type="str">'/dev/null'</Const>
            <Const fromlineno="186" tolineno="186" lineno="186" type="str">'r'</Const>
          </CallFunc>
        </Assign>
        <TryExcept fromlineno="187" tolineno="194" lineno="187">
          <If fromlineno="188" tolineno="191" lineno="188">
            <Compare fromlineno="188" tolineno="188" lineno="188" op="('&gt;', &lt;Const(int) l.188 [bb.build] at Ox962582c&gt;)">
              <Subscript fromlineno="188" tolineno="188" lineno="188">
                <Getattr fromlineno="188" tolineno="188" lineno="188" attrname="debug_level" expr="bb.msg">
                  <Getattr fromlineno="188" tolineno="188" lineno="188" attrname="msg" expr="bb">
                    <Name fromlineno="188" tolineno="188" lineno="188" name="bb"/>
                  </Getattr>
                </Getattr>
                <Index fromlineno="188" tolineno="188" lineno="None">
                  <Const fromlineno="188" tolineno="188" lineno="188" type="str">'default'</Const>
                </Index>
              </Subscript>
              <Const fromlineno="188" tolineno="188" lineno="188" type="int">0</Const>
            </Compare>
            <Assign fromlineno="189" tolineno="189" lineno="189" targets="[&lt;AssName(so) l.189 [bb.build] at Ox96258cc&gt;]" value="os.popen(('tee &quot;%s&quot;') % (logfile), 'w')">
              <AssName fromlineno="189" tolineno="189" lineno="189" name="so"/>
              <CallFunc fromlineno="189" tolineno="189" lineno="189" func="Getattr(popen)">
                <Getattr fromlineno="189" tolineno="189" lineno="189" attrname="popen" expr="os">
                  <Name fromlineno="189" tolineno="189" lineno="189" name="os"/>
                </Getattr>
                <BinOp fromlineno="189" tolineno="189" lineno="189" op="%" left="'tee &quot;%s&quot;'" right="logfile">
                  <Const fromlineno="189" tolineno="189" lineno="189" type="str">'tee "%s"'</Const>
                  <Name fromlineno="189" tolineno="189" lineno="189" name="logfile"/>
                </BinOp>
                <Const fromlineno="189" tolineno="189" lineno="189" type="str">'w'</Const>
              </CallFunc>
            </Assign>
            <Assign fromlineno="191" tolineno="191" lineno="191" targets="[&lt;AssName(so) l.191 [bb.build] at Ox9625a6c&gt;]" value="file(logfile, 'w')">
              <AssName fromlineno="191" tolineno="191" lineno="191" name="so"/>
              <CallFunc fromlineno="191" tolineno="191" lineno="191" func="Name(file)">
                <Name fromlineno="191" tolineno="191" lineno="191" name="file"/>
                <Name fromlineno="191" tolineno="191" lineno="191" name="logfile"/>
                <Const fromlineno="191" tolineno="191" lineno="191" type="str">'w'</Const>
              </CallFunc>
            </Assign>
          </If>
          <ExceptHandler fromlineno="192" tolineno="194" lineno="192">
            <Name fromlineno="192" tolineno="192" lineno="192" name="OSError"/>
            <AssName fromlineno="192" tolineno="192" lineno="192" name="e"/>
            <Discard fromlineno="193" tolineno="193" lineno="193">
              <CallFunc fromlineno="193" tolineno="193" lineno="193" func="Getattr(error)">
                <Getattr fromlineno="193" tolineno="193" lineno="193" attrname="error" expr="bb.msg">
                  <Getattr fromlineno="193" tolineno="193" lineno="193" attrname="msg" expr="bb">
                    <Name fromlineno="193" tolineno="193" lineno="193" name="bb"/>
                  </Getattr>
                </Getattr>
                <Getattr fromlineno="193" tolineno="193" lineno="193" attrname="Build" expr="bb.msg.domain">
                  <Getattr fromlineno="193" tolineno="193" lineno="193" attrname="domain" expr="bb.msg">
                    <Getattr fromlineno="193" tolineno="193" lineno="193" attrname="msg" expr="bb">
                      <Name fromlineno="193" tolineno="193" lineno="193" name="bb"/>
                    </Getattr>
                  </Getattr>
                </Getattr>
                <BinOp fromlineno="193" tolineno="193" lineno="193" op="%" left="'opening log file: %s'" right="e">
                  <Const fromlineno="193" tolineno="193" lineno="193" type="str">'opening log file: %s'</Const>
                  <Name fromlineno="193" tolineno="193" lineno="193" name="e"/>
                </BinOp>
              </CallFunc>
            </Discard>
            <Pass fromlineno="194" tolineno="194" lineno="194"/>
          </ExceptHandler>
        </TryExcept>
        <Assign fromlineno="196" tolineno="196" lineno="196" targets="[&lt;AssName(se) l.196 [bb.build] at Ox9625dcc&gt;]" value="so">
          <AssName fromlineno="196" tolineno="196" lineno="196" name="se"/>
          <Name fromlineno="196" tolineno="196" lineno="196" name="so"/>
        </Assign>
        <If fromlineno="198" tolineno="207" lineno="198">
          <UnaryOp fromlineno="198" tolineno="198" lineno="198">
            <Name fromlineno="198" tolineno="198" lineno="198" name="interact"/>
          </UnaryOp>
          <Assign fromlineno="200" tolineno="200" lineno="200" targets="[&lt;AssName(osi) l.200 [bb.build] at Ox9625f0c&gt;]" value="[os.dup(sys.stdin.fileno()), sys.stdin.fileno()]">
            <AssName fromlineno="200" tolineno="200" lineno="200" name="osi"/>
            <List fromlineno="200" tolineno="200" lineno="200">
              <CallFunc fromlineno="200" tolineno="200" lineno="200" func="Getattr(dup)">
                <Getattr fromlineno="200" tolineno="200" lineno="200" attrname="dup" expr="os">
                  <Name fromlineno="200" tolineno="200" lineno="200" name="os"/>
                </Getattr>
                <CallFunc fromlineno="200" tolineno="200" lineno="200" func="Getattr(fileno)">
                  <Getattr fromlineno="200" tolineno="200" lineno="200" attrname="fileno" expr="sys.stdin">
                    <Getattr fromlineno="200" tolineno="200" lineno="200" attrname="stdin" expr="sys">
                      <Name fromlineno="200" tolineno="200" lineno="200" name="sys"/>
                    </Getattr>
                  </Getattr>
                </CallFunc>
              </CallFunc>
              <CallFunc fromlineno="200" tolineno="200" lineno="200" func="Getattr(fileno)">
                <Getattr fromlineno="200" tolineno="200" lineno="200" attrname="fileno" expr="sys.stdin">
                  <Getattr fromlineno="200" tolineno="200" lineno="200" attrname="stdin" expr="sys">
                    <Name fromlineno="200" tolineno="200" lineno="200" name="sys"/>
                  </Getattr>
                </Getattr>
              </CallFunc>
            </List>
          </Assign>
          <Assign fromlineno="201" tolineno="201" lineno="201" targets="[&lt;AssName(oso) l.201 [bb.build] at Ox96281ac&gt;]" value="[os.dup(sys.stdout.fileno()), sys.stdout.fileno()]">
            <AssName fromlineno="201" tolineno="201" lineno="201" name="oso"/>
            <List fromlineno="201" tolineno="201" lineno="201">
              <CallFunc fromlineno="201" tolineno="201" lineno="201" func="Getattr(dup)">
                <Getattr fromlineno="201" tolineno="201" lineno="201" attrname="dup" expr="os">
                  <Name fromlineno="201" tolineno="201" lineno="201" name="os"/>
                </Getattr>
                <CallFunc fromlineno="201" tolineno="201" lineno="201" func="Getattr(fileno)">
                  <Getattr fromlineno="201" tolineno="201" lineno="201" attrname="fileno" expr="sys.stdout">
                    <Getattr fromlineno="201" tolineno="201" lineno="201" attrname="stdout" expr="sys">
                      <Name fromlineno="201" tolineno="201" lineno="201" name="sys"/>
                    </Getattr>
                  </Getattr>
                </CallFunc>
              </CallFunc>
              <CallFunc fromlineno="201" tolineno="201" lineno="201" func="Getattr(fileno)">
                <Getattr fromlineno="201" tolineno="201" lineno="201" attrname="fileno" expr="sys.stdout">
                  <Getattr fromlineno="201" tolineno="201" lineno="201" attrname="stdout" expr="sys">
                    <Name fromlineno="201" tolineno="201" lineno="201" name="sys"/>
                  </Getattr>
                </Getattr>
              </CallFunc>
            </List>
          </Assign>
          <Assign fromlineno="202" tolineno="202" lineno="202" targets="[&lt;AssName(ose) l.202 [bb.build] at Ox962842c&gt;]" value="[os.dup(sys.stderr.fileno()), sys.stderr.fileno()]">
            <AssName fromlineno="202" tolineno="202" lineno="202" name="ose"/>
            <List fromlineno="202" tolineno="202" lineno="202">
              <CallFunc fromlineno="202" tolineno="202" lineno="202" func="Getattr(dup)">
                <Getattr fromlineno="202" tolineno="202" lineno="202" attrname="dup" expr="os">
                  <Name fromlineno="202" tolineno="202" lineno="202" name="os"/>
                </Getattr>
                <CallFunc fromlineno="202" tolineno="202" lineno="202" func="Getattr(fileno)">
                  <Getattr fromlineno="202" tolineno="202" lineno="202" attrname="fileno" expr="sys.stderr">
                    <Getattr fromlineno="202" tolineno="202" lineno="202" attrname="stderr" expr="sys">
                      <Name fromlineno="202" tolineno="202" lineno="202" name="sys"/>
                    </Getattr>
                  </Getattr>
                </CallFunc>
              </CallFunc>
              <CallFunc fromlineno="202" tolineno="202" lineno="202" func="Getattr(fileno)">
                <Getattr fromlineno="202" tolineno="202" lineno="202" attrname="fileno" expr="sys.stderr">
                  <Getattr fromlineno="202" tolineno="202" lineno="202" attrname="stderr" expr="sys">
                    <Name fromlineno="202" tolineno="202" lineno="202" name="sys"/>
                  </Getattr>
                </Getattr>
              </CallFunc>
            </List>
          </Assign>
          <Discard fromlineno="205" tolineno="205" lineno="205">
            <CallFunc fromlineno="205" tolineno="205" lineno="205" func="Getattr(dup2)">
              <Getattr fromlineno="205" tolineno="205" lineno="205" attrname="dup2" expr="os">
                <Name fromlineno="205" tolineno="205" lineno="205" name="os"/>
              </Getattr>
              <CallFunc fromlineno="205" tolineno="205" lineno="205" func="Getattr(fileno)">
                <Getattr fromlineno="205" tolineno="205" lineno="205" attrname="fileno" expr="si">
                  <Name fromlineno="205" tolineno="205" lineno="205" name="si"/>
                </Getattr>
              </CallFunc>
              <Subscript fromlineno="205" tolineno="205" lineno="205">
                <Name fromlineno="205" tolineno="205" lineno="205" name="osi"/>
                <Index fromlineno="205" tolineno="205" lineno="None">
                  <Const fromlineno="205" tolineno="205" lineno="205" type="int">1</Const>
                </Index>
              </Subscript>
            </CallFunc>
          </Discard>
          <Discard fromlineno="206" tolineno="206" lineno="206">
            <CallFunc fromlineno="206" tolineno="206" lineno="206" func="Getattr(dup2)">
              <Getattr fromlineno="206" tolineno="206" lineno="206" attrname="dup2" expr="os">
                <Name fromlineno="206" tolineno="206" lineno="206" name="os"/>
              </Getattr>
              <CallFunc fromlineno="206" tolineno="206" lineno="206" func="Getattr(fileno)">
                <Getattr fromlineno="206" tolineno="206" lineno="206" attrname="fileno" expr="so">
                  <Name fromlineno="206" tolineno="206" lineno="206" name="so"/>
                </Getattr>
              </CallFunc>
              <Subscript fromlineno="206" tolineno="206" lineno="206">
                <Name fromlineno="206" tolineno="206" lineno="206" name="oso"/>
                <Index fromlineno="206" tolineno="206" lineno="None">
                  <Const fromlineno="206" tolineno="206" lineno="206" type="int">1</Const>
                </Index>
              </Subscript>
            </CallFunc>
          </Discard>
          <Discard fromlineno="207" tolineno="207" lineno="207">
            <CallFunc fromlineno="207" tolineno="207" lineno="207" func="Getattr(dup2)">
              <Getattr fromlineno="207" tolineno="207" lineno="207" attrname="dup2" expr="os">
                <Name fromlineno="207" tolineno="207" lineno="207" name="os"/>
              </Getattr>
              <CallFunc fromlineno="207" tolineno="207" lineno="207" func="Getattr(fileno)">
                <Getattr fromlineno="207" tolineno="207" lineno="207" attrname="fileno" expr="se">
                  <Name fromlineno="207" tolineno="207" lineno="207" name="se"/>
                </Getattr>
              </CallFunc>
              <Subscript fromlineno="207" tolineno="207" lineno="207">
                <Name fromlineno="207" tolineno="207" lineno="207" name="ose"/>
                <Index fromlineno="207" tolineno="207" lineno="None">
                  <Const fromlineno="207" tolineno="207" lineno="207" type="int">1</Const>
                </Index>
              </Subscript>
            </CallFunc>
          </Discard>
        </If>
        <Assign fromlineno="210" tolineno="210" lineno="210" targets="[&lt;AssName(prevdir) l.210 [bb.build] at Ox9628b8c&gt;]" value="os.getcwd()">
          <AssName fromlineno="210" tolineno="210" lineno="210" name="prevdir"/>
          <CallFunc fromlineno="210" tolineno="210" lineno="210" func="Getattr(getcwd)">
            <Getattr fromlineno="210" tolineno="210" lineno="210" attrname="getcwd" expr="os">
              <Name fromlineno="210" tolineno="210" lineno="210" name="os"/>
            </Getattr>
          </CallFunc>
        </Assign>
        <If fromlineno="211" tolineno="214" lineno="211">
          <Subscript fromlineno="211" tolineno="211" lineno="211">
            <Name fromlineno="211" tolineno="211" lineno="211" name="flags"/>
            <Index fromlineno="211" tolineno="211" lineno="None">
              <Const fromlineno="211" tolineno="211" lineno="211" type="str">'fakeroot'</Const>
            </Index>
          </Subscript>
          <Assign fromlineno="212" tolineno="212" lineno="212" targets="[&lt;AssName(maybe_fakeroot) l.212 [bb.build] at Ox9628d6c&gt;]" value="('PATH=&quot;%s&quot; fakeroot ') % (bb.data.getVar('PATH', d, 1))">
            <AssName fromlineno="212" tolineno="212" lineno="212" name="maybe_fakeroot"/>
            <BinOp fromlineno="212" tolineno="212" lineno="212" op="%" left="'PATH=&quot;%s&quot; fakeroot '" right="bb.data.getVar('PATH', d, 1)">
              <Const fromlineno="212" tolineno="212" lineno="212" type="str">'PATH="%s" fakeroot '</Const>
              <CallFunc fromlineno="212" tolineno="212" lineno="212" func="Getattr(getVar)">
                <Getattr fromlineno="212" tolineno="212" lineno="212" attrname="getVar" expr="bb.data">
                  <Getattr fromlineno="212" tolineno="212" lineno="212" attrname="data" expr="bb">
                    <Name fromlineno="212" tolineno="212" lineno="212" name="bb"/>
                  </Getattr>
                </Getattr>
                <Const fromlineno="212" tolineno="212" lineno="212" type="str">'PATH'</Const>
                <Name fromlineno="212" tolineno="212" lineno="212" name="d"/>
                <Const fromlineno="212" tolineno="212" lineno="212" type="int">1</Const>
              </CallFunc>
            </BinOp>
          </Assign>
          <Assign fromlineno="214" tolineno="214" lineno="214" targets="[&lt;AssName(maybe_fakeroot) l.214 [bb.build] at Ox9628f4c&gt;]" value="''">
            <AssName fromlineno="214" tolineno="214" lineno="214" name="maybe_fakeroot"/>
            <Const fromlineno="214" tolineno="214" lineno="214" type="str">''</Const>
          </Assign>
        </If>
        <Assign fromlineno="215" tolineno="215" lineno="215" targets="[&lt;AssName(lang_environment) l.215 [bb.build] at Ox9628fac&gt;]" value="'LC_ALL=C '">
          <AssName fromlineno="215" tolineno="215" lineno="215" name="lang_environment"/>
          <Const fromlineno="215" tolineno="215" lineno="215" type="str">'LC_ALL=C '</Const>
        </Assign>
        <Assign fromlineno="216" tolineno="216" lineno="216" targets="[&lt;AssName(ret) l.216 [bb.build] at Ox962b06c&gt;]" value="os.system(('%s%ssh -e %s') % ((lang_environment, maybe_fakeroot, runfile)))">
          <AssName fromlineno="216" tolineno="216" lineno="216" name="ret"/>
          <CallFunc fromlineno="216" tolineno="216" lineno="216" func="Getattr(system)">
            <Getattr fromlineno="216" tolineno="216" lineno="216" attrname="system" expr="os">
              <Name fromlineno="216" tolineno="216" lineno="216" name="os"/>
            </Getattr>
            <BinOp fromlineno="216" tolineno="216" lineno="216" op="%" left="'%s%ssh -e %s'" right="(lang_environment, maybe_fakeroot, runfile)">
              <Const fromlineno="216" tolineno="216" lineno="216" type="str">'%s%ssh -e %s'</Const>
              <Tuple fromlineno="216" tolineno="216" lineno="216">
                <Name fromlineno="216" tolineno="216" lineno="216" name="lang_environment"/>
                <Name fromlineno="216" tolineno="216" lineno="216" name="maybe_fakeroot"/>
                <Name fromlineno="216" tolineno="216" lineno="216" name="runfile"/>
              </Tuple>
            </BinOp>
          </CallFunc>
        </Assign>
        <TryExcept fromlineno="217" tolineno="220" lineno="217">
          <Discard fromlineno="218" tolineno="218" lineno="218">
            <CallFunc fromlineno="218" tolineno="218" lineno="218" func="Getattr(chdir)">
              <Getattr fromlineno="218" tolineno="218" lineno="218" attrname="chdir" expr="os">
                <Name fromlineno="218" tolineno="218" lineno="218" name="os"/>
              </Getattr>
              <Name fromlineno="218" tolineno="218" lineno="218" name="prevdir"/>
            </CallFunc>
          </Discard>
          <ExceptHandler fromlineno="219" tolineno="220" lineno="219">
            <Pass fromlineno="220" tolineno="220" lineno="220"/>
          </ExceptHandler>
        </TryExcept>
        <If fromlineno="222" tolineno="236" lineno="222">
          <UnaryOp fromlineno="222" tolineno="222" lineno="222">
            <Name fromlineno="222" tolineno="222" lineno="222" name="interact"/>
          </UnaryOp>
          <Discard fromlineno="224" tolineno="224" lineno="224">
            <CallFunc fromlineno="224" tolineno="224" lineno="224" func="Getattr(dup2)">
              <Getattr fromlineno="224" tolineno="224" lineno="224" attrname="dup2" expr="os">
                <Name fromlineno="224" tolineno="224" lineno="224" name="os"/>
              </Getattr>
              <Subscript fromlineno="224" tolineno="224" lineno="224">
                <Name fromlineno="224" tolineno="224" lineno="224" name="osi"/>
                <Index fromlineno="224" tolineno="224" lineno="None">
                  <Const fromlineno="224" tolineno="224" lineno="224" type="int">0</Const>
                </Index>
              </Subscript>
              <Subscript fromlineno="224" tolineno="224" lineno="224">
                <Name fromlineno="224" tolineno="224" lineno="224" name="osi"/>
                <Index fromlineno="224" tolineno="224" lineno="None">
                  <Const fromlineno="224" tolineno="224" lineno="224" type="int">1</Const>
                </Index>
              </Subscript>
            </CallFunc>
          </Discard>
          <Discard fromlineno="225" tolineno="225" lineno="225">
            <CallFunc fromlineno="225" tolineno="225" lineno="225" func="Getattr(dup2)">
              <Getattr fromlineno="225" tolineno="225" lineno="225" attrname="dup2" expr="os">
                <Name fromlineno="225" tolineno="225" lineno="225" name="os"/>
              </Getattr>
              <Subscript fromlineno="225" tolineno="225" lineno="225">
                <Name fromlineno="225" tolineno="225" lineno="225" name="oso"/>
                <Index fromlineno="225" tolineno="225" lineno="None">
                  <Const fromlineno="225" tolineno="225" lineno="225" type="int">0</Const>
                </Index>
              </Subscript>
              <Subscript fromlineno="225" tolineno="225" lineno="225">
                <Name fromlineno="225" tolineno="225" lineno="225" name="oso"/>
                <Index fromlineno="225" tolineno="225" lineno="None">
                  <Const fromlineno="225" tolineno="225" lineno="225" type="int">1</Const>
                </Index>
              </Subscript>
            </CallFunc>
          </Discard>
          <Discard fromlineno="226" tolineno="226" lineno="226">
            <CallFunc fromlineno="226" tolineno="226" lineno="226" func="Getattr(dup2)">
              <Getattr fromlineno="226" tolineno="226" lineno="226" attrname="dup2" expr="os">
                <Name fromlineno="226" tolineno="226" lineno="226" name="os"/>
              </Getattr>
              <Subscript fromlineno="226" tolineno="226" lineno="226">
                <Name fromlineno="226" tolineno="226" lineno="226" name="ose"/>
                <Index fromlineno="226" tolineno="226" lineno="None">
                  <Const fromlineno="226" tolineno="226" lineno="226" type="int">0</Const>
                </Index>
              </Subscript>
              <Subscript fromlineno="226" tolineno="226" lineno="226">
                <Name fromlineno="226" tolineno="226" lineno="226" name="ose"/>
                <Index fromlineno="226" tolineno="226" lineno="None">
                  <Const fromlineno="226" tolineno="226" lineno="226" type="int">1</Const>
                </Index>
              </Subscript>
            </CallFunc>
          </Discard>
          <Discard fromlineno="229" tolineno="229" lineno="229">
            <CallFunc fromlineno="229" tolineno="229" lineno="229" func="Getattr(close)">
              <Getattr fromlineno="229" tolineno="229" lineno="229" attrname="close" expr="si">
                <Name fromlineno="229" tolineno="229" lineno="229" name="si"/>
              </Getattr>
            </CallFunc>
          </Discard>
          <Discard fromlineno="230" tolineno="230" lineno="230">
            <CallFunc fromlineno="230" tolineno="230" lineno="230" func="Getattr(close)">
              <Getattr fromlineno="230" tolineno="230" lineno="230" attrname="close" expr="so">
                <Name fromlineno="230" tolineno="230" lineno="230" name="so"/>
              </Getattr>
            </CallFunc>
          </Discard>
          <Discard fromlineno="231" tolineno="231" lineno="231">
            <CallFunc fromlineno="231" tolineno="231" lineno="231" func="Getattr(close)">
              <Getattr fromlineno="231" tolineno="231" lineno="231" attrname="close" expr="se">
                <Name fromlineno="231" tolineno="231" lineno="231" name="se"/>
              </Getattr>
            </CallFunc>
          </Discard>
          <Discard fromlineno="234" tolineno="234" lineno="234">
            <CallFunc fromlineno="234" tolineno="234" lineno="234" func="Getattr(close)">
              <Getattr fromlineno="234" tolineno="234" lineno="234" attrname="close" expr="os">
                <Name fromlineno="234" tolineno="234" lineno="234" name="os"/>
              </Getattr>
              <Subscript fromlineno="234" tolineno="234" lineno="234">
                <Name fromlineno="234" tolineno="234" lineno="234" name="osi"/>
                <Index fromlineno="234" tolineno="234" lineno="None">
                  <Const fromlineno="234" tolineno="234" lineno="234" type="int">0</Const>
                </Index>
              </Subscript>
            </CallFunc>
          </Discard>
          <Discard fromlineno="235" tolineno="235" lineno="235">
            <CallFunc fromlineno="235" tolineno="235" lineno="235" func="Getattr(close)">
              <Getattr fromlineno="235" tolineno="235" lineno="235" attrname="close" expr="os">
                <Name fromlineno="235" tolineno="235" lineno="235" name="os"/>
              </Getattr>
              <Subscript fromlineno="235" tolineno="235" lineno="235">
                <Name fromlineno="235" tolineno="235" lineno="235" name="oso"/>
                <Index fromlineno="235" tolineno="235" lineno="None">
                  <Const fromlineno="235" tolineno="235" lineno="235" type="int">0</Const>
                </Index>
              </Subscript>
            </CallFunc>
          </Discard>
          <Discard fromlineno="236" tolineno="236" lineno="236">
            <CallFunc fromlineno="236" tolineno="236" lineno="236" func="Getattr(close)">
              <Getattr fromlineno="236" tolineno="236" lineno="236" attrname="close" expr="os">
                <Name fromlineno="236" tolineno="236" lineno="236" name="os"/>
              </Getattr>
              <Subscript fromlineno="236" tolineno="236" lineno="236">
                <Name fromlineno="236" tolineno="236" lineno="236" name="ose"/>
                <Index fromlineno="236" tolineno="236" lineno="None">
                  <Const fromlineno="236" tolineno="236" lineno="236" type="int">0</Const>
                </Index>
              </Subscript>
            </CallFunc>
          </Discard>
        </If>
        <If fromlineno="238" tolineno="261" lineno="238">
          <Compare fromlineno="238" tolineno="238" lineno="238" op="('==', &lt;Const(int) l.238 [bb.build] at Ox962bf0c&gt;)">
            <Name fromlineno="238" tolineno="238" lineno="238" name="ret"/>
            <Const fromlineno="238" tolineno="238" lineno="238" type="int">0</Const>
          </Compare>
          <If fromlineno="239" tolineno="240" lineno="239">
            <Compare fromlineno="239" tolineno="239" lineno="239" op="('&gt;', &lt;Const(int) l.239 [bb.build] at Ox96310ec&gt;)">
              <Subscript fromlineno="239" tolineno="239" lineno="239">
                <Getattr fromlineno="239" tolineno="239" lineno="239" attrname="debug_level" expr="bb.msg">
                  <Getattr fromlineno="239" tolineno="239" lineno="239" attrname="msg" expr="bb">
                    <Name fromlineno="239" tolineno="239" lineno="239" name="bb"/>
                  </Getattr>
                </Getattr>
                <Index fromlineno="239" tolineno="239" lineno="None">
                  <Const fromlineno="239" tolineno="239" lineno="239" type="str">'default'</Const>
                </Index>
              </Subscript>
              <Const fromlineno="239" tolineno="239" lineno="239" type="int">0</Const>
            </Compare>
            <Discard fromlineno="240" tolineno="240" lineno="240">
              <CallFunc fromlineno="240" tolineno="240" lineno="240" func="Getattr(remove)">
                <Getattr fromlineno="240" tolineno="240" lineno="240" attrname="remove" expr="os">
                  <Name fromlineno="240" tolineno="240" lineno="240" name="os"/>
                </Getattr>
                <Name fromlineno="240" tolineno="240" lineno="240" name="runfile"/>
              </CallFunc>
            </Discard>
          </If>
          <Return fromlineno="242" tolineno="242" lineno="242"/>
          <Discard fromlineno="244" tolineno="244" lineno="244">
            <CallFunc fromlineno="244" tolineno="244" lineno="244" func="Getattr(error)">
              <Getattr fromlineno="244" tolineno="244" lineno="244" attrname="error" expr="bb.msg">
                <Getattr fromlineno="244" tolineno="244" lineno="244" attrname="msg" expr="bb">
                  <Name fromlineno="244" tolineno="244" lineno="244" name="bb"/>
                </Getattr>
              </Getattr>
              <Getattr fromlineno="244" tolineno="244" lineno="244" attrname="Build" expr="bb.msg.domain">
                <Getattr fromlineno="244" tolineno="244" lineno="244" attrname="domain" expr="bb.msg">
                  <Getattr fromlineno="244" tolineno="244" lineno="244" attrname="msg" expr="bb">
                    <Name fromlineno="244" tolineno="244" lineno="244" name="bb"/>
                  </Getattr>
                </Getattr>
              </Getattr>
              <BinOp fromlineno="244" tolineno="244" lineno="244" op="%" left="'function %s failed'" right="func">
                <Const fromlineno="244" tolineno="244" lineno="244" type="str">'function %s failed'</Const>
                <Name fromlineno="244" tolineno="244" lineno="244" name="func"/>
              </BinOp>
            </CallFunc>
          </Discard>
          <If fromlineno="245" tolineno="260" lineno="245">
            <CallFunc fromlineno="245" tolineno="245" lineno="245" func="Getattr(getVar)">
              <Getattr fromlineno="245" tolineno="245" lineno="245" attrname="getVar" expr="data">
                <Name fromlineno="245" tolineno="245" lineno="245" name="data"/>
              </Getattr>
              <Const fromlineno="245" tolineno="245" lineno="245" type="str">'BBINCLUDELOGS'</Const>
              <Name fromlineno="245" tolineno="245" lineno="245" name="d"/>
            </CallFunc>
            <Discard fromlineno="246" tolineno="246" lineno="246">
              <CallFunc fromlineno="246" tolineno="246" lineno="246" func="Getattr(error)">
                <Getattr fromlineno="246" tolineno="246" lineno="246" attrname="error" expr="bb.msg">
                  <Getattr fromlineno="246" tolineno="246" lineno="246" attrname="msg" expr="bb">
                    <Name fromlineno="246" tolineno="246" lineno="246" name="bb"/>
                  </Getattr>
                </Getattr>
                <Getattr fromlineno="246" tolineno="246" lineno="246" attrname="Build" expr="bb.msg.domain">
                  <Getattr fromlineno="246" tolineno="246" lineno="246" attrname="domain" expr="bb.msg">
                    <Getattr fromlineno="246" tolineno="246" lineno="246" attrname="msg" expr="bb">
                      <Name fromlineno="246" tolineno="246" lineno="246" name="bb"/>
                    </Getattr>
                  </Getattr>
                </Getattr>
                <BinOp fromlineno="246" tolineno="246" lineno="246" op="%" left="'log data follows (%s)'" right="logfile">
                  <Const fromlineno="246" tolineno="246" lineno="246" type="str">'log data follows (%s)'</Const>
                  <Name fromlineno="246" tolineno="246" lineno="246" name="logfile"/>
                </BinOp>
              </CallFunc>
            </Discard>
            <Assign fromlineno="247" tolineno="247" lineno="247" targets="[&lt;AssName(number_of_lines) l.247 [bb.build] at Ox96316ec&gt;]" value="data.getVar('BBINCLUDELOGS_LINES', d)">
              <AssName fromlineno="247" tolineno="247" lineno="247" name="number_of_lines"/>
              <CallFunc fromlineno="247" tolineno="247" lineno="247" func="Getattr(getVar)">
                <Getattr fromlineno="247" tolineno="247" lineno="247" attrname="getVar" expr="data">
                  <Name fromlineno="247" tolineno="247" lineno="247" name="data"/>
                </Getattr>
                <Const fromlineno="247" tolineno="247" lineno="247" type="str">'BBINCLUDELOGS_LINES'</Const>
                <Name fromlineno="247" tolineno="247" lineno="247" name="d"/>
              </CallFunc>
            </Assign>
            <If fromlineno="248" tolineno="258" lineno="248">
              <Name fromlineno="248" tolineno="248" lineno="248" name="number_of_lines"/>
              <Discard fromlineno="249" tolineno="249" lineno="249">
                <CallFunc fromlineno="249" tolineno="249" lineno="249" func="Getattr(system)">
                  <Getattr fromlineno="249" tolineno="249" lineno="249" attrname="system" expr="os">
                    <Name fromlineno="249" tolineno="249" lineno="249" name="os"/>
                  </Getattr>
                  <BinOp fromlineno="249" tolineno="249" lineno="249" op="%" left="'tail -n%s %s'" right="(number_of_lines, logfile)">
                    <Const fromlineno="249" tolineno="249" lineno="249" type="str">'tail -n%s %s'</Const>
                    <Tuple fromlineno="249" tolineno="249" lineno="249">
                      <Name fromlineno="249" tolineno="249" lineno="249" name="number_of_lines"/>
                      <Name fromlineno="249" tolineno="249" lineno="249" name="logfile"/>
                    </Tuple>
                  </BinOp>
                </CallFunc>
              </Discard>
              <Assign fromlineno="251" tolineno="251" lineno="251" targets="[&lt;AssName(f) l.251 [bb.build] at Ox9631a4c&gt;]" value="open(logfile, 'r')">
                <AssName fromlineno="251" tolineno="251" lineno="251" name="f"/>
                <CallFunc fromlineno="251" tolineno="251" lineno="251" func="Name(open)">
                  <Name fromlineno="251" tolineno="251" lineno="251" name="open"/>
                  <Name fromlineno="251" tolineno="251" lineno="251" name="logfile"/>
                  <Const fromlineno="251" tolineno="251" lineno="251" type="str">'r'</Const>
                </CallFunc>
              </Assign>
              <While fromlineno="252" tolineno="257" lineno="252">
                <Const fromlineno="252" tolineno="252" lineno="252" type="bool">True</Const>
                <Assign fromlineno="253" tolineno="253" lineno="253" targets="[&lt;AssName(l) l.253 [bb.build] at Ox9631bcc&gt;]" value="f.readline()">
                  <AssName fromlineno="253" tolineno="253" lineno="253" name="l"/>
                  <CallFunc fromlineno="253" tolineno="253" lineno="253" func="Getattr(readline)">
                    <Getattr fromlineno="253" tolineno="253" lineno="253" attrname="readline" expr="f">
                      <Name fromlineno="253" tolineno="253" lineno="253" name="f"/>
                    </Getattr>
                  </CallFunc>
                </Assign>
                <If fromlineno="254" tolineno="255" lineno="254">
                  <Compare fromlineno="254" tolineno="254" lineno="254" op="('==', &lt;Const(str) l.254 [bb.build] at Ox9631d4c&gt;)">
                    <Name fromlineno="254" tolineno="254" lineno="254" name="l"/>
                    <Const fromlineno="254" tolineno="254" lineno="254" type="str">''</Const>
                  </Compare>
                  <Break fromlineno="255" tolineno="255" lineno="255"/>
                </If>
                <Assign fromlineno="256" tolineno="256" lineno="256" targets="[&lt;AssName(l) l.256 [bb.build] at Ox9631e0c&gt;]" value="l.rstrip()">
                  <AssName fromlineno="256" tolineno="256" lineno="256" name="l"/>
                  <CallFunc fromlineno="256" tolineno="256" lineno="256" func="Getattr(rstrip)">
                    <Getattr fromlineno="256" tolineno="256" lineno="256" attrname="rstrip" expr="l">
                      <Name fromlineno="256" tolineno="256" lineno="256" name="l"/>
                    </Getattr>
                  </CallFunc>
                </Assign>
                <Print fromlineno="257" tolineno="257" lineno="257">
                  <BinOp fromlineno="257" tolineno="257" lineno="257" op="%" left="'| %s'" right="l">
                    <Const fromlineno="257" tolineno="257" lineno="257" type="str">'| %s'</Const>
                    <Name fromlineno="257" tolineno="257" lineno="257" name="l"/>
                  </BinOp>
                </Print>
              </While>
              <Discard fromlineno="258" tolineno="258" lineno="258">
                <CallFunc fromlineno="258" tolineno="258" lineno="258" func="Getattr(close)">
                  <Getattr fromlineno="258" tolineno="258" lineno="258" attrname="close" expr="f">
                    <Name fromlineno="258" tolineno="258" lineno="258" name="f"/>
                  </Getattr>
                </CallFunc>
              </Discard>
            </If>
            <Discard fromlineno="260" tolineno="260" lineno="260">
              <CallFunc fromlineno="260" tolineno="260" lineno="260" func="Getattr(error)">
                <Getattr fromlineno="260" tolineno="260" lineno="260" attrname="error" expr="bb.msg">
                  <Getattr fromlineno="260" tolineno="260" lineno="260" attrname="msg" expr="bb">
                    <Name fromlineno="260" tolineno="260" lineno="260" name="bb"/>
                  </Getattr>
                </Getattr>
                <Getattr fromlineno="260" tolineno="260" lineno="260" attrname="Build" expr="bb.msg.domain">
                  <Getattr fromlineno="260" tolineno="260" lineno="260" attrname="domain" expr="bb.msg">
                    <Getattr fromlineno="260" tolineno="260" lineno="260" attrname="msg" expr="bb">
                      <Name fromlineno="260" tolineno="260" lineno="260" name="bb"/>
                    </Getattr>
                  </Getattr>
                </Getattr>
                <BinOp fromlineno="260" tolineno="260" lineno="260" op="%" left="'see log in %s'" right="logfile">
                  <Const fromlineno="260" tolineno="260" lineno="260" type="str">'see log in %s'</Const>
                  <Name fromlineno="260" tolineno="260" lineno="260" name="logfile"/>
                </BinOp>
              </CallFunc>
            </Discard>
          </If>
          <Raise fromlineno="261" tolineno="261" lineno="261">
            <CallFunc fromlineno="261" tolineno="261" lineno="261" func="Name(FuncFailed)">
              <Name fromlineno="261" tolineno="261" lineno="261" name="FuncFailed"/>
              <Name fromlineno="261" tolineno="261" lineno="261" name="logfile"/>
            </CallFunc>
          </Raise>
        </If>
      </Function>
      <Function fromlineno="264" tolineno="293" lineno="264">
        <Arguments fromlineno="264" tolineno="264" lineno="None" format_args="task, d">
          <AssName fromlineno="264" tolineno="264" lineno="264" name="task"/>
          <AssName fromlineno="264" tolineno="264" lineno="264" name="d"/>
        </Arguments>
        <If fromlineno="272" tolineno="273" lineno="272">
          <UnaryOp fromlineno="272" tolineno="272" lineno="272">
            <CallFunc fromlineno="272" tolineno="272" lineno="272" func="Getattr(getVarFlag)">
              <Getattr fromlineno="272" tolineno="272" lineno="272" attrname="getVarFlag" expr="data">
                <Name fromlineno="272" tolineno="272" lineno="272" name="data"/>
              </Getattr>
              <Name fromlineno="272" tolineno="272" lineno="272" name="task"/>
              <Const fromlineno="272" tolineno="272" lineno="272" type="str">'task'</Const>
              <Name fromlineno="272" tolineno="272" lineno="272" name="d"/>
            </CallFunc>
          </UnaryOp>
          <Raise fromlineno="273" tolineno="273" lineno="273">
            <CallFunc fromlineno="273" tolineno="273" lineno="273" func="Name(EventException)">
              <Name fromlineno="273" tolineno="273" lineno="273" name="EventException"/>
              <Const fromlineno="273" tolineno="273" lineno="273" type="str">'No such task'</Const>
              <CallFunc fromlineno="273" tolineno="273" lineno="273" func="Name(InvalidTask)">
                <Name fromlineno="273" tolineno="273" lineno="273" name="InvalidTask"/>
                <Name fromlineno="273" tolineno="273" lineno="273" name="task"/>
                <Name fromlineno="273" tolineno="273" lineno="273" name="d"/>
              </CallFunc>
            </CallFunc>
          </Raise>
        </If>
        <TryExcept fromlineno="275" tolineno="289" lineno="275">
          <Discard fromlineno="276" tolineno="276" lineno="276">
            <CallFunc fromlineno="276" tolineno="276" lineno="276" func="Getattr(debug)">
              <Getattr fromlineno="276" tolineno="276" lineno="276" attrname="debug" expr="bb.msg">
                <Getattr fromlineno="276" tolineno="276" lineno="276" attrname="msg" expr="bb">
                  <Name fromlineno="276" tolineno="276" lineno="276" name="bb"/>
                </Getattr>
              </Getattr>
              <Const fromlineno="276" tolineno="276" lineno="276" type="int">1</Const>
              <Getattr fromlineno="276" tolineno="276" lineno="276" attrname="Build" expr="bb.msg.domain">
                <Getattr fromlineno="276" tolineno="276" lineno="276" attrname="domain" expr="bb.msg">
                  <Getattr fromlineno="276" tolineno="276" lineno="276" attrname="msg" expr="bb">
                    <Name fromlineno="276" tolineno="276" lineno="276" name="bb"/>
                  </Getattr>
                </Getattr>
              </Getattr>
              <BinOp fromlineno="276" tolineno="276" lineno="276" op="%" left="'Executing task %s'" right="task">
                <Const fromlineno="276" tolineno="276" lineno="276" type="str">'Executing task %s'</Const>
                <Name fromlineno="276" tolineno="276" lineno="276" name="task"/>
              </BinOp>
            </CallFunc>
          </Discard>
          <Assign fromlineno="277" tolineno="277" lineno="277" targets="[&lt;AssName(old_overrides) l.277 [bb.build] at Ox963f78c&gt;]" value="data.getVar('OVERRIDES', d, 0)">
            <AssName fromlineno="277" tolineno="277" lineno="277" name="old_overrides"/>
            <CallFunc fromlineno="277" tolineno="277" lineno="277" func="Getattr(getVar)">
              <Getattr fromlineno="277" tolineno="277" lineno="277" attrname="getVar" expr="data">
                <Name fromlineno="277" tolineno="277" lineno="277" name="data"/>
              </Getattr>
              <Const fromlineno="277" tolineno="277" lineno="277" type="str">'OVERRIDES'</Const>
              <Name fromlineno="277" tolineno="277" lineno="277" name="d"/>
              <Const fromlineno="277" tolineno="277" lineno="277" type="int">0</Const>
            </CallFunc>
          </Assign>
          <Assign fromlineno="278" tolineno="278" lineno="278" targets="[&lt;AssName(localdata) l.278 [bb.build] at Ox963f8ec&gt;]" value="data.createCopy(d)">
            <AssName fromlineno="278" tolineno="278" lineno="278" name="localdata"/>
            <CallFunc fromlineno="278" tolineno="278" lineno="278" func="Getattr(createCopy)">
              <Getattr fromlineno="278" tolineno="278" lineno="278" attrname="createCopy" expr="data">
                <Name fromlineno="278" tolineno="278" lineno="278" name="data"/>
              </Getattr>
              <Name fromlineno="278" tolineno="278" lineno="278" name="d"/>
            </CallFunc>
          </Assign>
          <Discard fromlineno="279" tolineno="279" lineno="279">
            <CallFunc fromlineno="279" tolineno="279" lineno="279" func="Getattr(setVar)">
              <Getattr fromlineno="279" tolineno="279" lineno="279" attrname="setVar" expr="data">
                <Name fromlineno="279" tolineno="279" lineno="279" name="data"/>
              </Getattr>
              <Const fromlineno="279" tolineno="279" lineno="279" type="str">'OVERRIDES'</Const>
              <BinOp fromlineno="279" tolineno="279" lineno="279" op="%" left="'task-%s:%s'" right="(task[3:], old_overrides)">
                <Const fromlineno="279" tolineno="279" lineno="279" type="str">'task-%s:%s'</Const>
                <Tuple fromlineno="279" tolineno="279" lineno="279">
                  <Subscript fromlineno="279" tolineno="279" lineno="279">
                    <Name fromlineno="279" tolineno="279" lineno="279" name="task"/>
                    <Slice fromlineno="279" tolineno="279" lineno="None">
                      <Const fromlineno="279" tolineno="279" lineno="279" type="int">3</Const>
                    </Slice>
                  </Subscript>
                  <Name fromlineno="279" tolineno="279" lineno="279" name="old_overrides"/>
                </Tuple>
              </BinOp>
              <Name fromlineno="279" tolineno="279" lineno="279" name="localdata"/>
            </CallFunc>
          </Discard>
          <Discard fromlineno="280" tolineno="280" lineno="280">
            <CallFunc fromlineno="280" tolineno="280" lineno="280" func="Getattr(update_data)">
              <Getattr fromlineno="280" tolineno="280" lineno="280" attrname="update_data" expr="data">
                <Name fromlineno="280" tolineno="280" lineno="280" name="data"/>
              </Getattr>
              <Name fromlineno="280" tolineno="280" lineno="280" name="localdata"/>
            </CallFunc>
          </Discard>
          <Discard fromlineno="281" tolineno="281" lineno="281">
            <CallFunc fromlineno="281" tolineno="281" lineno="281" func="Getattr(expandKeys)">
              <Getattr fromlineno="281" tolineno="281" lineno="281" attrname="expandKeys" expr="data">
                <Name fromlineno="281" tolineno="281" lineno="281" name="data"/>
              </Getattr>
              <Name fromlineno="281" tolineno="281" lineno="281" name="localdata"/>
            </CallFunc>
          </Discard>
          <Discard fromlineno="282" tolineno="282" lineno="282">
            <CallFunc fromlineno="282" tolineno="282" lineno="282" func="Getattr(fire)">
              <Getattr fromlineno="282" tolineno="282" lineno="282" attrname="fire" expr="event">
                <Name fromlineno="282" tolineno="282" lineno="282" name="event"/>
              </Getattr>
              <CallFunc fromlineno="282" tolineno="282" lineno="282" func="Name(TaskStarted)">
                <Name fromlineno="282" tolineno="282" lineno="282" name="TaskStarted"/>
                <Name fromlineno="282" tolineno="282" lineno="282" name="task"/>
                <Name fromlineno="282" tolineno="282" lineno="282" name="localdata"/>
              </CallFunc>
            </CallFunc>
          </Discard>
          <Discard fromlineno="283" tolineno="283" lineno="283">
            <CallFunc fromlineno="283" tolineno="283" lineno="283" func="Name(exec_func)">
              <Name fromlineno="283" tolineno="283" lineno="283" name="exec_func"/>
              <Name fromlineno="283" tolineno="283" lineno="283" name="task"/>
              <Name fromlineno="283" tolineno="283" lineno="283" name="localdata"/>
            </CallFunc>
          </Discard>
          <Discard fromlineno="284" tolineno="284" lineno="284">
            <CallFunc fromlineno="284" tolineno="284" lineno="284" func="Getattr(fire)">
              <Getattr fromlineno="284" tolineno="284" lineno="284" attrname="fire" expr="event">
                <Name fromlineno="284" tolineno="284" lineno="284" name="event"/>
              </Getattr>
              <CallFunc fromlineno="284" tolineno="284" lineno="284" func="Name(TaskSucceeded)">
                <Name fromlineno="284" tolineno="284" lineno="284" name="TaskSucceeded"/>
                <Name fromlineno="284" tolineno="284" lineno="284" name="task"/>
                <Name fromlineno="284" tolineno="284" lineno="284" name="localdata"/>
              </CallFunc>
            </CallFunc>
          </Discard>
          <ExceptHandler fromlineno="285" tolineno="289" lineno="285">
            <Name fromlineno="285" tolineno="285" lineno="285" name="FuncFailed"/>
            <AssName fromlineno="285" tolineno="285" lineno="285" name="reason"/>
            <Discard fromlineno="286" tolineno="286" lineno="286">
              <CallFunc fromlineno="286" tolineno="286" lineno="286" func="Getattr(note)">
                <Getattr fromlineno="286" tolineno="286" lineno="286" attrname="note" expr="bb.msg">
                  <Getattr fromlineno="286" tolineno="286" lineno="286" attrname="msg" expr="bb">
                    <Name fromlineno="286" tolineno="286" lineno="286" name="bb"/>
                  </Getattr>
                </Getattr>
                <Const fromlineno="286" tolineno="286" lineno="286" type="int">1</Const>
                <Getattr fromlineno="286" tolineno="286" lineno="286" attrname="Build" expr="bb.msg.domain">
                  <Getattr fromlineno="286" tolineno="286" lineno="286" attrname="domain" expr="bb.msg">
                    <Getattr fromlineno="286" tolineno="286" lineno="286" attrname="msg" expr="bb">
                      <Name fromlineno="286" tolineno="286" lineno="286" name="bb"/>
                    </Getattr>
                  </Getattr>
                </Getattr>
                <BinOp fromlineno="286" tolineno="286" lineno="286" op="%" left="'Task failed: %s'" right="reason">
                  <Const fromlineno="286" tolineno="286" lineno="286" type="str">'Task failed: %s'</Const>
                  <Name fromlineno="286" tolineno="286" lineno="286" name="reason"/>
                </BinOp>
              </CallFunc>
            </Discard>
            <Assign fromlineno="287" tolineno="287" lineno="287" targets="[&lt;AssName(failedevent) l.287 [bb.build] at Ox963c38c&gt;]" value="TaskFailed(task, d)">
              <AssName fromlineno="287" tolineno="287" lineno="287" name="failedevent"/>
              <CallFunc fromlineno="287" tolineno="287" lineno="287" func="Name(TaskFailed)">
                <Name fromlineno="287" tolineno="287" lineno="287" name="TaskFailed"/>
                <Name fromlineno="287" tolineno="287" lineno="287" name="task"/>
                <Name fromlineno="287" tolineno="287" lineno="287" name="d"/>
              </CallFunc>
            </Assign>
            <Discard fromlineno="288" tolineno="288" lineno="288">
              <CallFunc fromlineno="288" tolineno="288" lineno="288" func="Getattr(fire)">
                <Getattr fromlineno="288" tolineno="288" lineno="288" attrname="fire" expr="event">
                  <Name fromlineno="288" tolineno="288" lineno="288" name="event"/>
                </Getattr>
                <Name fromlineno="288" tolineno="288" lineno="288" name="failedevent"/>
              </CallFunc>
            </Discard>
            <Raise fromlineno="289" tolineno="289" lineno="289">
              <CallFunc fromlineno="289" tolineno="289" lineno="289" func="Name(EventException)">
                <Name fromlineno="289" tolineno="289" lineno="289" name="EventException"/>
                <BinOp fromlineno="289" tolineno="289" lineno="289" op="%" left="'Function failed in task: %s'" right="reason">
                  <Const fromlineno="289" tolineno="289" lineno="289" type="str">'Function failed in task: %s'</Const>
                  <Name fromlineno="289" tolineno="289" lineno="289" name="reason"/>
                </BinOp>
                <Name fromlineno="289" tolineno="289" lineno="289" name="failedevent"/>
              </CallFunc>
            </Raise>
          </ExceptHandler>
        </TryExcept>
        <If fromlineno="292" tolineno="293" lineno="292">
          <BoolOp fromlineno="292" tolineno="292" lineno="292" op="and" values="not data.getVarFlag(task, 'nostamp', d),not data.getVarFlag(task, 'selfstamp', d),">
            <UnaryOp fromlineno="292" tolineno="292" lineno="292">
              <CallFunc fromlineno="292" tolineno="292" lineno="292" func="Getattr(getVarFlag)">
                <Getattr fromlineno="292" tolineno="292" lineno="292" attrname="getVarFlag" expr="data">
                  <Name fromlineno="292" tolineno="292" lineno="292" name="data"/>
                </Getattr>
                <Name fromlineno="292" tolineno="292" lineno="292" name="task"/>
                <Const fromlineno="292" tolineno="292" lineno="292" type="str">'nostamp'</Const>
                <Name fromlineno="292" tolineno="292" lineno="292" name="d"/>
              </CallFunc>
            </UnaryOp>
            <UnaryOp fromlineno="292" tolineno="292" lineno="292">
              <CallFunc fromlineno="292" tolineno="292" lineno="292" func="Getattr(getVarFlag)">
                <Getattr fromlineno="292" tolineno="292" lineno="292" attrname="getVarFlag" expr="data">
                  <Name fromlineno="292" tolineno="292" lineno="292" name="data"/>
                </Getattr>
                <Name fromlineno="292" tolineno="292" lineno="292" name="task"/>
                <Const fromlineno="292" tolineno="292" lineno="292" type="str">'selfstamp'</Const>
                <Name fromlineno="292" tolineno="292" lineno="292" name="d"/>
              </CallFunc>
            </UnaryOp>
          </BoolOp>
          <Discard fromlineno="293" tolineno="293" lineno="293">
            <CallFunc fromlineno="293" tolineno="293" lineno="293" func="Name(make_stamp)">
              <Name fromlineno="293" tolineno="293" lineno="293" name="make_stamp"/>
              <Name fromlineno="293" tolineno="293" lineno="293" name="task"/>
              <Name fromlineno="293" tolineno="293" lineno="293" name="d"/>
            </CallFunc>
          </Discard>
        </If>
      </Function>
      <Function fromlineno="295" tolineno="302" lineno="295">
        <Arguments fromlineno="295" tolineno="295" lineno="None" format_args="d, fn">
          <AssName fromlineno="295" tolineno="295" lineno="295" name="d"/>
          <AssName fromlineno="295" tolineno="295" lineno="295" name="fn"/>
        </Arguments>
        <If fromlineno="300" tolineno="301" lineno="300">
          <Name fromlineno="300" tolineno="300" lineno="300" name="fn"/>
          <Return fromlineno="301" tolineno="301" lineno="301">
            <Subscript fromlineno="301" tolineno="301" lineno="301">
              <Getattr fromlineno="301" tolineno="301" lineno="301" attrname="stamp" expr="d">
                <Name fromlineno="301" tolineno="301" lineno="301" name="d"/>
              </Getattr>
              <Index fromlineno="301" tolineno="301" lineno="None">
                <Name fromlineno="301" tolineno="301" lineno="301" name="fn"/>
              </Index>
            </Subscript>
          </Return>
        </If>
        <Return fromlineno="302" tolineno="302" lineno="302">
          <CallFunc fromlineno="302" tolineno="302" lineno="302" func="Getattr(getVar)">
            <Getattr fromlineno="302" tolineno="302" lineno="302" attrname="getVar" expr="data">
              <Name fromlineno="302" tolineno="302" lineno="302" name="data"/>
            </Getattr>
            <Const fromlineno="302" tolineno="302" lineno="302" type="str">'STAMP'</Const>
            <Name fromlineno="302" tolineno="302" lineno="302" name="d"/>
            <Const fromlineno="302" tolineno="302" lineno="302" type="int">1</Const>
          </CallFunc>
        </Return>
      </Function>
      <Function fromlineno="304" tolineno="320" lineno="304">
        <Arguments fromlineno="304" tolineno="304" lineno="None" format_args="task, d, file_name">
          <AssName fromlineno="304" tolineno="304" lineno="304" name="task"/>
          <AssName fromlineno="304" tolineno="304" lineno="304" name="d"/>
          <AssName fromlineno="304" tolineno="304" lineno="304" name="file_name"/>
        </Arguments>
        <Assign fromlineno="311" tolineno="311" lineno="311" targets="[&lt;AssName(stamp) l.311 [bb.build] at Ox963ce2c&gt;]" value="extract_stamp(d, file_name)">
          <AssName fromlineno="311" tolineno="311" lineno="311" name="stamp"/>
          <CallFunc fromlineno="311" tolineno="311" lineno="311" func="Name(extract_stamp)">
            <Name fromlineno="311" tolineno="311" lineno="311" name="extract_stamp"/>
            <Name fromlineno="311" tolineno="311" lineno="311" name="d"/>
            <Name fromlineno="311" tolineno="311" lineno="311" name="file_name"/>
          </CallFunc>
        </Assign>
        <If fromlineno="312" tolineno="313" lineno="312">
          <UnaryOp fromlineno="312" tolineno="312" lineno="312">
            <Name fromlineno="312" tolineno="312" lineno="312" name="stamp"/>
          </UnaryOp>
          <Return fromlineno="313" tolineno="313" lineno="313"/>
        </If>
        <Assign fromlineno="314" tolineno="314" lineno="314" targets="[&lt;AssName(stamp) l.314 [bb.build] at Ox981502c&gt;]" value="('%s.%s') % ((stamp, task))">
          <AssName fromlineno="314" tolineno="314" lineno="314" name="stamp"/>
          <BinOp fromlineno="314" tolineno="314" lineno="314" op="%" left="'%s.%s'" right="(stamp, task)">
            <Const fromlineno="314" tolineno="314" lineno="314" type="str">'%s.%s'</Const>
            <Tuple fromlineno="314" tolineno="314" lineno="314">
              <Name fromlineno="314" tolineno="314" lineno="314" name="stamp"/>
              <Name fromlineno="314" tolineno="314" lineno="314" name="task"/>
            </Tuple>
          </BinOp>
        </Assign>
        <Discard fromlineno="315" tolineno="315" lineno="315">
          <CallFunc fromlineno="315" tolineno="315" lineno="315" func="Name(mkdirhier)">
            <Name fromlineno="315" tolineno="315" lineno="315" name="mkdirhier"/>
            <CallFunc fromlineno="315" tolineno="315" lineno="315" func="Getattr(dirname)">
              <Getattr fromlineno="315" tolineno="315" lineno="315" attrname="dirname" expr="os.path">
                <Getattr fromlineno="315" tolineno="315" lineno="315" attrname="path" expr="os">
                  <Name fromlineno="315" tolineno="315" lineno="315" name="os"/>
                </Getattr>
              </Getattr>
              <Name fromlineno="315" tolineno="315" lineno="315" name="stamp"/>
            </CallFunc>
          </CallFunc>
        </Discard>
        <If fromlineno="318" tolineno="319" lineno="318">
          <CallFunc fromlineno="318" tolineno="318" lineno="318" func="Getattr(access)">
            <Getattr fromlineno="318" tolineno="318" lineno="318" attrname="access" expr="os">
              <Name fromlineno="318" tolineno="318" lineno="318" name="os"/>
            </Getattr>
            <Name fromlineno="318" tolineno="318" lineno="318" name="stamp"/>
            <Getattr fromlineno="318" tolineno="318" lineno="318" attrname="F_OK" expr="os">
              <Name fromlineno="318" tolineno="318" lineno="318" name="os"/>
            </Getattr>
          </CallFunc>
          <Discard fromlineno="319" tolineno="319" lineno="319">
            <CallFunc fromlineno="319" tolineno="319" lineno="319" func="Getattr(remove)">
              <Getattr fromlineno="319" tolineno="319" lineno="319" attrname="remove" expr="os">
                <Name fromlineno="319" tolineno="319" lineno="319" name="os"/>
              </Getattr>
              <Name fromlineno="319" tolineno="319" lineno="319" name="stamp"/>
            </CallFunc>
          </Discard>
        </If>
        <Return fromlineno="320" tolineno="320" lineno="320">
          <Name fromlineno="320" tolineno="320" lineno="320" name="stamp"/>
        </Return>
      </Function>
      <Function fromlineno="322" tolineno="330" lineno="322">
        <Arguments fromlineno="322" tolineno="322" lineno="None" format_args="task, d, file_name=None">
          <AssName fromlineno="322" tolineno="322" lineno="322" name="task"/>
          <AssName fromlineno="322" tolineno="322" lineno="322" name="d"/>
          <AssName fromlineno="322" tolineno="322" lineno="322" name="file_name"/>
          <Const fromlineno="322" tolineno="322" lineno="322" type="NoneType">None</Const>
        </Arguments>
        <Assign fromlineno="327" tolineno="327" lineno="327" targets="[&lt;AssName(stamp) l.327 [bb.build] at Ox981562c&gt;]" value="stamp_internal(task, d, file_name)">
          <AssName fromlineno="327" tolineno="327" lineno="327" name="stamp"/>
          <CallFunc fromlineno="327" tolineno="327" lineno="327" func="Name(stamp_internal)">
            <Name fromlineno="327" tolineno="327" lineno="327" name="stamp_internal"/>
            <Name fromlineno="327" tolineno="327" lineno="327" name="task"/>
            <Name fromlineno="327" tolineno="327" lineno="327" name="d"/>
            <Name fromlineno="327" tolineno="327" lineno="327" name="file_name"/>
          </CallFunc>
        </Assign>
        <If fromlineno="328" tolineno="330" lineno="328">
          <Name fromlineno="328" tolineno="328" lineno="328" name="stamp"/>
          <Assign fromlineno="329" tolineno="329" lineno="329" targets="[&lt;AssName(f) l.329 [bb.build] at Ox98157ec&gt;]" value="open(stamp, 'w')">
            <AssName fromlineno="329" tolineno="329" lineno="329" name="f"/>
            <CallFunc fromlineno="329" tolineno="329" lineno="329" func="Name(open)">
              <Name fromlineno="329" tolineno="329" lineno="329" name="open"/>
              <Name fromlineno="329" tolineno="329" lineno="329" name="stamp"/>
              <Const fromlineno="329" tolineno="329" lineno="329" type="str">'w'</Const>
            </CallFunc>
          </Assign>
          <Discard fromlineno="330" tolineno="330" lineno="330">
            <CallFunc fromlineno="330" tolineno="330" lineno="330" func="Getattr(close)">
              <Getattr fromlineno="330" tolineno="330" lineno="330" attrname="close" expr="f">
                <Name fromlineno="330" tolineno="330" lineno="330" name="f"/>
              </Getattr>
            </CallFunc>
          </Discard>
        </If>
      </Function>
      <Function fromlineno="332" tolineno="337" lineno="332">
        <Arguments fromlineno="332" tolineno="332" lineno="None" format_args="task, d, file_name=None">
          <AssName fromlineno="332" tolineno="332" lineno="332" name="task"/>
          <AssName fromlineno="332" tolineno="332" lineno="332" name="d"/>
          <AssName fromlineno="332" tolineno="332" lineno="332" name="file_name"/>
          <Const fromlineno="332" tolineno="332" lineno="332" type="NoneType">None</Const>
        </Arguments>
        <Discard fromlineno="337" tolineno="337" lineno="337">
          <CallFunc fromlineno="337" tolineno="337" lineno="337" func="Name(stamp_internal)">
            <Name fromlineno="337" tolineno="337" lineno="337" name="stamp_internal"/>
            <Name fromlineno="337" tolineno="337" lineno="337" name="task"/>
            <Name fromlineno="337" tolineno="337" lineno="337" name="d"/>
            <Name fromlineno="337" tolineno="337" lineno="337" name="file_name"/>
          </CallFunc>
        </Discard>
      </Function>
      <Function fromlineno="339" tolineno="373" lineno="339">
        <Arguments fromlineno="339" tolineno="339" lineno="None" format_args="tasklist, d">
          <AssName fromlineno="339" tolineno="339" lineno="339" name="tasklist"/>
          <AssName fromlineno="339" tolineno="339" lineno="339" name="d"/>
        </Arguments>
        <Assign fromlineno="340" tolineno="340" lineno="340" targets="[&lt;AssName(task_deps) l.340 [bb.build] at Ox9815d2c&gt;]" value="data.getVar('_task_deps', d)">
          <AssName fromlineno="340" tolineno="340" lineno="340" name="task_deps"/>
          <CallFunc fromlineno="340" tolineno="340" lineno="340" func="Getattr(getVar)">
            <Getattr fromlineno="340" tolineno="340" lineno="340" attrname="getVar" expr="data">
              <Name fromlineno="340" tolineno="340" lineno="340" name="data"/>
            </Getattr>
            <Const fromlineno="340" tolineno="340" lineno="340" type="str">'_task_deps'</Const>
            <Name fromlineno="340" tolineno="340" lineno="340" name="d"/>
          </CallFunc>
        </Assign>
        <If fromlineno="341" tolineno="342" lineno="341">
          <UnaryOp fromlineno="341" tolineno="341" lineno="341">
            <Name fromlineno="341" tolineno="341" lineno="341" name="task_deps"/>
          </UnaryOp>
          <Assign fromlineno="342" tolineno="342" lineno="342" targets="[&lt;AssName(task_deps) l.342 [bb.build] at Ox9815f0c&gt;]" value="{}">
            <AssName fromlineno="342" tolineno="342" lineno="342" name="task_deps"/>
            <Dict fromlineno="342" tolineno="342" lineno="342"/>
          </Assign>
        </If>
        <If fromlineno="343" tolineno="344" lineno="343">
          <UnaryOp fromlineno="343" tolineno="343" lineno="343">
            <Compare fromlineno="343" tolineno="343" lineno="343" op="('in', &lt;Name(task_deps) l.343 [bb.build] at Ox981704c&gt;)">
              <Const fromlineno="343" tolineno="343" lineno="343" type="str">'tasks'</Const>
              <Name fromlineno="343" tolineno="343" lineno="343" name="task_deps"/>
            </Compare>
          </UnaryOp>
          <Assign fromlineno="344" tolineno="344" lineno="344" targets="[&lt;Subscript() l.344 [bb.build] at Ox98170ec&gt;]" value="[]">
            <Subscript fromlineno="344" tolineno="344" lineno="344">
              <Name fromlineno="344" tolineno="344" lineno="344" name="task_deps"/>
              <Index fromlineno="344" tolineno="344" lineno="None">
                <Const fromlineno="344" tolineno="344" lineno="344" type="str">'tasks'</Const>
              </Index>
            </Subscript>
            <List fromlineno="344" tolineno="344" lineno="344"/>
          </Assign>
        </If>
        <If fromlineno="345" tolineno="346" lineno="345">
          <UnaryOp fromlineno="345" tolineno="345" lineno="345">
            <Compare fromlineno="345" tolineno="345" lineno="345" op="('in', &lt;Name(task_deps) l.345 [bb.build] at Ox981726c&gt;)">
              <Const fromlineno="345" tolineno="345" lineno="345" type="str">'parents'</Const>
              <Name fromlineno="345" tolineno="345" lineno="345" name="task_deps"/>
            </Compare>
          </UnaryOp>
          <Assign fromlineno="346" tolineno="346" lineno="346" targets="[&lt;Subscript() l.346 [bb.build] at Ox981730c&gt;]" value="{}">
            <Subscript fromlineno="346" tolineno="346" lineno="346">
              <Name fromlineno="346" tolineno="346" lineno="346" name="task_deps"/>
              <Index fromlineno="346" tolineno="346" lineno="None">
                <Const fromlineno="346" tolineno="346" lineno="346" type="str">'parents'</Const>
              </Index>
            </Subscript>
            <Dict fromlineno="346" tolineno="346" lineno="346"/>
          </Assign>
        </If>
        <For fromlineno="348" tolineno="370" lineno="348">
          <AssName fromlineno="348" tolineno="348" lineno="348" name="task"/>
          <Name fromlineno="348" tolineno="348" lineno="348" name="tasklist"/>
          <Assign fromlineno="349" tolineno="349" lineno="349" targets="[&lt;AssName(task) l.349 [bb.build] at Ox98174cc&gt;]" value="data.expand(task, d)">
            <AssName fromlineno="349" tolineno="349" lineno="349" name="task"/>
            <CallFunc fromlineno="349" tolineno="349" lineno="349" func="Getattr(expand)">
              <Getattr fromlineno="349" tolineno="349" lineno="349" attrname="expand" expr="data">
                <Name fromlineno="349" tolineno="349" lineno="349" name="data"/>
              </Getattr>
              <Name fromlineno="349" tolineno="349" lineno="349" name="task"/>
              <Name fromlineno="349" tolineno="349" lineno="349" name="d"/>
            </CallFunc>
          </Assign>
          <Discard fromlineno="350" tolineno="350" lineno="350">
            <CallFunc fromlineno="350" tolineno="350" lineno="350" func="Getattr(setVarFlag)">
              <Getattr fromlineno="350" tolineno="350" lineno="350" attrname="setVarFlag" expr="data">
                <Name fromlineno="350" tolineno="350" lineno="350" name="data"/>
              </Getattr>
              <Name fromlineno="350" tolineno="350" lineno="350" name="task"/>
              <Const fromlineno="350" tolineno="350" lineno="350" type="str">'task'</Const>
              <Const fromlineno="350" tolineno="350" lineno="350" type="int">1</Const>
              <Name fromlineno="350" tolineno="350" lineno="350" name="d"/>
            </CallFunc>
          </Discard>
          <If fromlineno="352" tolineno="353" lineno="352">
            <UnaryOp fromlineno="352" tolineno="352" lineno="352">
              <Compare fromlineno="352" tolineno="352" lineno="352" op="('in', &lt;Subscript() l.352 [bb.build] at Ox981778c&gt;)">
                <Name fromlineno="352" tolineno="352" lineno="352" name="task"/>
                <Subscript fromlineno="352" tolineno="352" lineno="352">
                  <Name fromlineno="352" tolineno="352" lineno="352" name="task_deps"/>
                  <Index fromlineno="352" tolineno="352" lineno="None">
                    <Const fromlineno="352" tolineno="352" lineno="352" type="str">'tasks'</Const>
                  </Index>
                </Subscript>
              </Compare>
            </UnaryOp>
            <Discard fromlineno="353" tolineno="353" lineno="353">
              <CallFunc fromlineno="353" tolineno="353" lineno="353" func="Getattr(append)">
                <Getattr fromlineno="353" tolineno="353" lineno="353" attrname="append" expr="task_deps['tasks']">
                  <Subscript fromlineno="353" tolineno="353" lineno="353">
                    <Name fromlineno="353" tolineno="353" lineno="353" name="task_deps"/>
                    <Index fromlineno="353" tolineno="353" lineno="None">
                      <Const fromlineno="353" tolineno="353" lineno="353" type="str">'tasks'</Const>
                    </Index>
                  </Subscript>
                </Getattr>
                <Name fromlineno="353" tolineno="353" lineno="353" name="task"/>
              </CallFunc>
            </Discard>
          </If>
          <Assign fromlineno="355" tolineno="355" lineno="355" targets="[&lt;AssName(flags) l.355 [bb.build] at Ox98179ac&gt;]" value="data.getVarFlags(task, d)">
            <AssName fromlineno="355" tolineno="355" lineno="355" name="flags"/>
            <CallFunc fromlineno="355" tolineno="355" lineno="355" func="Getattr(getVarFlags)">
              <Getattr fromlineno="355" tolineno="355" lineno="355" attrname="getVarFlags" expr="data">
                <Name fromlineno="355" tolineno="355" lineno="355" name="data"/>
              </Getattr>
              <Name fromlineno="355" tolineno="355" lineno="355" name="task"/>
              <Name fromlineno="355" tolineno="355" lineno="355" name="d"/>
            </CallFunc>
          </Assign>
          <Function fromlineno="356" tolineno="361" lineno="356">
            <Arguments fromlineno="356" tolineno="356" lineno="None" format_args="name">
              <AssName fromlineno="356" tolineno="356" lineno="356" name="name"/>
            </Arguments>
            <If fromlineno="357" tolineno="358" lineno="357">
              <UnaryOp fromlineno="357" tolineno="357" lineno="357">
                <Compare fromlineno="357" tolineno="357" lineno="357" op="('in', &lt;Name(task_deps) l.357 [bb.build] at Ox9817c8c&gt;)">
                  <Name fromlineno="357" tolineno="357" lineno="357" name="name"/>
                  <Name fromlineno="357" tolineno="357" lineno="357" name="task_deps"/>
                </Compare>
              </UnaryOp>
              <Assign fromlineno="358" tolineno="358" lineno="358" targets="[&lt;Subscript() l.358 [bb.build] at Ox9817d2c&gt;]" value="{}">
                <Subscript fromlineno="358" tolineno="358" lineno="358">
                  <Name fromlineno="358" tolineno="358" lineno="358" name="task_deps"/>
                  <Index fromlineno="358" tolineno="358" lineno="None">
                    <Name fromlineno="358" tolineno="358" lineno="358" name="name"/>
                  </Index>
                </Subscript>
                <Dict fromlineno="358" tolineno="358" lineno="358"/>
              </Assign>
            </If>
            <If fromlineno="359" tolineno="361" lineno="359">
              <Compare fromlineno="359" tolineno="359" lineno="359" op="('in', &lt;Name(flags) l.359 [bb.build] at Ox9817e8c&gt;)">
                <Name fromlineno="359" tolineno="359" lineno="359" name="name"/>
                <Name fromlineno="359" tolineno="359" lineno="359" name="flags"/>
              </Compare>
              <Assign fromlineno="360" tolineno="360" lineno="360" targets="[&lt;AssName(deptask) l.360 [bb.build] at Ox9817f2c&gt;]" value="data.expand(flags[name], d)">
                <AssName fromlineno="360" tolineno="360" lineno="360" name="deptask"/>
                <CallFunc fromlineno="360" tolineno="360" lineno="360" func="Getattr(expand)">
                  <Getattr fromlineno="360" tolineno="360" lineno="360" attrname="expand" expr="data">
                    <Name fromlineno="360" tolineno="360" lineno="360" name="data"/>
                  </Getattr>
                  <Subscript fromlineno="360" tolineno="360" lineno="360">
                    <Name fromlineno="360" tolineno="360" lineno="360" name="flags"/>
                    <Index fromlineno="360" tolineno="360" lineno="None">
                      <Name fromlineno="360" tolineno="360" lineno="360" name="name"/>
                    </Index>
                  </Subscript>
                  <Name fromlineno="360" tolineno="360" lineno="360" name="d"/>
                </CallFunc>
              </Assign>
              <Assign fromlineno="361" tolineno="361" lineno="361" targets="[&lt;Subscript() l.361 [bb.build] at Ox981a0ec&gt;]" value="deptask">
                <Subscript fromlineno="361" tolineno="361" lineno="361">
                  <Subscript fromlineno="361" tolineno="361" lineno="361">
                    <Name fromlineno="361" tolineno="361" lineno="361" name="task_deps"/>
                    <Index fromlineno="361" tolineno="361" lineno="None">
                      <Name fromlineno="361" tolineno="361" lineno="361" name="name"/>
                    </Index>
                  </Subscript>
                  <Index fromlineno="361" tolineno="361" lineno="None">
                    <Name fromlineno="361" tolineno="361" lineno="361" name="task"/>
                  </Index>
                </Subscript>
                <Name fromlineno="361" tolineno="361" lineno="361" name="deptask"/>
              </Assign>
            </If>
          </Function>
          <Discard fromlineno="362" tolineno="362" lineno="362">
            <CallFunc fromlineno="362" tolineno="362" lineno="362" func="Name(getTask)">
              <Name fromlineno="362" tolineno="362" lineno="362" name="getTask"/>
              <Const fromlineno="362" tolineno="362" lineno="362" type="str">'depends'</Const>
            </CallFunc>
          </Discard>
          <Discard fromlineno="363" tolineno="363" lineno="363">
            <CallFunc fromlineno="363" tolineno="363" lineno="363" func="Name(getTask)">
              <Name fromlineno="363" tolineno="363" lineno="363" name="getTask"/>
              <Const fromlineno="363" tolineno="363" lineno="363" type="str">'deptask'</Const>
            </CallFunc>
          </Discard>
          <Discard fromlineno="364" tolineno="364" lineno="364">
            <CallFunc fromlineno="364" tolineno="364" lineno="364" func="Name(getTask)">
              <Name fromlineno="364" tolineno="364" lineno="364" name="getTask"/>
              <Const fromlineno="364" tolineno="364" lineno="364" type="str">'rdeptask'</Const>
            </CallFunc>
          </Discard>
          <Discard fromlineno="365" tolineno="365" lineno="365">
            <CallFunc fromlineno="365" tolineno="365" lineno="365" func="Name(getTask)">
              <Name fromlineno="365" tolineno="365" lineno="365" name="getTask"/>
              <Const fromlineno="365" tolineno="365" lineno="365" type="str">'recrdeptask'</Const>
            </CallFunc>
          </Discard>
          <Discard fromlineno="366" tolineno="366" lineno="366">
            <CallFunc fromlineno="366" tolineno="366" lineno="366" func="Name(getTask)">
              <Name fromlineno="366" tolineno="366" lineno="366" name="getTask"/>
              <Const fromlineno="366" tolineno="366" lineno="366" type="str">'nostamp'</Const>
            </CallFunc>
          </Discard>
          <Assign fromlineno="367" tolineno="367" lineno="367" targets="[&lt;Subscript() l.367 [bb.build] at Ox981a52c&gt;]" value="[]">
            <Subscript fromlineno="367" tolineno="367" lineno="367">
              <Subscript fromlineno="367" tolineno="367" lineno="367">
                <Name fromlineno="367" tolineno="367" lineno="367" name="task_deps"/>
                <Index fromlineno="367" tolineno="367" lineno="None">
                  <Const fromlineno="367" tolineno="367" lineno="367" type="str">'parents'</Const>
                </Index>
              </Subscript>
              <Index fromlineno="367" tolineno="367" lineno="None">
                <Name fromlineno="367" tolineno="367" lineno="367" name="task"/>
              </Index>
            </Subscript>
            <List fromlineno="367" tolineno="367" lineno="367"/>
          </Assign>
          <For fromlineno="368" tolineno="370" lineno="368">
            <AssName fromlineno="368" tolineno="368" lineno="368" name="dep"/>
            <Subscript fromlineno="368" tolineno="368" lineno="368">
              <Name fromlineno="368" tolineno="368" lineno="368" name="flags"/>
              <Index fromlineno="368" tolineno="368" lineno="None">
                <Const fromlineno="368" tolineno="368" lineno="368" type="str">'deps'</Const>
              </Index>
            </Subscript>
            <Assign fromlineno="369" tolineno="369" lineno="369" targets="[&lt;AssName(dep) l.369 [bb.build] at Ox981a7ac&gt;]" value="data.expand(dep, d)">
              <AssName fromlineno="369" tolineno="369" lineno="369" name="dep"/>
              <CallFunc fromlineno="369" tolineno="369" lineno="369" func="Getattr(expand)">
                <Getattr fromlineno="369" tolineno="369" lineno="369" attrname="expand" expr="data">
                  <Name fromlineno="369" tolineno="369" lineno="369" name="data"/>
                </Getattr>
                <Name fromlineno="369" tolineno="369" lineno="369" name="dep"/>
                <Name fromlineno="369" tolineno="369" lineno="369" name="d"/>
              </CallFunc>
            </Assign>
            <Discard fromlineno="370" tolineno="370" lineno="370">
              <CallFunc fromlineno="370" tolineno="370" lineno="370" func="Getattr(append)">
                <Getattr fromlineno="370" tolineno="370" lineno="370" attrname="append" expr="task_deps['parents'][task]">
                  <Subscript fromlineno="370" tolineno="370" lineno="370">
                    <Subscript fromlineno="370" tolineno="370" lineno="370">
                      <Name fromlineno="370" tolineno="370" lineno="370" name="task_deps"/>
                      <Index fromlineno="370" tolineno="370" lineno="None">
                        <Const fromlineno="370" tolineno="370" lineno="370" type="str">'parents'</Const>
                      </Index>
                    </Subscript>
                    <Index fromlineno="370" tolineno="370" lineno="None">
                      <Name fromlineno="370" tolineno="370" lineno="370" name="task"/>
                    </Index>
                  </Subscript>
                </Getattr>
                <Name fromlineno="370" tolineno="370" lineno="370" name="dep"/>
              </CallFunc>
            </Discard>
          </For>
        </For>
        <Discard fromlineno="373" tolineno="373" lineno="373">
          <CallFunc fromlineno="373" tolineno="373" lineno="373" func="Getattr(setVar)">
            <Getattr fromlineno="373" tolineno="373" lineno="373" attrname="setVar" expr="data">
              <Name fromlineno="373" tolineno="373" lineno="373" name="data"/>
            </Getattr>
            <Const fromlineno="373" tolineno="373" lineno="373" type="str">'_task_deps'</Const>
            <Name fromlineno="373" tolineno="373" lineno="373" name="task_deps"/>
            <Name fromlineno="373" tolineno="373" lineno="373" name="d"/>
          </CallFunc>
        </Discard>
      </Function>
      <Function fromlineno="375" tolineno="380" lineno="375">
        <Arguments fromlineno="375" tolineno="375" lineno="None" format_args="task, kill, d">
          <AssName fromlineno="375" tolineno="375" lineno="375" name="task"/>
          <AssName fromlineno="375" tolineno="375" lineno="375" name="kill"/>
          <AssName fromlineno="375" tolineno="375" lineno="375" name="d"/>
        </Arguments>
        <Discard fromlineno="380" tolineno="380" lineno="380">
          <CallFunc fromlineno="380" tolineno="380" lineno="380" func="Getattr(delVarFlag)">
            <Getattr fromlineno="380" tolineno="380" lineno="380" attrname="delVarFlag" expr="data">
              <Name fromlineno="380" tolineno="380" lineno="380" name="data"/>
            </Getattr>
            <Name fromlineno="380" tolineno="380" lineno="380" name="task"/>
            <Const fromlineno="380" tolineno="380" lineno="380" type="str">'task'</Const>
            <Name fromlineno="380" tolineno="380" lineno="380" name="d"/>
          </CallFunc>
        </Discard>
      </Function>
    </Module>
    <Module fromlineno="0" tolineno="144" lineno="0" name="bb.manifest">
      <Import fromlineno="19" tolineno="19" lineno="19">
        <ImportName name="os"/>
        <ImportName name="sys"/>
      </Import>
      <Import fromlineno="20" tolineno="20" lineno="20">
        <ImportName name="bb"/>
        <ImportName name="bb.data"/>
      </Import>
      <Function fromlineno="22" tolineno="42" lineno="22">
        <Arguments fromlineno="22" tolineno="22" lineno="None" format_args="line">
          <AssName fromlineno="22" tolineno="22" lineno="22" name="line"/>
        </Arguments>
        <Assign fromlineno="23" tolineno="23" lineno="23" targets="[&lt;AssName(fields) l.23 [bb.manifest] at Ox922c46c&gt;]" value="{}">
          <AssName fromlineno="23" tolineno="23" lineno="23" name="fields"/>
          <Dict fromlineno="23" tolineno="23" lineno="23"/>
        </Assign>
        <Assign fromlineno="24" tolineno="24" lineno="24" targets="[&lt;AssName(fieldmap) l.24 [bb.manifest] at Ox922c9cc&gt;]" value="('pkg', 'src', 'dest', 'type', 'mode', 'uid', 'gid', 'major', 'minor', 'start', 'inc', 'count')">
          <AssName fromlineno="24" tolineno="24" lineno="24" name="fieldmap"/>
          <Tuple fromlineno="24" tolineno="24" lineno="24">
            <Const fromlineno="24" tolineno="24" lineno="24" type="str">'pkg'</Const>
            <Const fromlineno="24" tolineno="24" lineno="24" type="str">'src'</Const>
            <Const fromlineno="24" tolineno="24" lineno="24" type="str">'dest'</Const>
            <Const fromlineno="24" tolineno="24" lineno="24" type="str">'type'</Const>
            <Const fromlineno="24" tolineno="24" lineno="24" type="str">'mode'</Const>
            <Const fromlineno="24" tolineno="24" lineno="24" type="str">'uid'</Const>
            <Const fromlineno="24" tolineno="24" lineno="24" type="str">'gid'</Const>
            <Const fromlineno="24" tolineno="24" lineno="24" type="str">'major'</Const>
            <Const fromlineno="24" tolineno="24" lineno="24" type="str">'minor'</Const>
            <Const fromlineno="24" tolineno="24" lineno="24" type="str">'start'</Const>
            <Const fromlineno="24" tolineno="24" lineno="24" type="str">'inc'</Const>
            <Const fromlineno="24" tolineno="24" lineno="24" type="str">'count'</Const>
          </Tuple>
        </Assign>
        <For fromlineno="25" tolineno="26" lineno="25">
          <AssName fromlineno="25" tolineno="25" lineno="25" name="f"/>
          <CallFunc fromlineno="25" tolineno="25" lineno="25" func="Name(xrange)">
            <Name fromlineno="25" tolineno="25" lineno="25" name="xrange"/>
            <CallFunc fromlineno="25" tolineno="25" lineno="25" func="Name(len)">
              <Name fromlineno="25" tolineno="25" lineno="25" name="len"/>
              <Name fromlineno="25" tolineno="25" lineno="25" name="fieldmap"/>
            </CallFunc>
          </CallFunc>
          <Assign fromlineno="26" tolineno="26" lineno="26" targets="[&lt;Subscript() l.26 [bb.manifest] at Ox922c92c&gt;]" value="None">
            <Subscript fromlineno="26" tolineno="26" lineno="26">
              <Name fromlineno="26" tolineno="26" lineno="26" name="fields"/>
              <Index fromlineno="26" tolineno="26" lineno="None">
                <Subscript fromlineno="26" tolineno="26" lineno="26">
                  <Name fromlineno="26" tolineno="26" lineno="26" name="fieldmap"/>
                  <Index fromlineno="26" tolineno="26" lineno="None">
                    <Name fromlineno="26" tolineno="26" lineno="26" name="f"/>
                  </Index>
                </Subscript>
              </Index>
            </Subscript>
            <Const fromlineno="26" tolineno="26" lineno="26" type="NoneType">None</Const>
          </Assign>
        </For>
        <If fromlineno="28" tolineno="29" lineno="28">
          <UnaryOp fromlineno="28" tolineno="28" lineno="28">
            <Name fromlineno="28" tolineno="28" lineno="28" name="line"/>
          </UnaryOp>
          <Return fromlineno="29" tolineno="29" lineno="29">
            <Const fromlineno="29" tolineno="29" lineno="29" type="NoneType">None</Const>
          </Return>
        </If>
        <Assign fromlineno="31" tolineno="31" lineno="31" targets="[&lt;AssName(splitline) l.31 [bb.manifest] at Ox922c60c&gt;]" value="line.split()">
          <AssName fromlineno="31" tolineno="31" lineno="31" name="splitline"/>
          <CallFunc fromlineno="31" tolineno="31" lineno="31" func="Getattr(split)">
            <Getattr fromlineno="31" tolineno="31" lineno="31" attrname="split" expr="line">
              <Name fromlineno="31" tolineno="31" lineno="31" name="line"/>
            </Getattr>
          </CallFunc>
        </Assign>
        <If fromlineno="32" tolineno="33" lineno="32">
          <UnaryOp fromlineno="32" tolineno="32" lineno="32">
            <CallFunc fromlineno="32" tolineno="32" lineno="32" func="Name(len)">
              <Name fromlineno="32" tolineno="32" lineno="32" name="len"/>
              <Name fromlineno="32" tolineno="32" lineno="32" name="splitline"/>
            </CallFunc>
          </UnaryOp>
          <Return fromlineno="33" tolineno="33" lineno="33">
            <Const fromlineno="33" tolineno="33" lineno="33" type="NoneType">None</Const>
          </Return>
        </If>
        <TryExcept fromlineno="35" tolineno="41" lineno="35">
          <For fromlineno="36" tolineno="39" lineno="36">
            <AssName fromlineno="36" tolineno="36" lineno="36" name="f"/>
            <CallFunc fromlineno="36" tolineno="36" lineno="36" func="Name(xrange)">
              <Name fromlineno="36" tolineno="36" lineno="36" name="xrange"/>
              <CallFunc fromlineno="36" tolineno="36" lineno="36" func="Name(len)">
                <Name fromlineno="36" tolineno="36" lineno="36" name="len"/>
                <Name fromlineno="36" tolineno="36" lineno="36" name="fieldmap"/>
              </CallFunc>
            </CallFunc>
            <If fromlineno="37" tolineno="38" lineno="37">
              <Compare fromlineno="37" tolineno="37" lineno="37" op="('==', &lt;Const(str) l.37 [bb.manifest] at Ox92e168c&gt;)">
                <Subscript fromlineno="37" tolineno="37" lineno="37">
                  <Name fromlineno="37" tolineno="37" lineno="37" name="splitline"/>
                  <Index fromlineno="37" tolineno="37" lineno="None">
                    <Name fromlineno="37" tolineno="37" lineno="37" name="f"/>
                  </Index>
                </Subscript>
                <Const fromlineno="37" tolineno="37" lineno="37" type="str">'-'</Const>
              </Compare>
              <Continue fromlineno="38" tolineno="38" lineno="38"/>
            </If>
            <Assign fromlineno="39" tolineno="39" lineno="39" targets="[&lt;Subscript() l.39 [bb.manifest] at Ox92e170c&gt;]" value="splitline[f]">
              <Subscript fromlineno="39" tolineno="39" lineno="39">
                <Name fromlineno="39" tolineno="39" lineno="39" name="fields"/>
                <Index fromlineno="39" tolineno="39" lineno="None">
                  <Subscript fromlineno="39" tolineno="39" lineno="39">
                    <Name fromlineno="39" tolineno="39" lineno="39" name="fieldmap"/>
                    <Index fromlineno="39" tolineno="39" lineno="None">
                      <Name fromlineno="39" tolineno="39" lineno="39" name="f"/>
                    </Index>
                  </Subscript>
                </Index>
              </Subscript>
              <Subscript fromlineno="39" tolineno="39" lineno="39">
                <Name fromlineno="39" tolineno="39" lineno="39" name="splitline"/>
                <Index fromlineno="39" tolineno="39" lineno="None">
                  <Name fromlineno="39" tolineno="39" lineno="39" name="f"/>
                </Index>
              </Subscript>
            </Assign>
          </For>
          <ExceptHandler fromlineno="40" tolineno="41" lineno="40">
            <Name fromlineno="40" tolineno="40" lineno="40" name="IndexError"/>
            <Pass fromlineno="41" tolineno="41" lineno="41"/>
          </ExceptHandler>
        </TryExcept>
        <Return fromlineno="42" tolineno="42" lineno="42">
          <Name fromlineno="42" tolineno="42" lineno="42" name="fields"/>
        </Return>
      </Function>
      <Function fromlineno="44" tolineno="56" lineno="44">
        <Arguments fromlineno="44" tolineno="44" lineno="None" format_args="mfile, d">
          <AssName fromlineno="44" tolineno="44" lineno="44" name="mfile"/>
          <AssName fromlineno="44" tolineno="44" lineno="44" name="d"/>
        </Arguments>
        <Assign fromlineno="45" tolineno="45" lineno="45" targets="[&lt;AssName(manifest) l.45 [bb.manifest] at Ox92e1e8c&gt;]" value="[]">
          <AssName fromlineno="45" tolineno="45" lineno="45" name="manifest"/>
          <List fromlineno="45" tolineno="45" lineno="45"/>
        </Assign>
        <While fromlineno="46" tolineno="55" lineno="46">
          <Const fromlineno="46" tolineno="46" lineno="46" type="int">1</Const>
          <Assign fromlineno="47" tolineno="47" lineno="47" targets="[&lt;AssName(line) l.47 [bb.manifest] at Ox92e1f8c&gt;]" value="mfile.readline()">
            <AssName fromlineno="47" tolineno="47" lineno="47" name="line"/>
            <CallFunc fromlineno="47" tolineno="47" lineno="47" func="Getattr(readline)">
              <Getattr fromlineno="47" tolineno="47" lineno="47" attrname="readline" expr="mfile">
                <Name fromlineno="47" tolineno="47" lineno="47" name="mfile"/>
              </Getattr>
            </CallFunc>
          </Assign>
          <If fromlineno="48" tolineno="49" lineno="48">
            <UnaryOp fromlineno="48" tolineno="48" lineno="48">
              <Name fromlineno="48" tolineno="48" lineno="48" name="line"/>
            </UnaryOp>
            <Break fromlineno="49" tolineno="49" lineno="49"/>
          </If>
          <If fromlineno="50" tolineno="51" lineno="50">
            <CallFunc fromlineno="50" tolineno="50" lineno="50" func="Getattr(startswith)">
              <Getattr fromlineno="50" tolineno="50" lineno="50" attrname="startswith" expr="line">
                <Name fromlineno="50" tolineno="50" lineno="50" name="line"/>
              </Getattr>
              <Const fromlineno="50" tolineno="50" lineno="50" type="str">'#'</Const>
            </CallFunc>
            <Continue fromlineno="51" tolineno="51" lineno="51"/>
          </If>
          <Assign fromlineno="52" tolineno="52" lineno="52" targets="[&lt;AssName(fields) l.52 [bb.manifest] at Ox92e1b8c&gt;]" value="getfields(line)">
            <AssName fromlineno="52" tolineno="52" lineno="52" name="fields"/>
            <CallFunc fromlineno="52" tolineno="52" lineno="52" func="Name(getfields)">
              <Name fromlineno="52" tolineno="52" lineno="52" name="getfields"/>
              <Name fromlineno="52" tolineno="52" lineno="52" name="line"/>
            </CallFunc>
          </Assign>
          <If fromlineno="53" tolineno="54" lineno="53">
            <UnaryOp fromlineno="53" tolineno="53" lineno="53">
              <Name fromlineno="53" tolineno="53" lineno="53" name="fields"/>
            </UnaryOp>
            <Continue fromlineno="54" tolineno="54" lineno="54"/>
          </If>
          <Discard fromlineno="55" tolineno="55" lineno="55">
            <CallFunc fromlineno="55" tolineno="55" lineno="55" func="Getattr(append)">
              <Getattr fromlineno="55" tolineno="55" lineno="55" attrname="append" expr="manifest">
                <Name fromlineno="55" tolineno="55" lineno="55" name="manifest"/>
              </Getattr>
              <Name fromlineno="55" tolineno="55" lineno="55" name="fields"/>
            </CallFunc>
          </Discard>
        </While>
        <Return fromlineno="56" tolineno="56" lineno="56">
          <Name fromlineno="56" tolineno="56" lineno="56" name="manifest"/>
        </Return>
      </Function>
      <Function fromlineno="58" tolineno="67" lineno="58">
        <Arguments fromlineno="58" tolineno="58" lineno="None" format_args="func, manifest, d">
          <AssName fromlineno="58" tolineno="58" lineno="58" name="func"/>
          <AssName fromlineno="58" tolineno="58" lineno="58" name="manifest"/>
          <AssName fromlineno="58" tolineno="58" lineno="58" name="d"/>
        </Arguments>
        <Assign fromlineno="60" tolineno="60" lineno="60" targets="[&lt;AssName(str) l.60 [bb.manifest] at Ox92e9fac&gt;]" value="''">
          <AssName fromlineno="60" tolineno="60" lineno="60" name="str"/>
          <Const fromlineno="60" tolineno="60" lineno="60" type="str">''</Const>
        </Assign>
        <For fromlineno="61" tolineno="65" lineno="61">
          <AssName fromlineno="61" tolineno="61" lineno="61" name="line"/>
          <Name fromlineno="61" tolineno="61" lineno="61" name="manifest"/>
          <Assign fromlineno="62" tolineno="62" lineno="62" targets="[&lt;AssName(emittedline) l.62 [bb.manifest] at Ox92e912c&gt;]" value="emit_line(func, line, d)">
            <AssName fromlineno="62" tolineno="62" lineno="62" name="emittedline"/>
            <CallFunc fromlineno="62" tolineno="62" lineno="62" func="Name(emit_line)">
              <Name fromlineno="62" tolineno="62" lineno="62" name="emit_line"/>
              <Name fromlineno="62" tolineno="62" lineno="62" name="func"/>
              <Name fromlineno="62" tolineno="62" lineno="62" name="line"/>
              <Name fromlineno="62" tolineno="62" lineno="62" name="d"/>
            </CallFunc>
          </Assign>
          <If fromlineno="63" tolineno="64" lineno="63">
            <UnaryOp fromlineno="63" tolineno="63" lineno="63">
              <Name fromlineno="63" tolineno="63" lineno="63" name="emittedline"/>
            </UnaryOp>
            <Continue fromlineno="64" tolineno="64" lineno="64"/>
          </If>
          <AugAssign fromlineno="65" tolineno="65" lineno="65" target="str" value="(emittedline) + ('\n')">
            <AssName fromlineno="65" tolineno="65" lineno="65" name="str"/>
            <BinOp fromlineno="65" tolineno="65" lineno="65" op="+" left="emittedline" right="'\n'">
              <Name fromlineno="65" tolineno="65" lineno="65" name="emittedline"/>
              <Const fromlineno="65" tolineno="65" lineno="65" type="str">'\n'</Const>
            </BinOp>
          </AugAssign>
        </For>
        <Return fromlineno="67" tolineno="67" lineno="67">
          <Name fromlineno="67" tolineno="67" lineno="67" name="str"/>
        </Return>
      </Function>
      <Function fromlineno="69" tolineno="112" lineno="69">
        <Arguments fromlineno="69" tolineno="69" lineno="None" format_args="func, line, d">
          <AssName fromlineno="69" tolineno="69" lineno="69" name="func"/>
          <AssName fromlineno="69" tolineno="69" lineno="69" name="line"/>
          <AssName fromlineno="69" tolineno="69" lineno="69" name="d"/>
        </Arguments>
        <Import fromlineno="70" tolineno="70" lineno="70">
          <ImportName name="copy"/>
        </Import>
        <Assign fromlineno="71" tolineno="71" lineno="71" targets="[&lt;AssName(newline) l.71 [bb.manifest] at Ox92e97ec&gt;]" value="copy.copy(line)">
          <AssName fromlineno="71" tolineno="71" lineno="71" name="newline"/>
          <CallFunc fromlineno="71" tolineno="71" lineno="71" func="Getattr(copy)">
            <Getattr fromlineno="71" tolineno="71" lineno="71" attrname="copy" expr="copy">
              <Name fromlineno="71" tolineno="71" lineno="71" name="copy"/>
            </Getattr>
            <Name fromlineno="71" tolineno="71" lineno="71" name="line"/>
          </CallFunc>
        </Assign>
        <Assign fromlineno="72" tolineno="72" lineno="72" targets="[&lt;AssName(src) l.72 [bb.manifest] at Ox92e940c&gt;]" value="bb.data.expand(newline['src'], d)">
          <AssName fromlineno="72" tolineno="72" lineno="72" name="src"/>
          <CallFunc fromlineno="72" tolineno="72" lineno="72" func="Getattr(expand)">
            <Getattr fromlineno="72" tolineno="72" lineno="72" attrname="expand" expr="bb.data">
              <Getattr fromlineno="72" tolineno="72" lineno="72" attrname="data" expr="bb">
                <Name fromlineno="72" tolineno="72" lineno="72" name="bb"/>
              </Getattr>
            </Getattr>
            <Subscript fromlineno="72" tolineno="72" lineno="72">
              <Name fromlineno="72" tolineno="72" lineno="72" name="newline"/>
              <Index fromlineno="72" tolineno="72" lineno="None">
                <Const fromlineno="72" tolineno="72" lineno="72" type="str">'src'</Const>
              </Index>
            </Subscript>
            <Name fromlineno="72" tolineno="72" lineno="72" name="d"/>
          </CallFunc>
        </Assign>
        <If fromlineno="74" tolineno="76" lineno="74">
          <Name fromlineno="74" tolineno="74" lineno="74" name="src"/>
          <If fromlineno="75" tolineno="76" lineno="75">
            <UnaryOp fromlineno="75" tolineno="75" lineno="75">
              <CallFunc fromlineno="75" tolineno="75" lineno="75" func="Getattr(isabs)">
                <Getattr fromlineno="75" tolineno="75" lineno="75" attrname="isabs" expr="os.path">
                  <Getattr fromlineno="75" tolineno="75" lineno="75" attrname="path" expr="os">
                    <Name fromlineno="75" tolineno="75" lineno="75" name="os"/>
                  </Getattr>
                </Getattr>
                <Name fromlineno="75" tolineno="75" lineno="75" name="src"/>
              </CallFunc>
            </UnaryOp>
            <Assign fromlineno="76" tolineno="76" lineno="76" targets="[&lt;AssName(src) l.76 [bb.manifest] at Ox92e9eac&gt;]" value="('${WORKDIR}/') + (src)">
              <AssName fromlineno="76" tolineno="76" lineno="76" name="src"/>
              <BinOp fromlineno="76" tolineno="76" lineno="76" op="+" left="'${WORKDIR}/'" right="src">
                <Const fromlineno="76" tolineno="76" lineno="76" type="str">'${WORKDIR}/'</Const>
                <Name fromlineno="76" tolineno="76" lineno="76" name="src"/>
              </BinOp>
            </Assign>
          </If>
        </If>
        <Assign fromlineno="78" tolineno="78" lineno="78" targets="[&lt;AssName(dest) l.78 [bb.manifest] at Ox92e9ecc&gt;]" value="newline['dest']">
          <AssName fromlineno="78" tolineno="78" lineno="78" name="dest"/>
          <Subscript fromlineno="78" tolineno="78" lineno="78">
            <Name fromlineno="78" tolineno="78" lineno="78" name="newline"/>
            <Index fromlineno="78" tolineno="78" lineno="None">
              <Const fromlineno="78" tolineno="78" lineno="78" type="str">'dest'</Const>
            </Index>
          </Subscript>
        </Assign>
        <If fromlineno="79" tolineno="80" lineno="79">
          <UnaryOp fromlineno="79" tolineno="79" lineno="79">
            <Name fromlineno="79" tolineno="79" lineno="79" name="dest"/>
          </UnaryOp>
          <Return fromlineno="80" tolineno="80" lineno="80"/>
        </If>
        <If fromlineno="82" tolineno="83" lineno="82">
          <CallFunc fromlineno="82" tolineno="82" lineno="82" func="Getattr(startswith)">
            <Getattr fromlineno="82" tolineno="82" lineno="82" attrname="startswith" expr="dest">
              <Name fromlineno="82" tolineno="82" lineno="82" name="dest"/>
            </Getattr>
            <Const fromlineno="82" tolineno="82" lineno="82" type="str">'/'</Const>
          </CallFunc>
          <Assign fromlineno="83" tolineno="83" lineno="83" targets="[&lt;AssName(dest) l.83 [bb.manifest] at Ox92edd6c&gt;]" value="dest[1:]">
            <AssName fromlineno="83" tolineno="83" lineno="83" name="dest"/>
            <Subscript fromlineno="83" tolineno="83" lineno="83">
              <Name fromlineno="83" tolineno="83" lineno="83" name="dest"/>
              <Slice fromlineno="83" tolineno="83" lineno="None">
                <Const fromlineno="83" tolineno="83" lineno="83" type="int">1</Const>
              </Slice>
            </Subscript>
          </Assign>
        </If>
        <If fromlineno="85" tolineno="108" lineno="85">
          <Compare fromlineno="85" tolineno="85" lineno="85" op="('is', &lt;Const(str) l.85 [bb.manifest] at Ox92ed4cc&gt;)">
            <Name fromlineno="85" tolineno="85" lineno="85" name="func"/>
            <Const fromlineno="85" tolineno="85" lineno="85" type="str">'do_install'</Const>
          </Compare>
          <Assign fromlineno="86" tolineno="86" lineno="86" targets="[&lt;AssName(dest) l.86 [bb.manifest] at Ox92ed74c&gt;]" value="('${D}/') + (dest)">
            <AssName fromlineno="86" tolineno="86" lineno="86" name="dest"/>
            <BinOp fromlineno="86" tolineno="86" lineno="86" op="+" left="'${D}/'" right="dest">
              <Const fromlineno="86" tolineno="86" lineno="86" type="str">'${D}/'</Const>
              <Name fromlineno="86" tolineno="86" lineno="86" name="dest"/>
            </BinOp>
          </Assign>
          <If fromlineno="88" tolineno="108" lineno="88">
            <Compare fromlineno="88" tolineno="88" lineno="88" op="('is', &lt;Const(str) l.88 [bb.manifest] at Ox92ed5cc&gt;)">
              <Name fromlineno="88" tolineno="88" lineno="88" name="func"/>
              <Const fromlineno="88" tolineno="88" lineno="88" type="str">'do_populate'</Const>
            </Compare>
            <Assign fromlineno="89" tolineno="89" lineno="89" targets="[&lt;AssName(dest) l.89 [bb.manifest] at Ox92ed48c&gt;]" value="((('${WORKDIR}/install/') + (newline['pkg'])) + ('/')) + (dest)">
              <AssName fromlineno="89" tolineno="89" lineno="89" name="dest"/>
              <BinOp fromlineno="89" tolineno="89" lineno="89" op="+" left="(('${WORKDIR}/install/') + (newline['pkg'])) + ('/')" right="dest">
                <BinOp fromlineno="89" tolineno="89" lineno="89" op="+" left="('${WORKDIR}/install/') + (newline['pkg'])" right="'/'">
                  <BinOp fromlineno="89" tolineno="89" lineno="89" op="+" left="'${WORKDIR}/install/'" right="newline['pkg']">
                    <Const fromlineno="89" tolineno="89" lineno="89" type="str">'${WORKDIR}/install/'</Const>
                    <Subscript fromlineno="89" tolineno="89" lineno="89">
                      <Name fromlineno="89" tolineno="89" lineno="89" name="newline"/>
                      <Index fromlineno="89" tolineno="89" lineno="None">
                        <Const fromlineno="89" tolineno="89" lineno="89" type="str">'pkg'</Const>
                      </Index>
                    </Subscript>
                  </BinOp>
                  <Const fromlineno="89" tolineno="89" lineno="89" type="str">'/'</Const>
                </BinOp>
                <Name fromlineno="89" tolineno="89" lineno="89" name="dest"/>
              </BinOp>
            </Assign>
            <If fromlineno="91" tolineno="108" lineno="91">
              <Compare fromlineno="91" tolineno="91" lineno="91" op="('is', &lt;Const(str) l.91 [bb.manifest] at Ox92ed9ec&gt;)">
                <Name fromlineno="91" tolineno="91" lineno="91" name="func"/>
                <Const fromlineno="91" tolineno="91" lineno="91" type="str">'do_stage'</Const>
              </Compare>
              <Assign fromlineno="92" tolineno="92" lineno="92" targets="[&lt;AssName(varmap) l.92 [bb.manifest] at Ox92ed9cc&gt;]" value="{}">
                <AssName fromlineno="92" tolineno="92" lineno="92" name="varmap"/>
                <Dict fromlineno="92" tolineno="92" lineno="92"/>
              </Assign>
              <Assign fromlineno="93" tolineno="93" lineno="93" targets="[&lt;Subscript() l.93 [bb.manifest] at Ox92edd4c&gt;]" value="'${STAGING_DIR}/${HOST_SYS}/bin'">
                <Subscript fromlineno="93" tolineno="93" lineno="93">
                  <Name fromlineno="93" tolineno="93" lineno="93" name="varmap"/>
                  <Index fromlineno="93" tolineno="93" lineno="None">
                    <Const fromlineno="93" tolineno="93" lineno="93" type="str">'${bindir}'</Const>
                  </Index>
                </Subscript>
                <Const fromlineno="93" tolineno="93" lineno="93" type="str">'${STAGING_DIR}/${HOST_SYS}/bin'</Const>
              </Assign>
              <Assign fromlineno="94" tolineno="94" lineno="94" targets="[&lt;Subscript() l.94 [bb.manifest] at Ox92f09cc&gt;]" value="'${STAGING_DIR}/${HOST_SYS}/lib'">
                <Subscript fromlineno="94" tolineno="94" lineno="94">
                  <Name fromlineno="94" tolineno="94" lineno="94" name="varmap"/>
                  <Index fromlineno="94" tolineno="94" lineno="None">
                    <Const fromlineno="94" tolineno="94" lineno="94" type="str">'${libdir}'</Const>
                  </Index>
                </Subscript>
                <Const fromlineno="94" tolineno="94" lineno="94" type="str">'${STAGING_DIR}/${HOST_SYS}/lib'</Const>
              </Assign>
              <Assign fromlineno="95" tolineno="95" lineno="95" targets="[&lt;Subscript() l.95 [bb.manifest] at Ox92f0aac&gt;]" value="'${STAGING_DIR}/${HOST_SYS}/include'">
                <Subscript fromlineno="95" tolineno="95" lineno="95">
                  <Name fromlineno="95" tolineno="95" lineno="95" name="varmap"/>
                  <Index fromlineno="95" tolineno="95" lineno="None">
                    <Const fromlineno="95" tolineno="95" lineno="95" type="str">'${includedir}'</Const>
                  </Index>
                </Subscript>
                <Const fromlineno="95" tolineno="95" lineno="95" type="str">'${STAGING_DIR}/${HOST_SYS}/include'</Const>
              </Assign>
              <Assign fromlineno="96" tolineno="96" lineno="96" targets="[&lt;Subscript() l.96 [bb.manifest] at Ox92f02ac&gt;]" value="'${STAGING_DATADIR}'">
                <Subscript fromlineno="96" tolineno="96" lineno="96">
                  <Name fromlineno="96" tolineno="96" lineno="96" name="varmap"/>
                  <Index fromlineno="96" tolineno="96" lineno="None">
                    <Const fromlineno="96" tolineno="96" lineno="96" type="str">'${datadir}'</Const>
                  </Index>
                </Subscript>
                <Const fromlineno="96" tolineno="96" lineno="96" type="str">'${STAGING_DATADIR}'</Const>
              </Assign>
              <Assign fromlineno="98" tolineno="98" lineno="98" targets="[&lt;AssName(matched) l.98 [bb.manifest] at Ox92f06ec&gt;]" value="0">
                <AssName fromlineno="98" tolineno="98" lineno="98" name="matched"/>
                <Const fromlineno="98" tolineno="98" lineno="98" type="int">0</Const>
              </Assign>
              <For fromlineno="99" tolineno="102" lineno="99">
                <AssName fromlineno="99" tolineno="99" lineno="99" name="key"/>
                <CallFunc fromlineno="99" tolineno="99" lineno="99" func="Getattr(keys)">
                  <Getattr fromlineno="99" tolineno="99" lineno="99" attrname="keys" expr="varmap">
                    <Name fromlineno="99" tolineno="99" lineno="99" name="varmap"/>
                  </Getattr>
                </CallFunc>
                <If fromlineno="100" tolineno="102" lineno="100">
                  <CallFunc fromlineno="100" tolineno="100" lineno="100" func="Getattr(startswith)">
                    <Getattr fromlineno="100" tolineno="100" lineno="100" attrname="startswith" expr="dest">
                      <Name fromlineno="100" tolineno="100" lineno="100" name="dest"/>
                    </Getattr>
                    <Name fromlineno="100" tolineno="100" lineno="100" name="key"/>
                  </CallFunc>
                  <Assign fromlineno="101" tolineno="101" lineno="101" targets="[&lt;AssName(dest) l.101 [bb.manifest] at Ox92f0f2c&gt;]" value="((varmap[key]) + ('/')) + (dest[len(key):])">
                    <AssName fromlineno="101" tolineno="101" lineno="101" name="dest"/>
                    <BinOp fromlineno="101" tolineno="101" lineno="101" op="+" left="(varmap[key]) + ('/')" right="dest[len(key):]">
                      <BinOp fromlineno="101" tolineno="101" lineno="101" op="+" left="varmap[key]" right="'/'">
                        <Subscript fromlineno="101" tolineno="101" lineno="101">
                          <Name fromlineno="101" tolineno="101" lineno="101" name="varmap"/>
                          <Index fromlineno="101" tolineno="101" lineno="None">
                            <Name fromlineno="101" tolineno="101" lineno="101" name="key"/>
                          </Index>
                        </Subscript>
                        <Const fromlineno="101" tolineno="101" lineno="101" type="str">'/'</Const>
                      </BinOp>
                      <Subscript fromlineno="101" tolineno="101" lineno="101">
                        <Name fromlineno="101" tolineno="101" lineno="101" name="dest"/>
                        <Slice fromlineno="101" tolineno="101" lineno="None">
                          <CallFunc fromlineno="101" tolineno="101" lineno="101" func="Name(len)">
                            <Name fromlineno="101" tolineno="101" lineno="101" name="len"/>
                            <Name fromlineno="101" tolineno="101" lineno="101" name="key"/>
                          </CallFunc>
                        </Slice>
                      </Subscript>
                    </BinOp>
                  </Assign>
                  <Assign fromlineno="102" tolineno="102" lineno="102" targets="[&lt;AssName(matched) l.102 [bb.manifest] at Ox92f026c&gt;]" value="1">
                    <AssName fromlineno="102" tolineno="102" lineno="102" name="matched"/>
                    <Const fromlineno="102" tolineno="102" lineno="102" type="int">1</Const>
                  </Assign>
                </If>
              </For>
              <If fromlineno="103" tolineno="105" lineno="103">
                <UnaryOp fromlineno="103" tolineno="103" lineno="103">
                  <Name fromlineno="103" tolineno="103" lineno="103" name="matched"/>
                </UnaryOp>
                <Assign fromlineno="104" tolineno="104" lineno="104" targets="[&lt;AssName(newline) l.104 [bb.manifest] at Ox92f052c&gt;]" value="None">
                  <AssName fromlineno="104" tolineno="104" lineno="104" name="newline"/>
                  <Const fromlineno="104" tolineno="104" lineno="104" type="NoneType">None</Const>
                </Assign>
                <Return fromlineno="105" tolineno="105" lineno="105"/>
              </If>
              <Assign fromlineno="107" tolineno="107" lineno="107" targets="[&lt;AssName(newline) l.107 [bb.manifest] at Ox92f05cc&gt;]" value="None">
                <AssName fromlineno="107" tolineno="107" lineno="107" name="newline"/>
                <Const fromlineno="107" tolineno="107" lineno="107" type="NoneType">None</Const>
              </Assign>
              <Return fromlineno="108" tolineno="108" lineno="108"/>
            </If>
          </If>
        </If>
        <Assign fromlineno="110" tolineno="110" lineno="110" targets="[&lt;Subscript() l.110 [bb.manifest] at Ox92ed16c&gt;]" value="src">
          <Subscript fromlineno="110" tolineno="110" lineno="110">
            <Name fromlineno="110" tolineno="110" lineno="110" name="newline"/>
            <Index fromlineno="110" tolineno="110" lineno="None">
              <Const fromlineno="110" tolineno="110" lineno="110" type="str">'src'</Const>
            </Index>
          </Subscript>
          <Name fromlineno="110" tolineno="110" lineno="110" name="src"/>
        </Assign>
        <Assign fromlineno="111" tolineno="111" lineno="111" targets="[&lt;Subscript() l.111 [bb.manifest] at Ox92f03ec&gt;]" value="dest">
          <Subscript fromlineno="111" tolineno="111" lineno="111">
            <Name fromlineno="111" tolineno="111" lineno="111" name="newline"/>
            <Index fromlineno="111" tolineno="111" lineno="None">
              <Const fromlineno="111" tolineno="111" lineno="111" type="str">'dest'</Const>
            </Index>
          </Subscript>
          <Name fromlineno="111" tolineno="111" lineno="111" name="dest"/>
        </Assign>
        <Return fromlineno="112" tolineno="112" lineno="112">
          <Name fromlineno="112" tolineno="112" lineno="112" name="newline"/>
        </Return>
      </Function>
      <Function fromlineno="114" tolineno="144" lineno="114">
        <Arguments fromlineno="114" tolineno="114" lineno="None" format_args="func, line, d">
          <AssName fromlineno="114" tolineno="114" lineno="114" name="func"/>
          <AssName fromlineno="114" tolineno="114" lineno="114" name="line"/>
          <AssName fromlineno="114" tolineno="114" lineno="114" name="d"/>
        </Arguments>
        <Import fromlineno="115" tolineno="115" lineno="115">
          <ImportName name="copy"/>
        </Import>
        <Assign fromlineno="116" tolineno="116" lineno="116" targets="[&lt;AssName(newline) l.116 [bb.manifest] at Ox92f0bec&gt;]" value="copy.deepcopy(line)">
          <AssName fromlineno="116" tolineno="116" lineno="116" name="newline"/>
          <CallFunc fromlineno="116" tolineno="116" lineno="116" func="Getattr(deepcopy)">
            <Getattr fromlineno="116" tolineno="116" lineno="116" attrname="deepcopy" expr="copy">
              <Name fromlineno="116" tolineno="116" lineno="116" name="copy"/>
            </Getattr>
            <Name fromlineno="116" tolineno="116" lineno="116" name="line"/>
          </CallFunc>
        </Assign>
        <Assign fromlineno="117" tolineno="117" lineno="117" targets="[&lt;AssName(newline) l.117 [bb.manifest] at Ox92284ac&gt;]" value="mangle(func, newline, d)">
          <AssName fromlineno="117" tolineno="117" lineno="117" name="newline"/>
          <CallFunc fromlineno="117" tolineno="117" lineno="117" func="Name(mangle)">
            <Name fromlineno="117" tolineno="117" lineno="117" name="mangle"/>
            <Name fromlineno="117" tolineno="117" lineno="117" name="func"/>
            <Name fromlineno="117" tolineno="117" lineno="117" name="newline"/>
            <Name fromlineno="117" tolineno="117" lineno="117" name="d"/>
          </CallFunc>
        </Assign>
        <If fromlineno="118" tolineno="119" lineno="118">
          <UnaryOp fromlineno="118" tolineno="118" lineno="118">
            <Name fromlineno="118" tolineno="118" lineno="118" name="newline"/>
          </UnaryOp>
          <Return fromlineno="119" tolineno="119" lineno="119">
            <Const fromlineno="119" tolineno="119" lineno="119" type="NoneType">None</Const>
          </Return>
        </If>
        <Assign fromlineno="121" tolineno="121" lineno="121" targets="[&lt;AssName(str) l.121 [bb.manifest] at Ox92286ec&gt;]" value="''">
          <AssName fromlineno="121" tolineno="121" lineno="121" name="str"/>
          <Const fromlineno="121" tolineno="121" lineno="121" type="str">''</Const>
        </Assign>
        <Assign fromlineno="122" tolineno="122" lineno="122" targets="[&lt;AssName(type) l.122 [bb.manifest] at Ox92283ec&gt;]" value="newline['type']">
          <AssName fromlineno="122" tolineno="122" lineno="122" name="type"/>
          <Subscript fromlineno="122" tolineno="122" lineno="122">
            <Name fromlineno="122" tolineno="122" lineno="122" name="newline"/>
            <Index fromlineno="122" tolineno="122" lineno="None">
              <Const fromlineno="122" tolineno="122" lineno="122" type="str">'type'</Const>
            </Index>
          </Subscript>
        </Assign>
        <Assign fromlineno="123" tolineno="123" lineno="123" targets="[&lt;AssName(mode) l.123 [bb.manifest] at Ox92283cc&gt;]" value="newline['mode']">
          <AssName fromlineno="123" tolineno="123" lineno="123" name="mode"/>
          <Subscript fromlineno="123" tolineno="123" lineno="123">
            <Name fromlineno="123" tolineno="123" lineno="123" name="newline"/>
            <Index fromlineno="123" tolineno="123" lineno="None">
              <Const fromlineno="123" tolineno="123" lineno="123" type="str">'mode'</Const>
            </Index>
          </Subscript>
        </Assign>
        <Assign fromlineno="124" tolineno="124" lineno="124" targets="[&lt;AssName(src) l.124 [bb.manifest] at Ox922814c&gt;]" value="newline['src']">
          <AssName fromlineno="124" tolineno="124" lineno="124" name="src"/>
          <Subscript fromlineno="124" tolineno="124" lineno="124">
            <Name fromlineno="124" tolineno="124" lineno="124" name="newline"/>
            <Index fromlineno="124" tolineno="124" lineno="None">
              <Const fromlineno="124" tolineno="124" lineno="124" type="str">'src'</Const>
            </Index>
          </Subscript>
        </Assign>
        <Assign fromlineno="125" tolineno="125" lineno="125" targets="[&lt;AssName(dest) l.125 [bb.manifest] at Ox922862c&gt;]" value="newline['dest']">
          <AssName fromlineno="125" tolineno="125" lineno="125" name="dest"/>
          <Subscript fromlineno="125" tolineno="125" lineno="125">
            <Name fromlineno="125" tolineno="125" lineno="125" name="newline"/>
            <Index fromlineno="125" tolineno="125" lineno="None">
              <Const fromlineno="125" tolineno="125" lineno="125" type="str">'dest'</Const>
            </Index>
          </Subscript>
        </Assign>
        <If fromlineno="126" tolineno="142" lineno="126">
          <Compare fromlineno="126" tolineno="126" lineno="126" op="('is', &lt;Const(str) l.126 [bb.manifest] at Ox922852c&gt;)">
            <Name fromlineno="126" tolineno="126" lineno="126" name="type"/>
            <Const fromlineno="126" tolineno="126" lineno="126" type="str">'d'</Const>
          </Compare>
          <Assign fromlineno="127" tolineno="127" lineno="127" targets="[&lt;AssName(str) l.127 [bb.manifest] at Ox9228f2c&gt;]" value="'install -d '">
            <AssName fromlineno="127" tolineno="127" lineno="127" name="str"/>
            <Const fromlineno="127" tolineno="127" lineno="127" type="str">'install -d '</Const>
          </Assign>
          <If fromlineno="128" tolineno="129" lineno="128">
            <Name fromlineno="128" tolineno="128" lineno="128" name="mode"/>
            <AugAssign fromlineno="129" tolineno="129" lineno="129" target="str" value="('-m %s ') % (mode)">
              <AssName fromlineno="129" tolineno="129" lineno="129" name="str"/>
              <BinOp fromlineno="129" tolineno="129" lineno="129" op="%" left="'-m %s '" right="mode">
                <Const fromlineno="129" tolineno="129" lineno="129" type="str">'-m %s '</Const>
                <Name fromlineno="129" tolineno="129" lineno="129" name="mode"/>
              </BinOp>
            </AugAssign>
          </If>
          <AugAssign fromlineno="130" tolineno="130" lineno="130" target="str" value="dest">
            <AssName fromlineno="130" tolineno="130" lineno="130" name="str"/>
            <Name fromlineno="130" tolineno="130" lineno="130" name="dest"/>
          </AugAssign>
          <If fromlineno="131" tolineno="142" lineno="131">
            <Compare fromlineno="131" tolineno="131" lineno="131" op="('is', &lt;Const(str) l.131 [bb.manifest] at Ox9228a6c&gt;)">
              <Name fromlineno="131" tolineno="131" lineno="131" name="type"/>
              <Const fromlineno="131" tolineno="131" lineno="131" type="str">'f'</Const>
            </Compare>
            <If fromlineno="132" tolineno="133" lineno="132">
              <UnaryOp fromlineno="132" tolineno="132" lineno="132">
                <Name fromlineno="132" tolineno="132" lineno="132" name="src"/>
              </UnaryOp>
              <Return fromlineno="133" tolineno="133" lineno="133">
                <Const fromlineno="133" tolineno="133" lineno="133" type="NoneType">None</Const>
              </Return>
            </If>
            <If fromlineno="134" tolineno="139" lineno="134">
              <CallFunc fromlineno="134" tolineno="134" lineno="134" func="Getattr(endswith)">
                <Getattr fromlineno="134" tolineno="134" lineno="134" attrname="endswith" expr="dest">
                  <Name fromlineno="134" tolineno="134" lineno="134" name="dest"/>
                </Getattr>
                <Const fromlineno="134" tolineno="134" lineno="134" type="str">'/'</Const>
              </CallFunc>
              <Assign fromlineno="135" tolineno="135" lineno="135" targets="[&lt;AssName(str) l.135 [bb.manifest] at Ox922896c&gt;]" value="'install -d '">
                <AssName fromlineno="135" tolineno="135" lineno="135" name="str"/>
                <Const fromlineno="135" tolineno="135" lineno="135" type="str">'install -d '</Const>
              </Assign>
              <AugAssign fromlineno="136" tolineno="136" lineno="136" target="str" value="(dest) + ('\n')">
                <AssName fromlineno="136" tolineno="136" lineno="136" name="str"/>
                <BinOp fromlineno="136" tolineno="136" lineno="136" op="+" left="dest" right="'\n'">
                  <Name fromlineno="136" tolineno="136" lineno="136" name="dest"/>
                  <Const fromlineno="136" tolineno="136" lineno="136" type="str">'\n'</Const>
                </BinOp>
              </AugAssign>
              <AugAssign fromlineno="137" tolineno="137" lineno="137" target="str" value="'install '">
                <AssName fromlineno="137" tolineno="137" lineno="137" name="str"/>
                <Const fromlineno="137" tolineno="137" lineno="137" type="str">'install '</Const>
              </AugAssign>
              <Assign fromlineno="139" tolineno="139" lineno="139" targets="[&lt;AssName(str) l.139 [bb.manifest] at Ox92f80cc&gt;]" value="'install -D '">
                <AssName fromlineno="139" tolineno="139" lineno="139" name="str"/>
                <Const fromlineno="139" tolineno="139" lineno="139" type="str">'install -D '</Const>
              </Assign>
            </If>
            <If fromlineno="140" tolineno="141" lineno="140">
              <Name fromlineno="140" tolineno="140" lineno="140" name="mode"/>
              <AugAssign fromlineno="141" tolineno="141" lineno="141" target="str" value="('-m %s ') % (mode)">
                <AssName fromlineno="141" tolineno="141" lineno="141" name="str"/>
                <BinOp fromlineno="141" tolineno="141" lineno="141" op="%" left="'-m %s '" right="mode">
                  <Const fromlineno="141" tolineno="141" lineno="141" type="str">'-m %s '</Const>
                  <Name fromlineno="141" tolineno="141" lineno="141" name="mode"/>
                </BinOp>
              </AugAssign>
            </If>
            <AugAssign fromlineno="142" tolineno="142" lineno="142" target="str" value="((src) + (' ')) + (dest)">
              <AssName fromlineno="142" tolineno="142" lineno="142" name="str"/>
              <BinOp fromlineno="142" tolineno="142" lineno="142" op="+" left="(src) + (' ')" right="dest">
                <BinOp fromlineno="142" tolineno="142" lineno="142" op="+" left="src" right="' '">
                  <Name fromlineno="142" tolineno="142" lineno="142" name="src"/>
                  <Const fromlineno="142" tolineno="142" lineno="142" type="str">' '</Const>
                </BinOp>
                <Name fromlineno="142" tolineno="142" lineno="142" name="dest"/>
              </BinOp>
            </AugAssign>
          </If>
        </If>
        <Delete fromlineno="143" tolineno="143" lineno="143">
          <DelName fromlineno="143" tolineno="143" lineno="143" unknown="true"/>
        </Delete>
        <Return fromlineno="144" tolineno="144" lineno="144">
          <Name fromlineno="144" tolineno="144" lineno="144" name="str"/>
        </Return>
      </Function>
    </Module>
    <Module fromlineno="0" tolineno="84" lineno="0" name="bb.methodpool">
      <From fromlineno="33" tolineno="33" lineno="33" modname="bb.utils">
        <ImportName name="better_compile"/>
        <ImportName name="better_exec"/>
      </From>
      <From fromlineno="34" tolineno="34" lineno="34" modname="bb">
        <ImportName name="error"/>
      </From>
      <Assign fromlineno="38" tolineno="38" lineno="38" targets="[&lt;AssName(_parsed_methods) l.38 [bb.methodpool] at Ox920f9ec&gt;]" value="{}">
        <AssName fromlineno="38" tolineno="38" lineno="38" name="_parsed_methods"/>
        <Dict fromlineno="38" tolineno="38" lineno="38"/>
      </Assign>
      <Assign fromlineno="39" tolineno="39" lineno="39" targets="[&lt;AssName(_parsed_fns) l.39 [bb.methodpool] at Ox920fbec&gt;]" value="{}">
        <AssName fromlineno="39" tolineno="39" lineno="39" name="_parsed_fns"/>
        <Dict fromlineno="39" tolineno="39" lineno="39"/>
      </Assign>
      <Function fromlineno="41" tolineno="57" lineno="41">
        <Arguments fromlineno="41" tolineno="41" lineno="None" format_args="modulename, code, fn">
          <AssName fromlineno="41" tolineno="41" lineno="41" name="modulename"/>
          <AssName fromlineno="41" tolineno="41" lineno="41" name="code"/>
          <AssName fromlineno="41" tolineno="41" lineno="41" name="fn"/>
        </Arguments>
        <Assign fromlineno="46" tolineno="46" lineno="46" targets="[&lt;AssName(comp) l.46 [bb.methodpool] at Ox920fb6c&gt;]" value="better_compile(code, '&lt;bb&gt;', fn)">
          <AssName fromlineno="46" tolineno="46" lineno="46" name="comp"/>
          <CallFunc fromlineno="46" tolineno="46" lineno="46" func="Name(better_compile)">
            <Name fromlineno="46" tolineno="46" lineno="46" name="better_compile"/>
            <Name fromlineno="46" tolineno="46" lineno="46" name="code"/>
            <Const fromlineno="46" tolineno="46" lineno="46" type="str">'&lt;bb&gt;'</Const>
            <Name fromlineno="46" tolineno="46" lineno="46" name="fn"/>
          </CallFunc>
        </Assign>
        <Discard fromlineno="47" tolineno="47" lineno="47">
          <CallFunc fromlineno="47" tolineno="47" lineno="47" func="Name(better_exec)">
            <Name fromlineno="47" tolineno="47" lineno="47" name="better_exec"/>
            <Name fromlineno="47" tolineno="47" lineno="47" name="comp"/>
            <Name fromlineno="47" tolineno="47" lineno="47" name="__builtins__"/>
            <Name fromlineno="47" tolineno="47" lineno="47" name="code"/>
            <Name fromlineno="47" tolineno="47" lineno="47" name="fn"/>
          </CallFunc>
        </Discard>
        <Assign fromlineno="50" tolineno="50" lineno="50" targets="[&lt;AssName(code) l.50 [bb.methodpool] at Ox920f1ec&gt;]" value="comp.co_names">
          <AssName fromlineno="50" tolineno="50" lineno="50" name="code"/>
          <Getattr fromlineno="50" tolineno="50" lineno="50" attrname="co_names" expr="comp">
            <Name fromlineno="50" tolineno="50" lineno="50" name="comp"/>
          </Getattr>
        </Assign>
        <For fromlineno="51" tolineno="57" lineno="51">
          <AssName fromlineno="51" tolineno="51" lineno="51" name="name"/>
          <Name fromlineno="51" tolineno="51" lineno="51" name="code"/>
          <If fromlineno="52" tolineno="57" lineno="52">
            <Compare fromlineno="52" tolineno="52" lineno="52" op="('in', &lt;List(list) l.52 [bb.methodpool] at Ox953582c&gt;)">
              <Name fromlineno="52" tolineno="52" lineno="52" name="name"/>
              <List fromlineno="52" tolineno="52" lineno="52">
                <Const fromlineno="52" tolineno="52" lineno="52" type="str">'None'</Const>
                <Const fromlineno="52" tolineno="52" lineno="52" type="str">'False'</Const>
              </List>
            </Compare>
            <Continue fromlineno="53" tolineno="53" lineno="53"/>
            <If fromlineno="54" tolineno="57" lineno="54">
              <BoolOp fromlineno="54" tolineno="54" lineno="54" op="and" values="name in _parsed_fns,not _parsed_fns[name] == modulename,">
                <Compare fromlineno="54" tolineno="54" lineno="54" op="('in', &lt;Name(_parsed_fns) l.54 [bb.methodpool] at Ox921c8ac&gt;)">
                  <Name fromlineno="54" tolineno="54" lineno="54" name="name"/>
                  <Name fromlineno="54" tolineno="54" lineno="54" name="_parsed_fns"/>
                </Compare>
                <UnaryOp fromlineno="54" tolineno="54" lineno="54">
                  <Compare fromlineno="54" tolineno="54" lineno="54" op="('==', &lt;Name(modulename) l.54 [bb.methodpool] at Ox921ce6c&gt;)">
                    <Subscript fromlineno="54" tolineno="54" lineno="54">
                      <Name fromlineno="54" tolineno="54" lineno="54" name="_parsed_fns"/>
                      <Index fromlineno="54" tolineno="54" lineno="None">
                        <Name fromlineno="54" tolineno="54" lineno="54" name="name"/>
                      </Index>
                    </Subscript>
                    <Name fromlineno="54" tolineno="54" lineno="54" name="modulename"/>
                  </Compare>
                </UnaryOp>
              </BoolOp>
              <Discard fromlineno="55" tolineno="55" lineno="55">
                <CallFunc fromlineno="55" tolineno="55" lineno="55" func="Name(error)">
                  <Name fromlineno="55" tolineno="55" lineno="55" name="error"/>
                  <BinOp fromlineno="55" tolineno="55" lineno="55" op="%" left="&quot;Error Method already seen: %s in' %s' now in '%s'&quot;" right="(name, _parsed_fns[name], modulename)">
                    <Const fromlineno="55" tolineno="55" lineno="55" type="str">"Error Method already seen: %s in' %s' now in '%s'"</Const>
                    <Tuple fromlineno="55" tolineno="55" lineno="55">
                      <Name fromlineno="55" tolineno="55" lineno="55" name="name"/>
                      <Subscript fromlineno="55" tolineno="55" lineno="55">
                        <Name fromlineno="55" tolineno="55" lineno="55" name="_parsed_fns"/>
                        <Index fromlineno="55" tolineno="55" lineno="None">
                          <Name fromlineno="55" tolineno="55" lineno="55" name="name"/>
                        </Index>
                      </Subscript>
                      <Name fromlineno="55" tolineno="55" lineno="55" name="modulename"/>
                    </Tuple>
                  </BinOp>
                </CallFunc>
              </Discard>
              <Assign fromlineno="57" tolineno="57" lineno="57" targets="[&lt;Subscript() l.57 [bb.methodpool] at Ox921c68c&gt;]" value="modulename">
                <Subscript fromlineno="57" tolineno="57" lineno="57">
                  <Name fromlineno="57" tolineno="57" lineno="57" name="_parsed_fns"/>
                  <Index fromlineno="57" tolineno="57" lineno="None">
                    <Name fromlineno="57" tolineno="57" lineno="57" name="name"/>
                  </Index>
                </Subscript>
                <Name fromlineno="57" tolineno="57" lineno="57" name="modulename"/>
              </Assign>
            </If>
          </If>
        </For>
      </Function>
      <Function fromlineno="59" tolineno="71" lineno="59">
        <Arguments fromlineno="59" tolineno="59" lineno="None" format_args="modulename, code, fn">
          <AssName fromlineno="59" tolineno="59" lineno="59" name="modulename"/>
          <AssName fromlineno="59" tolineno="59" lineno="59" name="code"/>
          <AssName fromlineno="59" tolineno="59" lineno="59" name="fn"/>
        </Arguments>
        <If fromlineno="69" tolineno="70" lineno="69">
          <UnaryOp fromlineno="69" tolineno="69" lineno="69">
            <Compare fromlineno="69" tolineno="69" lineno="69" op="('in', &lt;Name(_parsed_methods) l.69 [bb.methodpool] at Ox921cacc&gt;)">
              <Name fromlineno="69" tolineno="69" lineno="69" name="modulename"/>
              <Name fromlineno="69" tolineno="69" lineno="69" name="_parsed_methods"/>
            </Compare>
          </UnaryOp>
          <Return fromlineno="70" tolineno="70" lineno="70">
            <CallFunc fromlineno="70" tolineno="70" lineno="70" func="Name(insert_method)">
              <Name fromlineno="70" tolineno="70" lineno="70" name="insert_method"/>
              <Name fromlineno="70" tolineno="70" lineno="70" name="modulename"/>
              <Name fromlineno="70" tolineno="70" lineno="70" name="code"/>
              <Name fromlineno="70" tolineno="70" lineno="70" name="fn"/>
            </CallFunc>
          </Return>
        </If>
        <Assign fromlineno="71" tolineno="71" lineno="71" targets="[&lt;Subscript() l.71 [bb.methodpool] at Ox921cb6c&gt;]" value="1">
          <Subscript fromlineno="71" tolineno="71" lineno="71">
            <Name fromlineno="71" tolineno="71" lineno="71" name="_parsed_methods"/>
            <Index fromlineno="71" tolineno="71" lineno="None">
              <Name fromlineno="71" tolineno="71" lineno="71" name="modulename"/>
            </Index>
          </Subscript>
          <Const fromlineno="71" tolineno="71" lineno="71" type="int">1</Const>
        </Assign>
      </Function>
      <Function fromlineno="73" tolineno="77" lineno="73">
        <Arguments fromlineno="73" tolineno="73" lineno="None" format_args="modulename">
          <AssName fromlineno="73" tolineno="73" lineno="73" name="modulename"/>
        </Arguments>
        <Return fromlineno="77" tolineno="77" lineno="77">
          <Compare fromlineno="77" tolineno="77" lineno="77" op="('in', &lt;Name(_parsed_methods) l.77 [bb.methodpool] at Ox921c7cc&gt;)">
            <Name fromlineno="77" tolineno="77" lineno="77" name="modulename"/>
            <Name fromlineno="77" tolineno="77" lineno="77" name="_parsed_methods"/>
          </Compare>
        </Return>
      </Function>
      <Function fromlineno="80" tolineno="84" lineno="80">
        <Arguments fromlineno="80" tolineno="80" lineno="None" format_args=""/>
        <Return fromlineno="84" tolineno="84" lineno="84">
          <Name fromlineno="84" tolineno="84" lineno="84" name="_parsed_methods"/>
        </Return>
      </Function>
    </Module>
    <Module fromlineno="0" tolineno="832" lineno="0" name="bb.shell">
      <TryExcept fromlineno="55" tolineno="58" lineno="55">
        <Discard fromlineno="56" tolineno="56" lineno="56">
          <Name fromlineno="56" tolineno="56" lineno="56" name="set"/>
        </Discard>
        <ExceptHandler fromlineno="57" tolineno="58" lineno="57">
          <Name fromlineno="57" tolineno="57" lineno="57" name="NameError"/>
          <From fromlineno="58" tolineno="58" lineno="58" modname="sets">
            <ImportName name="Set" asname="set"/>
          </From>
        </ExceptHandler>
      </TryExcept>
      <Import fromlineno="59" tolineno="59" lineno="59">
        <ImportName name="sys"/>
        <ImportName name="os"/>
        <ImportName name="readline"/>
        <ImportName name="socket"/>
        <ImportName name="httplib"/>
        <ImportName name="urllib"/>
        <ImportName name="commands"/>
        <ImportName name="popen2"/>
        <ImportName name="copy"/>
        <ImportName name="shlex"/>
        <ImportName name="Queue"/>
        <ImportName name="fnmatch"/>
      </Import>
      <From fromlineno="60" tolineno="60" lineno="60" modname="bb">
        <ImportName name="data"/>
        <ImportName name="parse"/>
        <ImportName name="build"/>
        <ImportName name="fatal"/>
        <ImportName name="cache"/>
        <ImportName name="taskdata"/>
        <ImportName name="runqueue"/>
        <ImportName name="providers" asname="Providers"/>
      </From>
      <Assign fromlineno="62" tolineno="62" lineno="62" targets="[&lt;AssName(__version__) l.62 [bb.shell] at Ox991608c&gt;]" value="'0.5.3.1'">
        <AssName fromlineno="62" tolineno="62" lineno="62" name="__version__"/>
        <Const fromlineno="62" tolineno="62" lineno="62" type="str">'0.5.3.1'</Const>
      </Assign>
      <Assign fromlineno="63" tolineno="64" lineno="63" targets="[&lt;AssName(__credits__) l.63 [bb.shell] at Ox991616c&gt;]" value="(&quot;BitBake Shell Version %s (C) 2005 Michael 'Mickey' Lauer &lt;mickey@Vanille.de&gt;\nType 'help' for more information, press CTRL-D to exit.&quot;) % (__version__)">
        <AssName fromlineno="63" tolineno="63" lineno="63" name="__credits__"/>
        <BinOp fromlineno="64" tolineno="64" lineno="64" op="%" left="&quot;BitBake Shell Version %s (C) 2005 Michael 'Mickey' Lauer &lt;mickey@Vanille.de&gt;\nType 'help' for more information, press CTRL-D to exit.&quot;" right="__version__">
          <Const fromlineno="64" tolineno="64" lineno="64" type="str">"BitBake Shell Version %s (C) 2005 Michael 'Mickey' Lauer &lt;mickey@Vanille.de&gt;\nType 'help' for more information, press CTRL-D to exit."</Const>
          <Name fromlineno="64" tolineno="64" lineno="64" name="__version__"/>
        </BinOp>
      </Assign>
      <Assign fromlineno="66" tolineno="66" lineno="66" targets="[&lt;AssName(cmds) l.66 [bb.shell] at Ox991624c&gt;]" value="{}">
        <AssName fromlineno="66" tolineno="66" lineno="66" name="cmds"/>
        <Dict fromlineno="66" tolineno="66" lineno="66"/>
      </Assign>
      <Assign fromlineno="67" tolineno="67" lineno="67" targets="[&lt;AssName(leave_mainloop) l.67 [bb.shell] at Ox991630c&gt;]" value="False">
        <AssName fromlineno="67" tolineno="67" lineno="67" name="leave_mainloop"/>
        <Const fromlineno="67" tolineno="67" lineno="67" type="bool">False</Const>
      </Assign>
      <Assign fromlineno="68" tolineno="68" lineno="68" targets="[&lt;AssName(last_exception) l.68 [bb.shell] at Ox99163ac&gt;]" value="None">
        <AssName fromlineno="68" tolineno="68" lineno="68" name="last_exception"/>
        <Const fromlineno="68" tolineno="68" lineno="68" type="NoneType">None</Const>
      </Assign>
      <Assign fromlineno="69" tolineno="69" lineno="69" targets="[&lt;AssName(cooker) l.69 [bb.shell] at Ox991644c&gt;]" value="None">
        <AssName fromlineno="69" tolineno="69" lineno="69" name="cooker"/>
        <Const fromlineno="69" tolineno="69" lineno="69" type="NoneType">None</Const>
      </Assign>
      <Assign fromlineno="70" tolineno="70" lineno="70" targets="[&lt;AssName(parsed) l.70 [bb.shell] at Ox99164ec&gt;]" value="False">
        <AssName fromlineno="70" tolineno="70" lineno="70" name="parsed"/>
        <Const fromlineno="70" tolineno="70" lineno="70" type="bool">False</Const>
      </Assign>
      <Assign fromlineno="71" tolineno="71" lineno="71" targets="[&lt;AssName(debug) l.71 [bb.shell] at Ox991658c&gt;]" value="os.environ.get('BBSHELL_DEBUG', '')">
        <AssName fromlineno="71" tolineno="71" lineno="71" name="debug"/>
        <CallFunc fromlineno="71" tolineno="71" lineno="71" func="Getattr(get)">
          <Getattr fromlineno="71" tolineno="71" lineno="71" attrname="get" expr="os.environ">
            <Getattr fromlineno="71" tolineno="71" lineno="71" attrname="environ" expr="os">
              <Name fromlineno="71" tolineno="71" lineno="71" name="os"/>
            </Getattr>
          </Getattr>
          <Const fromlineno="71" tolineno="71" lineno="71" type="str">'BBSHELL_DEBUG'</Const>
          <Const fromlineno="71" tolineno="71" lineno="71" type="str">''</Const>
        </CallFunc>
      </Assign>
      <Class fromlineno="77" tolineno="572" lineno="77">
        <Function fromlineno="80" tolineno="97" lineno="80">
          <Arguments fromlineno="80" tolineno="80" lineno="None" format_args="self, shell">
            <AssName fromlineno="80" tolineno="80" lineno="80" name="self"/>
            <AssName fromlineno="80" tolineno="80" lineno="80" name="shell"/>
          </Arguments>
          <Assign fromlineno="82" tolineno="82" lineno="82" targets="[&lt;AssAttr(_shell) l.82 [bb.shell] at Ox991686c&gt;]" value="shell">
            <AssAttr fromlineno="82" tolineno="82" lineno="82" attrname="_shell" expr="self">
              <Name fromlineno="82" tolineno="82" lineno="82" name="self"/>
            </AssAttr>
            <Name fromlineno="82" tolineno="82" lineno="82" name="shell"/>
          </Assign>
          <For fromlineno="83" tolineno="97" lineno="83">
            <AssName fromlineno="83" tolineno="83" lineno="83" name="attr"/>
            <Getattr fromlineno="83" tolineno="83" lineno="83" attrname="__dict__" expr="BitBakeShellCommands">
              <Name fromlineno="83" tolineno="83" lineno="83" name="BitBakeShellCommands"/>
            </Getattr>
            <If fromlineno="84" tolineno="97" lineno="84">
              <UnaryOp fromlineno="84" tolineno="84" lineno="84">
                <CallFunc fromlineno="84" tolineno="84" lineno="84" func="Getattr(startswith)">
                  <Getattr fromlineno="84" tolineno="84" lineno="84" attrname="startswith" expr="attr">
                    <Name fromlineno="84" tolineno="84" lineno="84" name="attr"/>
                  </Getattr>
                  <Const fromlineno="84" tolineno="84" lineno="84" type="str">'_'</Const>
                </CallFunc>
              </UnaryOp>
              <If fromlineno="85" tolineno="88" lineno="85">
                <CallFunc fromlineno="85" tolineno="85" lineno="85" func="Getattr(endswith)">
                  <Getattr fromlineno="85" tolineno="85" lineno="85" attrname="endswith" expr="attr">
                    <Name fromlineno="85" tolineno="85" lineno="85" name="attr"/>
                  </Getattr>
                  <Const fromlineno="85" tolineno="85" lineno="85" type="str">'_'</Const>
                </CallFunc>
                <Assign fromlineno="86" tolineno="86" lineno="86" targets="[&lt;AssName(command) l.86 [bb.shell] at Ox9916c2c&gt;]" value="attr[:-1].lower()">
                  <AssName fromlineno="86" tolineno="86" lineno="86" name="command"/>
                  <CallFunc fromlineno="86" tolineno="86" lineno="86" func="Getattr(lower)">
                    <Getattr fromlineno="86" tolineno="86" lineno="86" attrname="lower" expr="attr[:-1]">
                      <Subscript fromlineno="86" tolineno="86" lineno="86">
                        <Name fromlineno="86" tolineno="86" lineno="86" name="attr"/>
                        <Slice fromlineno="86" tolineno="86" lineno="None">
                          <Const fromlineno="86" tolineno="86" lineno="86" type="int">-1</Const>
                        </Slice>
                      </Subscript>
                    </Getattr>
                  </CallFunc>
                </Assign>
                <Assign fromlineno="88" tolineno="88" lineno="88" targets="[&lt;AssName(command) l.88 [bb.shell] at Ox9916dac&gt;]" value="attr[:].lower()">
                  <AssName fromlineno="88" tolineno="88" lineno="88" name="command"/>
                  <CallFunc fromlineno="88" tolineno="88" lineno="88" func="Getattr(lower)">
                    <Getattr fromlineno="88" tolineno="88" lineno="88" attrname="lower" expr="attr[:]">
                      <Subscript fromlineno="88" tolineno="88" lineno="88">
                        <Name fromlineno="88" tolineno="88" lineno="88" name="attr"/>
                        <Slice fromlineno="88" tolineno="88" lineno="None"/>
                      </Subscript>
                    </Getattr>
                  </CallFunc>
                </Assign>
              </If>
              <Assign fromlineno="89" tolineno="89" lineno="89" targets="[&lt;AssName(method) l.89 [bb.shell] at Ox9916eac&gt;]" value="getattr(BitBakeShellCommands, attr)">
                <AssName fromlineno="89" tolineno="89" lineno="89" name="method"/>
                <CallFunc fromlineno="89" tolineno="89" lineno="89" func="Name(getattr)">
                  <Name fromlineno="89" tolineno="89" lineno="89" name="getattr"/>
                  <Name fromlineno="89" tolineno="89" lineno="89" name="BitBakeShellCommands"/>
                  <Name fromlineno="89" tolineno="89" lineno="89" name="attr"/>
                </CallFunc>
              </Assign>
              <Discard fromlineno="90" tolineno="90" lineno="90">
                <CallFunc fromlineno="90" tolineno="90" lineno="90" func="Name(debugOut)">
                  <Name fromlineno="90" tolineno="90" lineno="90" name="debugOut"/>
                  <BinOp fromlineno="90" tolineno="90" lineno="90" op="%" left="&quot;registering command '%s'&quot;" right="command">
                    <Const fromlineno="90" tolineno="90" lineno="90" type="str">"registering command '%s'"</Const>
                    <Name fromlineno="90" tolineno="90" lineno="90" name="command"/>
                  </BinOp>
                </CallFunc>
              </Discard>
              <Assign fromlineno="92" tolineno="92" lineno="92" targets="[&lt;AssName(usage) l.92 [bb.shell] at Ox991c0cc&gt;]" value="getattr(method, 'usage', '')">
                <AssName fromlineno="92" tolineno="92" lineno="92" name="usage"/>
                <CallFunc fromlineno="92" tolineno="92" lineno="92" func="Name(getattr)">
                  <Name fromlineno="92" tolineno="92" lineno="92" name="getattr"/>
                  <Name fromlineno="92" tolineno="92" lineno="92" name="method"/>
                  <Const fromlineno="92" tolineno="92" lineno="92" type="str">'usage'</Const>
                  <Const fromlineno="92" tolineno="92" lineno="92" type="str">''</Const>
                </CallFunc>
              </Assign>
              <If fromlineno="93" tolineno="96" lineno="93">
                <Compare fromlineno="93" tolineno="93" lineno="93" op="('!=', &lt;Const(str) l.93 [bb.shell] at Ox991c26c&gt;)">
                  <Name fromlineno="93" tolineno="93" lineno="93" name="usage"/>
                  <Const fromlineno="93" tolineno="93" lineno="93" type="str">'&lt;...&gt;'</Const>
                </Compare>
                <Assign fromlineno="94" tolineno="94" lineno="94" targets="[&lt;AssName(numArgs) l.94 [bb.shell] at Ox991c30c&gt;]" value="len(usage.split())">
                  <AssName fromlineno="94" tolineno="94" lineno="94" name="numArgs"/>
                  <CallFunc fromlineno="94" tolineno="94" lineno="94" func="Name(len)">
                    <Name fromlineno="94" tolineno="94" lineno="94" name="len"/>
                    <CallFunc fromlineno="94" tolineno="94" lineno="94" func="Getattr(split)">
                      <Getattr fromlineno="94" tolineno="94" lineno="94" attrname="split" expr="usage">
                        <Name fromlineno="94" tolineno="94" lineno="94" name="usage"/>
                      </Getattr>
                    </CallFunc>
                  </CallFunc>
                </Assign>
                <Assign fromlineno="96" tolineno="96" lineno="96" targets="[&lt;AssName(numArgs) l.96 [bb.shell] at Ox991c48c&gt;]" value="-1">
                  <AssName fromlineno="96" tolineno="96" lineno="96" name="numArgs"/>
                  <Const fromlineno="96" tolineno="96" lineno="96" type="int">-1</Const>
                </Assign>
              </If>
              <Discard fromlineno="97" tolineno="97" lineno="97">
                <CallFunc fromlineno="97" tolineno="97" lineno="97" func="Getattr(registerCommand)">
                  <Getattr fromlineno="97" tolineno="97" lineno="97" attrname="registerCommand" expr="shell">
                    <Name fromlineno="97" tolineno="97" lineno="97" name="shell"/>
                  </Getattr>
                  <Name fromlineno="97" tolineno="97" lineno="97" name="command"/>
                  <Name fromlineno="97" tolineno="97" lineno="97" name="method"/>
                  <Name fromlineno="97" tolineno="97" lineno="97" name="numArgs"/>
                  <BinOp fromlineno="97" tolineno="97" lineno="97" op="%" left="'%s %s'" right="(command, usage)">
                    <Const fromlineno="97" tolineno="97" lineno="97" type="str">'%s %s'</Const>
                    <Tuple fromlineno="97" tolineno="97" lineno="97">
                      <Name fromlineno="97" tolineno="97" lineno="97" name="command"/>
                      <Name fromlineno="97" tolineno="97" lineno="97" name="usage"/>
                    </Tuple>
                  </BinOp>
                  <Getattr fromlineno="97" tolineno="97" lineno="97" attrname="__doc__" expr="method">
                    <Name fromlineno="97" tolineno="97" lineno="97" name="method"/>
                  </Getattr>
                </CallFunc>
              </Discard>
            </If>
          </For>
        </Function>
        <Function fromlineno="99" tolineno="102" lineno="99">
          <Arguments fromlineno="99" tolineno="99" lineno="None" format_args="self">
            <AssName fromlineno="99" tolineno="99" lineno="99" name="self"/>
          </Arguments>
          <If fromlineno="100" tolineno="102" lineno="100">
            <UnaryOp fromlineno="100" tolineno="100" lineno="100">
              <Name fromlineno="100" tolineno="100" lineno="100" name="parsed"/>
            </UnaryOp>
            <Print fromlineno="101" tolineno="101" lineno="101">
              <Const fromlineno="101" tolineno="101" lineno="101" type="str">'SHELL: This command needs to parse bbfiles...'</Const>
            </Print>
            <Discard fromlineno="102" tolineno="102" lineno="102">
              <CallFunc fromlineno="102" tolineno="102" lineno="102" func="Getattr(parse)">
                <Getattr fromlineno="102" tolineno="102" lineno="102" attrname="parse" expr="self">
                  <Name fromlineno="102" tolineno="102" lineno="102" name="self"/>
                </Getattr>
                <Const fromlineno="102" tolineno="102" lineno="102" type="NoneType">None</Const>
              </CallFunc>
            </Discard>
          </If>
        </Function>
        <Function fromlineno="104" tolineno="116" lineno="104">
          <Arguments fromlineno="104" tolineno="104" lineno="None" format_args="self, item">
            <AssName fromlineno="104" tolineno="104" lineno="104" name="self"/>
            <AssName fromlineno="104" tolineno="104" lineno="104" name="item"/>
          </Arguments>
          <Discard fromlineno="105" tolineno="105" lineno="105">
            <CallFunc fromlineno="105" tolineno="105" lineno="105" func="Getattr(_checkParsed)">
              <Getattr fromlineno="105" tolineno="105" lineno="105" attrname="_checkParsed" expr="self">
                <Name fromlineno="105" tolineno="105" lineno="105" name="self"/>
              </Getattr>
            </CallFunc>
          </Discard>
          <Assign fromlineno="107" tolineno="107" lineno="107" targets="[&lt;AssName(preferred) l.107 [bb.shell] at Ox991cb6c&gt;]" value="data.getVar(('PREFERRED_PROVIDER_%s') % (item), cooker.configuration.data, 1)">
            <AssName fromlineno="107" tolineno="107" lineno="107" name="preferred"/>
            <CallFunc fromlineno="107" tolineno="107" lineno="107" func="Getattr(getVar)">
              <Getattr fromlineno="107" tolineno="107" lineno="107" attrname="getVar" expr="data">
                <Name fromlineno="107" tolineno="107" lineno="107" name="data"/>
              </Getattr>
              <BinOp fromlineno="107" tolineno="107" lineno="107" op="%" left="'PREFERRED_PROVIDER_%s'" right="item">
                <Const fromlineno="107" tolineno="107" lineno="107" type="str">'PREFERRED_PROVIDER_%s'</Const>
                <Name fromlineno="107" tolineno="107" lineno="107" name="item"/>
              </BinOp>
              <Getattr fromlineno="107" tolineno="107" lineno="107" attrname="data" expr="cooker.configuration">
                <Getattr fromlineno="107" tolineno="107" lineno="107" attrname="configuration" expr="cooker">
                  <Name fromlineno="107" tolineno="107" lineno="107" name="cooker"/>
                </Getattr>
              </Getattr>
              <Const fromlineno="107" tolineno="107" lineno="107" type="int">1</Const>
            </CallFunc>
          </Assign>
          <If fromlineno="108" tolineno="108" lineno="108">
            <UnaryOp fromlineno="108" tolineno="108" lineno="108">
              <Name fromlineno="108" tolineno="108" lineno="108" name="preferred"/>
            </UnaryOp>
            <Assign fromlineno="108" tolineno="108" lineno="108" targets="[&lt;AssName(preferred) l.108 [bb.shell] at Ox991cdec&gt;]" value="item">
              <AssName fromlineno="108" tolineno="108" lineno="108" name="preferred"/>
              <Name fromlineno="108" tolineno="108" lineno="108" name="item"/>
            </Assign>
          </If>
          <TryExcept fromlineno="109" tolineno="115" lineno="109">
            <Assign fromlineno="110" tolineno="110" lineno="110" targets="[&lt;Tuple(tuple) l.110 [bb.shell] at Ox991cecc&gt;]" value="Providers.findBestProvider(preferred, cooker.configuration.data, cooker.status)">
              <Tuple fromlineno="110" tolineno="110" lineno="110">
                <AssName fromlineno="110" tolineno="110" lineno="110" name="lv"/>
                <AssName fromlineno="110" tolineno="110" lineno="110" name="lf"/>
                <AssName fromlineno="110" tolineno="110" lineno="110" name="pv"/>
                <AssName fromlineno="110" tolineno="110" lineno="110" name="pf"/>
              </Tuple>
              <CallFunc fromlineno="110" tolineno="110" lineno="110" func="Getattr(findBestProvider)">
                <Getattr fromlineno="110" tolineno="110" lineno="110" attrname="findBestProvider" expr="Providers">
                  <Name fromlineno="110" tolineno="110" lineno="110" name="Providers"/>
                </Getattr>
                <Name fromlineno="110" tolineno="110" lineno="110" name="preferred"/>
                <Getattr fromlineno="110" tolineno="110" lineno="110" attrname="data" expr="cooker.configuration">
                  <Getattr fromlineno="110" tolineno="110" lineno="110" attrname="configuration" expr="cooker">
                    <Name fromlineno="110" tolineno="110" lineno="110" name="cooker"/>
                  </Getattr>
                </Getattr>
                <Getattr fromlineno="110" tolineno="110" lineno="110" attrname="status" expr="cooker">
                  <Name fromlineno="110" tolineno="110" lineno="110" name="cooker"/>
                </Getattr>
              </CallFunc>
            </Assign>
            <ExceptHandler fromlineno="111" tolineno="115" lineno="111">
              <Name fromlineno="111" tolineno="111" lineno="111" name="KeyError"/>
              <If fromlineno="112" tolineno="115" lineno="112">
                <Compare fromlineno="112" tolineno="112" lineno="112" op="('in', &lt;Getattr(providers) l.112 [bb.shell] at Ox99212ac&gt;)">
                  <Name fromlineno="112" tolineno="112" lineno="112" name="item"/>
                  <Getattr fromlineno="112" tolineno="112" lineno="112" attrname="providers" expr="cooker.status">
                    <Getattr fromlineno="112" tolineno="112" lineno="112" attrname="status" expr="cooker">
                      <Name fromlineno="112" tolineno="112" lineno="112" name="cooker"/>
                    </Getattr>
                  </Getattr>
                </Compare>
                <Assign fromlineno="113" tolineno="113" lineno="113" targets="[&lt;AssName(pf) l.113 [bb.shell] at Ox992138c&gt;]" value="cooker.status.providers[item][0]">
                  <AssName fromlineno="113" tolineno="113" lineno="113" name="pf"/>
                  <Subscript fromlineno="113" tolineno="113" lineno="113">
                    <Subscript fromlineno="113" tolineno="113" lineno="113">
                      <Getattr fromlineno="113" tolineno="113" lineno="113" attrname="providers" expr="cooker.status">
                        <Getattr fromlineno="113" tolineno="113" lineno="113" attrname="status" expr="cooker">
                          <Name fromlineno="113" tolineno="113" lineno="113" name="cooker"/>
                        </Getattr>
                      </Getattr>
                      <Index fromlineno="113" tolineno="113" lineno="None">
                        <Name fromlineno="113" tolineno="113" lineno="113" name="item"/>
                      </Index>
                    </Subscript>
                    <Index fromlineno="113" tolineno="113" lineno="None">
                      <Const fromlineno="113" tolineno="113" lineno="113" type="int">0</Const>
                    </Index>
                  </Subscript>
                </Assign>
                <Assign fromlineno="115" tolineno="115" lineno="115" targets="[&lt;AssName(pf) l.115 [bb.shell] at Ox992152c&gt;]" value="None">
                  <AssName fromlineno="115" tolineno="115" lineno="115" name="pf"/>
                  <Const fromlineno="115" tolineno="115" lineno="115" type="NoneType">None</Const>
                </Assign>
              </If>
            </ExceptHandler>
          </TryExcept>
          <Return fromlineno="116" tolineno="116" lineno="116">
            <Name fromlineno="116" tolineno="116" lineno="116" name="pf"/>
          </Return>
        </Function>
        <Function fromlineno="118" tolineno="125" lineno="118">
          <Arguments fromlineno="118" tolineno="118" lineno="None" format_args="self, params">
            <AssName fromlineno="118" tolineno="118" lineno="118" name="self"/>
            <AssName fromlineno="118" tolineno="118" lineno="118" name="params"/>
          </Arguments>
          <Assign fromlineno="120" tolineno="120" lineno="120" targets="[&lt;Tuple(tuple) l.120 [bb.shell] at Ox99216ac&gt;]" value="params">
            <Tuple fromlineno="120" tolineno="120" lineno="120">
              <AssName fromlineno="120" tolineno="120" lineno="120" name="new"/>
              <AssName fromlineno="120" tolineno="120" lineno="120" name="old"/>
            </Tuple>
            <Name fromlineno="120" tolineno="120" lineno="120" name="params"/>
          </Assign>
          <If fromlineno="121" tolineno="125" lineno="121">
            <UnaryOp fromlineno="121" tolineno="121" lineno="121">
              <Compare fromlineno="121" tolineno="121" lineno="121" op="('in', &lt;Name(cmds) l.121 [bb.shell] at Ox992184c&gt;)">
                <Name fromlineno="121" tolineno="121" lineno="121" name="old"/>
                <Name fromlineno="121" tolineno="121" lineno="121" name="cmds"/>
              </Compare>
            </UnaryOp>
            <Print fromlineno="122" tolineno="122" lineno="122">
              <BinOp fromlineno="122" tolineno="122" lineno="122" op="%" left="&quot;ERROR: Command '%s' not known&quot;" right="old">
                <Const fromlineno="122" tolineno="122" lineno="122" type="str">"ERROR: Command '%s' not known"</Const>
                <Name fromlineno="122" tolineno="122" lineno="122" name="old"/>
              </BinOp>
            </Print>
            <Assign fromlineno="124" tolineno="124" lineno="124" targets="[&lt;Subscript() l.124 [bb.shell] at Ox99219ac&gt;]" value="cmds[old]">
              <Subscript fromlineno="124" tolineno="124" lineno="124">
                <Name fromlineno="124" tolineno="124" lineno="124" name="cmds"/>
                <Index fromlineno="124" tolineno="124" lineno="None">
                  <Name fromlineno="124" tolineno="124" lineno="124" name="new"/>
                </Index>
              </Subscript>
              <Subscript fromlineno="124" tolineno="124" lineno="124">
                <Name fromlineno="124" tolineno="124" lineno="124" name="cmds"/>
                <Index fromlineno="124" tolineno="124" lineno="None">
                  <Name fromlineno="124" tolineno="124" lineno="124" name="old"/>
                </Index>
              </Subscript>
            </Assign>
            <Print fromlineno="125" tolineno="125" lineno="125">
              <Const fromlineno="125" tolineno="125" lineno="125" type="str">'OK'</Const>
            </Print>
          </If>
        </Function>
        <Assign fromlineno="126" tolineno="126" lineno="126" targets="[&lt;AssAttr(usage) l.126 [bb.shell] at Ox9921b0c&gt;]" value="'&lt;alias&gt; &lt;command&gt;'">
          <AssAttr fromlineno="126" tolineno="126" lineno="126" attrname="usage" expr="alias">
            <Name fromlineno="126" tolineno="126" lineno="126" name="alias"/>
          </AssAttr>
          <Const fromlineno="126" tolineno="126" lineno="126" type="str">'&lt;alias&gt; &lt;command&gt;'</Const>
        </Assign>
        <Function fromlineno="128" tolineno="131" lineno="128">
          <Arguments fromlineno="128" tolineno="128" lineno="None" format_args="self, params">
            <AssName fromlineno="128" tolineno="128" lineno="128" name="self"/>
            <AssName fromlineno="128" tolineno="128" lineno="128" name="params"/>
          </Arguments>
          <Assign fromlineno="130" tolineno="130" lineno="130" targets="[&lt;AssName(index) l.130 [bb.shell] at Ox9921ccc&gt;]" value="params[0]">
            <AssName fromlineno="130" tolineno="130" lineno="130" name="index"/>
            <Subscript fromlineno="130" tolineno="130" lineno="130">
              <Name fromlineno="130" tolineno="130" lineno="130" name="params"/>
              <Index fromlineno="130" tolineno="130" lineno="None">
                <Const fromlineno="130" tolineno="130" lineno="130" type="int">0</Const>
              </Index>
            </Subscript>
          </Assign>
          <Print fromlineno="131" tolineno="131" lineno="131">
            <CallFunc fromlineno="131" tolineno="131" lineno="131" func="Getattr(buffer)">
              <Getattr fromlineno="131" tolineno="131" lineno="131" attrname="buffer" expr="self._shell.myout">
                <Getattr fromlineno="131" tolineno="131" lineno="131" attrname="myout" expr="self._shell">
                  <Getattr fromlineno="131" tolineno="131" lineno="131" attrname="_shell" expr="self">
                    <Name fromlineno="131" tolineno="131" lineno="131" name="self"/>
                  </Getattr>
                </Getattr>
              </Getattr>
              <CallFunc fromlineno="131" tolineno="131" lineno="131" func="Name(int)">
                <Name fromlineno="131" tolineno="131" lineno="131" name="int"/>
                <Name fromlineno="131" tolineno="131" lineno="131" name="index"/>
              </CallFunc>
            </CallFunc>
          </Print>
        </Function>
        <Assign fromlineno="132" tolineno="132" lineno="132" targets="[&lt;AssAttr(usage) l.132 [bb.shell] at Ox9921f0c&gt;]" value="'&lt;index&gt;'">
          <AssAttr fromlineno="132" tolineno="132" lineno="132" attrname="usage" expr="buffer">
            <Name fromlineno="132" tolineno="132" lineno="132" name="buffer"/>
          </AssAttr>
          <Const fromlineno="132" tolineno="132" lineno="132" type="str">'&lt;index&gt;'</Const>
        </Assign>
        <Function fromlineno="134" tolineno="143" lineno="134">
          <Arguments fromlineno="134" tolineno="134" lineno="None" format_args="self, params">
            <AssName fromlineno="134" tolineno="134" lineno="134" name="self"/>
            <AssName fromlineno="134" tolineno="134" lineno="134" name="params"/>
          </Arguments>
          <Assign fromlineno="136" tolineno="136" lineno="136" targets="[&lt;AssName(commands) l.136 [bb.shell] at Ox992510c&gt;]" value="self._shell.myout.bufferedCommands()">
            <AssName fromlineno="136" tolineno="136" lineno="136" name="commands"/>
            <CallFunc fromlineno="136" tolineno="136" lineno="136" func="Getattr(bufferedCommands)">
              <Getattr fromlineno="136" tolineno="136" lineno="136" attrname="bufferedCommands" expr="self._shell.myout">
                <Getattr fromlineno="136" tolineno="136" lineno="136" attrname="myout" expr="self._shell">
                  <Getattr fromlineno="136" tolineno="136" lineno="136" attrname="_shell" expr="self">
                    <Name fromlineno="136" tolineno="136" lineno="136" name="self"/>
                  </Getattr>
                </Getattr>
              </Getattr>
            </CallFunc>
          </Assign>
          <If fromlineno="137" tolineno="143" lineno="137">
            <UnaryOp fromlineno="137" tolineno="137" lineno="137">
              <Name fromlineno="137" tolineno="137" lineno="137" name="commands"/>
            </UnaryOp>
            <Print fromlineno="138" tolineno="138" lineno="138">
              <Const fromlineno="138" tolineno="138" lineno="138" type="str">'SHELL: No buffered commands available yet. Start doing something.'</Const>
            </Print>
            <Print fromlineno="140" tolineno="140" lineno="140">
              <BinOp fromlineno="140" tolineno="140" lineno="140" op="*" left="'='" right="35">
                <Const fromlineno="140" tolineno="140" lineno="140" type="str">'='</Const>
                <Const fromlineno="140" tolineno="140" lineno="140" type="int">35</Const>
              </BinOp>
              <Const fromlineno="140" tolineno="140" lineno="140" type="str">'Available Output Buffers'</Const>
              <BinOp fromlineno="140" tolineno="140" lineno="140" op="*" left="'='" right="27">
                <Const fromlineno="140" tolineno="140" lineno="140" type="str">'='</Const>
                <Const fromlineno="140" tolineno="140" lineno="140" type="int">27</Const>
              </BinOp>
            </Print>
            <For fromlineno="141" tolineno="142" lineno="141">
              <Tuple fromlineno="141" tolineno="141" lineno="141">
                <AssName fromlineno="141" tolineno="141" lineno="141" name="index"/>
                <AssName fromlineno="141" tolineno="141" lineno="141" name="cmd"/>
              </Tuple>
              <CallFunc fromlineno="141" tolineno="141" lineno="141" func="Name(enumerate)">
                <Name fromlineno="141" tolineno="141" lineno="141" name="enumerate"/>
                <Name fromlineno="141" tolineno="141" lineno="141" name="commands"/>
              </CallFunc>
              <Print fromlineno="142" tolineno="142" lineno="142">
                <BinOp fromlineno="142" tolineno="142" lineno="142" op="%" left="'| %s %s'" right="(str(index).ljust(3), cmd)">
                  <Const fromlineno="142" tolineno="142" lineno="142" type="str">'| %s %s'</Const>
                  <Tuple fromlineno="142" tolineno="142" lineno="142">
                    <CallFunc fromlineno="142" tolineno="142" lineno="142" func="Getattr(ljust)">
                      <Getattr fromlineno="142" tolineno="142" lineno="142" attrname="ljust" expr="str(index)">
                        <CallFunc fromlineno="142" tolineno="142" lineno="142" func="Name(str)">
                          <Name fromlineno="142" tolineno="142" lineno="142" name="str"/>
                          <Name fromlineno="142" tolineno="142" lineno="142" name="index"/>
                        </CallFunc>
                      </Getattr>
                      <Const fromlineno="142" tolineno="142" lineno="142" type="int">3</Const>
                    </CallFunc>
                    <Name fromlineno="142" tolineno="142" lineno="142" name="cmd"/>
                  </Tuple>
                </BinOp>
              </Print>
            </For>
            <Print fromlineno="143" tolineno="143" lineno="143">
              <BinOp fromlineno="143" tolineno="143" lineno="143" op="*" left="'='" right="88">
                <Const fromlineno="143" tolineno="143" lineno="143" type="str">'='</Const>
                <Const fromlineno="143" tolineno="143" lineno="143" type="int">88</Const>
              </BinOp>
            </Print>
          </If>
        </Function>
        <Function fromlineno="145" tolineno="192" lineno="145">
          <Arguments fromlineno="145" tolineno="145" lineno="None" format_args="self, params, cmd='build'">
            <AssName fromlineno="145" tolineno="145" lineno="145" name="self"/>
            <AssName fromlineno="145" tolineno="145" lineno="145" name="params"/>
            <AssName fromlineno="145" tolineno="145" lineno="145" name="cmd"/>
            <Const fromlineno="145" tolineno="145" lineno="145" type="str">'build'</Const>
          </Arguments>
          <Global fromlineno="147" tolineno="147" lineno="147"/>
          <Assign fromlineno="148" tolineno="148" lineno="148" targets="[&lt;AssName(globexpr) l.148 [bb.shell] at Ox9925a2c&gt;]" value="params[0]">
            <AssName fromlineno="148" tolineno="148" lineno="148" name="globexpr"/>
            <Subscript fromlineno="148" tolineno="148" lineno="148">
              <Name fromlineno="148" tolineno="148" lineno="148" name="params"/>
              <Index fromlineno="148" tolineno="148" lineno="None">
                <Const fromlineno="148" tolineno="148" lineno="148" type="int">0</Const>
              </Index>
            </Subscript>
          </Assign>
          <Discard fromlineno="149" tolineno="149" lineno="149">
            <CallFunc fromlineno="149" tolineno="149" lineno="149" func="Getattr(_checkParsed)">
              <Getattr fromlineno="149" tolineno="149" lineno="149" attrname="_checkParsed" expr="self">
                <Name fromlineno="149" tolineno="149" lineno="149" name="self"/>
              </Getattr>
            </CallFunc>
          </Discard>
          <Assign fromlineno="150" tolineno="150" lineno="150" targets="[&lt;AssName(names) l.150 [bb.shell] at Ox9925bcc&gt;]" value="globfilter(cooker.status.pkg_pn.keys(), globexpr)">
            <AssName fromlineno="150" tolineno="150" lineno="150" name="names"/>
            <CallFunc fromlineno="150" tolineno="150" lineno="150" func="Name(globfilter)">
              <Name fromlineno="150" tolineno="150" lineno="150" name="globfilter"/>
              <CallFunc fromlineno="150" tolineno="150" lineno="150" func="Getattr(keys)">
                <Getattr fromlineno="150" tolineno="150" lineno="150" attrname="keys" expr="cooker.status.pkg_pn">
                  <Getattr fromlineno="150" tolineno="150" lineno="150" attrname="pkg_pn" expr="cooker.status">
                    <Getattr fromlineno="150" tolineno="150" lineno="150" attrname="status" expr="cooker">
                      <Name fromlineno="150" tolineno="150" lineno="150" name="cooker"/>
                    </Getattr>
                  </Getattr>
                </Getattr>
              </CallFunc>
              <Name fromlineno="150" tolineno="150" lineno="150" name="globexpr"/>
            </CallFunc>
          </Assign>
          <If fromlineno="151" tolineno="151" lineno="151">
            <Compare fromlineno="151" tolineno="151" lineno="151" op="('==', &lt;Const(int) l.151 [bb.shell] at Ox9925e4c&gt;)">
              <CallFunc fromlineno="151" tolineno="151" lineno="151" func="Name(len)">
                <Name fromlineno="151" tolineno="151" lineno="151" name="len"/>
                <Name fromlineno="151" tolineno="151" lineno="151" name="names"/>
              </CallFunc>
              <Const fromlineno="151" tolineno="151" lineno="151" type="int">0</Const>
            </Compare>
            <Assign fromlineno="151" tolineno="151" lineno="151" targets="[&lt;AssName(names) l.151 [bb.shell] at Ox9925eec&gt;]" value="[globexpr]">
              <AssName fromlineno="151" tolineno="151" lineno="151" name="names"/>
              <List fromlineno="151" tolineno="151" lineno="151">
                <Name fromlineno="151" tolineno="151" lineno="151" name="globexpr"/>
              </List>
            </Assign>
          </If>
          <Print fromlineno="152" tolineno="152" lineno="152">
            <BinOp fromlineno="152" tolineno="152" lineno="152" op="%" left="'SHELL: Building %s'" right="' '.join(names)">
              <Const fromlineno="152" tolineno="152" lineno="152" type="str">'SHELL: Building %s'</Const>
              <CallFunc fromlineno="152" tolineno="152" lineno="152" func="Getattr(join)">
                <Getattr fromlineno="152" tolineno="152" lineno="152" attrname="join" expr="' '">
                  <Const fromlineno="152" tolineno="152" lineno="152" type="str">' '</Const>
                </Getattr>
                <Name fromlineno="152" tolineno="152" lineno="152" name="names"/>
              </CallFunc>
            </BinOp>
          </Print>
          <Assign fromlineno="154" tolineno="154" lineno="154" targets="[&lt;AssName(oldcmd) l.154 [bb.shell] at Ox99290ec&gt;]" value="cooker.configuration.cmd">
            <AssName fromlineno="154" tolineno="154" lineno="154" name="oldcmd"/>
            <Getattr fromlineno="154" tolineno="154" lineno="154" attrname="cmd" expr="cooker.configuration">
              <Getattr fromlineno="154" tolineno="154" lineno="154" attrname="configuration" expr="cooker">
                <Name fromlineno="154" tolineno="154" lineno="154" name="cooker"/>
              </Getattr>
            </Getattr>
          </Assign>
          <Assign fromlineno="155" tolineno="155" lineno="155" targets="[&lt;AssAttr(cmd) l.155 [bb.shell] at Ox99291cc&gt;]" value="cmd">
            <AssAttr fromlineno="155" tolineno="155" lineno="155" attrname="cmd" expr="cooker.configuration">
              <Getattr fromlineno="155" tolineno="155" lineno="155" attrname="configuration" expr="cooker">
                <Name fromlineno="155" tolineno="155" lineno="155" name="cooker"/>
              </Getattr>
            </AssAttr>
            <Name fromlineno="155" tolineno="155" lineno="155" name="cmd"/>
          </Assign>
          <Assign fromlineno="157" tolineno="157" lineno="157" targets="[&lt;AssName(td) l.157 [bb.shell] at Ox992928c&gt;]" value="taskdata.TaskData(cooker.configuration.abort)">
            <AssName fromlineno="157" tolineno="157" lineno="157" name="td"/>
            <CallFunc fromlineno="157" tolineno="157" lineno="157" func="Getattr(TaskData)">
              <Getattr fromlineno="157" tolineno="157" lineno="157" attrname="TaskData" expr="taskdata">
                <Name fromlineno="157" tolineno="157" lineno="157" name="taskdata"/>
              </Getattr>
              <Getattr fromlineno="157" tolineno="157" lineno="157" attrname="abort" expr="cooker.configuration">
                <Getattr fromlineno="157" tolineno="157" lineno="157" attrname="configuration" expr="cooker">
                  <Name fromlineno="157" tolineno="157" lineno="157" name="cooker"/>
                </Getattr>
              </Getattr>
            </CallFunc>
          </Assign>
          <Assign fromlineno="158" tolineno="158" lineno="158" targets="[&lt;AssName(localdata) l.158 [bb.shell] at Ox99293ec&gt;]" value="data.createCopy(cooker.configuration.data)">
            <AssName fromlineno="158" tolineno="158" lineno="158" name="localdata"/>
            <CallFunc fromlineno="158" tolineno="158" lineno="158" func="Getattr(createCopy)">
              <Getattr fromlineno="158" tolineno="158" lineno="158" attrname="createCopy" expr="data">
                <Name fromlineno="158" tolineno="158" lineno="158" name="data"/>
              </Getattr>
              <Getattr fromlineno="158" tolineno="158" lineno="158" attrname="data" expr="cooker.configuration">
                <Getattr fromlineno="158" tolineno="158" lineno="158" attrname="configuration" expr="cooker">
                  <Name fromlineno="158" tolineno="158" lineno="158" name="cooker"/>
                </Getattr>
              </Getattr>
            </CallFunc>
          </Assign>
          <Discard fromlineno="159" tolineno="159" lineno="159">
            <CallFunc fromlineno="159" tolineno="159" lineno="159" func="Getattr(update_data)">
              <Getattr fromlineno="159" tolineno="159" lineno="159" attrname="update_data" expr="data">
                <Name fromlineno="159" tolineno="159" lineno="159" name="data"/>
              </Getattr>
              <Name fromlineno="159" tolineno="159" lineno="159" name="localdata"/>
            </CallFunc>
          </Discard>
          <Discard fromlineno="160" tolineno="160" lineno="160">
            <CallFunc fromlineno="160" tolineno="160" lineno="160" func="Getattr(expandKeys)">
              <Getattr fromlineno="160" tolineno="160" lineno="160" attrname="expandKeys" expr="data">
                <Name fromlineno="160" tolineno="160" lineno="160" name="data"/>
              </Getattr>
              <Name fromlineno="160" tolineno="160" lineno="160" name="localdata"/>
            </CallFunc>
          </Discard>
          <TryExcept fromlineno="162" tolineno="190" lineno="162">
            <Assign fromlineno="163" tolineno="163" lineno="163" targets="[&lt;AssName(tasks) l.163 [bb.shell] at Ox992972c&gt;]" value="[]">
              <AssName fromlineno="163" tolineno="163" lineno="163" name="tasks"/>
              <List fromlineno="163" tolineno="163" lineno="163"/>
            </Assign>
            <For fromlineno="164" tolineno="171" lineno="164">
              <AssName fromlineno="164" tolineno="164" lineno="164" name="name"/>
              <Name fromlineno="164" tolineno="164" lineno="164" name="names"/>
              <Discard fromlineno="165" tolineno="165" lineno="165">
                <CallFunc fromlineno="165" tolineno="165" lineno="165" func="Getattr(add_provider)">
                  <Getattr fromlineno="165" tolineno="165" lineno="165" attrname="add_provider" expr="td">
                    <Name fromlineno="165" tolineno="165" lineno="165" name="td"/>
                  </Getattr>
                  <Name fromlineno="165" tolineno="165" lineno="165" name="localdata"/>
                  <Getattr fromlineno="165" tolineno="165" lineno="165" attrname="status" expr="cooker">
                    <Name fromlineno="165" tolineno="165" lineno="165" name="cooker"/>
                  </Getattr>
                  <Name fromlineno="165" tolineno="165" lineno="165" name="name"/>
                </CallFunc>
              </Discard>
              <Assign fromlineno="166" tolineno="166" lineno="166" targets="[&lt;AssName(providers) l.166 [bb.shell] at Ox99299cc&gt;]" value="td.get_provider(name)">
                <AssName fromlineno="166" tolineno="166" lineno="166" name="providers"/>
                <CallFunc fromlineno="166" tolineno="166" lineno="166" func="Getattr(get_provider)">
                  <Getattr fromlineno="166" tolineno="166" lineno="166" attrname="get_provider" expr="td">
                    <Name fromlineno="166" tolineno="166" lineno="166" name="td"/>
                  </Getattr>
                  <Name fromlineno="166" tolineno="166" lineno="166" name="name"/>
                </CallFunc>
              </Assign>
              <If fromlineno="168" tolineno="169" lineno="168">
                <Compare fromlineno="168" tolineno="168" lineno="168" op="('==', &lt;Const(int) l.168 [bb.shell] at Ox9929bac&gt;)">
                  <CallFunc fromlineno="168" tolineno="168" lineno="168" func="Name(len)">
                    <Name fromlineno="168" tolineno="168" lineno="168" name="len"/>
                    <Name fromlineno="168" tolineno="168" lineno="168" name="providers"/>
                  </CallFunc>
                  <Const fromlineno="168" tolineno="168" lineno="168" type="int">0</Const>
                </Compare>
                <Raise fromlineno="169" tolineno="169" lineno="169">
                  <Getattr fromlineno="169" tolineno="169" lineno="169" attrname="NoProvider" expr="Providers">
                    <Name fromlineno="169" tolineno="169" lineno="169" name="Providers"/>
                  </Getattr>
                </Raise>
              </If>
              <Discard fromlineno="171" tolineno="171" lineno="171">
                <CallFunc fromlineno="171" tolineno="171" lineno="171" func="Getattr(append)">
                  <Getattr fromlineno="171" tolineno="171" lineno="171" attrname="append" expr="tasks">
                    <Name fromlineno="171" tolineno="171" lineno="171" name="tasks"/>
                  </Getattr>
                  <List fromlineno="171" tolineno="171" lineno="171">
                    <Name fromlineno="171" tolineno="171" lineno="171" name="name"/>
                    <BinOp fromlineno="171" tolineno="171" lineno="171" op="%" left="'do_%s'" right="cooker.configuration.cmd">
                      <Const fromlineno="171" tolineno="171" lineno="171" type="str">'do_%s'</Const>
                      <Getattr fromlineno="171" tolineno="171" lineno="171" attrname="cmd" expr="cooker.configuration">
                        <Getattr fromlineno="171" tolineno="171" lineno="171" attrname="configuration" expr="cooker">
                          <Name fromlineno="171" tolineno="171" lineno="171" name="cooker"/>
                        </Getattr>
                      </Getattr>
                    </BinOp>
                  </List>
                </CallFunc>
              </Discard>
            </For>
            <Discard fromlineno="173" tolineno="173" lineno="173">
              <CallFunc fromlineno="173" tolineno="173" lineno="173" func="Getattr(add_unresolved)">
                <Getattr fromlineno="173" tolineno="173" lineno="173" attrname="add_unresolved" expr="td">
                  <Name fromlineno="173" tolineno="173" lineno="173" name="td"/>
                </Getattr>
                <Name fromlineno="173" tolineno="173" lineno="173" name="localdata"/>
                <Getattr fromlineno="173" tolineno="173" lineno="173" attrname="status" expr="cooker">
                  <Name fromlineno="173" tolineno="173" lineno="173" name="cooker"/>
                </Getattr>
              </CallFunc>
            </Discard>
            <Assign fromlineno="175" tolineno="175" lineno="175" targets="[&lt;AssName(rq) l.175 [bb.shell] at Ox9929f4c&gt;]" value="runqueue.RunQueue(cooker, localdata, cooker.status, td, tasks)">
              <AssName fromlineno="175" tolineno="175" lineno="175" name="rq"/>
              <CallFunc fromlineno="175" tolineno="175" lineno="175" func="Getattr(RunQueue)">
                <Getattr fromlineno="175" tolineno="175" lineno="175" attrname="RunQueue" expr="runqueue">
                  <Name fromlineno="175" tolineno="175" lineno="175" name="runqueue"/>
                </Getattr>
                <Name fromlineno="175" tolineno="175" lineno="175" name="cooker"/>
                <Name fromlineno="175" tolineno="175" lineno="175" name="localdata"/>
                <Getattr fromlineno="175" tolineno="175" lineno="175" attrname="status" expr="cooker">
                  <Name fromlineno="175" tolineno="175" lineno="175" name="cooker"/>
                </Getattr>
                <Name fromlineno="175" tolineno="175" lineno="175" name="td"/>
                <Name fromlineno="175" tolineno="175" lineno="175" name="tasks"/>
              </CallFunc>
            </Assign>
            <Discard fromlineno="176" tolineno="176" lineno="176">
              <CallFunc fromlineno="176" tolineno="176" lineno="176" func="Getattr(prepare_runqueue)">
                <Getattr fromlineno="176" tolineno="176" lineno="176" attrname="prepare_runqueue" expr="rq">
                  <Name fromlineno="176" tolineno="176" lineno="176" name="rq"/>
                </Getattr>
              </CallFunc>
            </Discard>
            <Discard fromlineno="177" tolineno="177" lineno="177">
              <CallFunc fromlineno="177" tolineno="177" lineno="177" func="Getattr(execute_runqueue)">
                <Getattr fromlineno="177" tolineno="177" lineno="177" attrname="execute_runqueue" expr="rq">
                  <Name fromlineno="177" tolineno="177" lineno="177" name="rq"/>
                </Getattr>
              </CallFunc>
            </Discard>
            <ExceptHandler fromlineno="179" tolineno="181" lineno="179">
              <Getattr fromlineno="179" tolineno="179" lineno="179" attrname="NoProvider" expr="Providers">
                <Name fromlineno="179" tolineno="179" lineno="179" name="Providers"/>
              </Getattr>
              <Print fromlineno="180" tolineno="180" lineno="180">
                <Const fromlineno="180" tolineno="180" lineno="180" type="str">'ERROR: No Provider'</Const>
              </Print>
              <Assign fromlineno="181" tolineno="181" lineno="181" targets="[&lt;AssName(last_exception) l.181 [bb.shell] at Ox992d38c&gt;]" value="Providers.NoProvider">
                <AssName fromlineno="181" tolineno="181" lineno="181" name="last_exception"/>
                <Getattr fromlineno="181" tolineno="181" lineno="181" attrname="NoProvider" expr="Providers">
                  <Name fromlineno="181" tolineno="181" lineno="181" name="Providers"/>
                </Getattr>
              </Assign>
            </ExceptHandler>
            <ExceptHandler fromlineno="183" tolineno="186" lineno="183">
              <Getattr fromlineno="183" tolineno="183" lineno="183" attrname="TaskFailure" expr="runqueue">
                <Name fromlineno="183" tolineno="183" lineno="183" name="runqueue"/>
              </Getattr>
              <AssName fromlineno="183" tolineno="183" lineno="183" name="fnids"/>
              <For fromlineno="184" tolineno="185" lineno="184">
                <AssName fromlineno="184" tolineno="184" lineno="184" name="fnid"/>
                <Name fromlineno="184" tolineno="184" lineno="184" name="fnids"/>
                <Print fromlineno="185" tolineno="185" lineno="185">
                  <BinOp fromlineno="185" tolineno="185" lineno="185" op="%" left="&quot;ERROR: '%s' failed&quot;" right="td.fn_index[fnid]">
                    <Const fromlineno="185" tolineno="185" lineno="185" type="str">"ERROR: '%s' failed"</Const>
                    <Subscript fromlineno="185" tolineno="185" lineno="185">
                      <Getattr fromlineno="185" tolineno="185" lineno="185" attrname="fn_index" expr="td">
                        <Name fromlineno="185" tolineno="185" lineno="185" name="td"/>
                      </Getattr>
                      <Index fromlineno="185" tolineno="185" lineno="None">
                        <Name fromlineno="185" tolineno="185" lineno="185" name="fnid"/>
                      </Index>
                    </Subscript>
                  </BinOp>
                </Print>
              </For>
              <Assign fromlineno="186" tolineno="186" lineno="186" targets="[&lt;AssName(last_exception) l.186 [bb.shell] at Ox992d6cc&gt;]" value="runqueue.TaskFailure">
                <AssName fromlineno="186" tolineno="186" lineno="186" name="last_exception"/>
                <Getattr fromlineno="186" tolineno="186" lineno="186" attrname="TaskFailure" expr="runqueue">
                  <Name fromlineno="186" tolineno="186" lineno="186" name="runqueue"/>
                </Getattr>
              </Assign>
            </ExceptHandler>
            <ExceptHandler fromlineno="188" tolineno="190" lineno="188">
              <Getattr fromlineno="188" tolineno="188" lineno="188" attrname="EventException" expr="build">
                <Name fromlineno="188" tolineno="188" lineno="188" name="build"/>
              </Getattr>
              <AssName fromlineno="188" tolineno="188" lineno="188" name="e"/>
              <Print fromlineno="189" tolineno="189" lineno="189">
                <BinOp fromlineno="189" tolineno="189" lineno="189" op="%" left="&quot;ERROR: Couldn't build '%s'&quot;" right="names">
                  <Const fromlineno="189" tolineno="189" lineno="189" type="str">"ERROR: Couldn't build '%s'"</Const>
                  <Name fromlineno="189" tolineno="189" lineno="189" name="names"/>
                </BinOp>
              </Print>
              <Assign fromlineno="190" tolineno="190" lineno="190" targets="[&lt;AssName(last_exception) l.190 [bb.shell] at Ox992d8cc&gt;]" value="e">
                <AssName fromlineno="190" tolineno="190" lineno="190" name="last_exception"/>
                <Name fromlineno="190" tolineno="190" lineno="190" name="e"/>
              </Assign>
            </ExceptHandler>
          </TryExcept>
          <Assign fromlineno="192" tolineno="192" lineno="192" targets="[&lt;AssAttr(cmd) l.192 [bb.shell] at Ox992d92c&gt;]" value="oldcmd">
            <AssAttr fromlineno="192" tolineno="192" lineno="192" attrname="cmd" expr="cooker.configuration">
              <Getattr fromlineno="192" tolineno="192" lineno="192" attrname="configuration" expr="cooker">
                <Name fromlineno="192" tolineno="192" lineno="192" name="cooker"/>
              </Getattr>
            </AssAttr>
            <Name fromlineno="192" tolineno="192" lineno="192" name="oldcmd"/>
          </Assign>
        </Function>
        <Assign fromlineno="194" tolineno="194" lineno="194" targets="[&lt;AssAttr(usage) l.194 [bb.shell] at Ox992d9ac&gt;]" value="'&lt;providee&gt;'">
          <AssAttr fromlineno="194" tolineno="194" lineno="194" attrname="usage" expr="build">
            <Name fromlineno="194" tolineno="194" lineno="194" name="build"/>
          </AssAttr>
          <Const fromlineno="194" tolineno="194" lineno="194" type="str">'&lt;providee&gt;'</Const>
        </Assign>
        <Function fromlineno="196" tolineno="198" lineno="196">
          <Arguments fromlineno="196" tolineno="196" lineno="None" format_args="self, params">
            <AssName fromlineno="196" tolineno="196" lineno="196" name="self"/>
            <AssName fromlineno="196" tolineno="196" lineno="196" name="params"/>
          </Arguments>
          <Discard fromlineno="198" tolineno="198" lineno="198">
            <CallFunc fromlineno="198" tolineno="198" lineno="198" func="Getattr(build)">
              <Getattr fromlineno="198" tolineno="198" lineno="198" attrname="build" expr="self">
                <Name fromlineno="198" tolineno="198" lineno="198" name="self"/>
              </Getattr>
              <Name fromlineno="198" tolineno="198" lineno="198" name="params"/>
              <Const fromlineno="198" tolineno="198" lineno="198" type="str">'clean'</Const>
            </CallFunc>
          </Discard>
        </Function>
        <Assign fromlineno="199" tolineno="199" lineno="199" targets="[&lt;AssAttr(usage) l.199 [bb.shell] at Ox992dc2c&gt;]" value="'&lt;providee&gt;'">
          <AssAttr fromlineno="199" tolineno="199" lineno="199" attrname="usage" expr="clean">
            <Name fromlineno="199" tolineno="199" lineno="199" name="clean"/>
          </AssAttr>
          <Const fromlineno="199" tolineno="199" lineno="199" type="str">'&lt;providee&gt;'</Const>
        </Assign>
        <Function fromlineno="201" tolineno="203" lineno="201">
          <Arguments fromlineno="201" tolineno="201" lineno="None" format_args="self, params">
            <AssName fromlineno="201" tolineno="201" lineno="201" name="self"/>
            <AssName fromlineno="201" tolineno="201" lineno="201" name="params"/>
          </Arguments>
          <Discard fromlineno="203" tolineno="203" lineno="203">
            <CallFunc fromlineno="203" tolineno="203" lineno="203" func="Getattr(build)">
              <Getattr fromlineno="203" tolineno="203" lineno="203" attrname="build" expr="self">
                <Name fromlineno="203" tolineno="203" lineno="203" name="self"/>
              </Getattr>
              <Name fromlineno="203" tolineno="203" lineno="203" name="params"/>
              <Const fromlineno="203" tolineno="203" lineno="203" type="str">'compile'</Const>
            </CallFunc>
          </Discard>
        </Function>
        <Assign fromlineno="204" tolineno="204" lineno="204" targets="[&lt;AssAttr(usage) l.204 [bb.shell] at Ox992deac&gt;]" value="'&lt;providee&gt;'">
          <AssAttr fromlineno="204" tolineno="204" lineno="204" attrname="usage" expr="compile">
            <Name fromlineno="204" tolineno="204" lineno="204" name="compile"/>
          </AssAttr>
          <Const fromlineno="204" tolineno="204" lineno="204" type="str">'&lt;providee&gt;'</Const>
        </Assign>
        <Function fromlineno="206" tolineno="208" lineno="206">
          <Arguments fromlineno="206" tolineno="206" lineno="None" format_args="self, params">
            <AssName fromlineno="206" tolineno="206" lineno="206" name="self"/>
            <AssName fromlineno="206" tolineno="206" lineno="206" name="params"/>
          </Arguments>
          <Discard fromlineno="208" tolineno="208" lineno="208">
            <CallFunc fromlineno="208" tolineno="208" lineno="208" func="Getattr(build)">
              <Getattr fromlineno="208" tolineno="208" lineno="208" attrname="build" expr="self">
                <Name fromlineno="208" tolineno="208" lineno="208" name="self"/>
              </Getattr>
              <Name fromlineno="208" tolineno="208" lineno="208" name="params"/>
              <Const fromlineno="208" tolineno="208" lineno="208" type="str">'configure'</Const>
            </CallFunc>
          </Discard>
        </Function>
        <Assign fromlineno="209" tolineno="209" lineno="209" targets="[&lt;AssAttr(usage) l.209 [bb.shell] at Ox993114c&gt;]" value="'&lt;providee&gt;'">
          <AssAttr fromlineno="209" tolineno="209" lineno="209" attrname="usage" expr="configure">
            <Name fromlineno="209" tolineno="209" lineno="209" name="configure"/>
          </AssAttr>
          <Const fromlineno="209" tolineno="209" lineno="209" type="str">'&lt;providee&gt;'</Const>
        </Assign>
        <Function fromlineno="211" tolineno="213" lineno="211">
          <Arguments fromlineno="211" tolineno="211" lineno="None" format_args="self, params">
            <AssName fromlineno="211" tolineno="211" lineno="211" name="self"/>
            <AssName fromlineno="211" tolineno="211" lineno="211" name="params"/>
          </Arguments>
          <Discard fromlineno="213" tolineno="213" lineno="213">
            <CallFunc fromlineno="213" tolineno="213" lineno="213" func="Getattr(build)">
              <Getattr fromlineno="213" tolineno="213" lineno="213" attrname="build" expr="self">
                <Name fromlineno="213" tolineno="213" lineno="213" name="self"/>
              </Getattr>
              <Name fromlineno="213" tolineno="213" lineno="213" name="params"/>
              <Const fromlineno="213" tolineno="213" lineno="213" type="str">'devshell'</Const>
            </CallFunc>
          </Discard>
        </Function>
        <Assign fromlineno="214" tolineno="214" lineno="214" targets="[&lt;AssAttr(usage) l.214 [bb.shell] at Ox99313cc&gt;]" value="'&lt;providee&gt;'">
          <AssAttr fromlineno="214" tolineno="214" lineno="214" attrname="usage" expr="devshell">
            <Name fromlineno="214" tolineno="214" lineno="214" name="devshell"/>
          </AssAttr>
          <Const fromlineno="214" tolineno="214" lineno="214" type="str">'&lt;providee&gt;'</Const>
        </Assign>
        <Function fromlineno="216" tolineno="223" lineno="216">
          <Arguments fromlineno="216" tolineno="216" lineno="None" format_args="self, params">
            <AssName fromlineno="216" tolineno="216" lineno="216" name="self"/>
            <AssName fromlineno="216" tolineno="216" lineno="216" name="params"/>
          </Arguments>
          <Assign fromlineno="218" tolineno="218" lineno="218" targets="[&lt;AssName(name) l.218 [bb.shell] at Ox993158c&gt;]" value="params[0]">
            <AssName fromlineno="218" tolineno="218" lineno="218" name="name"/>
            <Subscript fromlineno="218" tolineno="218" lineno="218">
              <Name fromlineno="218" tolineno="218" lineno="218" name="params"/>
              <Index fromlineno="218" tolineno="218" lineno="None">
                <Const fromlineno="218" tolineno="218" lineno="218" type="int">0</Const>
              </Index>
            </Subscript>
          </Assign>
          <Assign fromlineno="219" tolineno="219" lineno="219" targets="[&lt;AssName(bbfile) l.219 [bb.shell] at Ox993168c&gt;]" value="self._findProvider(name)">
            <AssName fromlineno="219" tolineno="219" lineno="219" name="bbfile"/>
            <CallFunc fromlineno="219" tolineno="219" lineno="219" func="Getattr(_findProvider)">
              <Getattr fromlineno="219" tolineno="219" lineno="219" attrname="_findProvider" expr="self">
                <Name fromlineno="219" tolineno="219" lineno="219" name="self"/>
              </Getattr>
              <Name fromlineno="219" tolineno="219" lineno="219" name="name"/>
            </CallFunc>
          </Assign>
          <If fromlineno="220" tolineno="223" lineno="220">
            <Compare fromlineno="220" tolineno="220" lineno="220" op="('is not', &lt;Const(NoneType) l.220 [bb.shell] at Ox993180c&gt;)">
              <Name fromlineno="220" tolineno="220" lineno="220" name="bbfile"/>
              <Const fromlineno="220" tolineno="220" lineno="220" type="NoneType">None</Const>
            </Compare>
            <Discard fromlineno="221" tolineno="221" lineno="221">
              <CallFunc fromlineno="221" tolineno="221" lineno="221" func="Getattr(system)">
                <Getattr fromlineno="221" tolineno="221" lineno="221" attrname="system" expr="os">
                  <Name fromlineno="221" tolineno="221" lineno="221" name="os"/>
                </Getattr>
                <BinOp fromlineno="221" tolineno="221" lineno="221" op="%" left="'%s %s'" right="(os.environ.get('EDITOR', 'vi'), bbfile)">
                  <Const fromlineno="221" tolineno="221" lineno="221" type="str">'%s %s'</Const>
                  <Tuple fromlineno="221" tolineno="221" lineno="221">
                    <CallFunc fromlineno="221" tolineno="221" lineno="221" func="Getattr(get)">
                      <Getattr fromlineno="221" tolineno="221" lineno="221" attrname="get" expr="os.environ">
                        <Getattr fromlineno="221" tolineno="221" lineno="221" attrname="environ" expr="os">
                          <Name fromlineno="221" tolineno="221" lineno="221" name="os"/>
                        </Getattr>
                      </Getattr>
                      <Const fromlineno="221" tolineno="221" lineno="221" type="str">'EDITOR'</Const>
                      <Const fromlineno="221" tolineno="221" lineno="221" type="str">'vi'</Const>
                    </CallFunc>
                    <Name fromlineno="221" tolineno="221" lineno="221" name="bbfile"/>
                  </Tuple>
                </BinOp>
              </CallFunc>
            </Discard>
            <Print fromlineno="223" tolineno="223" lineno="223">
              <BinOp fromlineno="223" tolineno="223" lineno="223" op="%" left="&quot;ERROR: Nothing provides '%s'&quot;" right="name">
                <Const fromlineno="223" tolineno="223" lineno="223" type="str">"ERROR: Nothing provides '%s'"</Const>
                <Name fromlineno="223" tolineno="223" lineno="223" name="name"/>
              </BinOp>
            </Print>
          </If>
        </Function>
        <Assign fromlineno="224" tolineno="224" lineno="224" targets="[&lt;AssAttr(usage) l.224 [bb.shell] at Ox9931b4c&gt;]" value="'&lt;providee&gt;'">
          <AssAttr fromlineno="224" tolineno="224" lineno="224" attrname="usage" expr="edit">
            <Name fromlineno="224" tolineno="224" lineno="224" name="edit"/>
          </AssAttr>
          <Const fromlineno="224" tolineno="224" lineno="224" type="str">'&lt;providee&gt;'</Const>
        </Assign>
        <Function fromlineno="226" tolineno="228" lineno="226">
          <Arguments fromlineno="226" tolineno="226" lineno="None" format_args="self, params">
            <AssName fromlineno="226" tolineno="226" lineno="226" name="self"/>
            <AssName fromlineno="226" tolineno="226" lineno="226" name="params"/>
          </Arguments>
          <Discard fromlineno="228" tolineno="228" lineno="228">
            <CallFunc fromlineno="228" tolineno="228" lineno="228" func="Getattr(showEnvironment)">
              <Getattr fromlineno="228" tolineno="228" lineno="228" attrname="showEnvironment" expr="cooker">
                <Name fromlineno="228" tolineno="228" lineno="228" name="cooker"/>
              </Getattr>
            </CallFunc>
          </Discard>
        </Function>
        <Function fromlineno="230" tolineno="234" lineno="230">
          <Arguments fromlineno="230" tolineno="230" lineno="None" format_args="self, params">
            <AssName fromlineno="230" tolineno="230" lineno="230" name="self"/>
            <AssName fromlineno="230" tolineno="230" lineno="230" name="params"/>
          </Arguments>
          <Discard fromlineno="232" tolineno="232" lineno="232">
            <CallFunc fromlineno="232" tolineno="232" lineno="232" func="Name(debugOut)">
              <Name fromlineno="232" tolineno="232" lineno="232" name="debugOut"/>
              <Const fromlineno="232" tolineno="232" lineno="232" type="str">'setting leave_mainloop to true'</Const>
            </CallFunc>
          </Discard>
          <Global fromlineno="233" tolineno="233" lineno="233"/>
          <Assign fromlineno="234" tolineno="234" lineno="234" targets="[&lt;AssName(leave_mainloop) l.234 [bb.shell] at Ox9931f8c&gt;]" value="True">
            <AssName fromlineno="234" tolineno="234" lineno="234" name="leave_mainloop"/>
            <Const fromlineno="234" tolineno="234" lineno="234" type="bool">True</Const>
          </Assign>
        </Function>
        <Function fromlineno="236" tolineno="238" lineno="236">
          <Arguments fromlineno="236" tolineno="236" lineno="None" format_args="self, params">
            <AssName fromlineno="236" tolineno="236" lineno="236" name="self"/>
            <AssName fromlineno="236" tolineno="236" lineno="236" name="params"/>
          </Arguments>
          <Discard fromlineno="238" tolineno="238" lineno="238">
            <CallFunc fromlineno="238" tolineno="238" lineno="238" func="Getattr(build)">
              <Getattr fromlineno="238" tolineno="238" lineno="238" attrname="build" expr="self">
                <Name fromlineno="238" tolineno="238" lineno="238" name="self"/>
              </Getattr>
              <Name fromlineno="238" tolineno="238" lineno="238" name="params"/>
              <Const fromlineno="238" tolineno="238" lineno="238" type="str">'fetch'</Const>
            </CallFunc>
          </Discard>
        </Function>
        <Assign fromlineno="239" tolineno="239" lineno="239" targets="[&lt;AssAttr(usage) l.239 [bb.shell] at Ox99351cc&gt;]" value="'&lt;providee&gt;'">
          <AssAttr fromlineno="239" tolineno="239" lineno="239" attrname="usage" expr="fetch">
            <Name fromlineno="239" tolineno="239" lineno="239" name="fetch"/>
          </AssAttr>
          <Const fromlineno="239" tolineno="239" lineno="239" type="str">'&lt;providee&gt;'</Const>
        </Assign>
        <Function fromlineno="241" tolineno="259" lineno="241">
          <Arguments fromlineno="241" tolineno="241" lineno="None" format_args="self, params, cmd='build'">
            <AssName fromlineno="241" tolineno="241" lineno="241" name="self"/>
            <AssName fromlineno="241" tolineno="241" lineno="241" name="params"/>
            <AssName fromlineno="241" tolineno="241" lineno="241" name="cmd"/>
            <Const fromlineno="241" tolineno="241" lineno="241" type="str">'build'</Const>
          </Arguments>
          <Global fromlineno="243" tolineno="243" lineno="243"/>
          <Assign fromlineno="244" tolineno="244" lineno="244" targets="[&lt;AssName(name) l.244 [bb.shell] at Ox993542c&gt;]" value="params[0]">
            <AssName fromlineno="244" tolineno="244" lineno="244" name="name"/>
            <Subscript fromlineno="244" tolineno="244" lineno="244">
              <Name fromlineno="244" tolineno="244" lineno="244" name="params"/>
              <Index fromlineno="244" tolineno="244" lineno="None">
                <Const fromlineno="244" tolineno="244" lineno="244" type="int">0</Const>
              </Index>
            </Subscript>
          </Assign>
          <Assign fromlineno="245" tolineno="245" lineno="245" targets="[&lt;AssName(bf) l.245 [bb.shell] at Ox993552c&gt;]" value="completeFilePath(name)">
            <AssName fromlineno="245" tolineno="245" lineno="245" name="bf"/>
            <CallFunc fromlineno="245" tolineno="245" lineno="245" func="Name(completeFilePath)">
              <Name fromlineno="245" tolineno="245" lineno="245" name="completeFilePath"/>
              <Name fromlineno="245" tolineno="245" lineno="245" name="name"/>
            </CallFunc>
          </Assign>
          <Print fromlineno="246" tolineno="246" lineno="246">
            <BinOp fromlineno="246" tolineno="246" lineno="246" op="%" left="&quot;SHELL: Calling '%s' on '%s'&quot;" right="(cmd, bf)">
              <Const fromlineno="246" tolineno="246" lineno="246" type="str">"SHELL: Calling '%s' on '%s'"</Const>
              <Tuple fromlineno="246" tolineno="246" lineno="246">
                <Name fromlineno="246" tolineno="246" lineno="246" name="cmd"/>
                <Name fromlineno="246" tolineno="246" lineno="246" name="bf"/>
              </Tuple>
            </BinOp>
          </Print>
          <Assign fromlineno="248" tolineno="248" lineno="248" targets="[&lt;AssName(oldcmd) l.248 [bb.shell] at Ox993572c&gt;]" value="cooker.configuration.cmd">
            <AssName fromlineno="248" tolineno="248" lineno="248" name="oldcmd"/>
            <Getattr fromlineno="248" tolineno="248" lineno="248" attrname="cmd" expr="cooker.configuration">
              <Getattr fromlineno="248" tolineno="248" lineno="248" attrname="configuration" expr="cooker">
                <Name fromlineno="248" tolineno="248" lineno="248" name="cooker"/>
              </Getattr>
            </Getattr>
          </Assign>
          <Assign fromlineno="249" tolineno="249" lineno="249" targets="[&lt;AssAttr(cmd) l.249 [bb.shell] at Ox993580c&gt;]" value="cmd">
            <AssAttr fromlineno="249" tolineno="249" lineno="249" attrname="cmd" expr="cooker.configuration">
              <Getattr fromlineno="249" tolineno="249" lineno="249" attrname="configuration" expr="cooker">
                <Name fromlineno="249" tolineno="249" lineno="249" name="cooker"/>
              </Getattr>
            </AssAttr>
            <Name fromlineno="249" tolineno="249" lineno="249" name="cmd"/>
          </Assign>
          <TryExcept fromlineno="251" tolineno="257" lineno="251">
            <Discard fromlineno="252" tolineno="252" lineno="252">
              <CallFunc fromlineno="252" tolineno="252" lineno="252" func="Getattr(buildFile)">
                <Getattr fromlineno="252" tolineno="252" lineno="252" attrname="buildFile" expr="cooker">
                  <Name fromlineno="252" tolineno="252" lineno="252" name="cooker"/>
                </Getattr>
                <Name fromlineno="252" tolineno="252" lineno="252" name="bf"/>
              </CallFunc>
            </Discard>
            <ExceptHandler fromlineno="253" tolineno="254" lineno="253">
              <Getattr fromlineno="253" tolineno="253" lineno="253" attrname="ParseError" expr="parse">
                <Name fromlineno="253" tolineno="253" lineno="253" name="parse"/>
              </Getattr>
              <Print fromlineno="254" tolineno="254" lineno="254">
                <BinOp fromlineno="254" tolineno="254" lineno="254" op="%" left="&quot;ERROR: Unable to open or parse '%s'&quot;" right="bf">
                  <Const fromlineno="254" tolineno="254" lineno="254" type="str">"ERROR: Unable to open or parse '%s'"</Const>
                  <Name fromlineno="254" tolineno="254" lineno="254" name="bf"/>
                </BinOp>
              </Print>
            </ExceptHandler>
            <ExceptHandler fromlineno="255" tolineno="257" lineno="255">
              <Getattr fromlineno="255" tolineno="255" lineno="255" attrname="EventException" expr="build">
                <Name fromlineno="255" tolineno="255" lineno="255" name="build"/>
              </Getattr>
              <AssName fromlineno="255" tolineno="255" lineno="255" name="e"/>
              <Print fromlineno="256" tolineno="256" lineno="256">
                <BinOp fromlineno="256" tolineno="256" lineno="256" op="%" left="&quot;ERROR: Couldn't build '%s'&quot;" right="name">
                  <Const fromlineno="256" tolineno="256" lineno="256" type="str">"ERROR: Couldn't build '%s'"</Const>
                  <Name fromlineno="256" tolineno="256" lineno="256" name="name"/>
                </BinOp>
              </Print>
              <Assign fromlineno="257" tolineno="257" lineno="257" targets="[&lt;AssName(last_exception) l.257 [bb.shell] at Ox9935cac&gt;]" value="e">
                <AssName fromlineno="257" tolineno="257" lineno="257" name="last_exception"/>
                <Name fromlineno="257" tolineno="257" lineno="257" name="e"/>
              </Assign>
            </ExceptHandler>
          </TryExcept>
          <Assign fromlineno="259" tolineno="259" lineno="259" targets="[&lt;AssAttr(cmd) l.259 [bb.shell] at Ox9935d0c&gt;]" value="oldcmd">
            <AssAttr fromlineno="259" tolineno="259" lineno="259" attrname="cmd" expr="cooker.configuration">
              <Getattr fromlineno="259" tolineno="259" lineno="259" attrname="configuration" expr="cooker">
                <Name fromlineno="259" tolineno="259" lineno="259" name="cooker"/>
              </Getattr>
            </AssAttr>
            <Name fromlineno="259" tolineno="259" lineno="259" name="oldcmd"/>
          </Assign>
        </Function>
        <Assign fromlineno="260" tolineno="260" lineno="260" targets="[&lt;AssAttr(usage) l.260 [bb.shell] at Ox9935d8c&gt;]" value="'&lt;bbfile&gt;'">
          <AssAttr fromlineno="260" tolineno="260" lineno="260" attrname="usage" expr="fileBuild">
            <Name fromlineno="260" tolineno="260" lineno="260" name="fileBuild"/>
          </AssAttr>
          <Const fromlineno="260" tolineno="260" lineno="260" type="str">'&lt;bbfile&gt;'</Const>
        </Assign>
        <Function fromlineno="262" tolineno="264" lineno="262">
          <Arguments fromlineno="262" tolineno="262" lineno="None" format_args="self, params">
            <AssName fromlineno="262" tolineno="262" lineno="262" name="self"/>
            <AssName fromlineno="262" tolineno="262" lineno="262" name="params"/>
          </Arguments>
          <Discard fromlineno="264" tolineno="264" lineno="264">
            <CallFunc fromlineno="264" tolineno="264" lineno="264" func="Getattr(fileBuild)">
              <Getattr fromlineno="264" tolineno="264" lineno="264" attrname="fileBuild" expr="self">
                <Name fromlineno="264" tolineno="264" lineno="264" name="self"/>
              </Getattr>
              <Name fromlineno="264" tolineno="264" lineno="264" name="params"/>
              <Const fromlineno="264" tolineno="264" lineno="264" type="str">'clean'</Const>
            </CallFunc>
          </Discard>
        </Function>
        <Assign fromlineno="265" tolineno="265" lineno="265" targets="[&lt;AssAttr(usage) l.265 [bb.shell] at Ox993902c&gt;]" value="'&lt;bbfile&gt;'">
          <AssAttr fromlineno="265" tolineno="265" lineno="265" attrname="usage" expr="fileClean">
            <Name fromlineno="265" tolineno="265" lineno="265" name="fileClean"/>
          </AssAttr>
          <Const fromlineno="265" tolineno="265" lineno="265" type="str">'&lt;bbfile&gt;'</Const>
        </Assign>
        <Function fromlineno="267" tolineno="270" lineno="267">
          <Arguments fromlineno="267" tolineno="267" lineno="None" format_args="self, params">
            <AssName fromlineno="267" tolineno="267" lineno="267" name="self"/>
            <AssName fromlineno="267" tolineno="267" lineno="267" name="params"/>
          </Arguments>
          <Assign fromlineno="269" tolineno="269" lineno="269" targets="[&lt;AssName(name) l.269 [bb.shell] at Ox99391ec&gt;]" value="params[0]">
            <AssName fromlineno="269" tolineno="269" lineno="269" name="name"/>
            <Subscript fromlineno="269" tolineno="269" lineno="269">
              <Name fromlineno="269" tolineno="269" lineno="269" name="params"/>
              <Index fromlineno="269" tolineno="269" lineno="None">
                <Const fromlineno="269" tolineno="269" lineno="269" type="int">0</Const>
              </Index>
            </Subscript>
          </Assign>
          <Discard fromlineno="270" tolineno="270" lineno="270">
            <CallFunc fromlineno="270" tolineno="270" lineno="270" func="Getattr(system)">
              <Getattr fromlineno="270" tolineno="270" lineno="270" attrname="system" expr="os">
                <Name fromlineno="270" tolineno="270" lineno="270" name="os"/>
              </Getattr>
              <BinOp fromlineno="270" tolineno="270" lineno="270" op="%" left="'%s %s'" right="(os.environ.get('EDITOR', 'vi'), completeFilePath(name))">
                <Const fromlineno="270" tolineno="270" lineno="270" type="str">'%s %s'</Const>
                <Tuple fromlineno="270" tolineno="270" lineno="270">
                  <CallFunc fromlineno="270" tolineno="270" lineno="270" func="Getattr(get)">
                    <Getattr fromlineno="270" tolineno="270" lineno="270" attrname="get" expr="os.environ">
                      <Getattr fromlineno="270" tolineno="270" lineno="270" attrname="environ" expr="os">
                        <Name fromlineno="270" tolineno="270" lineno="270" name="os"/>
                      </Getattr>
                    </Getattr>
                    <Const fromlineno="270" tolineno="270" lineno="270" type="str">'EDITOR'</Const>
                    <Const fromlineno="270" tolineno="270" lineno="270" type="str">'vi'</Const>
                  </CallFunc>
                  <CallFunc fromlineno="270" tolineno="270" lineno="270" func="Name(completeFilePath)">
                    <Name fromlineno="270" tolineno="270" lineno="270" name="completeFilePath"/>
                    <Name fromlineno="270" tolineno="270" lineno="270" name="name"/>
                  </CallFunc>
                </Tuple>
              </BinOp>
            </CallFunc>
          </Discard>
        </Function>
        <Assign fromlineno="271" tolineno="271" lineno="271" targets="[&lt;AssAttr(usage) l.271 [bb.shell] at Ox993952c&gt;]" value="'&lt;bbfile&gt;'">
          <AssAttr fromlineno="271" tolineno="271" lineno="271" attrname="usage" expr="fileEdit">
            <Name fromlineno="271" tolineno="271" lineno="271" name="fileEdit"/>
          </AssAttr>
          <Const fromlineno="271" tolineno="271" lineno="271" type="str">'&lt;bbfile&gt;'</Const>
        </Assign>
        <Function fromlineno="273" tolineno="275" lineno="273">
          <Arguments fromlineno="273" tolineno="273" lineno="None" format_args="self, params">
            <AssName fromlineno="273" tolineno="273" lineno="273" name="self"/>
            <AssName fromlineno="273" tolineno="273" lineno="273" name="params"/>
          </Arguments>
          <Discard fromlineno="275" tolineno="275" lineno="275">
            <CallFunc fromlineno="275" tolineno="275" lineno="275" func="Getattr(fileBuild)">
              <Getattr fromlineno="275" tolineno="275" lineno="275" attrname="fileBuild" expr="self">
                <Name fromlineno="275" tolineno="275" lineno="275" name="self"/>
              </Getattr>
              <Name fromlineno="275" tolineno="275" lineno="275" name="params"/>
              <Const fromlineno="275" tolineno="275" lineno="275" type="str">'rebuild'</Const>
            </CallFunc>
          </Discard>
        </Function>
        <Assign fromlineno="276" tolineno="276" lineno="276" targets="[&lt;AssAttr(usage) l.276 [bb.shell] at Ox99397cc&gt;]" value="'&lt;bbfile&gt;'">
          <AssAttr fromlineno="276" tolineno="276" lineno="276" attrname="usage" expr="fileRebuild">
            <Name fromlineno="276" tolineno="276" lineno="276" name="fileRebuild"/>
          </AssAttr>
          <Const fromlineno="276" tolineno="276" lineno="276" type="str">'&lt;bbfile&gt;'</Const>
        </Assign>
        <Function fromlineno="278" tolineno="289" lineno="278">
          <Arguments fromlineno="278" tolineno="278" lineno="None" format_args="self, params">
            <AssName fromlineno="278" tolineno="278" lineno="278" name="self"/>
            <AssName fromlineno="278" tolineno="278" lineno="278" name="params"/>
          </Arguments>
          <Assign fromlineno="280" tolineno="280" lineno="280" targets="[&lt;AssName(bbfile) l.280 [bb.shell] at Ox993998c&gt;]" value="params[0]">
            <AssName fromlineno="280" tolineno="280" lineno="280" name="bbfile"/>
            <Subscript fromlineno="280" tolineno="280" lineno="280">
              <Name fromlineno="280" tolineno="280" lineno="280" name="params"/>
              <Index fromlineno="280" tolineno="280" lineno="None">
                <Const fromlineno="280" tolineno="280" lineno="280" type="int">0</Const>
              </Index>
            </Subscript>
          </Assign>
          <Print fromlineno="281" tolineno="281" lineno="281">
            <BinOp fromlineno="281" tolineno="281" lineno="281" op="%" left="&quot;SHELL: Parsing '%s'&quot;" right="bbfile">
              <Const fromlineno="281" tolineno="281" lineno="281" type="str">"SHELL: Parsing '%s'"</Const>
              <Name fromlineno="281" tolineno="281" lineno="281" name="bbfile"/>
            </BinOp>
          </Print>
          <Discard fromlineno="282" tolineno="282" lineno="282">
            <CallFunc fromlineno="282" tolineno="282" lineno="282" func="Getattr(update_mtime)">
              <Getattr fromlineno="282" tolineno="282" lineno="282" attrname="update_mtime" expr="parse">
                <Name fromlineno="282" tolineno="282" lineno="282" name="parse"/>
              </Getattr>
              <Name fromlineno="282" tolineno="282" lineno="282" name="bbfile"/>
            </CallFunc>
          </Discard>
          <Discard fromlineno="283" tolineno="283" lineno="283">
            <CallFunc fromlineno="283" tolineno="283" lineno="283" func="Getattr(cacheValidUpdate)">
              <Getattr fromlineno="283" tolineno="283" lineno="283" attrname="cacheValidUpdate" expr="cooker.bb_cache">
                <Getattr fromlineno="283" tolineno="283" lineno="283" attrname="bb_cache" expr="cooker">
                  <Name fromlineno="283" tolineno="283" lineno="283" name="cooker"/>
                </Getattr>
              </Getattr>
              <Name fromlineno="283" tolineno="283" lineno="283" name="bbfile"/>
            </CallFunc>
          </Discard>
          <Assign fromlineno="284" tolineno="284" lineno="284" targets="[&lt;AssName(fromCache) l.284 [bb.shell] at Ox9939ccc&gt;]" value="cooker.bb_cache.loadData(bbfile, cooker.configuration.data, cooker.status)">
            <AssName fromlineno="284" tolineno="284" lineno="284" name="fromCache"/>
            <CallFunc fromlineno="284" tolineno="284" lineno="284" func="Getattr(loadData)">
              <Getattr fromlineno="284" tolineno="284" lineno="284" attrname="loadData" expr="cooker.bb_cache">
                <Getattr fromlineno="284" tolineno="284" lineno="284" attrname="bb_cache" expr="cooker">
                  <Name fromlineno="284" tolineno="284" lineno="284" name="cooker"/>
                </Getattr>
              </Getattr>
              <Name fromlineno="284" tolineno="284" lineno="284" name="bbfile"/>
              <Getattr fromlineno="284" tolineno="284" lineno="284" attrname="data" expr="cooker.configuration">
                <Getattr fromlineno="284" tolineno="284" lineno="284" attrname="configuration" expr="cooker">
                  <Name fromlineno="284" tolineno="284" lineno="284" name="cooker"/>
                </Getattr>
              </Getattr>
              <Getattr fromlineno="284" tolineno="284" lineno="284" attrname="status" expr="cooker">
                <Name fromlineno="284" tolineno="284" lineno="284" name="cooker"/>
              </Getattr>
            </CallFunc>
          </Assign>
          <Discard fromlineno="285" tolineno="285" lineno="285">
            <CallFunc fromlineno="285" tolineno="285" lineno="285" func="Getattr(sync)">
              <Getattr fromlineno="285" tolineno="285" lineno="285" attrname="sync" expr="cooker.bb_cache">
                <Getattr fromlineno="285" tolineno="285" lineno="285" attrname="bb_cache" expr="cooker">
                  <Name fromlineno="285" tolineno="285" lineno="285" name="cooker"/>
                </Getattr>
              </Getattr>
            </CallFunc>
          </Discard>
          <If fromlineno="286" tolineno="289" lineno="286">
            <Const fromlineno="286" tolineno="286" lineno="286" type="bool">False</Const>
            <Print fromlineno="287" tolineno="287" lineno="287">
              <Const fromlineno="287" tolineno="287" lineno="287" type="str">'SHELL: File has not been updated, not reparsing'</Const>
            </Print>
            <Print fromlineno="289" tolineno="289" lineno="289">
              <Const fromlineno="289" tolineno="289" lineno="289" type="str">'SHELL: Parsed'</Const>
            </Print>
          </If>
        </Function>
        <Assign fromlineno="290" tolineno="290" lineno="290" targets="[&lt;AssAttr(usage) l.290 [bb.shell] at Ox993e0ac&gt;]" value="'&lt;bbfile&gt;'">
          <AssAttr fromlineno="290" tolineno="290" lineno="290" attrname="usage" expr="fileReparse">
            <Name fromlineno="290" tolineno="290" lineno="290" name="fileReparse"/>
          </AssAttr>
          <Const fromlineno="290" tolineno="290" lineno="290" type="str">'&lt;bbfile&gt;'</Const>
        </Assign>
        <Function fromlineno="292" tolineno="295" lineno="292">
          <Arguments fromlineno="292" tolineno="292" lineno="None" format_args="self, params">
            <AssName fromlineno="292" tolineno="292" lineno="292" name="self"/>
            <AssName fromlineno="292" tolineno="292" lineno="292" name="params"/>
          </Arguments>
          <Assign fromlineno="294" tolineno="294" lineno="294" targets="[&lt;AssAttr(abort) l.294 [bb.shell] at Ox993e26c&gt;]" value="not cooker.configuration.abort">
            <AssAttr fromlineno="294" tolineno="294" lineno="294" attrname="abort" expr="cooker.configuration">
              <Getattr fromlineno="294" tolineno="294" lineno="294" attrname="configuration" expr="cooker">
                <Name fromlineno="294" tolineno="294" lineno="294" name="cooker"/>
              </Getattr>
            </AssAttr>
            <UnaryOp fromlineno="294" tolineno="294" lineno="294">
              <Getattr fromlineno="294" tolineno="294" lineno="294" attrname="abort" expr="cooker.configuration">
                <Getattr fromlineno="294" tolineno="294" lineno="294" attrname="configuration" expr="cooker">
                  <Name fromlineno="294" tolineno="294" lineno="294" name="cooker"/>
                </Getattr>
              </Getattr>
            </UnaryOp>
          </Assign>
          <Print fromlineno="295" tolineno="295" lineno="295">
            <BinOp fromlineno="295" tolineno="295" lineno="295" op="%" left="&quot;SHELL: Abort Flag is now '%s'&quot;" right="repr(cooker.configuration.abort)">
              <Const fromlineno="295" tolineno="295" lineno="295" type="str">"SHELL: Abort Flag is now '%s'"</Const>
              <CallFunc fromlineno="295" tolineno="295" lineno="295" func="Name(repr)">
                <Name fromlineno="295" tolineno="295" lineno="295" name="repr"/>
                <Getattr fromlineno="295" tolineno="295" lineno="295" attrname="abort" expr="cooker.configuration">
                  <Getattr fromlineno="295" tolineno="295" lineno="295" attrname="configuration" expr="cooker">
                    <Name fromlineno="295" tolineno="295" lineno="295" name="cooker"/>
                  </Getattr>
                </Getattr>
              </CallFunc>
            </BinOp>
          </Print>
        </Function>
        <Function fromlineno="297" tolineno="300" lineno="297">
          <Arguments fromlineno="297" tolineno="297" lineno="None" format_args="self, params">
            <AssName fromlineno="297" tolineno="297" lineno="297" name="self"/>
            <AssName fromlineno="297" tolineno="297" lineno="297" name="params"/>
          </Arguments>
          <Assign fromlineno="299" tolineno="299" lineno="299" targets="[&lt;AssAttr(force) l.299 [bb.shell] at Ox993e5cc&gt;]" value="not cooker.configuration.force">
            <AssAttr fromlineno="299" tolineno="299" lineno="299" attrname="force" expr="cooker.configuration">
              <Getattr fromlineno="299" tolineno="299" lineno="299" attrname="configuration" expr="cooker">
                <Name fromlineno="299" tolineno="299" lineno="299" name="cooker"/>
              </Getattr>
            </AssAttr>
            <UnaryOp fromlineno="299" tolineno="299" lineno="299">
              <Getattr fromlineno="299" tolineno="299" lineno="299" attrname="force" expr="cooker.configuration">
                <Getattr fromlineno="299" tolineno="299" lineno="299" attrname="configuration" expr="cooker">
                  <Name fromlineno="299" tolineno="299" lineno="299" name="cooker"/>
                </Getattr>
              </Getattr>
            </UnaryOp>
          </Assign>
          <Print fromlineno="300" tolineno="300" lineno="300">
            <BinOp fromlineno="300" tolineno="300" lineno="300" op="%" left="&quot;SHELL: Force Flag is now '%s'&quot;" right="repr(cooker.configuration.force)">
              <Const fromlineno="300" tolineno="300" lineno="300" type="str">"SHELL: Force Flag is now '%s'"</Const>
              <CallFunc fromlineno="300" tolineno="300" lineno="300" func="Name(repr)">
                <Name fromlineno="300" tolineno="300" lineno="300" name="repr"/>
                <Getattr fromlineno="300" tolineno="300" lineno="300" attrname="force" expr="cooker.configuration">
                  <Getattr fromlineno="300" tolineno="300" lineno="300" attrname="configuration" expr="cooker">
                    <Name fromlineno="300" tolineno="300" lineno="300" name="cooker"/>
                  </Getattr>
                </Getattr>
              </CallFunc>
            </BinOp>
          </Print>
        </Function>
        <Function fromlineno="302" tolineno="310" lineno="302">
          <Arguments fromlineno="302" tolineno="302" lineno="None" format_args="self, params">
            <AssName fromlineno="302" tolineno="302" lineno="302" name="self"/>
            <AssName fromlineno="302" tolineno="302" lineno="302" name="params"/>
          </Arguments>
          <Print fromlineno="304" tolineno="304" lineno="304">
            <BinOp fromlineno="304" tolineno="304" lineno="304" op="*" left="'='" right="30">
              <Const fromlineno="304" tolineno="304" lineno="304" type="str">'='</Const>
              <Const fromlineno="304" tolineno="304" lineno="304" type="int">30</Const>
            </BinOp>
            <Const fromlineno="304" tolineno="304" lineno="304" type="str">'Available Commands'</Const>
            <BinOp fromlineno="304" tolineno="304" lineno="304" op="*" left="'='" right="30">
              <Const fromlineno="304" tolineno="304" lineno="304" type="str">'='</Const>
              <Const fromlineno="304" tolineno="304" lineno="304" type="int">30</Const>
            </BinOp>
          </Print>
          <Assign fromlineno="305" tolineno="305" lineno="305" targets="[&lt;AssName(allcmds) l.305 [bb.shell] at Ox993ea4c&gt;]" value="cmds.keys()">
            <AssName fromlineno="305" tolineno="305" lineno="305" name="allcmds"/>
            <CallFunc fromlineno="305" tolineno="305" lineno="305" func="Getattr(keys)">
              <Getattr fromlineno="305" tolineno="305" lineno="305" attrname="keys" expr="cmds">
                <Name fromlineno="305" tolineno="305" lineno="305" name="cmds"/>
              </Getattr>
            </CallFunc>
          </Assign>
          <Discard fromlineno="306" tolineno="306" lineno="306">
            <CallFunc fromlineno="306" tolineno="306" lineno="306" func="Getattr(sort)">
              <Getattr fromlineno="306" tolineno="306" lineno="306" attrname="sort" expr="allcmds">
                <Name fromlineno="306" tolineno="306" lineno="306" name="allcmds"/>
              </Getattr>
            </CallFunc>
          </Discard>
          <For fromlineno="307" tolineno="309" lineno="307">
            <AssName fromlineno="307" tolineno="307" lineno="307" name="cmd"/>
            <Name fromlineno="307" tolineno="307" lineno="307" name="allcmds"/>
            <Assign fromlineno="308" tolineno="308" lineno="308" targets="[&lt;Tuple(tuple) l.308 [bb.shell] at Ox993ecac&gt;]" value="cmds[cmd]">
              <Tuple fromlineno="308" tolineno="308" lineno="308">
                <AssName fromlineno="308" tolineno="308" lineno="308" name="function"/>
                <AssName fromlineno="308" tolineno="308" lineno="308" name="numparams"/>
                <AssName fromlineno="308" tolineno="308" lineno="308" name="usage"/>
                <AssName fromlineno="308" tolineno="308" lineno="308" name="helptext"/>
              </Tuple>
              <Subscript fromlineno="308" tolineno="308" lineno="308">
                <Name fromlineno="308" tolineno="308" lineno="308" name="cmds"/>
                <Index fromlineno="308" tolineno="308" lineno="None">
                  <Name fromlineno="308" tolineno="308" lineno="308" name="cmd"/>
                </Index>
              </Subscript>
            </Assign>
            <Print fromlineno="309" tolineno="309" lineno="309">
              <BinOp fromlineno="309" tolineno="309" lineno="309" op="%" left="'| %s | %s'" right="(usage.ljust(30), helptext)">
                <Const fromlineno="309" tolineno="309" lineno="309" type="str">'| %s | %s'</Const>
                <Tuple fromlineno="309" tolineno="309" lineno="309">
                  <CallFunc fromlineno="309" tolineno="309" lineno="309" func="Getattr(ljust)">
                    <Getattr fromlineno="309" tolineno="309" lineno="309" attrname="ljust" expr="usage">
                      <Name fromlineno="309" tolineno="309" lineno="309" name="usage"/>
                    </Getattr>
                    <Const fromlineno="309" tolineno="309" lineno="309" type="int">30</Const>
                  </CallFunc>
                  <Name fromlineno="309" tolineno="309" lineno="309" name="helptext"/>
                </Tuple>
              </BinOp>
            </Print>
          </For>
          <Print fromlineno="310" tolineno="310" lineno="310">
            <BinOp fromlineno="310" tolineno="310" lineno="310" op="*" left="'='" right="78">
              <Const fromlineno="310" tolineno="310" lineno="310" type="str">'='</Const>
              <Const fromlineno="310" tolineno="310" lineno="310" type="int">78</Const>
            </BinOp>
          </Print>
        </Function>
        <Function fromlineno="312" tolineno="326" lineno="312">
          <Arguments fromlineno="312" tolineno="312" lineno="None" format_args="self, params">
            <AssName fromlineno="312" tolineno="312" lineno="312" name="self"/>
            <AssName fromlineno="312" tolineno="312" lineno="312" name="params"/>
          </Arguments>
          <If fromlineno="314" tolineno="326" lineno="314">
            <Compare fromlineno="314" tolineno="314" lineno="314" op="('is', &lt;Const(NoneType) l.314 [bb.shell] at Ox994224c&gt;)">
              <Name fromlineno="314" tolineno="314" lineno="314" name="last_exception"/>
              <Const fromlineno="314" tolineno="314" lineno="314" type="NoneType">None</Const>
            </Compare>
            <Print fromlineno="315" tolineno="315" lineno="315">
              <Const fromlineno="315" tolineno="315" lineno="315" type="str">'SHELL: No Errors yet (Phew)...'</Const>
            </Print>
            <Assign fromlineno="317" tolineno="317" lineno="317" targets="[&lt;Tuple(tuple) l.317 [bb.shell] at Ox994236c&gt;]" value="last_exception.args">
              <Tuple fromlineno="317" tolineno="317" lineno="317">
                <AssName fromlineno="317" tolineno="317" lineno="317" name="reason"/>
                <AssName fromlineno="317" tolineno="317" lineno="317" name="event"/>
              </Tuple>
              <Getattr fromlineno="317" tolineno="317" lineno="317" attrname="args" expr="last_exception">
                <Name fromlineno="317" tolineno="317" lineno="317" name="last_exception"/>
              </Getattr>
            </Assign>
            <Print fromlineno="318" tolineno="318" lineno="318">
              <BinOp fromlineno="318" tolineno="318" lineno="318" op="%" left="&quot;SHELL: Reason for the last error: '%s'&quot;" right="reason">
                <Const fromlineno="318" tolineno="318" lineno="318" type="str">"SHELL: Reason for the last error: '%s'"</Const>
                <Name fromlineno="318" tolineno="318" lineno="318" name="reason"/>
              </BinOp>
            </Print>
            <If fromlineno="319" tolineno="326" lineno="319">
              <Compare fromlineno="319" tolineno="319" lineno="319" op="('in', &lt;Name(reason) l.319 [bb.shell] at Ox99425cc&gt;)">
                <Const fromlineno="319" tolineno="319" lineno="319" type="str">':'</Const>
                <Name fromlineno="319" tolineno="319" lineno="319" name="reason"/>
              </Compare>
              <Assign fromlineno="320" tolineno="320" lineno="320" targets="[&lt;Tuple(tuple) l.320 [bb.shell] at Ox994266c&gt;]" value="reason.split(':')">
                <Tuple fromlineno="320" tolineno="320" lineno="320">
                  <AssName fromlineno="320" tolineno="320" lineno="320" name="msg"/>
                  <AssName fromlineno="320" tolineno="320" lineno="320" name="filename"/>
                </Tuple>
                <CallFunc fromlineno="320" tolineno="320" lineno="320" func="Getattr(split)">
                  <Getattr fromlineno="320" tolineno="320" lineno="320" attrname="split" expr="reason">
                    <Name fromlineno="320" tolineno="320" lineno="320" name="reason"/>
                  </Getattr>
                  <Const fromlineno="320" tolineno="320" lineno="320" type="str">':'</Const>
                </CallFunc>
              </Assign>
              <Assign fromlineno="321" tolineno="321" lineno="321" targets="[&lt;AssName(filename) l.321 [bb.shell] at Ox994280c&gt;]" value="filename.strip()">
                <AssName fromlineno="321" tolineno="321" lineno="321" name="filename"/>
                <CallFunc fromlineno="321" tolineno="321" lineno="321" func="Getattr(strip)">
                  <Getattr fromlineno="321" tolineno="321" lineno="321" attrname="strip" expr="filename">
                    <Name fromlineno="321" tolineno="321" lineno="321" name="filename"/>
                  </Getattr>
                </CallFunc>
              </Assign>
              <Print fromlineno="322" tolineno="322" lineno="322">
                <Const fromlineno="322" tolineno="322" lineno="322" type="str">'SHELL: Dumping log file for last error:'</Const>
              </Print>
              <TryExcept fromlineno="323" tolineno="326" lineno="323">
                <Print fromlineno="324" tolineno="324" lineno="324">
                  <CallFunc fromlineno="324" tolineno="324" lineno="324" func="Getattr(read)">
                    <Getattr fromlineno="324" tolineno="324" lineno="324" attrname="read" expr="open(filename)">
                      <CallFunc fromlineno="324" tolineno="324" lineno="324" func="Name(open)">
                        <Name fromlineno="324" tolineno="324" lineno="324" name="open"/>
                        <Name fromlineno="324" tolineno="324" lineno="324" name="filename"/>
                      </CallFunc>
                    </Getattr>
                  </CallFunc>
                </Print>
                <ExceptHandler fromlineno="325" tolineno="326" lineno="325">
                  <Name fromlineno="325" tolineno="325" lineno="325" name="IOError"/>
                  <Print fromlineno="326" tolineno="326" lineno="326">
                    <BinOp fromlineno="326" tolineno="326" lineno="326" op="%" left="&quot;ERROR: Couldn't open '%s'&quot;" right="filename">
                      <Const fromlineno="326" tolineno="326" lineno="326" type="str">"ERROR: Couldn't open '%s'"</Const>
                      <Name fromlineno="326" tolineno="326" lineno="326" name="filename"/>
                    </BinOp>
                  </Print>
                </ExceptHandler>
              </TryExcept>
            </If>
          </If>
        </Function>
        <Function fromlineno="328" tolineno="338" lineno="328">
          <Arguments fromlineno="328" tolineno="328" lineno="None" format_args="self, params">
            <AssName fromlineno="328" tolineno="328" lineno="328" name="self"/>
            <AssName fromlineno="328" tolineno="328" lineno="328" name="params"/>
          </Arguments>
          <Assign fromlineno="330" tolineno="330" lineno="330" targets="[&lt;Tuple(tuple) l.330 [bb.shell] at Ox9942cac&gt;]" value="params">
            <Tuple fromlineno="330" tolineno="330" lineno="330">
              <AssName fromlineno="330" tolineno="330" lineno="330" name="what"/>
              <AssName fromlineno="330" tolineno="330" lineno="330" name="globexpr"/>
            </Tuple>
            <Name fromlineno="330" tolineno="330" lineno="330" name="params"/>
          </Assign>
          <If fromlineno="331" tolineno="338" lineno="331">
            <Compare fromlineno="331" tolineno="331" lineno="331" op="('==', &lt;Const(str) l.331 [bb.shell] at Ox9942e2c&gt;)">
              <Name fromlineno="331" tolineno="331" lineno="331" name="what"/>
              <Const fromlineno="331" tolineno="331" lineno="331" type="str">'files'</Const>
            </Compare>
            <Discard fromlineno="332" tolineno="332" lineno="332">
              <CallFunc fromlineno="332" tolineno="332" lineno="332" func="Getattr(_checkParsed)">
                <Getattr fromlineno="332" tolineno="332" lineno="332" attrname="_checkParsed" expr="self">
                  <Name fromlineno="332" tolineno="332" lineno="332" name="self"/>
                </Getattr>
              </CallFunc>
            </Discard>
            <For fromlineno="333" tolineno="333" lineno="333">
              <AssName fromlineno="333" tolineno="333" lineno="333" name="key"/>
              <CallFunc fromlineno="333" tolineno="333" lineno="333" func="Name(globfilter)">
                <Name fromlineno="333" tolineno="333" lineno="333" name="globfilter"/>
                <CallFunc fromlineno="333" tolineno="333" lineno="333" func="Getattr(keys)">
                  <Getattr fromlineno="333" tolineno="333" lineno="333" attrname="keys" expr="cooker.status.pkg_fn">
                    <Getattr fromlineno="333" tolineno="333" lineno="333" attrname="pkg_fn" expr="cooker.status">
                      <Getattr fromlineno="333" tolineno="333" lineno="333" attrname="status" expr="cooker">
                        <Name fromlineno="333" tolineno="333" lineno="333" name="cooker"/>
                      </Getattr>
                    </Getattr>
                  </Getattr>
                </CallFunc>
                <Name fromlineno="333" tolineno="333" lineno="333" name="globexpr"/>
              </CallFunc>
              <Print fromlineno="333" tolineno="333" lineno="333">
                <Name fromlineno="333" tolineno="333" lineno="333" name="key"/>
              </Print>
            </For>
            <If fromlineno="334" tolineno="338" lineno="334">
              <Compare fromlineno="334" tolineno="334" lineno="334" op="('==', &lt;Const(str) l.334 [bb.shell] at Ox994526c&gt;)">
                <Name fromlineno="334" tolineno="334" lineno="334" name="what"/>
                <Const fromlineno="334" tolineno="334" lineno="334" type="str">'providers'</Const>
              </Compare>
              <Discard fromlineno="335" tolineno="335" lineno="335">
                <CallFunc fromlineno="335" tolineno="335" lineno="335" func="Getattr(_checkParsed)">
                  <Getattr fromlineno="335" tolineno="335" lineno="335" attrname="_checkParsed" expr="self">
                    <Name fromlineno="335" tolineno="335" lineno="335" name="self"/>
                  </Getattr>
                </CallFunc>
              </Discard>
              <For fromlineno="336" tolineno="336" lineno="336">
                <AssName fromlineno="336" tolineno="336" lineno="336" name="key"/>
                <CallFunc fromlineno="336" tolineno="336" lineno="336" func="Name(globfilter)">
                  <Name fromlineno="336" tolineno="336" lineno="336" name="globfilter"/>
                  <CallFunc fromlineno="336" tolineno="336" lineno="336" func="Getattr(keys)">
                    <Getattr fromlineno="336" tolineno="336" lineno="336" attrname="keys" expr="cooker.status.pkg_pn">
                      <Getattr fromlineno="336" tolineno="336" lineno="336" attrname="pkg_pn" expr="cooker.status">
                        <Getattr fromlineno="336" tolineno="336" lineno="336" attrname="status" expr="cooker">
                          <Name fromlineno="336" tolineno="336" lineno="336" name="cooker"/>
                        </Getattr>
                      </Getattr>
                    </Getattr>
                  </CallFunc>
                  <Name fromlineno="336" tolineno="336" lineno="336" name="globexpr"/>
                </CallFunc>
                <Print fromlineno="336" tolineno="336" lineno="336">
                  <Name fromlineno="336" tolineno="336" lineno="336" name="key"/>
                </Print>
              </For>
              <Print fromlineno="338" tolineno="338" lineno="338">
                <BinOp fromlineno="338" tolineno="338" lineno="338" op="%" left="'Usage: match %s'" right="self.print_.usage">
                  <Const fromlineno="338" tolineno="338" lineno="338" type="str">'Usage: match %s'</Const>
                  <Getattr fromlineno="338" tolineno="338" lineno="338" attrname="usage" expr="self.print_">
                    <Getattr fromlineno="338" tolineno="338" lineno="338" attrname="print_" expr="self">
                      <Name fromlineno="338" tolineno="338" lineno="338" name="self"/>
                    </Getattr>
                  </Getattr>
                </BinOp>
              </Print>
            </If>
          </If>
        </Function>
        <Assign fromlineno="339" tolineno="339" lineno="339" targets="[&lt;AssAttr(usage) l.339 [bb.shell] at Ox994554c&gt;]" value="'&lt;files|providers&gt; &lt;glob&gt;'">
          <AssAttr fromlineno="339" tolineno="339" lineno="339" attrname="usage" expr="match">
            <Name fromlineno="339" tolineno="339" lineno="339" name="match"/>
          </AssAttr>
          <Const fromlineno="339" tolineno="339" lineno="339" type="str">'&lt;files|providers&gt; &lt;glob&gt;'</Const>
        </Assign>
        <Function fromlineno="341" tolineno="385" lineno="341">
          <Arguments fromlineno="341" tolineno="341" lineno="None" format_args="self, params">
            <AssName fromlineno="341" tolineno="341" lineno="341" name="self"/>
            <AssName fromlineno="341" tolineno="341" lineno="341" name="params"/>
          </Arguments>
          <Assign fromlineno="343" tolineno="343" lineno="343" targets="[&lt;Tuple(tuple) l.343 [bb.shell] at Ox994580c&gt;]" value="params">
            <Tuple fromlineno="343" tolineno="343" lineno="343">
              <AssName fromlineno="343" tolineno="343" lineno="343" name="dirname"/>
              <AssName fromlineno="343" tolineno="343" lineno="343" name="filename"/>
            </Tuple>
            <Name fromlineno="343" tolineno="343" lineno="343" name="params"/>
          </Assign>
          <Assign fromlineno="344" tolineno="344" lineno="344" targets="[&lt;AssName(packages) l.344 [bb.shell] at Ox994592c&gt;]" value="'/'.join(data.getVar('BBFILES', cooker.configuration.data, 1).split('/')[:-2])">
            <AssName fromlineno="344" tolineno="344" lineno="344" name="packages"/>
            <CallFunc fromlineno="344" tolineno="344" lineno="344" func="Getattr(join)">
              <Getattr fromlineno="344" tolineno="344" lineno="344" attrname="join" expr="'/'">
                <Const fromlineno="344" tolineno="344" lineno="344" type="str">'/'</Const>
              </Getattr>
              <Subscript fromlineno="344" tolineno="344" lineno="344">
                <CallFunc fromlineno="344" tolineno="344" lineno="344" func="Getattr(split)">
                  <Getattr fromlineno="344" tolineno="344" lineno="344" attrname="split" expr="data.getVar('BBFILES', cooker.configuration.data, 1)">
                    <CallFunc fromlineno="344" tolineno="344" lineno="344" func="Getattr(getVar)">
                      <Getattr fromlineno="344" tolineno="344" lineno="344" attrname="getVar" expr="data">
                        <Name fromlineno="344" tolineno="344" lineno="344" name="data"/>
                      </Getattr>
                      <Const fromlineno="344" tolineno="344" lineno="344" type="str">'BBFILES'</Const>
                      <Getattr fromlineno="344" tolineno="344" lineno="344" attrname="data" expr="cooker.configuration">
                        <Getattr fromlineno="344" tolineno="344" lineno="344" attrname="configuration" expr="cooker">
                          <Name fromlineno="344" tolineno="344" lineno="344" name="cooker"/>
                        </Getattr>
                      </Getattr>
                      <Const fromlineno="344" tolineno="344" lineno="344" type="int">1</Const>
                    </CallFunc>
                  </Getattr>
                  <Const fromlineno="344" tolineno="344" lineno="344" type="str">'/'</Const>
                </CallFunc>
                <Slice fromlineno="344" tolineno="344" lineno="None">
                  <Const fromlineno="344" tolineno="344" lineno="344" type="int">-2</Const>
                </Slice>
              </Subscript>
            </CallFunc>
          </Assign>
          <Assign fromlineno="345" tolineno="345" lineno="345" targets="[&lt;AssName(fulldirname) l.345 [bb.shell] at Ox9945c2c&gt;]" value="('%s/%s') % ((packages, dirname))">
            <AssName fromlineno="345" tolineno="345" lineno="345" name="fulldirname"/>
            <BinOp fromlineno="345" tolineno="345" lineno="345" op="%" left="'%s/%s'" right="(packages, dirname)">
              <Const fromlineno="345" tolineno="345" lineno="345" type="str">'%s/%s'</Const>
              <Tuple fromlineno="345" tolineno="345" lineno="345">
                <Name fromlineno="345" tolineno="345" lineno="345" name="packages"/>
                <Name fromlineno="345" tolineno="345" lineno="345" name="dirname"/>
              </Tuple>
            </BinOp>
          </Assign>
          <If fromlineno="347" tolineno="349" lineno="347">
            <UnaryOp fromlineno="347" tolineno="347" lineno="347">
              <CallFunc fromlineno="347" tolineno="347" lineno="347" func="Getattr(exists)">
                <Getattr fromlineno="347" tolineno="347" lineno="347" attrname="exists" expr="os.path">
                  <Getattr fromlineno="347" tolineno="347" lineno="347" attrname="path" expr="os">
                    <Name fromlineno="347" tolineno="347" lineno="347" name="os"/>
                  </Getattr>
                </Getattr>
                <Name fromlineno="347" tolineno="347" lineno="347" name="fulldirname"/>
              </CallFunc>
            </UnaryOp>
            <Print fromlineno="348" tolineno="348" lineno="348">
              <BinOp fromlineno="348" tolineno="348" lineno="348" op="%" left="&quot;SHELL: Creating '%s'&quot;" right="fulldirname">
                <Const fromlineno="348" tolineno="348" lineno="348" type="str">"SHELL: Creating '%s'"</Const>
                <Name fromlineno="348" tolineno="348" lineno="348" name="fulldirname"/>
              </BinOp>
            </Print>
            <Discard fromlineno="349" tolineno="349" lineno="349">
              <CallFunc fromlineno="349" tolineno="349" lineno="349" func="Getattr(mkdir)">
                <Getattr fromlineno="349" tolineno="349" lineno="349" attrname="mkdir" expr="os">
                  <Name fromlineno="349" tolineno="349" lineno="349" name="os"/>
                </Getattr>
                <Name fromlineno="349" tolineno="349" lineno="349" name="fulldirname"/>
              </CallFunc>
            </Discard>
          </If>
          <If fromlineno="350" tolineno="385" lineno="350">
            <BoolOp fromlineno="350" tolineno="350" lineno="350" op="and" values="os.path.exists(fulldirname),os.path.isdir(fulldirname),">
              <CallFunc fromlineno="350" tolineno="350" lineno="350" func="Getattr(exists)">
                <Getattr fromlineno="350" tolineno="350" lineno="350" attrname="exists" expr="os.path">
                  <Getattr fromlineno="350" tolineno="350" lineno="350" attrname="path" expr="os">
                    <Name fromlineno="350" tolineno="350" lineno="350" name="os"/>
                  </Getattr>
                </Getattr>
                <Name fromlineno="350" tolineno="350" lineno="350" name="fulldirname"/>
              </CallFunc>
              <CallFunc fromlineno="350" tolineno="350" lineno="350" func="Getattr(isdir)">
                <Getattr fromlineno="350" tolineno="350" lineno="350" attrname="isdir" expr="os.path">
                  <Getattr fromlineno="350" tolineno="350" lineno="350" attrname="path" expr="os">
                    <Name fromlineno="350" tolineno="350" lineno="350" name="os"/>
                  </Getattr>
                </Getattr>
                <Name fromlineno="350" tolineno="350" lineno="350" name="fulldirname"/>
              </CallFunc>
            </BoolOp>
            <If fromlineno="351" tolineno="353" lineno="351">
              <CallFunc fromlineno="351" tolineno="351" lineno="351" func="Getattr(exists)">
                <Getattr fromlineno="351" tolineno="351" lineno="351" attrname="exists" expr="os.path">
                  <Getattr fromlineno="351" tolineno="351" lineno="351" attrname="path" expr="os">
                    <Name fromlineno="351" tolineno="351" lineno="351" name="os"/>
                  </Getattr>
                </Getattr>
                <BinOp fromlineno="351" tolineno="351" lineno="351" op="%" left="'%s/%s'" right="(fulldirname, filename)">
                  <Const fromlineno="351" tolineno="351" lineno="351" type="str">'%s/%s'</Const>
                  <Tuple fromlineno="351" tolineno="351" lineno="351">
                    <Name fromlineno="351" tolineno="351" lineno="351" name="fulldirname"/>
                    <Name fromlineno="351" tolineno="351" lineno="351" name="filename"/>
                  </Tuple>
                </BinOp>
              </CallFunc>
              <Print fromlineno="352" tolineno="352" lineno="352">
                <BinOp fromlineno="352" tolineno="352" lineno="352" op="%" left="'SHELL: ERROR: %s/%s already exists'" right="(fulldirname, filename)">
                  <Const fromlineno="352" tolineno="352" lineno="352" type="str">'SHELL: ERROR: %s/%s already exists'</Const>
                  <Tuple fromlineno="352" tolineno="352" lineno="352">
                    <Name fromlineno="352" tolineno="352" lineno="352" name="fulldirname"/>
                    <Name fromlineno="352" tolineno="352" lineno="352" name="filename"/>
                  </Tuple>
                </BinOp>
              </Print>
              <Return fromlineno="353" tolineno="353" lineno="353">
                <Const fromlineno="353" tolineno="353" lineno="353" type="bool">False</Const>
              </Return>
            </If>
            <Print fromlineno="354" tolineno="354" lineno="354">
              <BinOp fromlineno="354" tolineno="354" lineno="354" op="%" left="&quot;SHELL: Creating '%s/%s'&quot;" right="(fulldirname, filename)">
                <Const fromlineno="354" tolineno="354" lineno="354" type="str">"SHELL: Creating '%s/%s'"</Const>
                <Tuple fromlineno="354" tolineno="354" lineno="354">
                  <Name fromlineno="354" tolineno="354" lineno="354" name="fulldirname"/>
                  <Name fromlineno="354" tolineno="354" lineno="354" name="filename"/>
                </Tuple>
              </BinOp>
            </Print>
            <Assign fromlineno="355" tolineno="355" lineno="355" targets="[&lt;AssName(newpackage) l.355 [bb.shell] at Ox994966c&gt;]" value="open(('%s/%s') % ((fulldirname, filename)), 'w')">
              <AssName fromlineno="355" tolineno="355" lineno="355" name="newpackage"/>
              <CallFunc fromlineno="355" tolineno="355" lineno="355" func="Name(open)">
                <Name fromlineno="355" tolineno="355" lineno="355" name="open"/>
                <BinOp fromlineno="355" tolineno="355" lineno="355" op="%" left="'%s/%s'" right="(fulldirname, filename)">
                  <Const fromlineno="355" tolineno="355" lineno="355" type="str">'%s/%s'</Const>
                  <Tuple fromlineno="355" tolineno="355" lineno="355">
                    <Name fromlineno="355" tolineno="355" lineno="355" name="fulldirname"/>
                    <Name fromlineno="355" tolineno="355" lineno="355" name="filename"/>
                  </Tuple>
                </BinOp>
                <Const fromlineno="355" tolineno="355" lineno="355" type="str">'w'</Const>
              </CallFunc>
            </Assign>
            <Print fromlineno="356" tolineno="383" lineno="356">
              <Name fromlineno="356" tolineno="356" lineno="356" name="newpackage"/>
              <Const fromlineno="383" tolineno="383" lineno="383" type="str">'DESCRIPTION = ""\nSECTION = ""\nAUTHOR = ""\nHOMEPAGE = ""\nMAINTAINER = ""\nLICENSE = "GPL"\nPR = "r0"\n\nSRC_URI = ""\n\n#inherit base\n\n#do_configure() {\n#\n#}\n\n#do_compile() {\n#\n#}\n\n#do_stage() {\n#\n#}\n\n#do_install() {\n#\n#}\n'</Const>
            </Print>
            <Discard fromlineno="384" tolineno="384" lineno="384">
              <CallFunc fromlineno="384" tolineno="384" lineno="384" func="Getattr(close)">
                <Getattr fromlineno="384" tolineno="384" lineno="384" attrname="close" expr="newpackage">
                  <Name fromlineno="384" tolineno="384" lineno="384" name="newpackage"/>
                </Getattr>
              </CallFunc>
            </Discard>
            <Discard fromlineno="385" tolineno="385" lineno="385">
              <CallFunc fromlineno="385" tolineno="385" lineno="385" func="Getattr(system)">
                <Getattr fromlineno="385" tolineno="385" lineno="385" attrname="system" expr="os">
                  <Name fromlineno="385" tolineno="385" lineno="385" name="os"/>
                </Getattr>
                <BinOp fromlineno="385" tolineno="385" lineno="385" op="%" left="'%s %s/%s'" right="(os.environ.get('EDITOR'), fulldirname, filename)">
                  <Const fromlineno="385" tolineno="385" lineno="385" type="str">'%s %s/%s'</Const>
                  <Tuple fromlineno="385" tolineno="385" lineno="385">
                    <CallFunc fromlineno="385" tolineno="385" lineno="385" func="Getattr(get)">
                      <Getattr fromlineno="385" tolineno="385" lineno="385" attrname="get" expr="os.environ">
                        <Getattr fromlineno="385" tolineno="385" lineno="385" attrname="environ" expr="os">
                          <Name fromlineno="385" tolineno="385" lineno="385" name="os"/>
                        </Getattr>
                      </Getattr>
                      <Const fromlineno="385" tolineno="385" lineno="385" type="str">'EDITOR'</Const>
                    </CallFunc>
                    <Name fromlineno="385" tolineno="385" lineno="385" name="fulldirname"/>
                    <Name fromlineno="385" tolineno="385" lineno="385" name="filename"/>
                  </Tuple>
                </BinOp>
              </CallFunc>
            </Discard>
          </If>
        </Function>
        <Assign fromlineno="386" tolineno="386" lineno="386" targets="[&lt;AssAttr(usage) l.386 [bb.shell] at Ox9949a2c&gt;]" value="'&lt;directory&gt; &lt;filename&gt;'">
          <AssAttr fromlineno="386" tolineno="386" lineno="386" attrname="usage" expr="new">
            <Name fromlineno="386" tolineno="386" lineno="386" name="new"/>
          </AssAttr>
          <Const fromlineno="386" tolineno="386" lineno="386" type="str">'&lt;directory&gt; &lt;filename&gt;'</Const>
        </Assign>
        <Function fromlineno="388" tolineno="390" lineno="388">
          <Arguments fromlineno="388" tolineno="388" lineno="None" format_args="self, params">
            <AssName fromlineno="388" tolineno="388" lineno="388" name="self"/>
            <AssName fromlineno="388" tolineno="388" lineno="388" name="params"/>
          </Arguments>
          <Discard fromlineno="390" tolineno="390" lineno="390">
            <CallFunc fromlineno="390" tolineno="390" lineno="390" func="Getattr(build)">
              <Getattr fromlineno="390" tolineno="390" lineno="390" attrname="build" expr="self">
                <Name fromlineno="390" tolineno="390" lineno="390" name="self"/>
              </Getattr>
              <Name fromlineno="390" tolineno="390" lineno="390" name="params"/>
              <Const fromlineno="390" tolineno="390" lineno="390" type="str">'package'</Const>
            </CallFunc>
          </Discard>
        </Function>
        <Assign fromlineno="391" tolineno="391" lineno="391" targets="[&lt;AssAttr(usage) l.391 [bb.shell] at Ox9949dac&gt;]" value="'&lt;providee&gt;'">
          <AssAttr fromlineno="391" tolineno="391" lineno="391" attrname="usage" expr="package">
            <Name fromlineno="391" tolineno="391" lineno="391" name="package"/>
          </AssAttr>
          <Const fromlineno="391" tolineno="391" lineno="391" type="str">'&lt;providee&gt;'</Const>
        </Assign>
        <Function fromlineno="393" tolineno="397" lineno="393">
          <Arguments fromlineno="393" tolineno="393" lineno="None" format_args="self, params">
            <AssName fromlineno="393" tolineno="393" lineno="393" name="self"/>
            <AssName fromlineno="393" tolineno="393" lineno="393" name="params"/>
          </Arguments>
          <Assign fromlineno="395" tolineno="395" lineno="395" targets="[&lt;AssName(index) l.395 [bb.shell] at Ox9949f6c&gt;]" value="params[0]">
            <AssName fromlineno="395" tolineno="395" lineno="395" name="index"/>
            <Subscript fromlineno="395" tolineno="395" lineno="395">
              <Name fromlineno="395" tolineno="395" lineno="395" name="params"/>
              <Index fromlineno="395" tolineno="395" lineno="None">
                <Const fromlineno="395" tolineno="395" lineno="395" type="int">0</Const>
              </Index>
            </Subscript>
          </Assign>
          <Assign fromlineno="396" tolineno="396" lineno="396" targets="[&lt;AssName(contents) l.396 [bb.shell] at Ox994d08c&gt;]" value="self._shell.myout.buffer(int(index))">
            <AssName fromlineno="396" tolineno="396" lineno="396" name="contents"/>
            <CallFunc fromlineno="396" tolineno="396" lineno="396" func="Getattr(buffer)">
              <Getattr fromlineno="396" tolineno="396" lineno="396" attrname="buffer" expr="self._shell.myout">
                <Getattr fromlineno="396" tolineno="396" lineno="396" attrname="myout" expr="self._shell">
                  <Getattr fromlineno="396" tolineno="396" lineno="396" attrname="_shell" expr="self">
                    <Name fromlineno="396" tolineno="396" lineno="396" name="self"/>
                  </Getattr>
                </Getattr>
              </Getattr>
              <CallFunc fromlineno="396" tolineno="396" lineno="396" func="Name(int)">
                <Name fromlineno="396" tolineno="396" lineno="396" name="int"/>
                <Name fromlineno="396" tolineno="396" lineno="396" name="index"/>
              </CallFunc>
            </CallFunc>
          </Assign>
          <Discard fromlineno="397" tolineno="397" lineno="397">
            <CallFunc fromlineno="397" tolineno="397" lineno="397" func="Name(sendToPastebin)">
              <Name fromlineno="397" tolineno="397" lineno="397" name="sendToPastebin"/>
              <BinOp fromlineno="397" tolineno="397" lineno="397" op="+" left="'output of '" right="params[0]">
                <Const fromlineno="397" tolineno="397" lineno="397" type="str">'output of '</Const>
                <Subscript fromlineno="397" tolineno="397" lineno="397">
                  <Name fromlineno="397" tolineno="397" lineno="397" name="params"/>
                  <Index fromlineno="397" tolineno="397" lineno="None">
                    <Const fromlineno="397" tolineno="397" lineno="397" type="int">0</Const>
                  </Index>
                </Subscript>
              </BinOp>
              <Name fromlineno="397" tolineno="397" lineno="397" name="contents"/>
            </CallFunc>
          </Discard>
        </Function>
        <Assign fromlineno="398" tolineno="398" lineno="398" targets="[&lt;AssAttr(usage) l.398 [bb.shell] at Ox994d38c&gt;]" value="'&lt;index&gt;'">
          <AssAttr fromlineno="398" tolineno="398" lineno="398" attrname="usage" expr="pasteBin">
            <Name fromlineno="398" tolineno="398" lineno="398" name="pasteBin"/>
          </AssAttr>
          <Const fromlineno="398" tolineno="398" lineno="398" type="str">'&lt;index&gt;'</Const>
        </Assign>
        <Function fromlineno="400" tolineno="413" lineno="400">
          <Arguments fromlineno="400" tolineno="400" lineno="None" format_args="self, params">
            <AssName fromlineno="400" tolineno="400" lineno="400" name="self"/>
            <AssName fromlineno="400" tolineno="400" lineno="400" name="params"/>
          </Arguments>
          <If fromlineno="402" tolineno="413" lineno="402">
            <Compare fromlineno="402" tolineno="402" lineno="402" op="('is', &lt;Const(NoneType) l.402 [bb.shell] at Ox994d5ac&gt;)">
              <Name fromlineno="402" tolineno="402" lineno="402" name="last_exception"/>
              <Const fromlineno="402" tolineno="402" lineno="402" type="NoneType">None</Const>
            </Compare>
            <Print fromlineno="403" tolineno="403" lineno="403">
              <Const fromlineno="403" tolineno="403" lineno="403" type="str">'SHELL: No Errors yet (Phew)...'</Const>
            </Print>
            <Assign fromlineno="405" tolineno="405" lineno="405" targets="[&lt;Tuple(tuple) l.405 [bb.shell] at Ox994d6cc&gt;]" value="last_exception.args">
              <Tuple fromlineno="405" tolineno="405" lineno="405">
                <AssName fromlineno="405" tolineno="405" lineno="405" name="reason"/>
                <AssName fromlineno="405" tolineno="405" lineno="405" name="event"/>
              </Tuple>
              <Getattr fromlineno="405" tolineno="405" lineno="405" attrname="args" expr="last_exception">
                <Name fromlineno="405" tolineno="405" lineno="405" name="last_exception"/>
              </Getattr>
            </Assign>
            <Print fromlineno="406" tolineno="406" lineno="406">
              <BinOp fromlineno="406" tolineno="406" lineno="406" op="%" left="&quot;SHELL: Reason for the last error: '%s'&quot;" right="reason">
                <Const fromlineno="406" tolineno="406" lineno="406" type="str">"SHELL: Reason for the last error: '%s'"</Const>
                <Name fromlineno="406" tolineno="406" lineno="406" name="reason"/>
              </BinOp>
            </Print>
            <If fromlineno="407" tolineno="413" lineno="407">
              <Compare fromlineno="407" tolineno="407" lineno="407" op="('in', &lt;Name(reason) l.407 [bb.shell] at Ox994d92c&gt;)">
                <Const fromlineno="407" tolineno="407" lineno="407" type="str">':'</Const>
                <Name fromlineno="407" tolineno="407" lineno="407" name="reason"/>
              </Compare>
              <Assign fromlineno="408" tolineno="408" lineno="408" targets="[&lt;Tuple(tuple) l.408 [bb.shell] at Ox994d9cc&gt;]" value="reason.split(':')">
                <Tuple fromlineno="408" tolineno="408" lineno="408">
                  <AssName fromlineno="408" tolineno="408" lineno="408" name="msg"/>
                  <AssName fromlineno="408" tolineno="408" lineno="408" name="filename"/>
                </Tuple>
                <CallFunc fromlineno="408" tolineno="408" lineno="408" func="Getattr(split)">
                  <Getattr fromlineno="408" tolineno="408" lineno="408" attrname="split" expr="reason">
                    <Name fromlineno="408" tolineno="408" lineno="408" name="reason"/>
                  </Getattr>
                  <Const fromlineno="408" tolineno="408" lineno="408" type="str">':'</Const>
                </CallFunc>
              </Assign>
              <Assign fromlineno="409" tolineno="409" lineno="409" targets="[&lt;AssName(filename) l.409 [bb.shell] at Ox994db6c&gt;]" value="filename.strip()">
                <AssName fromlineno="409" tolineno="409" lineno="409" name="filename"/>
                <CallFunc fromlineno="409" tolineno="409" lineno="409" func="Getattr(strip)">
                  <Getattr fromlineno="409" tolineno="409" lineno="409" attrname="strip" expr="filename">
                    <Name fromlineno="409" tolineno="409" lineno="409" name="filename"/>
                  </Getattr>
                </CallFunc>
              </Assign>
              <Print fromlineno="410" tolineno="410" lineno="410">
                <Const fromlineno="410" tolineno="410" lineno="410" type="str">'SHELL: Pasting log file to pastebin...'</Const>
              </Print>
              <Assign fromlineno="412" tolineno="412" lineno="412" targets="[&lt;AssName(file) l.412 [bb.shell] at Ox994dcac&gt;]" value="open(filename).read()">
                <AssName fromlineno="412" tolineno="412" lineno="412" name="file"/>
                <CallFunc fromlineno="412" tolineno="412" lineno="412" func="Getattr(read)">
                  <Getattr fromlineno="412" tolineno="412" lineno="412" attrname="read" expr="open(filename)">
                    <CallFunc fromlineno="412" tolineno="412" lineno="412" func="Name(open)">
                      <Name fromlineno="412" tolineno="412" lineno="412" name="open"/>
                      <Name fromlineno="412" tolineno="412" lineno="412" name="filename"/>
                    </CallFunc>
                  </Getattr>
                </CallFunc>
              </Assign>
              <Discard fromlineno="413" tolineno="413" lineno="413">
                <CallFunc fromlineno="413" tolineno="413" lineno="413" func="Name(sendToPastebin)">
                  <Name fromlineno="413" tolineno="413" lineno="413" name="sendToPastebin"/>
                  <BinOp fromlineno="413" tolineno="413" lineno="413" op="+" left="'contents of '" right="filename">
                    <Const fromlineno="413" tolineno="413" lineno="413" type="str">'contents of '</Const>
                    <Name fromlineno="413" tolineno="413" lineno="413" name="filename"/>
                  </BinOp>
                  <Name fromlineno="413" tolineno="413" lineno="413" name="file"/>
                </CallFunc>
              </Discard>
            </If>
          </If>
        </Function>
        <Function fromlineno="415" tolineno="417" lineno="415">
          <Arguments fromlineno="415" tolineno="415" lineno="None" format_args="self, params">
            <AssName fromlineno="415" tolineno="415" lineno="415" name="self"/>
            <AssName fromlineno="415" tolineno="415" lineno="415" name="params"/>
          </Arguments>
          <Discard fromlineno="417" tolineno="417" lineno="417">
            <CallFunc fromlineno="417" tolineno="417" lineno="417" func="Getattr(build)">
              <Getattr fromlineno="417" tolineno="417" lineno="417" attrname="build" expr="self">
                <Name fromlineno="417" tolineno="417" lineno="417" name="self"/>
              </Getattr>
              <Name fromlineno="417" tolineno="417" lineno="417" name="params"/>
              <Const fromlineno="417" tolineno="417" lineno="417" type="str">'patch'</Const>
            </CallFunc>
          </Discard>
        </Function>
        <Assign fromlineno="418" tolineno="418" lineno="418" targets="[&lt;AssAttr(usage) l.418 [bb.shell] at Ox99510ac&gt;]" value="'&lt;providee&gt;'">
          <AssAttr fromlineno="418" tolineno="418" lineno="418" attrname="usage" expr="patch">
            <Name fromlineno="418" tolineno="418" lineno="418" name="patch"/>
          </AssAttr>
          <Const fromlineno="418" tolineno="418" lineno="418" type="str">'&lt;providee&gt;'</Const>
        </Assign>
        <Function fromlineno="420" tolineno="432" lineno="420">
          <Arguments fromlineno="420" tolineno="420" lineno="None" format_args="self, params">
            <AssName fromlineno="420" tolineno="420" lineno="420" name="self"/>
            <AssName fromlineno="420" tolineno="420" lineno="420" name="params"/>
          </Arguments>
          <Assign fromlineno="422" tolineno="422" lineno="422" targets="[&lt;AssAttr(status) l.422 [bb.shell] at Ox995126c&gt;]" value="cache.CacheData()">
            <AssAttr fromlineno="422" tolineno="422" lineno="422" attrname="status" expr="cooker">
              <Name fromlineno="422" tolineno="422" lineno="422" name="cooker"/>
            </AssAttr>
            <CallFunc fromlineno="422" tolineno="422" lineno="422" func="Getattr(CacheData)">
              <Getattr fromlineno="422" tolineno="422" lineno="422" attrname="CacheData" expr="cache">
                <Name fromlineno="422" tolineno="422" lineno="422" name="cache"/>
              </Getattr>
            </CallFunc>
          </Assign>
          <Assign fromlineno="423" tolineno="423" lineno="423" targets="[&lt;AssName(ignore) l.423 [bb.shell] at Ox995136c&gt;]" value="(data.getVar('ASSUME_PROVIDED', cooker.configuration.data, 1)) or ('')">
            <AssName fromlineno="423" tolineno="423" lineno="423" name="ignore"/>
            <BoolOp fromlineno="423" tolineno="423" lineno="423" op="or" values="data.getVar('ASSUME_PROVIDED', cooker.configuration.data, 1),'',">
              <CallFunc fromlineno="423" tolineno="423" lineno="423" func="Getattr(getVar)">
                <Getattr fromlineno="423" tolineno="423" lineno="423" attrname="getVar" expr="data">
                  <Name fromlineno="423" tolineno="423" lineno="423" name="data"/>
                </Getattr>
                <Const fromlineno="423" tolineno="423" lineno="423" type="str">'ASSUME_PROVIDED'</Const>
                <Getattr fromlineno="423" tolineno="423" lineno="423" attrname="data" expr="cooker.configuration">
                  <Getattr fromlineno="423" tolineno="423" lineno="423" attrname="configuration" expr="cooker">
                    <Name fromlineno="423" tolineno="423" lineno="423" name="cooker"/>
                  </Getattr>
                </Getattr>
                <Const fromlineno="423" tolineno="423" lineno="423" type="int">1</Const>
              </CallFunc>
              <Const fromlineno="423" tolineno="423" lineno="423" type="str">''</Const>
            </BoolOp>
          </Assign>
          <Assign fromlineno="424" tolineno="424" lineno="424" targets="[&lt;AssAttr(ignored_dependencies) l.424 [bb.shell] at Ox995156c&gt;]" value="set(ignore.split())">
            <AssAttr fromlineno="424" tolineno="424" lineno="424" attrname="ignored_dependencies" expr="cooker.status">
              <Getattr fromlineno="424" tolineno="424" lineno="424" attrname="status" expr="cooker">
                <Name fromlineno="424" tolineno="424" lineno="424" name="cooker"/>
              </Getattr>
            </AssAttr>
            <CallFunc fromlineno="424" tolineno="424" lineno="424" func="Name(set)">
              <Name fromlineno="424" tolineno="424" lineno="424" name="set"/>
              <CallFunc fromlineno="424" tolineno="424" lineno="424" func="Getattr(split)">
                <Getattr fromlineno="424" tolineno="424" lineno="424" attrname="split" expr="ignore">
                  <Name fromlineno="424" tolineno="424" lineno="424" name="ignore"/>
                </Getattr>
              </CallFunc>
            </CallFunc>
          </Assign>
          <Discard fromlineno="425" tolineno="425" lineno="425">
            <CallFunc fromlineno="425" tolineno="425" lineno="425" func="Getattr(handleCollections)">
              <Getattr fromlineno="425" tolineno="425" lineno="425" attrname="handleCollections" expr="cooker">
                <Name fromlineno="425" tolineno="425" lineno="425" name="cooker"/>
              </Getattr>
              <CallFunc fromlineno="425" tolineno="425" lineno="425" func="Getattr(getVar)">
                <Getattr fromlineno="425" tolineno="425" lineno="425" attrname="getVar" expr="data">
                  <Name fromlineno="425" tolineno="425" lineno="425" name="data"/>
                </Getattr>
                <Const fromlineno="425" tolineno="425" lineno="425" type="str">'BBFILE_COLLECTIONS'</Const>
                <Getattr fromlineno="425" tolineno="425" lineno="425" attrname="data" expr="cooker.configuration">
                  <Getattr fromlineno="425" tolineno="425" lineno="425" attrname="configuration" expr="cooker">
                    <Name fromlineno="425" tolineno="425" lineno="425" name="cooker"/>
                  </Getattr>
                </Getattr>
                <Const fromlineno="425" tolineno="425" lineno="425" type="int">1</Const>
              </CallFunc>
            </CallFunc>
          </Discard>
          <Assign fromlineno="427" tolineno="427" lineno="427" targets="[&lt;Tuple(tuple) l.427 [bb.shell] at Ox99518ac&gt;]" value="cooker.collect_bbfiles()">
            <Tuple fromlineno="427" tolineno="427" lineno="427">
              <AssName fromlineno="427" tolineno="427" lineno="427" name="filelist"/>
              <AssName fromlineno="427" tolineno="427" lineno="427" name="masked"/>
            </Tuple>
            <CallFunc fromlineno="427" tolineno="427" lineno="427" func="Getattr(collect_bbfiles)">
              <Getattr fromlineno="427" tolineno="427" lineno="427" attrname="collect_bbfiles" expr="cooker">
                <Name fromlineno="427" tolineno="427" lineno="427" name="cooker"/>
              </Getattr>
            </CallFunc>
          </Assign>
          <Discard fromlineno="428" tolineno="428" lineno="428">
            <CallFunc fromlineno="428" tolineno="428" lineno="428" func="Getattr(parse_bbfiles)">
              <Getattr fromlineno="428" tolineno="428" lineno="428" attrname="parse_bbfiles" expr="cooker">
                <Name fromlineno="428" tolineno="428" lineno="428" name="cooker"/>
              </Getattr>
              <Name fromlineno="428" tolineno="428" lineno="428" name="filelist"/>
              <Name fromlineno="428" tolineno="428" lineno="428" name="masked"/>
              <Getattr fromlineno="428" tolineno="428" lineno="428" attrname="myProgressCallback" expr="cooker">
                <Name fromlineno="428" tolineno="428" lineno="428" name="cooker"/>
              </Getattr>
            </CallFunc>
          </Discard>
          <Discard fromlineno="429" tolineno="429" lineno="429">
            <CallFunc fromlineno="429" tolineno="429" lineno="429" func="Getattr(buildDepgraph)">
              <Getattr fromlineno="429" tolineno="429" lineno="429" attrname="buildDepgraph" expr="cooker">
                <Name fromlineno="429" tolineno="429" lineno="429" name="cooker"/>
              </Getattr>
            </CallFunc>
          </Discard>
          <Global fromlineno="430" tolineno="430" lineno="430"/>
          <Assign fromlineno="431" tolineno="431" lineno="431" targets="[&lt;AssName(parsed) l.431 [bb.shell] at Ox9951c2c&gt;]" value="True">
            <AssName fromlineno="431" tolineno="431" lineno="431" name="parsed"/>
            <Const fromlineno="431" tolineno="431" lineno="431" type="bool">True</Const>
          </Assign>
          <Print fromlineno="432" tolineno="432" lineno="432"/>
        </Function>
        <Function fromlineno="434" tolineno="441" lineno="434">
          <Arguments fromlineno="434" tolineno="434" lineno="None" format_args="self, params">
            <AssName fromlineno="434" tolineno="434" lineno="434" name="self"/>
            <AssName fromlineno="434" tolineno="434" lineno="434" name="params"/>
          </Arguments>
          <Assign fromlineno="436" tolineno="436" lineno="436" targets="[&lt;AssName(bbfile) l.436 [bb.shell] at Ox9951dcc&gt;]" value="self._findProvider(params[0])">
            <AssName fromlineno="436" tolineno="436" lineno="436" name="bbfile"/>
            <CallFunc fromlineno="436" tolineno="436" lineno="436" func="Getattr(_findProvider)">
              <Getattr fromlineno="436" tolineno="436" lineno="436" attrname="_findProvider" expr="self">
                <Name fromlineno="436" tolineno="436" lineno="436" name="self"/>
              </Getattr>
              <Subscript fromlineno="436" tolineno="436" lineno="436">
                <Name fromlineno="436" tolineno="436" lineno="436" name="params"/>
                <Index fromlineno="436" tolineno="436" lineno="None">
                  <Const fromlineno="436" tolineno="436" lineno="436" type="int">0</Const>
                </Index>
              </Subscript>
            </CallFunc>
          </Assign>
          <If fromlineno="437" tolineno="441" lineno="437">
            <Compare fromlineno="437" tolineno="437" lineno="437" op="('is not', &lt;Const(NoneType) l.437 [bb.shell] at Ox9951fac&gt;)">
              <Name fromlineno="437" tolineno="437" lineno="437" name="bbfile"/>
              <Const fromlineno="437" tolineno="437" lineno="437" type="NoneType">None</Const>
            </Compare>
            <Print fromlineno="438" tolineno="438" lineno="438">
              <BinOp fromlineno="438" tolineno="438" lineno="438" op="%" left="&quot;SHELL: Found bbfile '%s' for '%s'&quot;" right="(bbfile, params[0])">
                <Const fromlineno="438" tolineno="438" lineno="438" type="str">"SHELL: Found bbfile '%s' for '%s'"</Const>
                <Tuple fromlineno="438" tolineno="438" lineno="438">
                  <Name fromlineno="438" tolineno="438" lineno="438" name="bbfile"/>
                  <Subscript fromlineno="438" tolineno="438" lineno="438">
                    <Name fromlineno="438" tolineno="438" lineno="438" name="params"/>
                    <Index fromlineno="438" tolineno="438" lineno="None">
                      <Const fromlineno="438" tolineno="438" lineno="438" type="int">0</Const>
                    </Index>
                  </Subscript>
                </Tuple>
              </BinOp>
            </Print>
            <Discard fromlineno="439" tolineno="439" lineno="439">
              <CallFunc fromlineno="439" tolineno="439" lineno="439" func="Getattr(fileReparse)">
                <Getattr fromlineno="439" tolineno="439" lineno="439" attrname="fileReparse" expr="self">
                  <Name fromlineno="439" tolineno="439" lineno="439" name="self"/>
                </Getattr>
                <List fromlineno="439" tolineno="439" lineno="439">
                  <Name fromlineno="439" tolineno="439" lineno="439" name="bbfile"/>
                </List>
              </CallFunc>
            </Discard>
            <Print fromlineno="441" tolineno="441" lineno="441">
              <BinOp fromlineno="441" tolineno="441" lineno="441" op="%" left="&quot;ERROR: Nothing provides '%s'&quot;" right="params[0]">
                <Const fromlineno="441" tolineno="441" lineno="441" type="str">"ERROR: Nothing provides '%s'"</Const>
                <Subscript fromlineno="441" tolineno="441" lineno="441">
                  <Name fromlineno="441" tolineno="441" lineno="441" name="params"/>
                  <Index fromlineno="441" tolineno="441" lineno="None">
                    <Const fromlineno="441" tolineno="441" lineno="441" type="int">0</Const>
                  </Index>
                </Subscript>
              </BinOp>
            </Print>
          </If>
        </Function>
        <Assign fromlineno="442" tolineno="442" lineno="442" targets="[&lt;AssAttr(usage) l.442 [bb.shell] at Ox99553ac&gt;]" value="'&lt;providee&gt;'">
          <AssAttr fromlineno="442" tolineno="442" lineno="442" attrname="usage" expr="reparse">
            <Name fromlineno="442" tolineno="442" lineno="442" name="reparse"/>
          </AssAttr>
          <Const fromlineno="442" tolineno="442" lineno="442" type="str">'&lt;providee&gt;'</Const>
        </Assign>
        <Function fromlineno="444" tolineno="448" lineno="444">
          <Arguments fromlineno="444" tolineno="444" lineno="None" format_args="self, params">
            <AssName fromlineno="444" tolineno="444" lineno="444" name="self"/>
            <AssName fromlineno="444" tolineno="444" lineno="444" name="params"/>
          </Arguments>
          <Assign fromlineno="446" tolineno="446" lineno="446" targets="[&lt;AssName(var) l.446 [bb.shell] at Ox995556c&gt;]" value="params[0]">
            <AssName fromlineno="446" tolineno="446" lineno="446" name="var"/>
            <Subscript fromlineno="446" tolineno="446" lineno="446">
              <Name fromlineno="446" tolineno="446" lineno="446" name="params"/>
              <Index fromlineno="446" tolineno="446" lineno="None">
                <Const fromlineno="446" tolineno="446" lineno="446" type="int">0</Const>
              </Index>
            </Subscript>
          </Assign>
          <Assign fromlineno="447" tolineno="447" lineno="447" targets="[&lt;AssName(value) l.447 [bb.shell] at Ox995566c&gt;]" value="data.getVar(var, cooker.configuration.data, 1)">
            <AssName fromlineno="447" tolineno="447" lineno="447" name="value"/>
            <CallFunc fromlineno="447" tolineno="447" lineno="447" func="Getattr(getVar)">
              <Getattr fromlineno="447" tolineno="447" lineno="447" attrname="getVar" expr="data">
                <Name fromlineno="447" tolineno="447" lineno="447" name="data"/>
              </Getattr>
              <Name fromlineno="447" tolineno="447" lineno="447" name="var"/>
              <Getattr fromlineno="447" tolineno="447" lineno="447" attrname="data" expr="cooker.configuration">
                <Getattr fromlineno="447" tolineno="447" lineno="447" attrname="configuration" expr="cooker">
                  <Name fromlineno="447" tolineno="447" lineno="447" name="cooker"/>
                </Getattr>
              </Getattr>
              <Const fromlineno="447" tolineno="447" lineno="447" type="int">1</Const>
            </CallFunc>
          </Assign>
          <Print fromlineno="448" tolineno="448" lineno="448">
            <Name fromlineno="448" tolineno="448" lineno="448" name="value"/>
          </Print>
        </Function>
        <Assign fromlineno="449" tolineno="449" lineno="449" targets="[&lt;AssAttr(usage) l.449 [bb.shell] at Ox995584c&gt;]" value="'&lt;variable&gt;'">
          <AssAttr fromlineno="449" tolineno="449" lineno="449" attrname="usage" expr="getvar">
            <Name fromlineno="449" tolineno="449" lineno="449" name="getvar"/>
          </AssAttr>
          <Const fromlineno="449" tolineno="449" lineno="449" type="str">'&lt;variable&gt;'</Const>
        </Assign>
        <Function fromlineno="451" tolineno="460" lineno="451">
          <Arguments fromlineno="451" tolineno="451" lineno="None" format_args="self, params">
            <AssName fromlineno="451" tolineno="451" lineno="451" name="self"/>
            <AssName fromlineno="451" tolineno="451" lineno="451" name="params"/>
          </Arguments>
          <Assign fromlineno="453" tolineno="453" lineno="453" targets="[&lt;Tuple(tuple) l.453 [bb.shell] at Ox9955a0c&gt;]" value="params">
            <Tuple fromlineno="453" tolineno="453" lineno="453">
              <AssName fromlineno="453" tolineno="453" lineno="453" name="name"/>
              <AssName fromlineno="453" tolineno="453" lineno="453" name="var"/>
            </Tuple>
            <Name fromlineno="453" tolineno="453" lineno="453" name="params"/>
          </Assign>
          <Assign fromlineno="454" tolineno="454" lineno="454" targets="[&lt;AssName(bbfile) l.454 [bb.shell] at Ox9955b2c&gt;]" value="self._findProvider(name)">
            <AssName fromlineno="454" tolineno="454" lineno="454" name="bbfile"/>
            <CallFunc fromlineno="454" tolineno="454" lineno="454" func="Getattr(_findProvider)">
              <Getattr fromlineno="454" tolineno="454" lineno="454" attrname="_findProvider" expr="self">
                <Name fromlineno="454" tolineno="454" lineno="454" name="self"/>
              </Getattr>
              <Name fromlineno="454" tolineno="454" lineno="454" name="name"/>
            </CallFunc>
          </Assign>
          <If fromlineno="455" tolineno="460" lineno="455">
            <Compare fromlineno="455" tolineno="455" lineno="455" op="('is not', &lt;Const(NoneType) l.455 [bb.shell] at Ox9955cac&gt;)">
              <Name fromlineno="455" tolineno="455" lineno="455" name="bbfile"/>
              <Const fromlineno="455" tolineno="455" lineno="455" type="NoneType">None</Const>
            </Compare>
            <Assign fromlineno="456" tolineno="456" lineno="456" targets="[&lt;AssName(the_data) l.456 [bb.shell] at Ox9955d4c&gt;]" value="cooker.bb_cache.loadDataFull(bbfile, cooker.configuration.data)">
              <AssName fromlineno="456" tolineno="456" lineno="456" name="the_data"/>
              <CallFunc fromlineno="456" tolineno="456" lineno="456" func="Getattr(loadDataFull)">
                <Getattr fromlineno="456" tolineno="456" lineno="456" attrname="loadDataFull" expr="cooker.bb_cache">
                  <Getattr fromlineno="456" tolineno="456" lineno="456" attrname="bb_cache" expr="cooker">
                    <Name fromlineno="456" tolineno="456" lineno="456" name="cooker"/>
                  </Getattr>
                </Getattr>
                <Name fromlineno="456" tolineno="456" lineno="456" name="bbfile"/>
                <Getattr fromlineno="456" tolineno="456" lineno="456" attrname="data" expr="cooker.configuration">
                  <Getattr fromlineno="456" tolineno="456" lineno="456" attrname="configuration" expr="cooker">
                    <Name fromlineno="456" tolineno="456" lineno="456" name="cooker"/>
                  </Getattr>
                </Getattr>
              </CallFunc>
            </Assign>
            <Assign fromlineno="457" tolineno="457" lineno="457" targets="[&lt;AssName(value) l.457 [bb.shell] at Ox9955eec&gt;]" value="the_data.getVar(var, 1)">
              <AssName fromlineno="457" tolineno="457" lineno="457" name="value"/>
              <CallFunc fromlineno="457" tolineno="457" lineno="457" func="Getattr(getVar)">
                <Getattr fromlineno="457" tolineno="457" lineno="457" attrname="getVar" expr="the_data">
                  <Name fromlineno="457" tolineno="457" lineno="457" name="the_data"/>
                </Getattr>
                <Name fromlineno="457" tolineno="457" lineno="457" name="var"/>
                <Const fromlineno="457" tolineno="457" lineno="457" type="int">1</Const>
              </CallFunc>
            </Assign>
            <Print fromlineno="458" tolineno="458" lineno="458">
              <Name fromlineno="458" tolineno="458" lineno="458" name="value"/>
            </Print>
            <Print fromlineno="460" tolineno="460" lineno="460">
              <BinOp fromlineno="460" tolineno="460" lineno="460" op="%" left="&quot;ERROR: Nothing provides '%s'&quot;" right="name">
                <Const fromlineno="460" tolineno="460" lineno="460" type="str">"ERROR: Nothing provides '%s'"</Const>
                <Name fromlineno="460" tolineno="460" lineno="460" name="name"/>
              </BinOp>
            </Print>
          </If>
        </Function>
        <Assign fromlineno="461" tolineno="461" lineno="461" targets="[&lt;AssAttr(usage) l.461 [bb.shell] at Ox995912c&gt;]" value="'&lt;providee&gt; &lt;variable&gt;'">
          <AssAttr fromlineno="461" tolineno="461" lineno="461" attrname="usage" expr="peek">
            <Name fromlineno="461" tolineno="461" lineno="461" name="peek"/>
          </AssAttr>
          <Const fromlineno="461" tolineno="461" lineno="461" type="str">'&lt;providee&gt; &lt;variable&gt;'</Const>
        </Assign>
        <Function fromlineno="463" tolineno="476" lineno="463">
          <Arguments fromlineno="463" tolineno="463" lineno="None" format_args="self, params">
            <AssName fromlineno="463" tolineno="463" lineno="463" name="self"/>
            <AssName fromlineno="463" tolineno="463" lineno="463" name="params"/>
          </Arguments>
          <Assign fromlineno="465" tolineno="465" lineno="465" targets="[&lt;Tuple(tuple) l.465 [bb.shell] at Ox99592ec&gt;]" value="params">
            <Tuple fromlineno="465" tolineno="465" lineno="465">
              <AssName fromlineno="465" tolineno="465" lineno="465" name="name"/>
              <AssName fromlineno="465" tolineno="465" lineno="465" name="var"/>
              <AssName fromlineno="465" tolineno="465" lineno="465" name="value"/>
            </Tuple>
            <Name fromlineno="465" tolineno="465" lineno="465" name="params"/>
          </Assign>
          <Assign fromlineno="466" tolineno="466" lineno="466" targets="[&lt;AssName(bbfile) l.466 [bb.shell] at Ox995944c&gt;]" value="self._findProvider(name)">
            <AssName fromlineno="466" tolineno="466" lineno="466" name="bbfile"/>
            <CallFunc fromlineno="466" tolineno="466" lineno="466" func="Getattr(_findProvider)">
              <Getattr fromlineno="466" tolineno="466" lineno="466" attrname="_findProvider" expr="self">
                <Name fromlineno="466" tolineno="466" lineno="466" name="self"/>
              </Getattr>
              <Name fromlineno="466" tolineno="466" lineno="466" name="name"/>
            </CallFunc>
          </Assign>
          <If fromlineno="467" tolineno="476" lineno="467">
            <Compare fromlineno="467" tolineno="467" lineno="467" op="('is not', &lt;Const(NoneType) l.467 [bb.shell] at Ox99595cc&gt;)">
              <Name fromlineno="467" tolineno="467" lineno="467" name="bbfile"/>
              <Const fromlineno="467" tolineno="467" lineno="467" type="NoneType">None</Const>
            </Compare>
            <Print fromlineno="468" tolineno="468" lineno="468">
              <Const fromlineno="468" tolineno="468" lineno="468" type="str">'ERROR: Sorry, this functionality is currently broken'</Const>
            </Print>
            <Print fromlineno="476" tolineno="476" lineno="476">
              <BinOp fromlineno="476" tolineno="476" lineno="476" op="%" left="&quot;ERROR: Nothing provides '%s'&quot;" right="name">
                <Const fromlineno="476" tolineno="476" lineno="476" type="str">"ERROR: Nothing provides '%s'"</Const>
                <Name fromlineno="476" tolineno="476" lineno="476" name="name"/>
              </BinOp>
            </Print>
          </If>
        </Function>
        <Assign fromlineno="477" tolineno="477" lineno="477" targets="[&lt;AssAttr(usage) l.477 [bb.shell] at Ox995974c&gt;]" value="'&lt;providee&gt; &lt;variable&gt; &lt;value&gt;'">
          <AssAttr fromlineno="477" tolineno="477" lineno="477" attrname="usage" expr="poke">
            <Name fromlineno="477" tolineno="477" lineno="477" name="poke"/>
          </AssAttr>
          <Const fromlineno="477" tolineno="477" lineno="477" type="str">'&lt;providee&gt; &lt;variable&gt; &lt;value&gt;'</Const>
        </Assign>
        <Function fromlineno="479" tolineno="489" lineno="479">
          <Arguments fromlineno="479" tolineno="479" lineno="None" format_args="self, params">
            <AssName fromlineno="479" tolineno="479" lineno="479" name="self"/>
            <AssName fromlineno="479" tolineno="479" lineno="479" name="params"/>
          </Arguments>
          <Assign fromlineno="481" tolineno="481" lineno="481" targets="[&lt;AssName(what) l.481 [bb.shell] at Ox995990c&gt;]" value="params[0]">
            <AssName fromlineno="481" tolineno="481" lineno="481" name="what"/>
            <Subscript fromlineno="481" tolineno="481" lineno="481">
              <Name fromlineno="481" tolineno="481" lineno="481" name="params"/>
              <Index fromlineno="481" tolineno="481" lineno="None">
                <Const fromlineno="481" tolineno="481" lineno="481" type="int">0</Const>
              </Index>
            </Subscript>
          </Assign>
          <If fromlineno="482" tolineno="489" lineno="482">
            <Compare fromlineno="482" tolineno="482" lineno="482" op="('==', &lt;Const(str) l.482 [bb.shell] at Ox9959a6c&gt;)">
              <Name fromlineno="482" tolineno="482" lineno="482" name="what"/>
              <Const fromlineno="482" tolineno="482" lineno="482" type="str">'files'</Const>
            </Compare>
            <Discard fromlineno="483" tolineno="483" lineno="483">
              <CallFunc fromlineno="483" tolineno="483" lineno="483" func="Getattr(_checkParsed)">
                <Getattr fromlineno="483" tolineno="483" lineno="483" attrname="_checkParsed" expr="self">
                  <Name fromlineno="483" tolineno="483" lineno="483" name="self"/>
                </Getattr>
              </CallFunc>
            </Discard>
            <For fromlineno="484" tolineno="484" lineno="484">
              <AssName fromlineno="484" tolineno="484" lineno="484" name="key"/>
              <CallFunc fromlineno="484" tolineno="484" lineno="484" func="Getattr(keys)">
                <Getattr fromlineno="484" tolineno="484" lineno="484" attrname="keys" expr="cooker.status.pkg_fn">
                  <Getattr fromlineno="484" tolineno="484" lineno="484" attrname="pkg_fn" expr="cooker.status">
                    <Getattr fromlineno="484" tolineno="484" lineno="484" attrname="status" expr="cooker">
                      <Name fromlineno="484" tolineno="484" lineno="484" name="cooker"/>
                    </Getattr>
                  </Getattr>
                </Getattr>
              </CallFunc>
              <Print fromlineno="484" tolineno="484" lineno="484">
                <Name fromlineno="484" tolineno="484" lineno="484" name="key"/>
              </Print>
            </For>
            <If fromlineno="485" tolineno="489" lineno="485">
              <Compare fromlineno="485" tolineno="485" lineno="485" op="('==', &lt;Const(str) l.485 [bb.shell] at Ox9959e0c&gt;)">
                <Name fromlineno="485" tolineno="485" lineno="485" name="what"/>
                <Const fromlineno="485" tolineno="485" lineno="485" type="str">'providers'</Const>
              </Compare>
              <Discard fromlineno="486" tolineno="486" lineno="486">
                <CallFunc fromlineno="486" tolineno="486" lineno="486" func="Getattr(_checkParsed)">
                  <Getattr fromlineno="486" tolineno="486" lineno="486" attrname="_checkParsed" expr="self">
                    <Name fromlineno="486" tolineno="486" lineno="486" name="self"/>
                  </Getattr>
                </CallFunc>
              </Discard>
              <For fromlineno="487" tolineno="487" lineno="487">
                <AssName fromlineno="487" tolineno="487" lineno="487" name="key"/>
                <CallFunc fromlineno="487" tolineno="487" lineno="487" func="Getattr(keys)">
                  <Getattr fromlineno="487" tolineno="487" lineno="487" attrname="keys" expr="cooker.status.providers">
                    <Getattr fromlineno="487" tolineno="487" lineno="487" attrname="providers" expr="cooker.status">
                      <Getattr fromlineno="487" tolineno="487" lineno="487" attrname="status" expr="cooker">
                        <Name fromlineno="487" tolineno="487" lineno="487" name="cooker"/>
                      </Getattr>
                    </Getattr>
                  </Getattr>
                </CallFunc>
                <Print fromlineno="487" tolineno="487" lineno="487">
                  <Name fromlineno="487" tolineno="487" lineno="487" name="key"/>
                </Print>
              </For>
              <Print fromlineno="489" tolineno="489" lineno="489">
                <BinOp fromlineno="489" tolineno="489" lineno="489" op="%" left="'Usage: print %s'" right="self.print_.usage">
                  <Const fromlineno="489" tolineno="489" lineno="489" type="str">'Usage: print %s'</Const>
                  <Getattr fromlineno="489" tolineno="489" lineno="489" attrname="usage" expr="self.print_">
                    <Getattr fromlineno="489" tolineno="489" lineno="489" attrname="print_" expr="self">
                      <Name fromlineno="489" tolineno="489" lineno="489" name="self"/>
                    </Getattr>
                  </Getattr>
                </BinOp>
              </Print>
            </If>
          </If>
        </Function>
        <Assign fromlineno="490" tolineno="490" lineno="490" targets="[&lt;AssAttr(usage) l.490 [bb.shell] at Ox995d08c&gt;]" value="'&lt;files|providers&gt;'">
          <AssAttr fromlineno="490" tolineno="490" lineno="490" attrname="usage" expr="print_">
            <Name fromlineno="490" tolineno="490" lineno="490" name="print_"/>
          </AssAttr>
          <Const fromlineno="490" tolineno="490" lineno="490" type="str">'&lt;files|providers&gt;'</Const>
        </Assign>
        <Function fromlineno="492" tolineno="498" lineno="492">
          <Arguments fromlineno="492" tolineno="492" lineno="None" format_args="self, params">
            <AssName fromlineno="492" tolineno="492" lineno="492" name="self"/>
            <AssName fromlineno="492" tolineno="492" lineno="492" name="params"/>
          </Arguments>
          <Assign fromlineno="494" tolineno="494" lineno="494" targets="[&lt;AssAttr(ps1) l.494 [bb.shell] at Ox995d34c&gt;]" value="'EXPERT BB&gt;&gt;&gt; '">
            <AssAttr fromlineno="494" tolineno="494" lineno="494" attrname="ps1" expr="sys">
              <Name fromlineno="494" tolineno="494" lineno="494" name="sys"/>
            </AssAttr>
            <Const fromlineno="494" tolineno="494" lineno="494" type="str">'EXPERT BB&gt;&gt;&gt; '</Const>
          </Assign>
          <Assign fromlineno="495" tolineno="495" lineno="495" targets="[&lt;AssAttr(ps2) l.495 [bb.shell] at Ox995d3ec&gt;]" value="'EXPERT BB... '">
            <AssAttr fromlineno="495" tolineno="495" lineno="495" attrname="ps2" expr="sys">
              <Name fromlineno="495" tolineno="495" lineno="495" name="sys"/>
            </AssAttr>
            <Const fromlineno="495" tolineno="495" lineno="495" type="str">'EXPERT BB... '</Const>
          </Assign>
          <Import fromlineno="496" tolineno="496" lineno="496">
            <ImportName name="code"/>
          </Import>
          <Assign fromlineno="497" tolineno="497" lineno="497" targets="[&lt;AssName(interpreter) l.497 [bb.shell] at Ox995d4ec&gt;]" value="code.InteractiveConsole(dict(globals()))">
            <AssName fromlineno="497" tolineno="497" lineno="497" name="interpreter"/>
            <CallFunc fromlineno="497" tolineno="497" lineno="497" func="Getattr(InteractiveConsole)">
              <Getattr fromlineno="497" tolineno="497" lineno="497" attrname="InteractiveConsole" expr="code">
                <Name fromlineno="497" tolineno="497" lineno="497" name="code"/>
              </Getattr>
              <CallFunc fromlineno="497" tolineno="497" lineno="497" func="Name(dict)">
                <Name fromlineno="497" tolineno="497" lineno="497" name="dict"/>
                <CallFunc fromlineno="497" tolineno="497" lineno="497" func="Name(globals)">
                  <Name fromlineno="497" tolineno="497" lineno="497" name="globals"/>
                </CallFunc>
              </CallFunc>
            </CallFunc>
          </Assign>
          <Discard fromlineno="498" tolineno="498" lineno="498">
            <CallFunc fromlineno="498" tolineno="498" lineno="498" func="Getattr(interact)">
              <Getattr fromlineno="498" tolineno="498" lineno="498" attrname="interact" expr="interpreter">
                <Name fromlineno="498" tolineno="498" lineno="498" name="interpreter"/>
              </Getattr>
              <BinOp fromlineno="498" tolineno="498" lineno="498" op="%" left="&quot;SHELL: Expert Mode - BitBake Python %s\nType 'help' for more information, press CTRL-D to switch back to BBSHELL.&quot;" right="sys.version">
                <Const fromlineno="498" tolineno="498" lineno="498" type="str">"SHELL: Expert Mode - BitBake Python %s\nType 'help' for more information, press CTRL-D to switch back to BBSHELL."</Const>
                <Getattr fromlineno="498" tolineno="498" lineno="498" attrname="version" expr="sys">
                  <Name fromlineno="498" tolineno="498" lineno="498" name="sys"/>
                </Getattr>
              </BinOp>
            </CallFunc>
          </Discard>
        </Function>
        <Function fromlineno="500" tolineno="502" lineno="500">
          <Arguments fromlineno="500" tolineno="500" lineno="None" format_args="self, params">
            <AssName fromlineno="500" tolineno="500" lineno="500" name="self"/>
            <AssName fromlineno="500" tolineno="500" lineno="500" name="params"/>
          </Arguments>
          <Discard fromlineno="502" tolineno="502" lineno="502">
            <CallFunc fromlineno="502" tolineno="502" lineno="502" func="Getattr(showEnvironment)">
              <Getattr fromlineno="502" tolineno="502" lineno="502" attrname="showEnvironment" expr="cooker">
                <Name fromlineno="502" tolineno="502" lineno="502" name="cooker"/>
              </Getattr>
              <Const fromlineno="502" tolineno="502" lineno="502" type="NoneType">None</Const>
              <Name fromlineno="502" tolineno="502" lineno="502" name="params"/>
            </CallFunc>
          </Discard>
        </Function>
        <Assign fromlineno="503" tolineno="503" lineno="503" targets="[&lt;AssAttr(usage) l.503 [bb.shell] at Ox995d9ac&gt;]" value="'&lt;providee&gt;'">
          <AssAttr fromlineno="503" tolineno="503" lineno="503" attrname="usage" expr="showdata">
            <Name fromlineno="503" tolineno="503" lineno="503" name="showdata"/>
          </AssAttr>
          <Const fromlineno="503" tolineno="503" lineno="503" type="str">'&lt;providee&gt;'</Const>
        </Assign>
        <Function fromlineno="505" tolineno="509" lineno="505">
          <Arguments fromlineno="505" tolineno="505" lineno="None" format_args="self, params">
            <AssName fromlineno="505" tolineno="505" lineno="505" name="self"/>
            <AssName fromlineno="505" tolineno="505" lineno="505" name="params"/>
          </Arguments>
          <Assign fromlineno="507" tolineno="507" lineno="507" targets="[&lt;Tuple(tuple) l.507 [bb.shell] at Ox995db6c&gt;]" value="params">
            <Tuple fromlineno="507" tolineno="507" lineno="507">
              <AssName fromlineno="507" tolineno="507" lineno="507" name="var"/>
              <AssName fromlineno="507" tolineno="507" lineno="507" name="value"/>
            </Tuple>
            <Name fromlineno="507" tolineno="507" lineno="507" name="params"/>
          </Assign>
          <Discard fromlineno="508" tolineno="508" lineno="508">
            <CallFunc fromlineno="508" tolineno="508" lineno="508" func="Getattr(setVar)">
              <Getattr fromlineno="508" tolineno="508" lineno="508" attrname="setVar" expr="data">
                <Name fromlineno="508" tolineno="508" lineno="508" name="data"/>
              </Getattr>
              <Name fromlineno="508" tolineno="508" lineno="508" name="var"/>
              <Name fromlineno="508" tolineno="508" lineno="508" name="value"/>
              <Getattr fromlineno="508" tolineno="508" lineno="508" attrname="data" expr="cooker.configuration">
                <Getattr fromlineno="508" tolineno="508" lineno="508" attrname="configuration" expr="cooker">
                  <Name fromlineno="508" tolineno="508" lineno="508" name="cooker"/>
                </Getattr>
              </Getattr>
            </CallFunc>
          </Discard>
          <Print fromlineno="509" tolineno="509" lineno="509">
            <Const fromlineno="509" tolineno="509" lineno="509" type="str">'OK'</Const>
          </Print>
        </Function>
        <Assign fromlineno="510" tolineno="510" lineno="510" targets="[&lt;AssAttr(usage) l.510 [bb.shell] at Ox995de0c&gt;]" value="'&lt;variable&gt; &lt;value&gt;'">
          <AssAttr fromlineno="510" tolineno="510" lineno="510" attrname="usage" expr="setVar">
            <Name fromlineno="510" tolineno="510" lineno="510" name="setVar"/>
          </AssAttr>
          <Const fromlineno="510" tolineno="510" lineno="510" type="str">'&lt;variable&gt; &lt;value&gt;'</Const>
        </Assign>
        <Function fromlineno="512" tolineno="515" lineno="512">
          <Arguments fromlineno="512" tolineno="512" lineno="None" format_args="self, params">
            <AssName fromlineno="512" tolineno="512" lineno="512" name="self"/>
            <AssName fromlineno="512" tolineno="512" lineno="512" name="params"/>
          </Arguments>
          <Discard fromlineno="514" tolineno="514" lineno="514">
            <CallFunc fromlineno="514" tolineno="514" lineno="514" func="Getattr(build)">
              <Getattr fromlineno="514" tolineno="514" lineno="514" attrname="build" expr="self">
                <Name fromlineno="514" tolineno="514" lineno="514" name="self"/>
              </Getattr>
              <Name fromlineno="514" tolineno="514" lineno="514" name="params"/>
              <Const fromlineno="514" tolineno="514" lineno="514" type="str">'clean'</Const>
            </CallFunc>
          </Discard>
          <Discard fromlineno="515" tolineno="515" lineno="515">
            <CallFunc fromlineno="515" tolineno="515" lineno="515" func="Getattr(build)">
              <Getattr fromlineno="515" tolineno="515" lineno="515" attrname="build" expr="self">
                <Name fromlineno="515" tolineno="515" lineno="515" name="self"/>
              </Getattr>
              <Name fromlineno="515" tolineno="515" lineno="515" name="params"/>
              <Const fromlineno="515" tolineno="515" lineno="515" type="str">'build'</Const>
            </CallFunc>
          </Discard>
        </Function>
        <Assign fromlineno="516" tolineno="516" lineno="516" targets="[&lt;AssAttr(usage) l.516 [bb.shell] at Ox998218c&gt;]" value="'&lt;providee&gt;'">
          <AssAttr fromlineno="516" tolineno="516" lineno="516" attrname="usage" expr="rebuild">
            <Name fromlineno="516" tolineno="516" lineno="516" name="rebuild"/>
          </AssAttr>
          <Const fromlineno="516" tolineno="516" lineno="516" type="str">'&lt;providee&gt;'</Const>
        </Assign>
        <Function fromlineno="518" tolineno="521" lineno="518">
          <Arguments fromlineno="518" tolineno="518" lineno="None" format_args="self, params">
            <AssName fromlineno="518" tolineno="518" lineno="518" name="self"/>
            <AssName fromlineno="518" tolineno="518" lineno="518" name="params"/>
          </Arguments>
          <If fromlineno="520" tolineno="521" lineno="520">
            <Compare fromlineno="520" tolineno="520" lineno="520" op="('!=', &lt;Const(str) l.520 [bb.shell] at Ox99823ac&gt;)">
              <Name fromlineno="520" tolineno="520" lineno="520" name="params"/>
              <Const fromlineno="520" tolineno="520" lineno="520" type="str">''</Const>
            </Compare>
            <Print fromlineno="521" tolineno="521" lineno="521">
              <CallFunc fromlineno="521" tolineno="521" lineno="521" func="Getattr(getoutput)">
                <Getattr fromlineno="521" tolineno="521" lineno="521" attrname="getoutput" expr="commands">
                  <Name fromlineno="521" tolineno="521" lineno="521" name="commands"/>
                </Getattr>
                <CallFunc fromlineno="521" tolineno="521" lineno="521" func="Getattr(join)">
                  <Getattr fromlineno="521" tolineno="521" lineno="521" attrname="join" expr="' '">
                    <Const fromlineno="521" tolineno="521" lineno="521" type="str">' '</Const>
                  </Getattr>
                  <Name fromlineno="521" tolineno="521" lineno="521" name="params"/>
                </CallFunc>
              </CallFunc>
            </Print>
          </If>
        </Function>
        <Assign fromlineno="522" tolineno="522" lineno="522" targets="[&lt;AssAttr(usage) l.522 [bb.shell] at Ox998256c&gt;]" value="'&lt;...&gt;'">
          <AssAttr fromlineno="522" tolineno="522" lineno="522" attrname="usage" expr="shell">
            <Name fromlineno="522" tolineno="522" lineno="522" name="shell"/>
          </AssAttr>
          <Const fromlineno="522" tolineno="522" lineno="522" type="str">'&lt;...&gt;'</Const>
        </Assign>
        <Function fromlineno="524" tolineno="526" lineno="524">
          <Arguments fromlineno="524" tolineno="524" lineno="None" format_args="self, params">
            <AssName fromlineno="524" tolineno="524" lineno="524" name="self"/>
            <AssName fromlineno="524" tolineno="524" lineno="524" name="params"/>
          </Arguments>
          <Discard fromlineno="526" tolineno="526" lineno="526">
            <CallFunc fromlineno="526" tolineno="526" lineno="526" func="Getattr(build)">
              <Getattr fromlineno="526" tolineno="526" lineno="526" attrname="build" expr="self">
                <Name fromlineno="526" tolineno="526" lineno="526" name="self"/>
              </Getattr>
              <Name fromlineno="526" tolineno="526" lineno="526" name="params"/>
              <Const fromlineno="526" tolineno="526" lineno="526" type="str">'populate_staging'</Const>
            </CallFunc>
          </Discard>
        </Function>
        <Assign fromlineno="527" tolineno="527" lineno="527" targets="[&lt;AssAttr(usage) l.527 [bb.shell] at Ox998280c&gt;]" value="'&lt;providee&gt;'">
          <AssAttr fromlineno="527" tolineno="527" lineno="527" attrname="usage" expr="stage">
            <Name fromlineno="527" tolineno="527" lineno="527" name="stage"/>
          </AssAttr>
          <Const fromlineno="527" tolineno="527" lineno="527" type="str">'&lt;providee&gt;'</Const>
        </Assign>
        <Function fromlineno="529" tolineno="537" lineno="529">
          <Arguments fromlineno="529" tolineno="529" lineno="None" format_args="self, params">
            <AssName fromlineno="529" tolineno="529" lineno="529" name="self"/>
            <AssName fromlineno="529" tolineno="529" lineno="529" name="params"/>
          </Arguments>
          <Print fromlineno="531" tolineno="531" lineno="531">
            <BinOp fromlineno="531" tolineno="531" lineno="531" op="*" left="'-'" right="78">
              <Const fromlineno="531" tolineno="531" lineno="531" type="str">'-'</Const>
              <Const fromlineno="531" tolineno="531" lineno="531" type="int">78</Const>
            </BinOp>
          </Print>
          <Print fromlineno="532" tolineno="532" lineno="532">
            <BinOp fromlineno="532" tolineno="532" lineno="532" op="%" left="&quot;building list = '%s'&quot;" right="cooker.building_list">
              <Const fromlineno="532" tolineno="532" lineno="532" type="str">"building list = '%s'"</Const>
              <Getattr fromlineno="532" tolineno="532" lineno="532" attrname="building_list" expr="cooker">
                <Name fromlineno="532" tolineno="532" lineno="532" name="cooker"/>
              </Getattr>
            </BinOp>
          </Print>
          <Print fromlineno="533" tolineno="533" lineno="533">
            <BinOp fromlineno="533" tolineno="533" lineno="533" op="%" left="&quot;build path = '%s'&quot;" right="cooker.build_path">
              <Const fromlineno="533" tolineno="533" lineno="533" type="str">"build path = '%s'"</Const>
              <Getattr fromlineno="533" tolineno="533" lineno="533" attrname="build_path" expr="cooker">
                <Name fromlineno="533" tolineno="533" lineno="533" name="cooker"/>
              </Getattr>
            </BinOp>
          </Print>
          <Print fromlineno="534" tolineno="534" lineno="534">
            <BinOp fromlineno="534" tolineno="534" lineno="534" op="%" left="&quot;consider_msgs_cache = '%s'&quot;" right="cooker.consider_msgs_cache">
              <Const fromlineno="534" tolineno="534" lineno="534" type="str">"consider_msgs_cache = '%s'"</Const>
              <Getattr fromlineno="534" tolineno="534" lineno="534" attrname="consider_msgs_cache" expr="cooker">
                <Name fromlineno="534" tolineno="534" lineno="534" name="cooker"/>
              </Getattr>
            </BinOp>
          </Print>
          <Print fromlineno="535" tolineno="535" lineno="535">
            <BinOp fromlineno="535" tolineno="535" lineno="535" op="%" left="&quot;build stats = '%s'&quot;" right="cooker.stats">
              <Const fromlineno="535" tolineno="535" lineno="535" type="str">"build stats = '%s'"</Const>
              <Getattr fromlineno="535" tolineno="535" lineno="535" attrname="stats" expr="cooker">
                <Name fromlineno="535" tolineno="535" lineno="535" name="cooker"/>
              </Getattr>
            </BinOp>
          </Print>
          <If fromlineno="536" tolineno="536" lineno="536">
            <Compare fromlineno="536" tolineno="536" lineno="536" op="('is not', &lt;Const(NoneType) l.536 [bb.shell] at Ox9982dcc&gt;)">
              <Name fromlineno="536" tolineno="536" lineno="536" name="last_exception"/>
              <Const fromlineno="536" tolineno="536" lineno="536" type="NoneType">None</Const>
            </Compare>
            <Print fromlineno="536" tolineno="536" lineno="536">
              <BinOp fromlineno="536" tolineno="536" lineno="536" op="%" left="&quot;last_exception = '%s'&quot;" right="repr(last_exception.args)">
                <Const fromlineno="536" tolineno="536" lineno="536" type="str">"last_exception = '%s'"</Const>
                <CallFunc fromlineno="536" tolineno="536" lineno="536" func="Name(repr)">
                  <Name fromlineno="536" tolineno="536" lineno="536" name="repr"/>
                  <Getattr fromlineno="536" tolineno="536" lineno="536" attrname="args" expr="last_exception">
                    <Name fromlineno="536" tolineno="536" lineno="536" name="last_exception"/>
                  </Getattr>
                </CallFunc>
              </BinOp>
            </Print>
          </If>
          <Print fromlineno="537" tolineno="537" lineno="537">
            <BinOp fromlineno="537" tolineno="537" lineno="537" op="%" left="&quot;memory output contents = '%s'&quot;" right="self._shell.myout._buffer">
              <Const fromlineno="537" tolineno="537" lineno="537" type="str">"memory output contents = '%s'"</Const>
              <Getattr fromlineno="537" tolineno="537" lineno="537" attrname="_buffer" expr="self._shell.myout">
                <Getattr fromlineno="537" tolineno="537" lineno="537" attrname="myout" expr="self._shell">
                  <Getattr fromlineno="537" tolineno="537" lineno="537" attrname="_shell" expr="self">
                    <Name fromlineno="537" tolineno="537" lineno="537" name="self"/>
                  </Getattr>
                </Getattr>
              </Getattr>
            </BinOp>
          </Print>
        </Function>
        <Function fromlineno="539" tolineno="541" lineno="539">
          <Arguments fromlineno="539" tolineno="539" lineno="None" format_args="self, params">
            <AssName fromlineno="539" tolineno="539" lineno="539" name="self"/>
            <AssName fromlineno="539" tolineno="539" lineno="539" name="params"/>
          </Arguments>
          <Print fromlineno="541" tolineno="541" lineno="541">
            <BinOp fromlineno="541" tolineno="541" lineno="541" op="%" left="&quot;testCommand called with '%s'&quot;" right="params">
              <Const fromlineno="541" tolineno="541" lineno="541" type="str">"testCommand called with '%s'"</Const>
              <Name fromlineno="541" tolineno="541" lineno="541" name="params"/>
            </BinOp>
          </Print>
        </Function>
        <Function fromlineno="543" tolineno="545" lineno="543">
          <Arguments fromlineno="543" tolineno="543" lineno="None" format_args="self, params">
            <AssName fromlineno="543" tolineno="543" lineno="543" name="self"/>
            <AssName fromlineno="543" tolineno="543" lineno="543" name="params"/>
          </Arguments>
          <Discard fromlineno="545" tolineno="545" lineno="545">
            <CallFunc fromlineno="545" tolineno="545" lineno="545" func="Getattr(build)">
              <Getattr fromlineno="545" tolineno="545" lineno="545" attrname="build" expr="self">
                <Name fromlineno="545" tolineno="545" lineno="545" name="self"/>
              </Getattr>
              <Name fromlineno="545" tolineno="545" lineno="545" name="params"/>
              <Const fromlineno="545" tolineno="545" lineno="545" type="str">'unpack'</Const>
            </CallFunc>
          </Discard>
        </Function>
        <Assign fromlineno="546" tolineno="546" lineno="546" targets="[&lt;AssAttr(usage) l.546 [bb.shell] at Ox998640c&gt;]" value="'&lt;providee&gt;'">
          <AssAttr fromlineno="546" tolineno="546" lineno="546" attrname="usage" expr="unpack">
            <Name fromlineno="546" tolineno="546" lineno="546" name="unpack"/>
          </AssAttr>
          <Const fromlineno="546" tolineno="546" lineno="546" type="str">'&lt;providee&gt;'</Const>
        </Assign>
        <Function fromlineno="548" tolineno="571" lineno="548">
          <Arguments fromlineno="548" tolineno="548" lineno="None" format_args="self, params">
            <AssName fromlineno="548" tolineno="548" lineno="548" name="self"/>
            <AssName fromlineno="548" tolineno="548" lineno="548" name="params"/>
          </Arguments>
          <Assign fromlineno="551" tolineno="551" lineno="551" targets="[&lt;AssName(item) l.551 [bb.shell] at Ox99865cc&gt;]" value="params[0]">
            <AssName fromlineno="551" tolineno="551" lineno="551" name="item"/>
            <Subscript fromlineno="551" tolineno="551" lineno="551">
              <Name fromlineno="551" tolineno="551" lineno="551" name="params"/>
              <Index fromlineno="551" tolineno="551" lineno="None">
                <Const fromlineno="551" tolineno="551" lineno="551" type="int">0</Const>
              </Index>
            </Subscript>
          </Assign>
          <Discard fromlineno="553" tolineno="553" lineno="553">
            <CallFunc fromlineno="553" tolineno="553" lineno="553" func="Getattr(_checkParsed)">
              <Getattr fromlineno="553" tolineno="553" lineno="553" attrname="_checkParsed" expr="self">
                <Name fromlineno="553" tolineno="553" lineno="553" name="self"/>
              </Getattr>
            </CallFunc>
          </Discard>
          <Assign fromlineno="555" tolineno="555" lineno="555" targets="[&lt;AssName(preferred) l.555 [bb.shell] at Ox998676c&gt;]" value="data.getVar(('PREFERRED_PROVIDER_%s') % (item), cooker.configuration.data, 1)">
            <AssName fromlineno="555" tolineno="555" lineno="555" name="preferred"/>
            <CallFunc fromlineno="555" tolineno="555" lineno="555" func="Getattr(getVar)">
              <Getattr fromlineno="555" tolineno="555" lineno="555" attrname="getVar" expr="data">
                <Name fromlineno="555" tolineno="555" lineno="555" name="data"/>
              </Getattr>
              <BinOp fromlineno="555" tolineno="555" lineno="555" op="%" left="'PREFERRED_PROVIDER_%s'" right="item">
                <Const fromlineno="555" tolineno="555" lineno="555" type="str">'PREFERRED_PROVIDER_%s'</Const>
                <Name fromlineno="555" tolineno="555" lineno="555" name="item"/>
              </BinOp>
              <Getattr fromlineno="555" tolineno="555" lineno="555" attrname="data" expr="cooker.configuration">
                <Getattr fromlineno="555" tolineno="555" lineno="555" attrname="configuration" expr="cooker">
                  <Name fromlineno="555" tolineno="555" lineno="555" name="cooker"/>
                </Getattr>
              </Getattr>
              <Const fromlineno="555" tolineno="555" lineno="555" type="int">1</Const>
            </CallFunc>
          </Assign>
          <If fromlineno="556" tolineno="556" lineno="556">
            <UnaryOp fromlineno="556" tolineno="556" lineno="556">
              <Name fromlineno="556" tolineno="556" lineno="556" name="preferred"/>
            </UnaryOp>
            <Assign fromlineno="556" tolineno="556" lineno="556" targets="[&lt;AssName(preferred) l.556 [bb.shell] at Ox99869ec&gt;]" value="item">
              <AssName fromlineno="556" tolineno="556" lineno="556" name="preferred"/>
              <Name fromlineno="556" tolineno="556" lineno="556" name="item"/>
            </Assign>
          </If>
          <TryExcept fromlineno="558" tolineno="561" lineno="558">
            <Assign fromlineno="559" tolineno="559" lineno="559" targets="[&lt;Tuple(tuple) l.559 [bb.shell] at Ox9986acc&gt;]" value="Providers.findBestProvider(preferred, cooker.configuration.data, cooker.status)">
              <Tuple fromlineno="559" tolineno="559" lineno="559">
                <AssName fromlineno="559" tolineno="559" lineno="559" name="lv"/>
                <AssName fromlineno="559" tolineno="559" lineno="559" name="lf"/>
                <AssName fromlineno="559" tolineno="559" lineno="559" name="pv"/>
                <AssName fromlineno="559" tolineno="559" lineno="559" name="pf"/>
              </Tuple>
              <CallFunc fromlineno="559" tolineno="559" lineno="559" func="Getattr(findBestProvider)">
                <Getattr fromlineno="559" tolineno="559" lineno="559" attrname="findBestProvider" expr="Providers">
                  <Name fromlineno="559" tolineno="559" lineno="559" name="Providers"/>
                </Getattr>
                <Name fromlineno="559" tolineno="559" lineno="559" name="preferred"/>
                <Getattr fromlineno="559" tolineno="559" lineno="559" attrname="data" expr="cooker.configuration">
                  <Getattr fromlineno="559" tolineno="559" lineno="559" attrname="configuration" expr="cooker">
                    <Name fromlineno="559" tolineno="559" lineno="559" name="cooker"/>
                  </Getattr>
                </Getattr>
                <Getattr fromlineno="559" tolineno="559" lineno="559" attrname="status" expr="cooker">
                  <Name fromlineno="559" tolineno="559" lineno="559" name="cooker"/>
                </Getattr>
              </CallFunc>
            </Assign>
            <ExceptHandler fromlineno="560" tolineno="561" lineno="560">
              <Name fromlineno="560" tolineno="560" lineno="560" name="KeyError"/>
              <Assign fromlineno="561" tolineno="561" lineno="561" targets="[&lt;Tuple(tuple) l.561 [bb.shell] at Ox9986e2c&gt;]" value="((None)) * (4)">
                <Tuple fromlineno="561" tolineno="561" lineno="561">
                  <AssName fromlineno="561" tolineno="561" lineno="561" name="lv"/>
                  <AssName fromlineno="561" tolineno="561" lineno="561" name="lf"/>
                  <AssName fromlineno="561" tolineno="561" lineno="561" name="pv"/>
                  <AssName fromlineno="561" tolineno="561" lineno="561" name="pf"/>
                </Tuple>
                <BinOp fromlineno="561" tolineno="561" lineno="561" op="*" left="(None)" right="4">
                  <Tuple fromlineno="561" tolineno="561" lineno="561">
                    <Const fromlineno="561" tolineno="561" lineno="561" type="NoneType">None</Const>
                  </Tuple>
                  <Const fromlineno="561" tolineno="561" lineno="561" type="int">4</Const>
                </BinOp>
              </Assign>
            </ExceptHandler>
          </TryExcept>
          <TryExcept fromlineno="563" tolineno="571" lineno="563">
            <Assign fromlineno="564" tolineno="564" lineno="564" targets="[&lt;AssName(providers) l.564 [bb.shell] at Ox998a02c&gt;]" value="cooker.status.providers[item]">
              <AssName fromlineno="564" tolineno="564" lineno="564" name="providers"/>
              <Subscript fromlineno="564" tolineno="564" lineno="564">
                <Getattr fromlineno="564" tolineno="564" lineno="564" attrname="providers" expr="cooker.status">
                  <Getattr fromlineno="564" tolineno="564" lineno="564" attrname="status" expr="cooker">
                    <Name fromlineno="564" tolineno="564" lineno="564" name="cooker"/>
                  </Getattr>
                </Getattr>
                <Index fromlineno="564" tolineno="564" lineno="None">
                  <Name fromlineno="564" tolineno="564" lineno="564" name="item"/>
                </Index>
              </Subscript>
            </Assign>
            <ExceptHandler fromlineno="565" tolineno="566" lineno="565">
              <Name fromlineno="565" tolineno="565" lineno="565" name="KeyError"/>
              <Print fromlineno="566" tolineno="566" lineno="566">
                <Const fromlineno="566" tolineno="566" lineno="566" type="str">'SHELL: ERROR: Nothing provides'</Const>
                <Name fromlineno="566" tolineno="566" lineno="566" name="preferred"/>
              </Print>
            </ExceptHandler>
            <For fromlineno="568" tolineno="571" lineno="568">
              <AssName fromlineno="568" tolineno="568" lineno="568" name="provider"/>
              <Name fromlineno="568" tolineno="568" lineno="568" name="providers"/>
              <If fromlineno="569" tolineno="570" lineno="569">
                <Compare fromlineno="569" tolineno="569" lineno="569" op="('==', &lt;Name(pf) l.569 [bb.shell] at Ox998a3ac&gt;)">
                  <Name fromlineno="569" tolineno="569" lineno="569" name="provider"/>
                  <Name fromlineno="569" tolineno="569" lineno="569" name="pf"/>
                </Compare>
                <Assign fromlineno="569" tolineno="569" lineno="569" targets="[&lt;AssName(provider) l.569 [bb.shell] at Ox998a44c&gt;]" value="(' (***) %s') % (provider)">
                  <AssName fromlineno="569" tolineno="569" lineno="569" name="provider"/>
                  <BinOp fromlineno="569" tolineno="569" lineno="569" op="%" left="' (***) %s'" right="provider">
                    <Const fromlineno="569" tolineno="569" lineno="569" type="str">' (***) %s'</Const>
                    <Name fromlineno="569" tolineno="569" lineno="569" name="provider"/>
                  </BinOp>
                </Assign>
                <Assign fromlineno="570" tolineno="570" lineno="570" targets="[&lt;AssName(provider) l.570 [bb.shell] at Ox998a52c&gt;]" value="('       %s') % (provider)">
                  <AssName fromlineno="570" tolineno="570" lineno="570" name="provider"/>
                  <BinOp fromlineno="570" tolineno="570" lineno="570" op="%" left="'       %s'" right="provider">
                    <Const fromlineno="570" tolineno="570" lineno="570" type="str">'       %s'</Const>
                    <Name fromlineno="570" tolineno="570" lineno="570" name="provider"/>
                  </BinOp>
                </Assign>
              </If>
              <Print fromlineno="571" tolineno="571" lineno="571">
                <Name fromlineno="571" tolineno="571" lineno="571" name="provider"/>
              </Print>
            </For>
          </TryExcept>
        </Function>
        <Assign fromlineno="572" tolineno="572" lineno="572" targets="[&lt;AssAttr(usage) l.572 [bb.shell] at Ox998a5ec&gt;]" value="'&lt;providee&gt;'">
          <AssAttr fromlineno="572" tolineno="572" lineno="572" attrname="usage" expr="which">
            <Name fromlineno="572" tolineno="572" lineno="572" name="which"/>
          </AssAttr>
          <Const fromlineno="572" tolineno="572" lineno="572" type="str">'&lt;providee&gt;'</Const>
        </Assign>
      </Class>
      <Function fromlineno="578" tolineno="585" lineno="578">
        <Arguments fromlineno="578" tolineno="578" lineno="None" format_args="bbfile">
          <AssName fromlineno="578" tolineno="578" lineno="578" name="bbfile"/>
        </Arguments>
        <If fromlineno="580" tolineno="580" lineno="580">
          <UnaryOp fromlineno="580" tolineno="580" lineno="580">
            <Getattr fromlineno="580" tolineno="580" lineno="580" attrname="status" expr="cooker">
              <Name fromlineno="580" tolineno="580" lineno="580" name="cooker"/>
            </Getattr>
          </UnaryOp>
          <Return fromlineno="580" tolineno="580" lineno="580">
            <Name fromlineno="580" tolineno="580" lineno="580" name="bbfile"/>
          </Return>
        </If>
        <If fromlineno="581" tolineno="581" lineno="581">
          <UnaryOp fromlineno="581" tolineno="581" lineno="581">
            <Getattr fromlineno="581" tolineno="581" lineno="581" attrname="pkg_fn" expr="cooker.status">
              <Getattr fromlineno="581" tolineno="581" lineno="581" attrname="status" expr="cooker">
                <Name fromlineno="581" tolineno="581" lineno="581" name="cooker"/>
              </Getattr>
            </Getattr>
          </UnaryOp>
          <Return fromlineno="581" tolineno="581" lineno="581">
            <Name fromlineno="581" tolineno="581" lineno="581" name="bbfile"/>
          </Return>
        </If>
        <For fromlineno="582" tolineno="584" lineno="582">
          <AssName fromlineno="582" tolineno="582" lineno="582" name="key"/>
          <CallFunc fromlineno="582" tolineno="582" lineno="582" func="Getattr(keys)">
            <Getattr fromlineno="582" tolineno="582" lineno="582" attrname="keys" expr="cooker.status.pkg_fn">
              <Getattr fromlineno="582" tolineno="582" lineno="582" attrname="pkg_fn" expr="cooker.status">
                <Getattr fromlineno="582" tolineno="582" lineno="582" attrname="status" expr="cooker">
                  <Name fromlineno="582" tolineno="582" lineno="582" name="cooker"/>
                </Getattr>
              </Getattr>
            </Getattr>
          </CallFunc>
          <If fromlineno="583" tolineno="584" lineno="583">
            <CallFunc fromlineno="583" tolineno="583" lineno="583" func="Getattr(endswith)">
              <Getattr fromlineno="583" tolineno="583" lineno="583" attrname="endswith" expr="key">
                <Name fromlineno="583" tolineno="583" lineno="583" name="key"/>
              </Getattr>
              <Name fromlineno="583" tolineno="583" lineno="583" name="bbfile"/>
            </CallFunc>
            <Return fromlineno="584" tolineno="584" lineno="584">
              <Name fromlineno="584" tolineno="584" lineno="584" name="key"/>
            </Return>
          </If>
        </For>
        <Return fromlineno="585" tolineno="585" lineno="585">
          <Name fromlineno="585" tolineno="585" lineno="585" name="bbfile"/>
        </Return>
      </Function>
      <Function fromlineno="587" tolineno="609" lineno="587">
        <Arguments fromlineno="587" tolineno="587" lineno="None" format_args="desc, content">
          <AssName fromlineno="587" tolineno="587" lineno="587" name="desc"/>
          <AssName fromlineno="587" tolineno="587" lineno="587" name="content"/>
        </Arguments>
        <Assign fromlineno="589" tolineno="589" lineno="589" targets="[&lt;AssName(mydata) l.589 [bb.shell] at Ox998ad4c&gt;]" value="{}">
          <AssName fromlineno="589" tolineno="589" lineno="589" name="mydata"/>
          <Dict fromlineno="589" tolineno="589" lineno="589"/>
        </Assign>
        <Assign fromlineno="590" tolineno="590" lineno="590" targets="[&lt;Subscript() l.590 [bb.shell] at Ox998ae0c&gt;]" value="'Plain Text'">
          <Subscript fromlineno="590" tolineno="590" lineno="590">
            <Name fromlineno="590" tolineno="590" lineno="590" name="mydata"/>
            <Index fromlineno="590" tolineno="590" lineno="None">
              <Const fromlineno="590" tolineno="590" lineno="590" type="str">'lang'</Const>
            </Index>
          </Subscript>
          <Const fromlineno="590" tolineno="590" lineno="590" type="str">'Plain Text'</Const>
        </Assign>
        <Assign fromlineno="591" tolineno="591" lineno="591" targets="[&lt;Subscript() l.591 [bb.shell] at Ox998aeec&gt;]" value="desc">
          <Subscript fromlineno="591" tolineno="591" lineno="591">
            <Name fromlineno="591" tolineno="591" lineno="591" name="mydata"/>
            <Index fromlineno="591" tolineno="591" lineno="None">
              <Const fromlineno="591" tolineno="591" lineno="591" type="str">'desc'</Const>
            </Index>
          </Subscript>
          <Name fromlineno="591" tolineno="591" lineno="591" name="desc"/>
        </Assign>
        <Assign fromlineno="592" tolineno="592" lineno="592" targets="[&lt;Subscript() l.592 [bb.shell] at Ox998afcc&gt;]" value="'No'">
          <Subscript fromlineno="592" tolineno="592" lineno="592">
            <Name fromlineno="592" tolineno="592" lineno="592" name="mydata"/>
            <Index fromlineno="592" tolineno="592" lineno="None">
              <Const fromlineno="592" tolineno="592" lineno="592" type="str">'cvt_tabs'</Const>
            </Index>
          </Subscript>
          <Const fromlineno="592" tolineno="592" lineno="592" type="str">'No'</Const>
        </Assign>
        <Assign fromlineno="593" tolineno="593" lineno="593" targets="[&lt;Subscript() l.593 [bb.shell] at Ox998e0cc&gt;]" value="('%s@%s') % ((os.environ.get('USER', 'unknown'), (socket.gethostname()) or ('unknown')))">
          <Subscript fromlineno="593" tolineno="593" lineno="593">
            <Name fromlineno="593" tolineno="593" lineno="593" name="mydata"/>
            <Index fromlineno="593" tolineno="593" lineno="None">
              <Const fromlineno="593" tolineno="593" lineno="593" type="str">'nick'</Const>
            </Index>
          </Subscript>
          <BinOp fromlineno="593" tolineno="593" lineno="593" op="%" left="'%s@%s'" right="(os.environ.get('USER', 'unknown'), (socket.gethostname()) or ('unknown'))">
            <Const fromlineno="593" tolineno="593" lineno="593" type="str">'%s@%s'</Const>
            <Tuple fromlineno="593" tolineno="593" lineno="593">
              <CallFunc fromlineno="593" tolineno="593" lineno="593" func="Getattr(get)">
                <Getattr fromlineno="593" tolineno="593" lineno="593" attrname="get" expr="os.environ">
                  <Getattr fromlineno="593" tolineno="593" lineno="593" attrname="environ" expr="os">
                    <Name fromlineno="593" tolineno="593" lineno="593" name="os"/>
                  </Getattr>
                </Getattr>
                <Const fromlineno="593" tolineno="593" lineno="593" type="str">'USER'</Const>
                <Const fromlineno="593" tolineno="593" lineno="593" type="str">'unknown'</Const>
              </CallFunc>
              <BoolOp fromlineno="593" tolineno="593" lineno="593" op="or" values="socket.gethostname(),'unknown',">
                <CallFunc fromlineno="593" tolineno="593" lineno="593" func="Getattr(gethostname)">
                  <Getattr fromlineno="593" tolineno="593" lineno="593" attrname="gethostname" expr="socket">
                    <Name fromlineno="593" tolineno="593" lineno="593" name="socket"/>
                  </Getattr>
                </CallFunc>
                <Const fromlineno="593" tolineno="593" lineno="593" type="str">'unknown'</Const>
              </BoolOp>
            </Tuple>
          </BinOp>
        </Assign>
        <Assign fromlineno="594" tolineno="594" lineno="594" targets="[&lt;Subscript() l.594 [bb.shell] at Ox998e3cc&gt;]" value="content">
          <Subscript fromlineno="594" tolineno="594" lineno="594">
            <Name fromlineno="594" tolineno="594" lineno="594" name="mydata"/>
            <Index fromlineno="594" tolineno="594" lineno="None">
              <Const fromlineno="594" tolineno="594" lineno="594" type="str">'text'</Const>
            </Index>
          </Subscript>
          <Name fromlineno="594" tolineno="594" lineno="594" name="content"/>
        </Assign>
        <Assign fromlineno="595" tolineno="595" lineno="595" targets="[&lt;AssName(params) l.595 [bb.shell] at Ox998e4ac&gt;]" value="urllib.urlencode(mydata)">
          <AssName fromlineno="595" tolineno="595" lineno="595" name="params"/>
          <CallFunc fromlineno="595" tolineno="595" lineno="595" func="Getattr(urlencode)">
            <Getattr fromlineno="595" tolineno="595" lineno="595" attrname="urlencode" expr="urllib">
              <Name fromlineno="595" tolineno="595" lineno="595" name="urllib"/>
            </Getattr>
            <Name fromlineno="595" tolineno="595" lineno="595" name="mydata"/>
          </CallFunc>
        </Assign>
        <Assign fromlineno="596" tolineno="596" lineno="596" targets="[&lt;AssName(headers) l.596 [bb.shell] at Ox998e5cc&gt;]" value="{'Content-type': 'application/x-www-form-urlencoded', 'Accept': 'text/plain'}">
          <AssName fromlineno="596" tolineno="596" lineno="596" name="headers"/>
          <Dict fromlineno="596" tolineno="596" lineno="596">
            <Const fromlineno="596" tolineno="596" lineno="596" type="str">'Content-type'</Const>
            <Const fromlineno="596" tolineno="596" lineno="596" type="str">'application/x-www-form-urlencoded'</Const>
            <Const fromlineno="596" tolineno="596" lineno="596" type="str">'Accept'</Const>
            <Const fromlineno="596" tolineno="596" lineno="596" type="str">'text/plain'</Const>
          </Dict>
        </Assign>
        <Assign fromlineno="598" tolineno="598" lineno="598" targets="[&lt;AssName(host) l.598 [bb.shell] at Ox998e74c&gt;]" value="'rafb.net'">
          <AssName fromlineno="598" tolineno="598" lineno="598" name="host"/>
          <Const fromlineno="598" tolineno="598" lineno="598" type="str">'rafb.net'</Const>
        </Assign>
        <Assign fromlineno="599" tolineno="599" lineno="599" targets="[&lt;AssName(conn) l.599 [bb.shell] at Ox998e7ec&gt;]" value="httplib.HTTPConnection(('%s:80') % (host))">
          <AssName fromlineno="599" tolineno="599" lineno="599" name="conn"/>
          <CallFunc fromlineno="599" tolineno="599" lineno="599" func="Getattr(HTTPConnection)">
            <Getattr fromlineno="599" tolineno="599" lineno="599" attrname="HTTPConnection" expr="httplib">
              <Name fromlineno="599" tolineno="599" lineno="599" name="httplib"/>
            </Getattr>
            <BinOp fromlineno="599" tolineno="599" lineno="599" op="%" left="'%s:80'" right="host">
              <Const fromlineno="599" tolineno="599" lineno="599" type="str">'%s:80'</Const>
              <Name fromlineno="599" tolineno="599" lineno="599" name="host"/>
            </BinOp>
          </CallFunc>
        </Assign>
        <Discard fromlineno="600" tolineno="600" lineno="600">
          <CallFunc fromlineno="600" tolineno="600" lineno="600" func="Getattr(request)">
            <Getattr fromlineno="600" tolineno="600" lineno="600" attrname="request" expr="conn">
              <Name fromlineno="600" tolineno="600" lineno="600" name="conn"/>
            </Getattr>
            <Const fromlineno="600" tolineno="600" lineno="600" type="str">'POST'</Const>
            <Const fromlineno="600" tolineno="600" lineno="600" type="str">'/paste/paste.php'</Const>
            <Name fromlineno="600" tolineno="600" lineno="600" name="params"/>
            <Name fromlineno="600" tolineno="600" lineno="600" name="headers"/>
          </CallFunc>
        </Discard>
        <Assign fromlineno="602" tolineno="602" lineno="602" targets="[&lt;AssName(response) l.602 [bb.shell] at Ox998ea6c&gt;]" value="conn.getresponse()">
          <AssName fromlineno="602" tolineno="602" lineno="602" name="response"/>
          <CallFunc fromlineno="602" tolineno="602" lineno="602" func="Getattr(getresponse)">
            <Getattr fromlineno="602" tolineno="602" lineno="602" attrname="getresponse" expr="conn">
              <Name fromlineno="602" tolineno="602" lineno="602" name="conn"/>
            </Getattr>
          </CallFunc>
        </Assign>
        <Discard fromlineno="603" tolineno="603" lineno="603">
          <CallFunc fromlineno="603" tolineno="603" lineno="603" func="Getattr(close)">
            <Getattr fromlineno="603" tolineno="603" lineno="603" attrname="close" expr="conn">
              <Name fromlineno="603" tolineno="603" lineno="603" name="conn"/>
            </Getattr>
          </CallFunc>
        </Discard>
        <If fromlineno="605" tolineno="609" lineno="605">
          <Compare fromlineno="605" tolineno="605" lineno="605" op="('==', &lt;Const(int) l.605 [bb.shell] at Ox998ec8c&gt;)">
            <Getattr fromlineno="605" tolineno="605" lineno="605" attrname="status" expr="response">
              <Name fromlineno="605" tolineno="605" lineno="605" name="response"/>
            </Getattr>
            <Const fromlineno="605" tolineno="605" lineno="605" type="int">302</Const>
          </Compare>
          <Assign fromlineno="606" tolineno="606" lineno="606" targets="[&lt;AssName(location) l.606 [bb.shell] at Ox998ed2c&gt;]" value="(response.getheader('location')) or ('unknown')">
            <AssName fromlineno="606" tolineno="606" lineno="606" name="location"/>
            <BoolOp fromlineno="606" tolineno="606" lineno="606" op="or" values="response.getheader('location'),'unknown',">
              <CallFunc fromlineno="606" tolineno="606" lineno="606" func="Getattr(getheader)">
                <Getattr fromlineno="606" tolineno="606" lineno="606" attrname="getheader" expr="response">
                  <Name fromlineno="606" tolineno="606" lineno="606" name="response"/>
                </Getattr>
                <Const fromlineno="606" tolineno="606" lineno="606" type="str">'location'</Const>
              </CallFunc>
              <Const fromlineno="606" tolineno="606" lineno="606" type="str">'unknown'</Const>
            </BoolOp>
          </Assign>
          <Print fromlineno="607" tolineno="607" lineno="607">
            <BinOp fromlineno="607" tolineno="607" lineno="607" op="%" left="'SHELL: Pasted to http://%s%s'" right="(host, location)">
              <Const fromlineno="607" tolineno="607" lineno="607" type="str">'SHELL: Pasted to http://%s%s'</Const>
              <Tuple fromlineno="607" tolineno="607" lineno="607">
                <Name fromlineno="607" tolineno="607" lineno="607" name="host"/>
                <Name fromlineno="607" tolineno="607" lineno="607" name="location"/>
              </Tuple>
            </BinOp>
          </Print>
          <Print fromlineno="609" tolineno="609" lineno="609">
            <BinOp fromlineno="609" tolineno="609" lineno="609" op="%" left="'ERROR: %s %s'" right="(response.status, response.reason)">
              <Const fromlineno="609" tolineno="609" lineno="609" type="str">'ERROR: %s %s'</Const>
              <Tuple fromlineno="609" tolineno="609" lineno="609">
                <Getattr fromlineno="609" tolineno="609" lineno="609" attrname="status" expr="response">
                  <Name fromlineno="609" tolineno="609" lineno="609" name="response"/>
                </Getattr>
                <Getattr fromlineno="609" tolineno="609" lineno="609" attrname="reason" expr="response">
                  <Name fromlineno="609" tolineno="609" lineno="609" name="response"/>
                </Getattr>
              </Tuple>
            </BinOp>
          </Print>
        </If>
      </Function>
      <Function fromlineno="611" tolineno="641" lineno="611">
        <Arguments fromlineno="611" tolineno="611" lineno="None" format_args="text, state">
          <AssName fromlineno="611" tolineno="611" lineno="611" name="text"/>
          <AssName fromlineno="611" tolineno="611" lineno="611" name="state"/>
        </Arguments>
        <Discard fromlineno="613" tolineno="613" lineno="613">
          <CallFunc fromlineno="613" tolineno="613" lineno="613" func="Name(debugOut)">
            <Name fromlineno="613" tolineno="613" lineno="613" name="debugOut"/>
            <BinOp fromlineno="613" tolineno="613" lineno="613" op="%" left="&quot;completer called with text='%s', state='%d'&quot;" right="(text, state)">
              <Const fromlineno="613" tolineno="613" lineno="613" type="str">"completer called with text='%s', state='%d'"</Const>
              <Tuple fromlineno="613" tolineno="613" lineno="613">
                <Name fromlineno="613" tolineno="613" lineno="613" name="text"/>
                <Name fromlineno="613" tolineno="613" lineno="613" name="state"/>
              </Tuple>
            </BinOp>
          </CallFunc>
        </Discard>
        <If fromlineno="615" tolineno="636" lineno="615">
          <Compare fromlineno="615" tolineno="615" lineno="615" op="('==', &lt;Const(int) l.615 [bb.shell] at Ox99923ac&gt;)">
            <Name fromlineno="615" tolineno="615" lineno="615" name="state"/>
            <Const fromlineno="615" tolineno="615" lineno="615" type="int">0</Const>
          </Compare>
          <Assign fromlineno="616" tolineno="616" lineno="616" targets="[&lt;AssName(line) l.616 [bb.shell] at Ox999244c&gt;]" value="readline.get_line_buffer()">
            <AssName fromlineno="616" tolineno="616" lineno="616" name="line"/>
            <CallFunc fromlineno="616" tolineno="616" lineno="616" func="Getattr(get_line_buffer)">
              <Getattr fromlineno="616" tolineno="616" lineno="616" attrname="get_line_buffer" expr="readline">
                <Name fromlineno="616" tolineno="616" lineno="616" name="readline"/>
              </Getattr>
            </CallFunc>
          </Assign>
          <If fromlineno="617" tolineno="634" lineno="617">
            <Compare fromlineno="617" tolineno="617" lineno="617" op="('in', &lt;Name(line) l.617 [bb.shell] at Ox99925cc&gt;)">
              <Const fromlineno="617" tolineno="617" lineno="617" type="str">' '</Const>
              <Name fromlineno="617" tolineno="617" lineno="617" name="line"/>
            </Compare>
            <Assign fromlineno="618" tolineno="618" lineno="618" targets="[&lt;AssName(line) l.618 [bb.shell] at Ox999266c&gt;]" value="line.split()">
              <AssName fromlineno="618" tolineno="618" lineno="618" name="line"/>
              <CallFunc fromlineno="618" tolineno="618" lineno="618" func="Getattr(split)">
                <Getattr fromlineno="618" tolineno="618" lineno="618" attrname="split" expr="line">
                  <Name fromlineno="618" tolineno="618" lineno="618" name="line"/>
                </Getattr>
              </CallFunc>
            </Assign>
            <If fromlineno="620" tolineno="631" lineno="620">
              <BoolOp fromlineno="620" tolineno="620" lineno="620" op="and" values="line[0] in cmds,hasattr(cmds[line[0]][0], 'usage'),">
                <Compare fromlineno="620" tolineno="620" lineno="620" op="('in', &lt;Name(cmds) l.620 [bb.shell] at Ox999288c&gt;)">
                  <Subscript fromlineno="620" tolineno="620" lineno="620">
                    <Name fromlineno="620" tolineno="620" lineno="620" name="line"/>
                    <Index fromlineno="620" tolineno="620" lineno="None">
                      <Const fromlineno="620" tolineno="620" lineno="620" type="int">0</Const>
                    </Index>
                  </Subscript>
                  <Name fromlineno="620" tolineno="620" lineno="620" name="cmds"/>
                </Compare>
                <CallFunc fromlineno="620" tolineno="620" lineno="620" func="Name(hasattr)">
                  <Name fromlineno="620" tolineno="620" lineno="620" name="hasattr"/>
                  <Subscript fromlineno="620" tolineno="620" lineno="620">
                    <Subscript fromlineno="620" tolineno="620" lineno="620">
                      <Name fromlineno="620" tolineno="620" lineno="620" name="cmds"/>
                      <Index fromlineno="620" tolineno="620" lineno="None">
                        <Subscript fromlineno="620" tolineno="620" lineno="620">
                          <Name fromlineno="620" tolineno="620" lineno="620" name="line"/>
                          <Index fromlineno="620" tolineno="620" lineno="None">
                            <Const fromlineno="620" tolineno="620" lineno="620" type="int">0</Const>
                          </Index>
                        </Subscript>
                      </Index>
                    </Subscript>
                    <Index fromlineno="620" tolineno="620" lineno="None">
                      <Const fromlineno="620" tolineno="620" lineno="620" type="int">0</Const>
                    </Index>
                  </Subscript>
                  <Const fromlineno="620" tolineno="620" lineno="620" type="str">'usage'</Const>
                </CallFunc>
              </BoolOp>
              <Assign fromlineno="621" tolineno="621" lineno="621" targets="[&lt;AssName(u) l.621 [bb.shell] at Ox9992acc&gt;]" value="getattr(cmds[line[0]][0], 'usage').split()[0]">
                <AssName fromlineno="621" tolineno="621" lineno="621" name="u"/>
                <Subscript fromlineno="621" tolineno="621" lineno="621">
                  <CallFunc fromlineno="621" tolineno="621" lineno="621" func="Getattr(split)">
                    <Getattr fromlineno="621" tolineno="621" lineno="621" attrname="split" expr="getattr(cmds[line[0]][0], 'usage')">
                      <CallFunc fromlineno="621" tolineno="621" lineno="621" func="Name(getattr)">
                        <Name fromlineno="621" tolineno="621" lineno="621" name="getattr"/>
                        <Subscript fromlineno="621" tolineno="621" lineno="621">
                          <Subscript fromlineno="621" tolineno="621" lineno="621">
                            <Name fromlineno="621" tolineno="621" lineno="621" name="cmds"/>
                            <Index fromlineno="621" tolineno="621" lineno="None">
                              <Subscript fromlineno="621" tolineno="621" lineno="621">
                                <Name fromlineno="621" tolineno="621" lineno="621" name="line"/>
                                <Index fromlineno="621" tolineno="621" lineno="None">
                                  <Const fromlineno="621" tolineno="621" lineno="621" type="int">0</Const>
                                </Index>
                              </Subscript>
                            </Index>
                          </Subscript>
                          <Index fromlineno="621" tolineno="621" lineno="None">
                            <Const fromlineno="621" tolineno="621" lineno="621" type="int">0</Const>
                          </Index>
                        </Subscript>
                        <Const fromlineno="621" tolineno="621" lineno="621" type="str">'usage'</Const>
                      </CallFunc>
                    </Getattr>
                  </CallFunc>
                  <Index fromlineno="621" tolineno="621" lineno="None">
                    <Const fromlineno="621" tolineno="621" lineno="621" type="int">0</Const>
                  </Index>
                </Subscript>
              </Assign>
              <If fromlineno="622" tolineno="630" lineno="622">
                <Compare fromlineno="622" tolineno="622" lineno="622" op="('==', &lt;Const(str) l.622 [bb.shell] at Ox9992e4c&gt;)">
                  <Name fromlineno="622" tolineno="622" lineno="622" name="u"/>
                  <Const fromlineno="622" tolineno="622" lineno="622" type="str">'&lt;variable&gt;'</Const>
                </Compare>
                <Assign fromlineno="623" tolineno="623" lineno="623" targets="[&lt;AssName(allmatches) l.623 [bb.shell] at Ox9992eec&gt;]" value="cooker.configuration.data.keys()">
                  <AssName fromlineno="623" tolineno="623" lineno="623" name="allmatches"/>
                  <CallFunc fromlineno="623" tolineno="623" lineno="623" func="Getattr(keys)">
                    <Getattr fromlineno="623" tolineno="623" lineno="623" attrname="keys" expr="cooker.configuration.data">
                      <Getattr fromlineno="623" tolineno="623" lineno="623" attrname="data" expr="cooker.configuration">
                        <Getattr fromlineno="623" tolineno="623" lineno="623" attrname="configuration" expr="cooker">
                          <Name fromlineno="623" tolineno="623" lineno="623" name="cooker"/>
                        </Getattr>
                      </Getattr>
                    </Getattr>
                  </CallFunc>
                </Assign>
                <If fromlineno="624" tolineno="630" lineno="624">
                  <Compare fromlineno="624" tolineno="624" lineno="624" op="('==', &lt;Const(str) l.624 [bb.shell] at Ox99960ec&gt;)">
                    <Name fromlineno="624" tolineno="624" lineno="624" name="u"/>
                    <Const fromlineno="624" tolineno="624" lineno="624" type="str">'&lt;bbfile&gt;'</Const>
                  </Compare>
                  <If fromlineno="625" tolineno="626" lineno="625">
                    <Compare fromlineno="625" tolineno="625" lineno="625" op="('is', &lt;Const(NoneType) l.625 [bb.shell] at Ox999624c&gt;)">
                      <Getattr fromlineno="625" tolineno="625" lineno="625" attrname="pkg_fn" expr="cooker.status">
                        <Getattr fromlineno="625" tolineno="625" lineno="625" attrname="status" expr="cooker">
                          <Name fromlineno="625" tolineno="625" lineno="625" name="cooker"/>
                        </Getattr>
                      </Getattr>
                      <Const fromlineno="625" tolineno="625" lineno="625" type="NoneType">None</Const>
                    </Compare>
                    <Assign fromlineno="625" tolineno="625" lineno="625" targets="[&lt;AssName(allmatches) l.625 [bb.shell] at Ox99962ec&gt;]" value="['(No Matches Available. Parsed yet?)']">
                      <AssName fromlineno="625" tolineno="625" lineno="625" name="allmatches"/>
                      <List fromlineno="625" tolineno="625" lineno="625">
                        <Const fromlineno="625" tolineno="625" lineno="625" type="str">'(No Matches Available. Parsed yet?)'</Const>
                      </List>
                    </Assign>
                    <Assign fromlineno="626" tolineno="626" lineno="626" targets="[&lt;AssName(allmatches) l.626 [bb.shell] at Ox99963cc&gt;]" value="[x.split('/')[-1] for x in cooker.status.pkg_fn.keys()]">
                      <AssName fromlineno="626" tolineno="626" lineno="626" name="allmatches"/>
                      <ListComp fromlineno="626" tolineno="626" lineno="626">
                        <Subscript fromlineno="626" tolineno="626" lineno="626">
                          <CallFunc fromlineno="626" tolineno="626" lineno="626" func="Getattr(split)">
                            <Getattr fromlineno="626" tolineno="626" lineno="626" attrname="split" expr="x">
                              <Name fromlineno="626" tolineno="626" lineno="626" name="x"/>
                            </Getattr>
                            <Const fromlineno="626" tolineno="626" lineno="626" type="str">'/'</Const>
                          </CallFunc>
                          <Index fromlineno="626" tolineno="626" lineno="None">
                            <Const fromlineno="626" tolineno="626" lineno="626" type="int">-1</Const>
                          </Index>
                        </Subscript>
                        <Comprehension fromlineno="626" tolineno="626" lineno="None">
                          <AssName fromlineno="626" tolineno="626" lineno="626" name="x"/>
                          <CallFunc fromlineno="626" tolineno="626" lineno="626" func="Getattr(keys)">
                            <Getattr fromlineno="626" tolineno="626" lineno="626" attrname="keys" expr="cooker.status.pkg_fn">
                              <Getattr fromlineno="626" tolineno="626" lineno="626" attrname="pkg_fn" expr="cooker.status">
                                <Getattr fromlineno="626" tolineno="626" lineno="626" attrname="status" expr="cooker">
                                  <Name fromlineno="626" tolineno="626" lineno="626" name="cooker"/>
                                </Getattr>
                              </Getattr>
                            </Getattr>
                          </CallFunc>
                        </Comprehension>
                      </ListComp>
                    </Assign>
                  </If>
                  <If fromlineno="627" tolineno="630" lineno="627">
                    <Compare fromlineno="627" tolineno="627" lineno="627" op="('==', &lt;Const(str) l.627 [bb.shell] at Ox999670c&gt;)">
                      <Name fromlineno="627" tolineno="627" lineno="627" name="u"/>
                      <Const fromlineno="627" tolineno="627" lineno="627" type="str">'&lt;providee&gt;'</Const>
                    </Compare>
                    <If fromlineno="628" tolineno="629" lineno="628">
                      <Compare fromlineno="628" tolineno="628" lineno="628" op="('is', &lt;Const(NoneType) l.628 [bb.shell] at Ox999686c&gt;)">
                        <Getattr fromlineno="628" tolineno="628" lineno="628" attrname="pkg_fn" expr="cooker.status">
                          <Getattr fromlineno="628" tolineno="628" lineno="628" attrname="status" expr="cooker">
                            <Name fromlineno="628" tolineno="628" lineno="628" name="cooker"/>
                          </Getattr>
                        </Getattr>
                        <Const fromlineno="628" tolineno="628" lineno="628" type="NoneType">None</Const>
                      </Compare>
                      <Assign fromlineno="628" tolineno="628" lineno="628" targets="[&lt;AssName(allmatches) l.628 [bb.shell] at Ox999690c&gt;]" value="['(No Matches Available. Parsed yet?)']">
                        <AssName fromlineno="628" tolineno="628" lineno="628" name="allmatches"/>
                        <List fromlineno="628" tolineno="628" lineno="628">
                          <Const fromlineno="628" tolineno="628" lineno="628" type="str">'(No Matches Available. Parsed yet?)'</Const>
                        </List>
                      </Assign>
                      <Assign fromlineno="629" tolineno="629" lineno="629" targets="[&lt;AssName(allmatches) l.629 [bb.shell] at Ox99969ec&gt;]" value="cooker.status.providers.iterkeys()">
                        <AssName fromlineno="629" tolineno="629" lineno="629" name="allmatches"/>
                        <CallFunc fromlineno="629" tolineno="629" lineno="629" func="Getattr(iterkeys)">
                          <Getattr fromlineno="629" tolineno="629" lineno="629" attrname="iterkeys" expr="cooker.status.providers">
                            <Getattr fromlineno="629" tolineno="629" lineno="629" attrname="providers" expr="cooker.status">
                              <Getattr fromlineno="629" tolineno="629" lineno="629" attrname="status" expr="cooker">
                                <Name fromlineno="629" tolineno="629" lineno="629" name="cooker"/>
                              </Getattr>
                            </Getattr>
                          </Getattr>
                        </CallFunc>
                      </Assign>
                    </If>
                    <Assign fromlineno="630" tolineno="630" lineno="630" targets="[&lt;AssName(allmatches) l.630 [bb.shell] at Ox9996b0c&gt;]" value="['(No tab completion available for this command)']">
                      <AssName fromlineno="630" tolineno="630" lineno="630" name="allmatches"/>
                      <List fromlineno="630" tolineno="630" lineno="630">
                        <Const fromlineno="630" tolineno="630" lineno="630" type="str">'(No tab completion available for this command)'</Const>
                      </List>
                    </Assign>
                  </If>
                </If>
              </If>
              <Assign fromlineno="631" tolineno="631" lineno="631" targets="[&lt;AssName(allmatches) l.631 [bb.shell] at Ox999666c&gt;]" value="['(No tab completion available for this command)']">
                <AssName fromlineno="631" tolineno="631" lineno="631" name="allmatches"/>
                <List fromlineno="631" tolineno="631" lineno="631">
                  <Const fromlineno="631" tolineno="631" lineno="631" type="str">'(No tab completion available for this command)'</Const>
                </List>
              </Assign>
            </If>
            <Assign fromlineno="634" tolineno="634" lineno="634" targets="[&lt;AssName(allmatches) l.634 [bb.shell] at Ox9996bcc&gt;]" value="cmds.iterkeys()">
              <AssName fromlineno="634" tolineno="634" lineno="634" name="allmatches"/>
              <CallFunc fromlineno="634" tolineno="634" lineno="634" func="Getattr(iterkeys)">
                <Getattr fromlineno="634" tolineno="634" lineno="634" attrname="iterkeys" expr="cmds">
                  <Name fromlineno="634" tolineno="634" lineno="634" name="cmds"/>
                </Getattr>
              </CallFunc>
            </Assign>
          </If>
          <Assign fromlineno="636" tolineno="636" lineno="636" targets="[&lt;AssAttr(matches) l.636 [bb.shell] at Ox9996c6c&gt;]" value="[x for x in allmatches if x[:len(text)] == text]">
            <AssAttr fromlineno="636" tolineno="636" lineno="636" attrname="matches" expr="completer">
              <Name fromlineno="636" tolineno="636" lineno="636" name="completer"/>
            </AssAttr>
            <ListComp fromlineno="636" tolineno="636" lineno="636">
              <Name fromlineno="636" tolineno="636" lineno="636" name="x"/>
              <Comprehension fromlineno="636" tolineno="636" lineno="None">
                <AssName fromlineno="636" tolineno="636" lineno="636" name="x"/>
                <Name fromlineno="636" tolineno="636" lineno="636" name="allmatches"/>
                <Compare fromlineno="636" tolineno="636" lineno="636" op="('==', &lt;Name(text) l.636 [bb.shell] at Ox9996f0c&gt;)">
                  <Subscript fromlineno="636" tolineno="636" lineno="636">
                    <Name fromlineno="636" tolineno="636" lineno="636" name="x"/>
                    <Slice fromlineno="636" tolineno="636" lineno="None">
                      <CallFunc fromlineno="636" tolineno="636" lineno="636" func="Name(len)">
                        <Name fromlineno="636" tolineno="636" lineno="636" name="len"/>
                        <Name fromlineno="636" tolineno="636" lineno="636" name="text"/>
                      </CallFunc>
                    </Slice>
                  </Subscript>
                  <Name fromlineno="636" tolineno="636" lineno="636" name="text"/>
                </Compare>
              </Comprehension>
            </ListComp>
          </Assign>
        </If>
        <If fromlineno="638" tolineno="641" lineno="638">
          <Compare fromlineno="638" tolineno="638" lineno="638" op="('&gt;', &lt;Name(state) l.638 [bb.shell] at Ox9996fec&gt;)">
            <CallFunc fromlineno="638" tolineno="638" lineno="638" func="Name(len)">
              <Name fromlineno="638" tolineno="638" lineno="638" name="len"/>
              <Getattr fromlineno="638" tolineno="638" lineno="638" attrname="matches" expr="completer">
                <Name fromlineno="638" tolineno="638" lineno="638" name="completer"/>
              </Getattr>
            </CallFunc>
            <Name fromlineno="638" tolineno="638" lineno="638" name="state"/>
          </Compare>
          <Return fromlineno="639" tolineno="639" lineno="639">
            <Subscript fromlineno="639" tolineno="639" lineno="639">
              <Getattr fromlineno="639" tolineno="639" lineno="639" attrname="matches" expr="completer">
                <Name fromlineno="639" tolineno="639" lineno="639" name="completer"/>
              </Getattr>
              <Index fromlineno="639" tolineno="639" lineno="None">
                <Name fromlineno="639" tolineno="639" lineno="639" name="state"/>
              </Index>
            </Subscript>
          </Return>
          <Return fromlineno="641" tolineno="641" lineno="641">
            <Const fromlineno="641" tolineno="641" lineno="641" type="NoneType">None</Const>
          </Return>
        </If>
      </Function>
      <Function fromlineno="643" tolineno="645" lineno="643">
        <Arguments fromlineno="643" tolineno="643" lineno="None" format_args="text">
          <AssName fromlineno="643" tolineno="643" lineno="643" name="text"/>
        </Arguments>
        <If fromlineno="644" tolineno="645" lineno="644">
          <Name fromlineno="644" tolineno="644" lineno="644" name="debug"/>
          <Discard fromlineno="645" tolineno="645" lineno="645">
            <CallFunc fromlineno="645" tolineno="645" lineno="645" func="Getattr(write)">
              <Getattr fromlineno="645" tolineno="645" lineno="645" attrname="write" expr="sys.stderr">
                <Getattr fromlineno="645" tolineno="645" lineno="645" attrname="stderr" expr="sys">
                  <Name fromlineno="645" tolineno="645" lineno="645" name="sys"/>
                </Getattr>
              </Getattr>
              <BinOp fromlineno="645" tolineno="645" lineno="645" op="%" left="'( %s )\n'" right="text">
                <Const fromlineno="645" tolineno="645" lineno="645" type="str">'( %s )\n'</Const>
                <Name fromlineno="645" tolineno="645" lineno="645" name="text"/>
              </BinOp>
            </CallFunc>
          </Discard>
        </If>
      </Function>
      <Function fromlineno="647" tolineno="659" lineno="647">
        <Arguments fromlineno="647" tolineno="647" lineno="None" format_args="alist, width=80">
          <AssName fromlineno="647" tolineno="647" lineno="647" name="alist"/>
          <AssName fromlineno="647" tolineno="647" lineno="647" name="width"/>
          <Const fromlineno="647" tolineno="647" lineno="647" type="int">80</Const>
        </Arguments>
        <Return fromlineno="653" tolineno="659" lineno="653">
          <CallFunc fromlineno="653" tolineno="659" lineno="653" func="Name(reduce)">
            <Name fromlineno="653" tolineno="653" lineno="653" name="reduce"/>
            <Lambda fromlineno="653" tolineno="658" lineno="653">
              <Arguments fromlineno="653" tolineno="653" lineno="None" format_args="line, word, width=width">
                <AssName fromlineno="653" tolineno="653" lineno="653" name="line"/>
                <AssName fromlineno="653" tolineno="653" lineno="653" name="word"/>
                <AssName fromlineno="653" tolineno="653" lineno="653" name="width"/>
                <Name fromlineno="653" tolineno="653" lineno="653" name="width"/>
              </Arguments>
              <BinOp fromlineno="653" tolineno="658" lineno="653" op="%" left="'%s%s%s'" right="(line, ' \n'[(len(line[(line.rfind('\n')) + (1):])) + (len(word.split('\n', 1)[0])) &gt;= width], word)">
                <Const fromlineno="653" tolineno="653" lineno="653" type="str">'%s%s%s'</Const>
                <Tuple fromlineno="654" tolineno="658" lineno="654">
                  <Name fromlineno="654" tolineno="654" lineno="654" name="line"/>
                  <Subscript fromlineno="655" tolineno="657" lineno="655">
                    <Const fromlineno="655" tolineno="655" lineno="655" type="str">' \n'</Const>
                    <Index fromlineno="655" tolineno="657" lineno="None">
                      <Compare fromlineno="655" tolineno="657" lineno="655" op="('&gt;=', &lt;Name(width) l.657 [bb.shell] at Ox999ac0c&gt;)">
                        <BinOp fromlineno="655" tolineno="656" lineno="655" op="+" left="len(line[(line.rfind('\n')) + (1):])" right="len(word.split('\n', 1)[0])">
                          <CallFunc fromlineno="655" tolineno="655" lineno="655" func="Name(len)">
                            <Name fromlineno="655" tolineno="655" lineno="655" name="len"/>
                            <Subscript fromlineno="655" tolineno="655" lineno="655">
                              <Name fromlineno="655" tolineno="655" lineno="655" name="line"/>
                              <Slice fromlineno="655" tolineno="655" lineno="None">
                                <BinOp fromlineno="655" tolineno="655" lineno="655" op="+" left="line.rfind('\n')" right="1">
                                  <CallFunc fromlineno="655" tolineno="655" lineno="655" func="Getattr(rfind)">
                                    <Getattr fromlineno="655" tolineno="655" lineno="655" attrname="rfind" expr="line">
                                      <Name fromlineno="655" tolineno="655" lineno="655" name="line"/>
                                    </Getattr>
                                    <Const fromlineno="655" tolineno="655" lineno="655" type="str">'\n'</Const>
                                  </CallFunc>
                                  <Const fromlineno="655" tolineno="655" lineno="655" type="int">1</Const>
                                </BinOp>
                              </Slice>
                            </Subscript>
                          </CallFunc>
                          <CallFunc fromlineno="656" tolineno="656" lineno="656" func="Name(len)">
                            <Name fromlineno="656" tolineno="656" lineno="656" name="len"/>
                            <Subscript fromlineno="656" tolineno="656" lineno="656">
                              <CallFunc fromlineno="656" tolineno="656" lineno="656" func="Getattr(split)">
                                <Getattr fromlineno="656" tolineno="656" lineno="656" attrname="split" expr="word">
                                  <Name fromlineno="656" tolineno="656" lineno="656" name="word"/>
                                </Getattr>
                                <Const fromlineno="656" tolineno="656" lineno="656" type="str">'\n'</Const>
                                <Const fromlineno="656" tolineno="656" lineno="656" type="int">1</Const>
                              </CallFunc>
                              <Index fromlineno="656" tolineno="656" lineno="None">
                                <Const fromlineno="656" tolineno="656" lineno="656" type="int">0</Const>
                              </Index>
                            </Subscript>
                          </CallFunc>
                        </BinOp>
                        <Name fromlineno="657" tolineno="657" lineno="657" name="width"/>
                      </Compare>
                    </Index>
                  </Subscript>
                  <Name fromlineno="658" tolineno="658" lineno="658" name="word"/>
                </Tuple>
              </BinOp>
            </Lambda>
            <Name fromlineno="659" tolineno="659" lineno="659" name="alist"/>
          </CallFunc>
        </Return>
      </Function>
      <Function fromlineno="662" tolineno="663" lineno="662">
        <Arguments fromlineno="662" tolineno="662" lineno="None" format_args="names, pattern">
          <AssName fromlineno="662" tolineno="662" lineno="662" name="names"/>
          <AssName fromlineno="662" tolineno="662" lineno="662" name="pattern"/>
        </Arguments>
        <Return fromlineno="663" tolineno="663" lineno="663">
          <CallFunc fromlineno="663" tolineno="663" lineno="663" func="Getattr(filter)">
            <Getattr fromlineno="663" tolineno="663" lineno="663" attrname="filter" expr="fnmatch">
              <Name fromlineno="663" tolineno="663" lineno="663" name="fnmatch"/>
            </Getattr>
            <Name fromlineno="663" tolineno="663" lineno="663" name="names"/>
            <Name fromlineno="663" tolineno="663" lineno="663" name="pattern"/>
          </CallFunc>
        </Return>
      </Function>
      <Class fromlineno="669" tolineno="706" lineno="669">
        <Function fromlineno="671" tolineno="675" lineno="671">
          <Arguments fromlineno="671" tolineno="671" lineno="None" format_args="self, delegate">
            <AssName fromlineno="671" tolineno="671" lineno="671" name="self"/>
            <AssName fromlineno="671" tolineno="671" lineno="671" name="delegate"/>
          </Arguments>
          <Assign fromlineno="672" tolineno="672" lineno="672" targets="[&lt;AssAttr(delegate) l.672 [bb.shell] at Ox999e02c&gt;]" value="delegate">
            <AssAttr fromlineno="672" tolineno="672" lineno="672" attrname="delegate" expr="self">
              <Name fromlineno="672" tolineno="672" lineno="672" name="self"/>
            </AssAttr>
            <Name fromlineno="672" tolineno="672" lineno="672" name="delegate"/>
          </Assign>
          <Assign fromlineno="673" tolineno="673" lineno="673" targets="[&lt;AssAttr(_buffer) l.673 [bb.shell] at Ox999e0cc&gt;]" value="[]">
            <AssAttr fromlineno="673" tolineno="673" lineno="673" attrname="_buffer" expr="self">
              <Name fromlineno="673" tolineno="673" lineno="673" name="self"/>
            </AssAttr>
            <List fromlineno="673" tolineno="673" lineno="673"/>
          </Assign>
          <Assign fromlineno="674" tolineno="674" lineno="674" targets="[&lt;AssAttr(text) l.674 [bb.shell] at Ox999e18c&gt;]" value="[]">
            <AssAttr fromlineno="674" tolineno="674" lineno="674" attrname="text" expr="self">
              <Name fromlineno="674" tolineno="674" lineno="674" name="self"/>
            </AssAttr>
            <List fromlineno="674" tolineno="674" lineno="674"/>
          </Assign>
          <Assign fromlineno="675" tolineno="675" lineno="675" targets="[&lt;AssAttr(_command) l.675 [bb.shell] at Ox999e24c&gt;]" value="None">
            <AssAttr fromlineno="675" tolineno="675" lineno="675" attrname="_command" expr="self">
              <Name fromlineno="675" tolineno="675" lineno="675" name="self"/>
            </AssAttr>
            <Const fromlineno="675" tolineno="675" lineno="675" type="NoneType">None</Const>
          </Assign>
        </Function>
        <Function fromlineno="677" tolineno="679" lineno="677">
          <Arguments fromlineno="677" tolineno="677" lineno="None" format_args="self, command">
            <AssName fromlineno="677" tolineno="677" lineno="677" name="self"/>
            <AssName fromlineno="677" tolineno="677" lineno="677" name="command"/>
          </Arguments>
          <Assign fromlineno="678" tolineno="678" lineno="678" targets="[&lt;AssAttr(_command) l.678 [bb.shell] at Ox999e42c&gt;]" value="command">
            <AssAttr fromlineno="678" tolineno="678" lineno="678" attrname="_command" expr="self">
              <Name fromlineno="678" tolineno="678" lineno="678" name="self"/>
            </AssAttr>
            <Name fromlineno="678" tolineno="678" lineno="678" name="command"/>
          </Assign>
          <Assign fromlineno="679" tolineno="679" lineno="679" targets="[&lt;AssAttr(text) l.679 [bb.shell] at Ox999e4cc&gt;]" value="[]">
            <AssAttr fromlineno="679" tolineno="679" lineno="679" attrname="text" expr="self">
              <Name fromlineno="679" tolineno="679" lineno="679" name="self"/>
            </AssAttr>
            <List fromlineno="679" tolineno="679" lineno="679"/>
          </Assign>
        </Function>
        <Function fromlineno="680" tolineno="683" lineno="680">
          <Arguments fromlineno="680" tolineno="680" lineno="None" format_args="self">
            <AssName fromlineno="680" tolineno="680" lineno="680" name="self"/>
          </Arguments>
          <If fromlineno="681" tolineno="683" lineno="681">
            <Compare fromlineno="681" tolineno="681" lineno="681" op="('is not', &lt;Const(NoneType) l.681 [bb.shell] at Ox999e70c&gt;)">
              <Getattr fromlineno="681" tolineno="681" lineno="681" attrname="_command" expr="self">
                <Name fromlineno="681" tolineno="681" lineno="681" name="self"/>
              </Getattr>
              <Const fromlineno="681" tolineno="681" lineno="681" type="NoneType">None</Const>
            </Compare>
            <If fromlineno="682" tolineno="682" lineno="682">
              <Compare fromlineno="682" tolineno="682" lineno="682" op="('==', &lt;Const(int) l.682 [bb.shell] at Ox999e8ac&gt;)">
                <CallFunc fromlineno="682" tolineno="682" lineno="682" func="Name(len)">
                  <Name fromlineno="682" tolineno="682" lineno="682" name="len"/>
                  <Getattr fromlineno="682" tolineno="682" lineno="682" attrname="_buffer" expr="self">
                    <Name fromlineno="682" tolineno="682" lineno="682" name="self"/>
                  </Getattr>
                </CallFunc>
                <Const fromlineno="682" tolineno="682" lineno="682" type="int">10</Const>
              </Compare>
              <Delete fromlineno="682" tolineno="682" lineno="682">
                <Subscript fromlineno="682" tolineno="682" lineno="682">
                  <Getattr fromlineno="682" tolineno="682" lineno="682" attrname="_buffer" expr="self">
                    <Name fromlineno="682" tolineno="682" lineno="682" name="self"/>
                  </Getattr>
                  <Index fromlineno="682" tolineno="682" lineno="None">
                    <Const fromlineno="682" tolineno="682" lineno="682" type="int">0</Const>
                  </Index>
                </Subscript>
              </Delete>
            </If>
            <Discard fromlineno="683" tolineno="683" lineno="683">
              <CallFunc fromlineno="683" tolineno="683" lineno="683" func="Getattr(append)">
                <Getattr fromlineno="683" tolineno="683" lineno="683" attrname="append" expr="self._buffer">
                  <Getattr fromlineno="683" tolineno="683" lineno="683" attrname="_buffer" expr="self">
                    <Name fromlineno="683" tolineno="683" lineno="683" name="self"/>
                  </Getattr>
                </Getattr>
                <Tuple fromlineno="683" tolineno="683" lineno="683">
                  <Getattr fromlineno="683" tolineno="683" lineno="683" attrname="_command" expr="self">
                    <Name fromlineno="683" tolineno="683" lineno="683" name="self"/>
                  </Getattr>
                  <Getattr fromlineno="683" tolineno="683" lineno="683" attrname="text" expr="self">
                    <Name fromlineno="683" tolineno="683" lineno="683" name="self"/>
                  </Getattr>
                </Tuple>
              </CallFunc>
            </Discard>
          </If>
        </Function>
        <Function fromlineno="684" tolineno="688" lineno="684">
          <Arguments fromlineno="684" tolineno="684" lineno="None" format_args="self">
            <AssName fromlineno="684" tolineno="684" lineno="684" name="self"/>
          </Arguments>
          <If fromlineno="685" tolineno="686" lineno="685">
            <Getattr fromlineno="685" tolineno="685" lineno="685" attrname="_buffer" expr="self">
              <Name fromlineno="685" tolineno="685" lineno="685" name="self"/>
            </Getattr>
            <Delete fromlineno="686" tolineno="686" lineno="686">
              <Subscript fromlineno="686" tolineno="686" lineno="686">
                <Getattr fromlineno="686" tolineno="686" lineno="686" attrname="_buffer" expr="self">
                  <Name fromlineno="686" tolineno="686" lineno="686" name="self"/>
                </Getattr>
                <Index fromlineno="686" tolineno="686" lineno="None">
                  <BinOp fromlineno="686" tolineno="686" lineno="686" op="-" left="len(self._buffer)" right="1">
                    <CallFunc fromlineno="686" tolineno="686" lineno="686" func="Name(len)">
                      <Name fromlineno="686" tolineno="686" lineno="686" name="len"/>
                      <Getattr fromlineno="686" tolineno="686" lineno="686" attrname="_buffer" expr="self">
                        <Name fromlineno="686" tolineno="686" lineno="686" name="self"/>
                      </Getattr>
                    </CallFunc>
                    <Const fromlineno="686" tolineno="686" lineno="686" type="int">1</Const>
                  </BinOp>
                </Index>
              </Subscript>
            </Delete>
          </If>
          <Assign fromlineno="687" tolineno="687" lineno="687" targets="[&lt;AssAttr(text) l.687 [bb.shell] at Ox999eecc&gt;]" value="[]">
            <AssAttr fromlineno="687" tolineno="687" lineno="687" attrname="text" expr="self">
              <Name fromlineno="687" tolineno="687" lineno="687" name="self"/>
            </AssAttr>
            <List fromlineno="687" tolineno="687" lineno="687"/>
          </Assign>
          <Assign fromlineno="688" tolineno="688" lineno="688" targets="[&lt;AssAttr(_command) l.688 [bb.shell] at Ox999ef8c&gt;]" value="None">
            <AssAttr fromlineno="688" tolineno="688" lineno="688" attrname="_command" expr="self">
              <Name fromlineno="688" tolineno="688" lineno="688" name="self"/>
            </AssAttr>
            <Const fromlineno="688" tolineno="688" lineno="688" type="NoneType">None</Const>
          </Assign>
        </Function>
        <Function fromlineno="689" tolineno="691" lineno="689">
          <Arguments fromlineno="689" tolineno="689" lineno="None" format_args="self">
            <AssName fromlineno="689" tolineno="689" lineno="689" name="self"/>
          </Arguments>
          <If fromlineno="690" tolineno="691" lineno="690">
            <Getattr fromlineno="690" tolineno="690" lineno="690" attrname="_buffer" expr="self">
              <Name fromlineno="690" tolineno="690" lineno="690" name="self"/>
            </Getattr>
            <Return fromlineno="691" tolineno="691" lineno="691">
              <Subscript fromlineno="691" tolineno="691" lineno="691">
                <Subscript fromlineno="691" tolineno="691" lineno="691">
                  <Getattr fromlineno="691" tolineno="691" lineno="691" attrname="_buffer" expr="self">
                    <Name fromlineno="691" tolineno="691" lineno="691" name="self"/>
                  </Getattr>
                  <Index fromlineno="691" tolineno="691" lineno="None">
                    <BinOp fromlineno="691" tolineno="691" lineno="691" op="-" left="len(self._buffer)" right="1">
                      <CallFunc fromlineno="691" tolineno="691" lineno="691" func="Name(len)">
                        <Name fromlineno="691" tolineno="691" lineno="691" name="len"/>
                        <Getattr fromlineno="691" tolineno="691" lineno="691" attrname="_buffer" expr="self">
                          <Name fromlineno="691" tolineno="691" lineno="691" name="self"/>
                        </Getattr>
                      </CallFunc>
                      <Const fromlineno="691" tolineno="691" lineno="691" type="int">1</Const>
                    </BinOp>
                  </Index>
                </Subscript>
                <Index fromlineno="691" tolineno="691" lineno="None">
                  <Const fromlineno="691" tolineno="691" lineno="691" type="int">1</Const>
                </Index>
              </Subscript>
            </Return>
          </If>
        </Function>
        <Function fromlineno="692" tolineno="693" lineno="692">
          <Arguments fromlineno="692" tolineno="692" lineno="None" format_args="self">
            <AssName fromlineno="692" tolineno="692" lineno="692" name="self"/>
          </Arguments>
          <Return fromlineno="693" tolineno="693" lineno="693">
            <ListComp fromlineno="693" tolineno="693" lineno="693">
              <Name fromlineno="693" tolineno="693" lineno="693" name="cmd"/>
              <Comprehension fromlineno="693" tolineno="693" lineno="None">
                <Tuple fromlineno="693" tolineno="693" lineno="693">
                  <AssName fromlineno="693" tolineno="693" lineno="693" name="cmd"/>
                  <AssName fromlineno="693" tolineno="693" lineno="693" name="output"/>
                </Tuple>
                <Getattr fromlineno="693" tolineno="693" lineno="693" attrname="_buffer" expr="self">
                  <Name fromlineno="693" tolineno="693" lineno="693" name="self"/>
                </Getattr>
              </Comprehension>
            </ListComp>
          </Return>
        </Function>
        <Function fromlineno="694" tolineno="697" lineno="694">
          <Arguments fromlineno="694" tolineno="694" lineno="None" format_args="self, i">
            <AssName fromlineno="694" tolineno="694" lineno="694" name="self"/>
            <AssName fromlineno="694" tolineno="694" lineno="694" name="i"/>
          </Arguments>
          <If fromlineno="695" tolineno="697" lineno="695">
            <Compare fromlineno="695" tolineno="695" lineno="695" op="('&lt;', &lt;CallFunc() l.695 [bb.shell] at Ox99a282c&gt;)">
              <Name fromlineno="695" tolineno="695" lineno="695" name="i"/>
              <CallFunc fromlineno="695" tolineno="695" lineno="695" func="Name(len)">
                <Name fromlineno="695" tolineno="695" lineno="695" name="len"/>
                <Getattr fromlineno="695" tolineno="695" lineno="695" attrname="_buffer" expr="self">
                  <Name fromlineno="695" tolineno="695" lineno="695" name="self"/>
                </Getattr>
              </CallFunc>
            </Compare>
            <Return fromlineno="696" tolineno="696" lineno="696">
              <BinOp fromlineno="696" tolineno="696" lineno="696" op="%" left="'BB&gt;&gt; %s\n%s'" right="(self._buffer[i][0], ''.join(self._buffer[i][1]))">
                <Const fromlineno="696" tolineno="696" lineno="696" type="str">'BB&gt;&gt; %s\n%s'</Const>
                <Tuple fromlineno="696" tolineno="696" lineno="696">
                  <Subscript fromlineno="696" tolineno="696" lineno="696">
                    <Subscript fromlineno="696" tolineno="696" lineno="696">
                      <Getattr fromlineno="696" tolineno="696" lineno="696" attrname="_buffer" expr="self">
                        <Name fromlineno="696" tolineno="696" lineno="696" name="self"/>
                      </Getattr>
                      <Index fromlineno="696" tolineno="696" lineno="None">
                        <Name fromlineno="696" tolineno="696" lineno="696" name="i"/>
                      </Index>
                    </Subscript>
                    <Index fromlineno="696" tolineno="696" lineno="None">
                      <Const fromlineno="696" tolineno="696" lineno="696" type="int">0</Const>
                    </Index>
                  </Subscript>
                  <CallFunc fromlineno="696" tolineno="696" lineno="696" func="Getattr(join)">
                    <Getattr fromlineno="696" tolineno="696" lineno="696" attrname="join" expr="''">
                      <Const fromlineno="696" tolineno="696" lineno="696" type="str">''</Const>
                    </Getattr>
                    <Subscript fromlineno="696" tolineno="696" lineno="696">
                      <Subscript fromlineno="696" tolineno="696" lineno="696">
                        <Getattr fromlineno="696" tolineno="696" lineno="696" attrname="_buffer" expr="self">
                          <Name fromlineno="696" tolineno="696" lineno="696" name="self"/>
                        </Getattr>
                        <Index fromlineno="696" tolineno="696" lineno="None">
                          <Name fromlineno="696" tolineno="696" lineno="696" name="i"/>
                        </Index>
                      </Subscript>
                      <Index fromlineno="696" tolineno="696" lineno="None">
                        <Const fromlineno="696" tolineno="696" lineno="696" type="int">1</Const>
                      </Index>
                    </Subscript>
                  </CallFunc>
                </Tuple>
              </BinOp>
            </Return>
            <Return fromlineno="697" tolineno="697" lineno="697">
              <BinOp fromlineno="697" tolineno="697" lineno="697" op="%" left="'ERROR: Invalid buffer number. Buffer needs to be in (0, %d)'" right="(len(self._buffer)) - (1)">
                <Const fromlineno="697" tolineno="697" lineno="697" type="str">'ERROR: Invalid buffer number. Buffer needs to be in (0, %d)'</Const>
                <BinOp fromlineno="697" tolineno="697" lineno="697" op="-" left="len(self._buffer)" right="1">
                  <CallFunc fromlineno="697" tolineno="697" lineno="697" func="Name(len)">
                    <Name fromlineno="697" tolineno="697" lineno="697" name="len"/>
                    <Getattr fromlineno="697" tolineno="697" lineno="697" attrname="_buffer" expr="self">
                      <Name fromlineno="697" tolineno="697" lineno="697" name="self"/>
                    </Getattr>
                  </CallFunc>
                  <Const fromlineno="697" tolineno="697" lineno="697" type="int">1</Const>
                </BinOp>
              </BinOp>
            </Return>
          </If>
        </Function>
        <Function fromlineno="698" tolineno="700" lineno="698">
          <Arguments fromlineno="698" tolineno="698" lineno="None" format_args="self, text">
            <AssName fromlineno="698" tolineno="698" lineno="698" name="self"/>
            <AssName fromlineno="698" tolineno="698" lineno="698" name="text"/>
          </Arguments>
          <If fromlineno="699" tolineno="699" lineno="699">
            <BoolOp fromlineno="699" tolineno="699" lineno="699" op="and" values="self._command is not None,text != 'BB&gt;&gt; ',">
              <Compare fromlineno="699" tolineno="699" lineno="699" op="('is not', &lt;Const(NoneType) l.699 [bb.shell] at Ox99a2fcc&gt;)">
                <Getattr fromlineno="699" tolineno="699" lineno="699" attrname="_command" expr="self">
                  <Name fromlineno="699" tolineno="699" lineno="699" name="self"/>
                </Getattr>
                <Const fromlineno="699" tolineno="699" lineno="699" type="NoneType">None</Const>
              </Compare>
              <Compare fromlineno="699" tolineno="699" lineno="699" op="('!=', &lt;Const(str) l.699 [bb.shell] at Ox99a608c&gt;)">
                <Name fromlineno="699" tolineno="699" lineno="699" name="text"/>
                <Const fromlineno="699" tolineno="699" lineno="699" type="str">'BB&gt;&gt; '</Const>
              </Compare>
            </BoolOp>
            <Discard fromlineno="699" tolineno="699" lineno="699">
              <CallFunc fromlineno="699" tolineno="699" lineno="699" func="Getattr(append)">
                <Getattr fromlineno="699" tolineno="699" lineno="699" attrname="append" expr="self.text">
                  <Getattr fromlineno="699" tolineno="699" lineno="699" attrname="text" expr="self">
                    <Name fromlineno="699" tolineno="699" lineno="699" name="self"/>
                  </Getattr>
                </Getattr>
                <Name fromlineno="699" tolineno="699" lineno="699" name="text"/>
              </CallFunc>
            </Discard>
          </If>
          <If fromlineno="700" tolineno="700" lineno="700">
            <Compare fromlineno="700" tolineno="700" lineno="700" op="('is not', &lt;Const(NoneType) l.700 [bb.shell] at Ox99a626c&gt;)">
              <Getattr fromlineno="700" tolineno="700" lineno="700" attrname="delegate" expr="self">
                <Name fromlineno="700" tolineno="700" lineno="700" name="self"/>
              </Getattr>
              <Const fromlineno="700" tolineno="700" lineno="700" type="NoneType">None</Const>
            </Compare>
            <Discard fromlineno="700" tolineno="700" lineno="700">
              <CallFunc fromlineno="700" tolineno="700" lineno="700" func="Getattr(write)">
                <Getattr fromlineno="700" tolineno="700" lineno="700" attrname="write" expr="self.delegate">
                  <Getattr fromlineno="700" tolineno="700" lineno="700" attrname="delegate" expr="self">
                    <Name fromlineno="700" tolineno="700" lineno="700" name="self"/>
                  </Getattr>
                </Getattr>
                <Name fromlineno="700" tolineno="700" lineno="700" name="text"/>
              </CallFunc>
            </Discard>
          </If>
        </Function>
        <Function fromlineno="701" tolineno="702" lineno="701">
          <Arguments fromlineno="701" tolineno="701" lineno="None" format_args="self">
            <AssName fromlineno="701" tolineno="701" lineno="701" name="self"/>
          </Arguments>
          <Return fromlineno="702" tolineno="702" lineno="702">
            <CallFunc fromlineno="702" tolineno="702" lineno="702" func="Getattr(flush)">
              <Getattr fromlineno="702" tolineno="702" lineno="702" attrname="flush" expr="self.delegate">
                <Getattr fromlineno="702" tolineno="702" lineno="702" attrname="delegate" expr="self">
                  <Name fromlineno="702" tolineno="702" lineno="702" name="self"/>
                </Getattr>
              </Getattr>
            </CallFunc>
          </Return>
        </Function>
        <Function fromlineno="703" tolineno="704" lineno="703">
          <Arguments fromlineno="703" tolineno="703" lineno="None" format_args="self">
            <AssName fromlineno="703" tolineno="703" lineno="703" name="self"/>
          </Arguments>
          <Return fromlineno="704" tolineno="704" lineno="704">
            <CallFunc fromlineno="704" tolineno="704" lineno="704" func="Getattr(fileno)">
              <Getattr fromlineno="704" tolineno="704" lineno="704" attrname="fileno" expr="self.delegate">
                <Getattr fromlineno="704" tolineno="704" lineno="704" attrname="delegate" expr="self">
                  <Name fromlineno="704" tolineno="704" lineno="704" name="self"/>
                </Getattr>
              </Getattr>
            </CallFunc>
          </Return>
        </Function>
        <Function fromlineno="705" tolineno="706" lineno="705">
          <Arguments fromlineno="705" tolineno="705" lineno="None" format_args="self">
            <AssName fromlineno="705" tolineno="705" lineno="705" name="self"/>
          </Arguments>
          <Return fromlineno="706" tolineno="706" lineno="706">
            <CallFunc fromlineno="706" tolineno="706" lineno="706" func="Getattr(isatty)">
              <Getattr fromlineno="706" tolineno="706" lineno="706" attrname="isatty" expr="self.delegate">
                <Getattr fromlineno="706" tolineno="706" lineno="706" attrname="delegate" expr="self">
                  <Name fromlineno="706" tolineno="706" lineno="706" name="self"/>
                </Getattr>
              </Getattr>
            </CallFunc>
          </Return>
        </Function>
      </Class>
      <Class fromlineno="712" tolineno="817" lineno="712">
        <Function fromlineno="714" tolineno="731" lineno="714">
          <Arguments fromlineno="714" tolineno="714" lineno="None" format_args="self">
            <AssName fromlineno="714" tolineno="714" lineno="714" name="self"/>
          </Arguments>
          <Assign fromlineno="716" tolineno="716" lineno="716" targets="[&lt;AssAttr(commandQ) l.716 [bb.shell] at Ox99a6a6c&gt;]" value="Queue.Queue()">
            <AssAttr fromlineno="716" tolineno="716" lineno="716" attrname="commandQ" expr="self">
              <Name fromlineno="716" tolineno="716" lineno="716" name="self"/>
            </AssAttr>
            <CallFunc fromlineno="716" tolineno="716" lineno="716" func="Getattr(Queue)">
              <Getattr fromlineno="716" tolineno="716" lineno="716" attrname="Queue" expr="Queue">
                <Name fromlineno="716" tolineno="716" lineno="716" name="Queue"/>
              </Getattr>
            </CallFunc>
          </Assign>
          <Assign fromlineno="717" tolineno="717" lineno="717" targets="[&lt;AssAttr(commands) l.717 [bb.shell] at Ox99a6b6c&gt;]" value="BitBakeShellCommands(self)">
            <AssAttr fromlineno="717" tolineno="717" lineno="717" attrname="commands" expr="self">
              <Name fromlineno="717" tolineno="717" lineno="717" name="self"/>
            </AssAttr>
            <CallFunc fromlineno="717" tolineno="717" lineno="717" func="Name(BitBakeShellCommands)">
              <Name fromlineno="717" tolineno="717" lineno="717" name="BitBakeShellCommands"/>
              <Name fromlineno="717" tolineno="717" lineno="717" name="self"/>
            </CallFunc>
          </Assign>
          <Assign fromlineno="718" tolineno="718" lineno="718" targets="[&lt;AssAttr(myout) l.718 [bb.shell] at Ox99a6c6c&gt;]" value="MemoryOutput(sys.stdout)">
            <AssAttr fromlineno="718" tolineno="718" lineno="718" attrname="myout" expr="self">
              <Name fromlineno="718" tolineno="718" lineno="718" name="self"/>
            </AssAttr>
            <CallFunc fromlineno="718" tolineno="718" lineno="718" func="Name(MemoryOutput)">
              <Name fromlineno="718" tolineno="718" lineno="718" name="MemoryOutput"/>
              <Getattr fromlineno="718" tolineno="718" lineno="718" attrname="stdout" expr="sys">
                <Name fromlineno="718" tolineno="718" lineno="718" name="sys"/>
              </Getattr>
            </CallFunc>
          </Assign>
          <Assign fromlineno="719" tolineno="719" lineno="719" targets="[&lt;AssAttr(historyfilename) l.719 [bb.shell] at Ox99a6d8c&gt;]" value="os.path.expanduser('~/.bbsh_history')">
            <AssAttr fromlineno="719" tolineno="719" lineno="719" attrname="historyfilename" expr="self">
              <Name fromlineno="719" tolineno="719" lineno="719" name="self"/>
            </AssAttr>
            <CallFunc fromlineno="719" tolineno="719" lineno="719" func="Getattr(expanduser)">
              <Getattr fromlineno="719" tolineno="719" lineno="719" attrname="expanduser" expr="os.path">
                <Getattr fromlineno="719" tolineno="719" lineno="719" attrname="path" expr="os">
                  <Name fromlineno="719" tolineno="719" lineno="719" name="os"/>
                </Getattr>
              </Getattr>
              <Const fromlineno="719" tolineno="719" lineno="719" type="str">'~/.bbsh_history'</Const>
            </CallFunc>
          </Assign>
          <Assign fromlineno="720" tolineno="720" lineno="720" targets="[&lt;AssAttr(startupfilename) l.720 [bb.shell] at Ox99a6ecc&gt;]" value="os.path.expanduser('~/.bbsh_startup')">
            <AssAttr fromlineno="720" tolineno="720" lineno="720" attrname="startupfilename" expr="self">
              <Name fromlineno="720" tolineno="720" lineno="720" name="self"/>
            </AssAttr>
            <CallFunc fromlineno="720" tolineno="720" lineno="720" func="Getattr(expanduser)">
              <Getattr fromlineno="720" tolineno="720" lineno="720" attrname="expanduser" expr="os.path">
                <Getattr fromlineno="720" tolineno="720" lineno="720" attrname="path" expr="os">
                  <Name fromlineno="720" tolineno="720" lineno="720" name="os"/>
                </Getattr>
              </Getattr>
              <Const fromlineno="720" tolineno="720" lineno="720" type="str">'~/.bbsh_startup'</Const>
            </CallFunc>
          </Assign>
          <Discard fromlineno="722" tolineno="722" lineno="722">
            <CallFunc fromlineno="722" tolineno="722" lineno="722" func="Getattr(set_completer)">
              <Getattr fromlineno="722" tolineno="722" lineno="722" attrname="set_completer" expr="readline">
                <Name fromlineno="722" tolineno="722" lineno="722" name="readline"/>
              </Getattr>
              <Name fromlineno="722" tolineno="722" lineno="722" name="completer"/>
            </CallFunc>
          </Discard>
          <Discard fromlineno="723" tolineno="723" lineno="723">
            <CallFunc fromlineno="723" tolineno="723" lineno="723" func="Getattr(set_completer_delims)">
              <Getattr fromlineno="723" tolineno="723" lineno="723" attrname="set_completer_delims" expr="readline">
                <Name fromlineno="723" tolineno="723" lineno="723" name="readline"/>
              </Getattr>
              <Const fromlineno="723" tolineno="723" lineno="723" type="str">' '</Const>
            </CallFunc>
          </Discard>
          <Discard fromlineno="724" tolineno="724" lineno="724">
            <CallFunc fromlineno="724" tolineno="724" lineno="724" func="Getattr(parse_and_bind)">
              <Getattr fromlineno="724" tolineno="724" lineno="724" attrname="parse_and_bind" expr="readline">
                <Name fromlineno="724" tolineno="724" lineno="724" name="readline"/>
              </Getattr>
              <Const fromlineno="724" tolineno="724" lineno="724" type="str">'tab: complete'</Const>
            </CallFunc>
          </Discard>
          <TryExcept fromlineno="726" tolineno="729" lineno="726">
            <Discard fromlineno="727" tolineno="727" lineno="727">
              <CallFunc fromlineno="727" tolineno="727" lineno="727" func="Getattr(read_history_file)">
                <Getattr fromlineno="727" tolineno="727" lineno="727" attrname="read_history_file" expr="readline">
                  <Name fromlineno="727" tolineno="727" lineno="727" name="readline"/>
                </Getattr>
                <Getattr fromlineno="727" tolineno="727" lineno="727" attrname="historyfilename" expr="self">
                  <Name fromlineno="727" tolineno="727" lineno="727" name="self"/>
                </Getattr>
              </CallFunc>
            </Discard>
            <ExceptHandler fromlineno="728" tolineno="729" lineno="728">
              <Name fromlineno="728" tolineno="728" lineno="728" name="IOError"/>
              <Pass fromlineno="729" tolineno="729" lineno="729"/>
            </ExceptHandler>
          </TryExcept>
          <Print fromlineno="731" tolineno="731" lineno="731">
            <Name fromlineno="731" tolineno="731" lineno="731" name="__credits__"/>
          </Print>
        </Function>
        <Function fromlineno="733" tolineno="739" lineno="733">
          <Arguments fromlineno="733" tolineno="733" lineno="None" format_args="self">
            <AssName fromlineno="733" tolineno="733" lineno="733" name="self"/>
          </Arguments>
          <Discard fromlineno="735" tolineno="735" lineno="735">
            <CallFunc fromlineno="735" tolineno="735" lineno="735" func="Name(debugOut)">
              <Name fromlineno="735" tolineno="735" lineno="735" name="debugOut"/>
              <Const fromlineno="735" tolineno="735" lineno="735" type="str">'writing command history'</Const>
            </CallFunc>
          </Discard>
          <TryExcept fromlineno="736" tolineno="739" lineno="736">
            <Discard fromlineno="737" tolineno="737" lineno="737">
              <CallFunc fromlineno="737" tolineno="737" lineno="737" func="Getattr(write_history_file)">
                <Getattr fromlineno="737" tolineno="737" lineno="737" attrname="write_history_file" expr="readline">
                  <Name fromlineno="737" tolineno="737" lineno="737" name="readline"/>
                </Getattr>
                <Getattr fromlineno="737" tolineno="737" lineno="737" attrname="historyfilename" expr="self">
                  <Name fromlineno="737" tolineno="737" lineno="737" name="self"/>
                </Getattr>
              </CallFunc>
            </Discard>
            <ExceptHandler fromlineno="738" tolineno="739" lineno="738">
              <Print fromlineno="739" tolineno="739" lineno="739">
                <Const fromlineno="739" tolineno="739" lineno="739" type="str">'SHELL: Unable to save command history'</Const>
              </Print>
            </ExceptHandler>
          </TryExcept>
        </Function>
        <Function fromlineno="741" tolineno="745" lineno="741">
          <Arguments fromlineno="741" tolineno="741" lineno="None" format_args="self, command, function, numparams=0, usage='', helptext=''">
            <AssName fromlineno="741" tolineno="741" lineno="741" name="self"/>
            <AssName fromlineno="741" tolineno="741" lineno="741" name="command"/>
            <AssName fromlineno="741" tolineno="741" lineno="741" name="function"/>
            <AssName fromlineno="741" tolineno="741" lineno="741" name="numparams"/>
            <AssName fromlineno="741" tolineno="741" lineno="741" name="usage"/>
            <AssName fromlineno="741" tolineno="741" lineno="741" name="helptext"/>
            <Const fromlineno="741" tolineno="741" lineno="741" type="int">0</Const>
            <Const fromlineno="741" tolineno="741" lineno="741" type="str">''</Const>
            <Const fromlineno="741" tolineno="741" lineno="741" type="str">''</Const>
          </Arguments>
          <If fromlineno="743" tolineno="743" lineno="743">
            <Compare fromlineno="743" tolineno="743" lineno="743" op="('==', &lt;Const(str) l.743 [bb.shell] at Ox99aaacc&gt;)">
              <Name fromlineno="743" tolineno="743" lineno="743" name="usage"/>
              <Const fromlineno="743" tolineno="743" lineno="743" type="str">''</Const>
            </Compare>
            <Assign fromlineno="743" tolineno="743" lineno="743" targets="[&lt;AssName(usage) l.743 [bb.shell] at Ox99aab6c&gt;]" value="command">
              <AssName fromlineno="743" tolineno="743" lineno="743" name="usage"/>
              <Name fromlineno="743" tolineno="743" lineno="743" name="command"/>
            </Assign>
          </If>
          <If fromlineno="744" tolineno="744" lineno="744">
            <Compare fromlineno="744" tolineno="744" lineno="744" op="('==', &lt;Const(str) l.744 [bb.shell] at Ox99aac4c&gt;)">
              <Name fromlineno="744" tolineno="744" lineno="744" name="helptext"/>
              <Const fromlineno="744" tolineno="744" lineno="744" type="str">''</Const>
            </Compare>
            <Assign fromlineno="744" tolineno="744" lineno="744" targets="[&lt;AssName(helptext) l.744 [bb.shell] at Ox99aacec&gt;]" value="(function.__doc__) or ('&lt;not yet documented&gt;')">
              <AssName fromlineno="744" tolineno="744" lineno="744" name="helptext"/>
              <BoolOp fromlineno="744" tolineno="744" lineno="744" op="or" values="function.__doc__,'&lt;not yet documented&gt;',">
                <Getattr fromlineno="744" tolineno="744" lineno="744" attrname="__doc__" expr="function">
                  <Name fromlineno="744" tolineno="744" lineno="744" name="function"/>
                </Getattr>
                <Const fromlineno="744" tolineno="744" lineno="744" type="str">'&lt;not yet documented&gt;'</Const>
              </BoolOp>
            </Assign>
          </If>
          <Assign fromlineno="745" tolineno="745" lineno="745" targets="[&lt;Subscript() l.745 [bb.shell] at Ox99aadec&gt;]" value="(function, numparams, usage, helptext)">
            <Subscript fromlineno="745" tolineno="745" lineno="745">
              <Name fromlineno="745" tolineno="745" lineno="745" name="cmds"/>
              <Index fromlineno="745" tolineno="745" lineno="None">
                <Name fromlineno="745" tolineno="745" lineno="745" name="command"/>
              </Index>
            </Subscript>
            <Tuple fromlineno="745" tolineno="745" lineno="745">
              <Name fromlineno="745" tolineno="745" lineno="745" name="function"/>
              <Name fromlineno="745" tolineno="745" lineno="745" name="numparams"/>
              <Name fromlineno="745" tolineno="745" lineno="745" name="usage"/>
              <Name fromlineno="745" tolineno="745" lineno="745" name="helptext"/>
            </Tuple>
          </Assign>
        </Function>
        <Function fromlineno="747" tolineno="761" lineno="747">
          <Arguments fromlineno="747" tolineno="747" lineno="None" format_args="self, command, params">
            <AssName fromlineno="747" tolineno="747" lineno="747" name="self"/>
            <AssName fromlineno="747" tolineno="747" lineno="747" name="command"/>
            <AssName fromlineno="747" tolineno="747" lineno="747" name="params"/>
          </Arguments>
          <Discard fromlineno="749" tolineno="749" lineno="749">
            <CallFunc fromlineno="749" tolineno="749" lineno="749" func="Name(debugOut)">
              <Name fromlineno="749" tolineno="749" lineno="749" name="debugOut"/>
              <BinOp fromlineno="749" tolineno="749" lineno="749" op="%" left="&quot;processing command '%s'...&quot;" right="command">
                <Const fromlineno="749" tolineno="749" lineno="749" type="str">"processing command '%s'..."</Const>
                <Name fromlineno="749" tolineno="749" lineno="749" name="command"/>
              </BinOp>
            </CallFunc>
          </Discard>
          <TryExcept fromlineno="750" tolineno="761" lineno="750">
            <Assign fromlineno="751" tolineno="751" lineno="751" targets="[&lt;Tuple(tuple) l.751 [bb.shell] at Ox99ae20c&gt;]" value="cmds[command]">
              <Tuple fromlineno="751" tolineno="751" lineno="751">
                <AssName fromlineno="751" tolineno="751" lineno="751" name="function"/>
                <AssName fromlineno="751" tolineno="751" lineno="751" name="numparams"/>
                <AssName fromlineno="751" tolineno="751" lineno="751" name="usage"/>
                <AssName fromlineno="751" tolineno="751" lineno="751" name="helptext"/>
              </Tuple>
              <Subscript fromlineno="751" tolineno="751" lineno="751">
                <Name fromlineno="751" tolineno="751" lineno="751" name="cmds"/>
                <Index fromlineno="751" tolineno="751" lineno="None">
                  <Name fromlineno="751" tolineno="751" lineno="751" name="command"/>
                </Index>
              </Subscript>
            </Assign>
            <ExceptHandler fromlineno="752" tolineno="754" lineno="752">
              <Name fromlineno="752" tolineno="752" lineno="752" name="KeyError"/>
              <Print fromlineno="753" tolineno="753" lineno="753">
                <BinOp fromlineno="753" tolineno="753" lineno="753" op="%" left="&quot;SHELL: ERROR: '%s' command is not a valid command.&quot;" right="command">
                  <Const fromlineno="753" tolineno="753" lineno="753" type="str">"SHELL: ERROR: '%s' command is not a valid command."</Const>
                  <Name fromlineno="753" tolineno="753" lineno="753" name="command"/>
                </BinOp>
              </Print>
              <Discard fromlineno="754" tolineno="754" lineno="754">
                <CallFunc fromlineno="754" tolineno="754" lineno="754" func="Getattr(removeLast)">
                  <Getattr fromlineno="754" tolineno="754" lineno="754" attrname="removeLast" expr="self.myout">
                    <Getattr fromlineno="754" tolineno="754" lineno="754" attrname="myout" expr="self">
                      <Name fromlineno="754" tolineno="754" lineno="754" name="self"/>
                    </Getattr>
                  </Getattr>
                </CallFunc>
              </Discard>
            </ExceptHandler>
            <If fromlineno="756" tolineno="758" lineno="756">
              <BoolOp fromlineno="756" tolineno="756" lineno="756" op="and" values="numparams != -1,not len(params) == numparams,">
                <Compare fromlineno="756" tolineno="756" lineno="756" op="('!=', &lt;Const(int) l.756 [bb.shell] at Ox99ae6cc&gt;)">
                  <Name fromlineno="756" tolineno="756" lineno="756" name="numparams"/>
                  <Const fromlineno="756" tolineno="756" lineno="756" type="int">-1</Const>
                </Compare>
                <UnaryOp fromlineno="756" tolineno="756" lineno="756">
                  <Compare fromlineno="756" tolineno="756" lineno="756" op="('==', &lt;Name(numparams) l.756 [bb.shell] at Ox99ae7ec&gt;)">
                    <CallFunc fromlineno="756" tolineno="756" lineno="756" func="Name(len)">
                      <Name fromlineno="756" tolineno="756" lineno="756" name="len"/>
                      <Name fromlineno="756" tolineno="756" lineno="756" name="params"/>
                    </CallFunc>
                    <Name fromlineno="756" tolineno="756" lineno="756" name="numparams"/>
                  </Compare>
                </UnaryOp>
              </BoolOp>
              <Print fromlineno="757" tolineno="757" lineno="757">
                <BinOp fromlineno="757" tolineno="757" lineno="757" op="%" left="&quot;Usage: '%s'&quot;" right="usage">
                  <Const fromlineno="757" tolineno="757" lineno="757" type="str">"Usage: '%s'"</Const>
                  <Name fromlineno="757" tolineno="757" lineno="757" name="usage"/>
                </BinOp>
              </Print>
              <Return fromlineno="758" tolineno="758" lineno="758"/>
            </If>
            <Assign fromlineno="760" tolineno="760" lineno="760" targets="[&lt;AssName(result) l.760 [bb.shell] at Ox99ae92c&gt;]" value="function(self.commands, params)">
              <AssName fromlineno="760" tolineno="760" lineno="760" name="result"/>
              <CallFunc fromlineno="760" tolineno="760" lineno="760" func="Name(function)">
                <Name fromlineno="760" tolineno="760" lineno="760" name="function"/>
                <Getattr fromlineno="760" tolineno="760" lineno="760" attrname="commands" expr="self">
                  <Name fromlineno="760" tolineno="760" lineno="760" name="self"/>
                </Getattr>
                <Name fromlineno="760" tolineno="760" lineno="760" name="params"/>
              </CallFunc>
            </Assign>
            <Discard fromlineno="761" tolineno="761" lineno="761">
              <CallFunc fromlineno="761" tolineno="761" lineno="761" func="Name(debugOut)">
                <Name fromlineno="761" tolineno="761" lineno="761" name="debugOut"/>
                <BinOp fromlineno="761" tolineno="761" lineno="761" op="%" left="&quot;result was '%s'&quot;" right="result">
                  <Const fromlineno="761" tolineno="761" lineno="761" type="str">"result was '%s'"</Const>
                  <Name fromlineno="761" tolineno="761" lineno="761" name="result"/>
                </BinOp>
              </CallFunc>
            </Discard>
          </TryExcept>
        </Function>
        <Function fromlineno="763" tolineno="774" lineno="763">
          <Arguments fromlineno="763" tolineno="763" lineno="None" format_args="self">
            <AssName fromlineno="763" tolineno="763" lineno="763" name="self"/>
          </Arguments>
          <If fromlineno="765" tolineno="774" lineno="765">
            <CallFunc fromlineno="765" tolineno="765" lineno="765" func="Getattr(exists)">
              <Getattr fromlineno="765" tolineno="765" lineno="765" attrname="exists" expr="os.path">
                <Getattr fromlineno="765" tolineno="765" lineno="765" attrname="path" expr="os">
                  <Name fromlineno="765" tolineno="765" lineno="765" name="os"/>
                </Getattr>
              </Getattr>
              <Getattr fromlineno="765" tolineno="765" lineno="765" attrname="startupfilename" expr="self">
                <Name fromlineno="765" tolineno="765" lineno="765" name="self"/>
              </Getattr>
            </CallFunc>
            <Assign fromlineno="766" tolineno="766" lineno="766" targets="[&lt;AssName(startupfile) l.766 [bb.shell] at Ox99aed2c&gt;]" value="open(self.startupfilename, 'r')">
              <AssName fromlineno="766" tolineno="766" lineno="766" name="startupfile"/>
              <CallFunc fromlineno="766" tolineno="766" lineno="766" func="Name(open)">
                <Name fromlineno="766" tolineno="766" lineno="766" name="open"/>
                <Getattr fromlineno="766" tolineno="766" lineno="766" attrname="startupfilename" expr="self">
                  <Name fromlineno="766" tolineno="766" lineno="766" name="self"/>
                </Getattr>
                <Const fromlineno="766" tolineno="766" lineno="766" type="str">'r'</Const>
              </CallFunc>
            </Assign>
            <For fromlineno="767" tolineno="774" lineno="767">
              <AssName fromlineno="767" tolineno="767" lineno="767" name="cmdline"/>
              <Name fromlineno="767" tolineno="767" lineno="767" name="startupfile"/>
              <Discard fromlineno="768" tolineno="768" lineno="768">
                <CallFunc fromlineno="768" tolineno="768" lineno="768" func="Name(debugOut)">
                  <Name fromlineno="768" tolineno="768" lineno="768" name="debugOut"/>
                  <BinOp fromlineno="768" tolineno="768" lineno="768" op="%" left="&quot;processing startup line '%s'&quot;" right="cmdline">
                    <Const fromlineno="768" tolineno="768" lineno="768" type="str">"processing startup line '%s'"</Const>
                    <Name fromlineno="768" tolineno="768" lineno="768" name="cmdline"/>
                  </BinOp>
                </CallFunc>
              </Discard>
              <If fromlineno="769" tolineno="770" lineno="769">
                <UnaryOp fromlineno="769" tolineno="769" lineno="769">
                  <Name fromlineno="769" tolineno="769" lineno="769" name="cmdline"/>
                </UnaryOp>
                <Continue fromlineno="770" tolineno="770" lineno="770"/>
              </If>
              <If fromlineno="771" tolineno="773" lineno="771">
                <Compare fromlineno="771" tolineno="771" lineno="771" op="('in', &lt;Name(cmdline) l.771 [bb.shell] at Ox99b216c&gt;)">
                  <Const fromlineno="771" tolineno="771" lineno="771" type="str">'|'</Const>
                  <Name fromlineno="771" tolineno="771" lineno="771" name="cmdline"/>
                </Compare>
                <Print fromlineno="772" tolineno="772" lineno="772">
                  <Const fromlineno="772" tolineno="772" lineno="772" type="str">"ERROR: '|' in startup file is not allowed. Ignoring line"</Const>
                </Print>
                <Continue fromlineno="773" tolineno="773" lineno="773"/>
              </If>
              <Discard fromlineno="774" tolineno="774" lineno="774">
                <CallFunc fromlineno="774" tolineno="774" lineno="774" func="Getattr(put)">
                  <Getattr fromlineno="774" tolineno="774" lineno="774" attrname="put" expr="self.commandQ">
                    <Getattr fromlineno="774" tolineno="774" lineno="774" attrname="commandQ" expr="self">
                      <Name fromlineno="774" tolineno="774" lineno="774" name="self"/>
                    </Getattr>
                  </Getattr>
                  <CallFunc fromlineno="774" tolineno="774" lineno="774" func="Getattr(strip)">
                    <Getattr fromlineno="774" tolineno="774" lineno="774" attrname="strip" expr="cmdline">
                      <Name fromlineno="774" tolineno="774" lineno="774" name="cmdline"/>
                    </Getattr>
                  </CallFunc>
                </CallFunc>
              </Discard>
            </For>
          </If>
        </Function>
        <Function fromlineno="776" tolineno="817" lineno="776">
          <Arguments fromlineno="776" tolineno="776" lineno="None" format_args="self">
            <AssName fromlineno="776" tolineno="776" lineno="776" name="self"/>
          </Arguments>
          <While fromlineno="778" tolineno="817" lineno="778">
            <UnaryOp fromlineno="778" tolineno="778" lineno="778">
              <Name fromlineno="778" tolineno="778" lineno="778" name="leave_mainloop"/>
            </UnaryOp>
            <TryExcept fromlineno="779" tolineno="817" lineno="779">
              <If fromlineno="780" tolineno="785" lineno="780">
                <CallFunc fromlineno="780" tolineno="780" lineno="780" func="Getattr(empty)">
                  <Getattr fromlineno="780" tolineno="780" lineno="780" attrname="empty" expr="self.commandQ">
                    <Getattr fromlineno="780" tolineno="780" lineno="780" attrname="commandQ" expr="self">
                      <Name fromlineno="780" tolineno="780" lineno="780" name="self"/>
                    </Getattr>
                  </Getattr>
                </CallFunc>
                <Assign fromlineno="781" tolineno="781" lineno="781" targets="[&lt;AssAttr(stdout) l.781 [bb.shell] at Ox99b266c&gt;]" value="self.myout.delegate">
                  <AssAttr fromlineno="781" tolineno="781" lineno="781" attrname="stdout" expr="sys">
                    <Name fromlineno="781" tolineno="781" lineno="781" name="sys"/>
                  </AssAttr>
                  <Getattr fromlineno="781" tolineno="781" lineno="781" attrname="delegate" expr="self.myout">
                    <Getattr fromlineno="781" tolineno="781" lineno="781" attrname="myout" expr="self">
                      <Name fromlineno="781" tolineno="781" lineno="781" name="self"/>
                    </Getattr>
                  </Getattr>
                </Assign>
                <Assign fromlineno="782" tolineno="782" lineno="782" targets="[&lt;AssName(cmdline) l.782 [bb.shell] at Ox99b274c&gt;]" value="raw_input('BB&gt;&gt; ')">
                  <AssName fromlineno="782" tolineno="782" lineno="782" name="cmdline"/>
                  <CallFunc fromlineno="782" tolineno="782" lineno="782" func="Name(raw_input)">
                    <Name fromlineno="782" tolineno="782" lineno="782" name="raw_input"/>
                    <Const fromlineno="782" tolineno="782" lineno="782" type="str">'BB&gt;&gt; '</Const>
                  </CallFunc>
                </Assign>
                <Assign fromlineno="783" tolineno="783" lineno="783" targets="[&lt;AssAttr(stdout) l.783 [bb.shell] at Ox99b284c&gt;]" value="self.myout">
                  <AssAttr fromlineno="783" tolineno="783" lineno="783" attrname="stdout" expr="sys">
                    <Name fromlineno="783" tolineno="783" lineno="783" name="sys"/>
                  </AssAttr>
                  <Getattr fromlineno="783" tolineno="783" lineno="783" attrname="myout" expr="self">
                    <Name fromlineno="783" tolineno="783" lineno="783" name="self"/>
                  </Getattr>
                </Assign>
                <Assign fromlineno="785" tolineno="785" lineno="785" targets="[&lt;AssName(cmdline) l.785 [bb.shell] at Ox99b292c&gt;]" value="self.commandQ.get()">
                  <AssName fromlineno="785" tolineno="785" lineno="785" name="cmdline"/>
                  <CallFunc fromlineno="785" tolineno="785" lineno="785" func="Getattr(get)">
                    <Getattr fromlineno="785" tolineno="785" lineno="785" attrname="get" expr="self.commandQ">
                      <Getattr fromlineno="785" tolineno="785" lineno="785" attrname="commandQ" expr="self">
                        <Name fromlineno="785" tolineno="785" lineno="785" name="self"/>
                      </Getattr>
                    </Getattr>
                  </CallFunc>
                </Assign>
              </If>
              <If fromlineno="786" tolineno="811" lineno="786">
                <Name fromlineno="786" tolineno="786" lineno="786" name="cmdline"/>
                <Assign fromlineno="787" tolineno="787" lineno="787" targets="[&lt;AssName(allCommands) l.787 [bb.shell] at Ox99b2a8c&gt;]" value="cmdline.split(';')">
                  <AssName fromlineno="787" tolineno="787" lineno="787" name="allCommands"/>
                  <CallFunc fromlineno="787" tolineno="787" lineno="787" func="Getattr(split)">
                    <Getattr fromlineno="787" tolineno="787" lineno="787" attrname="split" expr="cmdline">
                      <Name fromlineno="787" tolineno="787" lineno="787" name="cmdline"/>
                    </Getattr>
                    <Const fromlineno="787" tolineno="787" lineno="787" type="str">';'</Const>
                  </CallFunc>
                </Assign>
                <For fromlineno="788" tolineno="811" lineno="788">
                  <AssName fromlineno="788" tolineno="788" lineno="788" name="command"/>
                  <Name fromlineno="788" tolineno="788" lineno="788" name="allCommands"/>
                  <Assign fromlineno="789" tolineno="789" lineno="789" targets="[&lt;AssName(pipecmd) l.789 [bb.shell] at Ox99b2c6c&gt;]" value="None">
                    <AssName fromlineno="789" tolineno="789" lineno="789" name="pipecmd"/>
                    <Const fromlineno="789" tolineno="789" lineno="789" type="NoneType">None</Const>
                  </Assign>
                  <If fromlineno="792" tolineno="811" lineno="792">
                    <Compare fromlineno="792" tolineno="792" lineno="792" op="('==', &lt;Const(str) l.792 [bb.shell] at Ox99b2d8c&gt;)">
                      <Name fromlineno="792" tolineno="792" lineno="792" name="command"/>
                      <Const fromlineno="792" tolineno="792" lineno="792" type="str">'python'</Const>
                    </Compare>
                    <Assign fromlineno="793" tolineno="793" lineno="793" targets="[&lt;AssAttr(stdout) l.793 [bb.shell] at Ox99b2e2c&gt;]" value="self.myout.delegate">
                      <AssAttr fromlineno="793" tolineno="793" lineno="793" attrname="stdout" expr="sys">
                        <Name fromlineno="793" tolineno="793" lineno="793" name="sys"/>
                      </AssAttr>
                      <Getattr fromlineno="793" tolineno="793" lineno="793" attrname="delegate" expr="self.myout">
                        <Getattr fromlineno="793" tolineno="793" lineno="793" attrname="myout" expr="self">
                          <Name fromlineno="793" tolineno="793" lineno="793" name="self"/>
                        </Getattr>
                      </Getattr>
                    </Assign>
                    <Discard fromlineno="794" tolineno="794" lineno="794">
                      <CallFunc fromlineno="794" tolineno="794" lineno="794" func="Getattr(processCommand)">
                        <Getattr fromlineno="794" tolineno="794" lineno="794" attrname="processCommand" expr="self">
                          <Name fromlineno="794" tolineno="794" lineno="794" name="self"/>
                        </Getattr>
                        <Name fromlineno="794" tolineno="794" lineno="794" name="command"/>
                        <Const fromlineno="794" tolineno="794" lineno="794" type="str">''</Const>
                      </CallFunc>
                    </Discard>
                    <Assign fromlineno="795" tolineno="795" lineno="795" targets="[&lt;AssAttr(stdout) l.795 [bb.shell] at Ox99b2fec&gt;]" value="self.myout">
                      <AssAttr fromlineno="795" tolineno="795" lineno="795" attrname="stdout" expr="sys">
                        <Name fromlineno="795" tolineno="795" lineno="795" name="sys"/>
                      </AssAttr>
                      <Getattr fromlineno="795" tolineno="795" lineno="795" attrname="myout" expr="self">
                        <Name fromlineno="795" tolineno="795" lineno="795" name="self"/>
                      </Getattr>
                    </Assign>
                    <Discard fromlineno="797" tolineno="797" lineno="797">
                      <CallFunc fromlineno="797" tolineno="797" lineno="797" func="Getattr(startCommand)">
                        <Getattr fromlineno="797" tolineno="797" lineno="797" attrname="startCommand" expr="self.myout">
                          <Getattr fromlineno="797" tolineno="797" lineno="797" attrname="myout" expr="self">
                            <Name fromlineno="797" tolineno="797" lineno="797" name="self"/>
                          </Getattr>
                        </Getattr>
                        <Name fromlineno="797" tolineno="797" lineno="797" name="command"/>
                      </CallFunc>
                    </Discard>
                    <If fromlineno="798" tolineno="801" lineno="798">
                      <Compare fromlineno="798" tolineno="798" lineno="798" op="('in', &lt;Name(command) l.798 [bb.shell] at Ox99b624c&gt;)">
                        <Const fromlineno="798" tolineno="798" lineno="798" type="str">'|'</Const>
                        <Name fromlineno="798" tolineno="798" lineno="798" name="command"/>
                      </Compare>
                      <Assign fromlineno="799" tolineno="799" lineno="799" targets="[&lt;Tuple(tuple) l.799 [bb.shell] at Ox99b62ec&gt;]" value="command.split('|')">
                        <Tuple fromlineno="799" tolineno="799" lineno="799">
                          <AssName fromlineno="799" tolineno="799" lineno="799" name="command"/>
                          <AssName fromlineno="799" tolineno="799" lineno="799" name="pipecmd"/>
                        </Tuple>
                        <CallFunc fromlineno="799" tolineno="799" lineno="799" func="Getattr(split)">
                          <Getattr fromlineno="799" tolineno="799" lineno="799" attrname="split" expr="command">
                            <Name fromlineno="799" tolineno="799" lineno="799" name="command"/>
                          </Getattr>
                          <Const fromlineno="799" tolineno="799" lineno="799" type="str">'|'</Const>
                        </CallFunc>
                      </Assign>
                      <Assign fromlineno="800" tolineno="800" lineno="800" targets="[&lt;AssName(delegate) l.800 [bb.shell] at Ox99b644c&gt;]" value="self.myout.delegate">
                        <AssName fromlineno="800" tolineno="800" lineno="800" name="delegate"/>
                        <Getattr fromlineno="800" tolineno="800" lineno="800" attrname="delegate" expr="self.myout">
                          <Getattr fromlineno="800" tolineno="800" lineno="800" attrname="myout" expr="self">
                            <Name fromlineno="800" tolineno="800" lineno="800" name="self"/>
                          </Getattr>
                        </Getattr>
                      </Assign>
                      <Assign fromlineno="801" tolineno="801" lineno="801" targets="[&lt;AssAttr(delegate) l.801 [bb.shell] at Ox99b652c&gt;]" value="None">
                        <AssAttr fromlineno="801" tolineno="801" lineno="801" attrname="delegate" expr="self.myout">
                          <Getattr fromlineno="801" tolineno="801" lineno="801" attrname="myout" expr="self">
                            <Name fromlineno="801" tolineno="801" lineno="801" name="self"/>
                          </Getattr>
                        </AssAttr>
                        <Const fromlineno="801" tolineno="801" lineno="801" type="NoneType">None</Const>
                      </Assign>
                    </If>
                    <Assign fromlineno="802" tolineno="802" lineno="802" targets="[&lt;AssName(tokens) l.802 [bb.shell] at Ox99b65ec&gt;]" value="shlex.split(command, True)">
                      <AssName fromlineno="802" tolineno="802" lineno="802" name="tokens"/>
                      <CallFunc fromlineno="802" tolineno="802" lineno="802" func="Getattr(split)">
                        <Getattr fromlineno="802" tolineno="802" lineno="802" attrname="split" expr="shlex">
                          <Name fromlineno="802" tolineno="802" lineno="802" name="shlex"/>
                        </Getattr>
                        <Name fromlineno="802" tolineno="802" lineno="802" name="command"/>
                        <Const fromlineno="802" tolineno="802" lineno="802" type="bool">True</Const>
                      </CallFunc>
                    </Assign>
                    <Discard fromlineno="803" tolineno="803" lineno="803">
                      <CallFunc fromlineno="803" tolineno="803" lineno="803" func="Getattr(processCommand)">
                        <Getattr fromlineno="803" tolineno="803" lineno="803" attrname="processCommand" expr="self">
                          <Name fromlineno="803" tolineno="803" lineno="803" name="self"/>
                        </Getattr>
                        <Subscript fromlineno="803" tolineno="803" lineno="803">
                          <Name fromlineno="803" tolineno="803" lineno="803" name="tokens"/>
                          <Index fromlineno="803" tolineno="803" lineno="None">
                            <Const fromlineno="803" tolineno="803" lineno="803" type="int">0</Const>
                          </Index>
                        </Subscript>
                        <BoolOp fromlineno="803" tolineno="803" lineno="803" op="or" values="tokens[1:],'',">
                          <Subscript fromlineno="803" tolineno="803" lineno="803">
                            <Name fromlineno="803" tolineno="803" lineno="803" name="tokens"/>
                            <Slice fromlineno="803" tolineno="803" lineno="None">
                              <Const fromlineno="803" tolineno="803" lineno="803" type="int">1</Const>
                            </Slice>
                          </Subscript>
                          <Const fromlineno="803" tolineno="803" lineno="803" type="str">''</Const>
                        </BoolOp>
                      </CallFunc>
                    </Discard>
                    <Discard fromlineno="804" tolineno="804" lineno="804">
                      <CallFunc fromlineno="804" tolineno="804" lineno="804" func="Getattr(endCommand)">
                        <Getattr fromlineno="804" tolineno="804" lineno="804" attrname="endCommand" expr="self.myout">
                          <Getattr fromlineno="804" tolineno="804" lineno="804" attrname="myout" expr="self">
                            <Name fromlineno="804" tolineno="804" lineno="804" name="self"/>
                          </Getattr>
                        </Getattr>
                      </CallFunc>
                    </Discard>
                    <If fromlineno="805" tolineno="811" lineno="805">
                      <Compare fromlineno="805" tolineno="805" lineno="805" op="('is not', &lt;Const(NoneType) l.805 [bb.shell] at Ox99b6a4c&gt;)">
                        <Name fromlineno="805" tolineno="805" lineno="805" name="pipecmd"/>
                        <Const fromlineno="805" tolineno="805" lineno="805" type="NoneType">None</Const>
                      </Compare>
                      <Assign fromlineno="806" tolineno="806" lineno="806" targets="[&lt;AssAttr(delegate) l.806 [bb.shell] at Ox99b6aec&gt;]" value="delegate">
                        <AssAttr fromlineno="806" tolineno="806" lineno="806" attrname="delegate" expr="self.myout">
                          <Getattr fromlineno="806" tolineno="806" lineno="806" attrname="myout" expr="self">
                            <Name fromlineno="806" tolineno="806" lineno="806" name="self"/>
                          </Getattr>
                        </AssAttr>
                        <Name fromlineno="806" tolineno="806" lineno="806" name="delegate"/>
                      </Assign>
                      <Assign fromlineno="808" tolineno="808" lineno="808" targets="[&lt;AssName(pipe) l.808 [bb.shell] at Ox99b6bac&gt;]" value="popen2.Popen4(pipecmd)">
                        <AssName fromlineno="808" tolineno="808" lineno="808" name="pipe"/>
                        <CallFunc fromlineno="808" tolineno="808" lineno="808" func="Getattr(Popen4)">
                          <Getattr fromlineno="808" tolineno="808" lineno="808" attrname="Popen4" expr="popen2">
                            <Name fromlineno="808" tolineno="808" lineno="808" name="popen2"/>
                          </Getattr>
                          <Name fromlineno="808" tolineno="808" lineno="808" name="pipecmd"/>
                        </CallFunc>
                      </Assign>
                      <Discard fromlineno="809" tolineno="809" lineno="809">
                        <CallFunc fromlineno="809" tolineno="809" lineno="809" func="Getattr(write)">
                          <Getattr fromlineno="809" tolineno="809" lineno="809" attrname="write" expr="pipe.tochild">
                            <Getattr fromlineno="809" tolineno="809" lineno="809" attrname="tochild" expr="pipe">
                              <Name fromlineno="809" tolineno="809" lineno="809" name="pipe"/>
                            </Getattr>
                          </Getattr>
                          <CallFunc fromlineno="809" tolineno="809" lineno="809" func="Getattr(join)">
                            <Getattr fromlineno="809" tolineno="809" lineno="809" attrname="join" expr="'\n'">
                              <Const fromlineno="809" tolineno="809" lineno="809" type="str">'\n'</Const>
                            </Getattr>
                            <CallFunc fromlineno="809" tolineno="809" lineno="809" func="Getattr(lastBuffer)">
                              <Getattr fromlineno="809" tolineno="809" lineno="809" attrname="lastBuffer" expr="self.myout">
                                <Getattr fromlineno="809" tolineno="809" lineno="809" attrname="myout" expr="self">
                                  <Name fromlineno="809" tolineno="809" lineno="809" name="self"/>
                                </Getattr>
                              </Getattr>
                            </CallFunc>
                          </CallFunc>
                        </CallFunc>
                      </Discard>
                      <Discard fromlineno="810" tolineno="810" lineno="810">
                        <CallFunc fromlineno="810" tolineno="810" lineno="810" func="Getattr(close)">
                          <Getattr fromlineno="810" tolineno="810" lineno="810" attrname="close" expr="pipe.tochild">
                            <Getattr fromlineno="810" tolineno="810" lineno="810" attrname="tochild" expr="pipe">
                              <Name fromlineno="810" tolineno="810" lineno="810" name="pipe"/>
                            </Getattr>
                          </Getattr>
                        </CallFunc>
                      </Discard>
                      <Discard fromlineno="811" tolineno="811" lineno="811">
                        <CallFunc fromlineno="811" tolineno="811" lineno="811" func="Getattr(write)">
                          <Getattr fromlineno="811" tolineno="811" lineno="811" attrname="write" expr="sys.stdout">
                            <Getattr fromlineno="811" tolineno="811" lineno="811" attrname="stdout" expr="sys">
                              <Name fromlineno="811" tolineno="811" lineno="811" name="sys"/>
                            </Getattr>
                          </Getattr>
                          <CallFunc fromlineno="811" tolineno="811" lineno="811" func="Getattr(read)">
                            <Getattr fromlineno="811" tolineno="811" lineno="811" attrname="read" expr="pipe.fromchild">
                              <Getattr fromlineno="811" tolineno="811" lineno="811" attrname="fromchild" expr="pipe">
                                <Name fromlineno="811" tolineno="811" lineno="811" name="pipe"/>
                              </Getattr>
                            </Getattr>
                          </CallFunc>
                        </CallFunc>
                      </Discard>
                    </If>
                  </If>
                </For>
              </If>
              <ExceptHandler fromlineno="813" tolineno="815" lineno="813">
                <Name fromlineno="813" tolineno="813" lineno="813" name="EOFError"/>
                <Print fromlineno="814" tolineno="814" lineno="814"/>
                <Return fromlineno="815" tolineno="815" lineno="815"/>
              </ExceptHandler>
              <ExceptHandler fromlineno="816" tolineno="817" lineno="816">
                <Name fromlineno="816" tolineno="816" lineno="816" name="KeyboardInterrupt"/>
                <Print fromlineno="817" tolineno="817" lineno="817"/>
              </ExceptHandler>
            </TryExcept>
          </While>
        </Function>
      </Class>
      <Function fromlineno="823" tolineno="829" lineno="823">
        <Arguments fromlineno="823" tolineno="823" lineno="None" format_args="aCooker">
          <AssName fromlineno="823" tolineno="823" lineno="823" name="aCooker"/>
        </Arguments>
        <Global fromlineno="824" tolineno="824" lineno="824"/>
        <Assign fromlineno="825" tolineno="825" lineno="825" targets="[&lt;AssName(cooker) l.825 [bb.shell] at Ox99ba32c&gt;]" value="aCooker">
          <AssName fromlineno="825" tolineno="825" lineno="825" name="cooker"/>
          <Name fromlineno="825" tolineno="825" lineno="825" name="aCooker"/>
        </Assign>
        <Assign fromlineno="826" tolineno="826" lineno="826" targets="[&lt;AssName(bbshell) l.826 [bb.shell] at Ox99ba3ac&gt;]" value="BitBakeShell()">
          <AssName fromlineno="826" tolineno="826" lineno="826" name="bbshell"/>
          <CallFunc fromlineno="826" tolineno="826" lineno="826" func="Name(BitBakeShell)">
            <Name fromlineno="826" tolineno="826" lineno="826" name="BitBakeShell"/>
          </CallFunc>
        </Assign>
        <Discard fromlineno="827" tolineno="827" lineno="827">
          <CallFunc fromlineno="827" tolineno="827" lineno="827" func="Getattr(processStartupFile)">
            <Getattr fromlineno="827" tolineno="827" lineno="827" attrname="processStartupFile" expr="bbshell">
              <Name fromlineno="827" tolineno="827" lineno="827" name="bbshell"/>
            </Getattr>
          </CallFunc>
        </Discard>
        <Discard fromlineno="828" tolineno="828" lineno="828">
          <CallFunc fromlineno="828" tolineno="828" lineno="828" func="Getattr(main)">
            <Getattr fromlineno="828" tolineno="828" lineno="828" attrname="main" expr="bbshell">
              <Name fromlineno="828" tolineno="828" lineno="828" name="bbshell"/>
            </Getattr>
          </CallFunc>
        </Discard>
        <Discard fromlineno="829" tolineno="829" lineno="829">
          <CallFunc fromlineno="829" tolineno="829" lineno="829" func="Getattr(cleanup)">
            <Getattr fromlineno="829" tolineno="829" lineno="829" attrname="cleanup" expr="bbshell">
              <Name fromlineno="829" tolineno="829" lineno="829" name="bbshell"/>
            </Getattr>
          </CallFunc>
        </Discard>
      </Function>
      <If fromlineno="831" tolineno="832" lineno="831">
        <Compare fromlineno="831" tolineno="831" lineno="831" op="('==', &lt;Const(str) l.831 [bb.shell] at Ox99ba68c&gt;)">
          <Name fromlineno="831" tolineno="831" lineno="831" name="__name__"/>
          <Const fromlineno="831" tolineno="831" lineno="831" type="str">'__main__'</Const>
        </Compare>
        <Print fromlineno="832" tolineno="832" lineno="832">
          <Const fromlineno="832" tolineno="832" lineno="832" type="str">'SHELL: Sorry, this program should only be called by BitBake.'</Const>
        </Print>
      </If>
    </Module>
    <Module fromlineno="0" tolineno="421" lineno="0" name="bb.utils">
      <Assign fromlineno="22" tolineno="22" lineno="22" targets="[&lt;AssName(digits) l.22 [bb.utils] at Ox98398ac&gt;]" value="'0123456789'">
        <AssName fromlineno="22" tolineno="22" lineno="22" name="digits"/>
        <Const fromlineno="22" tolineno="22" lineno="22" type="str">'0123456789'</Const>
      </Assign>
      <Assign fromlineno="23" tolineno="23" lineno="23" targets="[&lt;AssName(ascii_letters) l.23 [bb.utils] at Ox983992c&gt;]" value="'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'">
        <AssName fromlineno="23" tolineno="23" lineno="23" name="ascii_letters"/>
        <Const fromlineno="23" tolineno="23" lineno="23" type="str">'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'</Const>
      </Assign>
      <Assign fromlineno="24" tolineno="24" lineno="24" targets="[&lt;AssName(separators) l.24 [bb.utils] at Ox98399cc&gt;]" value="'.-'">
        <AssName fromlineno="24" tolineno="24" lineno="24" name="separators"/>
        <Const fromlineno="24" tolineno="24" lineno="24" type="str">'.-'</Const>
      </Assign>
      <Import fromlineno="26" tolineno="26" lineno="26">
        <ImportName name="re"/>
        <ImportName name="fcntl"/>
        <ImportName name="os"/>
        <ImportName name="types"/>
      </Import>
      <Function fromlineno="28" tolineno="45" lineno="28">
        <Arguments fromlineno="28" tolineno="28" lineno="None" format_args="s">
          <AssName fromlineno="28" tolineno="28" lineno="28" name="s"/>
        </Arguments>
        <Assign fromlineno="29" tolineno="29" lineno="29" targets="[&lt;AssName(r) l.29 [bb.utils] at Ox9839dcc&gt;]" value="[]">
          <AssName fromlineno="29" tolineno="29" lineno="29" name="r"/>
          <List fromlineno="29" tolineno="29" lineno="29"/>
        </Assign>
        <Assign fromlineno="30" tolineno="30" lineno="30" targets="[&lt;AssName(alpha_regexp) l.30 [bb.utils] at Ox9839cac&gt;]" value="re.compile('^([a-zA-Z]+)(.*)$')">
          <AssName fromlineno="30" tolineno="30" lineno="30" name="alpha_regexp"/>
          <CallFunc fromlineno="30" tolineno="30" lineno="30" func="Getattr(compile)">
            <Getattr fromlineno="30" tolineno="30" lineno="30" attrname="compile" expr="re">
              <Name fromlineno="30" tolineno="30" lineno="30" name="re"/>
            </Getattr>
            <Const fromlineno="30" tolineno="30" lineno="30" type="str">'^([a-zA-Z]+)(.*)$'</Const>
          </CallFunc>
        </Assign>
        <Assign fromlineno="31" tolineno="31" lineno="31" targets="[&lt;AssName(numeric_regexp) l.31 [bb.utils] at Ox9839eac&gt;]" value="re.compile('^(\\d+)(.*)$')">
          <AssName fromlineno="31" tolineno="31" lineno="31" name="numeric_regexp"/>
          <CallFunc fromlineno="31" tolineno="31" lineno="31" func="Getattr(compile)">
            <Getattr fromlineno="31" tolineno="31" lineno="31" attrname="compile" expr="re">
              <Name fromlineno="31" tolineno="31" lineno="31" name="re"/>
            </Getattr>
            <Const fromlineno="31" tolineno="31" lineno="31" type="str">'^(\\d+)(.*)$'</Const>
          </CallFunc>
        </Assign>
        <While fromlineno="32" tolineno="44" lineno="32">
          <Compare fromlineno="32" tolineno="32" lineno="32" op="('!=', &lt;Const(str) l.32 [bb.utils] at Ox9839f8c&gt;)">
            <Name fromlineno="32" tolineno="32" lineno="32" name="s"/>
            <Const fromlineno="32" tolineno="32" lineno="32" type="str">''</Const>
          </Compare>
          <If fromlineno="33" tolineno="37" lineno="33">
            <Compare fromlineno="33" tolineno="33" lineno="33" op="('in', &lt;Name(digits) l.33 [bb.utils] at Ox983c0ac&gt;)">
              <Subscript fromlineno="33" tolineno="33" lineno="33">
                <Name fromlineno="33" tolineno="33" lineno="33" name="s"/>
                <Index fromlineno="33" tolineno="33" lineno="None">
                  <Const fromlineno="33" tolineno="33" lineno="33" type="int">0</Const>
                </Index>
              </Subscript>
              <Name fromlineno="33" tolineno="33" lineno="33" name="digits"/>
            </Compare>
            <Assign fromlineno="34" tolineno="34" lineno="34" targets="[&lt;AssName(m) l.34 [bb.utils] at Ox983c10c&gt;]" value="numeric_regexp.match(s)">
              <AssName fromlineno="34" tolineno="34" lineno="34" name="m"/>
              <CallFunc fromlineno="34" tolineno="34" lineno="34" func="Getattr(match)">
                <Getattr fromlineno="34" tolineno="34" lineno="34" attrname="match" expr="numeric_regexp">
                  <Name fromlineno="34" tolineno="34" lineno="34" name="numeric_regexp"/>
                </Getattr>
                <Name fromlineno="34" tolineno="34" lineno="34" name="s"/>
              </CallFunc>
            </Assign>
            <Discard fromlineno="35" tolineno="35" lineno="35">
              <CallFunc fromlineno="35" tolineno="35" lineno="35" func="Getattr(append)">
                <Getattr fromlineno="35" tolineno="35" lineno="35" attrname="append" expr="r">
                  <Name fromlineno="35" tolineno="35" lineno="35" name="r"/>
                </Getattr>
                <CallFunc fromlineno="35" tolineno="35" lineno="35" func="Name(int)">
                  <Name fromlineno="35" tolineno="35" lineno="35" name="int"/>
                  <CallFunc fromlineno="35" tolineno="35" lineno="35" func="Getattr(group)">
                    <Getattr fromlineno="35" tolineno="35" lineno="35" attrname="group" expr="m">
                      <Name fromlineno="35" tolineno="35" lineno="35" name="m"/>
                    </Getattr>
                    <Const fromlineno="35" tolineno="35" lineno="35" type="int">1</Const>
                  </CallFunc>
                </CallFunc>
              </CallFunc>
            </Discard>
            <Assign fromlineno="36" tolineno="36" lineno="36" targets="[&lt;AssName(s) l.36 [bb.utils] at Ox983c48c&gt;]" value="m.group(2)">
              <AssName fromlineno="36" tolineno="36" lineno="36" name="s"/>
              <CallFunc fromlineno="36" tolineno="36" lineno="36" func="Getattr(group)">
                <Getattr fromlineno="36" tolineno="36" lineno="36" attrname="group" expr="m">
                  <Name fromlineno="36" tolineno="36" lineno="36" name="m"/>
                </Getattr>
                <Const fromlineno="36" tolineno="36" lineno="36" type="int">2</Const>
              </CallFunc>
            </Assign>
            <Continue fromlineno="37" tolineno="37" lineno="37"/>
          </If>
          <If fromlineno="38" tolineno="42" lineno="38">
            <Compare fromlineno="38" tolineno="38" lineno="38" op="('in', &lt;Name(ascii_letters) l.38 [bb.utils] at Ox983c98c&gt;)">
              <Subscript fromlineno="38" tolineno="38" lineno="38">
                <Name fromlineno="38" tolineno="38" lineno="38" name="s"/>
                <Index fromlineno="38" tolineno="38" lineno="None">
                  <Const fromlineno="38" tolineno="38" lineno="38" type="int">0</Const>
                </Index>
              </Subscript>
              <Name fromlineno="38" tolineno="38" lineno="38" name="ascii_letters"/>
            </Compare>
            <Assign fromlineno="39" tolineno="39" lineno="39" targets="[&lt;AssName(m) l.39 [bb.utils] at Ox983c64c&gt;]" value="alpha_regexp.match(s)">
              <AssName fromlineno="39" tolineno="39" lineno="39" name="m"/>
              <CallFunc fromlineno="39" tolineno="39" lineno="39" func="Getattr(match)">
                <Getattr fromlineno="39" tolineno="39" lineno="39" attrname="match" expr="alpha_regexp">
                  <Name fromlineno="39" tolineno="39" lineno="39" name="alpha_regexp"/>
                </Getattr>
                <Name fromlineno="39" tolineno="39" lineno="39" name="s"/>
              </CallFunc>
            </Assign>
            <Discard fromlineno="40" tolineno="40" lineno="40">
              <CallFunc fromlineno="40" tolineno="40" lineno="40" func="Getattr(append)">
                <Getattr fromlineno="40" tolineno="40" lineno="40" attrname="append" expr="r">
                  <Name fromlineno="40" tolineno="40" lineno="40" name="r"/>
                </Getattr>
                <CallFunc fromlineno="40" tolineno="40" lineno="40" func="Getattr(group)">
                  <Getattr fromlineno="40" tolineno="40" lineno="40" attrname="group" expr="m">
                    <Name fromlineno="40" tolineno="40" lineno="40" name="m"/>
                  </Getattr>
                  <Const fromlineno="40" tolineno="40" lineno="40" type="int">1</Const>
                </CallFunc>
              </CallFunc>
            </Discard>
            <Assign fromlineno="41" tolineno="41" lineno="41" targets="[&lt;AssName(s) l.41 [bb.utils] at Ox983c54c&gt;]" value="m.group(2)">
              <AssName fromlineno="41" tolineno="41" lineno="41" name="s"/>
              <CallFunc fromlineno="41" tolineno="41" lineno="41" func="Getattr(group)">
                <Getattr fromlineno="41" tolineno="41" lineno="41" attrname="group" expr="m">
                  <Name fromlineno="41" tolineno="41" lineno="41" name="m"/>
                </Getattr>
                <Const fromlineno="41" tolineno="41" lineno="41" type="int">2</Const>
              </CallFunc>
            </Assign>
            <Continue fromlineno="42" tolineno="42" lineno="42"/>
          </If>
          <Discard fromlineno="43" tolineno="43" lineno="43">
            <CallFunc fromlineno="43" tolineno="43" lineno="43" func="Getattr(append)">
              <Getattr fromlineno="43" tolineno="43" lineno="43" attrname="append" expr="r">
                <Name fromlineno="43" tolineno="43" lineno="43" name="r"/>
              </Getattr>
              <Subscript fromlineno="43" tolineno="43" lineno="43">
                <Name fromlineno="43" tolineno="43" lineno="43" name="s"/>
                <Index fromlineno="43" tolineno="43" lineno="None">
                  <Const fromlineno="43" tolineno="43" lineno="43" type="int">0</Const>
                </Index>
              </Subscript>
            </CallFunc>
          </Discard>
          <Assign fromlineno="44" tolineno="44" lineno="44" targets="[&lt;AssName(s) l.44 [bb.utils] at Ox983cbec&gt;]" value="s[1:]">
            <AssName fromlineno="44" tolineno="44" lineno="44" name="s"/>
            <Subscript fromlineno="44" tolineno="44" lineno="44">
              <Name fromlineno="44" tolineno="44" lineno="44" name="s"/>
              <Slice fromlineno="44" tolineno="44" lineno="None">
                <Const fromlineno="44" tolineno="44" lineno="44" type="int">1</Const>
              </Slice>
            </Subscript>
          </Assign>
        </While>
        <Return fromlineno="45" tolineno="45" lineno="45">
          <Name fromlineno="45" tolineno="45" lineno="45" name="r"/>
        </Return>
      </Function>
      <Function fromlineno="47" tolineno="76" lineno="47">
        <Arguments fromlineno="47" tolineno="47" lineno="None" format_args="a, b">
          <AssName fromlineno="47" tolineno="47" lineno="47" name="a"/>
          <AssName fromlineno="47" tolineno="47" lineno="47" name="b"/>
        </Arguments>
        <Assign fromlineno="48" tolineno="48" lineno="48" targets="[&lt;AssName(va) l.48 [bb.utils] at Ox983ce0c&gt;]" value="explode_version(a)">
          <AssName fromlineno="48" tolineno="48" lineno="48" name="va"/>
          <CallFunc fromlineno="48" tolineno="48" lineno="48" func="Name(explode_version)">
            <Name fromlineno="48" tolineno="48" lineno="48" name="explode_version"/>
            <Name fromlineno="48" tolineno="48" lineno="48" name="a"/>
          </CallFunc>
        </Assign>
        <Assign fromlineno="49" tolineno="49" lineno="49" targets="[&lt;AssName(vb) l.49 [bb.utils] at Ox983cf2c&gt;]" value="explode_version(b)">
          <AssName fromlineno="49" tolineno="49" lineno="49" name="vb"/>
          <CallFunc fromlineno="49" tolineno="49" lineno="49" func="Name(explode_version)">
            <Name fromlineno="49" tolineno="49" lineno="49" name="explode_version"/>
            <Name fromlineno="49" tolineno="49" lineno="49" name="b"/>
          </CallFunc>
        </Assign>
        <Assign fromlineno="50" tolineno="50" lineno="50" targets="[&lt;AssName(sa) l.50 [bb.utils] at Ox99591cc&gt;]" value="False">
          <AssName fromlineno="50" tolineno="50" lineno="50" name="sa"/>
          <Const fromlineno="50" tolineno="50" lineno="50" type="bool">False</Const>
        </Assign>
        <Assign fromlineno="51" tolineno="51" lineno="51" targets="[&lt;AssName(sb) l.51 [bb.utils] at Ox984008c&gt;]" value="False">
          <AssName fromlineno="51" tolineno="51" lineno="51" name="sb"/>
          <Const fromlineno="51" tolineno="51" lineno="51" type="bool">False</Const>
        </Assign>
        <While fromlineno="52" tolineno="76" lineno="52">
          <Const fromlineno="52" tolineno="52" lineno="52" type="bool">True</Const>
          <If fromlineno="53" tolineno="56" lineno="53">
            <Compare fromlineno="53" tolineno="53" lineno="53" op="('==', &lt;List(list) l.53 [bb.utils] at Ox984016c&gt;)">
              <Name fromlineno="53" tolineno="53" lineno="53" name="va"/>
              <List fromlineno="53" tolineno="53" lineno="53"/>
            </Compare>
            <Assign fromlineno="54" tolineno="54" lineno="54" targets="[&lt;AssName(ca) l.54 [bb.utils] at Ox98406cc&gt;]" value="None">
              <AssName fromlineno="54" tolineno="54" lineno="54" name="ca"/>
              <Const fromlineno="54" tolineno="54" lineno="54" type="NoneType">None</Const>
            </Assign>
            <Assign fromlineno="56" tolineno="56" lineno="56" targets="[&lt;AssName(ca) l.56 [bb.utils] at Ox98403ac&gt;]" value="va.pop(0)">
              <AssName fromlineno="56" tolineno="56" lineno="56" name="ca"/>
              <CallFunc fromlineno="56" tolineno="56" lineno="56" func="Getattr(pop)">
                <Getattr fromlineno="56" tolineno="56" lineno="56" attrname="pop" expr="va">
                  <Name fromlineno="56" tolineno="56" lineno="56" name="va"/>
                </Getattr>
                <Const fromlineno="56" tolineno="56" lineno="56" type="int">0</Const>
              </CallFunc>
            </Assign>
          </If>
          <If fromlineno="57" tolineno="60" lineno="57">
            <Compare fromlineno="57" tolineno="57" lineno="57" op="('==', &lt;List(list) l.57 [bb.utils] at Ox984036c&gt;)">
              <Name fromlineno="57" tolineno="57" lineno="57" name="vb"/>
              <List fromlineno="57" tolineno="57" lineno="57"/>
            </Compare>
            <Assign fromlineno="58" tolineno="58" lineno="58" targets="[&lt;AssName(cb) l.58 [bb.utils] at Ox984056c&gt;]" value="None">
              <AssName fromlineno="58" tolineno="58" lineno="58" name="cb"/>
              <Const fromlineno="58" tolineno="58" lineno="58" type="NoneType">None</Const>
            </Assign>
            <Assign fromlineno="60" tolineno="60" lineno="60" targets="[&lt;AssName(cb) l.60 [bb.utils] at Ox984052c&gt;]" value="vb.pop(0)">
              <AssName fromlineno="60" tolineno="60" lineno="60" name="cb"/>
              <CallFunc fromlineno="60" tolineno="60" lineno="60" func="Getattr(pop)">
                <Getattr fromlineno="60" tolineno="60" lineno="60" attrname="pop" expr="vb">
                  <Name fromlineno="60" tolineno="60" lineno="60" name="vb"/>
                </Getattr>
                <Const fromlineno="60" tolineno="60" lineno="60" type="int">0</Const>
              </CallFunc>
            </Assign>
          </If>
          <If fromlineno="61" tolineno="62" lineno="61">
            <BoolOp fromlineno="61" tolineno="61" lineno="61" op="and" values="ca == None,cb == None,">
              <Compare fromlineno="61" tolineno="61" lineno="61" op="('==', &lt;Const(NoneType) l.61 [bb.utils] at Ox98407cc&gt;)">
                <Name fromlineno="61" tolineno="61" lineno="61" name="ca"/>
                <Const fromlineno="61" tolineno="61" lineno="61" type="NoneType">None</Const>
              </Compare>
              <Compare fromlineno="61" tolineno="61" lineno="61" op="('==', &lt;Const(NoneType) l.61 [bb.utils] at Ox984084c&gt;)">
                <Name fromlineno="61" tolineno="61" lineno="61" name="cb"/>
                <Const fromlineno="61" tolineno="61" lineno="61" type="NoneType">None</Const>
              </Compare>
            </BoolOp>
            <Return fromlineno="62" tolineno="62" lineno="62">
              <Const fromlineno="62" tolineno="62" lineno="62" type="int">0</Const>
            </Return>
          </If>
          <If fromlineno="64" tolineno="65" lineno="64">
            <Compare fromlineno="64" tolineno="64" lineno="64" op="('is', &lt;Getattr(StringType) l.64 [bb.utils] at Ox98409ec&gt;)">
              <CallFunc fromlineno="64" tolineno="64" lineno="64" func="Name(type)">
                <Name fromlineno="64" tolineno="64" lineno="64" name="type"/>
                <Name fromlineno="64" tolineno="64" lineno="64" name="ca"/>
              </CallFunc>
              <Getattr fromlineno="64" tolineno="64" lineno="64" attrname="StringType" expr="types">
                <Name fromlineno="64" tolineno="64" lineno="64" name="types"/>
              </Getattr>
            </Compare>
            <Assign fromlineno="65" tolineno="65" lineno="65" targets="[&lt;AssName(sa) l.65 [bb.utils] at Ox9840acc&gt;]" value="ca in separators">
              <AssName fromlineno="65" tolineno="65" lineno="65" name="sa"/>
              <Compare fromlineno="65" tolineno="65" lineno="65" op="('in', &lt;Name(separators) l.65 [bb.utils] at Ox9840b4c&gt;)">
                <Name fromlineno="65" tolineno="65" lineno="65" name="ca"/>
                <Name fromlineno="65" tolineno="65" lineno="65" name="separators"/>
              </Compare>
            </Assign>
          </If>
          <If fromlineno="66" tolineno="67" lineno="66">
            <Compare fromlineno="66" tolineno="66" lineno="66" op="('is', &lt;Getattr(StringType) l.66 [bb.utils] at Ox9840c2c&gt;)">
              <CallFunc fromlineno="66" tolineno="66" lineno="66" func="Name(type)">
                <Name fromlineno="66" tolineno="66" lineno="66" name="type"/>
                <Name fromlineno="66" tolineno="66" lineno="66" name="cb"/>
              </CallFunc>
              <Getattr fromlineno="66" tolineno="66" lineno="66" attrname="StringType" expr="types">
                <Name fromlineno="66" tolineno="66" lineno="66" name="types"/>
              </Getattr>
            </Compare>
            <Assign fromlineno="67" tolineno="67" lineno="67" targets="[&lt;AssName(sb) l.67 [bb.utils] at Ox9840bcc&gt;]" value="cb in separators">
              <AssName fromlineno="67" tolineno="67" lineno="67" name="sb"/>
              <Compare fromlineno="67" tolineno="67" lineno="67" op="('in', &lt;Name(separators) l.67 [bb.utils] at Ox9840d8c&gt;)">
                <Name fromlineno="67" tolineno="67" lineno="67" name="cb"/>
                <Name fromlineno="67" tolineno="67" lineno="67" name="separators"/>
              </Compare>
            </Assign>
          </If>
          <If fromlineno="68" tolineno="69" lineno="68">
            <BoolOp fromlineno="68" tolineno="68" lineno="68" op="and" values="sa,not sb,">
              <Name fromlineno="68" tolineno="68" lineno="68" name="sa"/>
              <UnaryOp fromlineno="68" tolineno="68" lineno="68">
                <Name fromlineno="68" tolineno="68" lineno="68" name="sb"/>
              </UnaryOp>
            </BoolOp>
            <Return fromlineno="69" tolineno="69" lineno="69">
              <Const fromlineno="69" tolineno="69" lineno="69" type="int">-1</Const>
            </Return>
          </If>
          <If fromlineno="70" tolineno="71" lineno="70">
            <BoolOp fromlineno="70" tolineno="70" lineno="70" op="and" values="not sa,sb,">
              <UnaryOp fromlineno="70" tolineno="70" lineno="70">
                <Name fromlineno="70" tolineno="70" lineno="70" name="sa"/>
              </UnaryOp>
              <Name fromlineno="70" tolineno="70" lineno="70" name="sb"/>
            </BoolOp>
            <Return fromlineno="71" tolineno="71" lineno="71">
              <Const fromlineno="71" tolineno="71" lineno="71" type="int">1</Const>
            </Return>
          </If>
          <If fromlineno="73" tolineno="74" lineno="73">
            <Compare fromlineno="73" tolineno="73" lineno="73" op="('&gt;', &lt;Name(cb) l.73 [bb.utils] at Ox98447ac&gt;)">
              <Name fromlineno="73" tolineno="73" lineno="73" name="ca"/>
              <Name fromlineno="73" tolineno="73" lineno="73" name="cb"/>
            </Compare>
            <Return fromlineno="74" tolineno="74" lineno="74">
              <Const fromlineno="74" tolineno="74" lineno="74" type="int">1</Const>
            </Return>
          </If>
          <If fromlineno="75" tolineno="76" lineno="75">
            <Compare fromlineno="75" tolineno="75" lineno="75" op="('&lt;', &lt;Name(cb) l.75 [bb.utils] at Ox984450c&gt;)">
              <Name fromlineno="75" tolineno="75" lineno="75" name="ca"/>
              <Name fromlineno="75" tolineno="75" lineno="75" name="cb"/>
            </Compare>
            <Return fromlineno="76" tolineno="76" lineno="76">
              <Const fromlineno="76" tolineno="76" lineno="76" type="int">-1</Const>
            </Return>
          </If>
        </While>
      </Function>
      <Function fromlineno="78" tolineno="87" lineno="78">
        <Arguments fromlineno="78" tolineno="78" lineno="None" format_args="ta, tb">
          <AssName fromlineno="78" tolineno="78" lineno="78" name="ta"/>
          <AssName fromlineno="78" tolineno="78" lineno="78" name="tb"/>
        </Arguments>
        <Assign fromlineno="79" tolineno="79" lineno="79" targets="[&lt;Tuple(tuple) l.79 [bb.utils] at Ox98443ec&gt;]" value="ta">
          <Tuple fromlineno="79" tolineno="79" lineno="79">
            <AssName fromlineno="79" tolineno="79" lineno="79" name="ea"/>
            <AssName fromlineno="79" tolineno="79" lineno="79" name="va"/>
            <AssName fromlineno="79" tolineno="79" lineno="79" name="ra"/>
          </Tuple>
          <Name fromlineno="79" tolineno="79" lineno="79" name="ta"/>
        </Assign>
        <Assign fromlineno="80" tolineno="80" lineno="80" targets="[&lt;Tuple(tuple) l.80 [bb.utils] at Ox98441cc&gt;]" value="tb">
          <Tuple fromlineno="80" tolineno="80" lineno="80">
            <AssName fromlineno="80" tolineno="80" lineno="80" name="eb"/>
            <AssName fromlineno="80" tolineno="80" lineno="80" name="vb"/>
            <AssName fromlineno="80" tolineno="80" lineno="80" name="rb"/>
          </Tuple>
          <Name fromlineno="80" tolineno="80" lineno="80" name="tb"/>
        </Assign>
        <Assign fromlineno="82" tolineno="82" lineno="82" targets="[&lt;AssName(r) l.82 [bb.utils] at Ox984430c&gt;]" value="(int(ea)) - (int(eb))">
          <AssName fromlineno="82" tolineno="82" lineno="82" name="r"/>
          <BinOp fromlineno="82" tolineno="82" lineno="82" op="-" left="int(ea)" right="int(eb)">
            <CallFunc fromlineno="82" tolineno="82" lineno="82" func="Name(int)">
              <Name fromlineno="82" tolineno="82" lineno="82" name="int"/>
              <Name fromlineno="82" tolineno="82" lineno="82" name="ea"/>
            </CallFunc>
            <CallFunc fromlineno="82" tolineno="82" lineno="82" func="Name(int)">
              <Name fromlineno="82" tolineno="82" lineno="82" name="int"/>
              <Name fromlineno="82" tolineno="82" lineno="82" name="eb"/>
            </CallFunc>
          </BinOp>
        </Assign>
        <If fromlineno="83" tolineno="84" lineno="83">
          <Compare fromlineno="83" tolineno="83" lineno="83" op="('==', &lt;Const(int) l.83 [bb.utils] at Ox984490c&gt;)">
            <Name fromlineno="83" tolineno="83" lineno="83" name="r"/>
            <Const fromlineno="83" tolineno="83" lineno="83" type="int">0</Const>
          </Compare>
          <Assign fromlineno="84" tolineno="84" lineno="84" targets="[&lt;AssName(r) l.84 [bb.utils] at Ox98449ec&gt;]" value="vercmp_part(va, vb)">
            <AssName fromlineno="84" tolineno="84" lineno="84" name="r"/>
            <CallFunc fromlineno="84" tolineno="84" lineno="84" func="Name(vercmp_part)">
              <Name fromlineno="84" tolineno="84" lineno="84" name="vercmp_part"/>
              <Name fromlineno="84" tolineno="84" lineno="84" name="va"/>
              <Name fromlineno="84" tolineno="84" lineno="84" name="vb"/>
            </CallFunc>
          </Assign>
        </If>
        <If fromlineno="85" tolineno="86" lineno="85">
          <Compare fromlineno="85" tolineno="85" lineno="85" op="('==', &lt;Const(int) l.85 [bb.utils] at Ox9844b4c&gt;)">
            <Name fromlineno="85" tolineno="85" lineno="85" name="r"/>
            <Const fromlineno="85" tolineno="85" lineno="85" type="int">0</Const>
          </Compare>
          <Assign fromlineno="86" tolineno="86" lineno="86" targets="[&lt;AssName(r) l.86 [bb.utils] at Ox9844d6c&gt;]" value="vercmp_part(ra, rb)">
            <AssName fromlineno="86" tolineno="86" lineno="86" name="r"/>
            <CallFunc fromlineno="86" tolineno="86" lineno="86" func="Name(vercmp_part)">
              <Name fromlineno="86" tolineno="86" lineno="86" name="vercmp_part"/>
              <Name fromlineno="86" tolineno="86" lineno="86" name="ra"/>
              <Name fromlineno="86" tolineno="86" lineno="86" name="rb"/>
            </CallFunc>
          </Assign>
        </If>
        <Return fromlineno="87" tolineno="87" lineno="87">
          <Name fromlineno="87" tolineno="87" lineno="87" name="r"/>
        </Return>
      </Function>
      <Function fromlineno="89" tolineno="111" lineno="89">
        <Arguments fromlineno="89" tolineno="89" lineno="None" format_args="s">
          <AssName fromlineno="89" tolineno="89" lineno="89" name="s"/>
        </Arguments>
        <Assign fromlineno="96" tolineno="96" lineno="96" targets="[&lt;AssName(r) l.96 [bb.utils] at Ox9844eac&gt;]" value="[]">
          <AssName fromlineno="96" tolineno="96" lineno="96" name="r"/>
          <List fromlineno="96" tolineno="96" lineno="96"/>
        </Assign>
        <Assign fromlineno="97" tolineno="97" lineno="97" targets="[&lt;AssName(l) l.97 [bb.utils] at Ox9844e6c&gt;]" value="s.split()">
          <AssName fromlineno="97" tolineno="97" lineno="97" name="l"/>
          <CallFunc fromlineno="97" tolineno="97" lineno="97" func="Getattr(split)">
            <Getattr fromlineno="97" tolineno="97" lineno="97" attrname="split" expr="s">
              <Name fromlineno="97" tolineno="97" lineno="97" name="s"/>
            </Getattr>
          </CallFunc>
        </Assign>
        <Assign fromlineno="98" tolineno="98" lineno="98" targets="[&lt;AssName(flag) l.98 [bb.utils] at Ox995d22c&gt;]" value="False">
          <AssName fromlineno="98" tolineno="98" lineno="98" name="flag"/>
          <Const fromlineno="98" tolineno="98" lineno="98" type="bool">False</Const>
        </Assign>
        <For fromlineno="99" tolineno="108" lineno="99">
          <AssName fromlineno="99" tolineno="99" lineno="99" name="i"/>
          <Name fromlineno="99" tolineno="99" lineno="99" name="l"/>
          <If fromlineno="100" tolineno="101" lineno="100">
            <Compare fromlineno="100" tolineno="100" lineno="100" op="('==', &lt;Const(str) l.100 [bb.utils] at Ox98481ac&gt;)">
              <Subscript fromlineno="100" tolineno="100" lineno="100">
                <Name fromlineno="100" tolineno="100" lineno="100" name="i"/>
                <Index fromlineno="100" tolineno="100" lineno="None">
                  <Const fromlineno="100" tolineno="100" lineno="100" type="int">0</Const>
                </Index>
              </Subscript>
              <Const fromlineno="100" tolineno="100" lineno="100" type="str">'('</Const>
            </Compare>
            <Assign fromlineno="101" tolineno="101" lineno="101" targets="[&lt;AssName(flag) l.101 [bb.utils] at Ox984822c&gt;]" value="True">
              <AssName fromlineno="101" tolineno="101" lineno="101" name="flag"/>
              <Const fromlineno="101" tolineno="101" lineno="101" type="bool">True</Const>
            </Assign>
          </If>
          <If fromlineno="103" tolineno="104" lineno="103">
            <UnaryOp fromlineno="103" tolineno="103" lineno="103">
              <Name fromlineno="103" tolineno="103" lineno="103" name="flag"/>
            </UnaryOp>
            <Discard fromlineno="104" tolineno="104" lineno="104">
              <CallFunc fromlineno="104" tolineno="104" lineno="104" func="Getattr(append)">
                <Getattr fromlineno="104" tolineno="104" lineno="104" attrname="append" expr="r">
                  <Name fromlineno="104" tolineno="104" lineno="104" name="r"/>
                </Getattr>
                <Name fromlineno="104" tolineno="104" lineno="104" name="i"/>
              </CallFunc>
            </Discard>
          </If>
          <If fromlineno="107" tolineno="108" lineno="107">
            <BoolOp fromlineno="107" tolineno="107" lineno="107" op="and" values="flag,i.endswith(')'),">
              <Name fromlineno="107" tolineno="107" lineno="107" name="flag"/>
              <CallFunc fromlineno="107" tolineno="107" lineno="107" func="Getattr(endswith)">
                <Getattr fromlineno="107" tolineno="107" lineno="107" attrname="endswith" expr="i">
                  <Name fromlineno="107" tolineno="107" lineno="107" name="i"/>
                </Getattr>
                <Const fromlineno="107" tolineno="107" lineno="107" type="str">')'</Const>
              </CallFunc>
            </BoolOp>
            <Assign fromlineno="108" tolineno="108" lineno="108" targets="[&lt;AssName(flag) l.108 [bb.utils] at Ox984864c&gt;]" value="False">
              <AssName fromlineno="108" tolineno="108" lineno="108" name="flag"/>
              <Const fromlineno="108" tolineno="108" lineno="108" type="bool">False</Const>
            </Assign>
          </If>
        </For>
        <Return fromlineno="111" tolineno="111" lineno="111">
          <Name fromlineno="111" tolineno="111" lineno="111" name="r"/>
        </Return>
      </Function>
      <Function fromlineno="113" tolineno="140" lineno="113">
        <Arguments fromlineno="113" tolineno="113" lineno="None" format_args="s">
          <AssName fromlineno="113" tolineno="113" lineno="113" name="s"/>
        </Arguments>
        <Assign fromlineno="119" tolineno="119" lineno="119" targets="[&lt;AssName(r) l.119 [bb.utils] at Ox98487ac&gt;]" value="{}">
          <AssName fromlineno="119" tolineno="119" lineno="119" name="r"/>
          <Dict fromlineno="119" tolineno="119" lineno="119"/>
        </Assign>
        <Assign fromlineno="120" tolineno="120" lineno="120" targets="[&lt;AssName(l) l.120 [bb.utils] at Ox984884c&gt;]" value="s.split()">
          <AssName fromlineno="120" tolineno="120" lineno="120" name="l"/>
          <CallFunc fromlineno="120" tolineno="120" lineno="120" func="Getattr(split)">
            <Getattr fromlineno="120" tolineno="120" lineno="120" attrname="split" expr="s">
              <Name fromlineno="120" tolineno="120" lineno="120" name="s"/>
            </Getattr>
          </CallFunc>
        </Assign>
        <Assign fromlineno="121" tolineno="121" lineno="121" targets="[&lt;AssName(lastdep) l.121 [bb.utils] at Ox984894c&gt;]" value="None">
          <AssName fromlineno="121" tolineno="121" lineno="121" name="lastdep"/>
          <Const fromlineno="121" tolineno="121" lineno="121" type="NoneType">None</Const>
        </Assign>
        <Assign fromlineno="122" tolineno="122" lineno="122" targets="[&lt;AssName(lastver) l.122 [bb.utils] at Ox9848a0c&gt;]" value="''">
          <AssName fromlineno="122" tolineno="122" lineno="122" name="lastver"/>
          <Const fromlineno="122" tolineno="122" lineno="122" type="str">''</Const>
        </Assign>
        <Assign fromlineno="123" tolineno="123" lineno="123" targets="[&lt;AssName(inversion) l.123 [bb.utils] at Ox9848aac&gt;]" value="False">
          <AssName fromlineno="123" tolineno="123" lineno="123" name="inversion"/>
          <Const fromlineno="123" tolineno="123" lineno="123" type="bool">False</Const>
        </Assign>
        <For fromlineno="124" tolineno="138" lineno="124">
          <AssName fromlineno="124" tolineno="124" lineno="124" name="i"/>
          <Name fromlineno="124" tolineno="124" lineno="124" name="l"/>
          <If fromlineno="125" tolineno="138" lineno="125">
            <Compare fromlineno="125" tolineno="125" lineno="125" op="('==', &lt;Const(str) l.125 [bb.utils] at Ox9848d6c&gt;)">
              <Subscript fromlineno="125" tolineno="125" lineno="125">
                <Name fromlineno="125" tolineno="125" lineno="125" name="i"/>
                <Index fromlineno="125" tolineno="125" lineno="None">
                  <Const fromlineno="125" tolineno="125" lineno="125" type="int">0</Const>
                </Index>
              </Subscript>
              <Const fromlineno="125" tolineno="125" lineno="125" type="str">'('</Const>
            </Compare>
            <Assign fromlineno="126" tolineno="126" lineno="126" targets="[&lt;AssName(inversion) l.126 [bb.utils] at Ox9848bec&gt;]" value="True">
              <AssName fromlineno="126" tolineno="126" lineno="126" name="inversion"/>
              <Const fromlineno="126" tolineno="126" lineno="126" type="bool">True</Const>
            </Assign>
            <Assign fromlineno="127" tolineno="127" lineno="127" targets="[&lt;AssName(lastver) l.127 [bb.utils] at Ox9848eac&gt;]" value="(i[1:]) or ('')">
              <AssName fromlineno="127" tolineno="127" lineno="127" name="lastver"/>
              <BoolOp fromlineno="127" tolineno="127" lineno="127" op="or" values="i[1:],'',">
                <Subscript fromlineno="127" tolineno="127" lineno="127">
                  <Name fromlineno="127" tolineno="127" lineno="127" name="i"/>
                  <Slice fromlineno="127" tolineno="127" lineno="None">
                    <Const fromlineno="127" tolineno="127" lineno="127" type="int">1</Const>
                  </Slice>
                </Subscript>
                <Const fromlineno="127" tolineno="127" lineno="127" type="str">''</Const>
              </BoolOp>
            </Assign>
            <If fromlineno="129" tolineno="138" lineno="129">
              <BoolOp fromlineno="129" tolineno="129" lineno="129" op="and" values="inversion,i.endswith(')'),">
                <Name fromlineno="129" tolineno="129" lineno="129" name="inversion"/>
                <CallFunc fromlineno="129" tolineno="129" lineno="129" func="Getattr(endswith)">
                  <Getattr fromlineno="129" tolineno="129" lineno="129" attrname="endswith" expr="i">
                    <Name fromlineno="129" tolineno="129" lineno="129" name="i"/>
                  </Getattr>
                  <Const fromlineno="129" tolineno="129" lineno="129" type="str">')'</Const>
                </CallFunc>
              </BoolOp>
              <Assign fromlineno="130" tolineno="130" lineno="130" targets="[&lt;AssName(inversion) l.130 [bb.utils] at Ox984c0ac&gt;]" value="False">
                <AssName fromlineno="130" tolineno="130" lineno="130" name="inversion"/>
                <Const fromlineno="130" tolineno="130" lineno="130" type="bool">False</Const>
              </Assign>
              <Assign fromlineno="131" tolineno="131" lineno="131" targets="[&lt;AssName(lastver) l.131 [bb.utils] at Ox984c14c&gt;]" value="((lastver) + (' ')) + ((i[:-1]) or (''))">
                <AssName fromlineno="131" tolineno="131" lineno="131" name="lastver"/>
                <BinOp fromlineno="131" tolineno="131" lineno="131" op="+" left="(lastver) + (' ')" right="(i[:-1]) or ('')">
                  <BinOp fromlineno="131" tolineno="131" lineno="131" op="+" left="lastver" right="' '">
                    <Name fromlineno="131" tolineno="131" lineno="131" name="lastver"/>
                    <Const fromlineno="131" tolineno="131" lineno="131" type="str">' '</Const>
                  </BinOp>
                  <BoolOp fromlineno="131" tolineno="131" lineno="131" op="or" values="i[:-1],'',">
                    <Subscript fromlineno="131" tolineno="131" lineno="131">
                      <Name fromlineno="131" tolineno="131" lineno="131" name="i"/>
                      <Slice fromlineno="131" tolineno="131" lineno="None">
                        <Const fromlineno="131" tolineno="131" lineno="131" type="int">-1</Const>
                      </Slice>
                    </Subscript>
                    <Const fromlineno="131" tolineno="131" lineno="131" type="str">''</Const>
                  </BoolOp>
                </BinOp>
              </Assign>
              <Assign fromlineno="132" tolineno="132" lineno="132" targets="[&lt;Subscript() l.132 [bb.utils] at Ox984c36c&gt;]" value="lastver">
                <Subscript fromlineno="132" tolineno="132" lineno="132">
                  <Name fromlineno="132" tolineno="132" lineno="132" name="r"/>
                  <Index fromlineno="132" tolineno="132" lineno="None">
                    <Name fromlineno="132" tolineno="132" lineno="132" name="lastdep"/>
                  </Index>
                </Subscript>
                <Name fromlineno="132" tolineno="132" lineno="132" name="lastver"/>
              </Assign>
              <If fromlineno="133" tolineno="138" lineno="133">
                <UnaryOp fromlineno="133" tolineno="133" lineno="133">
                  <Name fromlineno="133" tolineno="133" lineno="133" name="inversion"/>
                </UnaryOp>
                <Assign fromlineno="134" tolineno="134" lineno="134" targets="[&lt;Subscript() l.134 [bb.utils] at Ox984c52c&gt;]" value="None">
                  <Subscript fromlineno="134" tolineno="134" lineno="134">
                    <Name fromlineno="134" tolineno="134" lineno="134" name="r"/>
                    <Index fromlineno="134" tolineno="134" lineno="None">
                      <Name fromlineno="134" tolineno="134" lineno="134" name="i"/>
                    </Index>
                  </Subscript>
                  <Const fromlineno="134" tolineno="134" lineno="134" type="NoneType">None</Const>
                </Assign>
                <Assign fromlineno="135" tolineno="135" lineno="135" targets="[&lt;AssName(lastdep) l.135 [bb.utils] at Ox984c60c&gt;]" value="i">
                  <AssName fromlineno="135" tolineno="135" lineno="135" name="lastdep"/>
                  <Name fromlineno="135" tolineno="135" lineno="135" name="i"/>
                </Assign>
                <Assign fromlineno="136" tolineno="136" lineno="136" targets="[&lt;AssName(lastver) l.136 [bb.utils] at Ox984c68c&gt;]" value="''">
                  <AssName fromlineno="136" tolineno="136" lineno="136" name="lastver"/>
                  <Const fromlineno="136" tolineno="136" lineno="136" type="str">''</Const>
                </Assign>
                <If fromlineno="137" tolineno="138" lineno="137">
                  <Name fromlineno="137" tolineno="137" lineno="137" name="inversion"/>
                  <Assign fromlineno="138" tolineno="138" lineno="138" targets="[&lt;AssName(lastver) l.138 [bb.utils] at Ox984c82c&gt;]" value="((lastver) + (' ')) + (i)">
                    <AssName fromlineno="138" tolineno="138" lineno="138" name="lastver"/>
                    <BinOp fromlineno="138" tolineno="138" lineno="138" op="+" left="(lastver) + (' ')" right="i">
                      <BinOp fromlineno="138" tolineno="138" lineno="138" op="+" left="lastver" right="' '">
                        <Name fromlineno="138" tolineno="138" lineno="138" name="lastver"/>
                        <Const fromlineno="138" tolineno="138" lineno="138" type="str">' '</Const>
                      </BinOp>
                      <Name fromlineno="138" tolineno="138" lineno="138" name="i"/>
                    </BinOp>
                  </Assign>
                </If>
              </If>
            </If>
          </If>
        </For>
        <Return fromlineno="140" tolineno="140" lineno="140">
          <Name fromlineno="140" tolineno="140" lineno="140" name="r"/>
        </Return>
      </Function>
      <Function fromlineno="142" tolineno="153" lineno="142">
        <Arguments fromlineno="142" tolineno="142" lineno="None" format_args="body, line">
          <AssName fromlineno="142" tolineno="142" lineno="142" name="body"/>
          <AssName fromlineno="142" tolineno="142" lineno="142" name="line"/>
        </Arguments>
        <Import fromlineno="146" tolineno="146" lineno="146">
          <ImportName name="bb"/>
        </Import>
        <Discard fromlineno="149" tolineno="149" lineno="149">
          <CallFunc fromlineno="149" tolineno="149" lineno="149" func="Getattr(error)">
            <Getattr fromlineno="149" tolineno="149" lineno="149" attrname="error" expr="bb.msg">
              <Getattr fromlineno="149" tolineno="149" lineno="149" attrname="msg" expr="bb">
                <Name fromlineno="149" tolineno="149" lineno="149" name="bb"/>
              </Getattr>
            </Getattr>
            <Getattr fromlineno="149" tolineno="149" lineno="149" attrname="Util" expr="bb.msg.domain">
              <Getattr fromlineno="149" tolineno="149" lineno="149" attrname="domain" expr="bb.msg">
                <Getattr fromlineno="149" tolineno="149" lineno="149" attrname="msg" expr="bb">
                  <Name fromlineno="149" tolineno="149" lineno="149" name="bb"/>
                </Getattr>
              </Getattr>
            </Getattr>
            <Const fromlineno="149" tolineno="149" lineno="149" type="str">'Printing the environment of the function'</Const>
          </CallFunc>
        </Discard>
        <Assign fromlineno="150" tolineno="150" lineno="150" targets="[&lt;AssName(min_line) l.150 [bb.utils] at Ox984cb6c&gt;]" value="max(1, (line) - (4))">
          <AssName fromlineno="150" tolineno="150" lineno="150" name="min_line"/>
          <CallFunc fromlineno="150" tolineno="150" lineno="150" func="Name(max)">
            <Name fromlineno="150" tolineno="150" lineno="150" name="max"/>
            <Const fromlineno="150" tolineno="150" lineno="150" type="int">1</Const>
            <BinOp fromlineno="150" tolineno="150" lineno="150" op="-" left="line" right="4">
              <Name fromlineno="150" tolineno="150" lineno="150" name="line"/>
              <Const fromlineno="150" tolineno="150" lineno="150" type="int">4</Const>
            </BinOp>
          </CallFunc>
        </Assign>
        <Assign fromlineno="151" tolineno="151" lineno="151" targets="[&lt;AssName(max_line) l.151 [bb.utils] at Ox984cdcc&gt;]" value="min((line) + (4), (len(body)) - (1))">
          <AssName fromlineno="151" tolineno="151" lineno="151" name="max_line"/>
          <CallFunc fromlineno="151" tolineno="151" lineno="151" func="Name(min)">
            <Name fromlineno="151" tolineno="151" lineno="151" name="min"/>
            <BinOp fromlineno="151" tolineno="151" lineno="151" op="+" left="line" right="4">
              <Name fromlineno="151" tolineno="151" lineno="151" name="line"/>
              <Const fromlineno="151" tolineno="151" lineno="151" type="int">4</Const>
            </BinOp>
            <BinOp fromlineno="151" tolineno="151" lineno="151" op="-" left="len(body)" right="1">
              <CallFunc fromlineno="151" tolineno="151" lineno="151" func="Name(len)">
                <Name fromlineno="151" tolineno="151" lineno="151" name="len"/>
                <Name fromlineno="151" tolineno="151" lineno="151" name="body"/>
              </CallFunc>
              <Const fromlineno="151" tolineno="151" lineno="151" type="int">1</Const>
            </BinOp>
          </CallFunc>
        </Assign>
        <For fromlineno="152" tolineno="153" lineno="152">
          <AssName fromlineno="152" tolineno="152" lineno="152" name="i"/>
          <CallFunc fromlineno="152" tolineno="152" lineno="152" func="Name(range)">
            <Name fromlineno="152" tolineno="152" lineno="152" name="range"/>
            <Name fromlineno="152" tolineno="152" lineno="152" name="min_line"/>
            <BinOp fromlineno="152" tolineno="152" lineno="152" op="+" left="max_line" right="1">
              <Name fromlineno="152" tolineno="152" lineno="152" name="max_line"/>
              <Const fromlineno="152" tolineno="152" lineno="152" type="int">1</Const>
            </BinOp>
          </CallFunc>
          <Discard fromlineno="153" tolineno="153" lineno="153">
            <CallFunc fromlineno="153" tolineno="153" lineno="153" func="Getattr(error)">
              <Getattr fromlineno="153" tolineno="153" lineno="153" attrname="error" expr="bb.msg">
                <Getattr fromlineno="153" tolineno="153" lineno="153" attrname="msg" expr="bb">
                  <Name fromlineno="153" tolineno="153" lineno="153" name="bb"/>
                </Getattr>
              </Getattr>
              <Getattr fromlineno="153" tolineno="153" lineno="153" attrname="Util" expr="bb.msg.domain">
                <Getattr fromlineno="153" tolineno="153" lineno="153" attrname="domain" expr="bb.msg">
                  <Getattr fromlineno="153" tolineno="153" lineno="153" attrname="msg" expr="bb">
                    <Name fromlineno="153" tolineno="153" lineno="153" name="bb"/>
                  </Getattr>
                </Getattr>
              </Getattr>
              <BinOp fromlineno="153" tolineno="153" lineno="153" op="%" left="'\t%.4d:%s'" right="(i, body[(i) - (1)])">
                <Const fromlineno="153" tolineno="153" lineno="153" type="str">'\t%.4d:%s'</Const>
                <Tuple fromlineno="153" tolineno="153" lineno="153">
                  <Name fromlineno="153" tolineno="153" lineno="153" name="i"/>
                  <Subscript fromlineno="153" tolineno="153" lineno="153">
                    <Name fromlineno="153" tolineno="153" lineno="153" name="body"/>
                    <Index fromlineno="153" tolineno="153" lineno="None">
                      <BinOp fromlineno="153" tolineno="153" lineno="153" op="-" left="i" right="1">
                        <Name fromlineno="153" tolineno="153" lineno="153" name="i"/>
                        <Const fromlineno="153" tolineno="153" lineno="153" type="int">1</Const>
                      </BinOp>
                    </Index>
                  </Subscript>
                </Tuple>
              </BinOp>
            </CallFunc>
          </Discard>
        </For>
      </Function>
      <Function fromlineno="156" tolineno="175" lineno="156">
        <Arguments fromlineno="156" tolineno="156" lineno="None" format_args="text, file, realfile">
          <AssName fromlineno="156" tolineno="156" lineno="156" name="text"/>
          <AssName fromlineno="156" tolineno="156" lineno="156" name="file"/>
          <AssName fromlineno="156" tolineno="156" lineno="156" name="realfile"/>
        </Arguments>
        <TryExcept fromlineno="161" tolineno="175" lineno="161">
          <Return fromlineno="162" tolineno="162" lineno="162">
            <CallFunc fromlineno="162" tolineno="162" lineno="162" func="Name(compile)">
              <Name fromlineno="162" tolineno="162" lineno="162" name="compile"/>
              <Name fromlineno="162" tolineno="162" lineno="162" name="text"/>
              <Name fromlineno="162" tolineno="162" lineno="162" name="file"/>
              <Const fromlineno="162" tolineno="162" lineno="162" type="str">'exec'</Const>
            </CallFunc>
          </Return>
          <ExceptHandler fromlineno="163" tolineno="175" lineno="163">
            <Name fromlineno="163" tolineno="163" lineno="163" name="Exception"/>
            <AssName fromlineno="163" tolineno="163" lineno="163" name="e"/>
            <Import fromlineno="164" tolineno="164" lineno="164">
              <ImportName name="bb"/>
              <ImportName name="sys"/>
            </Import>
            <Assign fromlineno="167" tolineno="167" lineno="167" targets="[&lt;AssName(body) l.167 [bb.utils] at Ox98e27ec&gt;]" value="text.split('\n')">
              <AssName fromlineno="167" tolineno="167" lineno="167" name="body"/>
              <CallFunc fromlineno="167" tolineno="167" lineno="167" func="Getattr(split)">
                <Getattr fromlineno="167" tolineno="167" lineno="167" attrname="split" expr="text">
                  <Name fromlineno="167" tolineno="167" lineno="167" name="text"/>
                </Getattr>
                <Const fromlineno="167" tolineno="167" lineno="167" type="str">'\n'</Const>
              </CallFunc>
            </Assign>
            <Discard fromlineno="168" tolineno="168" lineno="168">
              <CallFunc fromlineno="168" tolineno="168" lineno="168" func="Getattr(error)">
                <Getattr fromlineno="168" tolineno="168" lineno="168" attrname="error" expr="bb.msg">
                  <Getattr fromlineno="168" tolineno="168" lineno="168" attrname="msg" expr="bb">
                    <Name fromlineno="168" tolineno="168" lineno="168" name="bb"/>
                  </Getattr>
                </Getattr>
                <Getattr fromlineno="168" tolineno="168" lineno="168" attrname="Util" expr="bb.msg.domain">
                  <Getattr fromlineno="168" tolineno="168" lineno="168" attrname="domain" expr="bb.msg">
                    <Getattr fromlineno="168" tolineno="168" lineno="168" attrname="msg" expr="bb">
                      <Name fromlineno="168" tolineno="168" lineno="168" name="bb"/>
                    </Getattr>
                  </Getattr>
                </Getattr>
                <Const fromlineno="168" tolineno="168" lineno="168" type="str">'Error in compiling: '</Const>
                <Name fromlineno="168" tolineno="168" lineno="168" name="realfile"/>
              </CallFunc>
            </Discard>
            <Discard fromlineno="169" tolineno="169" lineno="169">
              <CallFunc fromlineno="169" tolineno="169" lineno="169" func="Getattr(error)">
                <Getattr fromlineno="169" tolineno="169" lineno="169" attrname="error" expr="bb.msg">
                  <Getattr fromlineno="169" tolineno="169" lineno="169" attrname="msg" expr="bb">
                    <Name fromlineno="169" tolineno="169" lineno="169" name="bb"/>
                  </Getattr>
                </Getattr>
                <Getattr fromlineno="169" tolineno="169" lineno="169" attrname="Util" expr="bb.msg.domain">
                  <Getattr fromlineno="169" tolineno="169" lineno="169" attrname="domain" expr="bb.msg">
                    <Getattr fromlineno="169" tolineno="169" lineno="169" attrname="msg" expr="bb">
                      <Name fromlineno="169" tolineno="169" lineno="169" name="bb"/>
                    </Getattr>
                  </Getattr>
                </Getattr>
                <Const fromlineno="169" tolineno="169" lineno="169" type="str">'The lines resulting into this error were:'</Const>
              </CallFunc>
            </Discard>
            <Discard fromlineno="170" tolineno="170" lineno="170">
              <CallFunc fromlineno="170" tolineno="170" lineno="170" func="Getattr(error)">
                <Getattr fromlineno="170" tolineno="170" lineno="170" attrname="error" expr="bb.msg">
                  <Getattr fromlineno="170" tolineno="170" lineno="170" attrname="msg" expr="bb">
                    <Name fromlineno="170" tolineno="170" lineno="170" name="bb"/>
                  </Getattr>
                </Getattr>
                <Getattr fromlineno="170" tolineno="170" lineno="170" attrname="Util" expr="bb.msg.domain">
                  <Getattr fromlineno="170" tolineno="170" lineno="170" attrname="domain" expr="bb.msg">
                    <Getattr fromlineno="170" tolineno="170" lineno="170" attrname="msg" expr="bb">
                      <Name fromlineno="170" tolineno="170" lineno="170" name="bb"/>
                    </Getattr>
                  </Getattr>
                </Getattr>
                <BinOp fromlineno="170" tolineno="170" lineno="170" op="%" left="&quot;\t%d:%s:'%s'&quot;" right="(e.lineno, e.__class__.__name__, body[(e.lineno) - (1)])">
                  <Const fromlineno="170" tolineno="170" lineno="170" type="str">"\t%d:%s:'%s'"</Const>
                  <Tuple fromlineno="170" tolineno="170" lineno="170">
                    <Getattr fromlineno="170" tolineno="170" lineno="170" attrname="lineno" expr="e">
                      <Name fromlineno="170" tolineno="170" lineno="170" name="e"/>
                    </Getattr>
                    <Getattr fromlineno="170" tolineno="170" lineno="170" attrname="__name__" expr="e.__class__">
                      <Getattr fromlineno="170" tolineno="170" lineno="170" attrname="__class__" expr="e">
                        <Name fromlineno="170" tolineno="170" lineno="170" name="e"/>
                      </Getattr>
                    </Getattr>
                    <Subscript fromlineno="170" tolineno="170" lineno="170">
                      <Name fromlineno="170" tolineno="170" lineno="170" name="body"/>
                      <Index fromlineno="170" tolineno="170" lineno="None">
                        <BinOp fromlineno="170" tolineno="170" lineno="170" op="-" left="e.lineno" right="1">
                          <Getattr fromlineno="170" tolineno="170" lineno="170" attrname="lineno" expr="e">
                            <Name fromlineno="170" tolineno="170" lineno="170" name="e"/>
                          </Getattr>
                          <Const fromlineno="170" tolineno="170" lineno="170" type="int">1</Const>
                        </BinOp>
                      </Index>
                    </Subscript>
                  </Tuple>
                </BinOp>
              </CallFunc>
            </Discard>
            <Discard fromlineno="172" tolineno="172" lineno="172">
              <CallFunc fromlineno="172" tolineno="172" lineno="172" func="Name(_print_trace)">
                <Name fromlineno="172" tolineno="172" lineno="172" name="_print_trace"/>
                <Name fromlineno="172" tolineno="172" lineno="172" name="body"/>
                <Getattr fromlineno="172" tolineno="172" lineno="172" attrname="lineno" expr="e">
                  <Name fromlineno="172" tolineno="172" lineno="172" name="e"/>
                </Getattr>
              </CallFunc>
            </Discard>
            <Discard fromlineno="175" tolineno="175" lineno="175">
              <CallFunc fromlineno="175" tolineno="175" lineno="175" func="Getattr(exit)">
                <Getattr fromlineno="175" tolineno="175" lineno="175" attrname="exit" expr="sys">
                  <Name fromlineno="175" tolineno="175" lineno="175" name="sys"/>
                </Getattr>
                <Const fromlineno="175" tolineno="175" lineno="175" type="int">1</Const>
              </CallFunc>
            </Discard>
          </ExceptHandler>
        </TryExcept>
      </Function>
      <Function fromlineno="177" tolineno="205" lineno="177">
        <Arguments fromlineno="177" tolineno="177" lineno="None" format_args="code, context, text, realfile">
          <AssName fromlineno="177" tolineno="177" lineno="177" name="code"/>
          <AssName fromlineno="177" tolineno="177" lineno="177" name="context"/>
          <AssName fromlineno="177" tolineno="177" lineno="177" name="text"/>
          <AssName fromlineno="177" tolineno="177" lineno="177" name="realfile"/>
        </Arguments>
        <Import fromlineno="183" tolineno="183" lineno="183">
          <ImportName name="bb"/>
          <ImportName name="sys"/>
        </Import>
        <TryExcept fromlineno="184" tolineno="205" lineno="184">
          <Exec fromlineno="185" tolineno="185" lineno="185">
            <Name fromlineno="185" tolineno="185" lineno="185" name="code"/>
            <Name fromlineno="185" tolineno="185" lineno="185" name="context"/>
          </Exec>
          <ExceptHandler fromlineno="186" tolineno="205" lineno="186">
            <Assign fromlineno="187" tolineno="187" lineno="187" targets="[&lt;Tuple(tuple) l.187 [bb.utils] at Ox98e440c&gt;]" value="sys.exc_info()">
              <Tuple fromlineno="187" tolineno="187" lineno="187">
                <AssName fromlineno="187" tolineno="187" lineno="187" name="t"/>
                <AssName fromlineno="187" tolineno="187" lineno="187" name="value"/>
                <AssName fromlineno="187" tolineno="187" lineno="187" name="tb"/>
              </Tuple>
              <CallFunc fromlineno="187" tolineno="187" lineno="187" func="Getattr(exc_info)">
                <Getattr fromlineno="187" tolineno="187" lineno="187" attrname="exc_info" expr="sys">
                  <Name fromlineno="187" tolineno="187" lineno="187" name="sys"/>
                </Getattr>
              </CallFunc>
            </Assign>
            <If fromlineno="189" tolineno="190" lineno="189">
              <Compare fromlineno="189" tolineno="189" lineno="189" op="('in', &lt;List(list) l.189 [bb.utils] at Ox98e462c&gt;)">
                <Name fromlineno="189" tolineno="189" lineno="189" name="t"/>
                <List fromlineno="189" tolineno="189" lineno="189">
                  <Getattr fromlineno="189" tolineno="189" lineno="189" attrname="SkipPackage" expr="bb.parse">
                    <Getattr fromlineno="189" tolineno="189" lineno="189" attrname="parse" expr="bb">
                      <Name fromlineno="189" tolineno="189" lineno="189" name="bb"/>
                    </Getattr>
                  </Getattr>
                  <Getattr fromlineno="189" tolineno="189" lineno="189" attrname="FuncFailed" expr="bb.build">
                    <Getattr fromlineno="189" tolineno="189" lineno="189" attrname="build" expr="bb">
                      <Name fromlineno="189" tolineno="189" lineno="189" name="bb"/>
                    </Getattr>
                  </Getattr>
                </List>
              </Compare>
              <Raise fromlineno="190" tolineno="190" lineno="190"/>
            </If>
            <Discard fromlineno="193" tolineno="193" lineno="193">
              <CallFunc fromlineno="193" tolineno="193" lineno="193" func="Getattr(error)">
                <Getattr fromlineno="193" tolineno="193" lineno="193" attrname="error" expr="bb.msg">
                  <Getattr fromlineno="193" tolineno="193" lineno="193" attrname="msg" expr="bb">
                    <Name fromlineno="193" tolineno="193" lineno="193" name="bb"/>
                  </Getattr>
                </Getattr>
                <Getattr fromlineno="193" tolineno="193" lineno="193" attrname="Util" expr="bb.msg.domain">
                  <Getattr fromlineno="193" tolineno="193" lineno="193" attrname="domain" expr="bb.msg">
                    <Getattr fromlineno="193" tolineno="193" lineno="193" attrname="msg" expr="bb">
                      <Name fromlineno="193" tolineno="193" lineno="193" name="bb"/>
                    </Getattr>
                  </Getattr>
                </Getattr>
                <BinOp fromlineno="193" tolineno="193" lineno="193" op="%" left="'Error in executing: %s'" right="realfile">
                  <Const fromlineno="193" tolineno="193" lineno="193" type="str">'Error in executing: %s'</Const>
                  <Name fromlineno="193" tolineno="193" lineno="193" name="realfile"/>
                </BinOp>
              </CallFunc>
            </Discard>
            <Discard fromlineno="194" tolineno="194" lineno="194">
              <CallFunc fromlineno="194" tolineno="194" lineno="194" func="Getattr(error)">
                <Getattr fromlineno="194" tolineno="194" lineno="194" attrname="error" expr="bb.msg">
                  <Getattr fromlineno="194" tolineno="194" lineno="194" attrname="msg" expr="bb">
                    <Name fromlineno="194" tolineno="194" lineno="194" name="bb"/>
                  </Getattr>
                </Getattr>
                <Getattr fromlineno="194" tolineno="194" lineno="194" attrname="Util" expr="bb.msg.domain">
                  <Getattr fromlineno="194" tolineno="194" lineno="194" attrname="domain" expr="bb.msg">
                    <Getattr fromlineno="194" tolineno="194" lineno="194" attrname="msg" expr="bb">
                      <Name fromlineno="194" tolineno="194" lineno="194" name="bb"/>
                    </Getattr>
                  </Getattr>
                </Getattr>
                <BinOp fromlineno="194" tolineno="194" lineno="194" op="%" left="'Exception:%s Message:%s'" right="(t, value)">
                  <Const fromlineno="194" tolineno="194" lineno="194" type="str">'Exception:%s Message:%s'</Const>
                  <Tuple fromlineno="194" tolineno="194" lineno="194">
                    <Name fromlineno="194" tolineno="194" lineno="194" name="t"/>
                    <Name fromlineno="194" tolineno="194" lineno="194" name="value"/>
                  </Tuple>
                </BinOp>
              </CallFunc>
            </Discard>
            <While fromlineno="197" tolineno="198" lineno="197">
              <Getattr fromlineno="197" tolineno="197" lineno="197" attrname="tb_next" expr="tb">
                <Name fromlineno="197" tolineno="197" lineno="197" name="tb"/>
              </Getattr>
              <Assign fromlineno="198" tolineno="198" lineno="198" targets="[&lt;AssName(tb) l.198 [bb.utils] at Ox98e4c0c&gt;]" value="tb.tb_next">
                <AssName fromlineno="198" tolineno="198" lineno="198" name="tb"/>
                <Getattr fromlineno="198" tolineno="198" lineno="198" attrname="tb_next" expr="tb">
                  <Name fromlineno="198" tolineno="198" lineno="198" name="tb"/>
                </Getattr>
              </Assign>
            </While>
            <Import fromlineno="200" tolineno="200" lineno="200">
              <ImportName name="traceback"/>
            </Import>
            <Assign fromlineno="201" tolineno="201" lineno="201" targets="[&lt;AssName(line) l.201 [bb.utils] at Ox98e4d6c&gt;]" value="traceback.tb_lineno(tb)">
              <AssName fromlineno="201" tolineno="201" lineno="201" name="line"/>
              <CallFunc fromlineno="201" tolineno="201" lineno="201" func="Getattr(tb_lineno)">
                <Getattr fromlineno="201" tolineno="201" lineno="201" attrname="tb_lineno" expr="traceback">
                  <Name fromlineno="201" tolineno="201" lineno="201" name="traceback"/>
                </Getattr>
                <Name fromlineno="201" tolineno="201" lineno="201" name="tb"/>
              </CallFunc>
            </Assign>
            <Discard fromlineno="203" tolineno="203" lineno="203">
              <CallFunc fromlineno="203" tolineno="203" lineno="203" func="Name(_print_trace)">
                <Name fromlineno="203" tolineno="203" lineno="203" name="_print_trace"/>
                <CallFunc fromlineno="203" tolineno="203" lineno="203" func="Getattr(split)">
                  <Getattr fromlineno="203" tolineno="203" lineno="203" attrname="split" expr="text">
                    <Name fromlineno="203" tolineno="203" lineno="203" name="text"/>
                  </Getattr>
                  <Const fromlineno="203" tolineno="203" lineno="203" type="str">'\n'</Const>
                </CallFunc>
                <Name fromlineno="203" tolineno="203" lineno="203" name="line"/>
              </CallFunc>
            </Discard>
            <Raise fromlineno="205" tolineno="205" lineno="205"/>
          </ExceptHandler>
        </TryExcept>
      </Function>
      <Function fromlineno="207" tolineno="245" lineno="207">
        <Arguments fromlineno="207" tolineno="207" lineno="None" format_args=", *names"/>
        <Assert fromlineno="212" tolineno="212" lineno="212" class="Name" test="names">
          <Name fromlineno="212" tolineno="212" lineno="212" name="names"/>
          <Const fromlineno="212" tolineno="212" lineno="212" type="str">'Empty enums are not supported'</Const>
        </Assert>
        <Class fromlineno="214" tolineno="220" lineno="214">
          <Name fromlineno="214" tolineno="214" lineno="214" name="object"/>
          <Assign fromlineno="215" tolineno="215" lineno="215" targets="[&lt;AssName(__slots__) l.215 [bb.utils] at Ox98f21cc&gt;]" value="names">
            <AssName fromlineno="215" tolineno="215" lineno="215" name="__slots__"/>
            <Name fromlineno="215" tolineno="215" lineno="215" name="names"/>
          </Assign>
          <Function fromlineno="216" tolineno="216" lineno="216">
            <Arguments fromlineno="216" tolineno="216" lineno="None" format_args="self">
              <AssName fromlineno="216" tolineno="216" lineno="216" name="self"/>
            </Arguments>
            <Return fromlineno="216" tolineno="216" lineno="216">
              <CallFunc fromlineno="216" tolineno="216" lineno="216" func="Name(iter)">
                <Name fromlineno="216" tolineno="216" lineno="216" name="iter"/>
                <Name fromlineno="216" tolineno="216" lineno="216" name="constants"/>
              </CallFunc>
            </Return>
          </Function>
          <Function fromlineno="217" tolineno="217" lineno="217">
            <Arguments fromlineno="217" tolineno="217" lineno="None" format_args="self">
              <AssName fromlineno="217" tolineno="217" lineno="217" name="self"/>
            </Arguments>
            <Return fromlineno="217" tolineno="217" lineno="217">
              <CallFunc fromlineno="217" tolineno="217" lineno="217" func="Name(len)">
                <Name fromlineno="217" tolineno="217" lineno="217" name="len"/>
                <Name fromlineno="217" tolineno="217" lineno="217" name="constants"/>
              </CallFunc>
            </Return>
          </Function>
          <Function fromlineno="218" tolineno="218" lineno="218">
            <Arguments fromlineno="218" tolineno="218" lineno="None" format_args="self, i">
              <AssName fromlineno="218" tolineno="218" lineno="218" name="self"/>
              <AssName fromlineno="218" tolineno="218" lineno="218" name="i"/>
            </Arguments>
            <Return fromlineno="218" tolineno="218" lineno="218">
              <Subscript fromlineno="218" tolineno="218" lineno="218">
                <Name fromlineno="218" tolineno="218" lineno="218" name="constants"/>
                <Index fromlineno="218" tolineno="218" lineno="None">
                  <Name fromlineno="218" tolineno="218" lineno="218" name="i"/>
                </Index>
              </Subscript>
            </Return>
          </Function>
          <Function fromlineno="219" tolineno="219" lineno="219">
            <Arguments fromlineno="219" tolineno="219" lineno="None" format_args="self">
              <AssName fromlineno="219" tolineno="219" lineno="219" name="self"/>
            </Arguments>
            <Return fromlineno="219" tolineno="219" lineno="219">
              <BinOp fromlineno="219" tolineno="219" lineno="219" op="+" left="'Enum'" right="str(names)">
                <Const fromlineno="219" tolineno="219" lineno="219" type="str">'Enum'</Const>
                <CallFunc fromlineno="219" tolineno="219" lineno="219" func="Name(str)">
                  <Name fromlineno="219" tolineno="219" lineno="219" name="str"/>
                  <Name fromlineno="219" tolineno="219" lineno="219" name="names"/>
                </CallFunc>
              </BinOp>
            </Return>
          </Function>
          <Function fromlineno="220" tolineno="220" lineno="220">
            <Arguments fromlineno="220" tolineno="220" lineno="None" format_args="self">
              <AssName fromlineno="220" tolineno="220" lineno="220" name="self"/>
            </Arguments>
            <Return fromlineno="220" tolineno="220" lineno="220">
              <BinOp fromlineno="220" tolineno="220" lineno="220" op="+" left="'enum '" right="str(constants)">
                <Const fromlineno="220" tolineno="220" lineno="220" type="str">'enum '</Const>
                <CallFunc fromlineno="220" tolineno="220" lineno="220" func="Name(str)">
                  <Name fromlineno="220" tolineno="220" lineno="220" name="str"/>
                  <Name fromlineno="220" tolineno="220" lineno="220" name="constants"/>
                </CallFunc>
              </BinOp>
            </Return>
          </Function>
        </Class>
        <Class fromlineno="222" tolineno="235" lineno="222">
          <Name fromlineno="222" tolineno="222" lineno="222" name="object"/>
          <Assign fromlineno="223" tolineno="223" lineno="223" targets="[&lt;AssName(__slots__) l.223 [bb.utils] at Ox98f2c4c&gt;]" value="'__value'">
            <AssName fromlineno="223" tolineno="223" lineno="223" name="__slots__"/>
            <Const fromlineno="223" tolineno="223" lineno="223" type="str">'__value'</Const>
          </Assign>
          <Function fromlineno="224" tolineno="224" lineno="224">
            <Arguments fromlineno="224" tolineno="224" lineno="None" format_args="self, value">
              <AssName fromlineno="224" tolineno="224" lineno="224" name="self"/>
              <AssName fromlineno="224" tolineno="224" lineno="224" name="value"/>
            </Arguments>
            <Assign fromlineno="224" tolineno="224" lineno="224" targets="[&lt;AssAttr(__value) l.224 [bb.utils] at Ox98f2e0c&gt;]" value="value">
              <AssAttr fromlineno="224" tolineno="224" lineno="224" attrname="__value" expr="self">
                <Name fromlineno="224" tolineno="224" lineno="224" name="self"/>
              </AssAttr>
              <Name fromlineno="224" tolineno="224" lineno="224" name="value"/>
            </Assign>
          </Function>
          <Assign fromlineno="225" tolineno="225" lineno="225" targets="[&lt;AssName(Value) l.225 [bb.utils] at Ox98f2eac&gt;]" value="property(lambda self: self.__value)">
            <AssName fromlineno="225" tolineno="225" lineno="225" name="Value"/>
            <CallFunc fromlineno="225" tolineno="225" lineno="225" func="Name(property)">
              <Name fromlineno="225" tolineno="225" lineno="225" name="property"/>
              <Lambda fromlineno="225" tolineno="225" lineno="225">
                <Arguments fromlineno="225" tolineno="225" lineno="None" format_args="self">
                  <AssName fromlineno="225" tolineno="225" lineno="225" name="self"/>
                </Arguments>
                <Getattr fromlineno="225" tolineno="225" lineno="225" attrname="__value" expr="self">
                  <Name fromlineno="225" tolineno="225" lineno="225" name="self"/>
                </Getattr>
              </Lambda>
            </CallFunc>
          </Assign>
          <Assign fromlineno="226" tolineno="226" lineno="226" targets="[&lt;AssName(EnumType) l.226 [bb.utils] at Ox98fe0ac&gt;]" value="property(lambda self: EnumType)">
            <AssName fromlineno="226" tolineno="226" lineno="226" name="EnumType"/>
            <CallFunc fromlineno="226" tolineno="226" lineno="226" func="Name(property)">
              <Name fromlineno="226" tolineno="226" lineno="226" name="property"/>
              <Lambda fromlineno="226" tolineno="226" lineno="226">
                <Arguments fromlineno="226" tolineno="226" lineno="None" format_args="self">
                  <AssName fromlineno="226" tolineno="226" lineno="226" name="self"/>
                </Arguments>
                <Name fromlineno="226" tolineno="226" lineno="226" name="EnumType"/>
              </Lambda>
            </CallFunc>
          </Assign>
          <Function fromlineno="227" tolineno="227" lineno="227">
            <Arguments fromlineno="227" tolineno="227" lineno="None" format_args="self">
              <AssName fromlineno="227" tolineno="227" lineno="227" name="self"/>
            </Arguments>
            <Return fromlineno="227" tolineno="227" lineno="227">
              <CallFunc fromlineno="227" tolineno="227" lineno="227" func="Name(hash)">
                <Name fromlineno="227" tolineno="227" lineno="227" name="hash"/>
                <Getattr fromlineno="227" tolineno="227" lineno="227" attrname="__value" expr="self">
                  <Name fromlineno="227" tolineno="227" lineno="227" name="self"/>
                </Getattr>
              </CallFunc>
            </Return>
          </Function>
          <Function fromlineno="228" tolineno="232" lineno="228">
            <Arguments fromlineno="228" tolineno="228" lineno="None" format_args="self, other">
              <AssName fromlineno="228" tolineno="228" lineno="228" name="self"/>
              <AssName fromlineno="228" tolineno="228" lineno="228" name="other"/>
            </Arguments>
            <Assert fromlineno="231" tolineno="231" lineno="231" class="Compare" test="self.EnumType is other.EnumType">
              <Compare fromlineno="231" tolineno="231" lineno="231" op="('is', &lt;Getattr(EnumType) l.231 [bb.utils] at Ox98fe60c&gt;)">
                <Getattr fromlineno="231" tolineno="231" lineno="231" attrname="EnumType" expr="self">
                  <Name fromlineno="231" tolineno="231" lineno="231" name="self"/>
                </Getattr>
                <Getattr fromlineno="231" tolineno="231" lineno="231" attrname="EnumType" expr="other">
                  <Name fromlineno="231" tolineno="231" lineno="231" name="other"/>
                </Getattr>
              </Compare>
              <Const fromlineno="231" tolineno="231" lineno="231" type="str">'Only values from the same enum are comparable'</Const>
            </Assert>
            <Return fromlineno="232" tolineno="232" lineno="232">
              <CallFunc fromlineno="232" tolineno="232" lineno="232" func="Name(cmp)">
                <Name fromlineno="232" tolineno="232" lineno="232" name="cmp"/>
                <Getattr fromlineno="232" tolineno="232" lineno="232" attrname="__value" expr="self">
                  <Name fromlineno="232" tolineno="232" lineno="232" name="self"/>
                </Getattr>
                <Getattr fromlineno="232" tolineno="232" lineno="232" attrname="__value" expr="other">
                  <Name fromlineno="232" tolineno="232" lineno="232" name="other"/>
                </Getattr>
              </CallFunc>
            </Return>
          </Function>
          <Function fromlineno="233" tolineno="233" lineno="233">
            <Arguments fromlineno="233" tolineno="233" lineno="None" format_args="self">
              <AssName fromlineno="233" tolineno="233" lineno="233" name="self"/>
            </Arguments>
            <Return fromlineno="233" tolineno="233" lineno="233">
              <Subscript fromlineno="233" tolineno="233" lineno="233">
                <Name fromlineno="233" tolineno="233" lineno="233" name="constants"/>
                <Index fromlineno="233" tolineno="233" lineno="None">
                  <BinOp fromlineno="233" tolineno="233" lineno="233" op="-" left="maximum" right="self.__value">
                    <Name fromlineno="233" tolineno="233" lineno="233" name="maximum"/>
                    <Getattr fromlineno="233" tolineno="233" lineno="233" attrname="__value" expr="self">
                      <Name fromlineno="233" tolineno="233" lineno="233" name="self"/>
                    </Getattr>
                  </BinOp>
                </Index>
              </Subscript>
            </Return>
          </Function>
          <Function fromlineno="234" tolineno="234" lineno="234">
            <Arguments fromlineno="234" tolineno="234" lineno="None" format_args="self">
              <AssName fromlineno="234" tolineno="234" lineno="234" name="self"/>
            </Arguments>
            <Return fromlineno="234" tolineno="234" lineno="234">
              <CallFunc fromlineno="234" tolineno="234" lineno="234" func="Name(bool)">
                <Name fromlineno="234" tolineno="234" lineno="234" name="bool"/>
                <Getattr fromlineno="234" tolineno="234" lineno="234" attrname="__value" expr="self">
                  <Name fromlineno="234" tolineno="234" lineno="234" name="self"/>
                </Getattr>
              </CallFunc>
            </Return>
          </Function>
          <Function fromlineno="235" tolineno="235" lineno="235">
            <Arguments fromlineno="235" tolineno="235" lineno="None" format_args="self">
              <AssName fromlineno="235" tolineno="235" lineno="235" name="self"/>
            </Arguments>
            <Return fromlineno="235" tolineno="235" lineno="235">
              <CallFunc fromlineno="235" tolineno="235" lineno="235" func="Name(str)">
                <Name fromlineno="235" tolineno="235" lineno="235" name="str"/>
                <Subscript fromlineno="235" tolineno="235" lineno="235">
                  <Name fromlineno="235" tolineno="235" lineno="235" name="names"/>
                  <Index fromlineno="235" tolineno="235" lineno="None">
                    <Getattr fromlineno="235" tolineno="235" lineno="235" attrname="__value" expr="self">
                      <Name fromlineno="235" tolineno="235" lineno="235" name="self"/>
                    </Getattr>
                  </Index>
                </Subscript>
              </CallFunc>
            </Return>
          </Function>
        </Class>
        <Assign fromlineno="237" tolineno="237" lineno="237" targets="[&lt;AssName(maximum) l.237 [bb.utils] at Ox98fedac&gt;]" value="(len(names)) - (1)">
          <AssName fromlineno="237" tolineno="237" lineno="237" name="maximum"/>
          <BinOp fromlineno="237" tolineno="237" lineno="237" op="-" left="len(names)" right="1">
            <CallFunc fromlineno="237" tolineno="237" lineno="237" func="Name(len)">
              <Name fromlineno="237" tolineno="237" lineno="237" name="len"/>
              <Name fromlineno="237" tolineno="237" lineno="237" name="names"/>
            </CallFunc>
            <Const fromlineno="237" tolineno="237" lineno="237" type="int">1</Const>
          </BinOp>
        </Assign>
        <Assign fromlineno="238" tolineno="238" lineno="238" targets="[&lt;AssName(constants) l.238 [bb.utils] at Ox98fef8c&gt;]" value="([None]) * (len(names))">
          <AssName fromlineno="238" tolineno="238" lineno="238" name="constants"/>
          <BinOp fromlineno="238" tolineno="238" lineno="238" op="*" left="[None]" right="len(names)">
            <List fromlineno="238" tolineno="238" lineno="238">
              <Const fromlineno="238" tolineno="238" lineno="238" type="NoneType">None</Const>
            </List>
            <CallFunc fromlineno="238" tolineno="238" lineno="238" func="Name(len)">
              <Name fromlineno="238" tolineno="238" lineno="238" name="len"/>
              <Name fromlineno="238" tolineno="238" lineno="238" name="names"/>
            </CallFunc>
          </BinOp>
        </Assign>
        <For fromlineno="239" tolineno="242" lineno="239">
          <Tuple fromlineno="239" tolineno="239" lineno="239">
            <AssName fromlineno="239" tolineno="239" lineno="239" name="i"/>
            <AssName fromlineno="239" tolineno="239" lineno="239" name="each"/>
          </Tuple>
          <CallFunc fromlineno="239" tolineno="239" lineno="239" func="Name(enumerate)">
            <Name fromlineno="239" tolineno="239" lineno="239" name="enumerate"/>
            <Name fromlineno="239" tolineno="239" lineno="239" name="names"/>
          </CallFunc>
          <Assign fromlineno="240" tolineno="240" lineno="240" targets="[&lt;AssName(val) l.240 [bb.utils] at Ox99011cc&gt;]" value="EnumValue(i)">
            <AssName fromlineno="240" tolineno="240" lineno="240" name="val"/>
            <CallFunc fromlineno="240" tolineno="240" lineno="240" func="Name(EnumValue)">
              <Name fromlineno="240" tolineno="240" lineno="240" name="EnumValue"/>
              <Name fromlineno="240" tolineno="240" lineno="240" name="i"/>
            </CallFunc>
          </Assign>
          <Discard fromlineno="241" tolineno="241" lineno="241">
            <CallFunc fromlineno="241" tolineno="241" lineno="241" func="Name(setattr)">
              <Name fromlineno="241" tolineno="241" lineno="241" name="setattr"/>
              <Name fromlineno="241" tolineno="241" lineno="241" name="EnumClass"/>
              <Name fromlineno="241" tolineno="241" lineno="241" name="each"/>
              <Name fromlineno="241" tolineno="241" lineno="241" name="val"/>
            </CallFunc>
          </Discard>
          <Assign fromlineno="242" tolineno="242" lineno="242" targets="[&lt;Subscript() l.242 [bb.utils] at Ox990140c&gt;]" value="val">
            <Subscript fromlineno="242" tolineno="242" lineno="242">
              <Name fromlineno="242" tolineno="242" lineno="242" name="constants"/>
              <Index fromlineno="242" tolineno="242" lineno="None">
                <Name fromlineno="242" tolineno="242" lineno="242" name="i"/>
              </Index>
            </Subscript>
            <Name fromlineno="242" tolineno="242" lineno="242" name="val"/>
          </Assign>
        </For>
        <Assign fromlineno="243" tolineno="243" lineno="243" targets="[&lt;AssName(constants) l.243 [bb.utils] at Ox990160c&gt;]" value="tuple(constants)">
          <AssName fromlineno="243" tolineno="243" lineno="243" name="constants"/>
          <CallFunc fromlineno="243" tolineno="243" lineno="243" func="Name(tuple)">
            <Name fromlineno="243" tolineno="243" lineno="243" name="tuple"/>
            <Name fromlineno="243" tolineno="243" lineno="243" name="constants"/>
          </CallFunc>
        </Assign>
        <Assign fromlineno="244" tolineno="244" lineno="244" targets="[&lt;AssName(EnumType) l.244 [bb.utils] at Ox99014cc&gt;]" value="EnumClass()">
          <AssName fromlineno="244" tolineno="244" lineno="244" name="EnumType"/>
          <CallFunc fromlineno="244" tolineno="244" lineno="244" func="Name(EnumClass)">
            <Name fromlineno="244" tolineno="244" lineno="244" name="EnumClass"/>
          </CallFunc>
        </Assign>
        <Return fromlineno="245" tolineno="245" lineno="245">
          <Name fromlineno="245" tolineno="245" lineno="245" name="EnumType"/>
        </Return>
      </Function>
      <Function fromlineno="247" tolineno="280" lineno="247">
        <Arguments fromlineno="247" tolineno="247" lineno="None" format_args="name">
          <AssName fromlineno="247" tolineno="247" lineno="247" name="name"/>
        </Arguments>
        <Assign fromlineno="252" tolineno="252" lineno="252" targets="[&lt;AssName(path) l.252 [bb.utils] at Ox990174c&gt;]" value="os.path.dirname(name)">
          <AssName fromlineno="252" tolineno="252" lineno="252" name="path"/>
          <CallFunc fromlineno="252" tolineno="252" lineno="252" func="Getattr(dirname)">
            <Getattr fromlineno="252" tolineno="252" lineno="252" attrname="dirname" expr="os.path">
              <Getattr fromlineno="252" tolineno="252" lineno="252" attrname="path" expr="os">
                <Name fromlineno="252" tolineno="252" lineno="252" name="os"/>
              </Getattr>
            </Getattr>
            <Name fromlineno="252" tolineno="252" lineno="252" name="name"/>
          </CallFunc>
        </Assign>
        <If fromlineno="253" tolineno="256" lineno="253">
          <UnaryOp fromlineno="253" tolineno="253" lineno="253">
            <CallFunc fromlineno="253" tolineno="253" lineno="253" func="Getattr(isdir)">
              <Getattr fromlineno="253" tolineno="253" lineno="253" attrname="isdir" expr="os.path">
                <Getattr fromlineno="253" tolineno="253" lineno="253" attrname="path" expr="os">
                  <Name fromlineno="253" tolineno="253" lineno="253" name="os"/>
                </Getattr>
              </Getattr>
              <Name fromlineno="253" tolineno="253" lineno="253" name="path"/>
            </CallFunc>
          </UnaryOp>
          <Import fromlineno="254" tolineno="254" lineno="254">
            <ImportName name="bb"/>
            <ImportName name="sys"/>
          </Import>
          <Discard fromlineno="255" tolineno="255" lineno="255">
            <CallFunc fromlineno="255" tolineno="255" lineno="255" func="Getattr(error)">
              <Getattr fromlineno="255" tolineno="255" lineno="255" attrname="error" expr="bb.msg">
                <Getattr fromlineno="255" tolineno="255" lineno="255" attrname="msg" expr="bb">
                  <Name fromlineno="255" tolineno="255" lineno="255" name="bb"/>
                </Getattr>
              </Getattr>
              <Getattr fromlineno="255" tolineno="255" lineno="255" attrname="Util" expr="bb.msg.domain">
                <Getattr fromlineno="255" tolineno="255" lineno="255" attrname="domain" expr="bb.msg">
                  <Getattr fromlineno="255" tolineno="255" lineno="255" attrname="msg" expr="bb">
                    <Name fromlineno="255" tolineno="255" lineno="255" name="bb"/>
                  </Getattr>
                </Getattr>
              </Getattr>
              <BinOp fromlineno="255" tolineno="255" lineno="255" op="%" left="'Error, lockfile path does not exist!: %s'" right="path">
                <Const fromlineno="255" tolineno="255" lineno="255" type="str">'Error, lockfile path does not exist!: %s'</Const>
                <Name fromlineno="255" tolineno="255" lineno="255" name="path"/>
              </BinOp>
            </CallFunc>
          </Discard>
          <Discard fromlineno="256" tolineno="256" lineno="256">
            <CallFunc fromlineno="256" tolineno="256" lineno="256" func="Getattr(exit)">
              <Getattr fromlineno="256" tolineno="256" lineno="256" attrname="exit" expr="sys">
                <Name fromlineno="256" tolineno="256" lineno="256" name="sys"/>
              </Getattr>
              <Const fromlineno="256" tolineno="256" lineno="256" type="int">1</Const>
            </CallFunc>
          </Discard>
        </If>
        <While fromlineno="258" tolineno="280" lineno="258">
          <Const fromlineno="258" tolineno="258" lineno="258" type="bool">True</Const>
          <TryExcept fromlineno="269" tolineno="280" lineno="269">
            <Assign fromlineno="270" tolineno="270" lineno="270" targets="[&lt;AssName(lf) l.270 [bb.utils] at Ox9901eec&gt;]" value="open(name, 'a+')">
              <AssName fromlineno="270" tolineno="270" lineno="270" name="lf"/>
              <CallFunc fromlineno="270" tolineno="270" lineno="270" func="Name(open)">
                <Name fromlineno="270" tolineno="270" lineno="270" name="open"/>
                <Name fromlineno="270" tolineno="270" lineno="270" name="name"/>
                <Const fromlineno="270" tolineno="270" lineno="270" type="str">'a+'</Const>
              </CallFunc>
            </Assign>
            <Discard fromlineno="271" tolineno="271" lineno="271">
              <CallFunc fromlineno="271" tolineno="271" lineno="271" func="Getattr(flock)">
                <Getattr fromlineno="271" tolineno="271" lineno="271" attrname="flock" expr="fcntl">
                  <Name fromlineno="271" tolineno="271" lineno="271" name="fcntl"/>
                </Getattr>
                <CallFunc fromlineno="271" tolineno="271" lineno="271" func="Getattr(fileno)">
                  <Getattr fromlineno="271" tolineno="271" lineno="271" attrname="fileno" expr="lf">
                    <Name fromlineno="271" tolineno="271" lineno="271" name="lf"/>
                  </Getattr>
                </CallFunc>
                <Getattr fromlineno="271" tolineno="271" lineno="271" attrname="LOCK_EX" expr="fcntl">
                  <Name fromlineno="271" tolineno="271" lineno="271" name="fcntl"/>
                </Getattr>
              </CallFunc>
            </Discard>
            <Assign fromlineno="272" tolineno="272" lineno="272" targets="[&lt;AssName(statinfo) l.272 [bb.utils] at Ox99062cc&gt;]" value="os.fstat(lf.fileno())">
              <AssName fromlineno="272" tolineno="272" lineno="272" name="statinfo"/>
              <CallFunc fromlineno="272" tolineno="272" lineno="272" func="Getattr(fstat)">
                <Getattr fromlineno="272" tolineno="272" lineno="272" attrname="fstat" expr="os">
                  <Name fromlineno="272" tolineno="272" lineno="272" name="os"/>
                </Getattr>
                <CallFunc fromlineno="272" tolineno="272" lineno="272" func="Getattr(fileno)">
                  <Getattr fromlineno="272" tolineno="272" lineno="272" attrname="fileno" expr="lf">
                    <Name fromlineno="272" tolineno="272" lineno="272" name="lf"/>
                  </Getattr>
                </CallFunc>
              </CallFunc>
            </Assign>
            <If fromlineno="273" tolineno="276" lineno="273">
              <CallFunc fromlineno="273" tolineno="273" lineno="273" func="Getattr(exists)">
                <Getattr fromlineno="273" tolineno="273" lineno="273" attrname="exists" expr="os.path">
                  <Getattr fromlineno="273" tolineno="273" lineno="273" attrname="path" expr="os">
                    <Name fromlineno="273" tolineno="273" lineno="273" name="os"/>
                  </Getattr>
                </Getattr>
                <Getattr fromlineno="273" tolineno="273" lineno="273" attrname="name" expr="lf">
                  <Name fromlineno="273" tolineno="273" lineno="273" name="lf"/>
                </Getattr>
              </CallFunc>
              <Assign fromlineno="274" tolineno="274" lineno="274" targets="[&lt;AssName(statinfo2) l.274 [bb.utils] at Ox990644c&gt;]" value="os.stat(lf.name)">
                <AssName fromlineno="274" tolineno="274" lineno="274" name="statinfo2"/>
                <CallFunc fromlineno="274" tolineno="274" lineno="274" func="Getattr(stat)">
                  <Getattr fromlineno="274" tolineno="274" lineno="274" attrname="stat" expr="os">
                    <Name fromlineno="274" tolineno="274" lineno="274" name="os"/>
                  </Getattr>
                  <Getattr fromlineno="274" tolineno="274" lineno="274" attrname="name" expr="lf">
                    <Name fromlineno="274" tolineno="274" lineno="274" name="lf"/>
                  </Getattr>
                </CallFunc>
              </Assign>
              <If fromlineno="275" tolineno="276" lineno="275">
                <Compare fromlineno="275" tolineno="275" lineno="275" op="('==', &lt;Getattr(st_ino) l.275 [bb.utils] at Ox990678c&gt;)">
                  <Getattr fromlineno="275" tolineno="275" lineno="275" attrname="st_ino" expr="statinfo">
                    <Name fromlineno="275" tolineno="275" lineno="275" name="statinfo"/>
                  </Getattr>
                  <Getattr fromlineno="275" tolineno="275" lineno="275" attrname="st_ino" expr="statinfo2">
                    <Name fromlineno="275" tolineno="275" lineno="275" name="statinfo2"/>
                  </Getattr>
                </Compare>
                <Return fromlineno="276" tolineno="276" lineno="276">
                  <Name fromlineno="276" tolineno="276" lineno="276" name="lf"/>
                </Return>
              </If>
            </If>
            <Discard fromlineno="278" tolineno="278" lineno="278">
              <Getattr fromlineno="278" tolineno="278" lineno="278" attrname="close" expr="lf">
                <Name fromlineno="278" tolineno="278" lineno="278" name="lf"/>
              </Getattr>
            </Discard>
            <ExceptHandler fromlineno="279" tolineno="280" lineno="279">
              <Name fromlineno="279" tolineno="279" lineno="279" name="Exception"/>
              <AssName fromlineno="279" tolineno="279" lineno="279" name="e"/>
              <Continue fromlineno="280" tolineno="280" lineno="280"/>
            </ExceptHandler>
          </TryExcept>
        </While>
      </Function>
      <Function fromlineno="282" tolineno="288" lineno="282">
        <Arguments fromlineno="282" tolineno="282" lineno="None" format_args="lf">
          <AssName fromlineno="282" tolineno="282" lineno="282" name="lf"/>
        </Arguments>
        <Discard fromlineno="286" tolineno="286" lineno="286">
          <CallFunc fromlineno="286" tolineno="286" lineno="286" func="Getattr(unlink)">
            <Getattr fromlineno="286" tolineno="286" lineno="286" attrname="unlink" expr="os">
              <Name fromlineno="286" tolineno="286" lineno="286" name="os"/>
            </Getattr>
            <Getattr fromlineno="286" tolineno="286" lineno="286" attrname="name" expr="lf">
              <Name fromlineno="286" tolineno="286" lineno="286" name="lf"/>
            </Getattr>
          </CallFunc>
        </Discard>
        <Discard fromlineno="287" tolineno="287" lineno="287">
          <CallFunc fromlineno="287" tolineno="287" lineno="287" func="Getattr(flock)">
            <Getattr fromlineno="287" tolineno="287" lineno="287" attrname="flock" expr="fcntl">
              <Name fromlineno="287" tolineno="287" lineno="287" name="fcntl"/>
            </Getattr>
            <CallFunc fromlineno="287" tolineno="287" lineno="287" func="Getattr(fileno)">
              <Getattr fromlineno="287" tolineno="287" lineno="287" attrname="fileno" expr="lf">
                <Name fromlineno="287" tolineno="287" lineno="287" name="lf"/>
              </Getattr>
            </CallFunc>
            <Getattr fromlineno="287" tolineno="287" lineno="287" attrname="LOCK_UN" expr="fcntl">
              <Name fromlineno="287" tolineno="287" lineno="287" name="fcntl"/>
            </Getattr>
          </CallFunc>
        </Discard>
        <Discard fromlineno="288" tolineno="288" lineno="288">
          <Getattr fromlineno="288" tolineno="288" lineno="288" attrname="close" expr="lf">
            <Name fromlineno="288" tolineno="288" lineno="288" name="lf"/>
          </Getattr>
        </Discard>
      </Function>
      <Function fromlineno="290" tolineno="303" lineno="290">
        <Arguments fromlineno="290" tolineno="290" lineno="None" format_args="filename">
          <AssName fromlineno="290" tolineno="290" lineno="290" name="filename"/>
        </Arguments>
        <TryExcept fromlineno="294" tolineno="299" lineno="294">
          <Import fromlineno="295" tolineno="295" lineno="295">
            <ImportName name="hashlib"/>
          </Import>
          <Assign fromlineno="296" tolineno="296" lineno="296" targets="[&lt;AssName(m) l.296 [bb.utils] at Ox9906eac&gt;]" value="hashlib.md5()">
            <AssName fromlineno="296" tolineno="296" lineno="296" name="m"/>
            <CallFunc fromlineno="296" tolineno="296" lineno="296" func="Getattr(md5)">
              <Getattr fromlineno="296" tolineno="296" lineno="296" attrname="md5" expr="hashlib">
                <Name fromlineno="296" tolineno="296" lineno="296" name="hashlib"/>
              </Getattr>
            </CallFunc>
          </Assign>
          <ExceptHandler fromlineno="297" tolineno="299" lineno="297">
            <Name fromlineno="297" tolineno="297" lineno="297" name="ImportError"/>
            <Import fromlineno="298" tolineno="298" lineno="298">
              <ImportName name="md5"/>
            </Import>
            <Assign fromlineno="299" tolineno="299" lineno="299" targets="[&lt;AssName(m) l.299 [bb.utils] at Ox9906aec&gt;]" value="md5.new()">
              <AssName fromlineno="299" tolineno="299" lineno="299" name="m"/>
              <CallFunc fromlineno="299" tolineno="299" lineno="299" func="Getattr(new)">
                <Getattr fromlineno="299" tolineno="299" lineno="299" attrname="new" expr="md5">
                  <Name fromlineno="299" tolineno="299" lineno="299" name="md5"/>
                </Getattr>
              </CallFunc>
            </Assign>
          </ExceptHandler>
        </TryExcept>
        <For fromlineno="301" tolineno="302" lineno="301">
          <AssName fromlineno="301" tolineno="301" lineno="301" name="line"/>
          <CallFunc fromlineno="301" tolineno="301" lineno="301" func="Name(open)">
            <Name fromlineno="301" tolineno="301" lineno="301" name="open"/>
            <Name fromlineno="301" tolineno="301" lineno="301" name="filename"/>
          </CallFunc>
          <Discard fromlineno="302" tolineno="302" lineno="302">
            <CallFunc fromlineno="302" tolineno="302" lineno="302" func="Getattr(update)">
              <Getattr fromlineno="302" tolineno="302" lineno="302" attrname="update" expr="m">
                <Name fromlineno="302" tolineno="302" lineno="302" name="m"/>
              </Getattr>
              <Name fromlineno="302" tolineno="302" lineno="302" name="line"/>
            </CallFunc>
          </Discard>
        </For>
        <Return fromlineno="303" tolineno="303" lineno="303">
          <CallFunc fromlineno="303" tolineno="303" lineno="303" func="Getattr(hexdigest)">
            <Getattr fromlineno="303" tolineno="303" lineno="303" attrname="hexdigest" expr="m">
              <Name fromlineno="303" tolineno="303" lineno="303" name="m"/>
            </Getattr>
          </CallFunc>
        </Return>
      </Function>
      <Function fromlineno="305" tolineno="320" lineno="305">
        <Arguments fromlineno="305" tolineno="305" lineno="None" format_args="filename">
          <AssName fromlineno="305" tolineno="305" lineno="305" name="filename"/>
        </Arguments>
        <TryExcept fromlineno="312" tolineno="315" lineno="312">
          <Import fromlineno="313" tolineno="313" lineno="313">
            <ImportName name="hashlib"/>
          </Import>
          <ExceptHandler fromlineno="314" tolineno="315" lineno="314">
            <Name fromlineno="314" tolineno="314" lineno="314" name="ImportError"/>
            <Return fromlineno="315" tolineno="315" lineno="315">
              <Const fromlineno="315" tolineno="315" lineno="315" type="NoneType">None</Const>
            </Return>
          </ExceptHandler>
        </TryExcept>
        <Assign fromlineno="317" tolineno="317" lineno="317" targets="[&lt;AssName(s) l.317 [bb.utils] at Ox990d74c&gt;]" value="hashlib.sha256()">
          <AssName fromlineno="317" tolineno="317" lineno="317" name="s"/>
          <CallFunc fromlineno="317" tolineno="317" lineno="317" func="Getattr(sha256)">
            <Getattr fromlineno="317" tolineno="317" lineno="317" attrname="sha256" expr="hashlib">
              <Name fromlineno="317" tolineno="317" lineno="317" name="hashlib"/>
            </Getattr>
          </CallFunc>
        </Assign>
        <For fromlineno="318" tolineno="319" lineno="318">
          <AssName fromlineno="318" tolineno="318" lineno="318" name="line"/>
          <CallFunc fromlineno="318" tolineno="318" lineno="318" func="Name(open)">
            <Name fromlineno="318" tolineno="318" lineno="318" name="open"/>
            <Name fromlineno="318" tolineno="318" lineno="318" name="filename"/>
          </CallFunc>
          <Discard fromlineno="319" tolineno="319" lineno="319">
            <CallFunc fromlineno="319" tolineno="319" lineno="319" func="Getattr(update)">
              <Getattr fromlineno="319" tolineno="319" lineno="319" attrname="update" expr="s">
                <Name fromlineno="319" tolineno="319" lineno="319" name="s"/>
              </Getattr>
              <Name fromlineno="319" tolineno="319" lineno="319" name="line"/>
            </CallFunc>
          </Discard>
        </For>
        <Return fromlineno="320" tolineno="320" lineno="320">
          <CallFunc fromlineno="320" tolineno="320" lineno="320" func="Getattr(hexdigest)">
            <Getattr fromlineno="320" tolineno="320" lineno="320" attrname="hexdigest" expr="s">
              <Name fromlineno="320" tolineno="320" lineno="320" name="s"/>
            </Getattr>
          </CallFunc>
        </Return>
      </Function>
      <Function fromlineno="322" tolineno="351" lineno="322">
        <Arguments fromlineno="322" tolineno="322" lineno="None" format_args=""/>
        <Return fromlineno="323" tolineno="351" lineno="323">
          <List fromlineno="323" tolineno="351" lineno="323">
            <Const fromlineno="324" tolineno="324" lineno="324" type="str">'BBPATH'</Const>
            <Const fromlineno="325" tolineno="325" lineno="325" type="str">'BB_PRESERVE_ENV'</Const>
            <Const fromlineno="326" tolineno="326" lineno="326" type="str">'BB_ENV_WHITELIST'</Const>
            <Const fromlineno="327" tolineno="327" lineno="327" type="str">'BB_ENV_EXTRAWHITE'</Const>
            <Const fromlineno="328" tolineno="328" lineno="328" type="str">'COLORTERM'</Const>
            <Const fromlineno="329" tolineno="329" lineno="329" type="str">'DBUS_SESSION_BUS_ADDRESS'</Const>
            <Const fromlineno="330" tolineno="330" lineno="330" type="str">'DESKTOP_SESSION'</Const>
            <Const fromlineno="331" tolineno="331" lineno="331" type="str">'DESKTOP_STARTUP_ID'</Const>
            <Const fromlineno="332" tolineno="332" lineno="332" type="str">'DISPLAY'</Const>
            <Const fromlineno="333" tolineno="333" lineno="333" type="str">'GNOME_KEYRING_PID'</Const>
            <Const fromlineno="334" tolineno="334" lineno="334" type="str">'GNOME_KEYRING_SOCKET'</Const>
            <Const fromlineno="335" tolineno="335" lineno="335" type="str">'GPG_AGENT_INFO'</Const>
            <Const fromlineno="336" tolineno="336" lineno="336" type="str">'GTK_RC_FILES'</Const>
            <Const fromlineno="337" tolineno="337" lineno="337" type="str">'HOME'</Const>
            <Const fromlineno="338" tolineno="338" lineno="338" type="str">'LANG'</Const>
            <Const fromlineno="339" tolineno="339" lineno="339" type="str">'LOGNAME'</Const>
            <Const fromlineno="340" tolineno="340" lineno="340" type="str">'PATH'</Const>
            <Const fromlineno="341" tolineno="341" lineno="341" type="str">'PWD'</Const>
            <Const fromlineno="342" tolineno="342" lineno="342" type="str">'SESSION_MANAGER'</Const>
            <Const fromlineno="343" tolineno="343" lineno="343" type="str">'SHELL'</Const>
            <Const fromlineno="344" tolineno="344" lineno="344" type="str">'SSH_AUTH_SOCK'</Const>
            <Const fromlineno="345" tolineno="345" lineno="345" type="str">'TERM'</Const>
            <Const fromlineno="346" tolineno="346" lineno="346" type="str">'USER'</Const>
            <Const fromlineno="347" tolineno="347" lineno="347" type="str">'USERNAME'</Const>
            <Const fromlineno="348" tolineno="348" lineno="348" type="str">'_'</Const>
            <Const fromlineno="349" tolineno="349" lineno="349" type="str">'XAUTHORITY'</Const>
            <Const fromlineno="350" tolineno="350" lineno="350" type="str">'XDG_DATA_DIRS'</Const>
            <Const fromlineno="351" tolineno="351" lineno="351" type="str">'XDG_SESSION_COOKIE'</Const>
          </List>
        </Return>
      </Function>
      <Function fromlineno="354" tolineno="374" lineno="354">
        <Arguments fromlineno="354" tolineno="354" lineno="None" format_args="good_vars">
          <AssName fromlineno="354" tolineno="354" lineno="354" name="good_vars"/>
        </Arguments>
        <Import fromlineno="360" tolineno="360" lineno="360">
          <ImportName name="bb"/>
        </Import>
        <Assign fromlineno="362" tolineno="362" lineno="362" targets="[&lt;AssName(removed_vars) l.362 [bb.utils] at Ox990940c&gt;]" value="[]">
          <AssName fromlineno="362" tolineno="362" lineno="362" name="removed_vars"/>
          <List fromlineno="362" tolineno="362" lineno="362"/>
        </Assign>
        <For fromlineno="363" tolineno="369" lineno="363">
          <AssName fromlineno="363" tolineno="363" lineno="363" name="key"/>
          <CallFunc fromlineno="363" tolineno="363" lineno="363" func="Getattr(keys)">
            <Getattr fromlineno="363" tolineno="363" lineno="363" attrname="keys" expr="os.environ">
              <Getattr fromlineno="363" tolineno="363" lineno="363" attrname="environ" expr="os">
                <Name fromlineno="363" tolineno="363" lineno="363" name="os"/>
              </Getattr>
            </Getattr>
          </CallFunc>
          <If fromlineno="364" tolineno="365" lineno="364">
            <Compare fromlineno="364" tolineno="364" lineno="364" op="('in', &lt;Name(good_vars) l.364 [bb.utils] at Ox99095ac&gt;)">
              <Name fromlineno="364" tolineno="364" lineno="364" name="key"/>
              <Name fromlineno="364" tolineno="364" lineno="364" name="good_vars"/>
            </Compare>
            <Continue fromlineno="365" tolineno="365" lineno="365"/>
          </If>
          <Discard fromlineno="367" tolineno="367" lineno="367">
            <CallFunc fromlineno="367" tolineno="367" lineno="367" func="Getattr(append)">
              <Getattr fromlineno="367" tolineno="367" lineno="367" attrname="append" expr="removed_vars">
                <Name fromlineno="367" tolineno="367" lineno="367" name="removed_vars"/>
              </Getattr>
              <Name fromlineno="367" tolineno="367" lineno="367" name="key"/>
            </CallFunc>
          </Discard>
          <Discard fromlineno="368" tolineno="368" lineno="368">
            <CallFunc fromlineno="368" tolineno="368" lineno="368" func="Getattr(unsetenv)">
              <Getattr fromlineno="368" tolineno="368" lineno="368" attrname="unsetenv" expr="os">
                <Name fromlineno="368" tolineno="368" lineno="368" name="os"/>
              </Getattr>
              <Name fromlineno="368" tolineno="368" lineno="368" name="key"/>
            </CallFunc>
          </Discard>
          <Delete fromlineno="369" tolineno="369" lineno="369">
            <Subscript fromlineno="369" tolineno="369" lineno="369">
              <Getattr fromlineno="369" tolineno="369" lineno="369" attrname="environ" expr="os">
                <Name fromlineno="369" tolineno="369" lineno="369" name="os"/>
              </Getattr>
              <Index fromlineno="369" tolineno="369" lineno="None">
                <Name fromlineno="369" tolineno="369" lineno="369" name="key"/>
              </Index>
            </Subscript>
          </Delete>
        </For>
        <If fromlineno="371" tolineno="372" lineno="371">
          <CallFunc fromlineno="371" tolineno="371" lineno="371" func="Name(len)">
            <Name fromlineno="371" tolineno="371" lineno="371" name="len"/>
            <Name fromlineno="371" tolineno="371" lineno="371" name="removed_vars"/>
          </CallFunc>
          <Discard fromlineno="372" tolineno="372" lineno="372">
            <CallFunc fromlineno="372" tolineno="372" lineno="372" func="Getattr(debug)">
              <Getattr fromlineno="372" tolineno="372" lineno="372" attrname="debug" expr="bb">
                <Name fromlineno="372" tolineno="372" lineno="372" name="bb"/>
              </Getattr>
              <Const fromlineno="372" tolineno="372" lineno="372" type="int">1</Const>
              <Const fromlineno="372" tolineno="372" lineno="372" type="str">'Removed the following variables from the environment:'</Const>
              <CallFunc fromlineno="372" tolineno="372" lineno="372" func="Getattr(join)">
                <Getattr fromlineno="372" tolineno="372" lineno="372" attrname="join" expr="','">
                  <Const fromlineno="372" tolineno="372" lineno="372" type="str">','</Const>
                </Getattr>
                <Name fromlineno="372" tolineno="372" lineno="372" name="removed_vars"/>
              </CallFunc>
            </CallFunc>
          </Discard>
        </If>
        <Return fromlineno="374" tolineno="374" lineno="374">
          <Name fromlineno="374" tolineno="374" lineno="374" name="removed_vars"/>
        </Return>
      </Function>
      <Function fromlineno="376" tolineno="388" lineno="376">
        <Arguments fromlineno="376" tolineno="376" lineno="None" format_args=""/>
        <If fromlineno="381" tolineno="388" lineno="381">
          <Compare fromlineno="381" tolineno="381" lineno="381" op="('not in', &lt;Getattr(environ) l.381 [bb.utils] at Ox9909dcc&gt;)">
            <Const fromlineno="381" tolineno="381" lineno="381" type="str">'BB_PRESERVE_ENV'</Const>
            <Getattr fromlineno="381" tolineno="381" lineno="381" attrname="environ" expr="os">
              <Name fromlineno="381" tolineno="381" lineno="381" name="os"/>
            </Getattr>
          </Compare>
          <If fromlineno="382" tolineno="385" lineno="382">
            <Compare fromlineno="382" tolineno="382" lineno="382" op="('in', &lt;Getattr(environ) l.382 [bb.utils] at Ox9909c4c&gt;)">
              <Const fromlineno="382" tolineno="382" lineno="382" type="str">'BB_ENV_WHITELIST'</Const>
              <Getattr fromlineno="382" tolineno="382" lineno="382" attrname="environ" expr="os">
                <Name fromlineno="382" tolineno="382" lineno="382" name="os"/>
              </Getattr>
            </Compare>
            <Assign fromlineno="383" tolineno="383" lineno="383" targets="[&lt;AssName(good_vars) l.383 [bb.utils] at Ox991390c&gt;]" value="os.environ['BB_ENV_WHITELIST'].split()">
              <AssName fromlineno="383" tolineno="383" lineno="383" name="good_vars"/>
              <CallFunc fromlineno="383" tolineno="383" lineno="383" func="Getattr(split)">
                <Getattr fromlineno="383" tolineno="383" lineno="383" attrname="split" expr="os.environ['BB_ENV_WHITELIST']">
                  <Subscript fromlineno="383" tolineno="383" lineno="383">
                    <Getattr fromlineno="383" tolineno="383" lineno="383" attrname="environ" expr="os">
                      <Name fromlineno="383" tolineno="383" lineno="383" name="os"/>
                    </Getattr>
                    <Index fromlineno="383" tolineno="383" lineno="None">
                      <Const fromlineno="383" tolineno="383" lineno="383" type="str">'BB_ENV_WHITELIST'</Const>
                    </Index>
                  </Subscript>
                </Getattr>
              </CallFunc>
            </Assign>
            <Assign fromlineno="385" tolineno="385" lineno="385" targets="[&lt;AssName(good_vars) l.385 [bb.utils] at Ox99131cc&gt;]" value="preserved_envvars_list()">
              <AssName fromlineno="385" tolineno="385" lineno="385" name="good_vars"/>
              <CallFunc fromlineno="385" tolineno="385" lineno="385" func="Name(preserved_envvars_list)">
                <Name fromlineno="385" tolineno="385" lineno="385" name="preserved_envvars_list"/>
              </CallFunc>
            </Assign>
          </If>
          <If fromlineno="386" tolineno="387" lineno="386">
            <Compare fromlineno="386" tolineno="386" lineno="386" op="('in', &lt;Getattr(environ) l.386 [bb.utils] at Ox991336c&gt;)">
              <Const fromlineno="386" tolineno="386" lineno="386" type="str">'BB_ENV_EXTRAWHITE'</Const>
              <Getattr fromlineno="386" tolineno="386" lineno="386" attrname="environ" expr="os">
                <Name fromlineno="386" tolineno="386" lineno="386" name="os"/>
              </Getattr>
            </Compare>
            <Discard fromlineno="387" tolineno="387" lineno="387">
              <CallFunc fromlineno="387" tolineno="387" lineno="387" func="Getattr(extend)">
                <Getattr fromlineno="387" tolineno="387" lineno="387" attrname="extend" expr="good_vars">
                  <Name fromlineno="387" tolineno="387" lineno="387" name="good_vars"/>
                </Getattr>
                <CallFunc fromlineno="387" tolineno="387" lineno="387" func="Getattr(split)">
                  <Getattr fromlineno="387" tolineno="387" lineno="387" attrname="split" expr="os.environ['BB_ENV_EXTRAWHITE']">
                    <Subscript fromlineno="387" tolineno="387" lineno="387">
                      <Getattr fromlineno="387" tolineno="387" lineno="387" attrname="environ" expr="os">
                        <Name fromlineno="387" tolineno="387" lineno="387" name="os"/>
                      </Getattr>
                      <Index fromlineno="387" tolineno="387" lineno="None">
                        <Const fromlineno="387" tolineno="387" lineno="387" type="str">'BB_ENV_EXTRAWHITE'</Const>
                      </Index>
                    </Subscript>
                  </Getattr>
                </CallFunc>
              </CallFunc>
            </Discard>
          </If>
          <Discard fromlineno="388" tolineno="388" lineno="388">
            <CallFunc fromlineno="388" tolineno="388" lineno="388" func="Name(filter_environment)">
              <Name fromlineno="388" tolineno="388" lineno="388" name="filter_environment"/>
              <Name fromlineno="388" tolineno="388" lineno="388" name="good_vars"/>
            </CallFunc>
          </Discard>
        </If>
      </Function>
      <Function fromlineno="390" tolineno="396" lineno="390">
        <Arguments fromlineno="390" tolineno="390" lineno="None" format_args=""/>
        <For fromlineno="394" tolineno="396" lineno="394">
          <AssName fromlineno="394" tolineno="394" lineno="394" name="s"/>
          <CallFunc fromlineno="394" tolineno="394" lineno="394" func="Getattr(keys)">
            <Getattr fromlineno="394" tolineno="394" lineno="394" attrname="keys" expr="os.environ">
              <Getattr fromlineno="394" tolineno="394" lineno="394" attrname="environ" expr="os">
                <Name fromlineno="394" tolineno="394" lineno="394" name="os"/>
              </Getattr>
            </Getattr>
          </CallFunc>
          <Discard fromlineno="395" tolineno="395" lineno="395">
            <CallFunc fromlineno="395" tolineno="395" lineno="395" func="Getattr(unsetenv)">
              <Getattr fromlineno="395" tolineno="395" lineno="395" attrname="unsetenv" expr="os">
                <Name fromlineno="395" tolineno="395" lineno="395" name="os"/>
              </Getattr>
              <Name fromlineno="395" tolineno="395" lineno="395" name="s"/>
            </CallFunc>
          </Discard>
          <Delete fromlineno="396" tolineno="396" lineno="396">
            <Subscript fromlineno="396" tolineno="396" lineno="396">
              <Getattr fromlineno="396" tolineno="396" lineno="396" attrname="environ" expr="os">
                <Name fromlineno="396" tolineno="396" lineno="396" name="os"/>
              </Getattr>
              <Index fromlineno="396" tolineno="396" lineno="None">
                <Name fromlineno="396" tolineno="396" lineno="396" name="s"/>
              </Index>
            </Subscript>
          </Delete>
        </For>
      </Function>
      <Function fromlineno="398" tolineno="409" lineno="398">
        <Arguments fromlineno="398" tolineno="398" lineno="None" format_args="topdir">
          <AssName fromlineno="398" tolineno="398" lineno="398" name="topdir"/>
        </Arguments>
        <For fromlineno="401" tolineno="408" lineno="401">
          <Tuple fromlineno="401" tolineno="401" lineno="401">
            <AssName fromlineno="401" tolineno="401" lineno="401" name="root"/>
            <AssName fromlineno="401" tolineno="401" lineno="401" name="dirs"/>
            <AssName fromlineno="401" tolineno="401" lineno="401" name="files"/>
          </Tuple>
          <CallFunc fromlineno="401" tolineno="401" lineno="401" func="Getattr(walk)">
            <Getattr fromlineno="401" tolineno="401" lineno="401" attrname="walk" expr="os">
              <Name fromlineno="401" tolineno="401" lineno="401" name="os"/>
            </Getattr>
            <Name fromlineno="401" tolineno="401" lineno="401" name="topdir"/>
            <Keyword fromlineno="401" tolineno="401" lineno="None">
              <Const fromlineno="401" tolineno="401" lineno="401" type="bool">False</Const>
            </Keyword>
          </CallFunc>
          <For fromlineno="402" tolineno="403" lineno="402">
            <AssName fromlineno="402" tolineno="402" lineno="402" name="name"/>
            <Name fromlineno="402" tolineno="402" lineno="402" name="files"/>
            <Discard fromlineno="403" tolineno="403" lineno="403">
              <CallFunc fromlineno="403" tolineno="403" lineno="403" func="Getattr(remove)">
                <Getattr fromlineno="403" tolineno="403" lineno="403" attrname="remove" expr="os">
                  <Name fromlineno="403" tolineno="403" lineno="403" name="os"/>
                </Getattr>
                <CallFunc fromlineno="403" tolineno="403" lineno="403" func="Getattr(join)">
                  <Getattr fromlineno="403" tolineno="403" lineno="403" attrname="join" expr="os.path">
                    <Getattr fromlineno="403" tolineno="403" lineno="403" attrname="path" expr="os">
                      <Name fromlineno="403" tolineno="403" lineno="403" name="os"/>
                    </Getattr>
                  </Getattr>
                  <Name fromlineno="403" tolineno="403" lineno="403" name="root"/>
                  <Name fromlineno="403" tolineno="403" lineno="403" name="name"/>
                </CallFunc>
              </CallFunc>
            </Discard>
          </For>
          <For fromlineno="404" tolineno="408" lineno="404">
            <AssName fromlineno="404" tolineno="404" lineno="404" name="name"/>
            <Name fromlineno="404" tolineno="404" lineno="404" name="dirs"/>
            <If fromlineno="405" tolineno="408" lineno="405">
              <CallFunc fromlineno="405" tolineno="405" lineno="405" func="Getattr(islink)">
                <Getattr fromlineno="405" tolineno="405" lineno="405" attrname="islink" expr="os.path">
                  <Getattr fromlineno="405" tolineno="405" lineno="405" attrname="path" expr="os">
                    <Name fromlineno="405" tolineno="405" lineno="405" name="os"/>
                  </Getattr>
                </Getattr>
                <CallFunc fromlineno="405" tolineno="405" lineno="405" func="Getattr(join)">
                  <Getattr fromlineno="405" tolineno="405" lineno="405" attrname="join" expr="os.path">
                    <Getattr fromlineno="405" tolineno="405" lineno="405" attrname="path" expr="os">
                      <Name fromlineno="405" tolineno="405" lineno="405" name="os"/>
                    </Getattr>
                  </Getattr>
                  <Name fromlineno="405" tolineno="405" lineno="405" name="root"/>
                  <Name fromlineno="405" tolineno="405" lineno="405" name="name"/>
                </CallFunc>
              </CallFunc>
              <Discard fromlineno="406" tolineno="406" lineno="406">
                <CallFunc fromlineno="406" tolineno="406" lineno="406" func="Getattr(remove)">
                  <Getattr fromlineno="406" tolineno="406" lineno="406" attrname="remove" expr="os">
                    <Name fromlineno="406" tolineno="406" lineno="406" name="os"/>
                  </Getattr>
                  <CallFunc fromlineno="406" tolineno="406" lineno="406" func="Getattr(join)">
                    <Getattr fromlineno="406" tolineno="406" lineno="406" attrname="join" expr="os.path">
                      <Getattr fromlineno="406" tolineno="406" lineno="406" attrname="path" expr="os">
                        <Name fromlineno="406" tolineno="406" lineno="406" name="os"/>
                      </Getattr>
                    </Getattr>
                    <Name fromlineno="406" tolineno="406" lineno="406" name="root"/>
                    <Name fromlineno="406" tolineno="406" lineno="406" name="name"/>
                  </CallFunc>
                </CallFunc>
              </Discard>
              <Discard fromlineno="408" tolineno="408" lineno="408">
                <CallFunc fromlineno="408" tolineno="408" lineno="408" func="Getattr(rmdir)">
                  <Getattr fromlineno="408" tolineno="408" lineno="408" attrname="rmdir" expr="os">
                    <Name fromlineno="408" tolineno="408" lineno="408" name="os"/>
                  </Getattr>
                  <CallFunc fromlineno="408" tolineno="408" lineno="408" func="Getattr(join)">
                    <Getattr fromlineno="408" tolineno="408" lineno="408" attrname="join" expr="os.path">
                      <Getattr fromlineno="408" tolineno="408" lineno="408" attrname="path" expr="os">
                        <Name fromlineno="408" tolineno="408" lineno="408" name="os"/>
                      </Getattr>
                    </Getattr>
                    <Name fromlineno="408" tolineno="408" lineno="408" name="root"/>
                    <Name fromlineno="408" tolineno="408" lineno="408" name="name"/>
                  </CallFunc>
                </CallFunc>
              </Discard>
            </If>
          </For>
        </For>
        <Discard fromlineno="409" tolineno="409" lineno="409">
          <CallFunc fromlineno="409" tolineno="409" lineno="409" func="Getattr(rmdir)">
            <Getattr fromlineno="409" tolineno="409" lineno="409" attrname="rmdir" expr="os">
              <Name fromlineno="409" tolineno="409" lineno="409" name="os"/>
            </Getattr>
            <Name fromlineno="409" tolineno="409" lineno="409" name="topdir"/>
          </CallFunc>
        </Discard>
      </Function>
      <Function fromlineno="415" tolineno="421" lineno="415">
        <Arguments fromlineno="415" tolineno="415" lineno="None" format_args="var, suffixes, d">
          <AssName fromlineno="415" tolineno="415" lineno="415" name="var"/>
          <AssName fromlineno="415" tolineno="415" lineno="415" name="suffixes"/>
          <AssName fromlineno="415" tolineno="415" lineno="415" name="d"/>
        </Arguments>
        <For fromlineno="418" tolineno="420" lineno="418">
          <AssName fromlineno="418" tolineno="418" lineno="418" name="suffix"/>
          <Name fromlineno="418" tolineno="418" lineno="418" name="suffixes"/>
          <If fromlineno="419" tolineno="420" lineno="419">
            <CallFunc fromlineno="419" tolineno="419" lineno="419" func="Getattr(endswith)">
              <Getattr fromlineno="419" tolineno="419" lineno="419" attrname="endswith" expr="var">
                <Name fromlineno="419" tolineno="419" lineno="419" name="var"/>
              </Getattr>
              <Name fromlineno="419" tolineno="419" lineno="419" name="suffix"/>
            </CallFunc>
            <Return fromlineno="420" tolineno="420" lineno="420">
              <CallFunc fromlineno="420" tolineno="420" lineno="420" func="Getattr(replace)">
                <Getattr fromlineno="420" tolineno="420" lineno="420" attrname="replace" expr="var">
                  <Name fromlineno="420" tolineno="420" lineno="420" name="var"/>
                </Getattr>
                <Name fromlineno="420" tolineno="420" lineno="420" name="suffix"/>
                <Const fromlineno="420" tolineno="420" lineno="420" type="str">''</Const>
              </CallFunc>
            </Return>
          </If>
        </For>
        <Return fromlineno="421" tolineno="421" lineno="421">
          <Name fromlineno="421" tolineno="421" lineno="421" name="var"/>
        </Return>
      </Function>
    </Module>
    <Module fromlineno="0" tolineno="283" lineno="0" name="bb.event">
      <Import fromlineno="25" tolineno="25" lineno="25">
        <ImportName name="os"/>
        <ImportName name="re"/>
      </Import>
      <Import fromlineno="26" tolineno="26" lineno="26">
        <ImportName name="bb.utils"/>
      </Import>
      <Class fromlineno="28" tolineno="41" lineno="28">
        <Assign fromlineno="30" tolineno="30" lineno="30" targets="[&lt;AssName(type) l.30 [bb.event] at Ox993526c&gt;]" value="'Event'">
          <AssName fromlineno="30" tolineno="30" lineno="30" name="type"/>
          <Const fromlineno="30" tolineno="30" lineno="30" type="str">'Event'</Const>
        </Assign>
        <Function fromlineno="32" tolineno="33" lineno="32">
          <Arguments fromlineno="32" tolineno="32" lineno="None" format_args="self, d">
            <AssName fromlineno="32" tolineno="32" lineno="32" name="self"/>
            <AssName fromlineno="32" tolineno="32" lineno="32" name="d"/>
          </Arguments>
          <Assign fromlineno="33" tolineno="33" lineno="33" targets="[&lt;AssAttr(_data) l.33 [bb.event] at Ox920c18c&gt;]" value="d">
            <AssAttr fromlineno="33" tolineno="33" lineno="33" attrname="_data" expr="self">
              <Name fromlineno="33" tolineno="33" lineno="33" name="self"/>
            </AssAttr>
            <Name fromlineno="33" tolineno="33" lineno="33" name="d"/>
          </Assign>
        </Function>
        <Function fromlineno="35" tolineno="36" lineno="35">
          <Arguments fromlineno="35" tolineno="35" lineno="None" format_args="self">
            <AssName fromlineno="35" tolineno="35" lineno="35" name="self"/>
          </Arguments>
          <Return fromlineno="36" tolineno="36" lineno="36">
            <Getattr fromlineno="36" tolineno="36" lineno="36" attrname="_data" expr="self">
              <Name fromlineno="36" tolineno="36" lineno="36" name="self"/>
            </Getattr>
          </Return>
        </Function>
        <Function fromlineno="38" tolineno="39" lineno="38">
          <Arguments fromlineno="38" tolineno="38" lineno="None" format_args="self, data">
            <AssName fromlineno="38" tolineno="38" lineno="38" name="self"/>
            <AssName fromlineno="38" tolineno="38" lineno="38" name="data"/>
          </Arguments>
          <Assign fromlineno="39" tolineno="39" lineno="39" targets="[&lt;AssAttr(_data) l.39 [bb.event] at Ox920c56c&gt;]" value="data">
            <AssAttr fromlineno="39" tolineno="39" lineno="39" attrname="_data" expr="self">
              <Name fromlineno="39" tolineno="39" lineno="39" name="self"/>
            </AssAttr>
            <Name fromlineno="39" tolineno="39" lineno="39" name="data"/>
          </Assign>
        </Function>
        <Assign fromlineno="41" tolineno="41" lineno="41" targets="[&lt;AssName(data) l.41 [bb.event] at Ox920c5cc&gt;]" value="property(getData, setData, None, 'data property')">
          <AssName fromlineno="41" tolineno="41" lineno="41" name="data"/>
          <CallFunc fromlineno="41" tolineno="41" lineno="41" func="Name(property)">
            <Name fromlineno="41" tolineno="41" lineno="41" name="property"/>
            <Name fromlineno="41" tolineno="41" lineno="41" name="getData"/>
            <Name fromlineno="41" tolineno="41" lineno="41" name="setData"/>
            <Const fromlineno="41" tolineno="41" lineno="41" type="NoneType">None</Const>
            <Const fromlineno="41" tolineno="41" lineno="41" type="str">'data property'</Const>
          </CallFunc>
        </Assign>
      </Class>
      <Assign fromlineno="43" tolineno="43" lineno="43" targets="[&lt;AssName(NotHandled) l.43 [bb.event] at Ox920c70c&gt;]" value="0">
        <AssName fromlineno="43" tolineno="43" lineno="43" name="NotHandled"/>
        <Const fromlineno="43" tolineno="43" lineno="43" type="int">0</Const>
      </Assign>
      <Assign fromlineno="44" tolineno="44" lineno="44" targets="[&lt;AssName(Handled) l.44 [bb.event] at Ox920c8ac&gt;]" value="1">
        <AssName fromlineno="44" tolineno="44" lineno="44" name="Handled"/>
        <Const fromlineno="44" tolineno="44" lineno="44" type="int">1</Const>
      </Assign>
      <Assign fromlineno="46" tolineno="46" lineno="46" targets="[&lt;AssName(Registered) l.46 [bb.event] at Ox920c9ac&gt;]" value="10">
        <AssName fromlineno="46" tolineno="46" lineno="46" name="Registered"/>
        <Const fromlineno="46" tolineno="46" lineno="46" type="int">10</Const>
      </Assign>
      <Assign fromlineno="47" tolineno="47" lineno="47" targets="[&lt;AssName(AlreadyRegistered) l.47 [bb.event] at Ox920ca2c&gt;]" value="14">
        <AssName fromlineno="47" tolineno="47" lineno="47" name="AlreadyRegistered"/>
        <Const fromlineno="47" tolineno="47" lineno="47" type="int">14</Const>
      </Assign>
      <Assign fromlineno="50" tolineno="50" lineno="50" targets="[&lt;AssName(_handlers) l.50 [bb.event] at Ox920cacc&gt;]" value="[]">
        <AssName fromlineno="50" tolineno="50" lineno="50" name="_handlers"/>
        <List fromlineno="50" tolineno="50" lineno="50"/>
      </Assign>
      <Assign fromlineno="51" tolineno="51" lineno="51" targets="[&lt;AssName(_handlers_dict) l.51 [bb.event] at Ox920cb6c&gt;]" value="{}">
        <AssName fromlineno="51" tolineno="51" lineno="51" name="_handlers_dict"/>
        <Dict fromlineno="51" tolineno="51" lineno="51"/>
      </Assign>
      <Function fromlineno="53" tolineno="55" lineno="53">
        <Arguments fromlineno="53" tolineno="53" lineno="None" format_args="event">
          <AssName fromlineno="53" tolineno="53" lineno="53" name="event"/>
        </Arguments>
        <Return fromlineno="55" tolineno="55" lineno="55">
          <Name fromlineno="55" tolineno="55" lineno="55" name="NotHandled"/>
        </Return>
      </Function>
      <Function fromlineno="57" tolineno="60" lineno="57">
        <Arguments fromlineno="57" tolineno="57" lineno="None" format_args=""/>
        <Assign fromlineno="58" tolineno="58" lineno="58" targets="[&lt;AssName(tmp) l.58 [bb.event] at Ox920cd6c&gt;]" value="'def tmpHandler(e):\n\t&quot;&quot;&quot;heh&quot;&quot;&quot;\n\treturn NotHandled'">
          <AssName fromlineno="58" tolineno="58" lineno="58" name="tmp"/>
          <Const fromlineno="58" tolineno="58" lineno="58" type="str">'def tmpHandler(e):\n\t"""heh"""\n\treturn NotHandled'</Const>
        </Assign>
        <Assign fromlineno="59" tolineno="59" lineno="59" targets="[&lt;AssName(comp) l.59 [bb.event] at Ox920ce4c&gt;]" value="bb.utils.better_compile(tmp, 'tmpHandler(e)', 'bb.event.defaultTmpHandler')">
          <AssName fromlineno="59" tolineno="59" lineno="59" name="comp"/>
          <CallFunc fromlineno="59" tolineno="59" lineno="59" func="Getattr(better_compile)">
            <Getattr fromlineno="59" tolineno="59" lineno="59" attrname="better_compile" expr="bb.utils">
              <Getattr fromlineno="59" tolineno="59" lineno="59" attrname="utils" expr="bb">
                <Name fromlineno="59" tolineno="59" lineno="59" name="bb"/>
              </Getattr>
            </Getattr>
            <Name fromlineno="59" tolineno="59" lineno="59" name="tmp"/>
            <Const fromlineno="59" tolineno="59" lineno="59" type="str">'tmpHandler(e)'</Const>
            <Const fromlineno="59" tolineno="59" lineno="59" type="str">'bb.event.defaultTmpHandler'</Const>
          </CallFunc>
        </Assign>
        <Return fromlineno="60" tolineno="60" lineno="60">
          <Name fromlineno="60" tolineno="60" lineno="60" name="comp"/>
        </Return>
      </Function>
      <Function fromlineno="62" tolineno="72" lineno="62">
        <Arguments fromlineno="62" tolineno="62" lineno="None" format_args="event">
          <AssName fromlineno="62" tolineno="62" lineno="62" name="event"/>
        </Arguments>
        <For fromlineno="64" tolineno="71" lineno="64">
          <AssName fromlineno="64" tolineno="64" lineno="64" name="h"/>
          <Name fromlineno="64" tolineno="64" lineno="64" name="_handlers"/>
          <If fromlineno="65" tolineno="71" lineno="65">
            <Compare fromlineno="65" tolineno="65" lineno="65" op="('==', &lt;Const(str) l.65 [bb.event] at Ox981f24c&gt;)">
              <Getattr fromlineno="65" tolineno="65" lineno="65" attrname="__name__" expr="type(h)">
                <CallFunc fromlineno="65" tolineno="65" lineno="65" func="Name(type)">
                  <Name fromlineno="65" tolineno="65" lineno="65" name="type"/>
                  <Name fromlineno="65" tolineno="65" lineno="65" name="h"/>
                </CallFunc>
              </Getattr>
              <Const fromlineno="65" tolineno="65" lineno="65" type="str">'code'</Const>
            </Compare>
            <Exec fromlineno="66" tolineno="66" lineno="66">
              <Name fromlineno="66" tolineno="66" lineno="66" name="h"/>
            </Exec>
            <If fromlineno="67" tolineno="68" lineno="67">
              <Compare fromlineno="67" tolineno="67" lineno="67" op="('==', &lt;Name(Handled) l.67 [bb.event] at Ox981f3ec&gt;)">
                <CallFunc fromlineno="67" tolineno="67" lineno="67" func="Name(tmpHandler)">
                  <Name fromlineno="67" tolineno="67" lineno="67" name="tmpHandler"/>
                  <Name fromlineno="67" tolineno="67" lineno="67" name="event"/>
                </CallFunc>
                <Name fromlineno="67" tolineno="67" lineno="67" name="Handled"/>
              </Compare>
              <Return fromlineno="68" tolineno="68" lineno="68">
                <Name fromlineno="68" tolineno="68" lineno="68" name="Handled"/>
              </Return>
            </If>
            <If fromlineno="70" tolineno="71" lineno="70">
              <Compare fromlineno="70" tolineno="70" lineno="70" op="('==', &lt;Name(Handled) l.70 [bb.event] at Ox981f7cc&gt;)">
                <CallFunc fromlineno="70" tolineno="70" lineno="70" func="Name(h)">
                  <Name fromlineno="70" tolineno="70" lineno="70" name="h"/>
                  <Name fromlineno="70" tolineno="70" lineno="70" name="event"/>
                </CallFunc>
                <Name fromlineno="70" tolineno="70" lineno="70" name="Handled"/>
              </Compare>
              <Return fromlineno="71" tolineno="71" lineno="71">
                <Name fromlineno="71" tolineno="71" lineno="71" name="Handled"/>
              </Return>
            </If>
          </If>
        </For>
        <Return fromlineno="72" tolineno="72" lineno="72">
          <Name fromlineno="72" tolineno="72" lineno="72" name="NotHandled"/>
        </Return>
      </Function>
      <Function fromlineno="74" tolineno="89" lineno="74">
        <Arguments fromlineno="74" tolineno="74" lineno="None" format_args="name, handler">
          <AssName fromlineno="74" tolineno="74" lineno="74" name="name"/>
          <AssName fromlineno="74" tolineno="74" lineno="74" name="handler"/>
        </Arguments>
        <If fromlineno="78" tolineno="79" lineno="78">
          <Compare fromlineno="78" tolineno="78" lineno="78" op="('in', &lt;Name(_handlers_dict) l.78 [bb.event] at Ox981f8ac&gt;)">
            <Name fromlineno="78" tolineno="78" lineno="78" name="name"/>
            <Name fromlineno="78" tolineno="78" lineno="78" name="_handlers_dict"/>
          </Compare>
          <Return fromlineno="79" tolineno="79" lineno="79">
            <Name fromlineno="79" tolineno="79" lineno="79" name="AlreadyRegistered"/>
          </Return>
        </If>
        <If fromlineno="81" tolineno="89" lineno="81">
          <Compare fromlineno="81" tolineno="81" lineno="81" op="('is not', &lt;Const(NoneType) l.81 [bb.event] at Ox981fa6c&gt;)">
            <Name fromlineno="81" tolineno="81" lineno="81" name="handler"/>
            <Const fromlineno="81" tolineno="81" lineno="81" type="NoneType">None</Const>
          </Compare>
          <If fromlineno="83" tolineno="86" lineno="83">
            <Compare fromlineno="83" tolineno="83" lineno="83" op="('==', &lt;Const(str) l.83 [bb.event] at Ox981fc4c&gt;)">
              <Getattr fromlineno="83" tolineno="83" lineno="83" attrname="__name__" expr="type(handler)">
                <CallFunc fromlineno="83" tolineno="83" lineno="83" func="Name(type)">
                  <Name fromlineno="83" tolineno="83" lineno="83" name="type"/>
                  <Name fromlineno="83" tolineno="83" lineno="83" name="handler"/>
                </CallFunc>
              </Getattr>
              <Const fromlineno="83" tolineno="83" lineno="83" type="str">'str'</Const>
            </Compare>
            <Discard fromlineno="84" tolineno="84" lineno="84">
              <CallFunc fromlineno="84" tolineno="84" lineno="84" func="Name(_registerCode)">
                <Name fromlineno="84" tolineno="84" lineno="84" name="_registerCode"/>
                <Name fromlineno="84" tolineno="84" lineno="84" name="handler"/>
              </CallFunc>
            </Discard>
            <Discard fromlineno="86" tolineno="86" lineno="86">
              <CallFunc fromlineno="86" tolineno="86" lineno="86" func="Getattr(append)">
                <Getattr fromlineno="86" tolineno="86" lineno="86" attrname="append" expr="_handlers">
                  <Name fromlineno="86" tolineno="86" lineno="86" name="_handlers"/>
                </Getattr>
                <Name fromlineno="86" tolineno="86" lineno="86" name="handler"/>
              </CallFunc>
            </Discard>
          </If>
          <Assign fromlineno="88" tolineno="88" lineno="88" targets="[&lt;Subscript() l.88 [bb.event] at Ox981fdac&gt;]" value="1">
            <Subscript fromlineno="88" tolineno="88" lineno="88">
              <Name fromlineno="88" tolineno="88" lineno="88" name="_handlers_dict"/>
              <Index fromlineno="88" tolineno="88" lineno="None">
                <Name fromlineno="88" tolineno="88" lineno="88" name="name"/>
              </Index>
            </Subscript>
            <Const fromlineno="88" tolineno="88" lineno="88" type="int">1</Const>
          </Assign>
          <Return fromlineno="89" tolineno="89" lineno="89">
            <Name fromlineno="89" tolineno="89" lineno="89" name="Registered"/>
          </Return>
        </If>
      </Function>
      <Function fromlineno="91" tolineno="102" lineno="91">
        <Arguments fromlineno="91" tolineno="91" lineno="None" format_args="handlerStr">
          <AssName fromlineno="91" tolineno="91" lineno="91" name="handlerStr"/>
        </Arguments>
        <Assign fromlineno="99" tolineno="99" lineno="99" targets="[&lt;AssName(tmp) l.99 [bb.event] at Ox981ffec&gt;]" value="('def tmpHandler(e):\n%s') % (handlerStr)">
          <AssName fromlineno="99" tolineno="99" lineno="99" name="tmp"/>
          <BinOp fromlineno="99" tolineno="99" lineno="99" op="%" left="'def tmpHandler(e):\n%s'" right="handlerStr">
            <Const fromlineno="99" tolineno="99" lineno="99" type="str">'def tmpHandler(e):\n%s'</Const>
            <Name fromlineno="99" tolineno="99" lineno="99" name="handlerStr"/>
          </BinOp>
        </Assign>
        <Assign fromlineno="100" tolineno="100" lineno="100" targets="[&lt;AssName(comp) l.100 [bb.event] at Ox982336c&gt;]" value="bb.utils.better_compile(tmp, 'tmpHandler(e)', 'bb.event._registerCode')">
          <AssName fromlineno="100" tolineno="100" lineno="100" name="comp"/>
          <CallFunc fromlineno="100" tolineno="100" lineno="100" func="Getattr(better_compile)">
            <Getattr fromlineno="100" tolineno="100" lineno="100" attrname="better_compile" expr="bb.utils">
              <Getattr fromlineno="100" tolineno="100" lineno="100" attrname="utils" expr="bb">
                <Name fromlineno="100" tolineno="100" lineno="100" name="bb"/>
              </Getattr>
            </Getattr>
            <Name fromlineno="100" tolineno="100" lineno="100" name="tmp"/>
            <Const fromlineno="100" tolineno="100" lineno="100" type="str">'tmpHandler(e)'</Const>
            <Const fromlineno="100" tolineno="100" lineno="100" type="str">'bb.event._registerCode'</Const>
          </CallFunc>
        </Assign>
        <Discard fromlineno="102" tolineno="102" lineno="102">
          <CallFunc fromlineno="102" tolineno="102" lineno="102" func="Getattr(append)">
            <Getattr fromlineno="102" tolineno="102" lineno="102" attrname="append" expr="_handlers">
              <Name fromlineno="102" tolineno="102" lineno="102" name="_handlers"/>
            </Getattr>
            <Name fromlineno="102" tolineno="102" lineno="102" name="comp"/>
          </CallFunc>
        </Discard>
      </Function>
      <Function fromlineno="104" tolineno="111" lineno="104">
        <Arguments fromlineno="104" tolineno="104" lineno="None" format_args="name, handler">
          <AssName fromlineno="104" tolineno="104" lineno="104" name="name"/>
          <AssName fromlineno="104" tolineno="104" lineno="104" name="handler"/>
        </Arguments>
        <Discard fromlineno="107" tolineno="107" lineno="107">
          <CallFunc fromlineno="107" tolineno="107" lineno="107" func="Getattr(pop)">
            <Getattr fromlineno="107" tolineno="107" lineno="107" attrname="pop" expr="_handlers_dict">
              <Name fromlineno="107" tolineno="107" lineno="107" name="_handlers_dict"/>
            </Getattr>
            <Name fromlineno="107" tolineno="107" lineno="107" name="name"/>
          </CallFunc>
        </Discard>
        <If fromlineno="108" tolineno="111" lineno="108">
          <Compare fromlineno="108" tolineno="108" lineno="108" op="('==', &lt;Const(str) l.108 [bb.event] at Ox982364c&gt;)">
            <Getattr fromlineno="108" tolineno="108" lineno="108" attrname="__name__" expr="type(handler)">
              <CallFunc fromlineno="108" tolineno="108" lineno="108" func="Name(type)">
                <Name fromlineno="108" tolineno="108" lineno="108" name="type"/>
                <Name fromlineno="108" tolineno="108" lineno="108" name="handler"/>
              </CallFunc>
            </Getattr>
            <Const fromlineno="108" tolineno="108" lineno="108" type="str">'str'</Const>
          </Compare>
          <Return fromlineno="109" tolineno="109" lineno="109">
            <CallFunc fromlineno="109" tolineno="109" lineno="109" func="Name(_removeCode)">
              <Name fromlineno="109" tolineno="109" lineno="109" name="_removeCode"/>
              <Name fromlineno="109" tolineno="109" lineno="109" name="handler"/>
            </CallFunc>
          </Return>
          <Discard fromlineno="111" tolineno="111" lineno="111">
            <CallFunc fromlineno="111" tolineno="111" lineno="111" func="Getattr(remove)">
              <Getattr fromlineno="111" tolineno="111" lineno="111" attrname="remove" expr="_handlers">
                <Name fromlineno="111" tolineno="111" lineno="111" name="_handlers"/>
              </Getattr>
              <Name fromlineno="111" tolineno="111" lineno="111" name="handler"/>
            </CallFunc>
          </Discard>
        </If>
      </Function>
      <Function fromlineno="113" tolineno="118" lineno="113">
        <Arguments fromlineno="113" tolineno="113" lineno="None" format_args="handlerStr">
          <AssName fromlineno="113" tolineno="113" lineno="113" name="handlerStr"/>
        </Arguments>
        <Assign fromlineno="116" tolineno="116" lineno="116" targets="[&lt;AssName(tmp) l.116 [bb.event] at Ox9823a0c&gt;]" value="('def tmpHandler(e):\n%s') % (handlerStr)">
          <AssName fromlineno="116" tolineno="116" lineno="116" name="tmp"/>
          <BinOp fromlineno="116" tolineno="116" lineno="116" op="%" left="'def tmpHandler(e):\n%s'" right="handlerStr">
            <Const fromlineno="116" tolineno="116" lineno="116" type="str">'def tmpHandler(e):\n%s'</Const>
            <Name fromlineno="116" tolineno="116" lineno="116" name="handlerStr"/>
          </BinOp>
        </Assign>
        <Assign fromlineno="117" tolineno="117" lineno="117" targets="[&lt;AssName(comp) l.117 [bb.event] at Ox9823aec&gt;]" value="bb.utils.better_compile(tmp, 'tmpHandler(e)', 'bb.event._removeCode')">
          <AssName fromlineno="117" tolineno="117" lineno="117" name="comp"/>
          <CallFunc fromlineno="117" tolineno="117" lineno="117" func="Getattr(better_compile)">
            <Getattr fromlineno="117" tolineno="117" lineno="117" attrname="better_compile" expr="bb.utils">
              <Getattr fromlineno="117" tolineno="117" lineno="117" attrname="utils" expr="bb">
                <Name fromlineno="117" tolineno="117" lineno="117" name="bb"/>
              </Getattr>
            </Getattr>
            <Name fromlineno="117" tolineno="117" lineno="117" name="tmp"/>
            <Const fromlineno="117" tolineno="117" lineno="117" type="str">'tmpHandler(e)'</Const>
            <Const fromlineno="117" tolineno="117" lineno="117" type="str">'bb.event._removeCode'</Const>
          </CallFunc>
        </Assign>
        <Discard fromlineno="118" tolineno="118" lineno="118">
          <CallFunc fromlineno="118" tolineno="118" lineno="118" func="Getattr(remove)">
            <Getattr fromlineno="118" tolineno="118" lineno="118" attrname="remove" expr="_handlers">
              <Name fromlineno="118" tolineno="118" lineno="118" name="_handlers"/>
            </Getattr>
            <Name fromlineno="118" tolineno="118" lineno="118" name="comp"/>
          </CallFunc>
        </Discard>
      </Function>
      <Function fromlineno="120" tolineno="125" lineno="120">
        <Arguments fromlineno="120" tolineno="120" lineno="None" format_args="e">
          <AssName fromlineno="120" tolineno="120" lineno="120" name="e"/>
        </Arguments>
        <If fromlineno="122" tolineno="125" lineno="122">
          <Compare fromlineno="122" tolineno="122" lineno="122" op="('==', &lt;Const(NoneType) l.122 [bb.event] at Ox9823e0c&gt;)">
            <CallFunc fromlineno="122" tolineno="122" lineno="122" func="Name(getattr)">
              <Name fromlineno="122" tolineno="122" lineno="122" name="getattr"/>
              <Name fromlineno="122" tolineno="122" lineno="122" name="e"/>
              <Const fromlineno="122" tolineno="122" lineno="122" type="str">'__name__'</Const>
              <Const fromlineno="122" tolineno="122" lineno="122" type="NoneType">None</Const>
            </CallFunc>
            <Const fromlineno="122" tolineno="122" lineno="122" type="NoneType">None</Const>
          </Compare>
          <Return fromlineno="123" tolineno="123" lineno="123">
            <Getattr fromlineno="123" tolineno="123" lineno="123" attrname="__name__" expr="e.__class__">
              <Getattr fromlineno="123" tolineno="123" lineno="123" attrname="__class__" expr="e">
                <Name fromlineno="123" tolineno="123" lineno="123" name="e"/>
              </Getattr>
            </Getattr>
          </Return>
          <Return fromlineno="125" tolineno="125" lineno="125">
            <Getattr fromlineno="125" tolineno="125" lineno="125" attrname="__name__" expr="e">
              <Name fromlineno="125" tolineno="125" lineno="125" name="e"/>
            </Getattr>
          </Return>
        </If>
      </Function>
      <Class fromlineno="127" tolineno="127" lineno="127">
        <Name fromlineno="127" tolineno="127" lineno="127" name="Event"/>
      </Class>
      <Class fromlineno="130" tolineno="145" lineno="130">
        <Name fromlineno="130" tolineno="130" lineno="130" name="Event"/>
        <Function fromlineno="133" tolineno="136" lineno="133">
          <Arguments fromlineno="133" tolineno="133" lineno="None" format_args="self, targets, stampfns, d">
            <AssName fromlineno="133" tolineno="133" lineno="133" name="self"/>
            <AssName fromlineno="133" tolineno="133" lineno="133" name="targets"/>
            <AssName fromlineno="133" tolineno="133" lineno="133" name="stampfns"/>
            <AssName fromlineno="133" tolineno="133" lineno="133" name="d"/>
          </Arguments>
          <Assign fromlineno="134" tolineno="134" lineno="134" targets="[&lt;AssAttr(_targets) l.134 [bb.event] at Ox98281ac&gt;]" value="targets">
            <AssAttr fromlineno="134" tolineno="134" lineno="134" attrname="_targets" expr="self">
              <Name fromlineno="134" tolineno="134" lineno="134" name="self"/>
            </AssAttr>
            <Name fromlineno="134" tolineno="134" lineno="134" name="targets"/>
          </Assign>
          <Assign fromlineno="135" tolineno="135" lineno="135" targets="[&lt;AssAttr(_stampfns) l.135 [bb.event] at Ox982826c&gt;]" value="stampfns">
            <AssAttr fromlineno="135" tolineno="135" lineno="135" attrname="_stampfns" expr="self">
              <Name fromlineno="135" tolineno="135" lineno="135" name="self"/>
            </AssAttr>
            <Name fromlineno="135" tolineno="135" lineno="135" name="stampfns"/>
          </Assign>
          <Discard fromlineno="136" tolineno="136" lineno="136">
            <CallFunc fromlineno="136" tolineno="136" lineno="136" func="Getattr(__init__)">
              <Getattr fromlineno="136" tolineno="136" lineno="136" attrname="__init__" expr="Event">
                <Name fromlineno="136" tolineno="136" lineno="136" name="Event"/>
              </Getattr>
              <Name fromlineno="136" tolineno="136" lineno="136" name="self"/>
              <Name fromlineno="136" tolineno="136" lineno="136" name="d"/>
            </CallFunc>
          </Discard>
        </Function>
        <Function fromlineno="138" tolineno="139" lineno="138">
          <Arguments fromlineno="138" tolineno="138" lineno="None" format_args="self">
            <AssName fromlineno="138" tolineno="138" lineno="138" name="self"/>
          </Arguments>
          <Return fromlineno="139" tolineno="139" lineno="139">
            <Getattr fromlineno="139" tolineno="139" lineno="139" attrname="_stampfns" expr="self">
              <Name fromlineno="139" tolineno="139" lineno="139" name="self"/>
            </Getattr>
          </Return>
        </Function>
        <Function fromlineno="141" tolineno="142" lineno="141">
          <Arguments fromlineno="141" tolineno="141" lineno="None" format_args="self">
            <AssName fromlineno="141" tolineno="141" lineno="141" name="self"/>
          </Arguments>
          <Return fromlineno="142" tolineno="142" lineno="142">
            <Getattr fromlineno="142" tolineno="142" lineno="142" attrname="_targets" expr="self">
              <Name fromlineno="142" tolineno="142" lineno="142" name="self"/>
            </Getattr>
          </Return>
        </Function>
        <Assign fromlineno="144" tolineno="144" lineno="144" targets="[&lt;AssName(stampPrefix) l.144 [bb.event] at Ox9828aac&gt;]" value="property(getStampPrefix)">
          <AssName fromlineno="144" tolineno="144" lineno="144" name="stampPrefix"/>
          <CallFunc fromlineno="144" tolineno="144" lineno="144" func="Name(property)">
            <Name fromlineno="144" tolineno="144" lineno="144" name="property"/>
            <Name fromlineno="144" tolineno="144" lineno="144" name="getStampPrefix"/>
          </CallFunc>
        </Assign>
        <Assign fromlineno="145" tolineno="145" lineno="145" targets="[&lt;AssName(targets) l.145 [bb.event] at Ox98289cc&gt;]" value="property(getTargets)">
          <AssName fromlineno="145" tolineno="145" lineno="145" name="targets"/>
          <CallFunc fromlineno="145" tolineno="145" lineno="145" func="Name(property)">
            <Name fromlineno="145" tolineno="145" lineno="145" name="property"/>
            <Name fromlineno="145" tolineno="145" lineno="145" name="getTargets"/>
          </CallFunc>
        </Assign>
      </Class>
      <Class fromlineno="147" tolineno="160" lineno="147">
        <Name fromlineno="147" tolineno="147" lineno="147" name="Event"/>
        <Function fromlineno="150" tolineno="152" lineno="150">
          <Arguments fromlineno="150" tolineno="150" lineno="None" format_args="self, t, d">
            <AssName fromlineno="150" tolineno="150" lineno="150" name="self"/>
            <AssName fromlineno="150" tolineno="150" lineno="150" name="t"/>
            <AssName fromlineno="150" tolineno="150" lineno="150" name="d"/>
          </Arguments>
          <Assign fromlineno="151" tolineno="151" lineno="151" targets="[&lt;AssAttr(_pkg) l.151 [bb.event] at Ox9828d4c&gt;]" value="t">
            <AssAttr fromlineno="151" tolineno="151" lineno="151" attrname="_pkg" expr="self">
              <Name fromlineno="151" tolineno="151" lineno="151" name="self"/>
            </AssAttr>
            <Name fromlineno="151" tolineno="151" lineno="151" name="t"/>
          </Assign>
          <Discard fromlineno="152" tolineno="152" lineno="152">
            <CallFunc fromlineno="152" tolineno="152" lineno="152" func="Getattr(__init__)">
              <Getattr fromlineno="152" tolineno="152" lineno="152" attrname="__init__" expr="Event">
                <Name fromlineno="152" tolineno="152" lineno="152" name="Event"/>
              </Getattr>
              <Name fromlineno="152" tolineno="152" lineno="152" name="self"/>
              <Name fromlineno="152" tolineno="152" lineno="152" name="d"/>
            </CallFunc>
          </Discard>
        </Function>
        <Function fromlineno="154" tolineno="155" lineno="154">
          <Arguments fromlineno="154" tolineno="154" lineno="None" format_args="self">
            <AssName fromlineno="154" tolineno="154" lineno="154" name="self"/>
          </Arguments>
          <Return fromlineno="155" tolineno="155" lineno="155">
            <Getattr fromlineno="155" tolineno="155" lineno="155" attrname="_pkg" expr="self">
              <Name fromlineno="155" tolineno="155" lineno="155" name="self"/>
            </Getattr>
          </Return>
        </Function>
        <Function fromlineno="157" tolineno="158" lineno="157">
          <Arguments fromlineno="157" tolineno="157" lineno="None" format_args="self, pkg">
            <AssName fromlineno="157" tolineno="157" lineno="157" name="self"/>
            <AssName fromlineno="157" tolineno="157" lineno="157" name="pkg"/>
          </Arguments>
          <Assign fromlineno="158" tolineno="158" lineno="158" targets="[&lt;AssAttr(_pkg) l.158 [bb.event] at Ox990d12c&gt;]" value="pkg">
            <AssAttr fromlineno="158" tolineno="158" lineno="158" attrname="_pkg" expr="self">
              <Name fromlineno="158" tolineno="158" lineno="158" name="self"/>
            </AssAttr>
            <Name fromlineno="158" tolineno="158" lineno="158" name="pkg"/>
          </Assign>
        </Function>
        <Assign fromlineno="160" tolineno="160" lineno="160" targets="[&lt;AssName(pkg) l.160 [bb.event] at Ox990d0ec&gt;]" value="property(getPkg, setPkg, None, 'pkg property')">
          <AssName fromlineno="160" tolineno="160" lineno="160" name="pkg"/>
          <CallFunc fromlineno="160" tolineno="160" lineno="160" func="Name(property)">
            <Name fromlineno="160" tolineno="160" lineno="160" name="property"/>
            <Name fromlineno="160" tolineno="160" lineno="160" name="getPkg"/>
            <Name fromlineno="160" tolineno="160" lineno="160" name="setPkg"/>
            <Const fromlineno="160" tolineno="160" lineno="160" type="NoneType">None</Const>
            <Const fromlineno="160" tolineno="160" lineno="160" type="str">'pkg property'</Const>
          </CallFunc>
        </Assign>
      </Class>
      <Class fromlineno="163" tolineno="198" lineno="163">
        <Name fromlineno="163" tolineno="163" lineno="163" name="Event"/>
        <Function fromlineno="166" tolineno="170" lineno="166">
          <Arguments fromlineno="166" tolineno="166" lineno="None" format_args="self, n, p, c, failures=0">
            <AssName fromlineno="166" tolineno="166" lineno="166" name="self"/>
            <AssName fromlineno="166" tolineno="166" lineno="166" name="n"/>
            <AssName fromlineno="166" tolineno="166" lineno="166" name="p"/>
            <AssName fromlineno="166" tolineno="166" lineno="166" name="c"/>
            <AssName fromlineno="166" tolineno="166" lineno="166" name="failures"/>
            <Const fromlineno="166" tolineno="166" lineno="166" type="int">0</Const>
          </Arguments>
          <Assign fromlineno="167" tolineno="167" lineno="167" targets="[&lt;AssAttr(_name) l.167 [bb.event] at Ox982c40c&gt;]" value="n">
            <AssAttr fromlineno="167" tolineno="167" lineno="167" attrname="_name" expr="self">
              <Name fromlineno="167" tolineno="167" lineno="167" name="self"/>
            </AssAttr>
            <Name fromlineno="167" tolineno="167" lineno="167" name="n"/>
          </Assign>
          <Assign fromlineno="168" tolineno="168" lineno="168" targets="[&lt;AssAttr(_pkgs) l.168 [bb.event] at Ox982c76c&gt;]" value="p">
            <AssAttr fromlineno="168" tolineno="168" lineno="168" attrname="_pkgs" expr="self">
              <Name fromlineno="168" tolineno="168" lineno="168" name="self"/>
            </AssAttr>
            <Name fromlineno="168" tolineno="168" lineno="168" name="p"/>
          </Assign>
          <Discard fromlineno="169" tolineno="169" lineno="169">
            <CallFunc fromlineno="169" tolineno="169" lineno="169" func="Getattr(__init__)">
              <Getattr fromlineno="169" tolineno="169" lineno="169" attrname="__init__" expr="Event">
                <Name fromlineno="169" tolineno="169" lineno="169" name="Event"/>
              </Getattr>
              <Name fromlineno="169" tolineno="169" lineno="169" name="self"/>
              <Name fromlineno="169" tolineno="169" lineno="169" name="c"/>
            </CallFunc>
          </Discard>
          <Assign fromlineno="170" tolineno="170" lineno="170" targets="[&lt;AssAttr(_failures) l.170 [bb.event] at Ox982c48c&gt;]" value="failures">
            <AssAttr fromlineno="170" tolineno="170" lineno="170" attrname="_failures" expr="self">
              <Name fromlineno="170" tolineno="170" lineno="170" name="self"/>
            </AssAttr>
            <Name fromlineno="170" tolineno="170" lineno="170" name="failures"/>
          </Assign>
        </Function>
        <Function fromlineno="172" tolineno="173" lineno="172">
          <Arguments fromlineno="172" tolineno="172" lineno="None" format_args="self">
            <AssName fromlineno="172" tolineno="172" lineno="172" name="self"/>
          </Arguments>
          <Return fromlineno="173" tolineno="173" lineno="173">
            <Getattr fromlineno="173" tolineno="173" lineno="173" attrname="_pkgs" expr="self">
              <Name fromlineno="173" tolineno="173" lineno="173" name="self"/>
            </Getattr>
          </Return>
        </Function>
        <Function fromlineno="175" tolineno="176" lineno="175">
          <Arguments fromlineno="175" tolineno="175" lineno="None" format_args="self, pkgs">
            <AssName fromlineno="175" tolineno="175" lineno="175" name="self"/>
            <AssName fromlineno="175" tolineno="175" lineno="175" name="pkgs"/>
          </Arguments>
          <Assign fromlineno="176" tolineno="176" lineno="176" targets="[&lt;AssAttr(_pkgs) l.176 [bb.event] at Ox982c3ac&gt;]" value="pkgs">
            <AssAttr fromlineno="176" tolineno="176" lineno="176" attrname="_pkgs" expr="self">
              <Name fromlineno="176" tolineno="176" lineno="176" name="self"/>
            </AssAttr>
            <Name fromlineno="176" tolineno="176" lineno="176" name="pkgs"/>
          </Assign>
        </Function>
        <Function fromlineno="178" tolineno="179" lineno="178">
          <Arguments fromlineno="178" tolineno="178" lineno="None" format_args="self">
            <AssName fromlineno="178" tolineno="178" lineno="178" name="self"/>
          </Arguments>
          <Return fromlineno="179" tolineno="179" lineno="179">
            <Getattr fromlineno="179" tolineno="179" lineno="179" attrname="_name" expr="self">
              <Name fromlineno="179" tolineno="179" lineno="179" name="self"/>
            </Getattr>
          </Return>
        </Function>
        <Function fromlineno="181" tolineno="182" lineno="181">
          <Arguments fromlineno="181" tolineno="181" lineno="None" format_args="self, name">
            <AssName fromlineno="181" tolineno="181" lineno="181" name="self"/>
            <AssName fromlineno="181" tolineno="181" lineno="181" name="name"/>
          </Arguments>
          <Assign fromlineno="182" tolineno="182" lineno="182" targets="[&lt;AssAttr(_name) l.182 [bb.event] at Ox982c92c&gt;]" value="name">
            <AssAttr fromlineno="182" tolineno="182" lineno="182" attrname="_name" expr="self">
              <Name fromlineno="182" tolineno="182" lineno="182" name="self"/>
            </AssAttr>
            <Name fromlineno="182" tolineno="182" lineno="182" name="name"/>
          </Assign>
        </Function>
        <Function fromlineno="184" tolineno="185" lineno="184">
          <Arguments fromlineno="184" tolineno="184" lineno="None" format_args="self">
            <AssName fromlineno="184" tolineno="184" lineno="184" name="self"/>
          </Arguments>
          <Return fromlineno="185" tolineno="185" lineno="185">
            <Getattr fromlineno="185" tolineno="185" lineno="185" attrname="data" expr="self">
              <Name fromlineno="185" tolineno="185" lineno="185" name="self"/>
            </Getattr>
          </Return>
        </Function>
        <Function fromlineno="187" tolineno="188" lineno="187">
          <Arguments fromlineno="187" tolineno="187" lineno="None" format_args="self, cfg">
            <AssName fromlineno="187" tolineno="187" lineno="187" name="self"/>
            <AssName fromlineno="187" tolineno="187" lineno="187" name="cfg"/>
          </Arguments>
          <Assign fromlineno="188" tolineno="188" lineno="188" targets="[&lt;AssAttr(data) l.188 [bb.event] at Ox982ccac&gt;]" value="cfg">
            <AssAttr fromlineno="188" tolineno="188" lineno="188" attrname="data" expr="self">
              <Name fromlineno="188" tolineno="188" lineno="188" name="self"/>
            </AssAttr>
            <Name fromlineno="188" tolineno="188" lineno="188" name="cfg"/>
          </Assign>
        </Function>
        <Function fromlineno="190" tolineno="194" lineno="190">
          <Arguments fromlineno="190" tolineno="190" lineno="None" format_args="self">
            <AssName fromlineno="190" tolineno="190" lineno="190" name="self"/>
          </Arguments>
          <Return fromlineno="194" tolineno="194" lineno="194">
            <Getattr fromlineno="194" tolineno="194" lineno="194" attrname="_failures" expr="self">
              <Name fromlineno="194" tolineno="194" lineno="194" name="self"/>
            </Getattr>
          </Return>
        </Function>
        <Assign fromlineno="196" tolineno="196" lineno="196" targets="[&lt;AssName(pkgs) l.196 [bb.event] at Ox982cf2c&gt;]" value="property(getPkgs, setPkgs, None, 'pkgs property')">
          <AssName fromlineno="196" tolineno="196" lineno="196" name="pkgs"/>
          <CallFunc fromlineno="196" tolineno="196" lineno="196" func="Name(property)">
            <Name fromlineno="196" tolineno="196" lineno="196" name="property"/>
            <Name fromlineno="196" tolineno="196" lineno="196" name="getPkgs"/>
            <Name fromlineno="196" tolineno="196" lineno="196" name="setPkgs"/>
            <Const fromlineno="196" tolineno="196" lineno="196" type="NoneType">None</Const>
            <Const fromlineno="196" tolineno="196" lineno="196" type="str">'pkgs property'</Const>
          </CallFunc>
        </Assign>
        <Assign fromlineno="197" tolineno="197" lineno="197" targets="[&lt;AssName(name) l.197 [bb.event] at Ox9909fec&gt;]" value="property(getName, setName, None, 'name property')">
          <AssName fromlineno="197" tolineno="197" lineno="197" name="name"/>
          <CallFunc fromlineno="197" tolineno="197" lineno="197" func="Name(property)">
            <Name fromlineno="197" tolineno="197" lineno="197" name="property"/>
            <Name fromlineno="197" tolineno="197" lineno="197" name="getName"/>
            <Name fromlineno="197" tolineno="197" lineno="197" name="setName"/>
            <Const fromlineno="197" tolineno="197" lineno="197" type="NoneType">None</Const>
            <Const fromlineno="197" tolineno="197" lineno="197" type="str">'name property'</Const>
          </CallFunc>
        </Assign>
        <Assign fromlineno="198" tolineno="198" lineno="198" targets="[&lt;AssName(cfg) l.198 [bb.event] at Ox9949e4c&gt;]" value="property(getCfg, setCfg, None, 'cfg property')">
          <AssName fromlineno="198" tolineno="198" lineno="198" name="cfg"/>
          <CallFunc fromlineno="198" tolineno="198" lineno="198" func="Name(property)">
            <Name fromlineno="198" tolineno="198" lineno="198" name="property"/>
            <Name fromlineno="198" tolineno="198" lineno="198" name="getCfg"/>
            <Name fromlineno="198" tolineno="198" lineno="198" name="setCfg"/>
            <Const fromlineno="198" tolineno="198" lineno="198" type="NoneType">None</Const>
            <Const fromlineno="198" tolineno="198" lineno="198" type="str">'cfg property'</Const>
          </CallFunc>
        </Assign>
      </Class>
      <Class fromlineno="201" tolineno="214" lineno="201">
        <Name fromlineno="201" tolineno="201" lineno="201" name="PkgBase"/>
        <Function fromlineno="204" tolineno="206" lineno="204">
          <Arguments fromlineno="204" tolineno="204" lineno="None" format_args="self, t, data, d">
            <AssName fromlineno="204" tolineno="204" lineno="204" name="self"/>
            <AssName fromlineno="204" tolineno="204" lineno="204" name="t"/>
            <AssName fromlineno="204" tolineno="204" lineno="204" name="data"/>
            <AssName fromlineno="204" tolineno="204" lineno="204" name="d"/>
          </Arguments>
          <Assign fromlineno="205" tolineno="205" lineno="205" targets="[&lt;AssAttr(_dep) l.205 [bb.event] at Ox982f70c&gt;]" value="d">
            <AssAttr fromlineno="205" tolineno="205" lineno="205" attrname="_dep" expr="self">
              <Name fromlineno="205" tolineno="205" lineno="205" name="self"/>
            </AssAttr>
            <Name fromlineno="205" tolineno="205" lineno="205" name="d"/>
          </Assign>
          <Discard fromlineno="206" tolineno="206" lineno="206">
            <CallFunc fromlineno="206" tolineno="206" lineno="206" func="Getattr(__init__)">
              <Getattr fromlineno="206" tolineno="206" lineno="206" attrname="__init__" expr="PkgBase">
                <Name fromlineno="206" tolineno="206" lineno="206" name="PkgBase"/>
              </Getattr>
              <Name fromlineno="206" tolineno="206" lineno="206" name="self"/>
              <Name fromlineno="206" tolineno="206" lineno="206" name="t"/>
              <Name fromlineno="206" tolineno="206" lineno="206" name="data"/>
            </CallFunc>
          </Discard>
        </Function>
        <Function fromlineno="208" tolineno="209" lineno="208">
          <Arguments fromlineno="208" tolineno="208" lineno="None" format_args="self">
            <AssName fromlineno="208" tolineno="208" lineno="208" name="self"/>
          </Arguments>
          <Return fromlineno="209" tolineno="209" lineno="209">
            <Getattr fromlineno="209" tolineno="209" lineno="209" attrname="_dep" expr="self">
              <Name fromlineno="209" tolineno="209" lineno="209" name="self"/>
            </Getattr>
          </Return>
        </Function>
        <Function fromlineno="211" tolineno="212" lineno="211">
          <Arguments fromlineno="211" tolineno="211" lineno="None" format_args="self, dep">
            <AssName fromlineno="211" tolineno="211" lineno="211" name="self"/>
            <AssName fromlineno="211" tolineno="211" lineno="211" name="dep"/>
          </Arguments>
          <Assign fromlineno="212" tolineno="212" lineno="212" targets="[&lt;AssAttr(_dep) l.212 [bb.event] at Ox982f9ac&gt;]" value="dep">
            <AssAttr fromlineno="212" tolineno="212" lineno="212" attrname="_dep" expr="self">
              <Name fromlineno="212" tolineno="212" lineno="212" name="self"/>
            </AssAttr>
            <Name fromlineno="212" tolineno="212" lineno="212" name="dep"/>
          </Assign>
        </Function>
        <Assign fromlineno="214" tolineno="214" lineno="214" targets="[&lt;AssName(dep) l.214 [bb.event] at Ox982f8ec&gt;]" value="property(getDep, setDep, None, 'dep property')">
          <AssName fromlineno="214" tolineno="214" lineno="214" name="dep"/>
          <CallFunc fromlineno="214" tolineno="214" lineno="214" func="Name(property)">
            <Name fromlineno="214" tolineno="214" lineno="214" name="property"/>
            <Name fromlineno="214" tolineno="214" lineno="214" name="getDep"/>
            <Name fromlineno="214" tolineno="214" lineno="214" name="setDep"/>
            <Const fromlineno="214" tolineno="214" lineno="214" type="NoneType">None</Const>
            <Const fromlineno="214" tolineno="214" lineno="214" type="str">'dep property'</Const>
          </CallFunc>
        </Assign>
      </Class>
      <Class fromlineno="217" tolineno="217" lineno="217">
        <Name fromlineno="217" tolineno="217" lineno="217" name="PkgBase"/>
      </Class>
      <Class fromlineno="221" tolineno="221" lineno="221">
        <Name fromlineno="221" tolineno="221" lineno="221" name="PkgBase"/>
      </Class>
      <Class fromlineno="225" tolineno="225" lineno="225">
        <Name fromlineno="225" tolineno="225" lineno="225" name="PkgBase"/>
      </Class>
      <Class fromlineno="229" tolineno="229" lineno="229">
        <Name fromlineno="229" tolineno="229" lineno="229" name="BuildBase"/>
      </Class>
      <Class fromlineno="233" tolineno="233" lineno="233">
        <Name fromlineno="233" tolineno="233" lineno="233" name="BuildBase"/>
      </Class>
      <Class fromlineno="237" tolineno="237" lineno="237">
        <Name fromlineno="237" tolineno="237" lineno="237" name="DepBase"/>
      </Class>
      <Class fromlineno="241" tolineno="241" lineno="241">
        <Name fromlineno="241" tolineno="241" lineno="241" name="DepBase"/>
      </Class>
      <Class fromlineno="244" tolineno="256" lineno="244">
        <Name fromlineno="244" tolineno="244" lineno="244" name="Event"/>
        <Function fromlineno="247" tolineno="250" lineno="247">
          <Arguments fromlineno="247" tolineno="247" lineno="None" format_args="self, item, data, runtime=False">
            <AssName fromlineno="247" tolineno="247" lineno="247" name="self"/>
            <AssName fromlineno="247" tolineno="247" lineno="247" name="item"/>
            <AssName fromlineno="247" tolineno="247" lineno="247" name="data"/>
            <AssName fromlineno="247" tolineno="247" lineno="247" name="runtime"/>
            <Const fromlineno="247" tolineno="247" lineno="247" type="bool">False</Const>
          </Arguments>
          <Discard fromlineno="248" tolineno="248" lineno="248">
            <CallFunc fromlineno="248" tolineno="248" lineno="248" func="Getattr(__init__)">
              <Getattr fromlineno="248" tolineno="248" lineno="248" attrname="__init__" expr="Event">
                <Name fromlineno="248" tolineno="248" lineno="248" name="Event"/>
              </Getattr>
              <Name fromlineno="248" tolineno="248" lineno="248" name="self"/>
              <Name fromlineno="248" tolineno="248" lineno="248" name="data"/>
            </CallFunc>
          </Discard>
          <Assign fromlineno="249" tolineno="249" lineno="249" targets="[&lt;AssAttr(_item) l.249 [bb.event] at Ox98345cc&gt;]" value="item">
            <AssAttr fromlineno="249" tolineno="249" lineno="249" attrname="_item" expr="self">
              <Name fromlineno="249" tolineno="249" lineno="249" name="self"/>
            </AssAttr>
            <Name fromlineno="249" tolineno="249" lineno="249" name="item"/>
          </Assign>
          <Assign fromlineno="250" tolineno="250" lineno="250" targets="[&lt;AssAttr(_runtime) l.250 [bb.event] at Ox983454c&gt;]" value="runtime">
            <AssAttr fromlineno="250" tolineno="250" lineno="250" attrname="_runtime" expr="self">
              <Name fromlineno="250" tolineno="250" lineno="250" name="self"/>
            </AssAttr>
            <Name fromlineno="250" tolineno="250" lineno="250" name="runtime"/>
          </Assign>
        </Function>
        <Function fromlineno="252" tolineno="253" lineno="252">
          <Arguments fromlineno="252" tolineno="252" lineno="None" format_args="self">
            <AssName fromlineno="252" tolineno="252" lineno="252" name="self"/>
          </Arguments>
          <Return fromlineno="253" tolineno="253" lineno="253">
            <Getattr fromlineno="253" tolineno="253" lineno="253" attrname="_item" expr="self">
              <Name fromlineno="253" tolineno="253" lineno="253" name="self"/>
            </Getattr>
          </Return>
        </Function>
        <Function fromlineno="255" tolineno="256" lineno="255">
          <Arguments fromlineno="255" tolineno="255" lineno="None" format_args="self">
            <AssName fromlineno="255" tolineno="255" lineno="255" name="self"/>
          </Arguments>
          <Return fromlineno="256" tolineno="256" lineno="256">
            <Getattr fromlineno="256" tolineno="256" lineno="256" attrname="_runtime" expr="self">
              <Name fromlineno="256" tolineno="256" lineno="256" name="self"/>
            </Getattr>
          </Return>
        </Function>
      </Class>
      <Class fromlineno="258" tolineno="283" lineno="258">
        <Name fromlineno="258" tolineno="258" lineno="258" name="Event"/>
        <Function fromlineno="261" tolineno="265" lineno="261">
          <Arguments fromlineno="261" tolineno="261" lineno="None" format_args="self, item, candidates, data, runtime=False">
            <AssName fromlineno="261" tolineno="261" lineno="261" name="self"/>
            <AssName fromlineno="261" tolineno="261" lineno="261" name="item"/>
            <AssName fromlineno="261" tolineno="261" lineno="261" name="candidates"/>
            <AssName fromlineno="261" tolineno="261" lineno="261" name="data"/>
            <AssName fromlineno="261" tolineno="261" lineno="261" name="runtime"/>
            <Const fromlineno="261" tolineno="261" lineno="261" type="bool">False</Const>
          </Arguments>
          <Discard fromlineno="262" tolineno="262" lineno="262">
            <CallFunc fromlineno="262" tolineno="262" lineno="262" func="Getattr(__init__)">
              <Getattr fromlineno="262" tolineno="262" lineno="262" attrname="__init__" expr="Event">
                <Name fromlineno="262" tolineno="262" lineno="262" name="Event"/>
              </Getattr>
              <Name fromlineno="262" tolineno="262" lineno="262" name="self"/>
              <Name fromlineno="262" tolineno="262" lineno="262" name="data"/>
            </CallFunc>
          </Discard>
          <Assign fromlineno="263" tolineno="263" lineno="263" targets="[&lt;AssAttr(_item) l.263 [bb.event] at Ox9834f4c&gt;]" value="item">
            <AssAttr fromlineno="263" tolineno="263" lineno="263" attrname="_item" expr="self">
              <Name fromlineno="263" tolineno="263" lineno="263" name="self"/>
            </AssAttr>
            <Name fromlineno="263" tolineno="263" lineno="263" name="item"/>
          </Assign>
          <Assign fromlineno="264" tolineno="264" lineno="264" targets="[&lt;AssAttr(_candidates) l.264 [bb.event] at Ox98392ec&gt;]" value="candidates">
            <AssAttr fromlineno="264" tolineno="264" lineno="264" attrname="_candidates" expr="self">
              <Name fromlineno="264" tolineno="264" lineno="264" name="self"/>
            </AssAttr>
            <Name fromlineno="264" tolineno="264" lineno="264" name="candidates"/>
          </Assign>
          <Assign fromlineno="265" tolineno="265" lineno="265" targets="[&lt;AssAttr(_is_runtime) l.265 [bb.event] at Ox983914c&gt;]" value="runtime">
            <AssAttr fromlineno="265" tolineno="265" lineno="265" attrname="_is_runtime" expr="self">
              <Name fromlineno="265" tolineno="265" lineno="265" name="self"/>
            </AssAttr>
            <Name fromlineno="265" tolineno="265" lineno="265" name="runtime"/>
          </Assign>
        </Function>
        <Function fromlineno="267" tolineno="271" lineno="267">
          <Arguments fromlineno="267" tolineno="267" lineno="None" format_args="self">
            <AssName fromlineno="267" tolineno="267" lineno="267" name="self"/>
          </Arguments>
          <Return fromlineno="271" tolineno="271" lineno="271">
            <Getattr fromlineno="271" tolineno="271" lineno="271" attrname="_is_runtime" expr="self">
              <Name fromlineno="271" tolineno="271" lineno="271" name="self"/>
            </Getattr>
          </Return>
        </Function>
        <Function fromlineno="273" tolineno="277" lineno="273">
          <Arguments fromlineno="273" tolineno="273" lineno="None" format_args="self">
            <AssName fromlineno="273" tolineno="273" lineno="273" name="self"/>
          </Arguments>
          <Return fromlineno="277" tolineno="277" lineno="277">
            <Getattr fromlineno="277" tolineno="277" lineno="277" attrname="_item" expr="self">
              <Name fromlineno="277" tolineno="277" lineno="277" name="self"/>
            </Getattr>
          </Return>
        </Function>
        <Function fromlineno="279" tolineno="283" lineno="279">
          <Arguments fromlineno="279" tolineno="279" lineno="None" format_args="self">
            <AssName fromlineno="279" tolineno="279" lineno="279" name="self"/>
          </Arguments>
          <Return fromlineno="283" tolineno="283" lineno="283">
            <Getattr fromlineno="283" tolineno="283" lineno="283" attrname="_candidates" expr="self">
              <Name fromlineno="283" tolineno="283" lineno="283" name="self"/>
            </Getattr>
          </Return>
        </Function>
      </Class>
    </Module>
    <Module fromlineno="0" tolineno="286" lineno="0" name="bb.data_smart">
      <Import fromlineno="31" tolineno="31" lineno="31">
        <ImportName name="copy"/>
        <ImportName name="os"/>
        <ImportName name="re"/>
        <ImportName name="sys"/>
        <ImportName name="time"/>
        <ImportName name="types"/>
      </Import>
      <Import fromlineno="32" tolineno="32" lineno="32">
        <ImportName name="bb"/>
      </Import>
      <From fromlineno="33" tolineno="33" lineno="33" modname="bb">
        <ImportName name="utils"/>
        <ImportName name="methodpool"/>
      </From>
      <From fromlineno="34" tolineno="34" lineno="34" modname="COW">
        <ImportName name="COWDictBase"/>
      </From>
      <From fromlineno="35" tolineno="35" lineno="35" modname="new">
        <ImportName name="classobj"/>
      </From>
      <Assign fromlineno="38" tolineno="38" lineno="38" targets="[&lt;AssName(__setvar_keyword__) l.38 [bb.data_smart] at Ox9a1e66c&gt;]" value="['_append', '_prepend']">
        <AssName fromlineno="38" tolineno="38" lineno="38" name="__setvar_keyword__"/>
        <List fromlineno="38" tolineno="38" lineno="38">
          <Const fromlineno="38" tolineno="38" lineno="38" type="str">'_append'</Const>
          <Const fromlineno="38" tolineno="38" lineno="38" type="str">'_prepend'</Const>
        </List>
      </Assign>
      <Assign fromlineno="39" tolineno="39" lineno="39" targets="[&lt;AssName(__setvar_regexp__) l.39 [bb.data_smart] at Ox9a1e7ac&gt;]" value="re.compile('(?P&lt;base&gt;.*?)(?P&lt;keyword&gt;_append|_prepend)(_(?P&lt;add&gt;.*))?')">
        <AssName fromlineno="39" tolineno="39" lineno="39" name="__setvar_regexp__"/>
        <CallFunc fromlineno="39" tolineno="39" lineno="39" func="Getattr(compile)">
          <Getattr fromlineno="39" tolineno="39" lineno="39" attrname="compile" expr="re">
            <Name fromlineno="39" tolineno="39" lineno="39" name="re"/>
          </Getattr>
          <Const fromlineno="39" tolineno="39" lineno="39" type="str">'(?P&lt;base&gt;.*?)(?P&lt;keyword&gt;_append|_prepend)(_(?P&lt;add&gt;.*))?'</Const>
        </CallFunc>
      </Assign>
      <Assign fromlineno="40" tolineno="40" lineno="40" targets="[&lt;AssName(__expand_var_regexp__) l.40 [bb.data_smart] at Ox9a1e8cc&gt;]" value="re.compile('\\${[^{}]+}')">
        <AssName fromlineno="40" tolineno="40" lineno="40" name="__expand_var_regexp__"/>
        <CallFunc fromlineno="40" tolineno="40" lineno="40" func="Getattr(compile)">
          <Getattr fromlineno="40" tolineno="40" lineno="40" attrname="compile" expr="re">
            <Name fromlineno="40" tolineno="40" lineno="40" name="re"/>
          </Getattr>
          <Const fromlineno="40" tolineno="40" lineno="40" type="str">'\\${[^{}]+}'</Const>
        </CallFunc>
      </Assign>
      <Assign fromlineno="41" tolineno="41" lineno="41" targets="[&lt;AssName(__expand_python_regexp__) l.41 [bb.data_smart] at Ox9a1e9ec&gt;]" value="re.compile('\\${@.+?}')">
        <AssName fromlineno="41" tolineno="41" lineno="41" name="__expand_python_regexp__"/>
        <CallFunc fromlineno="41" tolineno="41" lineno="41" func="Getattr(compile)">
          <Getattr fromlineno="41" tolineno="41" lineno="41" attrname="compile" expr="re">
            <Name fromlineno="41" tolineno="41" lineno="41" name="re"/>
          </Getattr>
          <Const fromlineno="41" tolineno="41" lineno="41" type="str">'\\${@.+?}'</Const>
        </CallFunc>
      </Assign>
      <Class fromlineno="44" tolineno="286" lineno="44">
        <Function fromlineno="45" tolineno="52" lineno="45">
          <Arguments fromlineno="45" tolineno="45" lineno="None" format_args="self, special=COWDictBase.copy(), seen=COWDictBase.copy()">
            <AssName fromlineno="45" tolineno="45" lineno="45" name="self"/>
            <AssName fromlineno="45" tolineno="45" lineno="45" name="special"/>
            <AssName fromlineno="45" tolineno="45" lineno="45" name="seen"/>
            <CallFunc fromlineno="45" tolineno="45" lineno="45" func="Getattr(copy)">
              <Getattr fromlineno="45" tolineno="45" lineno="45" attrname="copy" expr="COWDictBase">
                <Name fromlineno="45" tolineno="45" lineno="45" name="COWDictBase"/>
              </Getattr>
            </CallFunc>
            <CallFunc fromlineno="45" tolineno="45" lineno="45" func="Getattr(copy)">
              <Getattr fromlineno="45" tolineno="45" lineno="45" attrname="copy" expr="COWDictBase">
                <Name fromlineno="45" tolineno="45" lineno="45" name="COWDictBase"/>
              </Getattr>
            </CallFunc>
          </Arguments>
          <Assign fromlineno="46" tolineno="46" lineno="46" targets="[&lt;AssAttr(dict) l.46 [bb.data_smart] at Ox9a1ee4c&gt;]" value="{}">
            <AssAttr fromlineno="46" tolineno="46" lineno="46" attrname="dict" expr="self">
              <Name fromlineno="46" tolineno="46" lineno="46" name="self"/>
            </AssAttr>
            <Dict fromlineno="46" tolineno="46" lineno="46"/>
          </Assign>
          <Assign fromlineno="49" tolineno="49" lineno="49" targets="[&lt;AssAttr(_special_values) l.49 [bb.data_smart] at Ox9a1ef0c&gt;]" value="special">
            <AssAttr fromlineno="49" tolineno="49" lineno="49" attrname="_special_values" expr="self">
              <Name fromlineno="49" tolineno="49" lineno="49" name="self"/>
            </AssAttr>
            <Name fromlineno="49" tolineno="49" lineno="49" name="special"/>
          </Assign>
          <Assign fromlineno="50" tolineno="50" lineno="50" targets="[&lt;AssAttr(_seen_overrides) l.50 [bb.data_smart] at Ox9a1efac&gt;]" value="seen">
            <AssAttr fromlineno="50" tolineno="50" lineno="50" attrname="_seen_overrides" expr="self">
              <Name fromlineno="50" tolineno="50" lineno="50" name="self"/>
            </AssAttr>
            <Name fromlineno="50" tolineno="50" lineno="50" name="seen"/>
          </Assign>
          <Assign fromlineno="52" tolineno="52" lineno="52" targets="[&lt;AssAttr(expand_cache) l.52 [bb.data_smart] at Ox9a0a06c&gt;]" value="{}">
            <AssAttr fromlineno="52" tolineno="52" lineno="52" attrname="expand_cache" expr="self">
              <Name fromlineno="52" tolineno="52" lineno="52" name="self"/>
            </AssAttr>
            <Dict fromlineno="52" tolineno="52" lineno="52"/>
          </Assign>
        </Function>
        <Function fromlineno="54" tolineno="97" lineno="54">
          <Arguments fromlineno="54" tolineno="54" lineno="None" format_args="self, s, varname">
            <AssName fromlineno="54" tolineno="54" lineno="54" name="self"/>
            <AssName fromlineno="54" tolineno="54" lineno="54" name="s"/>
            <AssName fromlineno="54" tolineno="54" lineno="54" name="varname"/>
          </Arguments>
          <Function fromlineno="55" tolineno="64" lineno="55">
            <Arguments fromlineno="55" tolineno="55" lineno="None" format_args="match">
              <AssName fromlineno="55" tolineno="55" lineno="55" name="match"/>
            </Arguments>
            <Assign fromlineno="56" tolineno="56" lineno="56" targets="[&lt;AssName(key) l.56 [bb.data_smart] at Ox9a0a3cc&gt;]" value="match.group()[2:-1]">
              <AssName fromlineno="56" tolineno="56" lineno="56" name="key"/>
              <Subscript fromlineno="56" tolineno="56" lineno="56">
                <CallFunc fromlineno="56" tolineno="56" lineno="56" func="Getattr(group)">
                  <Getattr fromlineno="56" tolineno="56" lineno="56" attrname="group" expr="match">
                    <Name fromlineno="56" tolineno="56" lineno="56" name="match"/>
                  </Getattr>
                </CallFunc>
                <Slice fromlineno="56" tolineno="56" lineno="None">
                  <Const fromlineno="56" tolineno="56" lineno="56" type="int">2</Const>
                  <Const fromlineno="56" tolineno="56" lineno="56" type="int">-1</Const>
                </Slice>
              </Subscript>
            </Assign>
            <If fromlineno="57" tolineno="59" lineno="57">
              <BoolOp fromlineno="57" tolineno="57" lineno="57" op="and" values="varname,key,">
                <Name fromlineno="57" tolineno="57" lineno="57" name="varname"/>
                <Name fromlineno="57" tolineno="57" lineno="57" name="key"/>
              </BoolOp>
              <If fromlineno="58" tolineno="59" lineno="58">
                <Compare fromlineno="58" tolineno="58" lineno="58" op="('==', &lt;Name(key) l.58 [bb.data_smart] at Ox9a0a6ac&gt;)">
                  <Name fromlineno="58" tolineno="58" lineno="58" name="varname"/>
                  <Name fromlineno="58" tolineno="58" lineno="58" name="key"/>
                </Compare>
                <Raise fromlineno="59" tolineno="59" lineno="59">
                  <CallFunc fromlineno="59" tolineno="59" lineno="59" func="Name(Exception)">
                    <Name fromlineno="59" tolineno="59" lineno="59" name="Exception"/>
                    <BinOp fromlineno="59" tolineno="59" lineno="59" op="%" left="'variable %s references itself!'" right="varname">
                      <Const fromlineno="59" tolineno="59" lineno="59" type="str">'variable %s references itself!'</Const>
                      <Name fromlineno="59" tolineno="59" lineno="59" name="varname"/>
                    </BinOp>
                  </CallFunc>
                </Raise>
              </If>
            </If>
            <Assign fromlineno="60" tolineno="60" lineno="60" targets="[&lt;AssName(var) l.60 [bb.data_smart] at Ox9a0a80c&gt;]" value="self.getVar(key, 1)">
              <AssName fromlineno="60" tolineno="60" lineno="60" name="var"/>
              <CallFunc fromlineno="60" tolineno="60" lineno="60" func="Getattr(getVar)">
                <Getattr fromlineno="60" tolineno="60" lineno="60" attrname="getVar" expr="self">
                  <Name fromlineno="60" tolineno="60" lineno="60" name="self"/>
                </Getattr>
                <Name fromlineno="60" tolineno="60" lineno="60" name="key"/>
                <Const fromlineno="60" tolineno="60" lineno="60" type="int">1</Const>
              </CallFunc>
            </Assign>
            <If fromlineno="61" tolineno="64" lineno="61">
              <Compare fromlineno="61" tolineno="61" lineno="61" op="('is not', &lt;Const(NoneType) l.61 [bb.data_smart] at Ox9a0a9ac&gt;)">
                <Name fromlineno="61" tolineno="61" lineno="61" name="var"/>
                <Const fromlineno="61" tolineno="61" lineno="61" type="NoneType">None</Const>
              </Compare>
              <Return fromlineno="62" tolineno="62" lineno="62">
                <Name fromlineno="62" tolineno="62" lineno="62" name="var"/>
              </Return>
              <Return fromlineno="64" tolineno="64" lineno="64">
                <CallFunc fromlineno="64" tolineno="64" lineno="64" func="Getattr(group)">
                  <Getattr fromlineno="64" tolineno="64" lineno="64" attrname="group" expr="match">
                    <Name fromlineno="64" tolineno="64" lineno="64" name="match"/>
                  </Getattr>
                </CallFunc>
              </Return>
            </If>
          </Function>
          <Function fromlineno="66" tolineno="72" lineno="66">
            <Arguments fromlineno="66" tolineno="66" lineno="None" format_args="match">
              <AssName fromlineno="66" tolineno="66" lineno="66" name="match"/>
            </Arguments>
            <Import fromlineno="67" tolineno="67" lineno="67">
              <ImportName name="bb"/>
            </Import>
            <Assign fromlineno="68" tolineno="68" lineno="68" targets="[&lt;AssName(code) l.68 [bb.data_smart] at Ox9a0ac8c&gt;]" value="match.group()[3:-1]">
              <AssName fromlineno="68" tolineno="68" lineno="68" name="code"/>
              <Subscript fromlineno="68" tolineno="68" lineno="68">
                <CallFunc fromlineno="68" tolineno="68" lineno="68" func="Getattr(group)">
                  <Getattr fromlineno="68" tolineno="68" lineno="68" attrname="group" expr="match">
                    <Name fromlineno="68" tolineno="68" lineno="68" name="match"/>
                  </Getattr>
                </CallFunc>
                <Slice fromlineno="68" tolineno="68" lineno="None">
                  <Const fromlineno="68" tolineno="68" lineno="68" type="int">3</Const>
                  <Const fromlineno="68" tolineno="68" lineno="68" type="int">-1</Const>
                </Slice>
              </Subscript>
            </Assign>
            <Assign fromlineno="69" tolineno="69" lineno="69" targets="[&lt;Subscript() l.69 [bb.data_smart] at Ox9a0ae2c&gt;]" value="self">
              <Subscript fromlineno="69" tolineno="69" lineno="69">
                <CallFunc fromlineno="69" tolineno="69" lineno="69" func="Name(locals)">
                  <Name fromlineno="69" tolineno="69" lineno="69" name="locals"/>
                </CallFunc>
                <Index fromlineno="69" tolineno="69" lineno="None">
                  <Const fromlineno="69" tolineno="69" lineno="69" type="str">'d'</Const>
                </Index>
              </Subscript>
              <Name fromlineno="69" tolineno="69" lineno="69" name="self"/>
            </Assign>
            <Assign fromlineno="70" tolineno="70" lineno="70" targets="[&lt;AssName(s) l.70 [bb.data_smart] at Ox9a0af4c&gt;]" value="eval(code)">
              <AssName fromlineno="70" tolineno="70" lineno="70" name="s"/>
              <CallFunc fromlineno="70" tolineno="70" lineno="70" func="Name(eval)">
                <Name fromlineno="70" tolineno="70" lineno="70" name="eval"/>
                <Name fromlineno="70" tolineno="70" lineno="70" name="code"/>
              </CallFunc>
            </Assign>
            <If fromlineno="71" tolineno="71" lineno="71">
              <Compare fromlineno="71" tolineno="71" lineno="71" op="('==', &lt;Getattr(IntType) l.71 [bb.data_smart] at Ox9a0d12c&gt;)">
                <CallFunc fromlineno="71" tolineno="71" lineno="71" func="Name(type)">
                  <Name fromlineno="71" tolineno="71" lineno="71" name="type"/>
                  <Name fromlineno="71" tolineno="71" lineno="71" name="s"/>
                </CallFunc>
                <Getattr fromlineno="71" tolineno="71" lineno="71" attrname="IntType" expr="types">
                  <Name fromlineno="71" tolineno="71" lineno="71" name="types"/>
                </Getattr>
              </Compare>
              <Assign fromlineno="71" tolineno="71" lineno="71" targets="[&lt;AssName(s) l.71 [bb.data_smart] at Ox9a0d1ec&gt;]" value="str(s)">
                <AssName fromlineno="71" tolineno="71" lineno="71" name="s"/>
                <CallFunc fromlineno="71" tolineno="71" lineno="71" func="Name(str)">
                  <Name fromlineno="71" tolineno="71" lineno="71" name="str"/>
                  <Name fromlineno="71" tolineno="71" lineno="71" name="s"/>
                </CallFunc>
              </Assign>
            </If>
            <Return fromlineno="72" tolineno="72" lineno="72">
              <Name fromlineno="72" tolineno="72" lineno="72" name="s"/>
            </Return>
          </Function>
          <If fromlineno="74" tolineno="75" lineno="74">
            <Compare fromlineno="74" tolineno="74" lineno="74" op="('is not', &lt;Getattr(StringType) l.74 [bb.data_smart] at Ox9a0d3ac&gt;)">
              <CallFunc fromlineno="74" tolineno="74" lineno="74" func="Name(type)">
                <Name fromlineno="74" tolineno="74" lineno="74" name="type"/>
                <Name fromlineno="74" tolineno="74" lineno="74" name="s"/>
              </CallFunc>
              <Getattr fromlineno="74" tolineno="74" lineno="74" attrname="StringType" expr="types">
                <Name fromlineno="74" tolineno="74" lineno="74" name="types"/>
              </Getattr>
            </Compare>
            <Return fromlineno="75" tolineno="75" lineno="75">
              <Name fromlineno="75" tolineno="75" lineno="75" name="s"/>
            </Return>
          </If>
          <If fromlineno="77" tolineno="78" lineno="77">
            <BoolOp fromlineno="77" tolineno="77" lineno="77" op="and" values="varname,varname in self.expand_cache,">
              <Name fromlineno="77" tolineno="77" lineno="77" name="varname"/>
              <Compare fromlineno="77" tolineno="77" lineno="77" op="('in', &lt;Getattr(expand_cache) l.77 [bb.data_smart] at Ox9a0d58c&gt;)">
                <Name fromlineno="77" tolineno="77" lineno="77" name="varname"/>
                <Getattr fromlineno="77" tolineno="77" lineno="77" attrname="expand_cache" expr="self">
                  <Name fromlineno="77" tolineno="77" lineno="77" name="self"/>
                </Getattr>
              </Compare>
            </BoolOp>
            <Return fromlineno="78" tolineno="78" lineno="78">
              <Subscript fromlineno="78" tolineno="78" lineno="78">
                <Getattr fromlineno="78" tolineno="78" lineno="78" attrname="expand_cache" expr="self">
                  <Name fromlineno="78" tolineno="78" lineno="78" name="self"/>
                </Getattr>
                <Index fromlineno="78" tolineno="78" lineno="None">
                  <Name fromlineno="78" tolineno="78" lineno="78" name="varname"/>
                </Index>
              </Subscript>
            </Return>
          </If>
          <While fromlineno="80" tolineno="92" lineno="80">
            <Compare fromlineno="80" tolineno="80" lineno="80" op="('!=', &lt;Const(int) l.80 [bb.data_smart] at Ox9a0d7cc&gt;)">
              <CallFunc fromlineno="80" tolineno="80" lineno="80" func="Getattr(find)">
                <Getattr fromlineno="80" tolineno="80" lineno="80" attrname="find" expr="s">
                  <Name fromlineno="80" tolineno="80" lineno="80" name="s"/>
                </Getattr>
                <Const fromlineno="80" tolineno="80" lineno="80" type="str">'${'</Const>
              </CallFunc>
              <Const fromlineno="80" tolineno="80" lineno="80" type="int">-1</Const>
            </Compare>
            <Assign fromlineno="81" tolineno="81" lineno="81" targets="[&lt;AssName(olds) l.81 [bb.data_smart] at Ox9a0d86c&gt;]" value="s">
              <AssName fromlineno="81" tolineno="81" lineno="81" name="olds"/>
              <Name fromlineno="81" tolineno="81" lineno="81" name="s"/>
            </Assign>
            <TryExcept fromlineno="82" tolineno="92" lineno="82">
              <Assign fromlineno="83" tolineno="83" lineno="83" targets="[&lt;AssName(s) l.83 [bb.data_smart] at Ox9a0d96c&gt;]" value="__expand_var_regexp__.sub(var_sub, s)">
                <AssName fromlineno="83" tolineno="83" lineno="83" name="s"/>
                <CallFunc fromlineno="83" tolineno="83" lineno="83" func="Getattr(sub)">
                  <Getattr fromlineno="83" tolineno="83" lineno="83" attrname="sub" expr="__expand_var_regexp__">
                    <Name fromlineno="83" tolineno="83" lineno="83" name="__expand_var_regexp__"/>
                  </Getattr>
                  <Name fromlineno="83" tolineno="83" lineno="83" name="var_sub"/>
                  <Name fromlineno="83" tolineno="83" lineno="83" name="s"/>
                </CallFunc>
              </Assign>
              <Assign fromlineno="84" tolineno="84" lineno="84" targets="[&lt;AssName(s) l.84 [bb.data_smart] at Ox9a0da8c&gt;]" value="__expand_python_regexp__.sub(python_sub, s)">
                <AssName fromlineno="84" tolineno="84" lineno="84" name="s"/>
                <CallFunc fromlineno="84" tolineno="84" lineno="84" func="Getattr(sub)">
                  <Getattr fromlineno="84" tolineno="84" lineno="84" attrname="sub" expr="__expand_python_regexp__">
                    <Name fromlineno="84" tolineno="84" lineno="84" name="__expand_python_regexp__"/>
                  </Getattr>
                  <Name fromlineno="84" tolineno="84" lineno="84" name="python_sub"/>
                  <Name fromlineno="84" tolineno="84" lineno="84" name="s"/>
                </CallFunc>
              </Assign>
              <If fromlineno="85" tolineno="85" lineno="85">
                <Compare fromlineno="85" tolineno="85" lineno="85" op="('==', &lt;Name(olds) l.85 [bb.data_smart] at Ox9a0dc0c&gt;)">
                  <Name fromlineno="85" tolineno="85" lineno="85" name="s"/>
                  <Name fromlineno="85" tolineno="85" lineno="85" name="olds"/>
                </Compare>
                <Break fromlineno="85" tolineno="85" lineno="85"/>
              </If>
              <If fromlineno="86" tolineno="87" lineno="86">
                <Compare fromlineno="86" tolineno="86" lineno="86" op="('is not', &lt;Getattr(StringType) l.86 [bb.data_smart] at Ox9a0dd8c&gt;)">
                  <CallFunc fromlineno="86" tolineno="86" lineno="86" func="Name(type)">
                    <Name fromlineno="86" tolineno="86" lineno="86" name="type"/>
                    <Name fromlineno="86" tolineno="86" lineno="86" name="s"/>
                  </CallFunc>
                  <Getattr fromlineno="86" tolineno="86" lineno="86" attrname="StringType" expr="types">
                    <Name fromlineno="86" tolineno="86" lineno="86" name="types"/>
                  </Getattr>
                </Compare>
                <Discard fromlineno="87" tolineno="87" lineno="87">
                  <CallFunc fromlineno="87" tolineno="87" lineno="87" func="Getattr(error)">
                    <Getattr fromlineno="87" tolineno="87" lineno="87" attrname="error" expr="bb.msg">
                      <Getattr fromlineno="87" tolineno="87" lineno="87" attrname="msg" expr="bb">
                        <Name fromlineno="87" tolineno="87" lineno="87" name="bb"/>
                      </Getattr>
                    </Getattr>
                    <Getattr fromlineno="87" tolineno="87" lineno="87" attrname="Data" expr="bb.msg.domain">
                      <Getattr fromlineno="87" tolineno="87" lineno="87" attrname="domain" expr="bb.msg">
                        <Getattr fromlineno="87" tolineno="87" lineno="87" attrname="msg" expr="bb">
                          <Name fromlineno="87" tolineno="87" lineno="87" name="bb"/>
                        </Getattr>
                      </Getattr>
                    </Getattr>
                    <BinOp fromlineno="87" tolineno="87" lineno="87" op="%" left="'expansion of %s returned non-string %s'" right="(olds, s)">
                      <Const fromlineno="87" tolineno="87" lineno="87" type="str">'expansion of %s returned non-string %s'</Const>
                      <Tuple fromlineno="87" tolineno="87" lineno="87">
                        <Name fromlineno="87" tolineno="87" lineno="87" name="olds"/>
                        <Name fromlineno="87" tolineno="87" lineno="87" name="s"/>
                      </Tuple>
                    </BinOp>
                  </CallFunc>
                </Discard>
              </If>
              <ExceptHandler fromlineno="88" tolineno="89" lineno="88">
                <Name fromlineno="88" tolineno="88" lineno="88" name="KeyboardInterrupt"/>
                <Raise fromlineno="89" tolineno="89" lineno="89"/>
              </ExceptHandler>
              <ExceptHandler fromlineno="90" tolineno="92" lineno="90">
                <Discard fromlineno="91" tolineno="91" lineno="91">
                  <CallFunc fromlineno="91" tolineno="91" lineno="91" func="Getattr(note)">
                    <Getattr fromlineno="91" tolineno="91" lineno="91" attrname="note" expr="bb.msg">
                      <Getattr fromlineno="91" tolineno="91" lineno="91" attrname="msg" expr="bb">
                        <Name fromlineno="91" tolineno="91" lineno="91" name="bb"/>
                      </Getattr>
                    </Getattr>
                    <Const fromlineno="91" tolineno="91" lineno="91" type="int">1</Const>
                    <Getattr fromlineno="91" tolineno="91" lineno="91" attrname="Data" expr="bb.msg.domain">
                      <Getattr fromlineno="91" tolineno="91" lineno="91" attrname="domain" expr="bb.msg">
                        <Getattr fromlineno="91" tolineno="91" lineno="91" attrname="msg" expr="bb">
                          <Name fromlineno="91" tolineno="91" lineno="91" name="bb"/>
                        </Getattr>
                      </Getattr>
                    </Getattr>
                    <BinOp fromlineno="91" tolineno="91" lineno="91" op="%" left="'%s:%s while evaluating:\n%s'" right="(sys.exc_info()[0], sys.exc_info()[1], s)">
                      <Const fromlineno="91" tolineno="91" lineno="91" type="str">'%s:%s while evaluating:\n%s'</Const>
                      <Tuple fromlineno="91" tolineno="91" lineno="91">
                        <Subscript fromlineno="91" tolineno="91" lineno="91">
                          <CallFunc fromlineno="91" tolineno="91" lineno="91" func="Getattr(exc_info)">
                            <Getattr fromlineno="91" tolineno="91" lineno="91" attrname="exc_info" expr="sys">
                              <Name fromlineno="91" tolineno="91" lineno="91" name="sys"/>
                            </Getattr>
                          </CallFunc>
                          <Index fromlineno="91" tolineno="91" lineno="None">
                            <Const fromlineno="91" tolineno="91" lineno="91" type="int">0</Const>
                          </Index>
                        </Subscript>
                        <Subscript fromlineno="91" tolineno="91" lineno="91">
                          <CallFunc fromlineno="91" tolineno="91" lineno="91" func="Getattr(exc_info)">
                            <Getattr fromlineno="91" tolineno="91" lineno="91" attrname="exc_info" expr="sys">
                              <Name fromlineno="91" tolineno="91" lineno="91" name="sys"/>
                            </Getattr>
                          </CallFunc>
                          <Index fromlineno="91" tolineno="91" lineno="None">
                            <Const fromlineno="91" tolineno="91" lineno="91" type="int">1</Const>
                          </Index>
                        </Subscript>
                        <Name fromlineno="91" tolineno="91" lineno="91" name="s"/>
                      </Tuple>
                    </BinOp>
                  </CallFunc>
                </Discard>
                <Raise fromlineno="92" tolineno="92" lineno="92"/>
              </ExceptHandler>
            </TryExcept>
          </While>
          <If fromlineno="94" tolineno="95" lineno="94">
            <Name fromlineno="94" tolineno="94" lineno="94" name="varname"/>
            <Assign fromlineno="95" tolineno="95" lineno="95" targets="[&lt;Subscript() l.95 [bb.data_smart] at Ox9a115ac&gt;]" value="s">
              <Subscript fromlineno="95" tolineno="95" lineno="95">
                <Getattr fromlineno="95" tolineno="95" lineno="95" attrname="expand_cache" expr="self">
                  <Name fromlineno="95" tolineno="95" lineno="95" name="self"/>
                </Getattr>
                <Index fromlineno="95" tolineno="95" lineno="None">
                  <Name fromlineno="95" tolineno="95" lineno="95" name="varname"/>
                </Index>
              </Subscript>
              <Name fromlineno="95" tolineno="95" lineno="95" name="s"/>
            </Assign>
          </If>
          <Return fromlineno="97" tolineno="97" lineno="97">
            <Name fromlineno="97" tolineno="97" lineno="97" name="s"/>
          </Return>
        </Function>
        <Function fromlineno="99" tolineno="102" lineno="99">
          <Arguments fromlineno="99" tolineno="99" lineno="None" format_args="self, var">
            <AssName fromlineno="99" tolineno="99" lineno="99" name="self"/>
            <AssName fromlineno="99" tolineno="99" lineno="99" name="var"/>
          </Arguments>
          <Assign fromlineno="100" tolineno="100" lineno="100" targets="[&lt;AssAttr(expand_cache) l.100 [bb.data_smart] at Ox9a1182c&gt;]" value="{}">
            <AssAttr fromlineno="100" tolineno="100" lineno="100" attrname="expand_cache" expr="self">
              <Name fromlineno="100" tolineno="100" lineno="100" name="self"/>
            </AssAttr>
            <Dict fromlineno="100" tolineno="100" lineno="100"/>
          </Assign>
          <If fromlineno="101" tolineno="102" lineno="101">
            <UnaryOp fromlineno="101" tolineno="101" lineno="101">
              <Compare fromlineno="101" tolineno="101" lineno="101" op="('in', &lt;Getattr(dict) l.101 [bb.data_smart] at Ox9a1196c&gt;)">
                <Name fromlineno="101" tolineno="101" lineno="101" name="var"/>
                <Getattr fromlineno="101" tolineno="101" lineno="101" attrname="dict" expr="self">
                  <Name fromlineno="101" tolineno="101" lineno="101" name="self"/>
                </Getattr>
              </Compare>
            </UnaryOp>
            <Assign fromlineno="102" tolineno="102" lineno="102" targets="[&lt;Subscript() l.102 [bb.data_smart] at Ox9a11a2c&gt;]" value="{}">
              <Subscript fromlineno="102" tolineno="102" lineno="102">
                <Getattr fromlineno="102" tolineno="102" lineno="102" attrname="dict" expr="self">
                  <Name fromlineno="102" tolineno="102" lineno="102" name="self"/>
                </Getattr>
                <Index fromlineno="102" tolineno="102" lineno="None">
                  <Name fromlineno="102" tolineno="102" lineno="102" name="var"/>
                </Index>
              </Subscript>
              <Dict fromlineno="102" tolineno="102" lineno="102"/>
            </Assign>
          </If>
        </Function>
        <Function fromlineno="104" tolineno="115" lineno="104">
          <Arguments fromlineno="104" tolineno="104" lineno="None" format_args="self, var">
            <AssName fromlineno="104" tolineno="104" lineno="104" name="self"/>
            <AssName fromlineno="104" tolineno="104" lineno="104" name="var"/>
          </Arguments>
          <Assign fromlineno="105" tolineno="105" lineno="105" targets="[&lt;AssName(_dest) l.105 [bb.data_smart] at Ox9a11c8c&gt;]" value="self.dict">
            <AssName fromlineno="105" tolineno="105" lineno="105" name="_dest"/>
            <Getattr fromlineno="105" tolineno="105" lineno="105" attrname="dict" expr="self">
              <Name fromlineno="105" tolineno="105" lineno="105" name="self"/>
            </Getattr>
          </Assign>
          <While fromlineno="107" tolineno="111" lineno="107">
            <BoolOp fromlineno="107" tolineno="107" lineno="107" op="and" values="_dest,var not in _dest,">
              <Name fromlineno="107" tolineno="107" lineno="107" name="_dest"/>
              <Compare fromlineno="107" tolineno="107" lineno="107" op="('not in', &lt;Name(_dest) l.107 [bb.data_smart] at Ox9a11e2c&gt;)">
                <Name fromlineno="107" tolineno="107" lineno="107" name="var"/>
                <Name fromlineno="107" tolineno="107" lineno="107" name="_dest"/>
              </Compare>
            </BoolOp>
            <If fromlineno="108" tolineno="110" lineno="108">
              <UnaryOp fromlineno="108" tolineno="108" lineno="108">
                <Compare fromlineno="108" tolineno="108" lineno="108" op="('in', &lt;Name(_dest) l.108 [bb.data_smart] at Ox9a11f2c&gt;)">
                  <Const fromlineno="108" tolineno="108" lineno="108" type="str">'_data'</Const>
                  <Name fromlineno="108" tolineno="108" lineno="108" name="_dest"/>
                </Compare>
              </UnaryOp>
              <Assign fromlineno="109" tolineno="109" lineno="109" targets="[&lt;AssName(_dest) l.109 [bb.data_smart] at Ox9a11fcc&gt;]" value="None">
                <AssName fromlineno="109" tolineno="109" lineno="109" name="_dest"/>
                <Const fromlineno="109" tolineno="109" lineno="109" type="NoneType">None</Const>
              </Assign>
              <Break fromlineno="110" tolineno="110" lineno="110"/>
            </If>
            <Assign fromlineno="111" tolineno="111" lineno="111" targets="[&lt;AssName(_dest) l.111 [bb.data_smart] at Ox9a1608c&gt;]" value="_dest['_data']">
              <AssName fromlineno="111" tolineno="111" lineno="111" name="_dest"/>
              <Subscript fromlineno="111" tolineno="111" lineno="111">
                <Name fromlineno="111" tolineno="111" lineno="111" name="_dest"/>
                <Index fromlineno="111" tolineno="111" lineno="None">
                  <Const fromlineno="111" tolineno="111" lineno="111" type="str">'_data'</Const>
                </Index>
              </Subscript>
            </Assign>
          </While>
          <If fromlineno="113" tolineno="114" lineno="113">
            <BoolOp fromlineno="113" tolineno="113" lineno="113" op="and" values="_dest,var in _dest,">
              <Name fromlineno="113" tolineno="113" lineno="113" name="_dest"/>
              <Compare fromlineno="113" tolineno="113" lineno="113" op="('in', &lt;Name(_dest) l.113 [bb.data_smart] at Ox9a1624c&gt;)">
                <Name fromlineno="113" tolineno="113" lineno="113" name="var"/>
                <Name fromlineno="113" tolineno="113" lineno="113" name="_dest"/>
              </Compare>
            </BoolOp>
            <Return fromlineno="114" tolineno="114" lineno="114">
              <Subscript fromlineno="114" tolineno="114" lineno="114">
                <Name fromlineno="114" tolineno="114" lineno="114" name="_dest"/>
                <Index fromlineno="114" tolineno="114" lineno="None">
                  <Name fromlineno="114" tolineno="114" lineno="114" name="var"/>
                </Index>
              </Subscript>
            </Return>
          </If>
          <Return fromlineno="115" tolineno="115" lineno="115">
            <Const fromlineno="115" tolineno="115" lineno="115" type="NoneType">None</Const>
          </Return>
        </Function>
        <Function fromlineno="117" tolineno="126" lineno="117">
          <Arguments fromlineno="117" tolineno="117" lineno="None" format_args="self, var">
            <AssName fromlineno="117" tolineno="117" lineno="117" name="self"/>
            <AssName fromlineno="117" tolineno="117" lineno="117" name="var"/>
          </Arguments>
          <If fromlineno="118" tolineno="119" lineno="118">
            <Compare fromlineno="118" tolineno="118" lineno="118" op="('in', &lt;Getattr(dict) l.118 [bb.data_smart] at Ox9a1654c&gt;)">
              <Name fromlineno="118" tolineno="118" lineno="118" name="var"/>
              <Getattr fromlineno="118" tolineno="118" lineno="118" attrname="dict" expr="self">
                <Name fromlineno="118" tolineno="118" lineno="118" name="self"/>
              </Getattr>
            </Compare>
            <Return fromlineno="119" tolineno="119" lineno="119"/>
          </If>
          <Assign fromlineno="121" tolineno="121" lineno="121" targets="[&lt;AssName(local_var) l.121 [bb.data_smart] at Ox9a1662c&gt;]" value="self._findVar(var)">
            <AssName fromlineno="121" tolineno="121" lineno="121" name="local_var"/>
            <CallFunc fromlineno="121" tolineno="121" lineno="121" func="Getattr(_findVar)">
              <Getattr fromlineno="121" tolineno="121" lineno="121" attrname="_findVar" expr="self">
                <Name fromlineno="121" tolineno="121" lineno="121" name="self"/>
              </Getattr>
              <Name fromlineno="121" tolineno="121" lineno="121" name="var"/>
            </CallFunc>
          </Assign>
          <If fromlineno="123" tolineno="126" lineno="123">
            <Name fromlineno="123" tolineno="123" lineno="123" name="local_var"/>
            <Assign fromlineno="124" tolineno="124" lineno="124" targets="[&lt;Subscript() l.124 [bb.data_smart] at Ox9a167cc&gt;]" value="copy.copy(local_var)">
              <Subscript fromlineno="124" tolineno="124" lineno="124">
                <Getattr fromlineno="124" tolineno="124" lineno="124" attrname="dict" expr="self">
                  <Name fromlineno="124" tolineno="124" lineno="124" name="self"/>
                </Getattr>
                <Index fromlineno="124" tolineno="124" lineno="None">
                  <Name fromlineno="124" tolineno="124" lineno="124" name="var"/>
                </Index>
              </Subscript>
              <CallFunc fromlineno="124" tolineno="124" lineno="124" func="Getattr(copy)">
                <Getattr fromlineno="124" tolineno="124" lineno="124" attrname="copy" expr="copy">
                  <Name fromlineno="124" tolineno="124" lineno="124" name="copy"/>
                </Getattr>
                <Name fromlineno="124" tolineno="124" lineno="124" name="local_var"/>
              </CallFunc>
            </Assign>
            <Discard fromlineno="126" tolineno="126" lineno="126">
              <CallFunc fromlineno="126" tolineno="126" lineno="126" func="Getattr(initVar)">
                <Getattr fromlineno="126" tolineno="126" lineno="126" attrname="initVar" expr="self">
                  <Name fromlineno="126" tolineno="126" lineno="126" name="self"/>
                </Getattr>
                <Name fromlineno="126" tolineno="126" lineno="126" name="var"/>
              </CallFunc>
            </Discard>
          </If>
        </Function>
        <Function fromlineno="128" tolineno="160" lineno="128">
          <Arguments fromlineno="128" tolineno="128" lineno="None" format_args="self, var, value">
            <AssName fromlineno="128" tolineno="128" lineno="128" name="self"/>
            <AssName fromlineno="128" tolineno="128" lineno="128" name="var"/>
            <AssName fromlineno="128" tolineno="128" lineno="128" name="value"/>
          </Arguments>
          <Assign fromlineno="129" tolineno="129" lineno="129" targets="[&lt;AssAttr(expand_cache) l.129 [bb.data_smart] at Ox9a16b8c&gt;]" value="{}">
            <AssAttr fromlineno="129" tolineno="129" lineno="129" attrname="expand_cache" expr="self">
              <Name fromlineno="129" tolineno="129" lineno="129" name="self"/>
            </AssAttr>
            <Dict fromlineno="129" tolineno="129" lineno="129"/>
          </Assign>
          <Assign fromlineno="130" tolineno="130" lineno="130" targets="[&lt;AssName(match) l.130 [bb.data_smart] at Ox9a16c4c&gt;]" value="__setvar_regexp__.match(var)">
            <AssName fromlineno="130" tolineno="130" lineno="130" name="match"/>
            <CallFunc fromlineno="130" tolineno="130" lineno="130" func="Getattr(match)">
              <Getattr fromlineno="130" tolineno="130" lineno="130" attrname="match" expr="__setvar_regexp__">
                <Name fromlineno="130" tolineno="130" lineno="130" name="__setvar_regexp__"/>
              </Getattr>
              <Name fromlineno="130" tolineno="130" lineno="130" name="var"/>
            </CallFunc>
          </Assign>
          <If fromlineno="131" tolineno="147" lineno="131">
            <BoolOp fromlineno="131" tolineno="131" lineno="131" op="and" values="match,match.group('keyword') in __setvar_keyword__,">
              <Name fromlineno="131" tolineno="131" lineno="131" name="match"/>
              <Compare fromlineno="131" tolineno="131" lineno="131" op="('in', &lt;Name(__setvar_keyword__) l.131 [bb.data_smart] at Ox9a16ecc&gt;)">
                <CallFunc fromlineno="131" tolineno="131" lineno="131" func="Getattr(group)">
                  <Getattr fromlineno="131" tolineno="131" lineno="131" attrname="group" expr="match">
                    <Name fromlineno="131" tolineno="131" lineno="131" name="match"/>
                  </Getattr>
                  <Const fromlineno="131" tolineno="131" lineno="131" type="str">'keyword'</Const>
                </CallFunc>
                <Name fromlineno="131" tolineno="131" lineno="131" name="__setvar_keyword__"/>
              </Compare>
            </BoolOp>
            <Assign fromlineno="132" tolineno="132" lineno="132" targets="[&lt;AssName(base) l.132 [bb.data_smart] at Ox9a16f4c&gt;]" value="match.group('base')">
              <AssName fromlineno="132" tolineno="132" lineno="132" name="base"/>
              <CallFunc fromlineno="132" tolineno="132" lineno="132" func="Getattr(group)">
                <Getattr fromlineno="132" tolineno="132" lineno="132" attrname="group" expr="match">
                  <Name fromlineno="132" tolineno="132" lineno="132" name="match"/>
                </Getattr>
                <Const fromlineno="132" tolineno="132" lineno="132" type="str">'base'</Const>
              </CallFunc>
            </Assign>
            <Assign fromlineno="133" tolineno="133" lineno="133" targets="[&lt;AssName(keyword) l.133 [bb.data_smart] at Ox9a1a08c&gt;]" value="match.group('keyword')">
              <AssName fromlineno="133" tolineno="133" lineno="133" name="keyword"/>
              <CallFunc fromlineno="133" tolineno="133" lineno="133" func="Getattr(group)">
                <Getattr fromlineno="133" tolineno="133" lineno="133" attrname="group" expr="match">
                  <Name fromlineno="133" tolineno="133" lineno="133" name="match"/>
                </Getattr>
                <Const fromlineno="133" tolineno="133" lineno="133" type="str">'keyword'</Const>
              </CallFunc>
            </Assign>
            <Assign fromlineno="134" tolineno="134" lineno="134" targets="[&lt;AssName(override) l.134 [bb.data_smart] at Ox9a1a1ac&gt;]" value="match.group('add')">
              <AssName fromlineno="134" tolineno="134" lineno="134" name="override"/>
              <CallFunc fromlineno="134" tolineno="134" lineno="134" func="Getattr(group)">
                <Getattr fromlineno="134" tolineno="134" lineno="134" attrname="group" expr="match">
                  <Name fromlineno="134" tolineno="134" lineno="134" name="match"/>
                </Getattr>
                <Const fromlineno="134" tolineno="134" lineno="134" type="str">'add'</Const>
              </CallFunc>
            </Assign>
            <Assign fromlineno="135" tolineno="135" lineno="135" targets="[&lt;AssName(l) l.135 [bb.data_smart] at Ox9a1a2cc&gt;]" value="(self.getVarFlag(base, keyword)) or ([])">
              <AssName fromlineno="135" tolineno="135" lineno="135" name="l"/>
              <BoolOp fromlineno="135" tolineno="135" lineno="135" op="or" values="self.getVarFlag(base, keyword),[],">
                <CallFunc fromlineno="135" tolineno="135" lineno="135" func="Getattr(getVarFlag)">
                  <Getattr fromlineno="135" tolineno="135" lineno="135" attrname="getVarFlag" expr="self">
                    <Name fromlineno="135" tolineno="135" lineno="135" name="self"/>
                  </Getattr>
                  <Name fromlineno="135" tolineno="135" lineno="135" name="base"/>
                  <Name fromlineno="135" tolineno="135" lineno="135" name="keyword"/>
                </CallFunc>
                <List fromlineno="135" tolineno="135" lineno="135"/>
              </BoolOp>
            </Assign>
            <Discard fromlineno="136" tolineno="136" lineno="136">
              <CallFunc fromlineno="136" tolineno="136" lineno="136" func="Getattr(append)">
                <Getattr fromlineno="136" tolineno="136" lineno="136" attrname="append" expr="l">
                  <Name fromlineno="136" tolineno="136" lineno="136" name="l"/>
                </Getattr>
                <List fromlineno="136" tolineno="136" lineno="136">
                  <Name fromlineno="136" tolineno="136" lineno="136" name="value"/>
                  <Name fromlineno="136" tolineno="136" lineno="136" name="override"/>
                </List>
              </CallFunc>
            </Discard>
            <Discard fromlineno="137" tolineno="137" lineno="137">
              <CallFunc fromlineno="137" tolineno="137" lineno="137" func="Getattr(setVarFlag)">
                <Getattr fromlineno="137" tolineno="137" lineno="137" attrname="setVarFlag" expr="self">
                  <Name fromlineno="137" tolineno="137" lineno="137" name="self"/>
                </Getattr>
                <Name fromlineno="137" tolineno="137" lineno="137" name="base"/>
                <Name fromlineno="137" tolineno="137" lineno="137" name="keyword"/>
                <Name fromlineno="137" tolineno="137" lineno="137" name="l"/>
              </CallFunc>
            </Discard>
            <TryExcept fromlineno="141" tolineno="145" lineno="141">
              <Discard fromlineno="142" tolineno="142" lineno="142">
                <CallFunc fromlineno="142" tolineno="142" lineno="142" func="Getattr(add)">
                  <Getattr fromlineno="142" tolineno="142" lineno="142" attrname="add" expr="self._special_values[keyword]">
                    <Subscript fromlineno="142" tolineno="142" lineno="142">
                      <Getattr fromlineno="142" tolineno="142" lineno="142" attrname="_special_values" expr="self">
                        <Name fromlineno="142" tolineno="142" lineno="142" name="self"/>
                      </Getattr>
                      <Index fromlineno="142" tolineno="142" lineno="None">
                        <Name fromlineno="142" tolineno="142" lineno="142" name="keyword"/>
                      </Index>
                    </Subscript>
                  </Getattr>
                  <Name fromlineno="142" tolineno="142" lineno="142" name="base"/>
                </CallFunc>
              </Discard>
              <ExceptHandler fromlineno="143" tolineno="145" lineno="143">
                <Assign fromlineno="144" tolineno="144" lineno="144" targets="[&lt;Subscript() l.144 [bb.data_smart] at Ox9a1a8cc&gt;]" value="set()">
                  <Subscript fromlineno="144" tolineno="144" lineno="144">
                    <Getattr fromlineno="144" tolineno="144" lineno="144" attrname="_special_values" expr="self">
                      <Name fromlineno="144" tolineno="144" lineno="144" name="self"/>
                    </Getattr>
                    <Index fromlineno="144" tolineno="144" lineno="None">
                      <Name fromlineno="144" tolineno="144" lineno="144" name="keyword"/>
                    </Index>
                  </Subscript>
                  <CallFunc fromlineno="144" tolineno="144" lineno="144" func="Name(set)">
                    <Name fromlineno="144" tolineno="144" lineno="144" name="set"/>
                  </CallFunc>
                </Assign>
                <Discard fromlineno="145" tolineno="145" lineno="145">
                  <CallFunc fromlineno="145" tolineno="145" lineno="145" func="Getattr(add)">
                    <Getattr fromlineno="145" tolineno="145" lineno="145" attrname="add" expr="self._special_values[keyword]">
                      <Subscript fromlineno="145" tolineno="145" lineno="145">
                        <Getattr fromlineno="145" tolineno="145" lineno="145" attrname="_special_values" expr="self">
                          <Name fromlineno="145" tolineno="145" lineno="145" name="self"/>
                        </Getattr>
                        <Index fromlineno="145" tolineno="145" lineno="None">
                          <Name fromlineno="145" tolineno="145" lineno="145" name="keyword"/>
                        </Index>
                      </Subscript>
                    </Getattr>
                    <Name fromlineno="145" tolineno="145" lineno="145" name="base"/>
                  </CallFunc>
                </Discard>
              </ExceptHandler>
            </TryExcept>
            <Return fromlineno="147" tolineno="147" lineno="147"/>
          </If>
          <If fromlineno="149" tolineno="150" lineno="149">
            <UnaryOp fromlineno="149" tolineno="149" lineno="149">
              <Compare fromlineno="149" tolineno="149" lineno="149" op="('in', &lt;Getattr(dict) l.149 [bb.data_smart] at Ox9a1abcc&gt;)">
                <Name fromlineno="149" tolineno="149" lineno="149" name="var"/>
                <Getattr fromlineno="149" tolineno="149" lineno="149" attrname="dict" expr="self">
                  <Name fromlineno="149" tolineno="149" lineno="149" name="self"/>
                </Getattr>
              </Compare>
            </UnaryOp>
            <Discard fromlineno="150" tolineno="150" lineno="150">
              <CallFunc fromlineno="150" tolineno="150" lineno="150" func="Getattr(_makeShadowCopy)">
                <Getattr fromlineno="150" tolineno="150" lineno="150" attrname="_makeShadowCopy" expr="self">
                  <Name fromlineno="150" tolineno="150" lineno="150" name="self"/>
                </Getattr>
                <Name fromlineno="150" tolineno="150" lineno="150" name="var"/>
              </CallFunc>
            </Discard>
          </If>
          <If fromlineno="153" tolineno="157" lineno="153">
            <Compare fromlineno="153" tolineno="153" lineno="153" op="('in', &lt;Name(var) l.153 [bb.data_smart] at Ox9a1adac&gt;)">
              <Const fromlineno="153" tolineno="153" lineno="153" type="str">'_'</Const>
              <Name fromlineno="153" tolineno="153" lineno="153" name="var"/>
            </Compare>
            <Assign fromlineno="154" tolineno="154" lineno="154" targets="[&lt;AssName(override) l.154 [bb.data_smart] at Ox9a1ae4c&gt;]" value="var[(var.rfind('_')) + (1):]">
              <AssName fromlineno="154" tolineno="154" lineno="154" name="override"/>
              <Subscript fromlineno="154" tolineno="154" lineno="154">
                <Name fromlineno="154" tolineno="154" lineno="154" name="var"/>
                <Slice fromlineno="154" tolineno="154" lineno="None">
                  <BinOp fromlineno="154" tolineno="154" lineno="154" op="+" left="var.rfind('_')" right="1">
                    <CallFunc fromlineno="154" tolineno="154" lineno="154" func="Getattr(rfind)">
                      <Getattr fromlineno="154" tolineno="154" lineno="154" attrname="rfind" expr="var">
                        <Name fromlineno="154" tolineno="154" lineno="154" name="var"/>
                      </Getattr>
                      <Const fromlineno="154" tolineno="154" lineno="154" type="str">'_'</Const>
                    </CallFunc>
                    <Const fromlineno="154" tolineno="154" lineno="154" type="int">1</Const>
                  </BinOp>
                </Slice>
              </Subscript>
            </Assign>
            <If fromlineno="155" tolineno="156" lineno="155">
              <UnaryOp fromlineno="155" tolineno="155" lineno="155">
                <CallFunc fromlineno="155" tolineno="155" lineno="155" func="Getattr(has_key)">
                  <Getattr fromlineno="155" tolineno="155" lineno="155" attrname="has_key" expr="self._seen_overrides">
                    <Getattr fromlineno="155" tolineno="155" lineno="155" attrname="_seen_overrides" expr="self">
                      <Name fromlineno="155" tolineno="155" lineno="155" name="self"/>
                    </Getattr>
                  </Getattr>
                  <Name fromlineno="155" tolineno="155" lineno="155" name="override"/>
                </CallFunc>
              </UnaryOp>
              <Assign fromlineno="156" tolineno="156" lineno="156" targets="[&lt;Subscript() l.156 [bb.data_smart] at Ox9a2116c&gt;]" value="set()">
                <Subscript fromlineno="156" tolineno="156" lineno="156">
                  <Getattr fromlineno="156" tolineno="156" lineno="156" attrname="_seen_overrides" expr="self">
                    <Name fromlineno="156" tolineno="156" lineno="156" name="self"/>
                  </Getattr>
                  <Index fromlineno="156" tolineno="156" lineno="None">
                    <Name fromlineno="156" tolineno="156" lineno="156" name="override"/>
                  </Index>
                </Subscript>
                <CallFunc fromlineno="156" tolineno="156" lineno="156" func="Name(set)">
                  <Name fromlineno="156" tolineno="156" lineno="156" name="set"/>
                </CallFunc>
              </Assign>
            </If>
            <Discard fromlineno="157" tolineno="157" lineno="157">
              <CallFunc fromlineno="157" tolineno="157" lineno="157" func="Getattr(add)">
                <Getattr fromlineno="157" tolineno="157" lineno="157" attrname="add" expr="self._seen_overrides[override]">
                  <Subscript fromlineno="157" tolineno="157" lineno="157">
                    <Getattr fromlineno="157" tolineno="157" lineno="157" attrname="_seen_overrides" expr="self">
                      <Name fromlineno="157" tolineno="157" lineno="157" name="self"/>
                    </Getattr>
                    <Index fromlineno="157" tolineno="157" lineno="None">
                      <Name fromlineno="157" tolineno="157" lineno="157" name="override"/>
                    </Index>
                  </Subscript>
                </Getattr>
                <Name fromlineno="157" tolineno="157" lineno="157" name="var"/>
              </CallFunc>
            </Discard>
          </If>
          <Assign fromlineno="160" tolineno="160" lineno="160" targets="[&lt;Subscript() l.160 [bb.data_smart] at Ox9a213cc&gt;]" value="value">
            <Subscript fromlineno="160" tolineno="160" lineno="160">
              <Subscript fromlineno="160" tolineno="160" lineno="160">
                <Getattr fromlineno="160" tolineno="160" lineno="160" attrname="dict" expr="self">
                  <Name fromlineno="160" tolineno="160" lineno="160" name="self"/>
                </Getattr>
                <Index fromlineno="160" tolineno="160" lineno="None">
                  <Name fromlineno="160" tolineno="160" lineno="160" name="var"/>
                </Index>
              </Subscript>
              <Index fromlineno="160" tolineno="160" lineno="None">
                <Const fromlineno="160" tolineno="160" lineno="160" type="str">'content'</Const>
              </Index>
            </Subscript>
            <Name fromlineno="160" tolineno="160" lineno="160" name="value"/>
          </Assign>
        </Function>
        <Function fromlineno="162" tolineno="167" lineno="162">
          <Arguments fromlineno="162" tolineno="162" lineno="None" format_args="self, var, exp">
            <AssName fromlineno="162" tolineno="162" lineno="162" name="self"/>
            <AssName fromlineno="162" tolineno="162" lineno="162" name="var"/>
            <AssName fromlineno="162" tolineno="162" lineno="162" name="exp"/>
          </Arguments>
          <Assign fromlineno="163" tolineno="163" lineno="163" targets="[&lt;AssName(value) l.163 [bb.data_smart] at Ox9a216ac&gt;]" value="self.getVarFlag(var, 'content')">
            <AssName fromlineno="163" tolineno="163" lineno="163" name="value"/>
            <CallFunc fromlineno="163" tolineno="163" lineno="163" func="Getattr(getVarFlag)">
              <Getattr fromlineno="163" tolineno="163" lineno="163" attrname="getVarFlag" expr="self">
                <Name fromlineno="163" tolineno="163" lineno="163" name="self"/>
              </Getattr>
              <Name fromlineno="163" tolineno="163" lineno="163" name="var"/>
              <Const fromlineno="163" tolineno="163" lineno="163" type="str">'content'</Const>
            </CallFunc>
          </Assign>
          <If fromlineno="165" tolineno="166" lineno="165">
            <BoolOp fromlineno="165" tolineno="165" lineno="165" op="and" values="exp,value,">
              <Name fromlineno="165" tolineno="165" lineno="165" name="exp"/>
              <Name fromlineno="165" tolineno="165" lineno="165" name="value"/>
            </BoolOp>
            <Return fromlineno="166" tolineno="166" lineno="166">
              <CallFunc fromlineno="166" tolineno="166" lineno="166" func="Getattr(expand)">
                <Getattr fromlineno="166" tolineno="166" lineno="166" attrname="expand" expr="self">
                  <Name fromlineno="166" tolineno="166" lineno="166" name="self"/>
                </Getattr>
                <Name fromlineno="166" tolineno="166" lineno="166" name="value"/>
                <Name fromlineno="166" tolineno="166" lineno="166" name="var"/>
              </CallFunc>
            </Return>
          </If>
          <Return fromlineno="167" tolineno="167" lineno="167">
            <Name fromlineno="167" tolineno="167" lineno="167" name="value"/>
          </Return>
        </Function>
        <Function fromlineno="169" tolineno="189" lineno="169">
          <Arguments fromlineno="169" tolineno="169" lineno="None" format_args="self, key, newkey">
            <AssName fromlineno="169" tolineno="169" lineno="169" name="self"/>
            <AssName fromlineno="169" tolineno="169" lineno="169" name="key"/>
            <AssName fromlineno="169" tolineno="169" lineno="169" name="newkey"/>
          </Arguments>
          <Assign fromlineno="173" tolineno="173" lineno="173" targets="[&lt;AssName(val) l.173 [bb.data_smart] at Ox9a21b2c&gt;]" value="self.getVar(key, 0)">
            <AssName fromlineno="173" tolineno="173" lineno="173" name="val"/>
            <CallFunc fromlineno="173" tolineno="173" lineno="173" func="Getattr(getVar)">
              <Getattr fromlineno="173" tolineno="173" lineno="173" attrname="getVar" expr="self">
                <Name fromlineno="173" tolineno="173" lineno="173" name="self"/>
              </Getattr>
              <Name fromlineno="173" tolineno="173" lineno="173" name="key"/>
              <Const fromlineno="173" tolineno="173" lineno="173" type="int">0</Const>
            </CallFunc>
          </Assign>
          <If fromlineno="174" tolineno="175" lineno="174">
            <Compare fromlineno="174" tolineno="174" lineno="174" op="('is', &lt;Const(NoneType) l.174 [bb.data_smart] at Ox9a21ccc&gt;)">
              <Name fromlineno="174" tolineno="174" lineno="174" name="val"/>
              <Const fromlineno="174" tolineno="174" lineno="174" type="NoneType">None</Const>
            </Compare>
            <Return fromlineno="175" tolineno="175" lineno="175"/>
          </If>
          <Discard fromlineno="177" tolineno="177" lineno="177">
            <CallFunc fromlineno="177" tolineno="177" lineno="177" func="Getattr(setVar)">
              <Getattr fromlineno="177" tolineno="177" lineno="177" attrname="setVar" expr="self">
                <Name fromlineno="177" tolineno="177" lineno="177" name="self"/>
              </Getattr>
              <Name fromlineno="177" tolineno="177" lineno="177" name="newkey"/>
              <Name fromlineno="177" tolineno="177" lineno="177" name="val"/>
            </CallFunc>
          </Discard>
          <For fromlineno="179" tolineno="187" lineno="179">
            <AssName fromlineno="179" tolineno="179" lineno="179" name="i"/>
            <Tuple fromlineno="179" tolineno="179" lineno="179">
              <Const fromlineno="179" tolineno="179" lineno="179" type="str">'_append'</Const>
              <Const fromlineno="179" tolineno="179" lineno="179" type="str">'_prepend'</Const>
            </Tuple>
            <Assign fromlineno="180" tolineno="180" lineno="180" targets="[&lt;AssName(dest) l.180 [bb.data_smart] at Ox9a21f8c&gt;]" value="(self.getVarFlag(newkey, i)) or ([])">
              <AssName fromlineno="180" tolineno="180" lineno="180" name="dest"/>
              <BoolOp fromlineno="180" tolineno="180" lineno="180" op="or" values="self.getVarFlag(newkey, i),[],">
                <CallFunc fromlineno="180" tolineno="180" lineno="180" func="Getattr(getVarFlag)">
                  <Getattr fromlineno="180" tolineno="180" lineno="180" attrname="getVarFlag" expr="self">
                    <Name fromlineno="180" tolineno="180" lineno="180" name="self"/>
                  </Getattr>
                  <Name fromlineno="180" tolineno="180" lineno="180" name="newkey"/>
                  <Name fromlineno="180" tolineno="180" lineno="180" name="i"/>
                </CallFunc>
                <List fromlineno="180" tolineno="180" lineno="180"/>
              </BoolOp>
            </Assign>
            <Assign fromlineno="181" tolineno="181" lineno="181" targets="[&lt;AssName(src) l.181 [bb.data_smart] at Ox9a2716c&gt;]" value="(self.getVarFlag(key, i)) or ([])">
              <AssName fromlineno="181" tolineno="181" lineno="181" name="src"/>
              <BoolOp fromlineno="181" tolineno="181" lineno="181" op="or" values="self.getVarFlag(key, i),[],">
                <CallFunc fromlineno="181" tolineno="181" lineno="181" func="Getattr(getVarFlag)">
                  <Getattr fromlineno="181" tolineno="181" lineno="181" attrname="getVarFlag" expr="self">
                    <Name fromlineno="181" tolineno="181" lineno="181" name="self"/>
                  </Getattr>
                  <Name fromlineno="181" tolineno="181" lineno="181" name="key"/>
                  <Name fromlineno="181" tolineno="181" lineno="181" name="i"/>
                </CallFunc>
                <List fromlineno="181" tolineno="181" lineno="181"/>
              </BoolOp>
            </Assign>
            <Discard fromlineno="182" tolineno="182" lineno="182">
              <CallFunc fromlineno="182" tolineno="182" lineno="182" func="Getattr(extend)">
                <Getattr fromlineno="182" tolineno="182" lineno="182" attrname="extend" expr="dest">
                  <Name fromlineno="182" tolineno="182" lineno="182" name="dest"/>
                </Getattr>
                <Name fromlineno="182" tolineno="182" lineno="182" name="src"/>
              </CallFunc>
            </Discard>
            <Discard fromlineno="183" tolineno="183" lineno="183">
              <CallFunc fromlineno="183" tolineno="183" lineno="183" func="Getattr(setVarFlag)">
                <Getattr fromlineno="183" tolineno="183" lineno="183" attrname="setVarFlag" expr="self">
                  <Name fromlineno="183" tolineno="183" lineno="183" name="self"/>
                </Getattr>
                <Name fromlineno="183" tolineno="183" lineno="183" name="newkey"/>
                <Name fromlineno="183" tolineno="183" lineno="183" name="i"/>
                <Name fromlineno="183" tolineno="183" lineno="183" name="dest"/>
              </CallFunc>
            </Discard>
            <If fromlineno="185" tolineno="187" lineno="185">
              <BoolOp fromlineno="185" tolineno="185" lineno="185" op="and" values="self._special_values.has_key(i),key in self._special_values[i],">
                <CallFunc fromlineno="185" tolineno="185" lineno="185" func="Getattr(has_key)">
                  <Getattr fromlineno="185" tolineno="185" lineno="185" attrname="has_key" expr="self._special_values">
                    <Getattr fromlineno="185" tolineno="185" lineno="185" attrname="_special_values" expr="self">
                      <Name fromlineno="185" tolineno="185" lineno="185" name="self"/>
                    </Getattr>
                  </Getattr>
                  <Name fromlineno="185" tolineno="185" lineno="185" name="i"/>
                </CallFunc>
                <Compare fromlineno="185" tolineno="185" lineno="185" op="('in', &lt;Subscript() l.185 [bb.data_smart] at Ox9a2766c&gt;)">
                  <Name fromlineno="185" tolineno="185" lineno="185" name="key"/>
                  <Subscript fromlineno="185" tolineno="185" lineno="185">
                    <Getattr fromlineno="185" tolineno="185" lineno="185" attrname="_special_values" expr="self">
                      <Name fromlineno="185" tolineno="185" lineno="185" name="self"/>
                    </Getattr>
                    <Index fromlineno="185" tolineno="185" lineno="None">
                      <Name fromlineno="185" tolineno="185" lineno="185" name="i"/>
                    </Index>
                  </Subscript>
                </Compare>
              </BoolOp>
              <Discard fromlineno="186" tolineno="186" lineno="186">
                <CallFunc fromlineno="186" tolineno="186" lineno="186" func="Getattr(remove)">
                  <Getattr fromlineno="186" tolineno="186" lineno="186" attrname="remove" expr="self._special_values[i]">
                    <Subscript fromlineno="186" tolineno="186" lineno="186">
                      <Getattr fromlineno="186" tolineno="186" lineno="186" attrname="_special_values" expr="self">
                        <Name fromlineno="186" tolineno="186" lineno="186" name="self"/>
                      </Getattr>
                      <Index fromlineno="186" tolineno="186" lineno="None">
                        <Name fromlineno="186" tolineno="186" lineno="186" name="i"/>
                      </Index>
                    </Subscript>
                  </Getattr>
                  <Name fromlineno="186" tolineno="186" lineno="186" name="key"/>
                </CallFunc>
              </Discard>
              <Discard fromlineno="187" tolineno="187" lineno="187">
                <CallFunc fromlineno="187" tolineno="187" lineno="187" func="Getattr(add)">
                  <Getattr fromlineno="187" tolineno="187" lineno="187" attrname="add" expr="self._special_values[i]">
                    <Subscript fromlineno="187" tolineno="187" lineno="187">
                      <Getattr fromlineno="187" tolineno="187" lineno="187" attrname="_special_values" expr="self">
                        <Name fromlineno="187" tolineno="187" lineno="187" name="self"/>
                      </Getattr>
                      <Index fromlineno="187" tolineno="187" lineno="None">
                        <Name fromlineno="187" tolineno="187" lineno="187" name="i"/>
                      </Index>
                    </Subscript>
                  </Getattr>
                  <Name fromlineno="187" tolineno="187" lineno="187" name="newkey"/>
                </CallFunc>
              </Discard>
            </If>
          </For>
          <Discard fromlineno="189" tolineno="189" lineno="189">
            <CallFunc fromlineno="189" tolineno="189" lineno="189" func="Getattr(delVar)">
              <Getattr fromlineno="189" tolineno="189" lineno="189" attrname="delVar" expr="self">
                <Name fromlineno="189" tolineno="189" lineno="189" name="self"/>
              </Getattr>
              <Name fromlineno="189" tolineno="189" lineno="189" name="key"/>
            </CallFunc>
          </Discard>
        </Function>
        <Function fromlineno="191" tolineno="193" lineno="191">
          <Arguments fromlineno="191" tolineno="191" lineno="None" format_args="self, var">
            <AssName fromlineno="191" tolineno="191" lineno="191" name="self"/>
            <AssName fromlineno="191" tolineno="191" lineno="191" name="var"/>
          </Arguments>
          <Assign fromlineno="192" tolineno="192" lineno="192" targets="[&lt;AssAttr(expand_cache) l.192 [bb.data_smart] at Ox9a27bec&gt;]" value="{}">
            <AssAttr fromlineno="192" tolineno="192" lineno="192" attrname="expand_cache" expr="self">
              <Name fromlineno="192" tolineno="192" lineno="192" name="self"/>
            </AssAttr>
            <Dict fromlineno="192" tolineno="192" lineno="192"/>
          </Assign>
          <Assign fromlineno="193" tolineno="193" lineno="193" targets="[&lt;Subscript() l.193 [bb.data_smart] at Ox9a27cac&gt;]" value="{}">
            <Subscript fromlineno="193" tolineno="193" lineno="193">
              <Getattr fromlineno="193" tolineno="193" lineno="193" attrname="dict" expr="self">
                <Name fromlineno="193" tolineno="193" lineno="193" name="self"/>
              </Getattr>
              <Index fromlineno="193" tolineno="193" lineno="None">
                <Name fromlineno="193" tolineno="193" lineno="193" name="var"/>
              </Index>
            </Subscript>
            <Dict fromlineno="193" tolineno="193" lineno="193"/>
          </Assign>
        </Function>
        <Function fromlineno="195" tolineno="198" lineno="195">
          <Arguments fromlineno="195" tolineno="195" lineno="None" format_args="self, var, flag, flagvalue">
            <AssName fromlineno="195" tolineno="195" lineno="195" name="self"/>
            <AssName fromlineno="195" tolineno="195" lineno="195" name="var"/>
            <AssName fromlineno="195" tolineno="195" lineno="195" name="flag"/>
            <AssName fromlineno="195" tolineno="195" lineno="195" name="flagvalue"/>
          </Arguments>
          <If fromlineno="196" tolineno="197" lineno="196">
            <UnaryOp fromlineno="196" tolineno="196" lineno="196">
              <Compare fromlineno="196" tolineno="196" lineno="196" op="('in', &lt;Getattr(dict) l.196 [bb.data_smart] at Ox9a2b02c&gt;)">
                <Name fromlineno="196" tolineno="196" lineno="196" name="var"/>
                <Getattr fromlineno="196" tolineno="196" lineno="196" attrname="dict" expr="self">
                  <Name fromlineno="196" tolineno="196" lineno="196" name="self"/>
                </Getattr>
              </Compare>
            </UnaryOp>
            <Discard fromlineno="197" tolineno="197" lineno="197">
              <CallFunc fromlineno="197" tolineno="197" lineno="197" func="Getattr(_makeShadowCopy)">
                <Getattr fromlineno="197" tolineno="197" lineno="197" attrname="_makeShadowCopy" expr="self">
                  <Name fromlineno="197" tolineno="197" lineno="197" name="self"/>
                </Getattr>
                <Name fromlineno="197" tolineno="197" lineno="197" name="var"/>
              </CallFunc>
            </Discard>
          </If>
          <Assign fromlineno="198" tolineno="198" lineno="198" targets="[&lt;Subscript() l.198 [bb.data_smart] at Ox9a2b1ac&gt;]" value="flagvalue">
            <Subscript fromlineno="198" tolineno="198" lineno="198">
              <Subscript fromlineno="198" tolineno="198" lineno="198">
                <Getattr fromlineno="198" tolineno="198" lineno="198" attrname="dict" expr="self">
                  <Name fromlineno="198" tolineno="198" lineno="198" name="self"/>
                </Getattr>
                <Index fromlineno="198" tolineno="198" lineno="None">
                  <Name fromlineno="198" tolineno="198" lineno="198" name="var"/>
                </Index>
              </Subscript>
              <Index fromlineno="198" tolineno="198" lineno="None">
                <Name fromlineno="198" tolineno="198" lineno="198" name="flag"/>
              </Index>
            </Subscript>
            <Name fromlineno="198" tolineno="198" lineno="198" name="flagvalue"/>
          </Assign>
        </Function>
        <Function fromlineno="200" tolineno="205" lineno="200">
          <Arguments fromlineno="200" tolineno="200" lineno="None" format_args="self, var, flag">
            <AssName fromlineno="200" tolineno="200" lineno="200" name="self"/>
            <AssName fromlineno="200" tolineno="200" lineno="200" name="var"/>
            <AssName fromlineno="200" tolineno="200" lineno="200" name="flag"/>
          </Arguments>
          <Assign fromlineno="201" tolineno="201" lineno="201" targets="[&lt;AssName(local_var) l.201 [bb.data_smart] at Ox9a2b48c&gt;]" value="self._findVar(var)">
            <AssName fromlineno="201" tolineno="201" lineno="201" name="local_var"/>
            <CallFunc fromlineno="201" tolineno="201" lineno="201" func="Getattr(_findVar)">
              <Getattr fromlineno="201" tolineno="201" lineno="201" attrname="_findVar" expr="self">
                <Name fromlineno="201" tolineno="201" lineno="201" name="self"/>
              </Getattr>
              <Name fromlineno="201" tolineno="201" lineno="201" name="var"/>
            </CallFunc>
          </Assign>
          <If fromlineno="202" tolineno="204" lineno="202">
            <Name fromlineno="202" tolineno="202" lineno="202" name="local_var"/>
            <If fromlineno="203" tolineno="204" lineno="203">
              <Compare fromlineno="203" tolineno="203" lineno="203" op="('in', &lt;Name(local_var) l.203 [bb.data_smart] at Ox9a2b6ac&gt;)">
                <Name fromlineno="203" tolineno="203" lineno="203" name="flag"/>
                <Name fromlineno="203" tolineno="203" lineno="203" name="local_var"/>
              </Compare>
              <Return fromlineno="204" tolineno="204" lineno="204">
                <CallFunc fromlineno="204" tolineno="204" lineno="204" func="Getattr(copy)">
                  <Getattr fromlineno="204" tolineno="204" lineno="204" attrname="copy" expr="copy">
                    <Name fromlineno="204" tolineno="204" lineno="204" name="copy"/>
                  </Getattr>
                  <Subscript fromlineno="204" tolineno="204" lineno="204">
                    <Name fromlineno="204" tolineno="204" lineno="204" name="local_var"/>
                    <Index fromlineno="204" tolineno="204" lineno="None">
                      <Name fromlineno="204" tolineno="204" lineno="204" name="flag"/>
                    </Index>
                  </Subscript>
                </CallFunc>
              </Return>
            </If>
          </If>
          <Return fromlineno="205" tolineno="205" lineno="205">
            <Const fromlineno="205" tolineno="205" lineno="205" type="NoneType">None</Const>
          </Return>
        </Function>
        <Function fromlineno="207" tolineno="215" lineno="207">
          <Arguments fromlineno="207" tolineno="207" lineno="None" format_args="self, var, flag">
            <AssName fromlineno="207" tolineno="207" lineno="207" name="self"/>
            <AssName fromlineno="207" tolineno="207" lineno="207" name="var"/>
            <AssName fromlineno="207" tolineno="207" lineno="207" name="flag"/>
          </Arguments>
          <Assign fromlineno="208" tolineno="208" lineno="208" targets="[&lt;AssName(local_var) l.208 [bb.data_smart] at Ox9a2ba0c&gt;]" value="self._findVar(var)">
            <AssName fromlineno="208" tolineno="208" lineno="208" name="local_var"/>
            <CallFunc fromlineno="208" tolineno="208" lineno="208" func="Getattr(_findVar)">
              <Getattr fromlineno="208" tolineno="208" lineno="208" attrname="_findVar" expr="self">
                <Name fromlineno="208" tolineno="208" lineno="208" name="self"/>
              </Getattr>
              <Name fromlineno="208" tolineno="208" lineno="208" name="var"/>
            </CallFunc>
          </Assign>
          <If fromlineno="209" tolineno="210" lineno="209">
            <UnaryOp fromlineno="209" tolineno="209" lineno="209">
              <Name fromlineno="209" tolineno="209" lineno="209" name="local_var"/>
            </UnaryOp>
            <Return fromlineno="210" tolineno="210" lineno="210"/>
          </If>
          <If fromlineno="211" tolineno="212" lineno="211">
            <UnaryOp fromlineno="211" tolineno="211" lineno="211">
              <Compare fromlineno="211" tolineno="211" lineno="211" op="('in', &lt;Getattr(dict) l.211 [bb.data_smart] at Ox9a2bc6c&gt;)">
                <Name fromlineno="211" tolineno="211" lineno="211" name="var"/>
                <Getattr fromlineno="211" tolineno="211" lineno="211" attrname="dict" expr="self">
                  <Name fromlineno="211" tolineno="211" lineno="211" name="self"/>
                </Getattr>
              </Compare>
            </UnaryOp>
            <Discard fromlineno="212" tolineno="212" lineno="212">
              <CallFunc fromlineno="212" tolineno="212" lineno="212" func="Getattr(_makeShadowCopy)">
                <Getattr fromlineno="212" tolineno="212" lineno="212" attrname="_makeShadowCopy" expr="self">
                  <Name fromlineno="212" tolineno="212" lineno="212" name="self"/>
                </Getattr>
                <Name fromlineno="212" tolineno="212" lineno="212" name="var"/>
              </CallFunc>
            </Discard>
          </If>
          <If fromlineno="214" tolineno="215" lineno="214">
            <BoolOp fromlineno="214" tolineno="214" lineno="214" op="and" values="var in self.dict,flag in self.dict[var],">
              <Compare fromlineno="214" tolineno="214" lineno="214" op="('in', &lt;Getattr(dict) l.214 [bb.data_smart] at Ox9a2beac&gt;)">
                <Name fromlineno="214" tolineno="214" lineno="214" name="var"/>
                <Getattr fromlineno="214" tolineno="214" lineno="214" attrname="dict" expr="self">
                  <Name fromlineno="214" tolineno="214" lineno="214" name="self"/>
                </Getattr>
              </Compare>
              <Compare fromlineno="214" tolineno="214" lineno="214" op="('in', &lt;Subscript() l.214 [bb.data_smart] at Ox9a2bf6c&gt;)">
                <Name fromlineno="214" tolineno="214" lineno="214" name="flag"/>
                <Subscript fromlineno="214" tolineno="214" lineno="214">
                  <Getattr fromlineno="214" tolineno="214" lineno="214" attrname="dict" expr="self">
                    <Name fromlineno="214" tolineno="214" lineno="214" name="self"/>
                  </Getattr>
                  <Index fromlineno="214" tolineno="214" lineno="None">
                    <Name fromlineno="214" tolineno="214" lineno="214" name="var"/>
                  </Index>
                </Subscript>
              </Compare>
            </BoolOp>
            <Delete fromlineno="215" tolineno="215" lineno="215">
              <Subscript fromlineno="215" tolineno="215" lineno="215">
                <Subscript fromlineno="215" tolineno="215" lineno="215">
                  <Getattr fromlineno="215" tolineno="215" lineno="215" attrname="dict" expr="self">
                    <Name fromlineno="215" tolineno="215" lineno="215" name="self"/>
                  </Getattr>
                  <Index fromlineno="215" tolineno="215" lineno="None">
                    <Name fromlineno="215" tolineno="215" lineno="215" name="var"/>
                  </Index>
                </Subscript>
                <Index fromlineno="215" tolineno="215" lineno="None">
                  <Name fromlineno="215" tolineno="215" lineno="215" name="flag"/>
                </Index>
              </Subscript>
            </Delete>
          </If>
        </Function>
        <Function fromlineno="217" tolineno="224" lineno="217">
          <Arguments fromlineno="217" tolineno="217" lineno="None" format_args="self, var, flags">
            <AssName fromlineno="217" tolineno="217" lineno="217" name="self"/>
            <AssName fromlineno="217" tolineno="217" lineno="217" name="var"/>
            <AssName fromlineno="217" tolineno="217" lineno="217" name="flags"/>
          </Arguments>
          <If fromlineno="218" tolineno="219" lineno="218">
            <UnaryOp fromlineno="218" tolineno="218" lineno="218">
              <Compare fromlineno="218" tolineno="218" lineno="218" op="('in', &lt;Getattr(dict) l.218 [bb.data_smart] at Ox9a2f3cc&gt;)">
                <Name fromlineno="218" tolineno="218" lineno="218" name="var"/>
                <Getattr fromlineno="218" tolineno="218" lineno="218" attrname="dict" expr="self">
                  <Name fromlineno="218" tolineno="218" lineno="218" name="self"/>
                </Getattr>
              </Compare>
            </UnaryOp>
            <Discard fromlineno="219" tolineno="219" lineno="219">
              <CallFunc fromlineno="219" tolineno="219" lineno="219" func="Getattr(_makeShadowCopy)">
                <Getattr fromlineno="219" tolineno="219" lineno="219" attrname="_makeShadowCopy" expr="self">
                  <Name fromlineno="219" tolineno="219" lineno="219" name="self"/>
                </Getattr>
                <Name fromlineno="219" tolineno="219" lineno="219" name="var"/>
              </CallFunc>
            </Discard>
          </If>
          <For fromlineno="221" tolineno="224" lineno="221">
            <AssName fromlineno="221" tolineno="221" lineno="221" name="i"/>
            <CallFunc fromlineno="221" tolineno="221" lineno="221" func="Getattr(keys)">
              <Getattr fromlineno="221" tolineno="221" lineno="221" attrname="keys" expr="flags">
                <Name fromlineno="221" tolineno="221" lineno="221" name="flags"/>
              </Getattr>
            </CallFunc>
            <If fromlineno="222" tolineno="223" lineno="222">
              <Compare fromlineno="222" tolineno="222" lineno="222" op="('==', &lt;Const(str) l.222 [bb.data_smart] at Ox9a2f6cc&gt;)">
                <Name fromlineno="222" tolineno="222" lineno="222" name="i"/>
                <Const fromlineno="222" tolineno="222" lineno="222" type="str">'content'</Const>
              </Compare>
              <Continue fromlineno="223" tolineno="223" lineno="223"/>
            </If>
            <Assign fromlineno="224" tolineno="224" lineno="224" targets="[&lt;Subscript() l.224 [bb.data_smart] at Ox9a2f78c&gt;]" value="flags[i]">
              <Subscript fromlineno="224" tolineno="224" lineno="224">
                <Subscript fromlineno="224" tolineno="224" lineno="224">
                  <Getattr fromlineno="224" tolineno="224" lineno="224" attrname="dict" expr="self">
                    <Name fromlineno="224" tolineno="224" lineno="224" name="self"/>
                  </Getattr>
                  <Index fromlineno="224" tolineno="224" lineno="None">
                    <Name fromlineno="224" tolineno="224" lineno="224" name="var"/>
                  </Index>
                </Subscript>
                <Index fromlineno="224" tolineno="224" lineno="None">
                  <Name fromlineno="224" tolineno="224" lineno="224" name="i"/>
                </Index>
              </Subscript>
              <Subscript fromlineno="224" tolineno="224" lineno="224">
                <Name fromlineno="224" tolineno="224" lineno="224" name="flags"/>
                <Index fromlineno="224" tolineno="224" lineno="None">
                  <Name fromlineno="224" tolineno="224" lineno="224" name="i"/>
                </Index>
              </Subscript>
            </Assign>
          </For>
        </Function>
        <Function fromlineno="226" tolineno="238" lineno="226">
          <Arguments fromlineno="226" tolineno="226" lineno="None" format_args="self, var">
            <AssName fromlineno="226" tolineno="226" lineno="226" name="self"/>
            <AssName fromlineno="226" tolineno="226" lineno="226" name="var"/>
          </Arguments>
          <Assign fromlineno="227" tolineno="227" lineno="227" targets="[&lt;AssName(local_var) l.227 [bb.data_smart] at Ox9a2fa8c&gt;]" value="self._findVar(var)">
            <AssName fromlineno="227" tolineno="227" lineno="227" name="local_var"/>
            <CallFunc fromlineno="227" tolineno="227" lineno="227" func="Getattr(_findVar)">
              <Getattr fromlineno="227" tolineno="227" lineno="227" attrname="_findVar" expr="self">
                <Name fromlineno="227" tolineno="227" lineno="227" name="self"/>
              </Getattr>
              <Name fromlineno="227" tolineno="227" lineno="227" name="var"/>
            </CallFunc>
          </Assign>
          <Assign fromlineno="228" tolineno="228" lineno="228" targets="[&lt;AssName(flags) l.228 [bb.data_smart] at Ox9a2fbac&gt;]" value="{}">
            <AssName fromlineno="228" tolineno="228" lineno="228" name="flags"/>
            <Dict fromlineno="228" tolineno="228" lineno="228"/>
          </Assign>
          <If fromlineno="230" tolineno="234" lineno="230">
            <Name fromlineno="230" tolineno="230" lineno="230" name="local_var"/>
            <For fromlineno="231" tolineno="234" lineno="231">
              <AssName fromlineno="231" tolineno="231" lineno="231" name="i"/>
              <CallFunc fromlineno="231" tolineno="231" lineno="231" func="Getattr(keys)">
                <Getattr fromlineno="231" tolineno="231" lineno="231" attrname="keys" expr="local_var">
                  <Name fromlineno="231" tolineno="231" lineno="231" name="local_var"/>
                </Getattr>
              </CallFunc>
              <If fromlineno="232" tolineno="233" lineno="232">
                <Compare fromlineno="232" tolineno="232" lineno="232" op="('==', &lt;Const(str) l.232 [bb.data_smart] at Ox9a2fe8c&gt;)">
                  <Name fromlineno="232" tolineno="232" lineno="232" name="i"/>
                  <Const fromlineno="232" tolineno="232" lineno="232" type="str">'content'</Const>
                </Compare>
                <Continue fromlineno="233" tolineno="233" lineno="233"/>
              </If>
              <Assign fromlineno="234" tolineno="234" lineno="234" targets="[&lt;Subscript() l.234 [bb.data_smart] at Ox9a2ff4c&gt;]" value="local_var[i]">
                <Subscript fromlineno="234" tolineno="234" lineno="234">
                  <Name fromlineno="234" tolineno="234" lineno="234" name="flags"/>
                  <Index fromlineno="234" tolineno="234" lineno="None">
                    <Name fromlineno="234" tolineno="234" lineno="234" name="i"/>
                  </Index>
                </Subscript>
                <Subscript fromlineno="234" tolineno="234" lineno="234">
                  <Name fromlineno="234" tolineno="234" lineno="234" name="local_var"/>
                  <Index fromlineno="234" tolineno="234" lineno="None">
                    <Name fromlineno="234" tolineno="234" lineno="234" name="i"/>
                  </Index>
                </Subscript>
              </Assign>
            </For>
          </If>
          <If fromlineno="236" tolineno="237" lineno="236">
            <Compare fromlineno="236" tolineno="236" lineno="236" op="('==', &lt;Const(int) l.236 [bb.data_smart] at Ox9a3314c&gt;)">
              <CallFunc fromlineno="236" tolineno="236" lineno="236" func="Name(len)">
                <Name fromlineno="236" tolineno="236" lineno="236" name="len"/>
                <Name fromlineno="236" tolineno="236" lineno="236" name="flags"/>
              </CallFunc>
              <Const fromlineno="236" tolineno="236" lineno="236" type="int">0</Const>
            </Compare>
            <Return fromlineno="237" tolineno="237" lineno="237">
              <Const fromlineno="237" tolineno="237" lineno="237" type="NoneType">None</Const>
            </Return>
          </If>
          <Return fromlineno="238" tolineno="238" lineno="238">
            <Name fromlineno="238" tolineno="238" lineno="238" name="flags"/>
          </Return>
        </Function>
        <Function fromlineno="241" tolineno="254" lineno="241">
          <Arguments fromlineno="241" tolineno="241" lineno="None" format_args="self, var">
            <AssName fromlineno="241" tolineno="241" lineno="241" name="self"/>
            <AssName fromlineno="241" tolineno="241" lineno="241" name="var"/>
          </Arguments>
          <If fromlineno="242" tolineno="243" lineno="242">
            <UnaryOp fromlineno="242" tolineno="242" lineno="242">
              <Compare fromlineno="242" tolineno="242" lineno="242" op="('in', &lt;Getattr(dict) l.242 [bb.data_smart] at Ox9a3342c&gt;)">
                <Name fromlineno="242" tolineno="242" lineno="242" name="var"/>
                <Getattr fromlineno="242" tolineno="242" lineno="242" attrname="dict" expr="self">
                  <Name fromlineno="242" tolineno="242" lineno="242" name="self"/>
                </Getattr>
              </Compare>
            </UnaryOp>
            <Discard fromlineno="243" tolineno="243" lineno="243">
              <CallFunc fromlineno="243" tolineno="243" lineno="243" func="Getattr(_makeShadowCopy)">
                <Getattr fromlineno="243" tolineno="243" lineno="243" attrname="_makeShadowCopy" expr="self">
                  <Name fromlineno="243" tolineno="243" lineno="243" name="self"/>
                </Getattr>
                <Name fromlineno="243" tolineno="243" lineno="243" name="var"/>
              </CallFunc>
            </Discard>
          </If>
          <If fromlineno="245" tolineno="254" lineno="245">
            <Compare fromlineno="245" tolineno="245" lineno="245" op="('in', &lt;Getattr(dict) l.245 [bb.data_smart] at Ox9a3360c&gt;)">
              <Name fromlineno="245" tolineno="245" lineno="245" name="var"/>
              <Getattr fromlineno="245" tolineno="245" lineno="245" attrname="dict" expr="self">
                <Name fromlineno="245" tolineno="245" lineno="245" name="self"/>
              </Getattr>
            </Compare>
            <Assign fromlineno="246" tolineno="246" lineno="246" targets="[&lt;AssName(content) l.246 [bb.data_smart] at Ox9a336cc&gt;]" value="None">
              <AssName fromlineno="246" tolineno="246" lineno="246" name="content"/>
              <Const fromlineno="246" tolineno="246" lineno="246" type="NoneType">None</Const>
            </Assign>
            <If fromlineno="249" tolineno="254" lineno="249">
              <Compare fromlineno="249" tolineno="249" lineno="249" op="('in', &lt;Subscript() l.249 [bb.data_smart] at Ox9a337ec&gt;)">
                <Const fromlineno="249" tolineno="249" lineno="249" type="str">'content'</Const>
                <Subscript fromlineno="249" tolineno="249" lineno="249">
                  <Getattr fromlineno="249" tolineno="249" lineno="249" attrname="dict" expr="self">
                    <Name fromlineno="249" tolineno="249" lineno="249" name="self"/>
                  </Getattr>
                  <Index fromlineno="249" tolineno="249" lineno="None">
                    <Name fromlineno="249" tolineno="249" lineno="249" name="var"/>
                  </Index>
                </Subscript>
              </Compare>
              <Assign fromlineno="250" tolineno="250" lineno="250" targets="[&lt;AssName(content) l.250 [bb.data_smart] at Ox9a3390c&gt;]" value="self.dict[var]['content']">
                <AssName fromlineno="250" tolineno="250" lineno="250" name="content"/>
                <Subscript fromlineno="250" tolineno="250" lineno="250">
                  <Subscript fromlineno="250" tolineno="250" lineno="250">
                    <Getattr fromlineno="250" tolineno="250" lineno="250" attrname="dict" expr="self">
                      <Name fromlineno="250" tolineno="250" lineno="250" name="self"/>
                    </Getattr>
                    <Index fromlineno="250" tolineno="250" lineno="None">
                      <Name fromlineno="250" tolineno="250" lineno="250" name="var"/>
                    </Index>
                  </Subscript>
                  <Index fromlineno="250" tolineno="250" lineno="None">
                    <Const fromlineno="250" tolineno="250" lineno="250" type="str">'content'</Const>
                  </Index>
                </Subscript>
              </Assign>
              <Assign fromlineno="251" tolineno="251" lineno="251" targets="[&lt;Subscript() l.251 [bb.data_smart] at Ox9a33a6c&gt;]" value="{}">
                <Subscript fromlineno="251" tolineno="251" lineno="251">
                  <Getattr fromlineno="251" tolineno="251" lineno="251" attrname="dict" expr="self">
                    <Name fromlineno="251" tolineno="251" lineno="251" name="self"/>
                  </Getattr>
                  <Index fromlineno="251" tolineno="251" lineno="None">
                    <Name fromlineno="251" tolineno="251" lineno="251" name="var"/>
                  </Index>
                </Subscript>
                <Dict fromlineno="251" tolineno="251" lineno="251"/>
              </Assign>
              <Assign fromlineno="252" tolineno="252" lineno="252" targets="[&lt;Subscript() l.252 [bb.data_smart] at Ox9a33b8c&gt;]" value="content">
                <Subscript fromlineno="252" tolineno="252" lineno="252">
                  <Subscript fromlineno="252" tolineno="252" lineno="252">
                    <Getattr fromlineno="252" tolineno="252" lineno="252" attrname="dict" expr="self">
                      <Name fromlineno="252" tolineno="252" lineno="252" name="self"/>
                    </Getattr>
                    <Index fromlineno="252" tolineno="252" lineno="None">
                      <Name fromlineno="252" tolineno="252" lineno="252" name="var"/>
                    </Index>
                  </Subscript>
                  <Index fromlineno="252" tolineno="252" lineno="None">
                    <Const fromlineno="252" tolineno="252" lineno="252" type="str">'content'</Const>
                  </Index>
                </Subscript>
                <Name fromlineno="252" tolineno="252" lineno="252" name="content"/>
              </Assign>
              <Delete fromlineno="254" tolineno="254" lineno="254">
                <Subscript fromlineno="254" tolineno="254" lineno="254">
                  <Getattr fromlineno="254" tolineno="254" lineno="254" attrname="dict" expr="self">
                    <Name fromlineno="254" tolineno="254" lineno="254" name="self"/>
                  </Getattr>
                  <Index fromlineno="254" tolineno="254" lineno="None">
                    <Name fromlineno="254" tolineno="254" lineno="254" name="var"/>
                  </Index>
                </Subscript>
              </Delete>
            </If>
          </If>
        </Function>
        <Function fromlineno="257" tolineno="265" lineno="257">
          <Arguments fromlineno="257" tolineno="257" lineno="None" format_args="self">
            <AssName fromlineno="257" tolineno="257" lineno="257" name="self"/>
          </Arguments>
          <Assign fromlineno="262" tolineno="262" lineno="262" targets="[&lt;AssName(data) l.262 [bb.data_smart] at Ox9a33e6c&gt;]" value="DataSmart(seen=self._seen_overrides.copy(), special=self._special_values.copy())">
            <AssName fromlineno="262" tolineno="262" lineno="262" name="data"/>
            <CallFunc fromlineno="262" tolineno="262" lineno="262" func="Name(DataSmart)">
              <Name fromlineno="262" tolineno="262" lineno="262" name="DataSmart"/>
              <Keyword fromlineno="262" tolineno="262" lineno="None">
                <CallFunc fromlineno="262" tolineno="262" lineno="262" func="Getattr(copy)">
                  <Getattr fromlineno="262" tolineno="262" lineno="262" attrname="copy" expr="self._seen_overrides">
                    <Getattr fromlineno="262" tolineno="262" lineno="262" attrname="_seen_overrides" expr="self">
                      <Name fromlineno="262" tolineno="262" lineno="262" name="self"/>
                    </Getattr>
                  </Getattr>
                </CallFunc>
              </Keyword>
              <Keyword fromlineno="262" tolineno="262" lineno="None">
                <CallFunc fromlineno="262" tolineno="262" lineno="262" func="Getattr(copy)">
                  <Getattr fromlineno="262" tolineno="262" lineno="262" attrname="copy" expr="self._special_values">
                    <Getattr fromlineno="262" tolineno="262" lineno="262" attrname="_special_values" expr="self">
                      <Name fromlineno="262" tolineno="262" lineno="262" name="self"/>
                    </Getattr>
                  </Getattr>
                </CallFunc>
              </Keyword>
            </CallFunc>
          </Assign>
          <Assign fromlineno="263" tolineno="263" lineno="263" targets="[&lt;Subscript() l.263 [bb.data_smart] at Ox9a3710c&gt;]" value="self.dict">
            <Subscript fromlineno="263" tolineno="263" lineno="263">
              <Getattr fromlineno="263" tolineno="263" lineno="263" attrname="dict" expr="data">
                <Name fromlineno="263" tolineno="263" lineno="263" name="data"/>
              </Getattr>
              <Index fromlineno="263" tolineno="263" lineno="None">
                <Const fromlineno="263" tolineno="263" lineno="263" type="str">'_data'</Const>
              </Index>
            </Subscript>
            <Getattr fromlineno="263" tolineno="263" lineno="263" attrname="dict" expr="self">
              <Name fromlineno="263" tolineno="263" lineno="263" name="self"/>
            </Getattr>
          </Assign>
          <Return fromlineno="265" tolineno="265" lineno="265">
            <Name fromlineno="265" tolineno="265" lineno="265" name="data"/>
          </Return>
        </Function>
        <Function fromlineno="268" tolineno="278" lineno="268">
          <Arguments fromlineno="268" tolineno="268" lineno="None" format_args="self">
            <AssName fromlineno="268" tolineno="268" lineno="268" name="self"/>
          </Arguments>
          <Function fromlineno="269" tolineno="275" lineno="269">
            <Arguments fromlineno="269" tolineno="269" lineno="None" format_args="d, mykey">
              <AssName fromlineno="269" tolineno="269" lineno="269" name="d"/>
              <AssName fromlineno="269" tolineno="269" lineno="269" name="mykey"/>
            </Arguments>
            <If fromlineno="270" tolineno="271" lineno="270">
              <Compare fromlineno="270" tolineno="270" lineno="270" op="('in', &lt;Name(d) l.270 [bb.data_smart] at Ox9a3752c&gt;)">
                <Const fromlineno="270" tolineno="270" lineno="270" type="str">'_data'</Const>
                <Name fromlineno="270" tolineno="270" lineno="270" name="d"/>
              </Compare>
              <Discard fromlineno="271" tolineno="271" lineno="271">
                <CallFunc fromlineno="271" tolineno="271" lineno="271" func="Name(_keys)">
                  <Name fromlineno="271" tolineno="271" lineno="271" name="_keys"/>
                  <Subscript fromlineno="271" tolineno="271" lineno="271">
                    <Name fromlineno="271" tolineno="271" lineno="271" name="d"/>
                    <Index fromlineno="271" tolineno="271" lineno="None">
                      <Const fromlineno="271" tolineno="271" lineno="271" type="str">'_data'</Const>
                    </Index>
                  </Subscript>
                  <Name fromlineno="271" tolineno="271" lineno="271" name="mykey"/>
                </CallFunc>
              </Discard>
            </If>
            <For fromlineno="273" tolineno="275" lineno="273">
              <AssName fromlineno="273" tolineno="273" lineno="273" name="key"/>
              <CallFunc fromlineno="273" tolineno="273" lineno="273" func="Getattr(keys)">
                <Getattr fromlineno="273" tolineno="273" lineno="273" attrname="keys" expr="d">
                  <Name fromlineno="273" tolineno="273" lineno="273" name="d"/>
                </Getattr>
              </CallFunc>
              <If fromlineno="274" tolineno="275" lineno="274">
                <Compare fromlineno="274" tolineno="274" lineno="274" op="('!=', &lt;Const(str) l.274 [bb.data_smart] at Ox9a3786c&gt;)">
                  <Name fromlineno="274" tolineno="274" lineno="274" name="key"/>
                  <Const fromlineno="274" tolineno="274" lineno="274" type="str">'_data'</Const>
                </Compare>
                <Assign fromlineno="275" tolineno="275" lineno="275" targets="[&lt;Subscript() l.275 [bb.data_smart] at Ox9a3790c&gt;]" value="None">
                  <Subscript fromlineno="275" tolineno="275" lineno="275">
                    <Name fromlineno="275" tolineno="275" lineno="275" name="mykey"/>
                    <Index fromlineno="275" tolineno="275" lineno="None">
                      <Name fromlineno="275" tolineno="275" lineno="275" name="key"/>
                    </Index>
                  </Subscript>
                  <Const fromlineno="275" tolineno="275" lineno="275" type="NoneType">None</Const>
                </Assign>
              </If>
            </For>
          </Function>
          <Assign fromlineno="276" tolineno="276" lineno="276" targets="[&lt;AssName(keytab) l.276 [bb.data_smart] at Ox9a379cc&gt;]" value="{}">
            <AssName fromlineno="276" tolineno="276" lineno="276" name="keytab"/>
            <Dict fromlineno="276" tolineno="276" lineno="276"/>
          </Assign>
          <Discard fromlineno="277" tolineno="277" lineno="277">
            <CallFunc fromlineno="277" tolineno="277" lineno="277" func="Name(_keys)">
              <Name fromlineno="277" tolineno="277" lineno="277" name="_keys"/>
              <Getattr fromlineno="277" tolineno="277" lineno="277" attrname="dict" expr="self">
                <Name fromlineno="277" tolineno="277" lineno="277" name="self"/>
              </Getattr>
              <Name fromlineno="277" tolineno="277" lineno="277" name="keytab"/>
            </CallFunc>
          </Discard>
          <Return fromlineno="278" tolineno="278" lineno="278">
            <CallFunc fromlineno="278" tolineno="278" lineno="278" func="Getattr(keys)">
              <Getattr fromlineno="278" tolineno="278" lineno="278" attrname="keys" expr="keytab">
                <Name fromlineno="278" tolineno="278" lineno="278" name="keytab"/>
              </Getattr>
            </CallFunc>
          </Return>
        </Function>
        <Function fromlineno="280" tolineno="282" lineno="280">
          <Arguments fromlineno="280" tolineno="280" lineno="None" format_args="self, item">
            <AssName fromlineno="280" tolineno="280" lineno="280" name="self"/>
            <AssName fromlineno="280" tolineno="280" lineno="280" name="item"/>
          </Arguments>
          <Return fromlineno="282" tolineno="282" lineno="282">
            <CallFunc fromlineno="282" tolineno="282" lineno="282" func="Getattr(getVar)">
              <Getattr fromlineno="282" tolineno="282" lineno="282" attrname="getVar" expr="self">
                <Name fromlineno="282" tolineno="282" lineno="282" name="self"/>
              </Getattr>
              <Name fromlineno="282" tolineno="282" lineno="282" name="item"/>
              <Const fromlineno="282" tolineno="282" lineno="282" type="bool">False</Const>
            </CallFunc>
          </Return>
        </Function>
        <Function fromlineno="284" tolineno="286" lineno="284">
          <Arguments fromlineno="284" tolineno="284" lineno="None" format_args="self, var, data">
            <AssName fromlineno="284" tolineno="284" lineno="284" name="self"/>
            <AssName fromlineno="284" tolineno="284" lineno="284" name="var"/>
            <AssName fromlineno="284" tolineno="284" lineno="284" name="data"/>
          </Arguments>
          <Discard fromlineno="286" tolineno="286" lineno="286">
            <CallFunc fromlineno="286" tolineno="286" lineno="286" func="Getattr(setVar)">
              <Getattr fromlineno="286" tolineno="286" lineno="286" attrname="setVar" expr="self">
                <Name fromlineno="286" tolineno="286" lineno="286" name="self"/>
              </Getattr>
              <Name fromlineno="286" tolineno="286" lineno="286" name="var"/>
              <Name fromlineno="286" tolineno="286" lineno="286" name="data"/>
            </CallFunc>
          </Discard>
        </Function>
      </Class>
    </Module>
    <Module fromlineno="0" tolineno="308" lineno="0" name="bb.providers">
      <Import fromlineno="24" tolineno="24" lineno="24">
        <ImportName name="os"/>
        <ImportName name="re"/>
      </Import>
      <From fromlineno="25" tolineno="25" lineno="25" modname="bb">
        <ImportName name="data"/>
        <ImportName name="utils"/>
      </From>
      <Import fromlineno="26" tolineno="26" lineno="26">
        <ImportName name="bb"/>
      </Import>
      <Class fromlineno="28" tolineno="28" lineno="28">
        <Name fromlineno="28" tolineno="28" lineno="28" name="Exception"/>
      </Class>
      <Class fromlineno="31" tolineno="31" lineno="31">
        <Name fromlineno="31" tolineno="31" lineno="31" name="Exception"/>
      </Class>
      <Function fromlineno="35" tolineno="64" lineno="35">
        <Arguments fromlineno="35" tolineno="35" lineno="None" format_args="pn, dataCache, pkg_pn=None">
          <AssName fromlineno="35" tolineno="35" lineno="35" name="pn"/>
          <AssName fromlineno="35" tolineno="35" lineno="35" name="dataCache"/>
          <AssName fromlineno="35" tolineno="35" lineno="35" name="pkg_pn"/>
          <Const fromlineno="35" tolineno="35" lineno="35" type="NoneType">None</Const>
        </Arguments>
        <If fromlineno="40" tolineno="41" lineno="40">
          <UnaryOp fromlineno="40" tolineno="40" lineno="40">
            <Name fromlineno="40" tolineno="40" lineno="40" name="pkg_pn"/>
          </UnaryOp>
          <Assign fromlineno="41" tolineno="41" lineno="41" targets="[&lt;AssName(pkg_pn) l.41 [bb.providers] at Ox98f8d2c&gt;]" value="dataCache.pkg_pn">
            <AssName fromlineno="41" tolineno="41" lineno="41" name="pkg_pn"/>
            <Getattr fromlineno="41" tolineno="41" lineno="41" attrname="pkg_pn" expr="dataCache">
              <Name fromlineno="41" tolineno="41" lineno="41" name="dataCache"/>
            </Getattr>
          </Assign>
        </If>
        <Assign fromlineno="43" tolineno="43" lineno="43" targets="[&lt;AssName(files) l.43 [bb.providers] at Ox98f8dcc&gt;]" value="pkg_pn[pn]">
          <AssName fromlineno="43" tolineno="43" lineno="43" name="files"/>
          <Subscript fromlineno="43" tolineno="43" lineno="43">
            <Name fromlineno="43" tolineno="43" lineno="43" name="pkg_pn"/>
            <Index fromlineno="43" tolineno="43" lineno="None">
              <Name fromlineno="43" tolineno="43" lineno="43" name="pn"/>
            </Index>
          </Subscript>
        </Assign>
        <Assign fromlineno="44" tolineno="44" lineno="44" targets="[&lt;AssName(priorities) l.44 [bb.providers] at Ox98f8ecc&gt;]" value="{}">
          <AssName fromlineno="44" tolineno="44" lineno="44" name="priorities"/>
          <Dict fromlineno="44" tolineno="44" lineno="44"/>
        </Assign>
        <For fromlineno="45" tolineno="52" lineno="45">
          <AssName fromlineno="45" tolineno="45" lineno="45" name="f"/>
          <Name fromlineno="45" tolineno="45" lineno="45" name="files"/>
          <Assign fromlineno="46" tolineno="46" lineno="46" targets="[&lt;AssName(priority) l.46 [bb.providers] at Ox98fc06c&gt;]" value="dataCache.bbfile_priority[f]">
            <AssName fromlineno="46" tolineno="46" lineno="46" name="priority"/>
            <Subscript fromlineno="46" tolineno="46" lineno="46">
              <Getattr fromlineno="46" tolineno="46" lineno="46" attrname="bbfile_priority" expr="dataCache">
                <Name fromlineno="46" tolineno="46" lineno="46" name="dataCache"/>
              </Getattr>
              <Index fromlineno="46" tolineno="46" lineno="None">
                <Name fromlineno="46" tolineno="46" lineno="46" name="f"/>
              </Index>
            </Subscript>
          </Assign>
          <Assign fromlineno="47" tolineno="47" lineno="47" targets="[&lt;AssName(preference) l.47 [bb.providers] at Ox98fc18c&gt;]" value="dataCache.pkg_dp[f]">
            <AssName fromlineno="47" tolineno="47" lineno="47" name="preference"/>
            <Subscript fromlineno="47" tolineno="47" lineno="47">
              <Getattr fromlineno="47" tolineno="47" lineno="47" attrname="pkg_dp" expr="dataCache">
                <Name fromlineno="47" tolineno="47" lineno="47" name="dataCache"/>
              </Getattr>
              <Index fromlineno="47" tolineno="47" lineno="None">
                <Name fromlineno="47" tolineno="47" lineno="47" name="f"/>
              </Index>
            </Subscript>
          </Assign>
          <If fromlineno="48" tolineno="49" lineno="48">
            <Compare fromlineno="48" tolineno="48" lineno="48" op="('not in', &lt;Name(priorities) l.48 [bb.providers] at Ox98fc30c&gt;)">
              <Name fromlineno="48" tolineno="48" lineno="48" name="priority"/>
              <Name fromlineno="48" tolineno="48" lineno="48" name="priorities"/>
            </Compare>
            <Assign fromlineno="49" tolineno="49" lineno="49" targets="[&lt;Subscript() l.49 [bb.providers] at Ox98fc3ac&gt;]" value="{}">
              <Subscript fromlineno="49" tolineno="49" lineno="49">
                <Name fromlineno="49" tolineno="49" lineno="49" name="priorities"/>
                <Index fromlineno="49" tolineno="49" lineno="None">
                  <Name fromlineno="49" tolineno="49" lineno="49" name="priority"/>
                </Index>
              </Subscript>
              <Dict fromlineno="49" tolineno="49" lineno="49"/>
            </Assign>
          </If>
          <If fromlineno="50" tolineno="51" lineno="50">
            <Compare fromlineno="50" tolineno="50" lineno="50" op="('not in', &lt;Subscript() l.50 [bb.providers] at Ox98fc50c&gt;)">
              <Name fromlineno="50" tolineno="50" lineno="50" name="preference"/>
              <Subscript fromlineno="50" tolineno="50" lineno="50">
                <Name fromlineno="50" tolineno="50" lineno="50" name="priorities"/>
                <Index fromlineno="50" tolineno="50" lineno="None">
                  <Name fromlineno="50" tolineno="50" lineno="50" name="priority"/>
                </Index>
              </Subscript>
            </Compare>
            <Assign fromlineno="51" tolineno="51" lineno="51" targets="[&lt;Subscript() l.51 [bb.providers] at Ox98fc60c&gt;]" value="[]">
              <Subscript fromlineno="51" tolineno="51" lineno="51">
                <Subscript fromlineno="51" tolineno="51" lineno="51">
                  <Name fromlineno="51" tolineno="51" lineno="51" name="priorities"/>
                  <Index fromlineno="51" tolineno="51" lineno="None">
                    <Name fromlineno="51" tolineno="51" lineno="51" name="priority"/>
                  </Index>
                </Subscript>
                <Index fromlineno="51" tolineno="51" lineno="None">
                  <Name fromlineno="51" tolineno="51" lineno="51" name="preference"/>
                </Index>
              </Subscript>
              <List fromlineno="51" tolineno="51" lineno="51"/>
            </Assign>
          </If>
          <Discard fromlineno="52" tolineno="52" lineno="52">
            <CallFunc fromlineno="52" tolineno="52" lineno="52" func="Getattr(append)">
              <Getattr fromlineno="52" tolineno="52" lineno="52" attrname="append" expr="priorities[priority][preference]">
                <Subscript fromlineno="52" tolineno="52" lineno="52">
                  <Subscript fromlineno="52" tolineno="52" lineno="52">
                    <Name fromlineno="52" tolineno="52" lineno="52" name="priorities"/>
                    <Index fromlineno="52" tolineno="52" lineno="None">
                      <Name fromlineno="52" tolineno="52" lineno="52" name="priority"/>
                    </Index>
                  </Subscript>
                  <Index fromlineno="52" tolineno="52" lineno="None">
                    <Name fromlineno="52" tolineno="52" lineno="52" name="preference"/>
                  </Index>
                </Subscript>
              </Getattr>
              <Name fromlineno="52" tolineno="52" lineno="52" name="f"/>
            </CallFunc>
          </Discard>
        </For>
        <Assign fromlineno="53" tolineno="53" lineno="53" targets="[&lt;AssName(pri_list) l.53 [bb.providers] at Ox98fc8ec&gt;]" value="priorities.keys()">
          <AssName fromlineno="53" tolineno="53" lineno="53" name="pri_list"/>
          <CallFunc fromlineno="53" tolineno="53" lineno="53" func="Getattr(keys)">
            <Getattr fromlineno="53" tolineno="53" lineno="53" attrname="keys" expr="priorities">
              <Name fromlineno="53" tolineno="53" lineno="53" name="priorities"/>
            </Getattr>
          </CallFunc>
        </Assign>
        <Discard fromlineno="54" tolineno="54" lineno="54">
          <CallFunc fromlineno="54" tolineno="54" lineno="54" func="Getattr(sort)">
            <Getattr fromlineno="54" tolineno="54" lineno="54" attrname="sort" expr="pri_list">
              <Name fromlineno="54" tolineno="54" lineno="54" name="pri_list"/>
            </Getattr>
            <Lambda fromlineno="54" tolineno="54" lineno="54">
              <Arguments fromlineno="54" tolineno="54" lineno="None" format_args="a, b">
                <AssName fromlineno="54" tolineno="54" lineno="54" name="a"/>
                <AssName fromlineno="54" tolineno="54" lineno="54" name="b"/>
              </Arguments>
              <BinOp fromlineno="54" tolineno="54" lineno="54" op="-" left="a" right="b">
                <Name fromlineno="54" tolineno="54" lineno="54" name="a"/>
                <Name fromlineno="54" tolineno="54" lineno="54" name="b"/>
              </BinOp>
            </Lambda>
          </CallFunc>
        </Discard>
        <Assign fromlineno="55" tolineno="55" lineno="55" targets="[&lt;AssName(tmp_pn) l.55 [bb.providers] at Ox98fcc0c&gt;]" value="[]">
          <AssName fromlineno="55" tolineno="55" lineno="55" name="tmp_pn"/>
          <List fromlineno="55" tolineno="55" lineno="55"/>
        </Assign>
        <For fromlineno="56" tolineno="62" lineno="56">
          <AssName fromlineno="56" tolineno="56" lineno="56" name="pri"/>
          <Name fromlineno="56" tolineno="56" lineno="56" name="pri_list"/>
          <Assign fromlineno="57" tolineno="57" lineno="57" targets="[&lt;AssName(pref_list) l.57 [bb.providers] at Ox98fcd6c&gt;]" value="priorities[pri].keys()">
            <AssName fromlineno="57" tolineno="57" lineno="57" name="pref_list"/>
            <CallFunc fromlineno="57" tolineno="57" lineno="57" func="Getattr(keys)">
              <Getattr fromlineno="57" tolineno="57" lineno="57" attrname="keys" expr="priorities[pri]">
                <Subscript fromlineno="57" tolineno="57" lineno="57">
                  <Name fromlineno="57" tolineno="57" lineno="57" name="priorities"/>
                  <Index fromlineno="57" tolineno="57" lineno="None">
                    <Name fromlineno="57" tolineno="57" lineno="57" name="pri"/>
                  </Index>
                </Subscript>
              </Getattr>
            </CallFunc>
          </Assign>
          <Discard fromlineno="58" tolineno="58" lineno="58">
            <CallFunc fromlineno="58" tolineno="58" lineno="58" func="Getattr(sort)">
              <Getattr fromlineno="58" tolineno="58" lineno="58" attrname="sort" expr="pref_list">
                <Name fromlineno="58" tolineno="58" lineno="58" name="pref_list"/>
              </Getattr>
              <Lambda fromlineno="58" tolineno="58" lineno="58">
                <Arguments fromlineno="58" tolineno="58" lineno="None" format_args="a, b">
                  <AssName fromlineno="58" tolineno="58" lineno="58" name="a"/>
                  <AssName fromlineno="58" tolineno="58" lineno="58" name="b"/>
                </Arguments>
                <BinOp fromlineno="58" tolineno="58" lineno="58" op="-" left="b" right="a">
                  <Name fromlineno="58" tolineno="58" lineno="58" name="b"/>
                  <Name fromlineno="58" tolineno="58" lineno="58" name="a"/>
                </BinOp>
              </Lambda>
            </CallFunc>
          </Discard>
          <Assign fromlineno="59" tolineno="59" lineno="59" targets="[&lt;AssName(tmp_pref) l.59 [bb.providers] at Ox9ab710c&gt;]" value="[]">
            <AssName fromlineno="59" tolineno="59" lineno="59" name="tmp_pref"/>
            <List fromlineno="59" tolineno="59" lineno="59"/>
          </Assign>
          <For fromlineno="60" tolineno="61" lineno="60">
            <AssName fromlineno="60" tolineno="60" lineno="60" name="pref"/>
            <Name fromlineno="60" tolineno="60" lineno="60" name="pref_list"/>
            <Discard fromlineno="61" tolineno="61" lineno="61">
              <CallFunc fromlineno="61" tolineno="61" lineno="61" func="Getattr(extend)">
                <Getattr fromlineno="61" tolineno="61" lineno="61" attrname="extend" expr="tmp_pref">
                  <Name fromlineno="61" tolineno="61" lineno="61" name="tmp_pref"/>
                </Getattr>
                <Subscript fromlineno="61" tolineno="61" lineno="61">
                  <Subscript fromlineno="61" tolineno="61" lineno="61">
                    <Name fromlineno="61" tolineno="61" lineno="61" name="priorities"/>
                    <Index fromlineno="61" tolineno="61" lineno="None">
                      <Name fromlineno="61" tolineno="61" lineno="61" name="pri"/>
                    </Index>
                  </Subscript>
                  <Index fromlineno="61" tolineno="61" lineno="None">
                    <Name fromlineno="61" tolineno="61" lineno="61" name="pref"/>
                  </Index>
                </Subscript>
              </CallFunc>
            </Discard>
          </For>
          <Assign fromlineno="62" tolineno="62" lineno="62" targets="[&lt;AssName(tmp_pn) l.62 [bb.providers] at Ox9ab73ec&gt;]" value="([tmp_pref]) + (tmp_pn)">
            <AssName fromlineno="62" tolineno="62" lineno="62" name="tmp_pn"/>
            <BinOp fromlineno="62" tolineno="62" lineno="62" op="+" left="[tmp_pref]" right="tmp_pn">
              <List fromlineno="62" tolineno="62" lineno="62">
                <Name fromlineno="62" tolineno="62" lineno="62" name="tmp_pref"/>
              </List>
              <Name fromlineno="62" tolineno="62" lineno="62" name="tmp_pn"/>
            </BinOp>
          </Assign>
        </For>
        <Return fromlineno="64" tolineno="64" lineno="64">
          <Name fromlineno="64" tolineno="64" lineno="64" name="tmp_pn"/>
        </Return>
      </Function>
      <Function fromlineno="67" tolineno="119" lineno="67">
        <Arguments fromlineno="67" tolineno="67" lineno="None" format_args="pn, cfgData, dataCache, pkg_pn=None, item=None">
          <AssName fromlineno="67" tolineno="67" lineno="67" name="pn"/>
          <AssName fromlineno="67" tolineno="67" lineno="67" name="cfgData"/>
          <AssName fromlineno="67" tolineno="67" lineno="67" name="dataCache"/>
          <AssName fromlineno="67" tolineno="67" lineno="67" name="pkg_pn"/>
          <AssName fromlineno="67" tolineno="67" lineno="67" name="item"/>
          <Const fromlineno="67" tolineno="67" lineno="67" type="NoneType">None</Const>
          <Const fromlineno="67" tolineno="67" lineno="67" type="NoneType">None</Const>
        </Arguments>
        <Assign fromlineno="72" tolineno="72" lineno="72" targets="[&lt;AssName(preferred_file) l.72 [bb.providers] at Ox9ab772c&gt;]" value="None">
          <AssName fromlineno="72" tolineno="72" lineno="72" name="preferred_file"/>
          <Const fromlineno="72" tolineno="72" lineno="72" type="NoneType">None</Const>
        </Assign>
        <Assign fromlineno="73" tolineno="73" lineno="73" targets="[&lt;AssName(preferred_ver) l.73 [bb.providers] at Ox9ab77cc&gt;]" value="None">
          <AssName fromlineno="73" tolineno="73" lineno="73" name="preferred_ver"/>
          <Const fromlineno="73" tolineno="73" lineno="73" type="NoneType">None</Const>
        </Assign>
        <Assign fromlineno="75" tolineno="75" lineno="75" targets="[&lt;AssName(localdata) l.75 [bb.providers] at Ox9ab786c&gt;]" value="data.createCopy(cfgData)">
          <AssName fromlineno="75" tolineno="75" lineno="75" name="localdata"/>
          <CallFunc fromlineno="75" tolineno="75" lineno="75" func="Getattr(createCopy)">
            <Getattr fromlineno="75" tolineno="75" lineno="75" attrname="createCopy" expr="data">
              <Name fromlineno="75" tolineno="75" lineno="75" name="data"/>
            </Getattr>
            <Name fromlineno="75" tolineno="75" lineno="75" name="cfgData"/>
          </CallFunc>
        </Assign>
        <Discard fromlineno="76" tolineno="76" lineno="76">
          <CallFunc fromlineno="76" tolineno="76" lineno="76" func="Getattr(setVar)">
            <Getattr fromlineno="76" tolineno="76" lineno="76" attrname="setVar" expr="bb.data">
              <Getattr fromlineno="76" tolineno="76" lineno="76" attrname="data" expr="bb">
                <Name fromlineno="76" tolineno="76" lineno="76" name="bb"/>
              </Getattr>
            </Getattr>
            <Const fromlineno="76" tolineno="76" lineno="76" type="str">'OVERRIDES'</Const>
            <BinOp fromlineno="76" tolineno="76" lineno="76" op="%" left="'pn-%s:%s:%s'" right="(pn, pn, data.getVar('OVERRIDES', localdata))">
              <Const fromlineno="76" tolineno="76" lineno="76" type="str">'pn-%s:%s:%s'</Const>
              <Tuple fromlineno="76" tolineno="76" lineno="76">
                <Name fromlineno="76" tolineno="76" lineno="76" name="pn"/>
                <Name fromlineno="76" tolineno="76" lineno="76" name="pn"/>
                <CallFunc fromlineno="76" tolineno="76" lineno="76" func="Getattr(getVar)">
                  <Getattr fromlineno="76" tolineno="76" lineno="76" attrname="getVar" expr="data">
                    <Name fromlineno="76" tolineno="76" lineno="76" name="data"/>
                  </Getattr>
                  <Const fromlineno="76" tolineno="76" lineno="76" type="str">'OVERRIDES'</Const>
                  <Name fromlineno="76" tolineno="76" lineno="76" name="localdata"/>
                </CallFunc>
              </Tuple>
            </BinOp>
            <Name fromlineno="76" tolineno="76" lineno="76" name="localdata"/>
          </CallFunc>
        </Discard>
        <Discard fromlineno="77" tolineno="77" lineno="77">
          <CallFunc fromlineno="77" tolineno="77" lineno="77" func="Getattr(update_data)">
            <Getattr fromlineno="77" tolineno="77" lineno="77" attrname="update_data" expr="bb.data">
              <Getattr fromlineno="77" tolineno="77" lineno="77" attrname="data" expr="bb">
                <Name fromlineno="77" tolineno="77" lineno="77" name="bb"/>
              </Getattr>
            </Getattr>
            <Name fromlineno="77" tolineno="77" lineno="77" name="localdata"/>
          </CallFunc>
        </Discard>
        <Assign fromlineno="79" tolineno="79" lineno="79" targets="[&lt;AssName(preferred_v) l.79 [bb.providers] at Ox9ab7cec&gt;]" value="bb.data.getVar(('PREFERRED_VERSION_%s') % (pn), localdata, True)">
          <AssName fromlineno="79" tolineno="79" lineno="79" name="preferred_v"/>
          <CallFunc fromlineno="79" tolineno="79" lineno="79" func="Getattr(getVar)">
            <Getattr fromlineno="79" tolineno="79" lineno="79" attrname="getVar" expr="bb.data">
              <Getattr fromlineno="79" tolineno="79" lineno="79" attrname="data" expr="bb">
                <Name fromlineno="79" tolineno="79" lineno="79" name="bb"/>
              </Getattr>
            </Getattr>
            <BinOp fromlineno="79" tolineno="79" lineno="79" op="%" left="'PREFERRED_VERSION_%s'" right="pn">
              <Const fromlineno="79" tolineno="79" lineno="79" type="str">'PREFERRED_VERSION_%s'</Const>
              <Name fromlineno="79" tolineno="79" lineno="79" name="pn"/>
            </BinOp>
            <Name fromlineno="79" tolineno="79" lineno="79" name="localdata"/>
            <Const fromlineno="79" tolineno="79" lineno="79" type="bool">True</Const>
          </CallFunc>
        </Assign>
        <If fromlineno="80" tolineno="117" lineno="80">
          <Name fromlineno="80" tolineno="80" lineno="80" name="preferred_v"/>
          <Assign fromlineno="81" tolineno="81" lineno="81" targets="[&lt;AssName(m) l.81 [bb.providers] at Ox9ab7f2c&gt;]" value="re.match('(\\d+:)*(.*)(_.*)*', preferred_v)">
            <AssName fromlineno="81" tolineno="81" lineno="81" name="m"/>
            <CallFunc fromlineno="81" tolineno="81" lineno="81" func="Getattr(match)">
              <Getattr fromlineno="81" tolineno="81" lineno="81" attrname="match" expr="re">
                <Name fromlineno="81" tolineno="81" lineno="81" name="re"/>
              </Getattr>
              <Const fromlineno="81" tolineno="81" lineno="81" type="str">'(\\d+:)*(.*)(_.*)*'</Const>
              <Name fromlineno="81" tolineno="81" lineno="81" name="preferred_v"/>
            </CallFunc>
          </Assign>
          <If fromlineno="82" tolineno="94" lineno="82">
            <Name fromlineno="82" tolineno="82" lineno="82" name="m"/>
            <If fromlineno="83" tolineno="86" lineno="83">
              <CallFunc fromlineno="83" tolineno="83" lineno="83" func="Getattr(group)">
                <Getattr fromlineno="83" tolineno="83" lineno="83" attrname="group" expr="m">
                  <Name fromlineno="83" tolineno="83" lineno="83" name="m"/>
                </Getattr>
                <Const fromlineno="83" tolineno="83" lineno="83" type="int">1</Const>
              </CallFunc>
              <Assign fromlineno="84" tolineno="84" lineno="84" targets="[&lt;AssName(preferred_e) l.84 [bb.providers] at Ox9abb24c&gt;]" value="int(m.group(1)[:-1])">
                <AssName fromlineno="84" tolineno="84" lineno="84" name="preferred_e"/>
                <CallFunc fromlineno="84" tolineno="84" lineno="84" func="Name(int)">
                  <Name fromlineno="84" tolineno="84" lineno="84" name="int"/>
                  <Subscript fromlineno="84" tolineno="84" lineno="84">
                    <CallFunc fromlineno="84" tolineno="84" lineno="84" func="Getattr(group)">
                      <Getattr fromlineno="84" tolineno="84" lineno="84" attrname="group" expr="m">
                        <Name fromlineno="84" tolineno="84" lineno="84" name="m"/>
                      </Getattr>
                      <Const fromlineno="84" tolineno="84" lineno="84" type="int">1</Const>
                    </CallFunc>
                    <Slice fromlineno="84" tolineno="84" lineno="None">
                      <Const fromlineno="84" tolineno="84" lineno="84" type="int">-1</Const>
                    </Slice>
                  </Subscript>
                </CallFunc>
              </Assign>
              <Assign fromlineno="86" tolineno="86" lineno="86" targets="[&lt;AssName(preferred_e) l.86 [bb.providers] at Ox9abb44c&gt;]" value="None">
                <AssName fromlineno="86" tolineno="86" lineno="86" name="preferred_e"/>
                <Const fromlineno="86" tolineno="86" lineno="86" type="NoneType">None</Const>
              </Assign>
            </If>
            <Assign fromlineno="87" tolineno="87" lineno="87" targets="[&lt;AssName(preferred_v) l.87 [bb.providers] at Ox9abb4ac&gt;]" value="m.group(2)">
              <AssName fromlineno="87" tolineno="87" lineno="87" name="preferred_v"/>
              <CallFunc fromlineno="87" tolineno="87" lineno="87" func="Getattr(group)">
                <Getattr fromlineno="87" tolineno="87" lineno="87" attrname="group" expr="m">
                  <Name fromlineno="87" tolineno="87" lineno="87" name="m"/>
                </Getattr>
                <Const fromlineno="87" tolineno="87" lineno="87" type="int">2</Const>
              </CallFunc>
            </Assign>
            <If fromlineno="88" tolineno="91" lineno="88">
              <CallFunc fromlineno="88" tolineno="88" lineno="88" func="Getattr(group)">
                <Getattr fromlineno="88" tolineno="88" lineno="88" attrname="group" expr="m">
                  <Name fromlineno="88" tolineno="88" lineno="88" name="m"/>
                </Getattr>
                <Const fromlineno="88" tolineno="88" lineno="88" type="int">3</Const>
              </CallFunc>
              <Assign fromlineno="89" tolineno="89" lineno="89" targets="[&lt;AssName(preferred_r) l.89 [bb.providers] at Ox9abb6ac&gt;]" value="m.group(3)[1:]">
                <AssName fromlineno="89" tolineno="89" lineno="89" name="preferred_r"/>
                <Subscript fromlineno="89" tolineno="89" lineno="89">
                  <CallFunc fromlineno="89" tolineno="89" lineno="89" func="Getattr(group)">
                    <Getattr fromlineno="89" tolineno="89" lineno="89" attrname="group" expr="m">
                      <Name fromlineno="89" tolineno="89" lineno="89" name="m"/>
                    </Getattr>
                    <Const fromlineno="89" tolineno="89" lineno="89" type="int">3</Const>
                  </CallFunc>
                  <Slice fromlineno="89" tolineno="89" lineno="None">
                    <Const fromlineno="89" tolineno="89" lineno="89" type="int">1</Const>
                  </Slice>
                </Subscript>
              </Assign>
              <Assign fromlineno="91" tolineno="91" lineno="91" targets="[&lt;AssName(preferred_r) l.91 [bb.providers] at Ox9abb84c&gt;]" value="None">
                <AssName fromlineno="91" tolineno="91" lineno="91" name="preferred_r"/>
                <Const fromlineno="91" tolineno="91" lineno="91" type="NoneType">None</Const>
              </Assign>
            </If>
            <Assign fromlineno="93" tolineno="93" lineno="93" targets="[&lt;AssName(preferred_e) l.93 [bb.providers] at Ox9abb8cc&gt;]" value="None">
              <AssName fromlineno="93" tolineno="93" lineno="93" name="preferred_e"/>
              <Const fromlineno="93" tolineno="93" lineno="93" type="NoneType">None</Const>
            </Assign>
            <Assign fromlineno="94" tolineno="94" lineno="94" targets="[&lt;AssName(preferred_r) l.94 [bb.providers] at Ox9abb94c&gt;]" value="None">
              <AssName fromlineno="94" tolineno="94" lineno="94" name="preferred_r"/>
              <Const fromlineno="94" tolineno="94" lineno="94" type="NoneType">None</Const>
            </Assign>
          </If>
          <For fromlineno="96" tolineno="104" lineno="96">
            <AssName fromlineno="96" tolineno="96" lineno="96" name="file_set"/>
            <Name fromlineno="96" tolineno="96" lineno="96" name="pkg_pn"/>
            <For fromlineno="97" tolineno="102" lineno="97">
              <AssName fromlineno="97" tolineno="97" lineno="97" name="f"/>
              <Name fromlineno="97" tolineno="97" lineno="97" name="file_set"/>
              <Assign fromlineno="98" tolineno="98" lineno="98" targets="[&lt;Tuple(tuple) l.98 [bb.providers] at Ox9abbb0c&gt;]" value="dataCache.pkg_pepvpr[f]">
                <Tuple fromlineno="98" tolineno="98" lineno="98">
                  <AssName fromlineno="98" tolineno="98" lineno="98" name="pe"/>
                  <AssName fromlineno="98" tolineno="98" lineno="98" name="pv"/>
                  <AssName fromlineno="98" tolineno="98" lineno="98" name="pr"/>
                </Tuple>
                <Subscript fromlineno="98" tolineno="98" lineno="98">
                  <Getattr fromlineno="98" tolineno="98" lineno="98" attrname="pkg_pepvpr" expr="dataCache">
                    <Name fromlineno="98" tolineno="98" lineno="98" name="dataCache"/>
                  </Getattr>
                  <Index fromlineno="98" tolineno="98" lineno="None">
                    <Name fromlineno="98" tolineno="98" lineno="98" name="f"/>
                  </Index>
                </Subscript>
              </Assign>
              <If fromlineno="99" tolineno="102" lineno="99">
                <BoolOp fromlineno="99" tolineno="99" lineno="99" op="and" values="preferred_v == pv,(preferred_r == pr) or (preferred_r == None),(preferred_e == pe) or (preferred_e == None),">
                  <Compare fromlineno="99" tolineno="99" lineno="99" op="('==', &lt;Name(pv) l.99 [bb.providers] at Ox9abbdac&gt;)">
                    <Name fromlineno="99" tolineno="99" lineno="99" name="preferred_v"/>
                    <Name fromlineno="99" tolineno="99" lineno="99" name="pv"/>
                  </Compare>
                  <BoolOp fromlineno="99" tolineno="99" lineno="99" op="or" values="preferred_r == pr,preferred_r == None,">
                    <Compare fromlineno="99" tolineno="99" lineno="99" op="('==', &lt;Name(pr) l.99 [bb.providers] at Ox9abbeac&gt;)">
                      <Name fromlineno="99" tolineno="99" lineno="99" name="preferred_r"/>
                      <Name fromlineno="99" tolineno="99" lineno="99" name="pr"/>
                    </Compare>
                    <Compare fromlineno="99" tolineno="99" lineno="99" op="('==', &lt;Const(NoneType) l.99 [bb.providers] at Ox9abbf4c&gt;)">
                      <Name fromlineno="99" tolineno="99" lineno="99" name="preferred_r"/>
                      <Const fromlineno="99" tolineno="99" lineno="99" type="NoneType">None</Const>
                    </Compare>
                  </BoolOp>
                  <BoolOp fromlineno="99" tolineno="99" lineno="99" op="or" values="preferred_e == pe,preferred_e == None,">
                    <Compare fromlineno="99" tolineno="99" lineno="99" op="('==', &lt;Name(pe) l.99 [bb.providers] at Ox9abf04c&gt;)">
                      <Name fromlineno="99" tolineno="99" lineno="99" name="preferred_e"/>
                      <Name fromlineno="99" tolineno="99" lineno="99" name="pe"/>
                    </Compare>
                    <Compare fromlineno="99" tolineno="99" lineno="99" op="('==', &lt;Const(NoneType) l.99 [bb.providers] at Ox9abf0ec&gt;)">
                      <Name fromlineno="99" tolineno="99" lineno="99" name="preferred_e"/>
                      <Const fromlineno="99" tolineno="99" lineno="99" type="NoneType">None</Const>
                    </Compare>
                  </BoolOp>
                </BoolOp>
                <Assign fromlineno="100" tolineno="100" lineno="100" targets="[&lt;AssName(preferred_file) l.100 [bb.providers] at Ox9abf14c&gt;]" value="f">
                  <AssName fromlineno="100" tolineno="100" lineno="100" name="preferred_file"/>
                  <Name fromlineno="100" tolineno="100" lineno="100" name="f"/>
                </Assign>
                <Assign fromlineno="101" tolineno="101" lineno="101" targets="[&lt;AssName(preferred_ver) l.101 [bb.providers] at Ox9abf1cc&gt;]" value="(pe, pv, pr)">
                  <AssName fromlineno="101" tolineno="101" lineno="101" name="preferred_ver"/>
                  <Tuple fromlineno="101" tolineno="101" lineno="101">
                    <Name fromlineno="101" tolineno="101" lineno="101" name="pe"/>
                    <Name fromlineno="101" tolineno="101" lineno="101" name="pv"/>
                    <Name fromlineno="101" tolineno="101" lineno="101" name="pr"/>
                  </Tuple>
                </Assign>
                <Break fromlineno="102" tolineno="102" lineno="102"/>
              </If>
            </For>
            <If fromlineno="103" tolineno="104" lineno="103">
              <Name fromlineno="103" tolineno="103" lineno="103" name="preferred_file"/>
              <Break fromlineno="104" tolineno="104" lineno="104"/>
            </If>
          </For>
          <If fromlineno="105" tolineno="108" lineno="105">
            <Name fromlineno="105" tolineno="105" lineno="105" name="preferred_r"/>
            <Assign fromlineno="106" tolineno="106" lineno="106" targets="[&lt;AssName(pv_str) l.106 [bb.providers] at Ox9abf40c&gt;]" value="('%s-%s') % ((preferred_v, preferred_r))">
              <AssName fromlineno="106" tolineno="106" lineno="106" name="pv_str"/>
              <BinOp fromlineno="106" tolineno="106" lineno="106" op="%" left="'%s-%s'" right="(preferred_v, preferred_r)">
                <Const fromlineno="106" tolineno="106" lineno="106" type="str">'%s-%s'</Const>
                <Tuple fromlineno="106" tolineno="106" lineno="106">
                  <Name fromlineno="106" tolineno="106" lineno="106" name="preferred_v"/>
                  <Name fromlineno="106" tolineno="106" lineno="106" name="preferred_r"/>
                </Tuple>
              </BinOp>
            </Assign>
            <Assign fromlineno="108" tolineno="108" lineno="108" targets="[&lt;AssName(pv_str) l.108 [bb.providers] at Ox9abf56c&gt;]" value="preferred_v">
              <AssName fromlineno="108" tolineno="108" lineno="108" name="pv_str"/>
              <Name fromlineno="108" tolineno="108" lineno="108" name="preferred_v"/>
            </Assign>
          </If>
          <If fromlineno="109" tolineno="110" lineno="109">
            <UnaryOp fromlineno="109" tolineno="109" lineno="109">
              <Compare fromlineno="109" tolineno="109" lineno="109" op="('is', &lt;Const(NoneType) l.109 [bb.providers] at Ox9abf64c&gt;)">
                <Name fromlineno="109" tolineno="109" lineno="109" name="preferred_e"/>
                <Const fromlineno="109" tolineno="109" lineno="109" type="NoneType">None</Const>
              </Compare>
            </UnaryOp>
            <Assign fromlineno="110" tolineno="110" lineno="110" targets="[&lt;AssName(pv_str) l.110 [bb.providers] at Ox9abf6ec&gt;]" value="('%s:%s') % ((preferred_e, pv_str))">
              <AssName fromlineno="110" tolineno="110" lineno="110" name="pv_str"/>
              <BinOp fromlineno="110" tolineno="110" lineno="110" op="%" left="'%s:%s'" right="(preferred_e, pv_str)">
                <Const fromlineno="110" tolineno="110" lineno="110" type="str">'%s:%s'</Const>
                <Tuple fromlineno="110" tolineno="110" lineno="110">
                  <Name fromlineno="110" tolineno="110" lineno="110" name="preferred_e"/>
                  <Name fromlineno="110" tolineno="110" lineno="110" name="pv_str"/>
                </Tuple>
              </BinOp>
            </Assign>
          </If>
          <Assign fromlineno="111" tolineno="111" lineno="111" targets="[&lt;AssName(itemstr) l.111 [bb.providers] at Ox9abf80c&gt;]" value="''">
            <AssName fromlineno="111" tolineno="111" lineno="111" name="itemstr"/>
            <Const fromlineno="111" tolineno="111" lineno="111" type="str">''</Const>
          </Assign>
          <If fromlineno="112" tolineno="113" lineno="112">
            <Name fromlineno="112" tolineno="112" lineno="112" name="item"/>
            <Assign fromlineno="113" tolineno="113" lineno="113" targets="[&lt;AssName(itemstr) l.113 [bb.providers] at Ox9abf92c&gt;]" value="(' (for item %s)') % (item)">
              <AssName fromlineno="113" tolineno="113" lineno="113" name="itemstr"/>
              <BinOp fromlineno="113" tolineno="113" lineno="113" op="%" left="' (for item %s)'" right="item">
                <Const fromlineno="113" tolineno="113" lineno="113" type="str">' (for item %s)'</Const>
                <Name fromlineno="113" tolineno="113" lineno="113" name="item"/>
              </BinOp>
            </Assign>
          </If>
          <If fromlineno="114" tolineno="117" lineno="114">
            <Compare fromlineno="114" tolineno="114" lineno="114" op="('is', &lt;Const(NoneType) l.114 [bb.providers] at Ox9abfa4c&gt;)">
              <Name fromlineno="114" tolineno="114" lineno="114" name="preferred_file"/>
              <Const fromlineno="114" tolineno="114" lineno="114" type="NoneType">None</Const>
            </Compare>
            <Discard fromlineno="115" tolineno="115" lineno="115">
              <CallFunc fromlineno="115" tolineno="115" lineno="115" func="Getattr(note)">
                <Getattr fromlineno="115" tolineno="115" lineno="115" attrname="note" expr="bb.msg">
                  <Getattr fromlineno="115" tolineno="115" lineno="115" attrname="msg" expr="bb">
                    <Name fromlineno="115" tolineno="115" lineno="115" name="bb"/>
                  </Getattr>
                </Getattr>
                <Const fromlineno="115" tolineno="115" lineno="115" type="int">1</Const>
                <Getattr fromlineno="115" tolineno="115" lineno="115" attrname="Provider" expr="bb.msg.domain">
                  <Getattr fromlineno="115" tolineno="115" lineno="115" attrname="domain" expr="bb.msg">
                    <Getattr fromlineno="115" tolineno="115" lineno="115" attrname="msg" expr="bb">
                      <Name fromlineno="115" tolineno="115" lineno="115" name="bb"/>
                    </Getattr>
                  </Getattr>
                </Getattr>
                <BinOp fromlineno="115" tolineno="115" lineno="115" op="%" left="'preferred version %s of %s not available%s'" right="(pv_str, pn, itemstr)">
                  <Const fromlineno="115" tolineno="115" lineno="115" type="str">'preferred version %s of %s not available%s'</Const>
                  <Tuple fromlineno="115" tolineno="115" lineno="115">
                    <Name fromlineno="115" tolineno="115" lineno="115" name="pv_str"/>
                    <Name fromlineno="115" tolineno="115" lineno="115" name="pn"/>
                    <Name fromlineno="115" tolineno="115" lineno="115" name="itemstr"/>
                  </Tuple>
                </BinOp>
              </CallFunc>
            </Discard>
            <Discard fromlineno="117" tolineno="117" lineno="117">
              <CallFunc fromlineno="117" tolineno="117" lineno="117" func="Getattr(debug)">
                <Getattr fromlineno="117" tolineno="117" lineno="117" attrname="debug" expr="bb.msg">
                  <Getattr fromlineno="117" tolineno="117" lineno="117" attrname="msg" expr="bb">
                    <Name fromlineno="117" tolineno="117" lineno="117" name="bb"/>
                  </Getattr>
                </Getattr>
                <Const fromlineno="117" tolineno="117" lineno="117" type="int">1</Const>
                <Getattr fromlineno="117" tolineno="117" lineno="117" attrname="Provider" expr="bb.msg.domain">
                  <Getattr fromlineno="117" tolineno="117" lineno="117" attrname="domain" expr="bb.msg">
                    <Getattr fromlineno="117" tolineno="117" lineno="117" attrname="msg" expr="bb">
                      <Name fromlineno="117" tolineno="117" lineno="117" name="bb"/>
                    </Getattr>
                  </Getattr>
                </Getattr>
                <BinOp fromlineno="117" tolineno="117" lineno="117" op="%" left="'selecting %s as PREFERRED_VERSION %s of package %s%s'" right="(preferred_file, pv_str, pn, itemstr)">
                  <Const fromlineno="117" tolineno="117" lineno="117" type="str">'selecting %s as PREFERRED_VERSION %s of package %s%s'</Const>
                  <Tuple fromlineno="117" tolineno="117" lineno="117">
                    <Name fromlineno="117" tolineno="117" lineno="117" name="preferred_file"/>
                    <Name fromlineno="117" tolineno="117" lineno="117" name="pv_str"/>
                    <Name fromlineno="117" tolineno="117" lineno="117" name="pn"/>
                    <Name fromlineno="117" tolineno="117" lineno="117" name="itemstr"/>
                  </Tuple>
                </BinOp>
              </CallFunc>
            </Discard>
          </If>
        </If>
        <Return fromlineno="119" tolineno="119" lineno="119">
          <Tuple fromlineno="119" tolineno="119" lineno="119">
            <Name fromlineno="119" tolineno="119" lineno="119" name="preferred_ver"/>
            <Name fromlineno="119" tolineno="119" lineno="119" name="preferred_file"/>
          </Tuple>
        </Return>
      </Function>
      <Function fromlineno="122" tolineno="139" lineno="122">
        <Arguments fromlineno="122" tolineno="122" lineno="None" format_args="pn, cfgData, dataCache, file_set">
          <AssName fromlineno="122" tolineno="122" lineno="122" name="pn"/>
          <AssName fromlineno="122" tolineno="122" lineno="122" name="cfgData"/>
          <AssName fromlineno="122" tolineno="122" lineno="122" name="dataCache"/>
          <AssName fromlineno="122" tolineno="122" lineno="122" name="file_set"/>
        </Arguments>
        <Assign fromlineno="127" tolineno="127" lineno="127" targets="[&lt;AssName(latest) l.127 [bb.providers] at Ox9ac31ac&gt;]" value="None">
          <AssName fromlineno="127" tolineno="127" lineno="127" name="latest"/>
          <Const fromlineno="127" tolineno="127" lineno="127" type="NoneType">None</Const>
        </Assign>
        <Assign fromlineno="128" tolineno="128" lineno="128" targets="[&lt;AssName(latest_p) l.128 [bb.providers] at Ox9ac324c&gt;]" value="0">
          <AssName fromlineno="128" tolineno="128" lineno="128" name="latest_p"/>
          <Const fromlineno="128" tolineno="128" lineno="128" type="int">0</Const>
        </Assign>
        <Assign fromlineno="129" tolineno="129" lineno="129" targets="[&lt;AssName(latest_f) l.129 [bb.providers] at Ox9ac32ec&gt;]" value="None">
          <AssName fromlineno="129" tolineno="129" lineno="129" name="latest_f"/>
          <Const fromlineno="129" tolineno="129" lineno="129" type="NoneType">None</Const>
        </Assign>
        <For fromlineno="130" tolineno="137" lineno="130">
          <AssName fromlineno="130" tolineno="130" lineno="130" name="file_name"/>
          <Name fromlineno="130" tolineno="130" lineno="130" name="file_set"/>
          <Assign fromlineno="131" tolineno="131" lineno="131" targets="[&lt;Tuple(tuple) l.131 [bb.providers] at Ox9ac344c&gt;]" value="dataCache.pkg_pepvpr[file_name]">
            <Tuple fromlineno="131" tolineno="131" lineno="131">
              <AssName fromlineno="131" tolineno="131" lineno="131" name="pe"/>
              <AssName fromlineno="131" tolineno="131" lineno="131" name="pv"/>
              <AssName fromlineno="131" tolineno="131" lineno="131" name="pr"/>
            </Tuple>
            <Subscript fromlineno="131" tolineno="131" lineno="131">
              <Getattr fromlineno="131" tolineno="131" lineno="131" attrname="pkg_pepvpr" expr="dataCache">
                <Name fromlineno="131" tolineno="131" lineno="131" name="dataCache"/>
              </Getattr>
              <Index fromlineno="131" tolineno="131" lineno="None">
                <Name fromlineno="131" tolineno="131" lineno="131" name="file_name"/>
              </Index>
            </Subscript>
          </Assign>
          <Assign fromlineno="132" tolineno="132" lineno="132" targets="[&lt;AssName(dp) l.132 [bb.providers] at Ox9ac362c&gt;]" value="dataCache.pkg_dp[file_name]">
            <AssName fromlineno="132" tolineno="132" lineno="132" name="dp"/>
            <Subscript fromlineno="132" tolineno="132" lineno="132">
              <Getattr fromlineno="132" tolineno="132" lineno="132" attrname="pkg_dp" expr="dataCache">
                <Name fromlineno="132" tolineno="132" lineno="132" name="dataCache"/>
              </Getattr>
              <Index fromlineno="132" tolineno="132" lineno="None">
                <Name fromlineno="132" tolineno="132" lineno="132" name="file_name"/>
              </Index>
            </Subscript>
          </Assign>
          <If fromlineno="134" tolineno="137" lineno="134">
            <BoolOp fromlineno="134" tolineno="134" lineno="134" op="or" values="latest is None,(latest_p == dp) and (utils.vercmp(latest, (pe, pv, pr)) &lt; 0),dp &gt; latest_p,">
              <Compare fromlineno="134" tolineno="134" lineno="134" op="('is', &lt;Const(NoneType) l.134 [bb.providers] at Ox9ac380c&gt;)">
                <Name fromlineno="134" tolineno="134" lineno="134" name="latest"/>
                <Const fromlineno="134" tolineno="134" lineno="134" type="NoneType">None</Const>
              </Compare>
              <BoolOp fromlineno="134" tolineno="134" lineno="134" op="and" values="latest_p == dp,utils.vercmp(latest, (pe, pv, pr)) &lt; 0,">
                <Compare fromlineno="134" tolineno="134" lineno="134" op="('==', &lt;Name(dp) l.134 [bb.providers] at Ox9ac390c&gt;)">
                  <Name fromlineno="134" tolineno="134" lineno="134" name="latest_p"/>
                  <Name fromlineno="134" tolineno="134" lineno="134" name="dp"/>
                </Compare>
                <Compare fromlineno="134" tolineno="134" lineno="134" op="('&lt;', &lt;Const(int) l.134 [bb.providers] at Ox9ac3acc&gt;)">
                  <CallFunc fromlineno="134" tolineno="134" lineno="134" func="Getattr(vercmp)">
                    <Getattr fromlineno="134" tolineno="134" lineno="134" attrname="vercmp" expr="utils">
                      <Name fromlineno="134" tolineno="134" lineno="134" name="utils"/>
                    </Getattr>
                    <Name fromlineno="134" tolineno="134" lineno="134" name="latest"/>
                    <Tuple fromlineno="134" tolineno="134" lineno="134">
                      <Name fromlineno="134" tolineno="134" lineno="134" name="pe"/>
                      <Name fromlineno="134" tolineno="134" lineno="134" name="pv"/>
                      <Name fromlineno="134" tolineno="134" lineno="134" name="pr"/>
                    </Tuple>
                  </CallFunc>
                  <Const fromlineno="134" tolineno="134" lineno="134" type="int">0</Const>
                </Compare>
              </BoolOp>
              <Compare fromlineno="134" tolineno="134" lineno="134" op="('&gt;', &lt;Name(latest_p) l.134 [bb.providers] at Ox9ac3b4c&gt;)">
                <Name fromlineno="134" tolineno="134" lineno="134" name="dp"/>
                <Name fromlineno="134" tolineno="134" lineno="134" name="latest_p"/>
              </Compare>
            </BoolOp>
            <Assign fromlineno="135" tolineno="135" lineno="135" targets="[&lt;AssName(latest) l.135 [bb.providers] at Ox9ac3bcc&gt;]" value="(pe, pv, pr)">
              <AssName fromlineno="135" tolineno="135" lineno="135" name="latest"/>
              <Tuple fromlineno="135" tolineno="135" lineno="135">
                <Name fromlineno="135" tolineno="135" lineno="135" name="pe"/>
                <Name fromlineno="135" tolineno="135" lineno="135" name="pv"/>
                <Name fromlineno="135" tolineno="135" lineno="135" name="pr"/>
              </Tuple>
            </Assign>
            <Assign fromlineno="136" tolineno="136" lineno="136" targets="[&lt;AssName(latest_f) l.136 [bb.providers] at Ox9ac3ccc&gt;]" value="file_name">
              <AssName fromlineno="136" tolineno="136" lineno="136" name="latest_f"/>
              <Name fromlineno="136" tolineno="136" lineno="136" name="file_name"/>
            </Assign>
            <Assign fromlineno="137" tolineno="137" lineno="137" targets="[&lt;AssName(latest_p) l.137 [bb.providers] at Ox9ac3d4c&gt;]" value="dp">
              <AssName fromlineno="137" tolineno="137" lineno="137" name="latest_p"/>
              <Name fromlineno="137" tolineno="137" lineno="137" name="dp"/>
            </Assign>
          </If>
        </For>
        <Return fromlineno="139" tolineno="139" lineno="139">
          <Tuple fromlineno="139" tolineno="139" lineno="139">
            <Name fromlineno="139" tolineno="139" lineno="139" name="latest"/>
            <Name fromlineno="139" tolineno="139" lineno="139" name="latest_f"/>
          </Tuple>
        </Return>
      </Function>
      <Function fromlineno="142" tolineno="159" lineno="142">
        <Arguments fromlineno="142" tolineno="142" lineno="None" format_args="pn, cfgData, dataCache, pkg_pn=None, item=None">
          <AssName fromlineno="142" tolineno="142" lineno="142" name="pn"/>
          <AssName fromlineno="142" tolineno="142" lineno="142" name="cfgData"/>
          <AssName fromlineno="142" tolineno="142" lineno="142" name="dataCache"/>
          <AssName fromlineno="142" tolineno="142" lineno="142" name="pkg_pn"/>
          <AssName fromlineno="142" tolineno="142" lineno="142" name="item"/>
          <Const fromlineno="142" tolineno="142" lineno="142" type="NoneType">None</Const>
          <Const fromlineno="142" tolineno="142" lineno="142" type="NoneType">None</Const>
        </Arguments>
        <Assign fromlineno="149" tolineno="149" lineno="149" targets="[&lt;AssName(sortpkg_pn) l.149 [bb.providers] at Ox9ac608c&gt;]" value="sortPriorities(pn, dataCache, pkg_pn)">
          <AssName fromlineno="149" tolineno="149" lineno="149" name="sortpkg_pn"/>
          <CallFunc fromlineno="149" tolineno="149" lineno="149" func="Name(sortPriorities)">
            <Name fromlineno="149" tolineno="149" lineno="149" name="sortPriorities"/>
            <Name fromlineno="149" tolineno="149" lineno="149" name="pn"/>
            <Name fromlineno="149" tolineno="149" lineno="149" name="dataCache"/>
            <Name fromlineno="149" tolineno="149" lineno="149" name="pkg_pn"/>
          </CallFunc>
        </Assign>
        <Assign fromlineno="151" tolineno="151" lineno="151" targets="[&lt;Tuple(tuple) l.151 [bb.providers] at Ox9ac61cc&gt;]" value="findPreferredProvider(pn, cfgData, dataCache, sortpkg_pn, item)">
          <Tuple fromlineno="151" tolineno="151" lineno="151">
            <AssName fromlineno="151" tolineno="151" lineno="151" name="preferred_ver"/>
            <AssName fromlineno="151" tolineno="151" lineno="151" name="preferred_file"/>
          </Tuple>
          <CallFunc fromlineno="151" tolineno="151" lineno="151" func="Name(findPreferredProvider)">
            <Name fromlineno="151" tolineno="151" lineno="151" name="findPreferredProvider"/>
            <Name fromlineno="151" tolineno="151" lineno="151" name="pn"/>
            <Name fromlineno="151" tolineno="151" lineno="151" name="cfgData"/>
            <Name fromlineno="151" tolineno="151" lineno="151" name="dataCache"/>
            <Name fromlineno="151" tolineno="151" lineno="151" name="sortpkg_pn"/>
            <Name fromlineno="151" tolineno="151" lineno="151" name="item"/>
          </CallFunc>
        </Assign>
        <Assign fromlineno="153" tolineno="153" lineno="153" targets="[&lt;Tuple(tuple) l.153 [bb.providers] at Ox9ac63cc&gt;]" value="findLatestProvider(pn, cfgData, dataCache, sortpkg_pn[0])">
          <Tuple fromlineno="153" tolineno="153" lineno="153">
            <AssName fromlineno="153" tolineno="153" lineno="153" name="latest"/>
            <AssName fromlineno="153" tolineno="153" lineno="153" name="latest_f"/>
          </Tuple>
          <CallFunc fromlineno="153" tolineno="153" lineno="153" func="Name(findLatestProvider)">
            <Name fromlineno="153" tolineno="153" lineno="153" name="findLatestProvider"/>
            <Name fromlineno="153" tolineno="153" lineno="153" name="pn"/>
            <Name fromlineno="153" tolineno="153" lineno="153" name="cfgData"/>
            <Name fromlineno="153" tolineno="153" lineno="153" name="dataCache"/>
            <Subscript fromlineno="153" tolineno="153" lineno="153">
              <Name fromlineno="153" tolineno="153" lineno="153" name="sortpkg_pn"/>
              <Index fromlineno="153" tolineno="153" lineno="None">
                <Const fromlineno="153" tolineno="153" lineno="153" type="int">0</Const>
              </Index>
            </Subscript>
          </CallFunc>
        </Assign>
        <If fromlineno="155" tolineno="157" lineno="155">
          <Compare fromlineno="155" tolineno="155" lineno="155" op="('is', &lt;Const(NoneType) l.155 [bb.providers] at Ox9ac666c&gt;)">
            <Name fromlineno="155" tolineno="155" lineno="155" name="preferred_file"/>
            <Const fromlineno="155" tolineno="155" lineno="155" type="NoneType">None</Const>
          </Compare>
          <Assign fromlineno="156" tolineno="156" lineno="156" targets="[&lt;AssName(preferred_file) l.156 [bb.providers] at Ox9ac670c&gt;]" value="latest_f">
            <AssName fromlineno="156" tolineno="156" lineno="156" name="preferred_file"/>
            <Name fromlineno="156" tolineno="156" lineno="156" name="latest_f"/>
          </Assign>
          <Assign fromlineno="157" tolineno="157" lineno="157" targets="[&lt;AssName(preferred_ver) l.157 [bb.providers] at Ox9ac678c&gt;]" value="latest">
            <AssName fromlineno="157" tolineno="157" lineno="157" name="preferred_ver"/>
            <Name fromlineno="157" tolineno="157" lineno="157" name="latest"/>
          </Assign>
        </If>
        <Return fromlineno="159" tolineno="159" lineno="159">
          <Tuple fromlineno="159" tolineno="159" lineno="159">
            <Name fromlineno="159" tolineno="159" lineno="159" name="latest"/>
            <Name fromlineno="159" tolineno="159" lineno="159" name="latest_f"/>
            <Name fromlineno="159" tolineno="159" lineno="159" name="preferred_ver"/>
            <Name fromlineno="159" tolineno="159" lineno="159" name="preferred_file"/>
          </Tuple>
        </Return>
      </Function>
      <Function fromlineno="162" tolineno="216" lineno="162">
        <Arguments fromlineno="162" tolineno="162" lineno="None" format_args="providers, item, cfgData, dataCache">
          <AssName fromlineno="162" tolineno="162" lineno="162" name="providers"/>
          <AssName fromlineno="162" tolineno="162" lineno="162" name="item"/>
          <AssName fromlineno="162" tolineno="162" lineno="162" name="cfgData"/>
          <AssName fromlineno="162" tolineno="162" lineno="162" name="dataCache"/>
        </Arguments>
        <Assign fromlineno="167" tolineno="167" lineno="167" targets="[&lt;AssName(eligible) l.167 [bb.providers] at Ox9ac6a6c&gt;]" value="[]">
          <AssName fromlineno="167" tolineno="167" lineno="167" name="eligible"/>
          <List fromlineno="167" tolineno="167" lineno="167"/>
        </Assign>
        <Assign fromlineno="168" tolineno="168" lineno="168" targets="[&lt;AssName(preferred_versions) l.168 [bb.providers] at Ox9ac6b2c&gt;]" value="{}">
          <AssName fromlineno="168" tolineno="168" lineno="168" name="preferred_versions"/>
          <Dict fromlineno="168" tolineno="168" lineno="168"/>
        </Assign>
        <Assign fromlineno="169" tolineno="169" lineno="169" targets="[&lt;AssName(sortpkg_pn) l.169 [bb.providers] at Ox9ac6bec&gt;]" value="{}">
          <AssName fromlineno="169" tolineno="169" lineno="169" name="sortpkg_pn"/>
          <Dict fromlineno="169" tolineno="169" lineno="169"/>
        </Assign>
        <Discard fromlineno="174" tolineno="174" lineno="174">
          <CallFunc fromlineno="174" tolineno="174" lineno="174" func="Getattr(sort)">
            <Getattr fromlineno="174" tolineno="174" lineno="174" attrname="sort" expr="providers">
              <Name fromlineno="174" tolineno="174" lineno="174" name="providers"/>
            </Getattr>
          </CallFunc>
        </Discard>
        <Assign fromlineno="177" tolineno="177" lineno="177" targets="[&lt;AssName(pkg_pn) l.177 [bb.providers] at Ox9ac6d4c&gt;]" value="{}">
          <AssName fromlineno="177" tolineno="177" lineno="177" name="pkg_pn"/>
          <Dict fromlineno="177" tolineno="177" lineno="177"/>
        </Assign>
        <For fromlineno="178" tolineno="182" lineno="178">
          <AssName fromlineno="178" tolineno="178" lineno="178" name="p"/>
          <Name fromlineno="178" tolineno="178" lineno="178" name="providers"/>
          <Assign fromlineno="179" tolineno="179" lineno="179" targets="[&lt;AssName(pn) l.179 [bb.providers] at Ox9ac6ecc&gt;]" value="dataCache.pkg_fn[p]">
            <AssName fromlineno="179" tolineno="179" lineno="179" name="pn"/>
            <Subscript fromlineno="179" tolineno="179" lineno="179">
              <Getattr fromlineno="179" tolineno="179" lineno="179" attrname="pkg_fn" expr="dataCache">
                <Name fromlineno="179" tolineno="179" lineno="179" name="dataCache"/>
              </Getattr>
              <Index fromlineno="179" tolineno="179" lineno="None">
                <Name fromlineno="179" tolineno="179" lineno="179" name="p"/>
              </Index>
            </Subscript>
          </Assign>
          <If fromlineno="180" tolineno="181" lineno="180">
            <Compare fromlineno="180" tolineno="180" lineno="180" op="('not in', &lt;Name(pkg_pn) l.180 [bb.providers] at Ox9aca06c&gt;)">
              <Name fromlineno="180" tolineno="180" lineno="180" name="pn"/>
              <Name fromlineno="180" tolineno="180" lineno="180" name="pkg_pn"/>
            </Compare>
            <Assign fromlineno="181" tolineno="181" lineno="181" targets="[&lt;Subscript() l.181 [bb.providers] at Ox9aca10c&gt;]" value="[]">
              <Subscript fromlineno="181" tolineno="181" lineno="181">
                <Name fromlineno="181" tolineno="181" lineno="181" name="pkg_pn"/>
                <Index fromlineno="181" tolineno="181" lineno="None">
                  <Name fromlineno="181" tolineno="181" lineno="181" name="pn"/>
                </Index>
              </Subscript>
              <List fromlineno="181" tolineno="181" lineno="181"/>
            </Assign>
          </If>
          <Discard fromlineno="182" tolineno="182" lineno="182">
            <CallFunc fromlineno="182" tolineno="182" lineno="182" func="Getattr(append)">
              <Getattr fromlineno="182" tolineno="182" lineno="182" attrname="append" expr="pkg_pn[pn]">
                <Subscript fromlineno="182" tolineno="182" lineno="182">
                  <Name fromlineno="182" tolineno="182" lineno="182" name="pkg_pn"/>
                  <Index fromlineno="182" tolineno="182" lineno="None">
                    <Name fromlineno="182" tolineno="182" lineno="182" name="pn"/>
                  </Index>
                </Subscript>
              </Getattr>
              <Name fromlineno="182" tolineno="182" lineno="182" name="p"/>
            </CallFunc>
          </Discard>
        </For>
        <Discard fromlineno="184" tolineno="184" lineno="184">
          <CallFunc fromlineno="184" tolineno="184" lineno="184" func="Getattr(debug)">
            <Getattr fromlineno="184" tolineno="184" lineno="184" attrname="debug" expr="bb.msg">
              <Getattr fromlineno="184" tolineno="184" lineno="184" attrname="msg" expr="bb">
                <Name fromlineno="184" tolineno="184" lineno="184" name="bb"/>
              </Getattr>
            </Getattr>
            <Const fromlineno="184" tolineno="184" lineno="184" type="int">1</Const>
            <Getattr fromlineno="184" tolineno="184" lineno="184" attrname="Provider" expr="bb.msg.domain">
              <Getattr fromlineno="184" tolineno="184" lineno="184" attrname="domain" expr="bb.msg">
                <Getattr fromlineno="184" tolineno="184" lineno="184" attrname="msg" expr="bb">
                  <Name fromlineno="184" tolineno="184" lineno="184" name="bb"/>
                </Getattr>
              </Getattr>
            </Getattr>
            <BinOp fromlineno="184" tolineno="184" lineno="184" op="%" left="'providers for %s are: %s'" right="(item, pkg_pn.keys())">
              <Const fromlineno="184" tolineno="184" lineno="184" type="str">'providers for %s are: %s'</Const>
              <Tuple fromlineno="184" tolineno="184" lineno="184">
                <Name fromlineno="184" tolineno="184" lineno="184" name="item"/>
                <CallFunc fromlineno="184" tolineno="184" lineno="184" func="Getattr(keys)">
                  <Getattr fromlineno="184" tolineno="184" lineno="184" attrname="keys" expr="pkg_pn">
                    <Name fromlineno="184" tolineno="184" lineno="184" name="pkg_pn"/>
                  </Getattr>
                </CallFunc>
              </Tuple>
            </BinOp>
          </CallFunc>
        </Discard>
        <For fromlineno="187" tolineno="191" lineno="187">
          <AssName fromlineno="187" tolineno="187" lineno="187" name="pn"/>
          <CallFunc fromlineno="187" tolineno="187" lineno="187" func="Getattr(keys)">
            <Getattr fromlineno="187" tolineno="187" lineno="187" attrname="keys" expr="pkg_pn">
              <Name fromlineno="187" tolineno="187" lineno="187" name="pkg_pn"/>
            </Getattr>
          </CallFunc>
          <Assign fromlineno="188" tolineno="188" lineno="188" targets="[&lt;Subscript() l.188 [bb.providers] at Ox9aca6ac&gt;]" value="sortPriorities(pn, dataCache, pkg_pn)">
            <Subscript fromlineno="188" tolineno="188" lineno="188">
              <Name fromlineno="188" tolineno="188" lineno="188" name="sortpkg_pn"/>
              <Index fromlineno="188" tolineno="188" lineno="None">
                <Name fromlineno="188" tolineno="188" lineno="188" name="pn"/>
              </Index>
            </Subscript>
            <CallFunc fromlineno="188" tolineno="188" lineno="188" func="Name(sortPriorities)">
              <Name fromlineno="188" tolineno="188" lineno="188" name="sortPriorities"/>
              <Name fromlineno="188" tolineno="188" lineno="188" name="pn"/>
              <Name fromlineno="188" tolineno="188" lineno="188" name="dataCache"/>
              <Name fromlineno="188" tolineno="188" lineno="188" name="pkg_pn"/>
            </CallFunc>
          </Assign>
          <Assign fromlineno="189" tolineno="189" lineno="189" targets="[&lt;Subscript() l.189 [bb.providers] at Ox9aca82c&gt;]" value="findPreferredProvider(pn, cfgData, dataCache, sortpkg_pn[pn], item)">
            <Subscript fromlineno="189" tolineno="189" lineno="189">
              <Name fromlineno="189" tolineno="189" lineno="189" name="preferred_versions"/>
              <Index fromlineno="189" tolineno="189" lineno="None">
                <Name fromlineno="189" tolineno="189" lineno="189" name="pn"/>
              </Index>
            </Subscript>
            <CallFunc fromlineno="189" tolineno="189" lineno="189" func="Name(findPreferredProvider)">
              <Name fromlineno="189" tolineno="189" lineno="189" name="findPreferredProvider"/>
              <Name fromlineno="189" tolineno="189" lineno="189" name="pn"/>
              <Name fromlineno="189" tolineno="189" lineno="189" name="cfgData"/>
              <Name fromlineno="189" tolineno="189" lineno="189" name="dataCache"/>
              <Subscript fromlineno="189" tolineno="189" lineno="189">
                <Name fromlineno="189" tolineno="189" lineno="189" name="sortpkg_pn"/>
                <Index fromlineno="189" tolineno="189" lineno="None">
                  <Name fromlineno="189" tolineno="189" lineno="189" name="pn"/>
                </Index>
              </Subscript>
              <Name fromlineno="189" tolineno="189" lineno="189" name="item"/>
            </CallFunc>
          </Assign>
          <If fromlineno="190" tolineno="191" lineno="190">
            <Subscript fromlineno="190" tolineno="190" lineno="190">
              <Subscript fromlineno="190" tolineno="190" lineno="190">
                <Name fromlineno="190" tolineno="190" lineno="190" name="preferred_versions"/>
                <Index fromlineno="190" tolineno="190" lineno="None">
                  <Name fromlineno="190" tolineno="190" lineno="190" name="pn"/>
                </Index>
              </Subscript>
              <Index fromlineno="190" tolineno="190" lineno="None">
                <Const fromlineno="190" tolineno="190" lineno="190" type="int">1</Const>
              </Index>
            </Subscript>
            <Discard fromlineno="191" tolineno="191" lineno="191">
              <CallFunc fromlineno="191" tolineno="191" lineno="191" func="Getattr(append)">
                <Getattr fromlineno="191" tolineno="191" lineno="191" attrname="append" expr="eligible">
                  <Name fromlineno="191" tolineno="191" lineno="191" name="eligible"/>
                </Getattr>
                <Subscript fromlineno="191" tolineno="191" lineno="191">
                  <Subscript fromlineno="191" tolineno="191" lineno="191">
                    <Name fromlineno="191" tolineno="191" lineno="191" name="preferred_versions"/>
                    <Index fromlineno="191" tolineno="191" lineno="None">
                      <Name fromlineno="191" tolineno="191" lineno="191" name="pn"/>
                    </Index>
                  </Subscript>
                  <Index fromlineno="191" tolineno="191" lineno="None">
                    <Const fromlineno="191" tolineno="191" lineno="191" type="int">1</Const>
                  </Index>
                </Subscript>
              </CallFunc>
            </Discard>
          </If>
        </For>
        <For fromlineno="194" tolineno="198" lineno="194">
          <AssName fromlineno="194" tolineno="194" lineno="194" name="pn"/>
          <CallFunc fromlineno="194" tolineno="194" lineno="194" func="Getattr(keys)">
            <Getattr fromlineno="194" tolineno="194" lineno="194" attrname="keys" expr="sortpkg_pn">
              <Name fromlineno="194" tolineno="194" lineno="194" name="sortpkg_pn"/>
            </Getattr>
          </CallFunc>
          <If fromlineno="195" tolineno="196" lineno="195">
            <BoolOp fromlineno="195" tolineno="195" lineno="195" op="and" values="pn in preferred_versions,preferred_versions[pn][1],">
              <Compare fromlineno="195" tolineno="195" lineno="195" op="('in', &lt;Name(preferred_versions) l.195 [bb.providers] at Ox9acaecc&gt;)">
                <Name fromlineno="195" tolineno="195" lineno="195" name="pn"/>
                <Name fromlineno="195" tolineno="195" lineno="195" name="preferred_versions"/>
              </Compare>
              <Subscript fromlineno="195" tolineno="195" lineno="195">
                <Subscript fromlineno="195" tolineno="195" lineno="195">
                  <Name fromlineno="195" tolineno="195" lineno="195" name="preferred_versions"/>
                  <Index fromlineno="195" tolineno="195" lineno="None">
                    <Name fromlineno="195" tolineno="195" lineno="195" name="pn"/>
                  </Index>
                </Subscript>
                <Index fromlineno="195" tolineno="195" lineno="None">
                  <Const fromlineno="195" tolineno="195" lineno="195" type="int">1</Const>
                </Index>
              </Subscript>
            </BoolOp>
            <Continue fromlineno="196" tolineno="196" lineno="196"/>
          </If>
          <Assign fromlineno="197" tolineno="197" lineno="197" targets="[&lt;Subscript() l.197 [bb.providers] at Ox9acf06c&gt;]" value="findLatestProvider(pn, cfgData, dataCache, sortpkg_pn[pn][0])">
            <Subscript fromlineno="197" tolineno="197" lineno="197">
              <Name fromlineno="197" tolineno="197" lineno="197" name="preferred_versions"/>
              <Index fromlineno="197" tolineno="197" lineno="None">
                <Name fromlineno="197" tolineno="197" lineno="197" name="pn"/>
              </Index>
            </Subscript>
            <CallFunc fromlineno="197" tolineno="197" lineno="197" func="Name(findLatestProvider)">
              <Name fromlineno="197" tolineno="197" lineno="197" name="findLatestProvider"/>
              <Name fromlineno="197" tolineno="197" lineno="197" name="pn"/>
              <Name fromlineno="197" tolineno="197" lineno="197" name="cfgData"/>
              <Name fromlineno="197" tolineno="197" lineno="197" name="dataCache"/>
              <Subscript fromlineno="197" tolineno="197" lineno="197">
                <Subscript fromlineno="197" tolineno="197" lineno="197">
                  <Name fromlineno="197" tolineno="197" lineno="197" name="sortpkg_pn"/>
                  <Index fromlineno="197" tolineno="197" lineno="None">
                    <Name fromlineno="197" tolineno="197" lineno="197" name="pn"/>
                  </Index>
                </Subscript>
                <Index fromlineno="197" tolineno="197" lineno="None">
                  <Const fromlineno="197" tolineno="197" lineno="197" type="int">0</Const>
                </Index>
              </Subscript>
            </CallFunc>
          </Assign>
          <Discard fromlineno="198" tolineno="198" lineno="198">
            <CallFunc fromlineno="198" tolineno="198" lineno="198" func="Getattr(append)">
              <Getattr fromlineno="198" tolineno="198" lineno="198" attrname="append" expr="eligible">
                <Name fromlineno="198" tolineno="198" lineno="198" name="eligible"/>
              </Getattr>
              <Subscript fromlineno="198" tolineno="198" lineno="198">
                <Subscript fromlineno="198" tolineno="198" lineno="198">
                  <Name fromlineno="198" tolineno="198" lineno="198" name="preferred_versions"/>
                  <Index fromlineno="198" tolineno="198" lineno="None">
                    <Name fromlineno="198" tolineno="198" lineno="198" name="pn"/>
                  </Index>
                </Subscript>
                <Index fromlineno="198" tolineno="198" lineno="None">
                  <Const fromlineno="198" tolineno="198" lineno="198" type="int">1</Const>
                </Index>
              </Subscript>
            </CallFunc>
          </Discard>
        </For>
        <If fromlineno="200" tolineno="202" lineno="200">
          <Compare fromlineno="200" tolineno="200" lineno="200" op="('==', &lt;Const(int) l.200 [bb.providers] at Ox9acf50c&gt;)">
            <CallFunc fromlineno="200" tolineno="200" lineno="200" func="Name(len)">
              <Name fromlineno="200" tolineno="200" lineno="200" name="len"/>
              <Name fromlineno="200" tolineno="200" lineno="200" name="eligible"/>
            </CallFunc>
            <Const fromlineno="200" tolineno="200" lineno="200" type="int">0</Const>
          </Compare>
          <Discard fromlineno="201" tolineno="201" lineno="201">
            <CallFunc fromlineno="201" tolineno="201" lineno="201" func="Getattr(error)">
              <Getattr fromlineno="201" tolineno="201" lineno="201" attrname="error" expr="bb.msg">
                <Getattr fromlineno="201" tolineno="201" lineno="201" attrname="msg" expr="bb">
                  <Name fromlineno="201" tolineno="201" lineno="201" name="bb"/>
                </Getattr>
              </Getattr>
              <Getattr fromlineno="201" tolineno="201" lineno="201" attrname="Provider" expr="bb.msg.domain">
                <Getattr fromlineno="201" tolineno="201" lineno="201" attrname="domain" expr="bb.msg">
                  <Getattr fromlineno="201" tolineno="201" lineno="201" attrname="msg" expr="bb">
                    <Name fromlineno="201" tolineno="201" lineno="201" name="bb"/>
                  </Getattr>
                </Getattr>
              </Getattr>
              <BinOp fromlineno="201" tolineno="201" lineno="201" op="%" left="'no eligible providers for %s'" right="item">
                <Const fromlineno="201" tolineno="201" lineno="201" type="str">'no eligible providers for %s'</Const>
                <Name fromlineno="201" tolineno="201" lineno="201" name="item"/>
              </BinOp>
            </CallFunc>
          </Discard>
          <Return fromlineno="202" tolineno="202" lineno="202">
            <Const fromlineno="202" tolineno="202" lineno="202" type="int">0</Const>
          </Return>
        </If>
        <For fromlineno="206" tolineno="214" lineno="206">
          <AssName fromlineno="206" tolineno="206" lineno="206" name="p"/>
          <Name fromlineno="206" tolineno="206" lineno="206" name="providers"/>
          <Assign fromlineno="207" tolineno="207" lineno="207" targets="[&lt;AssName(pn) l.207 [bb.providers] at Ox9acf82c&gt;]" value="dataCache.pkg_fn[p]">
            <AssName fromlineno="207" tolineno="207" lineno="207" name="pn"/>
            <Subscript fromlineno="207" tolineno="207" lineno="207">
              <Getattr fromlineno="207" tolineno="207" lineno="207" attrname="pkg_fn" expr="dataCache">
                <Name fromlineno="207" tolineno="207" lineno="207" name="dataCache"/>
              </Getattr>
              <Index fromlineno="207" tolineno="207" lineno="None">
                <Name fromlineno="207" tolineno="207" lineno="207" name="p"/>
              </Index>
            </Subscript>
          </Assign>
          <If fromlineno="208" tolineno="209" lineno="208">
            <Compare fromlineno="208" tolineno="208" lineno="208" op="('!=', &lt;Name(item) l.208 [bb.providers] at Ox9acf98c&gt;)">
              <Name fromlineno="208" tolineno="208" lineno="208" name="pn"/>
              <Name fromlineno="208" tolineno="208" lineno="208" name="item"/>
            </Compare>
            <Continue fromlineno="209" tolineno="209" lineno="209"/>
          </If>
          <Assign fromlineno="210" tolineno="210" lineno="210" targets="[&lt;Tuple(tuple) l.210 [bb.providers] at Ox9acfa4c&gt;]" value="preferred_versions[pn]">
            <Tuple fromlineno="210" tolineno="210" lineno="210">
              <AssName fromlineno="210" tolineno="210" lineno="210" name="newvers"/>
              <AssName fromlineno="210" tolineno="210" lineno="210" name="fn"/>
            </Tuple>
            <Subscript fromlineno="210" tolineno="210" lineno="210">
              <Name fromlineno="210" tolineno="210" lineno="210" name="preferred_versions"/>
              <Index fromlineno="210" tolineno="210" lineno="None">
                <Name fromlineno="210" tolineno="210" lineno="210" name="pn"/>
              </Index>
            </Subscript>
          </Assign>
          <If fromlineno="211" tolineno="212" lineno="211">
            <UnaryOp fromlineno="211" tolineno="211" lineno="211">
              <Compare fromlineno="211" tolineno="211" lineno="211" op="('in', &lt;Name(eligible) l.211 [bb.providers] at Ox9acfc4c&gt;)">
                <Name fromlineno="211" tolineno="211" lineno="211" name="fn"/>
                <Name fromlineno="211" tolineno="211" lineno="211" name="eligible"/>
              </Compare>
            </UnaryOp>
            <Continue fromlineno="212" tolineno="212" lineno="212"/>
          </If>
          <Discard fromlineno="213" tolineno="213" lineno="213">
            <CallFunc fromlineno="213" tolineno="213" lineno="213" func="Getattr(remove)">
              <Getattr fromlineno="213" tolineno="213" lineno="213" attrname="remove" expr="eligible">
                <Name fromlineno="213" tolineno="213" lineno="213" name="eligible"/>
              </Getattr>
              <Name fromlineno="213" tolineno="213" lineno="213" name="fn"/>
            </CallFunc>
          </Discard>
          <Assign fromlineno="214" tolineno="214" lineno="214" targets="[&lt;AssName(eligible) l.214 [bb.providers] at Ox9acfdcc&gt;]" value="([fn]) + (eligible)">
            <AssName fromlineno="214" tolineno="214" lineno="214" name="eligible"/>
            <BinOp fromlineno="214" tolineno="214" lineno="214" op="+" left="[fn]" right="eligible">
              <List fromlineno="214" tolineno="214" lineno="214">
                <Name fromlineno="214" tolineno="214" lineno="214" name="fn"/>
              </List>
              <Name fromlineno="214" tolineno="214" lineno="214" name="eligible"/>
            </BinOp>
          </Assign>
        </For>
        <Return fromlineno="216" tolineno="216" lineno="216">
          <Name fromlineno="216" tolineno="216" lineno="216" name="eligible"/>
        </Return>
      </Function>
      <Function fromlineno="219" tolineno="245" lineno="219">
        <Arguments fromlineno="219" tolineno="219" lineno="None" format_args="providers, item, cfgData, dataCache">
          <AssName fromlineno="219" tolineno="219" lineno="219" name="providers"/>
          <AssName fromlineno="219" tolineno="219" lineno="219" name="item"/>
          <AssName fromlineno="219" tolineno="219" lineno="219" name="cfgData"/>
          <AssName fromlineno="219" tolineno="219" lineno="219" name="dataCache"/>
        </Arguments>
        <Assign fromlineno="226" tolineno="226" lineno="226" targets="[&lt;AssName(eligible) l.226 [bb.providers] at Ox9ad30ac&gt;]" value="_filterProviders(providers, item, cfgData, dataCache)">
          <AssName fromlineno="226" tolineno="226" lineno="226" name="eligible"/>
          <CallFunc fromlineno="226" tolineno="226" lineno="226" func="Name(_filterProviders)">
            <Name fromlineno="226" tolineno="226" lineno="226" name="_filterProviders"/>
            <Name fromlineno="226" tolineno="226" lineno="226" name="providers"/>
            <Name fromlineno="226" tolineno="226" lineno="226" name="item"/>
            <Name fromlineno="226" tolineno="226" lineno="226" name="cfgData"/>
            <Name fromlineno="226" tolineno="226" lineno="226" name="dataCache"/>
          </CallFunc>
        </Assign>
        <Assign fromlineno="228" tolineno="228" lineno="228" targets="[&lt;AssName(prefervar) l.228 [bb.providers] at Ox9ad320c&gt;]" value="bb.data.getVar(('PREFERRED_PROVIDER_%s') % (item), cfgData, 1)">
          <AssName fromlineno="228" tolineno="228" lineno="228" name="prefervar"/>
          <CallFunc fromlineno="228" tolineno="228" lineno="228" func="Getattr(getVar)">
            <Getattr fromlineno="228" tolineno="228" lineno="228" attrname="getVar" expr="bb.data">
              <Getattr fromlineno="228" tolineno="228" lineno="228" attrname="data" expr="bb">
                <Name fromlineno="228" tolineno="228" lineno="228" name="bb"/>
              </Getattr>
            </Getattr>
            <BinOp fromlineno="228" tolineno="228" lineno="228" op="%" left="'PREFERRED_PROVIDER_%s'" right="item">
              <Const fromlineno="228" tolineno="228" lineno="228" type="str">'PREFERRED_PROVIDER_%s'</Const>
              <Name fromlineno="228" tolineno="228" lineno="228" name="item"/>
            </BinOp>
            <Name fromlineno="228" tolineno="228" lineno="228" name="cfgData"/>
            <Const fromlineno="228" tolineno="228" lineno="228" type="int">1</Const>
          </CallFunc>
        </Assign>
        <If fromlineno="229" tolineno="230" lineno="229">
          <Name fromlineno="229" tolineno="229" lineno="229" name="prefervar"/>
          <Assign fromlineno="230" tolineno="230" lineno="230" targets="[&lt;Subscript() l.230 [bb.providers] at Ox9ad344c&gt;]" value="prefervar">
            <Subscript fromlineno="230" tolineno="230" lineno="230">
              <Getattr fromlineno="230" tolineno="230" lineno="230" attrname="preferred" expr="dataCache">
                <Name fromlineno="230" tolineno="230" lineno="230" name="dataCache"/>
              </Getattr>
              <Index fromlineno="230" tolineno="230" lineno="None">
                <Name fromlineno="230" tolineno="230" lineno="230" name="item"/>
              </Index>
            </Subscript>
            <Name fromlineno="230" tolineno="230" lineno="230" name="prefervar"/>
          </Assign>
        </If>
        <Assign fromlineno="232" tolineno="232" lineno="232" targets="[&lt;AssName(foundUnique) l.232 [bb.providers] at Ox9ad354c&gt;]" value="False">
          <AssName fromlineno="232" tolineno="232" lineno="232" name="foundUnique"/>
          <Const fromlineno="232" tolineno="232" lineno="232" type="bool">False</Const>
        </Assign>
        <If fromlineno="233" tolineno="241" lineno="233">
          <Compare fromlineno="233" tolineno="233" lineno="233" op="('in', &lt;Getattr(preferred) l.233 [bb.providers] at Ox9ad364c&gt;)">
            <Name fromlineno="233" tolineno="233" lineno="233" name="item"/>
            <Getattr fromlineno="233" tolineno="233" lineno="233" attrname="preferred" expr="dataCache">
              <Name fromlineno="233" tolineno="233" lineno="233" name="dataCache"/>
            </Getattr>
          </Compare>
          <For fromlineno="234" tolineno="241" lineno="234">
            <AssName fromlineno="234" tolineno="234" lineno="234" name="p"/>
            <Name fromlineno="234" tolineno="234" lineno="234" name="eligible"/>
            <Assign fromlineno="235" tolineno="235" lineno="235" targets="[&lt;AssName(pn) l.235 [bb.providers] at Ox9ad37cc&gt;]" value="dataCache.pkg_fn[p]">
              <AssName fromlineno="235" tolineno="235" lineno="235" name="pn"/>
              <Subscript fromlineno="235" tolineno="235" lineno="235">
                <Getattr fromlineno="235" tolineno="235" lineno="235" attrname="pkg_fn" expr="dataCache">
                  <Name fromlineno="235" tolineno="235" lineno="235" name="dataCache"/>
                </Getattr>
                <Index fromlineno="235" tolineno="235" lineno="None">
                  <Name fromlineno="235" tolineno="235" lineno="235" name="p"/>
                </Index>
              </Subscript>
            </Assign>
            <If fromlineno="236" tolineno="241" lineno="236">
              <Compare fromlineno="236" tolineno="236" lineno="236" op="('==', &lt;Name(pn) l.236 [bb.providers] at Ox9ad39ec&gt;)">
                <Subscript fromlineno="236" tolineno="236" lineno="236">
                  <Getattr fromlineno="236" tolineno="236" lineno="236" attrname="preferred" expr="dataCache">
                    <Name fromlineno="236" tolineno="236" lineno="236" name="dataCache"/>
                  </Getattr>
                  <Index fromlineno="236" tolineno="236" lineno="None">
                    <Name fromlineno="236" tolineno="236" lineno="236" name="item"/>
                  </Index>
                </Subscript>
                <Name fromlineno="236" tolineno="236" lineno="236" name="pn"/>
              </Compare>
              <Discard fromlineno="237" tolineno="237" lineno="237">
                <CallFunc fromlineno="237" tolineno="237" lineno="237" func="Getattr(note)">
                  <Getattr fromlineno="237" tolineno="237" lineno="237" attrname="note" expr="bb.msg">
                    <Getattr fromlineno="237" tolineno="237" lineno="237" attrname="msg" expr="bb">
                      <Name fromlineno="237" tolineno="237" lineno="237" name="bb"/>
                    </Getattr>
                  </Getattr>
                  <Const fromlineno="237" tolineno="237" lineno="237" type="int">2</Const>
                  <Getattr fromlineno="237" tolineno="237" lineno="237" attrname="Provider" expr="bb.msg.domain">
                    <Getattr fromlineno="237" tolineno="237" lineno="237" attrname="domain" expr="bb.msg">
                      <Getattr fromlineno="237" tolineno="237" lineno="237" attrname="msg" expr="bb">
                        <Name fromlineno="237" tolineno="237" lineno="237" name="bb"/>
                      </Getattr>
                    </Getattr>
                  </Getattr>
                  <BinOp fromlineno="237" tolineno="237" lineno="237" op="%" left="'selecting %s to satisfy %s due to PREFERRED_PROVIDERS'" right="(pn, item)">
                    <Const fromlineno="237" tolineno="237" lineno="237" type="str">'selecting %s to satisfy %s due to PREFERRED_PROVIDERS'</Const>
                    <Tuple fromlineno="237" tolineno="237" lineno="237">
                      <Name fromlineno="237" tolineno="237" lineno="237" name="pn"/>
                      <Name fromlineno="237" tolineno="237" lineno="237" name="item"/>
                    </Tuple>
                  </BinOp>
                </CallFunc>
              </Discard>
              <Discard fromlineno="238" tolineno="238" lineno="238">
                <CallFunc fromlineno="238" tolineno="238" lineno="238" func="Getattr(remove)">
                  <Getattr fromlineno="238" tolineno="238" lineno="238" attrname="remove" expr="eligible">
                    <Name fromlineno="238" tolineno="238" lineno="238" name="eligible"/>
                  </Getattr>
                  <Name fromlineno="238" tolineno="238" lineno="238" name="p"/>
                </CallFunc>
              </Discard>
              <Assign fromlineno="239" tolineno="239" lineno="239" targets="[&lt;AssName(eligible) l.239 [bb.providers] at Ox9ad3d6c&gt;]" value="([p]) + (eligible)">
                <AssName fromlineno="239" tolineno="239" lineno="239" name="eligible"/>
                <BinOp fromlineno="239" tolineno="239" lineno="239" op="+" left="[p]" right="eligible">
                  <List fromlineno="239" tolineno="239" lineno="239">
                    <Name fromlineno="239" tolineno="239" lineno="239" name="p"/>
                  </List>
                  <Name fromlineno="239" tolineno="239" lineno="239" name="eligible"/>
                </BinOp>
              </Assign>
              <Assign fromlineno="240" tolineno="240" lineno="240" targets="[&lt;AssName(foundUnique) l.240 [bb.providers] at Ox9ad3e6c&gt;]" value="True">
                <AssName fromlineno="240" tolineno="240" lineno="240" name="foundUnique"/>
                <Const fromlineno="240" tolineno="240" lineno="240" type="bool">True</Const>
              </Assign>
              <Break fromlineno="241" tolineno="241" lineno="241"/>
            </If>
          </For>
        </If>
        <Discard fromlineno="243" tolineno="243" lineno="243">
          <CallFunc fromlineno="243" tolineno="243" lineno="243" func="Getattr(debug)">
            <Getattr fromlineno="243" tolineno="243" lineno="243" attrname="debug" expr="bb.msg">
              <Getattr fromlineno="243" tolineno="243" lineno="243" attrname="msg" expr="bb">
                <Name fromlineno="243" tolineno="243" lineno="243" name="bb"/>
              </Getattr>
            </Getattr>
            <Const fromlineno="243" tolineno="243" lineno="243" type="int">1</Const>
            <Getattr fromlineno="243" tolineno="243" lineno="243" attrname="Provider" expr="bb.msg.domain">
              <Getattr fromlineno="243" tolineno="243" lineno="243" attrname="domain" expr="bb.msg">
                <Getattr fromlineno="243" tolineno="243" lineno="243" attrname="msg" expr="bb">
                  <Name fromlineno="243" tolineno="243" lineno="243" name="bb"/>
                </Getattr>
              </Getattr>
            </Getattr>
            <BinOp fromlineno="243" tolineno="243" lineno="243" op="%" left="'sorted providers for %s are: %s'" right="(item, eligible)">
              <Const fromlineno="243" tolineno="243" lineno="243" type="str">'sorted providers for %s are: %s'</Const>
              <Tuple fromlineno="243" tolineno="243" lineno="243">
                <Name fromlineno="243" tolineno="243" lineno="243" name="item"/>
                <Name fromlineno="243" tolineno="243" lineno="243" name="eligible"/>
              </Tuple>
            </BinOp>
          </CallFunc>
        </Discard>
        <Return fromlineno="245" tolineno="245" lineno="245">
          <Tuple fromlineno="245" tolineno="245" lineno="245">
            <Name fromlineno="245" tolineno="245" lineno="245" name="eligible"/>
            <Name fromlineno="245" tolineno="245" lineno="245" name="foundUnique"/>
          </Tuple>
        </Return>
      </Function>
      <Function fromlineno="247" tolineno="281" lineno="247">
        <Arguments fromlineno="247" tolineno="247" lineno="None" format_args="providers, item, cfgData, dataCache">
          <AssName fromlineno="247" tolineno="247" lineno="247" name="providers"/>
          <AssName fromlineno="247" tolineno="247" lineno="247" name="item"/>
          <AssName fromlineno="247" tolineno="247" lineno="247" name="cfgData"/>
          <AssName fromlineno="247" tolineno="247" lineno="247" name="dataCache"/>
        </Arguments>
        <Assign fromlineno="254" tolineno="254" lineno="254" targets="[&lt;AssName(eligible) l.254 [bb.providers] at Ox9ad834c&gt;]" value="_filterProviders(providers, item, cfgData, dataCache)">
          <AssName fromlineno="254" tolineno="254" lineno="254" name="eligible"/>
          <CallFunc fromlineno="254" tolineno="254" lineno="254" func="Name(_filterProviders)">
            <Name fromlineno="254" tolineno="254" lineno="254" name="_filterProviders"/>
            <Name fromlineno="254" tolineno="254" lineno="254" name="providers"/>
            <Name fromlineno="254" tolineno="254" lineno="254" name="item"/>
            <Name fromlineno="254" tolineno="254" lineno="254" name="cfgData"/>
            <Name fromlineno="254" tolineno="254" lineno="254" name="dataCache"/>
          </CallFunc>
        </Assign>
        <Assign fromlineno="257" tolineno="257" lineno="257" targets="[&lt;AssName(preferred) l.257 [bb.providers] at Ox9ad84ac&gt;]" value="[]">
          <AssName fromlineno="257" tolineno="257" lineno="257" name="preferred"/>
          <List fromlineno="257" tolineno="257" lineno="257"/>
        </Assign>
        <Assign fromlineno="258" tolineno="258" lineno="258" targets="[&lt;AssName(preferred_vars) l.258 [bb.providers] at Ox9ad856c&gt;]" value="[]">
          <AssName fromlineno="258" tolineno="258" lineno="258" name="preferred_vars"/>
          <List fromlineno="258" tolineno="258" lineno="258"/>
        </Assign>
        <For fromlineno="259" tolineno="272" lineno="259">
          <AssName fromlineno="259" tolineno="259" lineno="259" name="p"/>
          <Name fromlineno="259" tolineno="259" lineno="259" name="eligible"/>
          <Assign fromlineno="260" tolineno="260" lineno="260" targets="[&lt;AssName(pn) l.260 [bb.providers] at Ox9ad86ec&gt;]" value="dataCache.pkg_fn[p]">
            <AssName fromlineno="260" tolineno="260" lineno="260" name="pn"/>
            <Subscript fromlineno="260" tolineno="260" lineno="260">
              <Getattr fromlineno="260" tolineno="260" lineno="260" attrname="pkg_fn" expr="dataCache">
                <Name fromlineno="260" tolineno="260" lineno="260" name="dataCache"/>
              </Getattr>
              <Index fromlineno="260" tolineno="260" lineno="None">
                <Name fromlineno="260" tolineno="260" lineno="260" name="p"/>
              </Index>
            </Subscript>
          </Assign>
          <Assign fromlineno="261" tolineno="261" lineno="261" targets="[&lt;AssName(provides) l.261 [bb.providers] at Ox9ad880c&gt;]" value="dataCache.pn_provides[pn]">
            <AssName fromlineno="261" tolineno="261" lineno="261" name="provides"/>
            <Subscript fromlineno="261" tolineno="261" lineno="261">
              <Getattr fromlineno="261" tolineno="261" lineno="261" attrname="pn_provides" expr="dataCache">
                <Name fromlineno="261" tolineno="261" lineno="261" name="dataCache"/>
              </Getattr>
              <Index fromlineno="261" tolineno="261" lineno="None">
                <Name fromlineno="261" tolineno="261" lineno="261" name="pn"/>
              </Index>
            </Subscript>
          </Assign>
          <For fromlineno="262" tolineno="272" lineno="262">
            <AssName fromlineno="262" tolineno="262" lineno="262" name="provide"/>
            <Name fromlineno="262" tolineno="262" lineno="262" name="provides"/>
            <Discard fromlineno="263" tolineno="263" lineno="263">
              <CallFunc fromlineno="263" tolineno="263" lineno="263" func="Getattr(note)">
                <Getattr fromlineno="263" tolineno="263" lineno="263" attrname="note" expr="bb.msg">
                  <Getattr fromlineno="263" tolineno="263" lineno="263" attrname="msg" expr="bb">
                    <Name fromlineno="263" tolineno="263" lineno="263" name="bb"/>
                  </Getattr>
                </Getattr>
                <Const fromlineno="263" tolineno="263" lineno="263" type="int">2</Const>
                <Getattr fromlineno="263" tolineno="263" lineno="263" attrname="Provider" expr="bb.msg.domain">
                  <Getattr fromlineno="263" tolineno="263" lineno="263" attrname="domain" expr="bb.msg">
                    <Getattr fromlineno="263" tolineno="263" lineno="263" attrname="msg" expr="bb">
                      <Name fromlineno="263" tolineno="263" lineno="263" name="bb"/>
                    </Getattr>
                  </Getattr>
                </Getattr>
                <BinOp fromlineno="263" tolineno="263" lineno="263" op="%" left="'checking PREFERRED_PROVIDER_%s'" right="provide">
                  <Const fromlineno="263" tolineno="263" lineno="263" type="str">'checking PREFERRED_PROVIDER_%s'</Const>
                  <Name fromlineno="263" tolineno="263" lineno="263" name="provide"/>
                </BinOp>
              </CallFunc>
            </Discard>
            <Assign fromlineno="264" tolineno="264" lineno="264" targets="[&lt;AssName(prefervar) l.264 [bb.providers] at Ox9ad8bac&gt;]" value="bb.data.getVar(('PREFERRED_PROVIDER_%s') % (provide), cfgData, 1)">
              <AssName fromlineno="264" tolineno="264" lineno="264" name="prefervar"/>
              <CallFunc fromlineno="264" tolineno="264" lineno="264" func="Getattr(getVar)">
                <Getattr fromlineno="264" tolineno="264" lineno="264" attrname="getVar" expr="bb.data">
                  <Getattr fromlineno="264" tolineno="264" lineno="264" attrname="data" expr="bb">
                    <Name fromlineno="264" tolineno="264" lineno="264" name="bb"/>
                  </Getattr>
                </Getattr>
                <BinOp fromlineno="264" tolineno="264" lineno="264" op="%" left="'PREFERRED_PROVIDER_%s'" right="provide">
                  <Const fromlineno="264" tolineno="264" lineno="264" type="str">'PREFERRED_PROVIDER_%s'</Const>
                  <Name fromlineno="264" tolineno="264" lineno="264" name="provide"/>
                </BinOp>
                <Name fromlineno="264" tolineno="264" lineno="264" name="cfgData"/>
                <Const fromlineno="264" tolineno="264" lineno="264" type="int">1</Const>
              </CallFunc>
            </Assign>
            <If fromlineno="265" tolineno="272" lineno="265">
              <Compare fromlineno="265" tolineno="265" lineno="265" op="('==', &lt;Name(pn) l.265 [bb.providers] at Ox9ad8dcc&gt;)">
                <Name fromlineno="265" tolineno="265" lineno="265" name="prefervar"/>
                <Name fromlineno="265" tolineno="265" lineno="265" name="pn"/>
              </Compare>
              <Assign fromlineno="266" tolineno="266" lineno="266" targets="[&lt;AssName(var) l.266 [bb.providers] at Ox9ad8e6c&gt;]" value="('PREFERRED_PROVIDER_%s = %s') % ((provide, prefervar))">
                <AssName fromlineno="266" tolineno="266" lineno="266" name="var"/>
                <BinOp fromlineno="266" tolineno="266" lineno="266" op="%" left="'PREFERRED_PROVIDER_%s = %s'" right="(provide, prefervar)">
                  <Const fromlineno="266" tolineno="266" lineno="266" type="str">'PREFERRED_PROVIDER_%s = %s'</Const>
                  <Tuple fromlineno="266" tolineno="266" lineno="266">
                    <Name fromlineno="266" tolineno="266" lineno="266" name="provide"/>
                    <Name fromlineno="266" tolineno="266" lineno="266" name="prefervar"/>
                  </Tuple>
                </BinOp>
              </Assign>
              <Discard fromlineno="267" tolineno="267" lineno="267">
                <CallFunc fromlineno="267" tolineno="267" lineno="267" func="Getattr(note)">
                  <Getattr fromlineno="267" tolineno="267" lineno="267" attrname="note" expr="bb.msg">
                    <Getattr fromlineno="267" tolineno="267" lineno="267" attrname="msg" expr="bb">
                      <Name fromlineno="267" tolineno="267" lineno="267" name="bb"/>
                    </Getattr>
                  </Getattr>
                  <Const fromlineno="267" tolineno="267" lineno="267" type="int">2</Const>
                  <Getattr fromlineno="267" tolineno="267" lineno="267" attrname="Provider" expr="bb.msg.domain">
                    <Getattr fromlineno="267" tolineno="267" lineno="267" attrname="domain" expr="bb.msg">
                      <Getattr fromlineno="267" tolineno="267" lineno="267" attrname="msg" expr="bb">
                        <Name fromlineno="267" tolineno="267" lineno="267" name="bb"/>
                      </Getattr>
                    </Getattr>
                  </Getattr>
                  <BinOp fromlineno="267" tolineno="267" lineno="267" op="%" left="'selecting %s to satisfy runtime %s due to %s'" right="(pn, item, var)">
                    <Const fromlineno="267" tolineno="267" lineno="267" type="str">'selecting %s to satisfy runtime %s due to %s'</Const>
                    <Tuple fromlineno="267" tolineno="267" lineno="267">
                      <Name fromlineno="267" tolineno="267" lineno="267" name="pn"/>
                      <Name fromlineno="267" tolineno="267" lineno="267" name="item"/>
                      <Name fromlineno="267" tolineno="267" lineno="267" name="var"/>
                    </Tuple>
                  </BinOp>
                </CallFunc>
              </Discard>
              <Discard fromlineno="268" tolineno="268" lineno="268">
                <CallFunc fromlineno="268" tolineno="268" lineno="268" func="Getattr(append)">
                  <Getattr fromlineno="268" tolineno="268" lineno="268" attrname="append" expr="preferred_vars">
                    <Name fromlineno="268" tolineno="268" lineno="268" name="preferred_vars"/>
                  </Getattr>
                  <Name fromlineno="268" tolineno="268" lineno="268" name="var"/>
                </CallFunc>
              </Discard>
              <Discard fromlineno="269" tolineno="269" lineno="269">
                <CallFunc fromlineno="269" tolineno="269" lineno="269" func="Getattr(remove)">
                  <Getattr fromlineno="269" tolineno="269" lineno="269" attrname="remove" expr="eligible">
                    <Name fromlineno="269" tolineno="269" lineno="269" name="eligible"/>
                  </Getattr>
                  <Name fromlineno="269" tolineno="269" lineno="269" name="p"/>
                </CallFunc>
              </Discard>
              <Assign fromlineno="270" tolineno="270" lineno="270" targets="[&lt;AssName(eligible) l.270 [bb.providers] at Ox9adc38c&gt;]" value="([p]) + (eligible)">
                <AssName fromlineno="270" tolineno="270" lineno="270" name="eligible"/>
                <BinOp fromlineno="270" tolineno="270" lineno="270" op="+" left="[p]" right="eligible">
                  <List fromlineno="270" tolineno="270" lineno="270">
                    <Name fromlineno="270" tolineno="270" lineno="270" name="p"/>
                  </List>
                  <Name fromlineno="270" tolineno="270" lineno="270" name="eligible"/>
                </BinOp>
              </Assign>
              <Discard fromlineno="271" tolineno="271" lineno="271">
                <CallFunc fromlineno="271" tolineno="271" lineno="271" func="Getattr(append)">
                  <Getattr fromlineno="271" tolineno="271" lineno="271" attrname="append" expr="preferred">
                    <Name fromlineno="271" tolineno="271" lineno="271" name="preferred"/>
                  </Getattr>
                  <Name fromlineno="271" tolineno="271" lineno="271" name="p"/>
                </CallFunc>
              </Discard>
              <Break fromlineno="272" tolineno="272" lineno="272"/>
            </If>
          </For>
        </For>
        <Assign fromlineno="274" tolineno="274" lineno="274" targets="[&lt;AssName(numberPreferred) l.274 [bb.providers] at Ox9adc56c&gt;]" value="len(preferred)">
          <AssName fromlineno="274" tolineno="274" lineno="274" name="numberPreferred"/>
          <CallFunc fromlineno="274" tolineno="274" lineno="274" func="Name(len)">
            <Name fromlineno="274" tolineno="274" lineno="274" name="len"/>
            <Name fromlineno="274" tolineno="274" lineno="274" name="preferred"/>
          </CallFunc>
        </Assign>
        <If fromlineno="276" tolineno="277" lineno="276">
          <Compare fromlineno="276" tolineno="276" lineno="276" op="('&gt;', &lt;Const(int) l.276 [bb.providers] at Ox9adc6cc&gt;)">
            <Name fromlineno="276" tolineno="276" lineno="276" name="numberPreferred"/>
            <Const fromlineno="276" tolineno="276" lineno="276" type="int">1</Const>
          </Compare>
          <Discard fromlineno="277" tolineno="277" lineno="277">
            <CallFunc fromlineno="277" tolineno="277" lineno="277" func="Getattr(error)">
              <Getattr fromlineno="277" tolineno="277" lineno="277" attrname="error" expr="bb.msg">
                <Getattr fromlineno="277" tolineno="277" lineno="277" attrname="msg" expr="bb">
                  <Name fromlineno="277" tolineno="277" lineno="277" name="bb"/>
                </Getattr>
              </Getattr>
              <Getattr fromlineno="277" tolineno="277" lineno="277" attrname="Provider" expr="bb.msg.domain">
                <Getattr fromlineno="277" tolineno="277" lineno="277" attrname="domain" expr="bb.msg">
                  <Getattr fromlineno="277" tolineno="277" lineno="277" attrname="msg" expr="bb">
                    <Name fromlineno="277" tolineno="277" lineno="277" name="bb"/>
                  </Getattr>
                </Getattr>
              </Getattr>
              <BinOp fromlineno="277" tolineno="277" lineno="277" op="%" left="'Conflicting PREFERRED_PROVIDER entries were found which resulted in an attempt to select multiple providers (%s) for runtime dependecy %s\nThe entries resulting in this conflict were: %s'" right="(preferred, item, preferred_vars)">
                <Const fromlineno="277" tolineno="277" lineno="277" type="str">'Conflicting PREFERRED_PROVIDER entries were found which resulted in an attempt to select multiple providers (%s) for runtime dependecy %s\nThe entries resulting in this conflict were: %s'</Const>
                <Tuple fromlineno="277" tolineno="277" lineno="277">
                  <Name fromlineno="277" tolineno="277" lineno="277" name="preferred"/>
                  <Name fromlineno="277" tolineno="277" lineno="277" name="item"/>
                  <Name fromlineno="277" tolineno="277" lineno="277" name="preferred_vars"/>
                </Tuple>
              </BinOp>
            </CallFunc>
          </Discard>
        </If>
        <Discard fromlineno="279" tolineno="279" lineno="279">
          <CallFunc fromlineno="279" tolineno="279" lineno="279" func="Getattr(debug)">
            <Getattr fromlineno="279" tolineno="279" lineno="279" attrname="debug" expr="bb.msg">
              <Getattr fromlineno="279" tolineno="279" lineno="279" attrname="msg" expr="bb">
                <Name fromlineno="279" tolineno="279" lineno="279" name="bb"/>
              </Getattr>
            </Getattr>
            <Const fromlineno="279" tolineno="279" lineno="279" type="int">1</Const>
            <Getattr fromlineno="279" tolineno="279" lineno="279" attrname="Provider" expr="bb.msg.domain">
              <Getattr fromlineno="279" tolineno="279" lineno="279" attrname="domain" expr="bb.msg">
                <Getattr fromlineno="279" tolineno="279" lineno="279" attrname="msg" expr="bb">
                  <Name fromlineno="279" tolineno="279" lineno="279" name="bb"/>
                </Getattr>
              </Getattr>
            </Getattr>
            <BinOp fromlineno="279" tolineno="279" lineno="279" op="%" left="'sorted providers for %s are: %s'" right="(item, eligible)">
              <Const fromlineno="279" tolineno="279" lineno="279" type="str">'sorted providers for %s are: %s'</Const>
              <Tuple fromlineno="279" tolineno="279" lineno="279">
                <Name fromlineno="279" tolineno="279" lineno="279" name="item"/>
                <Name fromlineno="279" tolineno="279" lineno="279" name="eligible"/>
              </Tuple>
            </BinOp>
          </CallFunc>
        </Discard>
        <Return fromlineno="281" tolineno="281" lineno="281">
          <Tuple fromlineno="281" tolineno="281" lineno="281">
            <Name fromlineno="281" tolineno="281" lineno="281" name="eligible"/>
            <Name fromlineno="281" tolineno="281" lineno="281" name="numberPreferred"/>
          </Tuple>
        </Return>
      </Function>
      <Function fromlineno="283" tolineno="308" lineno="283">
        <Arguments fromlineno="283" tolineno="283" lineno="None" format_args="dataCache, rdepend">
          <AssName fromlineno="283" tolineno="283" lineno="283" name="dataCache"/>
          <AssName fromlineno="283" tolineno="283" lineno="283" name="rdepend"/>
        </Arguments>
        <Assign fromlineno="287" tolineno="287" lineno="287" targets="[&lt;AssName(rproviders) l.287 [bb.providers] at Ox9adcd4c&gt;]" value="[]">
          <AssName fromlineno="287" tolineno="287" lineno="287" name="rproviders"/>
          <List fromlineno="287" tolineno="287" lineno="287"/>
        </Assign>
        <If fromlineno="289" tolineno="290" lineno="289">
          <Compare fromlineno="289" tolineno="289" lineno="289" op="('in', &lt;Getattr(rproviders) l.289 [bb.providers] at Ox9adce6c&gt;)">
            <Name fromlineno="289" tolineno="289" lineno="289" name="rdepend"/>
            <Getattr fromlineno="289" tolineno="289" lineno="289" attrname="rproviders" expr="dataCache">
              <Name fromlineno="289" tolineno="289" lineno="289" name="dataCache"/>
            </Getattr>
          </Compare>
          <AugAssign fromlineno="290" tolineno="290" lineno="290" target="rproviders" value="dataCache.rproviders[rdepend]">
            <AssName fromlineno="290" tolineno="290" lineno="290" name="rproviders"/>
            <Subscript fromlineno="290" tolineno="290" lineno="290">
              <Getattr fromlineno="290" tolineno="290" lineno="290" attrname="rproviders" expr="dataCache">
                <Name fromlineno="290" tolineno="290" lineno="290" name="dataCache"/>
              </Getattr>
              <Index fromlineno="290" tolineno="290" lineno="None">
                <Name fromlineno="290" tolineno="290" lineno="290" name="rdepend"/>
              </Index>
            </Subscript>
          </AugAssign>
        </If>
        <If fromlineno="292" tolineno="293" lineno="292">
          <Compare fromlineno="292" tolineno="292" lineno="292" op="('in', &lt;Getattr(packages) l.292 [bb.providers] at Ox9ae00ac&gt;)">
            <Name fromlineno="292" tolineno="292" lineno="292" name="rdepend"/>
            <Getattr fromlineno="292" tolineno="292" lineno="292" attrname="packages" expr="dataCache">
              <Name fromlineno="292" tolineno="292" lineno="292" name="dataCache"/>
            </Getattr>
          </Compare>
          <AugAssign fromlineno="293" tolineno="293" lineno="293" target="rproviders" value="dataCache.packages[rdepend]">
            <AssName fromlineno="293" tolineno="293" lineno="293" name="rproviders"/>
            <Subscript fromlineno="293" tolineno="293" lineno="293">
              <Getattr fromlineno="293" tolineno="293" lineno="293" attrname="packages" expr="dataCache">
                <Name fromlineno="293" tolineno="293" lineno="293" name="dataCache"/>
              </Getattr>
              <Index fromlineno="293" tolineno="293" lineno="None">
                <Name fromlineno="293" tolineno="293" lineno="293" name="rdepend"/>
              </Index>
            </Subscript>
          </AugAssign>
        </If>
        <If fromlineno="295" tolineno="296" lineno="295">
          <Name fromlineno="295" tolineno="295" lineno="295" name="rproviders"/>
          <Return fromlineno="296" tolineno="296" lineno="296">
            <Name fromlineno="296" tolineno="296" lineno="296" name="rproviders"/>
          </Return>
        </If>
        <For fromlineno="299" tolineno="306" lineno="299">
          <AssName fromlineno="299" tolineno="299" lineno="299" name="pattern"/>
          <Getattr fromlineno="299" tolineno="299" lineno="299" attrname="packages_dynamic" expr="dataCache">
            <Name fromlineno="299" tolineno="299" lineno="299" name="dataCache"/>
          </Getattr>
          <TryExcept fromlineno="300" tolineno="304" lineno="300">
            <Assign fromlineno="301" tolineno="301" lineno="301" targets="[&lt;AssName(regexp) l.301 [bb.providers] at Ox9ae046c&gt;]" value="re.compile(pattern.replace('+', '\\+'))">
              <AssName fromlineno="301" tolineno="301" lineno="301" name="regexp"/>
              <CallFunc fromlineno="301" tolineno="301" lineno="301" func="Getattr(compile)">
                <Getattr fromlineno="301" tolineno="301" lineno="301" attrname="compile" expr="re">
                  <Name fromlineno="301" tolineno="301" lineno="301" name="re"/>
                </Getattr>
                <CallFunc fromlineno="301" tolineno="301" lineno="301" func="Getattr(replace)">
                  <Getattr fromlineno="301" tolineno="301" lineno="301" attrname="replace" expr="pattern">
                    <Name fromlineno="301" tolineno="301" lineno="301" name="pattern"/>
                  </Getattr>
                  <Const fromlineno="301" tolineno="301" lineno="301" type="str">'+'</Const>
                  <Const fromlineno="301" tolineno="301" lineno="301" type="str">'\\+'</Const>
                </CallFunc>
              </CallFunc>
            </Assign>
            <ExceptHandler fromlineno="302" tolineno="304" lineno="302">
              <Discard fromlineno="303" tolineno="303" lineno="303">
                <CallFunc fromlineno="303" tolineno="303" lineno="303" func="Getattr(error)">
                  <Getattr fromlineno="303" tolineno="303" lineno="303" attrname="error" expr="bb.msg">
                    <Getattr fromlineno="303" tolineno="303" lineno="303" attrname="msg" expr="bb">
                      <Name fromlineno="303" tolineno="303" lineno="303" name="bb"/>
                    </Getattr>
                  </Getattr>
                  <Getattr fromlineno="303" tolineno="303" lineno="303" attrname="Provider" expr="bb.msg.domain">
                    <Getattr fromlineno="303" tolineno="303" lineno="303" attrname="domain" expr="bb.msg">
                      <Getattr fromlineno="303" tolineno="303" lineno="303" attrname="msg" expr="bb">
                        <Name fromlineno="303" tolineno="303" lineno="303" name="bb"/>
                      </Getattr>
                    </Getattr>
                  </Getattr>
                  <BinOp fromlineno="303" tolineno="303" lineno="303" op="%" left="'Error parsing re expression: %s'" right="pattern">
                    <Const fromlineno="303" tolineno="303" lineno="303" type="str">'Error parsing re expression: %s'</Const>
                    <Name fromlineno="303" tolineno="303" lineno="303" name="pattern"/>
                  </BinOp>
                </CallFunc>
              </Discard>
              <Raise fromlineno="304" tolineno="304" lineno="304"/>
            </ExceptHandler>
          </TryExcept>
          <If fromlineno="305" tolineno="306" lineno="305">
            <CallFunc fromlineno="305" tolineno="305" lineno="305" func="Getattr(match)">
              <Getattr fromlineno="305" tolineno="305" lineno="305" attrname="match" expr="regexp">
                <Name fromlineno="305" tolineno="305" lineno="305" name="regexp"/>
              </Getattr>
              <Name fromlineno="305" tolineno="305" lineno="305" name="rdepend"/>
            </CallFunc>
            <AugAssign fromlineno="306" tolineno="306" lineno="306" target="rproviders" value="dataCache.packages_dynamic[pattern]">
              <AssName fromlineno="306" tolineno="306" lineno="306" name="rproviders"/>
              <Subscript fromlineno="306" tolineno="306" lineno="306">
                <Getattr fromlineno="306" tolineno="306" lineno="306" attrname="packages_dynamic" expr="dataCache">
                  <Name fromlineno="306" tolineno="306" lineno="306" name="dataCache"/>
                </Getattr>
                <Index fromlineno="306" tolineno="306" lineno="None">
                  <Name fromlineno="306" tolineno="306" lineno="306" name="pattern"/>
                </Index>
              </Subscript>
            </AugAssign>
          </If>
        </For>
        <Return fromlineno="308" tolineno="308" lineno="308">
          <Name fromlineno="308" tolineno="308" lineno="308" name="rproviders"/>
        </Return>
      </Function>
    </Module>
    <Module fromlineno="0" tolineno="593" lineno="0" name="bb.taskdata">
      <From fromlineno="25" tolineno="25" lineno="25" modname="bb">
        <ImportName name="data"/>
        <ImportName name="event"/>
        <ImportName name="mkdirhier"/>
        <ImportName name="utils"/>
      </From>
      <Import fromlineno="26" tolineno="26" lineno="26">
        <ImportName name="bb"/>
        <ImportName name="os"/>
      </Import>
      <Class fromlineno="28" tolineno="593" lineno="28">
        <Function fromlineno="32" tolineno="59" lineno="32">
          <Arguments fromlineno="32" tolineno="32" lineno="None" format_args="self, abort=True, tryaltconfigs=False">
            <AssName fromlineno="32" tolineno="32" lineno="32" name="self"/>
            <AssName fromlineno="32" tolineno="32" lineno="32" name="abort"/>
            <AssName fromlineno="32" tolineno="32" lineno="32" name="tryaltconfigs"/>
            <Const fromlineno="32" tolineno="32" lineno="32" type="bool">True</Const>
            <Const fromlineno="32" tolineno="32" lineno="32" type="bool">False</Const>
          </Arguments>
          <Assign fromlineno="33" tolineno="33" lineno="33" targets="[&lt;AssAttr(build_names_index) l.33 [bb.taskdata] at Ox9b96a0c&gt;]" value="[]">
            <AssAttr fromlineno="33" tolineno="33" lineno="33" attrname="build_names_index" expr="self">
              <Name fromlineno="33" tolineno="33" lineno="33" name="self"/>
            </AssAttr>
            <List fromlineno="33" tolineno="33" lineno="33"/>
          </Assign>
          <Assign fromlineno="34" tolineno="34" lineno="34" targets="[&lt;AssAttr(run_names_index) l.34 [bb.taskdata] at Ox9b96acc&gt;]" value="[]">
            <AssAttr fromlineno="34" tolineno="34" lineno="34" attrname="run_names_index" expr="self">
              <Name fromlineno="34" tolineno="34" lineno="34" name="self"/>
            </AssAttr>
            <List fromlineno="34" tolineno="34" lineno="34"/>
          </Assign>
          <Assign fromlineno="35" tolineno="35" lineno="35" targets="[&lt;AssAttr(fn_index) l.35 [bb.taskdata] at Ox9b96b8c&gt;]" value="[]">
            <AssAttr fromlineno="35" tolineno="35" lineno="35" attrname="fn_index" expr="self">
              <Name fromlineno="35" tolineno="35" lineno="35" name="self"/>
            </AssAttr>
            <List fromlineno="35" tolineno="35" lineno="35"/>
          </Assign>
          <Assign fromlineno="37" tolineno="37" lineno="37" targets="[&lt;AssAttr(build_targets) l.37 [bb.taskdata] at Ox9b96c4c&gt;]" value="{}">
            <AssAttr fromlineno="37" tolineno="37" lineno="37" attrname="build_targets" expr="self">
              <Name fromlineno="37" tolineno="37" lineno="37" name="self"/>
            </AssAttr>
            <Dict fromlineno="37" tolineno="37" lineno="37"/>
          </Assign>
          <Assign fromlineno="38" tolineno="38" lineno="38" targets="[&lt;AssAttr(run_targets) l.38 [bb.taskdata] at Ox9b96d0c&gt;]" value="{}">
            <AssAttr fromlineno="38" tolineno="38" lineno="38" attrname="run_targets" expr="self">
              <Name fromlineno="38" tolineno="38" lineno="38" name="self"/>
            </AssAttr>
            <Dict fromlineno="38" tolineno="38" lineno="38"/>
          </Assign>
          <Assign fromlineno="40" tolineno="40" lineno="40" targets="[&lt;AssAttr(external_targets) l.40 [bb.taskdata] at Ox9b96dcc&gt;]" value="[]">
            <AssAttr fromlineno="40" tolineno="40" lineno="40" attrname="external_targets" expr="self">
              <Name fromlineno="40" tolineno="40" lineno="40" name="self"/>
            </AssAttr>
            <List fromlineno="40" tolineno="40" lineno="40"/>
          </Assign>
          <Assign fromlineno="42" tolineno="42" lineno="42" targets="[&lt;AssAttr(tasks_fnid) l.42 [bb.taskdata] at Ox9b96e8c&gt;]" value="[]">
            <AssAttr fromlineno="42" tolineno="42" lineno="42" attrname="tasks_fnid" expr="self">
              <Name fromlineno="42" tolineno="42" lineno="42" name="self"/>
            </AssAttr>
            <List fromlineno="42" tolineno="42" lineno="42"/>
          </Assign>
          <Assign fromlineno="43" tolineno="43" lineno="43" targets="[&lt;AssAttr(tasks_name) l.43 [bb.taskdata] at Ox9b96f4c&gt;]" value="[]">
            <AssAttr fromlineno="43" tolineno="43" lineno="43" attrname="tasks_name" expr="self">
              <Name fromlineno="43" tolineno="43" lineno="43" name="self"/>
            </AssAttr>
            <List fromlineno="43" tolineno="43" lineno="43"/>
          </Assign>
          <Assign fromlineno="44" tolineno="44" lineno="44" targets="[&lt;AssAttr(tasks_tdepends) l.44 [bb.taskdata] at Ox9b9b02c&gt;]" value="[]">
            <AssAttr fromlineno="44" tolineno="44" lineno="44" attrname="tasks_tdepends" expr="self">
              <Name fromlineno="44" tolineno="44" lineno="44" name="self"/>
            </AssAttr>
            <List fromlineno="44" tolineno="44" lineno="44"/>
          </Assign>
          <Assign fromlineno="45" tolineno="45" lineno="45" targets="[&lt;AssAttr(tasks_idepends) l.45 [bb.taskdata] at Ox9b9b0ec&gt;]" value="[]">
            <AssAttr fromlineno="45" tolineno="45" lineno="45" attrname="tasks_idepends" expr="self">
              <Name fromlineno="45" tolineno="45" lineno="45" name="self"/>
            </AssAttr>
            <List fromlineno="45" tolineno="45" lineno="45"/>
          </Assign>
          <Assign fromlineno="47" tolineno="47" lineno="47" targets="[&lt;AssAttr(tasks_lookup) l.47 [bb.taskdata] at Ox9b9b1ac&gt;]" value="{}">
            <AssAttr fromlineno="47" tolineno="47" lineno="47" attrname="tasks_lookup" expr="self">
              <Name fromlineno="47" tolineno="47" lineno="47" name="self"/>
            </AssAttr>
            <Dict fromlineno="47" tolineno="47" lineno="47"/>
          </Assign>
          <Assign fromlineno="49" tolineno="49" lineno="49" targets="[&lt;AssAttr(depids) l.49 [bb.taskdata] at Ox9b9b26c&gt;]" value="{}">
            <AssAttr fromlineno="49" tolineno="49" lineno="49" attrname="depids" expr="self">
              <Name fromlineno="49" tolineno="49" lineno="49" name="self"/>
            </AssAttr>
            <Dict fromlineno="49" tolineno="49" lineno="49"/>
          </Assign>
          <Assign fromlineno="50" tolineno="50" lineno="50" targets="[&lt;AssAttr(rdepids) l.50 [bb.taskdata] at Ox9b9b32c&gt;]" value="{}">
            <AssAttr fromlineno="50" tolineno="50" lineno="50" attrname="rdepids" expr="self">
              <Name fromlineno="50" tolineno="50" lineno="50" name="self"/>
            </AssAttr>
            <Dict fromlineno="50" tolineno="50" lineno="50"/>
          </Assign>
          <Assign fromlineno="52" tolineno="52" lineno="52" targets="[&lt;AssAttr(consider_msgs_cache) l.52 [bb.taskdata] at Ox9b9b3ec&gt;]" value="[]">
            <AssAttr fromlineno="52" tolineno="52" lineno="52" attrname="consider_msgs_cache" expr="self">
              <Name fromlineno="52" tolineno="52" lineno="52" name="self"/>
            </AssAttr>
            <List fromlineno="52" tolineno="52" lineno="52"/>
          </Assign>
          <Assign fromlineno="54" tolineno="54" lineno="54" targets="[&lt;AssAttr(failed_deps) l.54 [bb.taskdata] at Ox9b9b4ac&gt;]" value="[]">
            <AssAttr fromlineno="54" tolineno="54" lineno="54" attrname="failed_deps" expr="self">
              <Name fromlineno="54" tolineno="54" lineno="54" name="self"/>
            </AssAttr>
            <List fromlineno="54" tolineno="54" lineno="54"/>
          </Assign>
          <Assign fromlineno="55" tolineno="55" lineno="55" targets="[&lt;AssAttr(failed_rdeps) l.55 [bb.taskdata] at Ox9b9b56c&gt;]" value="[]">
            <AssAttr fromlineno="55" tolineno="55" lineno="55" attrname="failed_rdeps" expr="self">
              <Name fromlineno="55" tolineno="55" lineno="55" name="self"/>
            </AssAttr>
            <List fromlineno="55" tolineno="55" lineno="55"/>
          </Assign>
          <Assign fromlineno="56" tolineno="56" lineno="56" targets="[&lt;AssAttr(failed_fnids) l.56 [bb.taskdata] at Ox9b9b62c&gt;]" value="[]">
            <AssAttr fromlineno="56" tolineno="56" lineno="56" attrname="failed_fnids" expr="self">
              <Name fromlineno="56" tolineno="56" lineno="56" name="self"/>
            </AssAttr>
            <List fromlineno="56" tolineno="56" lineno="56"/>
          </Assign>
          <Assign fromlineno="58" tolineno="58" lineno="58" targets="[&lt;AssAttr(abort) l.58 [bb.taskdata] at Ox9b9b6ec&gt;]" value="abort">
            <AssAttr fromlineno="58" tolineno="58" lineno="58" attrname="abort" expr="self">
              <Name fromlineno="58" tolineno="58" lineno="58" name="self"/>
            </AssAttr>
            <Name fromlineno="58" tolineno="58" lineno="58" name="abort"/>
          </Assign>
          <Assign fromlineno="59" tolineno="59" lineno="59" targets="[&lt;AssAttr(tryaltconfigs) l.59 [bb.taskdata] at Ox9b9b78c&gt;]" value="tryaltconfigs">
            <AssAttr fromlineno="59" tolineno="59" lineno="59" attrname="tryaltconfigs" expr="self">
              <Name fromlineno="59" tolineno="59" lineno="59" name="self"/>
            </AssAttr>
            <Name fromlineno="59" tolineno="59" lineno="59" name="tryaltconfigs"/>
          </Assign>
        </Function>
        <Function fromlineno="61" tolineno="70" lineno="61">
          <Arguments fromlineno="61" tolineno="61" lineno="None" format_args="self, name">
            <AssName fromlineno="61" tolineno="61" lineno="61" name="self"/>
            <AssName fromlineno="61" tolineno="61" lineno="61" name="name"/>
          </Arguments>
          <If fromlineno="66" tolineno="68" lineno="66">
            <UnaryOp fromlineno="66" tolineno="66" lineno="66">
              <Compare fromlineno="66" tolineno="66" lineno="66" op="('in', &lt;Getattr(build_names_index) l.66 [bb.taskdata] at Ox9b9b9ac&gt;)">
                <Name fromlineno="66" tolineno="66" lineno="66" name="name"/>
                <Getattr fromlineno="66" tolineno="66" lineno="66" attrname="build_names_index" expr="self">
                  <Name fromlineno="66" tolineno="66" lineno="66" name="self"/>
                </Getattr>
              </Compare>
            </UnaryOp>
            <Discard fromlineno="67" tolineno="67" lineno="67">
              <CallFunc fromlineno="67" tolineno="67" lineno="67" func="Getattr(append)">
                <Getattr fromlineno="67" tolineno="67" lineno="67" attrname="append" expr="self.build_names_index">
                  <Getattr fromlineno="67" tolineno="67" lineno="67" attrname="build_names_index" expr="self">
                    <Name fromlineno="67" tolineno="67" lineno="67" name="self"/>
                  </Getattr>
                </Getattr>
                <Name fromlineno="67" tolineno="67" lineno="67" name="name"/>
              </CallFunc>
            </Discard>
            <Return fromlineno="68" tolineno="68" lineno="68">
              <BinOp fromlineno="68" tolineno="68" lineno="68" op="-" left="len(self.build_names_index)" right="1">
                <CallFunc fromlineno="68" tolineno="68" lineno="68" func="Name(len)">
                  <Name fromlineno="68" tolineno="68" lineno="68" name="len"/>
                  <Getattr fromlineno="68" tolineno="68" lineno="68" attrname="build_names_index" expr="self">
                    <Name fromlineno="68" tolineno="68" lineno="68" name="self"/>
                  </Getattr>
                </CallFunc>
                <Const fromlineno="68" tolineno="68" lineno="68" type="int">1</Const>
              </BinOp>
            </Return>
          </If>
          <Return fromlineno="70" tolineno="70" lineno="70">
            <CallFunc fromlineno="70" tolineno="70" lineno="70" func="Getattr(index)">
              <Getattr fromlineno="70" tolineno="70" lineno="70" attrname="index" expr="self.build_names_index">
                <Getattr fromlineno="70" tolineno="70" lineno="70" attrname="build_names_index" expr="self">
                  <Name fromlineno="70" tolineno="70" lineno="70" name="self"/>
                </Getattr>
              </Getattr>
              <Name fromlineno="70" tolineno="70" lineno="70" name="name"/>
            </CallFunc>
          </Return>
        </Function>
        <Function fromlineno="72" tolineno="81" lineno="72">
          <Arguments fromlineno="72" tolineno="72" lineno="None" format_args="self, name">
            <AssName fromlineno="72" tolineno="72" lineno="72" name="self"/>
            <AssName fromlineno="72" tolineno="72" lineno="72" name="name"/>
          </Arguments>
          <If fromlineno="77" tolineno="79" lineno="77">
            <UnaryOp fromlineno="77" tolineno="77" lineno="77">
              <Compare fromlineno="77" tolineno="77" lineno="77" op="('in', &lt;Getattr(run_names_index) l.77 [bb.taskdata] at Ox9b9beac&gt;)">
                <Name fromlineno="77" tolineno="77" lineno="77" name="name"/>
                <Getattr fromlineno="77" tolineno="77" lineno="77" attrname="run_names_index" expr="self">
                  <Name fromlineno="77" tolineno="77" lineno="77" name="self"/>
                </Getattr>
              </Compare>
            </UnaryOp>
            <Discard fromlineno="78" tolineno="78" lineno="78">
              <CallFunc fromlineno="78" tolineno="78" lineno="78" func="Getattr(append)">
                <Getattr fromlineno="78" tolineno="78" lineno="78" attrname="append" expr="self.run_names_index">
                  <Getattr fromlineno="78" tolineno="78" lineno="78" attrname="run_names_index" expr="self">
                    <Name fromlineno="78" tolineno="78" lineno="78" name="self"/>
                  </Getattr>
                </Getattr>
                <Name fromlineno="78" tolineno="78" lineno="78" name="name"/>
              </CallFunc>
            </Discard>
            <Return fromlineno="79" tolineno="79" lineno="79">
              <BinOp fromlineno="79" tolineno="79" lineno="79" op="-" left="len(self.run_names_index)" right="1">
                <CallFunc fromlineno="79" tolineno="79" lineno="79" func="Name(len)">
                  <Name fromlineno="79" tolineno="79" lineno="79" name="len"/>
                  <Getattr fromlineno="79" tolineno="79" lineno="79" attrname="run_names_index" expr="self">
                    <Name fromlineno="79" tolineno="79" lineno="79" name="self"/>
                  </Getattr>
                </CallFunc>
                <Const fromlineno="79" tolineno="79" lineno="79" type="int">1</Const>
              </BinOp>
            </Return>
          </If>
          <Return fromlineno="81" tolineno="81" lineno="81">
            <CallFunc fromlineno="81" tolineno="81" lineno="81" func="Getattr(index)">
              <Getattr fromlineno="81" tolineno="81" lineno="81" attrname="index" expr="self.run_names_index">
                <Getattr fromlineno="81" tolineno="81" lineno="81" attrname="run_names_index" expr="self">
                  <Name fromlineno="81" tolineno="81" lineno="81" name="self"/>
                </Getattr>
              </Getattr>
              <Name fromlineno="81" tolineno="81" lineno="81" name="name"/>
            </CallFunc>
          </Return>
        </Function>
        <Function fromlineno="83" tolineno="92" lineno="83">
          <Arguments fromlineno="83" tolineno="83" lineno="None" format_args="self, name">
            <AssName fromlineno="83" tolineno="83" lineno="83" name="self"/>
            <AssName fromlineno="83" tolineno="83" lineno="83" name="name"/>
          </Arguments>
          <If fromlineno="88" tolineno="90" lineno="88">
            <UnaryOp fromlineno="88" tolineno="88" lineno="88">
              <Compare fromlineno="88" tolineno="88" lineno="88" op="('in', &lt;Getattr(fn_index) l.88 [bb.taskdata] at Ox9ba33cc&gt;)">
                <Name fromlineno="88" tolineno="88" lineno="88" name="name"/>
                <Getattr fromlineno="88" tolineno="88" lineno="88" attrname="fn_index" expr="self">
                  <Name fromlineno="88" tolineno="88" lineno="88" name="self"/>
                </Getattr>
              </Compare>
            </UnaryOp>
            <Discard fromlineno="89" tolineno="89" lineno="89">
              <CallFunc fromlineno="89" tolineno="89" lineno="89" func="Getattr(append)">
                <Getattr fromlineno="89" tolineno="89" lineno="89" attrname="append" expr="self.fn_index">
                  <Getattr fromlineno="89" tolineno="89" lineno="89" attrname="fn_index" expr="self">
                    <Name fromlineno="89" tolineno="89" lineno="89" name="self"/>
                  </Getattr>
                </Getattr>
                <Name fromlineno="89" tolineno="89" lineno="89" name="name"/>
              </CallFunc>
            </Discard>
            <Return fromlineno="90" tolineno="90" lineno="90">
              <BinOp fromlineno="90" tolineno="90" lineno="90" op="-" left="len(self.fn_index)" right="1">
                <CallFunc fromlineno="90" tolineno="90" lineno="90" func="Name(len)">
                  <Name fromlineno="90" tolineno="90" lineno="90" name="len"/>
                  <Getattr fromlineno="90" tolineno="90" lineno="90" attrname="fn_index" expr="self">
                    <Name fromlineno="90" tolineno="90" lineno="90" name="self"/>
                  </Getattr>
                </CallFunc>
                <Const fromlineno="90" tolineno="90" lineno="90" type="int">1</Const>
              </BinOp>
            </Return>
          </If>
          <Return fromlineno="92" tolineno="92" lineno="92">
            <CallFunc fromlineno="92" tolineno="92" lineno="92" func="Getattr(index)">
              <Getattr fromlineno="92" tolineno="92" lineno="92" attrname="index" expr="self.fn_index">
                <Getattr fromlineno="92" tolineno="92" lineno="92" attrname="fn_index" expr="self">
                  <Name fromlineno="92" tolineno="92" lineno="92" name="self"/>
                </Getattr>
              </Getattr>
              <Name fromlineno="92" tolineno="92" lineno="92" name="name"/>
            </CallFunc>
          </Return>
        </Function>
        <Function fromlineno="94" tolineno="102" lineno="94">
          <Arguments fromlineno="94" tolineno="94" lineno="None" format_args="self, fnid">
            <AssName fromlineno="94" tolineno="94" lineno="94" name="self"/>
            <AssName fromlineno="94" tolineno="94" lineno="94" name="fnid"/>
          </Arguments>
          <Assign fromlineno="98" tolineno="98" lineno="98" targets="[&lt;AssName(ids) l.98 [bb.taskdata] at Ox9ba384c&gt;]" value="[]">
            <AssName fromlineno="98" tolineno="98" lineno="98" name="ids"/>
            <List fromlineno="98" tolineno="98" lineno="98"/>
          </Assign>
          <If fromlineno="99" tolineno="101" lineno="99">
            <Compare fromlineno="99" tolineno="99" lineno="99" op="('in', &lt;Getattr(tasks_lookup) l.99 [bb.taskdata] at Ox9ba396c&gt;)">
              <Name fromlineno="99" tolineno="99" lineno="99" name="fnid"/>
              <Getattr fromlineno="99" tolineno="99" lineno="99" attrname="tasks_lookup" expr="self">
                <Name fromlineno="99" tolineno="99" lineno="99" name="self"/>
              </Getattr>
            </Compare>
            <For fromlineno="100" tolineno="101" lineno="100">
              <AssName fromlineno="100" tolineno="100" lineno="100" name="task"/>
              <Subscript fromlineno="100" tolineno="100" lineno="100">
                <Getattr fromlineno="100" tolineno="100" lineno="100" attrname="tasks_lookup" expr="self">
                  <Name fromlineno="100" tolineno="100" lineno="100" name="self"/>
                </Getattr>
                <Index fromlineno="100" tolineno="100" lineno="None">
                  <Name fromlineno="100" tolineno="100" lineno="100" name="fnid"/>
                </Index>
              </Subscript>
              <Discard fromlineno="101" tolineno="101" lineno="101">
                <CallFunc fromlineno="101" tolineno="101" lineno="101" func="Getattr(append)">
                  <Getattr fromlineno="101" tolineno="101" lineno="101" attrname="append" expr="ids">
                    <Name fromlineno="101" tolineno="101" lineno="101" name="ids"/>
                  </Getattr>
                  <Subscript fromlineno="101" tolineno="101" lineno="101">
                    <Subscript fromlineno="101" tolineno="101" lineno="101">
                      <Getattr fromlineno="101" tolineno="101" lineno="101" attrname="tasks_lookup" expr="self">
                        <Name fromlineno="101" tolineno="101" lineno="101" name="self"/>
                      </Getattr>
                      <Index fromlineno="101" tolineno="101" lineno="None">
                        <Name fromlineno="101" tolineno="101" lineno="101" name="fnid"/>
                      </Index>
                    </Subscript>
                    <Index fromlineno="101" tolineno="101" lineno="None">
                      <Name fromlineno="101" tolineno="101" lineno="101" name="task"/>
                    </Index>
                  </Subscript>
                </CallFunc>
              </Discard>
            </For>
          </If>
          <Return fromlineno="102" tolineno="102" lineno="102">
            <Name fromlineno="102" tolineno="102" lineno="102" name="ids"/>
          </Return>
        </Function>
        <Function fromlineno="104" tolineno="130" lineno="104">
          <Arguments fromlineno="104" tolineno="104" lineno="None" format_args="self, fn, task, create=True">
            <AssName fromlineno="104" tolineno="104" lineno="104" name="self"/>
            <AssName fromlineno="104" tolineno="104" lineno="104" name="fn"/>
            <AssName fromlineno="104" tolineno="104" lineno="104" name="task"/>
            <AssName fromlineno="104" tolineno="104" lineno="104" name="create"/>
            <Const fromlineno="104" tolineno="104" lineno="104" type="bool">True</Const>
          </Arguments>
          <Assign fromlineno="110" tolineno="110" lineno="110" targets="[&lt;AssName(fnid) l.110 [bb.taskdata] at Ox9ba3eec&gt;]" value="self.getfn_id(fn)">
            <AssName fromlineno="110" tolineno="110" lineno="110" name="fnid"/>
            <CallFunc fromlineno="110" tolineno="110" lineno="110" func="Getattr(getfn_id)">
              <Getattr fromlineno="110" tolineno="110" lineno="110" attrname="getfn_id" expr="self">
                <Name fromlineno="110" tolineno="110" lineno="110" name="self"/>
              </Getattr>
              <Name fromlineno="110" tolineno="110" lineno="110" name="fn"/>
            </CallFunc>
          </Assign>
          <If fromlineno="112" tolineno="114" lineno="112">
            <Compare fromlineno="112" tolineno="112" lineno="112" op="('in', &lt;Getattr(tasks_lookup) l.112 [bb.taskdata] at Ox9bb908c&gt;)">
              <Name fromlineno="112" tolineno="112" lineno="112" name="fnid"/>
              <Getattr fromlineno="112" tolineno="112" lineno="112" attrname="tasks_lookup" expr="self">
                <Name fromlineno="112" tolineno="112" lineno="112" name="self"/>
              </Getattr>
            </Compare>
            <If fromlineno="113" tolineno="114" lineno="113">
              <Compare fromlineno="113" tolineno="113" lineno="113" op="('in', &lt;Subscript() l.113 [bb.taskdata] at Ox9bb91cc&gt;)">
                <Name fromlineno="113" tolineno="113" lineno="113" name="task"/>
                <Subscript fromlineno="113" tolineno="113" lineno="113">
                  <Getattr fromlineno="113" tolineno="113" lineno="113" attrname="tasks_lookup" expr="self">
                    <Name fromlineno="113" tolineno="113" lineno="113" name="self"/>
                  </Getattr>
                  <Index fromlineno="113" tolineno="113" lineno="None">
                    <Name fromlineno="113" tolineno="113" lineno="113" name="fnid"/>
                  </Index>
                </Subscript>
              </Compare>
              <Return fromlineno="114" tolineno="114" lineno="114">
                <Subscript fromlineno="114" tolineno="114" lineno="114">
                  <Subscript fromlineno="114" tolineno="114" lineno="114">
                    <Getattr fromlineno="114" tolineno="114" lineno="114" attrname="tasks_lookup" expr="self">
                      <Name fromlineno="114" tolineno="114" lineno="114" name="self"/>
                    </Getattr>
                    <Index fromlineno="114" tolineno="114" lineno="None">
                      <Name fromlineno="114" tolineno="114" lineno="114" name="fnid"/>
                    </Index>
                  </Subscript>
                  <Index fromlineno="114" tolineno="114" lineno="None">
                    <Name fromlineno="114" tolineno="114" lineno="114" name="task"/>
                  </Index>
                </Subscript>
              </Return>
            </If>
          </If>
          <If fromlineno="116" tolineno="117" lineno="116">
            <UnaryOp fromlineno="116" tolineno="116" lineno="116">
              <Name fromlineno="116" tolineno="116" lineno="116" name="create"/>
            </UnaryOp>
            <Return fromlineno="117" tolineno="117" lineno="117">
              <Const fromlineno="117" tolineno="117" lineno="117" type="NoneType">None</Const>
            </Return>
          </If>
          <Discard fromlineno="119" tolineno="119" lineno="119">
            <CallFunc fromlineno="119" tolineno="119" lineno="119" func="Getattr(append)">
              <Getattr fromlineno="119" tolineno="119" lineno="119" attrname="append" expr="self.tasks_name">
                <Getattr fromlineno="119" tolineno="119" lineno="119" attrname="tasks_name" expr="self">
                  <Name fromlineno="119" tolineno="119" lineno="119" name="self"/>
                </Getattr>
              </Getattr>
              <Name fromlineno="119" tolineno="119" lineno="119" name="task"/>
            </CallFunc>
          </Discard>
          <Discard fromlineno="120" tolineno="120" lineno="120">
            <CallFunc fromlineno="120" tolineno="120" lineno="120" func="Getattr(append)">
              <Getattr fromlineno="120" tolineno="120" lineno="120" attrname="append" expr="self.tasks_fnid">
                <Getattr fromlineno="120" tolineno="120" lineno="120" attrname="tasks_fnid" expr="self">
                  <Name fromlineno="120" tolineno="120" lineno="120" name="self"/>
                </Getattr>
              </Getattr>
              <Name fromlineno="120" tolineno="120" lineno="120" name="fnid"/>
            </CallFunc>
          </Discard>
          <Discard fromlineno="121" tolineno="121" lineno="121">
            <CallFunc fromlineno="121" tolineno="121" lineno="121" func="Getattr(append)">
              <Getattr fromlineno="121" tolineno="121" lineno="121" attrname="append" expr="self.tasks_tdepends">
                <Getattr fromlineno="121" tolineno="121" lineno="121" attrname="tasks_tdepends" expr="self">
                  <Name fromlineno="121" tolineno="121" lineno="121" name="self"/>
                </Getattr>
              </Getattr>
              <List fromlineno="121" tolineno="121" lineno="121"/>
            </CallFunc>
          </Discard>
          <Discard fromlineno="122" tolineno="122" lineno="122">
            <CallFunc fromlineno="122" tolineno="122" lineno="122" func="Getattr(append)">
              <Getattr fromlineno="122" tolineno="122" lineno="122" attrname="append" expr="self.tasks_idepends">
                <Getattr fromlineno="122" tolineno="122" lineno="122" attrname="tasks_idepends" expr="self">
                  <Name fromlineno="122" tolineno="122" lineno="122" name="self"/>
                </Getattr>
              </Getattr>
              <List fromlineno="122" tolineno="122" lineno="122"/>
            </CallFunc>
          </Discard>
          <Assign fromlineno="124" tolineno="124" lineno="124" targets="[&lt;AssName(listid) l.124 [bb.taskdata] at Ox9bb988c&gt;]" value="(len(self.tasks_name)) - (1)">
            <AssName fromlineno="124" tolineno="124" lineno="124" name="listid"/>
            <BinOp fromlineno="124" tolineno="124" lineno="124" op="-" left="len(self.tasks_name)" right="1">
              <CallFunc fromlineno="124" tolineno="124" lineno="124" func="Name(len)">
                <Name fromlineno="124" tolineno="124" lineno="124" name="len"/>
                <Getattr fromlineno="124" tolineno="124" lineno="124" attrname="tasks_name" expr="self">
                  <Name fromlineno="124" tolineno="124" lineno="124" name="self"/>
                </Getattr>
              </CallFunc>
              <Const fromlineno="124" tolineno="124" lineno="124" type="int">1</Const>
            </BinOp>
          </Assign>
          <If fromlineno="126" tolineno="127" lineno="126">
            <Compare fromlineno="126" tolineno="126" lineno="126" op="('not in', &lt;Getattr(tasks_lookup) l.126 [bb.taskdata] at Ox9bb9a4c&gt;)">
              <Name fromlineno="126" tolineno="126" lineno="126" name="fnid"/>
              <Getattr fromlineno="126" tolineno="126" lineno="126" attrname="tasks_lookup" expr="self">
                <Name fromlineno="126" tolineno="126" lineno="126" name="self"/>
              </Getattr>
            </Compare>
            <Assign fromlineno="127" tolineno="127" lineno="127" targets="[&lt;Subscript() l.127 [bb.taskdata] at Ox9bb9b0c&gt;]" value="{}">
              <Subscript fromlineno="127" tolineno="127" lineno="127">
                <Getattr fromlineno="127" tolineno="127" lineno="127" attrname="tasks_lookup" expr="self">
                  <Name fromlineno="127" tolineno="127" lineno="127" name="self"/>
                </Getattr>
                <Index fromlineno="127" tolineno="127" lineno="None">
                  <Name fromlineno="127" tolineno="127" lineno="127" name="fnid"/>
                </Index>
              </Subscript>
              <Dict fromlineno="127" tolineno="127" lineno="127"/>
            </Assign>
          </If>
          <Assign fromlineno="128" tolineno="128" lineno="128" targets="[&lt;Subscript() l.128 [bb.taskdata] at Ox9bb9c2c&gt;]" value="listid">
            <Subscript fromlineno="128" tolineno="128" lineno="128">
              <Subscript fromlineno="128" tolineno="128" lineno="128">
                <Getattr fromlineno="128" tolineno="128" lineno="128" attrname="tasks_lookup" expr="self">
                  <Name fromlineno="128" tolineno="128" lineno="128" name="self"/>
                </Getattr>
                <Index fromlineno="128" tolineno="128" lineno="None">
                  <Name fromlineno="128" tolineno="128" lineno="128" name="fnid"/>
                </Index>
              </Subscript>
              <Index fromlineno="128" tolineno="128" lineno="None">
                <Name fromlineno="128" tolineno="128" lineno="128" name="task"/>
              </Index>
            </Subscript>
            <Name fromlineno="128" tolineno="128" lineno="128" name="listid"/>
          </Assign>
          <Return fromlineno="130" tolineno="130" lineno="130">
            <Name fromlineno="130" tolineno="130" lineno="130" name="listid"/>
          </Return>
        </Function>
        <Function fromlineno="132" tolineno="196" lineno="132">
          <Arguments fromlineno="132" tolineno="132" lineno="None" format_args="self, fn, dataCache">
            <AssName fromlineno="132" tolineno="132" lineno="132" name="self"/>
            <AssName fromlineno="132" tolineno="132" lineno="132" name="fn"/>
            <AssName fromlineno="132" tolineno="132" lineno="132" name="dataCache"/>
          </Arguments>
          <Assign fromlineno="137" tolineno="137" lineno="137" targets="[&lt;AssName(task_deps) l.137 [bb.taskdata] at Ox9bb9f0c&gt;]" value="dataCache.task_deps[fn]">
            <AssName fromlineno="137" tolineno="137" lineno="137" name="task_deps"/>
            <Subscript fromlineno="137" tolineno="137" lineno="137">
              <Getattr fromlineno="137" tolineno="137" lineno="137" attrname="task_deps" expr="dataCache">
                <Name fromlineno="137" tolineno="137" lineno="137" name="dataCache"/>
              </Getattr>
              <Index fromlineno="137" tolineno="137" lineno="None">
                <Name fromlineno="137" tolineno="137" lineno="137" name="fn"/>
              </Index>
            </Subscript>
          </Assign>
          <Assign fromlineno="139" tolineno="139" lineno="139" targets="[&lt;AssName(fnid) l.139 [bb.taskdata] at Ox9bbd04c&gt;]" value="self.getfn_id(fn)">
            <AssName fromlineno="139" tolineno="139" lineno="139" name="fnid"/>
            <CallFunc fromlineno="139" tolineno="139" lineno="139" func="Getattr(getfn_id)">
              <Getattr fromlineno="139" tolineno="139" lineno="139" attrname="getfn_id" expr="self">
                <Name fromlineno="139" tolineno="139" lineno="139" name="self"/>
              </Getattr>
              <Name fromlineno="139" tolineno="139" lineno="139" name="fn"/>
            </CallFunc>
          </Assign>
          <If fromlineno="141" tolineno="142" lineno="141">
            <Compare fromlineno="141" tolineno="141" lineno="141" op="('in', &lt;Getattr(failed_fnids) l.141 [bb.taskdata] at Ox9bbd1cc&gt;)">
              <Name fromlineno="141" tolineno="141" lineno="141" name="fnid"/>
              <Getattr fromlineno="141" tolineno="141" lineno="141" attrname="failed_fnids" expr="self">
                <Name fromlineno="141" tolineno="141" lineno="141" name="self"/>
              </Getattr>
            </Compare>
            <Discard fromlineno="142" tolineno="142" lineno="142">
              <CallFunc fromlineno="142" tolineno="142" lineno="142" func="Getattr(fatal)">
                <Getattr fromlineno="142" tolineno="142" lineno="142" attrname="fatal" expr="bb.msg">
                  <Getattr fromlineno="142" tolineno="142" lineno="142" attrname="msg" expr="bb">
                    <Name fromlineno="142" tolineno="142" lineno="142" name="bb"/>
                  </Getattr>
                </Getattr>
                <Getattr fromlineno="142" tolineno="142" lineno="142" attrname="TaskData" expr="bb.msg.domain">
                  <Getattr fromlineno="142" tolineno="142" lineno="142" attrname="domain" expr="bb.msg">
                    <Getattr fromlineno="142" tolineno="142" lineno="142" attrname="msg" expr="bb">
                      <Name fromlineno="142" tolineno="142" lineno="142" name="bb"/>
                    </Getattr>
                  </Getattr>
                </Getattr>
                <Const fromlineno="142" tolineno="142" lineno="142" type="str">'Trying to re-add a failed file? Something is broken...'</Const>
              </CallFunc>
            </Discard>
          </If>
          <If fromlineno="145" tolineno="146" lineno="145">
            <Compare fromlineno="145" tolineno="145" lineno="145" op="('in', &lt;Getattr(tasks_fnid) l.145 [bb.taskdata] at Ox9bbd44c&gt;)">
              <Name fromlineno="145" tolineno="145" lineno="145" name="fnid"/>
              <Getattr fromlineno="145" tolineno="145" lineno="145" attrname="tasks_fnid" expr="self">
                <Name fromlineno="145" tolineno="145" lineno="145" name="self"/>
              </Getattr>
            </Compare>
            <Return fromlineno="146" tolineno="146" lineno="146"/>
          </If>
          <For fromlineno="148" tolineno="164" lineno="148">
            <AssName fromlineno="148" tolineno="148" lineno="148" name="task"/>
            <Subscript fromlineno="148" tolineno="148" lineno="148">
              <Name fromlineno="148" tolineno="148" lineno="148" name="task_deps"/>
              <Index fromlineno="148" tolineno="148" lineno="None">
                <Const fromlineno="148" tolineno="148" lineno="148" type="str">'tasks'</Const>
              </Index>
            </Subscript>
            <Assign fromlineno="151" tolineno="151" lineno="151" targets="[&lt;AssName(parentids) l.151 [bb.taskdata] at Ox9bbd64c&gt;]" value="[]">
              <AssName fromlineno="151" tolineno="151" lineno="151" name="parentids"/>
              <List fromlineno="151" tolineno="151" lineno="151"/>
            </Assign>
            <For fromlineno="152" tolineno="154" lineno="152">
              <AssName fromlineno="152" tolineno="152" lineno="152" name="dep"/>
              <Subscript fromlineno="152" tolineno="152" lineno="152">
                <Subscript fromlineno="152" tolineno="152" lineno="152">
                  <Name fromlineno="152" tolineno="152" lineno="152" name="task_deps"/>
                  <Index fromlineno="152" tolineno="152" lineno="None">
                    <Const fromlineno="152" tolineno="152" lineno="152" type="str">'parents'</Const>
                  </Index>
                </Subscript>
                <Index fromlineno="152" tolineno="152" lineno="None">
                  <Name fromlineno="152" tolineno="152" lineno="152" name="task"/>
                </Index>
              </Subscript>
              <Assign fromlineno="153" tolineno="153" lineno="153" targets="[&lt;AssName(parentid) l.153 [bb.taskdata] at Ox9bbd88c&gt;]" value="self.gettask_id(fn, dep)">
                <AssName fromlineno="153" tolineno="153" lineno="153" name="parentid"/>
                <CallFunc fromlineno="153" tolineno="153" lineno="153" func="Getattr(gettask_id)">
                  <Getattr fromlineno="153" tolineno="153" lineno="153" attrname="gettask_id" expr="self">
                    <Name fromlineno="153" tolineno="153" lineno="153" name="self"/>
                  </Getattr>
                  <Name fromlineno="153" tolineno="153" lineno="153" name="fn"/>
                  <Name fromlineno="153" tolineno="153" lineno="153" name="dep"/>
                </CallFunc>
              </Assign>
              <Discard fromlineno="154" tolineno="154" lineno="154">
                <CallFunc fromlineno="154" tolineno="154" lineno="154" func="Getattr(append)">
                  <Getattr fromlineno="154" tolineno="154" lineno="154" attrname="append" expr="parentids">
                    <Name fromlineno="154" tolineno="154" lineno="154" name="parentids"/>
                  </Getattr>
                  <Name fromlineno="154" tolineno="154" lineno="154" name="parentid"/>
                </CallFunc>
              </Discard>
            </For>
            <Assign fromlineno="155" tolineno="155" lineno="155" targets="[&lt;AssName(taskid) l.155 [bb.taskdata] at Ox9bbda8c&gt;]" value="self.gettask_id(fn, task)">
              <AssName fromlineno="155" tolineno="155" lineno="155" name="taskid"/>
              <CallFunc fromlineno="155" tolineno="155" lineno="155" func="Getattr(gettask_id)">
                <Getattr fromlineno="155" tolineno="155" lineno="155" attrname="gettask_id" expr="self">
                  <Name fromlineno="155" tolineno="155" lineno="155" name="self"/>
                </Getattr>
                <Name fromlineno="155" tolineno="155" lineno="155" name="fn"/>
                <Name fromlineno="155" tolineno="155" lineno="155" name="task"/>
              </CallFunc>
            </Assign>
            <Discard fromlineno="156" tolineno="156" lineno="156">
              <CallFunc fromlineno="156" tolineno="156" lineno="156" func="Getattr(extend)">
                <Getattr fromlineno="156" tolineno="156" lineno="156" attrname="extend" expr="self.tasks_tdepends[taskid]">
                  <Subscript fromlineno="156" tolineno="156" lineno="156">
                    <Getattr fromlineno="156" tolineno="156" lineno="156" attrname="tasks_tdepends" expr="self">
                      <Name fromlineno="156" tolineno="156" lineno="156" name="self"/>
                    </Getattr>
                    <Index fromlineno="156" tolineno="156" lineno="None">
                      <Name fromlineno="156" tolineno="156" lineno="156" name="taskid"/>
                    </Index>
                  </Subscript>
                </Getattr>
                <Name fromlineno="156" tolineno="156" lineno="156" name="parentids"/>
              </CallFunc>
            </Discard>
            <If fromlineno="159" tolineno="164" lineno="159">
              <BoolOp fromlineno="159" tolineno="159" lineno="159" op="and" values="'depends' in task_deps,task in task_deps['depends'],">
                <Compare fromlineno="159" tolineno="159" lineno="159" op="('in', &lt;Name(task_deps) l.159 [bb.taskdata] at Ox9bbddcc&gt;)">
                  <Const fromlineno="159" tolineno="159" lineno="159" type="str">'depends'</Const>
                  <Name fromlineno="159" tolineno="159" lineno="159" name="task_deps"/>
                </Compare>
                <Compare fromlineno="159" tolineno="159" lineno="159" op="('in', &lt;Subscript() l.159 [bb.taskdata] at Ox9bbde6c&gt;)">
                  <Name fromlineno="159" tolineno="159" lineno="159" name="task"/>
                  <Subscript fromlineno="159" tolineno="159" lineno="159">
                    <Name fromlineno="159" tolineno="159" lineno="159" name="task_deps"/>
                    <Index fromlineno="159" tolineno="159" lineno="None">
                      <Const fromlineno="159" tolineno="159" lineno="159" type="str">'depends'</Const>
                    </Index>
                  </Subscript>
                </Compare>
              </BoolOp>
              <Assign fromlineno="160" tolineno="160" lineno="160" targets="[&lt;AssName(ids) l.160 [bb.taskdata] at Ox9bbdf4c&gt;]" value="[]">
                <AssName fromlineno="160" tolineno="160" lineno="160" name="ids"/>
                <List fromlineno="160" tolineno="160" lineno="160"/>
              </Assign>
              <For fromlineno="161" tolineno="163" lineno="161">
                <AssName fromlineno="161" tolineno="161" lineno="161" name="dep"/>
                <CallFunc fromlineno="161" tolineno="161" lineno="161" func="Getattr(split)">
                  <Getattr fromlineno="161" tolineno="161" lineno="161" attrname="split" expr="task_deps['depends'][task]">
                    <Subscript fromlineno="161" tolineno="161" lineno="161">
                      <Subscript fromlineno="161" tolineno="161" lineno="161">
                        <Name fromlineno="161" tolineno="161" lineno="161" name="task_deps"/>
                        <Index fromlineno="161" tolineno="161" lineno="None">
                          <Const fromlineno="161" tolineno="161" lineno="161" type="str">'depends'</Const>
                        </Index>
                      </Subscript>
                      <Index fromlineno="161" tolineno="161" lineno="None">
                        <Name fromlineno="161" tolineno="161" lineno="161" name="task"/>
                      </Index>
                    </Subscript>
                  </Getattr>
                </CallFunc>
                <If fromlineno="162" tolineno="163" lineno="162">
                  <Name fromlineno="162" tolineno="162" lineno="162" name="dep"/>
                  <Discard fromlineno="163" tolineno="163" lineno="163">
                    <CallFunc fromlineno="163" tolineno="163" lineno="163" func="Getattr(append)">
                      <Getattr fromlineno="163" tolineno="163" lineno="163" attrname="append" expr="ids">
                        <Name fromlineno="163" tolineno="163" lineno="163" name="ids"/>
                      </Getattr>
                      <Tuple fromlineno="163" tolineno="163" lineno="163">
                        <CallFunc fromlineno="163" tolineno="163" lineno="163" func="Getattr(getbuild_id)">
                          <Getattr fromlineno="163" tolineno="163" lineno="163" attrname="getbuild_id" expr="self">
                            <Name fromlineno="163" tolineno="163" lineno="163" name="self"/>
                          </Getattr>
                          <Subscript fromlineno="163" tolineno="163" lineno="163">
                            <CallFunc fromlineno="163" tolineno="163" lineno="163" func="Getattr(split)">
                              <Getattr fromlineno="163" tolineno="163" lineno="163" attrname="split" expr="dep">
                                <Name fromlineno="163" tolineno="163" lineno="163" name="dep"/>
                              </Getattr>
                              <Const fromlineno="163" tolineno="163" lineno="163" type="str">':'</Const>
                            </CallFunc>
                            <Index fromlineno="163" tolineno="163" lineno="None">
                              <Const fromlineno="163" tolineno="163" lineno="163" type="int">0</Const>
                            </Index>
                          </Subscript>
                        </CallFunc>
                        <Subscript fromlineno="163" tolineno="163" lineno="163">
                          <CallFunc fromlineno="163" tolineno="163" lineno="163" func="Getattr(split)">
                            <Getattr fromlineno="163" tolineno="163" lineno="163" attrname="split" expr="dep">
                              <Name fromlineno="163" tolineno="163" lineno="163" name="dep"/>
                            </Getattr>
                            <Const fromlineno="163" tolineno="163" lineno="163" type="str">':'</Const>
                          </CallFunc>
                          <Index fromlineno="163" tolineno="163" lineno="None">
                            <Const fromlineno="163" tolineno="163" lineno="163" type="int">1</Const>
                          </Index>
                        </Subscript>
                      </Tuple>
                    </CallFunc>
                  </Discard>
                </If>
              </For>
              <Discard fromlineno="164" tolineno="164" lineno="164">
                <CallFunc fromlineno="164" tolineno="164" lineno="164" func="Getattr(extend)">
                  <Getattr fromlineno="164" tolineno="164" lineno="164" attrname="extend" expr="self.tasks_idepends[taskid]">
                    <Subscript fromlineno="164" tolineno="164" lineno="164">
                      <Getattr fromlineno="164" tolineno="164" lineno="164" attrname="tasks_idepends" expr="self">
                        <Name fromlineno="164" tolineno="164" lineno="164" name="self"/>
                      </Getattr>
                      <Index fromlineno="164" tolineno="164" lineno="None">
                        <Name fromlineno="164" tolineno="164" lineno="164" name="taskid"/>
                      </Index>
                    </Subscript>
                  </Getattr>
                  <Name fromlineno="164" tolineno="164" lineno="164" name="ids"/>
                </CallFunc>
              </Discard>
            </If>
          </For>
          <If fromlineno="167" tolineno="172" lineno="167">
            <UnaryOp fromlineno="167" tolineno="167" lineno="167">
              <Compare fromlineno="167" tolineno="167" lineno="167" op="('in', &lt;Getattr(depids) l.167 [bb.taskdata] at Ox9bc178c&gt;)">
                <Name fromlineno="167" tolineno="167" lineno="167" name="fnid"/>
                <Getattr fromlineno="167" tolineno="167" lineno="167" attrname="depids" expr="self">
                  <Name fromlineno="167" tolineno="167" lineno="167" name="self"/>
                </Getattr>
              </Compare>
            </UnaryOp>
            <Assign fromlineno="168" tolineno="168" lineno="168" targets="[&lt;AssName(dependids) l.168 [bb.taskdata] at Ox9bc184c&gt;]" value="{}">
              <AssName fromlineno="168" tolineno="168" lineno="168" name="dependids"/>
              <Dict fromlineno="168" tolineno="168" lineno="168"/>
            </Assign>
            <For fromlineno="169" tolineno="171" lineno="169">
              <AssName fromlineno="169" tolineno="169" lineno="169" name="depend"/>
              <Subscript fromlineno="169" tolineno="169" lineno="169">
                <Getattr fromlineno="169" tolineno="169" lineno="169" attrname="deps" expr="dataCache">
                  <Name fromlineno="169" tolineno="169" lineno="169" name="dataCache"/>
                </Getattr>
                <Index fromlineno="169" tolineno="169" lineno="None">
                  <Name fromlineno="169" tolineno="169" lineno="169" name="fn"/>
                </Index>
              </Subscript>
              <Discard fromlineno="170" tolineno="170" lineno="170">
                <CallFunc fromlineno="170" tolineno="170" lineno="170" func="Getattr(debug)">
                  <Getattr fromlineno="170" tolineno="170" lineno="170" attrname="debug" expr="bb.msg">
                    <Getattr fromlineno="170" tolineno="170" lineno="170" attrname="msg" expr="bb">
                      <Name fromlineno="170" tolineno="170" lineno="170" name="bb"/>
                    </Getattr>
                  </Getattr>
                  <Const fromlineno="170" tolineno="170" lineno="170" type="int">2</Const>
                  <Getattr fromlineno="170" tolineno="170" lineno="170" attrname="TaskData" expr="bb.msg.domain">
                    <Getattr fromlineno="170" tolineno="170" lineno="170" attrname="domain" expr="bb.msg">
                      <Getattr fromlineno="170" tolineno="170" lineno="170" attrname="msg" expr="bb">
                        <Name fromlineno="170" tolineno="170" lineno="170" name="bb"/>
                      </Getattr>
                    </Getattr>
                  </Getattr>
                  <BinOp fromlineno="170" tolineno="170" lineno="170" op="%" left="'Added dependency %s for %s'" right="(depend, fn)">
                    <Const fromlineno="170" tolineno="170" lineno="170" type="str">'Added dependency %s for %s'</Const>
                    <Tuple fromlineno="170" tolineno="170" lineno="170">
                      <Name fromlineno="170" tolineno="170" lineno="170" name="depend"/>
                      <Name fromlineno="170" tolineno="170" lineno="170" name="fn"/>
                    </Tuple>
                  </BinOp>
                </CallFunc>
              </Discard>
              <Assign fromlineno="171" tolineno="171" lineno="171" targets="[&lt;Subscript() l.171 [bb.taskdata] at Ox9bc1c6c&gt;]" value="None">
                <Subscript fromlineno="171" tolineno="171" lineno="171">
                  <Name fromlineno="171" tolineno="171" lineno="171" name="dependids"/>
                  <Index fromlineno="171" tolineno="171" lineno="None">
                    <CallFunc fromlineno="171" tolineno="171" lineno="171" func="Getattr(getbuild_id)">
                      <Getattr fromlineno="171" tolineno="171" lineno="171" attrname="getbuild_id" expr="self">
                        <Name fromlineno="171" tolineno="171" lineno="171" name="self"/>
                      </Getattr>
                      <Name fromlineno="171" tolineno="171" lineno="171" name="depend"/>
                    </CallFunc>
                  </Index>
                </Subscript>
                <Const fromlineno="171" tolineno="171" lineno="171" type="NoneType">None</Const>
              </Assign>
            </For>
            <Assign fromlineno="172" tolineno="172" lineno="172" targets="[&lt;Subscript() l.172 [bb.taskdata] at Ox9bc1dcc&gt;]" value="dependids.keys()">
              <Subscript fromlineno="172" tolineno="172" lineno="172">
                <Getattr fromlineno="172" tolineno="172" lineno="172" attrname="depids" expr="self">
                  <Name fromlineno="172" tolineno="172" lineno="172" name="self"/>
                </Getattr>
                <Index fromlineno="172" tolineno="172" lineno="None">
                  <Name fromlineno="172" tolineno="172" lineno="172" name="fnid"/>
                </Index>
              </Subscript>
              <CallFunc fromlineno="172" tolineno="172" lineno="172" func="Getattr(keys)">
                <Getattr fromlineno="172" tolineno="172" lineno="172" attrname="keys" expr="dependids">
                  <Name fromlineno="172" tolineno="172" lineno="172" name="dependids"/>
                </Getattr>
              </CallFunc>
            </Assign>
          </If>
          <If fromlineno="175" tolineno="187" lineno="175">
            <UnaryOp fromlineno="175" tolineno="175" lineno="175">
              <Compare fromlineno="175" tolineno="175" lineno="175" op="('in', &lt;Getattr(rdepids) l.175 [bb.taskdata] at Ox9bc1fac&gt;)">
                <Name fromlineno="175" tolineno="175" lineno="175" name="fnid"/>
                <Getattr fromlineno="175" tolineno="175" lineno="175" attrname="rdepids" expr="self">
                  <Name fromlineno="175" tolineno="175" lineno="175" name="self"/>
                </Getattr>
              </Compare>
            </UnaryOp>
            <Assign fromlineno="176" tolineno="176" lineno="176" targets="[&lt;AssName(rdependids) l.176 [bb.taskdata] at Ox9bc508c&gt;]" value="{}">
              <AssName fromlineno="176" tolineno="176" lineno="176" name="rdependids"/>
              <Dict fromlineno="176" tolineno="176" lineno="176"/>
            </Assign>
            <Assign fromlineno="177" tolineno="177" lineno="177" targets="[&lt;AssName(rdepends) l.177 [bb.taskdata] at Ox9bc514c&gt;]" value="dataCache.rundeps[fn]">
              <AssName fromlineno="177" tolineno="177" lineno="177" name="rdepends"/>
              <Subscript fromlineno="177" tolineno="177" lineno="177">
                <Getattr fromlineno="177" tolineno="177" lineno="177" attrname="rundeps" expr="dataCache">
                  <Name fromlineno="177" tolineno="177" lineno="177" name="dataCache"/>
                </Getattr>
                <Index fromlineno="177" tolineno="177" lineno="None">
                  <Name fromlineno="177" tolineno="177" lineno="177" name="fn"/>
                </Index>
              </Subscript>
            </Assign>
            <Assign fromlineno="178" tolineno="178" lineno="178" targets="[&lt;AssName(rrecs) l.178 [bb.taskdata] at Ox9bc526c&gt;]" value="dataCache.runrecs[fn]">
              <AssName fromlineno="178" tolineno="178" lineno="178" name="rrecs"/>
              <Subscript fromlineno="178" tolineno="178" lineno="178">
                <Getattr fromlineno="178" tolineno="178" lineno="178" attrname="runrecs" expr="dataCache">
                  <Name fromlineno="178" tolineno="178" lineno="178" name="dataCache"/>
                </Getattr>
                <Index fromlineno="178" tolineno="178" lineno="None">
                  <Name fromlineno="178" tolineno="178" lineno="178" name="fn"/>
                </Index>
              </Subscript>
            </Assign>
            <For fromlineno="179" tolineno="182" lineno="179">
              <AssName fromlineno="179" tolineno="179" lineno="179" name="package"/>
              <Name fromlineno="179" tolineno="179" lineno="179" name="rdepends"/>
              <For fromlineno="180" tolineno="182" lineno="180">
                <AssName fromlineno="180" tolineno="180" lineno="180" name="rdepend"/>
                <CallFunc fromlineno="180" tolineno="180" lineno="180" func="Getattr(explode_deps)">
                  <Getattr fromlineno="180" tolineno="180" lineno="180" attrname="explode_deps" expr="bb.utils">
                    <Getattr fromlineno="180" tolineno="180" lineno="180" attrname="utils" expr="bb">
                      <Name fromlineno="180" tolineno="180" lineno="180" name="bb"/>
                    </Getattr>
                  </Getattr>
                  <Subscript fromlineno="180" tolineno="180" lineno="180">
                    <Name fromlineno="180" tolineno="180" lineno="180" name="rdepends"/>
                    <Index fromlineno="180" tolineno="180" lineno="None">
                      <Name fromlineno="180" tolineno="180" lineno="180" name="package"/>
                    </Index>
                  </Subscript>
                </CallFunc>
                <Discard fromlineno="181" tolineno="181" lineno="181">
                  <CallFunc fromlineno="181" tolineno="181" lineno="181" func="Getattr(debug)">
                    <Getattr fromlineno="181" tolineno="181" lineno="181" attrname="debug" expr="bb.msg">
                      <Getattr fromlineno="181" tolineno="181" lineno="181" attrname="msg" expr="bb">
                        <Name fromlineno="181" tolineno="181" lineno="181" name="bb"/>
                      </Getattr>
                    </Getattr>
                    <Const fromlineno="181" tolineno="181" lineno="181" type="int">2</Const>
                    <Getattr fromlineno="181" tolineno="181" lineno="181" attrname="TaskData" expr="bb.msg.domain">
                      <Getattr fromlineno="181" tolineno="181" lineno="181" attrname="domain" expr="bb.msg">
                        <Getattr fromlineno="181" tolineno="181" lineno="181" attrname="msg" expr="bb">
                          <Name fromlineno="181" tolineno="181" lineno="181" name="bb"/>
                        </Getattr>
                      </Getattr>
                    </Getattr>
                    <BinOp fromlineno="181" tolineno="181" lineno="181" op="%" left="'Added runtime dependency %s for %s'" right="(rdepend, fn)">
                      <Const fromlineno="181" tolineno="181" lineno="181" type="str">'Added runtime dependency %s for %s'</Const>
                      <Tuple fromlineno="181" tolineno="181" lineno="181">
                        <Name fromlineno="181" tolineno="181" lineno="181" name="rdepend"/>
                        <Name fromlineno="181" tolineno="181" lineno="181" name="fn"/>
                      </Tuple>
                    </BinOp>
                  </CallFunc>
                </Discard>
                <Assign fromlineno="182" tolineno="182" lineno="182" targets="[&lt;Subscript() l.182 [bb.taskdata] at Ox9bc582c&gt;]" value="None">
                  <Subscript fromlineno="182" tolineno="182" lineno="182">
                    <Name fromlineno="182" tolineno="182" lineno="182" name="rdependids"/>
                    <Index fromlineno="182" tolineno="182" lineno="None">
                      <CallFunc fromlineno="182" tolineno="182" lineno="182" func="Getattr(getrun_id)">
                        <Getattr fromlineno="182" tolineno="182" lineno="182" attrname="getrun_id" expr="self">
                          <Name fromlineno="182" tolineno="182" lineno="182" name="self"/>
                        </Getattr>
                        <Name fromlineno="182" tolineno="182" lineno="182" name="rdepend"/>
                      </CallFunc>
                    </Index>
                  </Subscript>
                  <Const fromlineno="182" tolineno="182" lineno="182" type="NoneType">None</Const>
                </Assign>
              </For>
            </For>
            <For fromlineno="183" tolineno="186" lineno="183">
              <AssName fromlineno="183" tolineno="183" lineno="183" name="package"/>
              <Name fromlineno="183" tolineno="183" lineno="183" name="rrecs"/>
              <For fromlineno="184" tolineno="186" lineno="184">
                <AssName fromlineno="184" tolineno="184" lineno="184" name="rdepend"/>
                <CallFunc fromlineno="184" tolineno="184" lineno="184" func="Getattr(explode_deps)">
                  <Getattr fromlineno="184" tolineno="184" lineno="184" attrname="explode_deps" expr="bb.utils">
                    <Getattr fromlineno="184" tolineno="184" lineno="184" attrname="utils" expr="bb">
                      <Name fromlineno="184" tolineno="184" lineno="184" name="bb"/>
                    </Getattr>
                  </Getattr>
                  <Subscript fromlineno="184" tolineno="184" lineno="184">
                    <Name fromlineno="184" tolineno="184" lineno="184" name="rrecs"/>
                    <Index fromlineno="184" tolineno="184" lineno="None">
                      <Name fromlineno="184" tolineno="184" lineno="184" name="package"/>
                    </Index>
                  </Subscript>
                </CallFunc>
                <Discard fromlineno="185" tolineno="185" lineno="185">
                  <CallFunc fromlineno="185" tolineno="185" lineno="185" func="Getattr(debug)">
                    <Getattr fromlineno="185" tolineno="185" lineno="185" attrname="debug" expr="bb.msg">
                      <Getattr fromlineno="185" tolineno="185" lineno="185" attrname="msg" expr="bb">
                        <Name fromlineno="185" tolineno="185" lineno="185" name="bb"/>
                      </Getattr>
                    </Getattr>
                    <Const fromlineno="185" tolineno="185" lineno="185" type="int">2</Const>
                    <Getattr fromlineno="185" tolineno="185" lineno="185" attrname="TaskData" expr="bb.msg.domain">
                      <Getattr fromlineno="185" tolineno="185" lineno="185" attrname="domain" expr="bb.msg">
                        <Getattr fromlineno="185" tolineno="185" lineno="185" attrname="msg" expr="bb">
                          <Name fromlineno="185" tolineno="185" lineno="185" name="bb"/>
                        </Getattr>
                      </Getattr>
                    </Getattr>
                    <BinOp fromlineno="185" tolineno="185" lineno="185" op="%" left="'Added runtime recommendation %s for %s'" right="(rdepend, fn)">
                      <Const fromlineno="185" tolineno="185" lineno="185" type="str">'Added runtime recommendation %s for %s'</Const>
                      <Tuple fromlineno="185" tolineno="185" lineno="185">
                        <Name fromlineno="185" tolineno="185" lineno="185" name="rdepend"/>
                        <Name fromlineno="185" tolineno="185" lineno="185" name="fn"/>
                      </Tuple>
                    </BinOp>
                  </CallFunc>
                </Discard>
                <Assign fromlineno="186" tolineno="186" lineno="186" targets="[&lt;Subscript() l.186 [bb.taskdata] at Ox9bc5dec&gt;]" value="None">
                  <Subscript fromlineno="186" tolineno="186" lineno="186">
                    <Name fromlineno="186" tolineno="186" lineno="186" name="rdependids"/>
                    <Index fromlineno="186" tolineno="186" lineno="None">
                      <CallFunc fromlineno="186" tolineno="186" lineno="186" func="Getattr(getrun_id)">
                        <Getattr fromlineno="186" tolineno="186" lineno="186" attrname="getrun_id" expr="self">
                          <Name fromlineno="186" tolineno="186" lineno="186" name="self"/>
                        </Getattr>
                        <Name fromlineno="186" tolineno="186" lineno="186" name="rdepend"/>
                      </CallFunc>
                    </Index>
                  </Subscript>
                  <Const fromlineno="186" tolineno="186" lineno="186" type="NoneType">None</Const>
                </Assign>
              </For>
            </For>
            <Assign fromlineno="187" tolineno="187" lineno="187" targets="[&lt;Subscript() l.187 [bb.taskdata] at Ox9bc5f4c&gt;]" value="rdependids.keys()">
              <Subscript fromlineno="187" tolineno="187" lineno="187">
                <Getattr fromlineno="187" tolineno="187" lineno="187" attrname="rdepids" expr="self">
                  <Name fromlineno="187" tolineno="187" lineno="187" name="self"/>
                </Getattr>
                <Index fromlineno="187" tolineno="187" lineno="None">
                  <Name fromlineno="187" tolineno="187" lineno="187" name="fnid"/>
                </Index>
              </Subscript>
              <CallFunc fromlineno="187" tolineno="187" lineno="187" func="Getattr(keys)">
                <Getattr fromlineno="187" tolineno="187" lineno="187" attrname="keys" expr="rdependids">
                  <Name fromlineno="187" tolineno="187" lineno="187" name="rdependids"/>
                </Getattr>
              </CallFunc>
            </Assign>
          </If>
          <For fromlineno="189" tolineno="192" lineno="189">
            <AssName fromlineno="189" tolineno="189" lineno="189" name="dep"/>
            <Subscript fromlineno="189" tolineno="189" lineno="189">
              <Getattr fromlineno="189" tolineno="189" lineno="189" attrname="depids" expr="self">
                <Name fromlineno="189" tolineno="189" lineno="189" name="self"/>
              </Getattr>
              <Index fromlineno="189" tolineno="189" lineno="None">
                <Name fromlineno="189" tolineno="189" lineno="189" name="fnid"/>
              </Index>
            </Subscript>
            <If fromlineno="190" tolineno="192" lineno="190">
              <Compare fromlineno="190" tolineno="190" lineno="190" op="('in', &lt;Getattr(failed_deps) l.190 [bb.taskdata] at Ox9bca24c&gt;)">
                <Name fromlineno="190" tolineno="190" lineno="190" name="dep"/>
                <Getattr fromlineno="190" tolineno="190" lineno="190" attrname="failed_deps" expr="self">
                  <Name fromlineno="190" tolineno="190" lineno="190" name="self"/>
                </Getattr>
              </Compare>
              <Discard fromlineno="191" tolineno="191" lineno="191">
                <CallFunc fromlineno="191" tolineno="191" lineno="191" func="Getattr(fail_fnid)">
                  <Getattr fromlineno="191" tolineno="191" lineno="191" attrname="fail_fnid" expr="self">
                    <Name fromlineno="191" tolineno="191" lineno="191" name="self"/>
                  </Getattr>
                  <Name fromlineno="191" tolineno="191" lineno="191" name="fnid"/>
                </CallFunc>
              </Discard>
              <Return fromlineno="192" tolineno="192" lineno="192"/>
            </If>
          </For>
          <For fromlineno="193" tolineno="196" lineno="193">
            <AssName fromlineno="193" tolineno="193" lineno="193" name="dep"/>
            <Subscript fromlineno="193" tolineno="193" lineno="193">
              <Getattr fromlineno="193" tolineno="193" lineno="193" attrname="rdepids" expr="self">
                <Name fromlineno="193" tolineno="193" lineno="193" name="self"/>
              </Getattr>
              <Index fromlineno="193" tolineno="193" lineno="None">
                <Name fromlineno="193" tolineno="193" lineno="193" name="fnid"/>
              </Index>
            </Subscript>
            <If fromlineno="194" tolineno="196" lineno="194">
              <Compare fromlineno="194" tolineno="194" lineno="194" op="('in', &lt;Getattr(failed_rdeps) l.194 [bb.taskdata] at Ox9bca56c&gt;)">
                <Name fromlineno="194" tolineno="194" lineno="194" name="dep"/>
                <Getattr fromlineno="194" tolineno="194" lineno="194" attrname="failed_rdeps" expr="self">
                  <Name fromlineno="194" tolineno="194" lineno="194" name="self"/>
                </Getattr>
              </Compare>
              <Discard fromlineno="195" tolineno="195" lineno="195">
                <CallFunc fromlineno="195" tolineno="195" lineno="195" func="Getattr(fail_fnid)">
                  <Getattr fromlineno="195" tolineno="195" lineno="195" attrname="fail_fnid" expr="self">
                    <Name fromlineno="195" tolineno="195" lineno="195" name="self"/>
                  </Getattr>
                  <Name fromlineno="195" tolineno="195" lineno="195" name="fnid"/>
                </CallFunc>
              </Discard>
              <Return fromlineno="196" tolineno="196" lineno="196"/>
            </If>
          </For>
        </Function>
        <Function fromlineno="198" tolineno="206" lineno="198">
          <Arguments fromlineno="198" tolineno="198" lineno="None" format_args="self, target">
            <AssName fromlineno="198" tolineno="198" lineno="198" name="self"/>
            <AssName fromlineno="198" tolineno="198" lineno="198" name="target"/>
          </Arguments>
          <Assign fromlineno="202" tolineno="202" lineno="202" targets="[&lt;AssName(targetid) l.202 [bb.taskdata] at Ox9bca80c&gt;]" value="self.getbuild_id(target)">
            <AssName fromlineno="202" tolineno="202" lineno="202" name="targetid"/>
            <CallFunc fromlineno="202" tolineno="202" lineno="202" func="Getattr(getbuild_id)">
              <Getattr fromlineno="202" tolineno="202" lineno="202" attrname="getbuild_id" expr="self">
                <Name fromlineno="202" tolineno="202" lineno="202" name="self"/>
              </Getattr>
              <Name fromlineno="202" tolineno="202" lineno="202" name="target"/>
            </CallFunc>
          </Assign>
          <If fromlineno="204" tolineno="205" lineno="204">
            <Compare fromlineno="204" tolineno="204" lineno="204" op="('in', &lt;Getattr(build_targets) l.204 [bb.taskdata] at Ox9bca98c&gt;)">
              <Name fromlineno="204" tolineno="204" lineno="204" name="targetid"/>
              <Getattr fromlineno="204" tolineno="204" lineno="204" attrname="build_targets" expr="self">
                <Name fromlineno="204" tolineno="204" lineno="204" name="self"/>
              </Getattr>
            </Compare>
            <Return fromlineno="205" tolineno="205" lineno="205">
              <Const fromlineno="205" tolineno="205" lineno="205" type="bool">True</Const>
            </Return>
          </If>
          <Return fromlineno="206" tolineno="206" lineno="206">
            <Const fromlineno="206" tolineno="206" lineno="206" type="bool">False</Const>
          </Return>
        </Function>
        <Function fromlineno="208" tolineno="216" lineno="208">
          <Arguments fromlineno="208" tolineno="208" lineno="None" format_args="self, target">
            <AssName fromlineno="208" tolineno="208" lineno="208" name="self"/>
            <AssName fromlineno="208" tolineno="208" lineno="208" name="target"/>
          </Arguments>
          <Assign fromlineno="212" tolineno="212" lineno="212" targets="[&lt;AssName(targetid) l.212 [bb.taskdata] at Ox9bcabcc&gt;]" value="self.getrun_id(target)">
            <AssName fromlineno="212" tolineno="212" lineno="212" name="targetid"/>
            <CallFunc fromlineno="212" tolineno="212" lineno="212" func="Getattr(getrun_id)">
              <Getattr fromlineno="212" tolineno="212" lineno="212" attrname="getrun_id" expr="self">
                <Name fromlineno="212" tolineno="212" lineno="212" name="self"/>
              </Getattr>
              <Name fromlineno="212" tolineno="212" lineno="212" name="target"/>
            </CallFunc>
          </Assign>
          <If fromlineno="214" tolineno="215" lineno="214">
            <Compare fromlineno="214" tolineno="214" lineno="214" op="('in', &lt;Getattr(run_targets) l.214 [bb.taskdata] at Ox9bcad4c&gt;)">
              <Name fromlineno="214" tolineno="214" lineno="214" name="targetid"/>
              <Getattr fromlineno="214" tolineno="214" lineno="214" attrname="run_targets" expr="self">
                <Name fromlineno="214" tolineno="214" lineno="214" name="self"/>
              </Getattr>
            </Compare>
            <Return fromlineno="215" tolineno="215" lineno="215">
              <Const fromlineno="215" tolineno="215" lineno="215" type="bool">True</Const>
            </Return>
          </If>
          <Return fromlineno="216" tolineno="216" lineno="216">
            <Const fromlineno="216" tolineno="216" lineno="216" type="bool">False</Const>
          </Return>
        </Function>
        <Function fromlineno="218" tolineno="231" lineno="218">
          <Arguments fromlineno="218" tolineno="218" lineno="None" format_args="self, fn, item">
            <AssName fromlineno="218" tolineno="218" lineno="218" name="self"/>
            <AssName fromlineno="218" tolineno="218" lineno="218" name="fn"/>
            <AssName fromlineno="218" tolineno="218" lineno="218" name="item"/>
          </Arguments>
          <Assign fromlineno="223" tolineno="223" lineno="223" targets="[&lt;AssName(targetid) l.223 [bb.taskdata] at Ox9bcafcc&gt;]" value="self.getbuild_id(item)">
            <AssName fromlineno="223" tolineno="223" lineno="223" name="targetid"/>
            <CallFunc fromlineno="223" tolineno="223" lineno="223" func="Getattr(getbuild_id)">
              <Getattr fromlineno="223" tolineno="223" lineno="223" attrname="getbuild_id" expr="self">
                <Name fromlineno="223" tolineno="223" lineno="223" name="self"/>
              </Getattr>
              <Name fromlineno="223" tolineno="223" lineno="223" name="item"/>
            </CallFunc>
          </Assign>
          <Assign fromlineno="224" tolineno="224" lineno="224" targets="[&lt;AssName(fnid) l.224 [bb.taskdata] at Ox9bcd10c&gt;]" value="self.getfn_id(fn)">
            <AssName fromlineno="224" tolineno="224" lineno="224" name="fnid"/>
            <CallFunc fromlineno="224" tolineno="224" lineno="224" func="Getattr(getfn_id)">
              <Getattr fromlineno="224" tolineno="224" lineno="224" attrname="getfn_id" expr="self">
                <Name fromlineno="224" tolineno="224" lineno="224" name="self"/>
              </Getattr>
              <Name fromlineno="224" tolineno="224" lineno="224" name="fn"/>
            </CallFunc>
          </Assign>
          <If fromlineno="226" tolineno="230" lineno="226">
            <Compare fromlineno="226" tolineno="226" lineno="226" op="('in', &lt;Getattr(build_targets) l.226 [bb.taskdata] at Ox9bcd28c&gt;)">
              <Name fromlineno="226" tolineno="226" lineno="226" name="targetid"/>
              <Getattr fromlineno="226" tolineno="226" lineno="226" attrname="build_targets" expr="self">
                <Name fromlineno="226" tolineno="226" lineno="226" name="self"/>
              </Getattr>
            </Compare>
            <If fromlineno="227" tolineno="228" lineno="227">
              <Compare fromlineno="227" tolineno="227" lineno="227" op="('in', &lt;Subscript() l.227 [bb.taskdata] at Ox9bcd3cc&gt;)">
                <Name fromlineno="227" tolineno="227" lineno="227" name="fnid"/>
                <Subscript fromlineno="227" tolineno="227" lineno="227">
                  <Getattr fromlineno="227" tolineno="227" lineno="227" attrname="build_targets" expr="self">
                    <Name fromlineno="227" tolineno="227" lineno="227" name="self"/>
                  </Getattr>
                  <Index fromlineno="227" tolineno="227" lineno="None">
                    <Name fromlineno="227" tolineno="227" lineno="227" name="targetid"/>
                  </Index>
                </Subscript>
              </Compare>
              <Return fromlineno="228" tolineno="228" lineno="228"/>
            </If>
            <Discard fromlineno="229" tolineno="229" lineno="229">
              <CallFunc fromlineno="229" tolineno="229" lineno="229" func="Getattr(append)">
                <Getattr fromlineno="229" tolineno="229" lineno="229" attrname="append" expr="self.build_targets[targetid]">
                  <Subscript fromlineno="229" tolineno="229" lineno="229">
                    <Getattr fromlineno="229" tolineno="229" lineno="229" attrname="build_targets" expr="self">
                      <Name fromlineno="229" tolineno="229" lineno="229" name="self"/>
                    </Getattr>
                    <Index fromlineno="229" tolineno="229" lineno="None">
                      <Name fromlineno="229" tolineno="229" lineno="229" name="targetid"/>
                    </Index>
                  </Subscript>
                </Getattr>
                <Name fromlineno="229" tolineno="229" lineno="229" name="fnid"/>
              </CallFunc>
            </Discard>
            <Return fromlineno="230" tolineno="230" lineno="230"/>
          </If>
          <Assign fromlineno="231" tolineno="231" lineno="231" targets="[&lt;Subscript() l.231 [bb.taskdata] at Ox9bcd64c&gt;]" value="[fnid]">
            <Subscript fromlineno="231" tolineno="231" lineno="231">
              <Getattr fromlineno="231" tolineno="231" lineno="231" attrname="build_targets" expr="self">
                <Name fromlineno="231" tolineno="231" lineno="231" name="self"/>
              </Getattr>
              <Index fromlineno="231" tolineno="231" lineno="None">
                <Name fromlineno="231" tolineno="231" lineno="231" name="targetid"/>
              </Index>
            </Subscript>
            <List fromlineno="231" tolineno="231" lineno="231">
              <Name fromlineno="231" tolineno="231" lineno="231" name="fnid"/>
            </List>
          </Assign>
        </Function>
        <Function fromlineno="233" tolineno="246" lineno="233">
          <Arguments fromlineno="233" tolineno="233" lineno="None" format_args="self, fn, item">
            <AssName fromlineno="233" tolineno="233" lineno="233" name="self"/>
            <AssName fromlineno="233" tolineno="233" lineno="233" name="fn"/>
            <AssName fromlineno="233" tolineno="233" lineno="233" name="item"/>
          </Arguments>
          <Assign fromlineno="238" tolineno="238" lineno="238" targets="[&lt;AssName(targetid) l.238 [bb.taskdata] at Ox9bcd8cc&gt;]" value="self.getrun_id(item)">
            <AssName fromlineno="238" tolineno="238" lineno="238" name="targetid"/>
            <CallFunc fromlineno="238" tolineno="238" lineno="238" func="Getattr(getrun_id)">
              <Getattr fromlineno="238" tolineno="238" lineno="238" attrname="getrun_id" expr="self">
                <Name fromlineno="238" tolineno="238" lineno="238" name="self"/>
              </Getattr>
              <Name fromlineno="238" tolineno="238" lineno="238" name="item"/>
            </CallFunc>
          </Assign>
          <Assign fromlineno="239" tolineno="239" lineno="239" targets="[&lt;AssName(fnid) l.239 [bb.taskdata] at Ox9bcd9ec&gt;]" value="self.getfn_id(fn)">
            <AssName fromlineno="239" tolineno="239" lineno="239" name="fnid"/>
            <CallFunc fromlineno="239" tolineno="239" lineno="239" func="Getattr(getfn_id)">
              <Getattr fromlineno="239" tolineno="239" lineno="239" attrname="getfn_id" expr="self">
                <Name fromlineno="239" tolineno="239" lineno="239" name="self"/>
              </Getattr>
              <Name fromlineno="239" tolineno="239" lineno="239" name="fn"/>
            </CallFunc>
          </Assign>
          <If fromlineno="241" tolineno="245" lineno="241">
            <Compare fromlineno="241" tolineno="241" lineno="241" op="('in', &lt;Getattr(run_targets) l.241 [bb.taskdata] at Ox9bcdb6c&gt;)">
              <Name fromlineno="241" tolineno="241" lineno="241" name="targetid"/>
              <Getattr fromlineno="241" tolineno="241" lineno="241" attrname="run_targets" expr="self">
                <Name fromlineno="241" tolineno="241" lineno="241" name="self"/>
              </Getattr>
            </Compare>
            <If fromlineno="242" tolineno="243" lineno="242">
              <Compare fromlineno="242" tolineno="242" lineno="242" op="('in', &lt;Subscript() l.242 [bb.taskdata] at Ox9bcdcac&gt;)">
                <Name fromlineno="242" tolineno="242" lineno="242" name="fnid"/>
                <Subscript fromlineno="242" tolineno="242" lineno="242">
                  <Getattr fromlineno="242" tolineno="242" lineno="242" attrname="run_targets" expr="self">
                    <Name fromlineno="242" tolineno="242" lineno="242" name="self"/>
                  </Getattr>
                  <Index fromlineno="242" tolineno="242" lineno="None">
                    <Name fromlineno="242" tolineno="242" lineno="242" name="targetid"/>
                  </Index>
                </Subscript>
              </Compare>
              <Return fromlineno="243" tolineno="243" lineno="243"/>
            </If>
            <Discard fromlineno="244" tolineno="244" lineno="244">
              <CallFunc fromlineno="244" tolineno="244" lineno="244" func="Getattr(append)">
                <Getattr fromlineno="244" tolineno="244" lineno="244" attrname="append" expr="self.run_targets[targetid]">
                  <Subscript fromlineno="244" tolineno="244" lineno="244">
                    <Getattr fromlineno="244" tolineno="244" lineno="244" attrname="run_targets" expr="self">
                      <Name fromlineno="244" tolineno="244" lineno="244" name="self"/>
                    </Getattr>
                    <Index fromlineno="244" tolineno="244" lineno="None">
                      <Name fromlineno="244" tolineno="244" lineno="244" name="targetid"/>
                    </Index>
                  </Subscript>
                </Getattr>
                <Name fromlineno="244" tolineno="244" lineno="244" name="fnid"/>
              </CallFunc>
            </Discard>
            <Return fromlineno="245" tolineno="245" lineno="245"/>
          </If>
          <Assign fromlineno="246" tolineno="246" lineno="246" targets="[&lt;Subscript() l.246 [bb.taskdata] at Ox9bcdf2c&gt;]" value="[fnid]">
            <Subscript fromlineno="246" tolineno="246" lineno="246">
              <Getattr fromlineno="246" tolineno="246" lineno="246" attrname="run_targets" expr="self">
                <Name fromlineno="246" tolineno="246" lineno="246" name="self"/>
              </Getattr>
              <Index fromlineno="246" tolineno="246" lineno="None">
                <Name fromlineno="246" tolineno="246" lineno="246" name="targetid"/>
              </Index>
            </Subscript>
            <List fromlineno="246" tolineno="246" lineno="246">
              <Name fromlineno="246" tolineno="246" lineno="246" name="fnid"/>
            </List>
          </Assign>
        </Function>
        <Function fromlineno="248" tolineno="255" lineno="248">
          <Arguments fromlineno="248" tolineno="248" lineno="None" format_args="self, item">
            <AssName fromlineno="248" tolineno="248" lineno="248" name="self"/>
            <AssName fromlineno="248" tolineno="248" lineno="248" name="item"/>
          </Arguments>
          <Assign fromlineno="252" tolineno="252" lineno="252" targets="[&lt;AssName(targetid) l.252 [bb.taskdata] at Ox9bd118c&gt;]" value="self.getbuild_id(item)">
            <AssName fromlineno="252" tolineno="252" lineno="252" name="targetid"/>
            <CallFunc fromlineno="252" tolineno="252" lineno="252" func="Getattr(getbuild_id)">
              <Getattr fromlineno="252" tolineno="252" lineno="252" attrname="getbuild_id" expr="self">
                <Name fromlineno="252" tolineno="252" lineno="252" name="self"/>
              </Getattr>
              <Name fromlineno="252" tolineno="252" lineno="252" name="item"/>
            </CallFunc>
          </Assign>
          <If fromlineno="254" tolineno="255" lineno="254">
            <Compare fromlineno="254" tolineno="254" lineno="254" op="('not in', &lt;Getattr(external_targets) l.254 [bb.taskdata] at Ox9bd130c&gt;)">
              <Name fromlineno="254" tolineno="254" lineno="254" name="targetid"/>
              <Getattr fromlineno="254" tolineno="254" lineno="254" attrname="external_targets" expr="self">
                <Name fromlineno="254" tolineno="254" lineno="254" name="self"/>
              </Getattr>
            </Compare>
            <Discard fromlineno="255" tolineno="255" lineno="255">
              <CallFunc fromlineno="255" tolineno="255" lineno="255" func="Getattr(append)">
                <Getattr fromlineno="255" tolineno="255" lineno="255" attrname="append" expr="self.external_targets">
                  <Getattr fromlineno="255" tolineno="255" lineno="255" attrname="external_targets" expr="self">
                    <Name fromlineno="255" tolineno="255" lineno="255" name="self"/>
                  </Getattr>
                </Getattr>
                <Name fromlineno="255" tolineno="255" lineno="255" name="targetid"/>
              </CallFunc>
            </Discard>
          </If>
        </Function>
        <Function fromlineno="257" tolineno="270" lineno="257">
          <Arguments fromlineno="257" tolineno="257" lineno="None" format_args="self, dataCache">
            <AssName fromlineno="257" tolineno="257" lineno="257" name="self"/>
            <AssName fromlineno="257" tolineno="257" lineno="257" name="dataCache"/>
          </Arguments>
          <Assign fromlineno="262" tolineno="262" lineno="262" targets="[&lt;AssName(unresolved) l.262 [bb.taskdata] at Ox9bd15ac&gt;]" value="[]">
            <AssName fromlineno="262" tolineno="262" lineno="262" name="unresolved"/>
            <List fromlineno="262" tolineno="262" lineno="262"/>
          </Assign>
          <For fromlineno="263" tolineno="269" lineno="263">
            <AssName fromlineno="263" tolineno="263" lineno="263" name="target"/>
            <Getattr fromlineno="263" tolineno="263" lineno="263" attrname="build_names_index" expr="self">
              <Name fromlineno="263" tolineno="263" lineno="263" name="self"/>
            </Getattr>
            <If fromlineno="264" tolineno="265" lineno="264">
              <Compare fromlineno="264" tolineno="264" lineno="264" op="('in', &lt;Getattr(ignored_dependencies) l.264 [bb.taskdata] at Ox9bd17ac&gt;)">
                <Name fromlineno="264" tolineno="264" lineno="264" name="target"/>
                <Getattr fromlineno="264" tolineno="264" lineno="264" attrname="ignored_dependencies" expr="dataCache">
                  <Name fromlineno="264" tolineno="264" lineno="264" name="dataCache"/>
                </Getattr>
              </Compare>
              <Continue fromlineno="265" tolineno="265" lineno="265"/>
            </If>
            <If fromlineno="266" tolineno="267" lineno="266">
              <Compare fromlineno="266" tolineno="266" lineno="266" op="('in', &lt;Getattr(failed_deps) l.266 [bb.taskdata] at Ox9bd198c&gt;)">
                <CallFunc fromlineno="266" tolineno="266" lineno="266" func="Getattr(index)">
                  <Getattr fromlineno="266" tolineno="266" lineno="266" attrname="index" expr="self.build_names_index">
                    <Getattr fromlineno="266" tolineno="266" lineno="266" attrname="build_names_index" expr="self">
                      <Name fromlineno="266" tolineno="266" lineno="266" name="self"/>
                    </Getattr>
                  </Getattr>
                  <Name fromlineno="266" tolineno="266" lineno="266" name="target"/>
                </CallFunc>
                <Getattr fromlineno="266" tolineno="266" lineno="266" attrname="failed_deps" expr="self">
                  <Name fromlineno="266" tolineno="266" lineno="266" name="self"/>
                </Getattr>
              </Compare>
              <Continue fromlineno="267" tolineno="267" lineno="267"/>
            </If>
            <If fromlineno="268" tolineno="269" lineno="268">
              <UnaryOp fromlineno="268" tolineno="268" lineno="268">
                <CallFunc fromlineno="268" tolineno="268" lineno="268" func="Getattr(have_build_target)">
                  <Getattr fromlineno="268" tolineno="268" lineno="268" attrname="have_build_target" expr="self">
                    <Name fromlineno="268" tolineno="268" lineno="268" name="self"/>
                  </Getattr>
                  <Name fromlineno="268" tolineno="268" lineno="268" name="target"/>
                </CallFunc>
              </UnaryOp>
              <Discard fromlineno="269" tolineno="269" lineno="269">
                <CallFunc fromlineno="269" tolineno="269" lineno="269" func="Getattr(append)">
                  <Getattr fromlineno="269" tolineno="269" lineno="269" attrname="append" expr="unresolved">
                    <Name fromlineno="269" tolineno="269" lineno="269" name="unresolved"/>
                  </Getattr>
                  <Name fromlineno="269" tolineno="269" lineno="269" name="target"/>
                </CallFunc>
              </Discard>
            </If>
          </For>
          <Return fromlineno="270" tolineno="270" lineno="270">
            <Name fromlineno="270" tolineno="270" lineno="270" name="unresolved"/>
          </Return>
        </Function>
        <Function fromlineno="272" tolineno="285" lineno="272">
          <Arguments fromlineno="272" tolineno="272" lineno="None" format_args="self, dataCache">
            <AssName fromlineno="272" tolineno="272" lineno="272" name="self"/>
            <AssName fromlineno="272" tolineno="272" lineno="272" name="dataCache"/>
          </Arguments>
          <Assign fromlineno="277" tolineno="277" lineno="277" targets="[&lt;AssName(unresolved) l.277 [bb.taskdata] at Ox9bd1d8c&gt;]" value="[]">
            <AssName fromlineno="277" tolineno="277" lineno="277" name="unresolved"/>
            <List fromlineno="277" tolineno="277" lineno="277"/>
          </Assign>
          <For fromlineno="278" tolineno="284" lineno="278">
            <AssName fromlineno="278" tolineno="278" lineno="278" name="target"/>
            <Getattr fromlineno="278" tolineno="278" lineno="278" attrname="run_names_index" expr="self">
              <Name fromlineno="278" tolineno="278" lineno="278" name="self"/>
            </Getattr>
            <If fromlineno="279" tolineno="280" lineno="279">
              <Compare fromlineno="279" tolineno="279" lineno="279" op="('in', &lt;Getattr(ignored_dependencies) l.279 [bb.taskdata] at Ox9bd1f8c&gt;)">
                <Name fromlineno="279" tolineno="279" lineno="279" name="target"/>
                <Getattr fromlineno="279" tolineno="279" lineno="279" attrname="ignored_dependencies" expr="dataCache">
                  <Name fromlineno="279" tolineno="279" lineno="279" name="dataCache"/>
                </Getattr>
              </Compare>
              <Continue fromlineno="280" tolineno="280" lineno="280"/>
            </If>
            <If fromlineno="281" tolineno="282" lineno="281">
              <Compare fromlineno="281" tolineno="281" lineno="281" op="('in', &lt;Getattr(failed_rdeps) l.281 [bb.taskdata] at Ox9bd518c&gt;)">
                <CallFunc fromlineno="281" tolineno="281" lineno="281" func="Getattr(index)">
                  <Getattr fromlineno="281" tolineno="281" lineno="281" attrname="index" expr="self.run_names_index">
                    <Getattr fromlineno="281" tolineno="281" lineno="281" attrname="run_names_index" expr="self">
                      <Name fromlineno="281" tolineno="281" lineno="281" name="self"/>
                    </Getattr>
                  </Getattr>
                  <Name fromlineno="281" tolineno="281" lineno="281" name="target"/>
                </CallFunc>
                <Getattr fromlineno="281" tolineno="281" lineno="281" attrname="failed_rdeps" expr="self">
                  <Name fromlineno="281" tolineno="281" lineno="281" name="self"/>
                </Getattr>
              </Compare>
              <Continue fromlineno="282" tolineno="282" lineno="282"/>
            </If>
            <If fromlineno="283" tolineno="284" lineno="283">
              <UnaryOp fromlineno="283" tolineno="283" lineno="283">
                <CallFunc fromlineno="283" tolineno="283" lineno="283" func="Getattr(have_runtime_target)">
                  <Getattr fromlineno="283" tolineno="283" lineno="283" attrname="have_runtime_target" expr="self">
                    <Name fromlineno="283" tolineno="283" lineno="283" name="self"/>
                  </Getattr>
                  <Name fromlineno="283" tolineno="283" lineno="283" name="target"/>
                </CallFunc>
              </UnaryOp>
              <Discard fromlineno="284" tolineno="284" lineno="284">
                <CallFunc fromlineno="284" tolineno="284" lineno="284" func="Getattr(append)">
                  <Getattr fromlineno="284" tolineno="284" lineno="284" attrname="append" expr="unresolved">
                    <Name fromlineno="284" tolineno="284" lineno="284" name="unresolved"/>
                  </Getattr>
                  <Name fromlineno="284" tolineno="284" lineno="284" name="target"/>
                </CallFunc>
              </Discard>
            </If>
          </For>
          <Return fromlineno="285" tolineno="285" lineno="285">
            <Name fromlineno="285" tolineno="285" lineno="285" name="unresolved"/>
          </Return>
        </Function>
        <Function fromlineno="287" tolineno="293" lineno="287">
          <Arguments fromlineno="287" tolineno="287" lineno="None" format_args="self, item">
            <AssName fromlineno="287" tolineno="287" lineno="287" name="self"/>
            <AssName fromlineno="287" tolineno="287" lineno="287" name="item"/>
          </Arguments>
          <Assign fromlineno="291" tolineno="291" lineno="291" targets="[&lt;AssName(targetid) l.291 [bb.taskdata] at Ox9bd558c&gt;]" value="self.getbuild_id(item)">
            <AssName fromlineno="291" tolineno="291" lineno="291" name="targetid"/>
            <CallFunc fromlineno="291" tolineno="291" lineno="291" func="Getattr(getbuild_id)">
              <Getattr fromlineno="291" tolineno="291" lineno="291" attrname="getbuild_id" expr="self">
                <Name fromlineno="291" tolineno="291" lineno="291" name="self"/>
              </Getattr>
              <Name fromlineno="291" tolineno="291" lineno="291" name="item"/>
            </CallFunc>
          </Assign>
          <Return fromlineno="293" tolineno="293" lineno="293">
            <Subscript fromlineno="293" tolineno="293" lineno="293">
              <Getattr fromlineno="293" tolineno="293" lineno="293" attrname="build_targets" expr="self">
                <Name fromlineno="293" tolineno="293" lineno="293" name="self"/>
              </Getattr>
              <Index fromlineno="293" tolineno="293" lineno="None">
                <Name fromlineno="293" tolineno="293" lineno="293" name="targetid"/>
              </Index>
            </Subscript>
          </Return>
        </Function>
        <Function fromlineno="295" tolineno="303" lineno="295">
          <Arguments fromlineno="295" tolineno="295" lineno="None" format_args="self, itemid">
            <AssName fromlineno="295" tolineno="295" lineno="295" name="self"/>
            <AssName fromlineno="295" tolineno="295" lineno="295" name="itemid"/>
          </Arguments>
          <Assign fromlineno="299" tolineno="299" lineno="299" targets="[&lt;AssName(dependees) l.299 [bb.taskdata] at Ox9bd586c&gt;]" value="[]">
            <AssName fromlineno="299" tolineno="299" lineno="299" name="dependees"/>
            <List fromlineno="299" tolineno="299" lineno="299"/>
          </Assign>
          <For fromlineno="300" tolineno="302" lineno="300">
            <AssName fromlineno="300" tolineno="300" lineno="300" name="fnid"/>
            <Getattr fromlineno="300" tolineno="300" lineno="300" attrname="depids" expr="self">
              <Name fromlineno="300" tolineno="300" lineno="300" name="self"/>
            </Getattr>
            <If fromlineno="301" tolineno="302" lineno="301">
              <Compare fromlineno="301" tolineno="301" lineno="301" op="('in', &lt;Subscript() l.301 [bb.taskdata] at Ox9bd5a6c&gt;)">
                <Name fromlineno="301" tolineno="301" lineno="301" name="itemid"/>
                <Subscript fromlineno="301" tolineno="301" lineno="301">
                  <Getattr fromlineno="301" tolineno="301" lineno="301" attrname="depids" expr="self">
                    <Name fromlineno="301" tolineno="301" lineno="301" name="self"/>
                  </Getattr>
                  <Index fromlineno="301" tolineno="301" lineno="None">
                    <Name fromlineno="301" tolineno="301" lineno="301" name="fnid"/>
                  </Index>
                </Subscript>
              </Compare>
              <Discard fromlineno="302" tolineno="302" lineno="302">
                <CallFunc fromlineno="302" tolineno="302" lineno="302" func="Getattr(append)">
                  <Getattr fromlineno="302" tolineno="302" lineno="302" attrname="append" expr="dependees">
                    <Name fromlineno="302" tolineno="302" lineno="302" name="dependees"/>
                  </Getattr>
                  <Name fromlineno="302" tolineno="302" lineno="302" name="fnid"/>
                </CallFunc>
              </Discard>
            </If>
          </For>
          <Return fromlineno="303" tolineno="303" lineno="303">
            <Name fromlineno="303" tolineno="303" lineno="303" name="dependees"/>
          </Return>
        </Function>
        <Function fromlineno="305" tolineno="314" lineno="305">
          <Arguments fromlineno="305" tolineno="305" lineno="None" format_args="self, item">
            <AssName fromlineno="305" tolineno="305" lineno="305" name="self"/>
            <AssName fromlineno="305" tolineno="305" lineno="305" name="item"/>
          </Arguments>
          <Assign fromlineno="309" tolineno="309" lineno="309" targets="[&lt;AssName(itemid) l.309 [bb.taskdata] at Ox9bd5d8c&gt;]" value="self.getbuild_id(item)">
            <AssName fromlineno="309" tolineno="309" lineno="309" name="itemid"/>
            <CallFunc fromlineno="309" tolineno="309" lineno="309" func="Getattr(getbuild_id)">
              <Getattr fromlineno="309" tolineno="309" lineno="309" attrname="getbuild_id" expr="self">
                <Name fromlineno="309" tolineno="309" lineno="309" name="self"/>
              </Getattr>
              <Name fromlineno="309" tolineno="309" lineno="309" name="item"/>
            </CallFunc>
          </Assign>
          <Assign fromlineno="310" tolineno="310" lineno="310" targets="[&lt;AssName(dependees) l.310 [bb.taskdata] at Ox9bd5eac&gt;]" value="[]">
            <AssName fromlineno="310" tolineno="310" lineno="310" name="dependees"/>
            <List fromlineno="310" tolineno="310" lineno="310"/>
          </Assign>
          <For fromlineno="311" tolineno="313" lineno="311">
            <AssName fromlineno="311" tolineno="311" lineno="311" name="fnid"/>
            <Getattr fromlineno="311" tolineno="311" lineno="311" attrname="depids" expr="self">
              <Name fromlineno="311" tolineno="311" lineno="311" name="self"/>
            </Getattr>
            <If fromlineno="312" tolineno="313" lineno="312">
              <Compare fromlineno="312" tolineno="312" lineno="312" op="('in', &lt;Subscript() l.312 [bb.taskdata] at Ox9bd90cc&gt;)">
                <Name fromlineno="312" tolineno="312" lineno="312" name="itemid"/>
                <Subscript fromlineno="312" tolineno="312" lineno="312">
                  <Getattr fromlineno="312" tolineno="312" lineno="312" attrname="depids" expr="self">
                    <Name fromlineno="312" tolineno="312" lineno="312" name="self"/>
                  </Getattr>
                  <Index fromlineno="312" tolineno="312" lineno="None">
                    <Name fromlineno="312" tolineno="312" lineno="312" name="fnid"/>
                  </Index>
                </Subscript>
              </Compare>
              <Discard fromlineno="313" tolineno="313" lineno="313">
                <CallFunc fromlineno="313" tolineno="313" lineno="313" func="Getattr(append)">
                  <Getattr fromlineno="313" tolineno="313" lineno="313" attrname="append" expr="dependees">
                    <Name fromlineno="313" tolineno="313" lineno="313" name="dependees"/>
                  </Getattr>
                  <Subscript fromlineno="313" tolineno="313" lineno="313">
                    <Getattr fromlineno="313" tolineno="313" lineno="313" attrname="fn_index" expr="self">
                      <Name fromlineno="313" tolineno="313" lineno="313" name="self"/>
                    </Getattr>
                    <Index fromlineno="313" tolineno="313" lineno="None">
                      <Name fromlineno="313" tolineno="313" lineno="313" name="fnid"/>
                    </Index>
                  </Subscript>
                </CallFunc>
              </Discard>
            </If>
          </For>
          <Return fromlineno="314" tolineno="314" lineno="314">
            <Name fromlineno="314" tolineno="314" lineno="314" name="dependees"/>
          </Return>
        </Function>
        <Function fromlineno="316" tolineno="324" lineno="316">
          <Arguments fromlineno="316" tolineno="316" lineno="None" format_args="self, itemid">
            <AssName fromlineno="316" tolineno="316" lineno="316" name="self"/>
            <AssName fromlineno="316" tolineno="316" lineno="316" name="itemid"/>
          </Arguments>
          <Assign fromlineno="320" tolineno="320" lineno="320" targets="[&lt;AssName(dependees) l.320 [bb.taskdata] at Ox9bd946c&gt;]" value="[]">
            <AssName fromlineno="320" tolineno="320" lineno="320" name="dependees"/>
            <List fromlineno="320" tolineno="320" lineno="320"/>
          </Assign>
          <For fromlineno="321" tolineno="323" lineno="321">
            <AssName fromlineno="321" tolineno="321" lineno="321" name="fnid"/>
            <Getattr fromlineno="321" tolineno="321" lineno="321" attrname="rdepids" expr="self">
              <Name fromlineno="321" tolineno="321" lineno="321" name="self"/>
            </Getattr>
            <If fromlineno="322" tolineno="323" lineno="322">
              <Compare fromlineno="322" tolineno="322" lineno="322" op="('in', &lt;Subscript() l.322 [bb.taskdata] at Ox9bd966c&gt;)">
                <Name fromlineno="322" tolineno="322" lineno="322" name="itemid"/>
                <Subscript fromlineno="322" tolineno="322" lineno="322">
                  <Getattr fromlineno="322" tolineno="322" lineno="322" attrname="rdepids" expr="self">
                    <Name fromlineno="322" tolineno="322" lineno="322" name="self"/>
                  </Getattr>
                  <Index fromlineno="322" tolineno="322" lineno="None">
                    <Name fromlineno="322" tolineno="322" lineno="322" name="fnid"/>
                  </Index>
                </Subscript>
              </Compare>
              <Discard fromlineno="323" tolineno="323" lineno="323">
                <CallFunc fromlineno="323" tolineno="323" lineno="323" func="Getattr(append)">
                  <Getattr fromlineno="323" tolineno="323" lineno="323" attrname="append" expr="dependees">
                    <Name fromlineno="323" tolineno="323" lineno="323" name="dependees"/>
                  </Getattr>
                  <Name fromlineno="323" tolineno="323" lineno="323" name="fnid"/>
                </CallFunc>
              </Discard>
            </If>
          </For>
          <Return fromlineno="324" tolineno="324" lineno="324">
            <Name fromlineno="324" tolineno="324" lineno="324" name="dependees"/>
          </Return>
        </Function>
        <Function fromlineno="326" tolineno="335" lineno="326">
          <Arguments fromlineno="326" tolineno="326" lineno="None" format_args="self, item">
            <AssName fromlineno="326" tolineno="326" lineno="326" name="self"/>
            <AssName fromlineno="326" tolineno="326" lineno="326" name="item"/>
          </Arguments>
          <Assign fromlineno="330" tolineno="330" lineno="330" targets="[&lt;AssName(itemid) l.330 [bb.taskdata] at Ox9bd998c&gt;]" value="self.getrun_id(item)">
            <AssName fromlineno="330" tolineno="330" lineno="330" name="itemid"/>
            <CallFunc fromlineno="330" tolineno="330" lineno="330" func="Getattr(getrun_id)">
              <Getattr fromlineno="330" tolineno="330" lineno="330" attrname="getrun_id" expr="self">
                <Name fromlineno="330" tolineno="330" lineno="330" name="self"/>
              </Getattr>
              <Name fromlineno="330" tolineno="330" lineno="330" name="item"/>
            </CallFunc>
          </Assign>
          <Assign fromlineno="331" tolineno="331" lineno="331" targets="[&lt;AssName(dependees) l.331 [bb.taskdata] at Ox9bd9aac&gt;]" value="[]">
            <AssName fromlineno="331" tolineno="331" lineno="331" name="dependees"/>
            <List fromlineno="331" tolineno="331" lineno="331"/>
          </Assign>
          <For fromlineno="332" tolineno="334" lineno="332">
            <AssName fromlineno="332" tolineno="332" lineno="332" name="fnid"/>
            <Getattr fromlineno="332" tolineno="332" lineno="332" attrname="rdepids" expr="self">
              <Name fromlineno="332" tolineno="332" lineno="332" name="self"/>
            </Getattr>
            <If fromlineno="333" tolineno="334" lineno="333">
              <Compare fromlineno="333" tolineno="333" lineno="333" op="('in', &lt;Subscript() l.333 [bb.taskdata] at Ox9bd9cac&gt;)">
                <Name fromlineno="333" tolineno="333" lineno="333" name="itemid"/>
                <Subscript fromlineno="333" tolineno="333" lineno="333">
                  <Getattr fromlineno="333" tolineno="333" lineno="333" attrname="rdepids" expr="self">
                    <Name fromlineno="333" tolineno="333" lineno="333" name="self"/>
                  </Getattr>
                  <Index fromlineno="333" tolineno="333" lineno="None">
                    <Name fromlineno="333" tolineno="333" lineno="333" name="fnid"/>
                  </Index>
                </Subscript>
              </Compare>
              <Discard fromlineno="334" tolineno="334" lineno="334">
                <CallFunc fromlineno="334" tolineno="334" lineno="334" func="Getattr(append)">
                  <Getattr fromlineno="334" tolineno="334" lineno="334" attrname="append" expr="dependees">
                    <Name fromlineno="334" tolineno="334" lineno="334" name="dependees"/>
                  </Getattr>
                  <Subscript fromlineno="334" tolineno="334" lineno="334">
                    <Getattr fromlineno="334" tolineno="334" lineno="334" attrname="fn_index" expr="self">
                      <Name fromlineno="334" tolineno="334" lineno="334" name="self"/>
                    </Getattr>
                    <Index fromlineno="334" tolineno="334" lineno="None">
                      <Name fromlineno="334" tolineno="334" lineno="334" name="fnid"/>
                    </Index>
                  </Subscript>
                </CallFunc>
              </Discard>
            </If>
          </For>
          <Return fromlineno="335" tolineno="335" lineno="335">
            <Name fromlineno="335" tolineno="335" lineno="335" name="dependees"/>
          </Return>
        </Function>
        <Function fromlineno="337" tolineno="350" lineno="337">
          <Arguments fromlineno="337" tolineno="337" lineno="None" format_args="self, cfgData, dataCache, item">
            <AssName fromlineno="337" tolineno="337" lineno="337" name="self"/>
            <AssName fromlineno="337" tolineno="337" lineno="337" name="cfgData"/>
            <AssName fromlineno="337" tolineno="337" lineno="337" name="dataCache"/>
            <AssName fromlineno="337" tolineno="337" lineno="337" name="item"/>
          </Arguments>
          <TryExcept fromlineno="338" tolineno="348" lineno="338">
            <Discard fromlineno="339" tolineno="339" lineno="339">
              <CallFunc fromlineno="339" tolineno="339" lineno="339" func="Getattr(add_provider_internal)">
                <Getattr fromlineno="339" tolineno="339" lineno="339" attrname="add_provider_internal" expr="self">
                  <Name fromlineno="339" tolineno="339" lineno="339" name="self"/>
                </Getattr>
                <Name fromlineno="339" tolineno="339" lineno="339" name="cfgData"/>
                <Name fromlineno="339" tolineno="339" lineno="339" name="dataCache"/>
                <Name fromlineno="339" tolineno="339" lineno="339" name="item"/>
              </CallFunc>
            </Discard>
            <ExceptHandler fromlineno="340" tolineno="348" lineno="340">
              <Getattr fromlineno="340" tolineno="340" lineno="340" attrname="NoProvider" expr="bb.providers">
                <Getattr fromlineno="340" tolineno="340" lineno="340" attrname="providers" expr="bb">
                  <Name fromlineno="340" tolineno="340" lineno="340" name="bb"/>
                </Getattr>
              </Getattr>
              <If fromlineno="341" tolineno="346" lineno="341">
                <Getattr fromlineno="341" tolineno="341" lineno="341" attrname="abort" expr="self">
                  <Name fromlineno="341" tolineno="341" lineno="341" name="self"/>
                </Getattr>
                <If fromlineno="342" tolineno="345" lineno="342">
                  <CallFunc fromlineno="342" tolineno="342" lineno="342" func="Getattr(get_rdependees_str)">
                    <Getattr fromlineno="342" tolineno="342" lineno="342" attrname="get_rdependees_str" expr="self">
                      <Name fromlineno="342" tolineno="342" lineno="342" name="self"/>
                    </Getattr>
                    <Name fromlineno="342" tolineno="342" lineno="342" name="item"/>
                  </CallFunc>
                  <Discard fromlineno="343" tolineno="343" lineno="343">
                    <CallFunc fromlineno="343" tolineno="343" lineno="343" func="Getattr(error)">
                      <Getattr fromlineno="343" tolineno="343" lineno="343" attrname="error" expr="bb.msg">
                        <Getattr fromlineno="343" tolineno="343" lineno="343" attrname="msg" expr="bb">
                          <Name fromlineno="343" tolineno="343" lineno="343" name="bb"/>
                        </Getattr>
                      </Getattr>
                      <Getattr fromlineno="343" tolineno="343" lineno="343" attrname="Provider" expr="bb.msg.domain">
                        <Getattr fromlineno="343" tolineno="343" lineno="343" attrname="domain" expr="bb.msg">
                          <Getattr fromlineno="343" tolineno="343" lineno="343" attrname="msg" expr="bb">
                            <Name fromlineno="343" tolineno="343" lineno="343" name="bb"/>
                          </Getattr>
                        </Getattr>
                      </Getattr>
                      <BinOp fromlineno="343" tolineno="343" lineno="343" op="%" left="&quot;Nothing PROVIDES '%s' (but '%s' DEPENDS on or otherwise requires it)&quot;" right="(item, self.get_dependees_str(item))">
                        <Const fromlineno="343" tolineno="343" lineno="343" type="str">"Nothing PROVIDES '%s' (but '%s' DEPENDS on or otherwise requires it)"</Const>
                        <Tuple fromlineno="343" tolineno="343" lineno="343">
                          <Name fromlineno="343" tolineno="343" lineno="343" name="item"/>
                          <CallFunc fromlineno="343" tolineno="343" lineno="343" func="Getattr(get_dependees_str)">
                            <Getattr fromlineno="343" tolineno="343" lineno="343" attrname="get_dependees_str" expr="self">
                              <Name fromlineno="343" tolineno="343" lineno="343" name="self"/>
                            </Getattr>
                            <Name fromlineno="343" tolineno="343" lineno="343" name="item"/>
                          </CallFunc>
                        </Tuple>
                      </BinOp>
                    </CallFunc>
                  </Discard>
                  <Discard fromlineno="345" tolineno="345" lineno="345">
                    <CallFunc fromlineno="345" tolineno="345" lineno="345" func="Getattr(error)">
                      <Getattr fromlineno="345" tolineno="345" lineno="345" attrname="error" expr="bb.msg">
                        <Getattr fromlineno="345" tolineno="345" lineno="345" attrname="msg" expr="bb">
                          <Name fromlineno="345" tolineno="345" lineno="345" name="bb"/>
                        </Getattr>
                      </Getattr>
                      <Getattr fromlineno="345" tolineno="345" lineno="345" attrname="Provider" expr="bb.msg.domain">
                        <Getattr fromlineno="345" tolineno="345" lineno="345" attrname="domain" expr="bb.msg">
                          <Getattr fromlineno="345" tolineno="345" lineno="345" attrname="msg" expr="bb">
                            <Name fromlineno="345" tolineno="345" lineno="345" name="bb"/>
                          </Getattr>
                        </Getattr>
                      </Getattr>
                      <BinOp fromlineno="345" tolineno="345" lineno="345" op="%" left="&quot;Nothing PROVIDES '%s'&quot;" right="item">
                        <Const fromlineno="345" tolineno="345" lineno="345" type="str">"Nothing PROVIDES '%s'"</Const>
                        <Name fromlineno="345" tolineno="345" lineno="345" name="item"/>
                      </BinOp>
                    </CallFunc>
                  </Discard>
                </If>
                <Raise fromlineno="346" tolineno="346" lineno="346"/>
              </If>
              <Assign fromlineno="347" tolineno="347" lineno="347" targets="[&lt;AssName(targetid) l.347 [bb.taskdata] at Ox9bdd94c&gt;]" value="self.getbuild_id(item)">
                <AssName fromlineno="347" tolineno="347" lineno="347" name="targetid"/>
                <CallFunc fromlineno="347" tolineno="347" lineno="347" func="Getattr(getbuild_id)">
                  <Getattr fromlineno="347" tolineno="347" lineno="347" attrname="getbuild_id" expr="self">
                    <Name fromlineno="347" tolineno="347" lineno="347" name="self"/>
                  </Getattr>
                  <Name fromlineno="347" tolineno="347" lineno="347" name="item"/>
                </CallFunc>
              </Assign>
              <Discard fromlineno="348" tolineno="348" lineno="348">
                <CallFunc fromlineno="348" tolineno="348" lineno="348" func="Getattr(remove_buildtarget)">
                  <Getattr fromlineno="348" tolineno="348" lineno="348" attrname="remove_buildtarget" expr="self">
                    <Name fromlineno="348" tolineno="348" lineno="348" name="self"/>
                  </Getattr>
                  <Name fromlineno="348" tolineno="348" lineno="348" name="targetid"/>
                </CallFunc>
              </Discard>
            </ExceptHandler>
          </TryExcept>
          <Discard fromlineno="350" tolineno="350" lineno="350">
            <CallFunc fromlineno="350" tolineno="350" lineno="350" func="Getattr(mark_external_target)">
              <Getattr fromlineno="350" tolineno="350" lineno="350" attrname="mark_external_target" expr="self">
                <Name fromlineno="350" tolineno="350" lineno="350" name="self"/>
              </Getattr>
              <Name fromlineno="350" tolineno="350" lineno="350" name="item"/>
            </CallFunc>
          </Discard>
        </Function>
        <Function fromlineno="352" tolineno="399" lineno="352">
          <Arguments fromlineno="352" tolineno="352" lineno="None" format_args="self, cfgData, dataCache, item">
            <AssName fromlineno="352" tolineno="352" lineno="352" name="self"/>
            <AssName fromlineno="352" tolineno="352" lineno="352" name="cfgData"/>
            <AssName fromlineno="352" tolineno="352" lineno="352" name="dataCache"/>
            <AssName fromlineno="352" tolineno="352" lineno="352" name="item"/>
          </Arguments>
          <If fromlineno="359" tolineno="360" lineno="359">
            <Compare fromlineno="359" tolineno="359" lineno="359" op="('in', &lt;Getattr(ignored_dependencies) l.359 [bb.taskdata] at Ox9bdddac&gt;)">
              <Name fromlineno="359" tolineno="359" lineno="359" name="item"/>
              <Getattr fromlineno="359" tolineno="359" lineno="359" attrname="ignored_dependencies" expr="dataCache">
                <Name fromlineno="359" tolineno="359" lineno="359" name="dataCache"/>
              </Getattr>
            </Compare>
            <Return fromlineno="360" tolineno="360" lineno="360"/>
          </If>
          <If fromlineno="362" tolineno="368" lineno="362">
            <UnaryOp fromlineno="362" tolineno="362" lineno="362">
              <Compare fromlineno="362" tolineno="362" lineno="362" op="('in', &lt;Getattr(providers) l.362 [bb.taskdata] at Ox9bddf0c&gt;)">
                <Name fromlineno="362" tolineno="362" lineno="362" name="item"/>
                <Getattr fromlineno="362" tolineno="362" lineno="362" attrname="providers" expr="dataCache">
                  <Name fromlineno="362" tolineno="362" lineno="362" name="dataCache"/>
                </Getattr>
              </Compare>
            </UnaryOp>
            <If fromlineno="363" tolineno="366" lineno="363">
              <CallFunc fromlineno="363" tolineno="363" lineno="363" func="Getattr(get_rdependees_str)">
                <Getattr fromlineno="363" tolineno="363" lineno="363" attrname="get_rdependees_str" expr="self">
                  <Name fromlineno="363" tolineno="363" lineno="363" name="self"/>
                </Getattr>
                <Name fromlineno="363" tolineno="363" lineno="363" name="item"/>
              </CallFunc>
              <Discard fromlineno="364" tolineno="364" lineno="364">
                <CallFunc fromlineno="364" tolineno="364" lineno="364" func="Getattr(note)">
                  <Getattr fromlineno="364" tolineno="364" lineno="364" attrname="note" expr="bb.msg">
                    <Getattr fromlineno="364" tolineno="364" lineno="364" attrname="msg" expr="bb">
                      <Name fromlineno="364" tolineno="364" lineno="364" name="bb"/>
                    </Getattr>
                  </Getattr>
                  <Const fromlineno="364" tolineno="364" lineno="364" type="int">2</Const>
                  <Getattr fromlineno="364" tolineno="364" lineno="364" attrname="Provider" expr="bb.msg.domain">
                    <Getattr fromlineno="364" tolineno="364" lineno="364" attrname="domain" expr="bb.msg">
                      <Getattr fromlineno="364" tolineno="364" lineno="364" attrname="msg" expr="bb">
                        <Name fromlineno="364" tolineno="364" lineno="364" name="bb"/>
                      </Getattr>
                    </Getattr>
                  </Getattr>
                  <BinOp fromlineno="364" tolineno="364" lineno="364" op="%" left="&quot;Nothing PROVIDES '%s' (but '%s' DEPENDS on or otherwise requires it)&quot;" right="(item, self.get_dependees_str(item))">
                    <Const fromlineno="364" tolineno="364" lineno="364" type="str">"Nothing PROVIDES '%s' (but '%s' DEPENDS on or otherwise requires it)"</Const>
                    <Tuple fromlineno="364" tolineno="364" lineno="364">
                      <Name fromlineno="364" tolineno="364" lineno="364" name="item"/>
                      <CallFunc fromlineno="364" tolineno="364" lineno="364" func="Getattr(get_dependees_str)">
                        <Getattr fromlineno="364" tolineno="364" lineno="364" attrname="get_dependees_str" expr="self">
                          <Name fromlineno="364" tolineno="364" lineno="364" name="self"/>
                        </Getattr>
                        <Name fromlineno="364" tolineno="364" lineno="364" name="item"/>
                      </CallFunc>
                    </Tuple>
                  </BinOp>
                </CallFunc>
              </Discard>
              <Discard fromlineno="366" tolineno="366" lineno="366">
                <CallFunc fromlineno="366" tolineno="366" lineno="366" func="Getattr(note)">
                  <Getattr fromlineno="366" tolineno="366" lineno="366" attrname="note" expr="bb.msg">
                    <Getattr fromlineno="366" tolineno="366" lineno="366" attrname="msg" expr="bb">
                      <Name fromlineno="366" tolineno="366" lineno="366" name="bb"/>
                    </Getattr>
                  </Getattr>
                  <Const fromlineno="366" tolineno="366" lineno="366" type="int">2</Const>
                  <Getattr fromlineno="366" tolineno="366" lineno="366" attrname="Provider" expr="bb.msg.domain">
                    <Getattr fromlineno="366" tolineno="366" lineno="366" attrname="domain" expr="bb.msg">
                      <Getattr fromlineno="366" tolineno="366" lineno="366" attrname="msg" expr="bb">
                        <Name fromlineno="366" tolineno="366" lineno="366" name="bb"/>
                      </Getattr>
                    </Getattr>
                  </Getattr>
                  <BinOp fromlineno="366" tolineno="366" lineno="366" op="%" left="&quot;Nothing PROVIDES '%s'&quot;" right="item">
                    <Const fromlineno="366" tolineno="366" lineno="366" type="str">"Nothing PROVIDES '%s'"</Const>
                    <Name fromlineno="366" tolineno="366" lineno="366" name="item"/>
                  </BinOp>
                </CallFunc>
              </Discard>
            </If>
            <Discard fromlineno="367" tolineno="367" lineno="367">
              <CallFunc fromlineno="367" tolineno="367" lineno="367" func="Getattr(fire)">
                <Getattr fromlineno="367" tolineno="367" lineno="367" attrname="fire" expr="bb.event">
                  <Getattr fromlineno="367" tolineno="367" lineno="367" attrname="event" expr="bb">
                    <Name fromlineno="367" tolineno="367" lineno="367" name="bb"/>
                  </Getattr>
                </Getattr>
                <CallFunc fromlineno="367" tolineno="367" lineno="367" func="Getattr(NoProvider)">
                  <Getattr fromlineno="367" tolineno="367" lineno="367" attrname="NoProvider" expr="bb.event">
                    <Getattr fromlineno="367" tolineno="367" lineno="367" attrname="event" expr="bb">
                      <Name fromlineno="367" tolineno="367" lineno="367" name="bb"/>
                    </Getattr>
                  </Getattr>
                  <Name fromlineno="367" tolineno="367" lineno="367" name="item"/>
                  <Name fromlineno="367" tolineno="367" lineno="367" name="cfgData"/>
                </CallFunc>
              </CallFunc>
            </Discard>
            <Raise fromlineno="368" tolineno="368" lineno="368">
              <CallFunc fromlineno="368" tolineno="368" lineno="368" func="Getattr(NoProvider)">
                <Getattr fromlineno="368" tolineno="368" lineno="368" attrname="NoProvider" expr="bb.providers">
                  <Getattr fromlineno="368" tolineno="368" lineno="368" attrname="providers" expr="bb">
                    <Name fromlineno="368" tolineno="368" lineno="368" name="bb"/>
                  </Getattr>
                </Getattr>
                <Name fromlineno="368" tolineno="368" lineno="368" name="item"/>
              </CallFunc>
            </Raise>
          </If>
          <If fromlineno="370" tolineno="371" lineno="370">
            <CallFunc fromlineno="370" tolineno="370" lineno="370" func="Getattr(have_build_target)">
              <Getattr fromlineno="370" tolineno="370" lineno="370" attrname="have_build_target" expr="self">
                <Name fromlineno="370" tolineno="370" lineno="370" name="self"/>
              </Getattr>
              <Name fromlineno="370" tolineno="370" lineno="370" name="item"/>
            </CallFunc>
            <Return fromlineno="371" tolineno="371" lineno="371"/>
          </If>
          <Assign fromlineno="373" tolineno="373" lineno="373" targets="[&lt;AssName(all_p) l.373 [bb.taskdata] at Ox9be18ec&gt;]" value="dataCache.providers[item]">
            <AssName fromlineno="373" tolineno="373" lineno="373" name="all_p"/>
            <Subscript fromlineno="373" tolineno="373" lineno="373">
              <Getattr fromlineno="373" tolineno="373" lineno="373" attrname="providers" expr="dataCache">
                <Name fromlineno="373" tolineno="373" lineno="373" name="dataCache"/>
              </Getattr>
              <Index fromlineno="373" tolineno="373" lineno="None">
                <Name fromlineno="373" tolineno="373" lineno="373" name="item"/>
              </Index>
            </Subscript>
          </Assign>
          <Assign fromlineno="375" tolineno="375" lineno="375" targets="[&lt;Tuple(tuple) l.375 [bb.taskdata] at Ox9be1a0c&gt;]" value="bb.providers.filterProviders(all_p, item, cfgData, dataCache)">
            <Tuple fromlineno="375" tolineno="375" lineno="375">
              <AssName fromlineno="375" tolineno="375" lineno="375" name="eligible"/>
              <AssName fromlineno="375" tolineno="375" lineno="375" name="foundUnique"/>
            </Tuple>
            <CallFunc fromlineno="375" tolineno="375" lineno="375" func="Getattr(filterProviders)">
              <Getattr fromlineno="375" tolineno="375" lineno="375" attrname="filterProviders" expr="bb.providers">
                <Getattr fromlineno="375" tolineno="375" lineno="375" attrname="providers" expr="bb">
                  <Name fromlineno="375" tolineno="375" lineno="375" name="bb"/>
                </Getattr>
              </Getattr>
              <Name fromlineno="375" tolineno="375" lineno="375" name="all_p"/>
              <Name fromlineno="375" tolineno="375" lineno="375" name="item"/>
              <Name fromlineno="375" tolineno="375" lineno="375" name="cfgData"/>
              <Name fromlineno="375" tolineno="375" lineno="375" name="dataCache"/>
            </CallFunc>
          </Assign>
          <Assign fromlineno="376" tolineno="376" lineno="376" targets="[&lt;AssName(eligible) l.376 [bb.taskdata] at Ox9be1c2c&gt;]" value="[p for p in eligible if not self.getfn_id(p) in self.failed_fnids]">
            <AssName fromlineno="376" tolineno="376" lineno="376" name="eligible"/>
            <ListComp fromlineno="376" tolineno="376" lineno="376">
              <Name fromlineno="376" tolineno="376" lineno="376" name="p"/>
              <Comprehension fromlineno="376" tolineno="376" lineno="None">
                <AssName fromlineno="376" tolineno="376" lineno="376" name="p"/>
                <Name fromlineno="376" tolineno="376" lineno="376" name="eligible"/>
                <UnaryOp fromlineno="376" tolineno="376" lineno="376">
                  <Compare fromlineno="376" tolineno="376" lineno="376" op="('in', &lt;Getattr(failed_fnids) l.376 [bb.taskdata] at Ox9be1eac&gt;)">
                    <CallFunc fromlineno="376" tolineno="376" lineno="376" func="Getattr(getfn_id)">
                      <Getattr fromlineno="376" tolineno="376" lineno="376" attrname="getfn_id" expr="self">
                        <Name fromlineno="376" tolineno="376" lineno="376" name="self"/>
                      </Getattr>
                      <Name fromlineno="376" tolineno="376" lineno="376" name="p"/>
                    </CallFunc>
                    <Getattr fromlineno="376" tolineno="376" lineno="376" attrname="failed_fnids" expr="self">
                      <Name fromlineno="376" tolineno="376" lineno="376" name="self"/>
                    </Getattr>
                  </Compare>
                </UnaryOp>
              </Comprehension>
            </ListComp>
          </Assign>
          <If fromlineno="378" tolineno="381" lineno="378">
            <UnaryOp fromlineno="378" tolineno="378" lineno="378">
              <Name fromlineno="378" tolineno="378" lineno="378" name="eligible"/>
            </UnaryOp>
            <Discard fromlineno="379" tolineno="379" lineno="379">
              <CallFunc fromlineno="379" tolineno="379" lineno="379" func="Getattr(note)">
                <Getattr fromlineno="379" tolineno="379" lineno="379" attrname="note" expr="bb.msg">
                  <Getattr fromlineno="379" tolineno="379" lineno="379" attrname="msg" expr="bb">
                    <Name fromlineno="379" tolineno="379" lineno="379" name="bb"/>
                  </Getattr>
                </Getattr>
                <Const fromlineno="379" tolineno="379" lineno="379" type="int">2</Const>
                <Getattr fromlineno="379" tolineno="379" lineno="379" attrname="Provider" expr="bb.msg.domain">
                  <Getattr fromlineno="379" tolineno="379" lineno="379" attrname="domain" expr="bb.msg">
                    <Getattr fromlineno="379" tolineno="379" lineno="379" attrname="msg" expr="bb">
                      <Name fromlineno="379" tolineno="379" lineno="379" name="bb"/>
                    </Getattr>
                  </Getattr>
                </Getattr>
                <BinOp fromlineno="379" tolineno="379" lineno="379" op="%" left="&quot;No buildable provider PROVIDES '%s' but '%s' DEPENDS on or otherwise requires it. Enable debugging and see earlier logs to find unbuildable providers.&quot;" right="(item, self.get_dependees_str(item))">
                  <Const fromlineno="379" tolineno="379" lineno="379" type="str">"No buildable provider PROVIDES '%s' but '%s' DEPENDS on or otherwise requires it. Enable debugging and see earlier logs to find unbuildable providers."</Const>
                  <Tuple fromlineno="379" tolineno="379" lineno="379">
                    <Name fromlineno="379" tolineno="379" lineno="379" name="item"/>
                    <CallFunc fromlineno="379" tolineno="379" lineno="379" func="Getattr(get_dependees_str)">
                      <Getattr fromlineno="379" tolineno="379" lineno="379" attrname="get_dependees_str" expr="self">
                        <Name fromlineno="379" tolineno="379" lineno="379" name="self"/>
                      </Getattr>
                      <Name fromlineno="379" tolineno="379" lineno="379" name="item"/>
                    </CallFunc>
                  </Tuple>
                </BinOp>
              </CallFunc>
            </Discard>
            <Discard fromlineno="380" tolineno="380" lineno="380">
              <CallFunc fromlineno="380" tolineno="380" lineno="380" func="Getattr(fire)">
                <Getattr fromlineno="380" tolineno="380" lineno="380" attrname="fire" expr="bb.event">
                  <Getattr fromlineno="380" tolineno="380" lineno="380" attrname="event" expr="bb">
                    <Name fromlineno="380" tolineno="380" lineno="380" name="bb"/>
                  </Getattr>
                </Getattr>
                <CallFunc fromlineno="380" tolineno="380" lineno="380" func="Getattr(NoProvider)">
                  <Getattr fromlineno="380" tolineno="380" lineno="380" attrname="NoProvider" expr="bb.event">
                    <Getattr fromlineno="380" tolineno="380" lineno="380" attrname="event" expr="bb">
                      <Name fromlineno="380" tolineno="380" lineno="380" name="bb"/>
                    </Getattr>
                  </Getattr>
                  <Name fromlineno="380" tolineno="380" lineno="380" name="item"/>
                  <Name fromlineno="380" tolineno="380" lineno="380" name="cfgData"/>
                </CallFunc>
              </CallFunc>
            </Discard>
            <Raise fromlineno="381" tolineno="381" lineno="381">
              <CallFunc fromlineno="381" tolineno="381" lineno="381" func="Getattr(NoProvider)">
                <Getattr fromlineno="381" tolineno="381" lineno="381" attrname="NoProvider" expr="bb.providers">
                  <Getattr fromlineno="381" tolineno="381" lineno="381" attrname="providers" expr="bb">
                    <Name fromlineno="381" tolineno="381" lineno="381" name="bb"/>
                  </Getattr>
                </Getattr>
                <Name fromlineno="381" tolineno="381" lineno="381" name="item"/>
              </CallFunc>
            </Raise>
          </If>
          <If fromlineno="383" tolineno="391" lineno="383">
            <BoolOp fromlineno="383" tolineno="383" lineno="383" op="and" values="len(eligible) &gt; 1,foundUnique == False,">
              <Compare fromlineno="383" tolineno="383" lineno="383" op="('&gt;', &lt;Const(int) l.383 [bb.taskdata] at Ox9be55ec&gt;)">
                <CallFunc fromlineno="383" tolineno="383" lineno="383" func="Name(len)">
                  <Name fromlineno="383" tolineno="383" lineno="383" name="len"/>
                  <Name fromlineno="383" tolineno="383" lineno="383" name="eligible"/>
                </CallFunc>
                <Const fromlineno="383" tolineno="383" lineno="383" type="int">1</Const>
              </Compare>
              <Compare fromlineno="383" tolineno="383" lineno="383" op="('==', &lt;Const(bool) l.383 [bb.taskdata] at Ox9be568c&gt;)">
                <Name fromlineno="383" tolineno="383" lineno="383" name="foundUnique"/>
                <Const fromlineno="383" tolineno="383" lineno="383" type="bool">False</Const>
              </Compare>
            </BoolOp>
            <If fromlineno="384" tolineno="390" lineno="384">
              <Compare fromlineno="384" tolineno="384" lineno="384" op="('not in', &lt;Getattr(consider_msgs_cache) l.384 [bb.taskdata] at Ox9be578c&gt;)">
                <Name fromlineno="384" tolineno="384" lineno="384" name="item"/>
                <Getattr fromlineno="384" tolineno="384" lineno="384" attrname="consider_msgs_cache" expr="self">
                  <Name fromlineno="384" tolineno="384" lineno="384" name="self"/>
                </Getattr>
              </Compare>
              <Assign fromlineno="385" tolineno="385" lineno="385" targets="[&lt;AssName(providers_list) l.385 [bb.taskdata] at Ox9be584c&gt;]" value="[]">
                <AssName fromlineno="385" tolineno="385" lineno="385" name="providers_list"/>
                <List fromlineno="385" tolineno="385" lineno="385"/>
              </Assign>
              <For fromlineno="386" tolineno="387" lineno="386">
                <AssName fromlineno="386" tolineno="386" lineno="386" name="fn"/>
                <Name fromlineno="386" tolineno="386" lineno="386" name="eligible"/>
                <Discard fromlineno="387" tolineno="387" lineno="387">
                  <CallFunc fromlineno="387" tolineno="387" lineno="387" func="Getattr(append)">
                    <Getattr fromlineno="387" tolineno="387" lineno="387" attrname="append" expr="providers_list">
                      <Name fromlineno="387" tolineno="387" lineno="387" name="providers_list"/>
                    </Getattr>
                    <Subscript fromlineno="387" tolineno="387" lineno="387">
                      <Getattr fromlineno="387" tolineno="387" lineno="387" attrname="pkg_fn" expr="dataCache">
                        <Name fromlineno="387" tolineno="387" lineno="387" name="dataCache"/>
                      </Getattr>
                      <Index fromlineno="387" tolineno="387" lineno="None">
                        <Name fromlineno="387" tolineno="387" lineno="387" name="fn"/>
                      </Index>
                    </Subscript>
                  </CallFunc>
                </Discard>
              </For>
              <Discard fromlineno="388" tolineno="388" lineno="388">
                <CallFunc fromlineno="388" tolineno="388" lineno="388" func="Getattr(note)">
                  <Getattr fromlineno="388" tolineno="388" lineno="388" attrname="note" expr="bb.msg">
                    <Getattr fromlineno="388" tolineno="388" lineno="388" attrname="msg" expr="bb">
                      <Name fromlineno="388" tolineno="388" lineno="388" name="bb"/>
                    </Getattr>
                  </Getattr>
                  <Const fromlineno="388" tolineno="388" lineno="388" type="int">1</Const>
                  <Getattr fromlineno="388" tolineno="388" lineno="388" attrname="Provider" expr="bb.msg.domain">
                    <Getattr fromlineno="388" tolineno="388" lineno="388" attrname="domain" expr="bb.msg">
                      <Getattr fromlineno="388" tolineno="388" lineno="388" attrname="msg" expr="bb">
                        <Name fromlineno="388" tolineno="388" lineno="388" name="bb"/>
                      </Getattr>
                    </Getattr>
                  </Getattr>
                  <BinOp fromlineno="388" tolineno="388" lineno="388" op="%" left="'multiple providers are available for %s (%s);'" right="(item, ', '.join(providers_list))">
                    <Const fromlineno="388" tolineno="388" lineno="388" type="str">'multiple providers are available for %s (%s);'</Const>
                    <Tuple fromlineno="388" tolineno="388" lineno="388">
                      <Name fromlineno="388" tolineno="388" lineno="388" name="item"/>
                      <CallFunc fromlineno="388" tolineno="388" lineno="388" func="Getattr(join)">
                        <Getattr fromlineno="388" tolineno="388" lineno="388" attrname="join" expr="', '">
                          <Const fromlineno="388" tolineno="388" lineno="388" type="str">', '</Const>
                        </Getattr>
                        <Name fromlineno="388" tolineno="388" lineno="388" name="providers_list"/>
                      </CallFunc>
                    </Tuple>
                  </BinOp>
                </CallFunc>
              </Discard>
              <Discard fromlineno="389" tolineno="389" lineno="389">
                <CallFunc fromlineno="389" tolineno="389" lineno="389" func="Getattr(note)">
                  <Getattr fromlineno="389" tolineno="389" lineno="389" attrname="note" expr="bb.msg">
                    <Getattr fromlineno="389" tolineno="389" lineno="389" attrname="msg" expr="bb">
                      <Name fromlineno="389" tolineno="389" lineno="389" name="bb"/>
                    </Getattr>
                  </Getattr>
                  <Const fromlineno="389" tolineno="389" lineno="389" type="int">1</Const>
                  <Getattr fromlineno="389" tolineno="389" lineno="389" attrname="Provider" expr="bb.msg.domain">
                    <Getattr fromlineno="389" tolineno="389" lineno="389" attrname="domain" expr="bb.msg">
                      <Getattr fromlineno="389" tolineno="389" lineno="389" attrname="msg" expr="bb">
                        <Name fromlineno="389" tolineno="389" lineno="389" name="bb"/>
                      </Getattr>
                    </Getattr>
                  </Getattr>
                  <BinOp fromlineno="389" tolineno="389" lineno="389" op="%" left="'consider defining PREFERRED_PROVIDER_%s'" right="item">
                    <Const fromlineno="389" tolineno="389" lineno="389" type="str">'consider defining PREFERRED_PROVIDER_%s'</Const>
                    <Name fromlineno="389" tolineno="389" lineno="389" name="item"/>
                  </BinOp>
                </CallFunc>
              </Discard>
              <Discard fromlineno="390" tolineno="390" lineno="390">
                <CallFunc fromlineno="390" tolineno="390" lineno="390" func="Getattr(fire)">
                  <Getattr fromlineno="390" tolineno="390" lineno="390" attrname="fire" expr="bb.event">
                    <Getattr fromlineno="390" tolineno="390" lineno="390" attrname="event" expr="bb">
                      <Name fromlineno="390" tolineno="390" lineno="390" name="bb"/>
                    </Getattr>
                  </Getattr>
                  <CallFunc fromlineno="390" tolineno="390" lineno="390" func="Getattr(MultipleProviders)">
                    <Getattr fromlineno="390" tolineno="390" lineno="390" attrname="MultipleProviders" expr="bb.event">
                      <Getattr fromlineno="390" tolineno="390" lineno="390" attrname="event" expr="bb">
                        <Name fromlineno="390" tolineno="390" lineno="390" name="bb"/>
                      </Getattr>
                    </Getattr>
                    <Name fromlineno="390" tolineno="390" lineno="390" name="item"/>
                    <Name fromlineno="390" tolineno="390" lineno="390" name="providers_list"/>
                    <Name fromlineno="390" tolineno="390" lineno="390" name="cfgData"/>
                  </CallFunc>
                </CallFunc>
              </Discard>
            </If>
            <Discard fromlineno="391" tolineno="391" lineno="391">
              <CallFunc fromlineno="391" tolineno="391" lineno="391" func="Getattr(append)">
                <Getattr fromlineno="391" tolineno="391" lineno="391" attrname="append" expr="self.consider_msgs_cache">
                  <Getattr fromlineno="391" tolineno="391" lineno="391" attrname="consider_msgs_cache" expr="self">
                    <Name fromlineno="391" tolineno="391" lineno="391" name="self"/>
                  </Getattr>
                </Getattr>
                <Name fromlineno="391" tolineno="391" lineno="391" name="item"/>
              </CallFunc>
            </Discard>
          </If>
          <For fromlineno="393" tolineno="399" lineno="393">
            <AssName fromlineno="393" tolineno="393" lineno="393" name="fn"/>
            <Name fromlineno="393" tolineno="393" lineno="393" name="eligible"/>
            <Assign fromlineno="394" tolineno="394" lineno="394" targets="[&lt;AssName(fnid) l.394 [bb.taskdata] at Ox9bea2ac&gt;]" value="self.getfn_id(fn)">
              <AssName fromlineno="394" tolineno="394" lineno="394" name="fnid"/>
              <CallFunc fromlineno="394" tolineno="394" lineno="394" func="Getattr(getfn_id)">
                <Getattr fromlineno="394" tolineno="394" lineno="394" attrname="getfn_id" expr="self">
                  <Name fromlineno="394" tolineno="394" lineno="394" name="self"/>
                </Getattr>
                <Name fromlineno="394" tolineno="394" lineno="394" name="fn"/>
              </CallFunc>
            </Assign>
            <If fromlineno="395" tolineno="396" lineno="395">
              <Compare fromlineno="395" tolineno="395" lineno="395" op="('in', &lt;Getattr(failed_fnids) l.395 [bb.taskdata] at Ox9bea42c&gt;)">
                <Name fromlineno="395" tolineno="395" lineno="395" name="fnid"/>
                <Getattr fromlineno="395" tolineno="395" lineno="395" attrname="failed_fnids" expr="self">
                  <Name fromlineno="395" tolineno="395" lineno="395" name="self"/>
                </Getattr>
              </Compare>
              <Continue fromlineno="396" tolineno="396" lineno="396"/>
            </If>
            <Discard fromlineno="397" tolineno="397" lineno="397">
              <CallFunc fromlineno="397" tolineno="397" lineno="397" func="Getattr(debug)">
                <Getattr fromlineno="397" tolineno="397" lineno="397" attrname="debug" expr="bb.msg">
                  <Getattr fromlineno="397" tolineno="397" lineno="397" attrname="msg" expr="bb">
                    <Name fromlineno="397" tolineno="397" lineno="397" name="bb"/>
                  </Getattr>
                </Getattr>
                <Const fromlineno="397" tolineno="397" lineno="397" type="int">2</Const>
                <Getattr fromlineno="397" tolineno="397" lineno="397" attrname="Provider" expr="bb.msg.domain">
                  <Getattr fromlineno="397" tolineno="397" lineno="397" attrname="domain" expr="bb.msg">
                    <Getattr fromlineno="397" tolineno="397" lineno="397" attrname="msg" expr="bb">
                      <Name fromlineno="397" tolineno="397" lineno="397" name="bb"/>
                    </Getattr>
                  </Getattr>
                </Getattr>
                <BinOp fromlineno="397" tolineno="397" lineno="397" op="%" left="'adding %s to satisfy %s'" right="(fn, item)">
                  <Const fromlineno="397" tolineno="397" lineno="397" type="str">'adding %s to satisfy %s'</Const>
                  <Tuple fromlineno="397" tolineno="397" lineno="397">
                    <Name fromlineno="397" tolineno="397" lineno="397" name="fn"/>
                    <Name fromlineno="397" tolineno="397" lineno="397" name="item"/>
                  </Tuple>
                </BinOp>
              </CallFunc>
            </Discard>
            <Discard fromlineno="398" tolineno="398" lineno="398">
              <CallFunc fromlineno="398" tolineno="398" lineno="398" func="Getattr(add_build_target)">
                <Getattr fromlineno="398" tolineno="398" lineno="398" attrname="add_build_target" expr="self">
                  <Name fromlineno="398" tolineno="398" lineno="398" name="self"/>
                </Getattr>
                <Name fromlineno="398" tolineno="398" lineno="398" name="fn"/>
                <Name fromlineno="398" tolineno="398" lineno="398" name="item"/>
              </CallFunc>
            </Discard>
            <Discard fromlineno="399" tolineno="399" lineno="399">
              <CallFunc fromlineno="399" tolineno="399" lineno="399" func="Getattr(add_tasks)">
                <Getattr fromlineno="399" tolineno="399" lineno="399" attrname="add_tasks" expr="self">
                  <Name fromlineno="399" tolineno="399" lineno="399" name="self"/>
                </Getattr>
                <Name fromlineno="399" tolineno="399" lineno="399" name="fn"/>
                <Name fromlineno="399" tolineno="399" lineno="399" name="dataCache"/>
              </CallFunc>
            </Discard>
          </For>
        </Function>
        <Function fromlineno="404" tolineno="458" lineno="404">
          <Arguments fromlineno="404" tolineno="404" lineno="None" format_args="self, cfgData, dataCache, item">
            <AssName fromlineno="404" tolineno="404" lineno="404" name="self"/>
            <AssName fromlineno="404" tolineno="404" lineno="404" name="cfgData"/>
            <AssName fromlineno="404" tolineno="404" lineno="404" name="dataCache"/>
            <AssName fromlineno="404" tolineno="404" lineno="404" name="item"/>
          </Arguments>
          <If fromlineno="410" tolineno="411" lineno="410">
            <Compare fromlineno="410" tolineno="410" lineno="410" op="('in', &lt;Getattr(ignored_dependencies) l.410 [bb.taskdata] at Ox9beaacc&gt;)">
              <Name fromlineno="410" tolineno="410" lineno="410" name="item"/>
              <Getattr fromlineno="410" tolineno="410" lineno="410" attrname="ignored_dependencies" expr="dataCache">
                <Name fromlineno="410" tolineno="410" lineno="410" name="dataCache"/>
              </Getattr>
            </Compare>
            <Return fromlineno="411" tolineno="411" lineno="411"/>
          </If>
          <If fromlineno="413" tolineno="414" lineno="413">
            <CallFunc fromlineno="413" tolineno="413" lineno="413" func="Getattr(have_runtime_target)">
              <Getattr fromlineno="413" tolineno="413" lineno="413" attrname="have_runtime_target" expr="self">
                <Name fromlineno="413" tolineno="413" lineno="413" name="self"/>
              </Getattr>
              <Name fromlineno="413" tolineno="413" lineno="413" name="item"/>
            </CallFunc>
            <Return fromlineno="414" tolineno="414" lineno="414"/>
          </If>
          <Assign fromlineno="416" tolineno="416" lineno="416" targets="[&lt;AssName(all_p) l.416 [bb.taskdata] at Ox9beaccc&gt;]" value="bb.providers.getRuntimeProviders(dataCache, item)">
            <AssName fromlineno="416" tolineno="416" lineno="416" name="all_p"/>
            <CallFunc fromlineno="416" tolineno="416" lineno="416" func="Getattr(getRuntimeProviders)">
              <Getattr fromlineno="416" tolineno="416" lineno="416" attrname="getRuntimeProviders" expr="bb.providers">
                <Getattr fromlineno="416" tolineno="416" lineno="416" attrname="providers" expr="bb">
                  <Name fromlineno="416" tolineno="416" lineno="416" name="bb"/>
                </Getattr>
              </Getattr>
              <Name fromlineno="416" tolineno="416" lineno="416" name="dataCache"/>
              <Name fromlineno="416" tolineno="416" lineno="416" name="item"/>
            </CallFunc>
          </Assign>
          <If fromlineno="418" tolineno="421" lineno="418">
            <UnaryOp fromlineno="418" tolineno="418" lineno="418">
              <Name fromlineno="418" tolineno="418" lineno="418" name="all_p"/>
            </UnaryOp>
            <Discard fromlineno="419" tolineno="419" lineno="419">
              <CallFunc fromlineno="419" tolineno="419" lineno="419" func="Getattr(error)">
                <Getattr fromlineno="419" tolineno="419" lineno="419" attrname="error" expr="bb.msg">
                  <Getattr fromlineno="419" tolineno="419" lineno="419" attrname="msg" expr="bb">
                    <Name fromlineno="419" tolineno="419" lineno="419" name="bb"/>
                  </Getattr>
                </Getattr>
                <Getattr fromlineno="419" tolineno="419" lineno="419" attrname="Provider" expr="bb.msg.domain">
                  <Getattr fromlineno="419" tolineno="419" lineno="419" attrname="domain" expr="bb.msg">
                    <Getattr fromlineno="419" tolineno="419" lineno="419" attrname="msg" expr="bb">
                      <Name fromlineno="419" tolineno="419" lineno="419" name="bb"/>
                    </Getattr>
                  </Getattr>
                </Getattr>
                <BinOp fromlineno="419" tolineno="419" lineno="419" op="%" left="&quot;'%s' RDEPENDS/RRECOMMENDS or otherwise requires the runtime entity '%s' but it wasn't found in any PACKAGE or RPROVIDES variables&quot;" right="(self.get_rdependees_str(item), item)">
                  <Const fromlineno="419" tolineno="419" lineno="419" type="str">"'%s' RDEPENDS/RRECOMMENDS or otherwise requires the runtime entity '%s' but it wasn't found in any PACKAGE or RPROVIDES variables"</Const>
                  <Tuple fromlineno="419" tolineno="419" lineno="419">
                    <CallFunc fromlineno="419" tolineno="419" lineno="419" func="Getattr(get_rdependees_str)">
                      <Getattr fromlineno="419" tolineno="419" lineno="419" attrname="get_rdependees_str" expr="self">
                        <Name fromlineno="419" tolineno="419" lineno="419" name="self"/>
                      </Getattr>
                      <Name fromlineno="419" tolineno="419" lineno="419" name="item"/>
                    </CallFunc>
                    <Name fromlineno="419" tolineno="419" lineno="419" name="item"/>
                  </Tuple>
                </BinOp>
              </CallFunc>
            </Discard>
            <Discard fromlineno="420" tolineno="420" lineno="420">
              <CallFunc fromlineno="420" tolineno="420" lineno="420" func="Getattr(fire)">
                <Getattr fromlineno="420" tolineno="420" lineno="420" attrname="fire" expr="bb.event">
                  <Getattr fromlineno="420" tolineno="420" lineno="420" attrname="event" expr="bb">
                    <Name fromlineno="420" tolineno="420" lineno="420" name="bb"/>
                  </Getattr>
                </Getattr>
                <CallFunc fromlineno="420" tolineno="420" lineno="420" func="Getattr(NoProvider)">
                  <Getattr fromlineno="420" tolineno="420" lineno="420" attrname="NoProvider" expr="bb.event">
                    <Getattr fromlineno="420" tolineno="420" lineno="420" attrname="event" expr="bb">
                      <Name fromlineno="420" tolineno="420" lineno="420" name="bb"/>
                    </Getattr>
                  </Getattr>
                  <Name fromlineno="420" tolineno="420" lineno="420" name="item"/>
                  <Name fromlineno="420" tolineno="420" lineno="420" name="cfgData"/>
                  <Keyword fromlineno="420" tolineno="420" lineno="None">
                    <Const fromlineno="420" tolineno="420" lineno="420" type="bool">True</Const>
                  </Keyword>
                </CallFunc>
              </CallFunc>
            </Discard>
            <Raise fromlineno="421" tolineno="421" lineno="421">
              <CallFunc fromlineno="421" tolineno="421" lineno="421" func="Getattr(NoRProvider)">
                <Getattr fromlineno="421" tolineno="421" lineno="421" attrname="NoRProvider" expr="bb.providers">
                  <Getattr fromlineno="421" tolineno="421" lineno="421" attrname="providers" expr="bb">
                    <Name fromlineno="421" tolineno="421" lineno="421" name="bb"/>
                  </Getattr>
                </Getattr>
                <Name fromlineno="421" tolineno="421" lineno="421" name="item"/>
              </CallFunc>
            </Raise>
          </If>
          <Assign fromlineno="423" tolineno="423" lineno="423" targets="[&lt;Tuple(tuple) l.423 [bb.taskdata] at Ox9bee42c&gt;]" value="bb.providers.filterProvidersRunTime(all_p, item, cfgData, dataCache)">
            <Tuple fromlineno="423" tolineno="423" lineno="423">
              <AssName fromlineno="423" tolineno="423" lineno="423" name="eligible"/>
              <AssName fromlineno="423" tolineno="423" lineno="423" name="numberPreferred"/>
            </Tuple>
            <CallFunc fromlineno="423" tolineno="423" lineno="423" func="Getattr(filterProvidersRunTime)">
              <Getattr fromlineno="423" tolineno="423" lineno="423" attrname="filterProvidersRunTime" expr="bb.providers">
                <Getattr fromlineno="423" tolineno="423" lineno="423" attrname="providers" expr="bb">
                  <Name fromlineno="423" tolineno="423" lineno="423" name="bb"/>
                </Getattr>
              </Getattr>
              <Name fromlineno="423" tolineno="423" lineno="423" name="all_p"/>
              <Name fromlineno="423" tolineno="423" lineno="423" name="item"/>
              <Name fromlineno="423" tolineno="423" lineno="423" name="cfgData"/>
              <Name fromlineno="423" tolineno="423" lineno="423" name="dataCache"/>
            </CallFunc>
          </Assign>
          <Assign fromlineno="424" tolineno="424" lineno="424" targets="[&lt;AssName(eligible) l.424 [bb.taskdata] at Ox9bee64c&gt;]" value="[p for p in eligible if not self.getfn_id(p) in self.failed_fnids]">
            <AssName fromlineno="424" tolineno="424" lineno="424" name="eligible"/>
            <ListComp fromlineno="424" tolineno="424" lineno="424">
              <Name fromlineno="424" tolineno="424" lineno="424" name="p"/>
              <Comprehension fromlineno="424" tolineno="424" lineno="None">
                <AssName fromlineno="424" tolineno="424" lineno="424" name="p"/>
                <Name fromlineno="424" tolineno="424" lineno="424" name="eligible"/>
                <UnaryOp fromlineno="424" tolineno="424" lineno="424">
                  <Compare fromlineno="424" tolineno="424" lineno="424" op="('in', &lt;Getattr(failed_fnids) l.424 [bb.taskdata] at Ox9bee8cc&gt;)">
                    <CallFunc fromlineno="424" tolineno="424" lineno="424" func="Getattr(getfn_id)">
                      <Getattr fromlineno="424" tolineno="424" lineno="424" attrname="getfn_id" expr="self">
                        <Name fromlineno="424" tolineno="424" lineno="424" name="self"/>
                      </Getattr>
                      <Name fromlineno="424" tolineno="424" lineno="424" name="p"/>
                    </CallFunc>
                    <Getattr fromlineno="424" tolineno="424" lineno="424" attrname="failed_fnids" expr="self">
                      <Name fromlineno="424" tolineno="424" lineno="424" name="self"/>
                    </Getattr>
                  </Compare>
                </UnaryOp>
              </Comprehension>
            </ListComp>
          </Assign>
          <If fromlineno="426" tolineno="429" lineno="426">
            <UnaryOp fromlineno="426" tolineno="426" lineno="426">
              <Name fromlineno="426" tolineno="426" lineno="426" name="eligible"/>
            </UnaryOp>
            <Discard fromlineno="427" tolineno="427" lineno="427">
              <CallFunc fromlineno="427" tolineno="427" lineno="427" func="Getattr(error)">
                <Getattr fromlineno="427" tolineno="427" lineno="427" attrname="error" expr="bb.msg">
                  <Getattr fromlineno="427" tolineno="427" lineno="427" attrname="msg" expr="bb">
                    <Name fromlineno="427" tolineno="427" lineno="427" name="bb"/>
                  </Getattr>
                </Getattr>
                <Getattr fromlineno="427" tolineno="427" lineno="427" attrname="Provider" expr="bb.msg.domain">
                  <Getattr fromlineno="427" tolineno="427" lineno="427" attrname="domain" expr="bb.msg">
                    <Getattr fromlineno="427" tolineno="427" lineno="427" attrname="msg" expr="bb">
                      <Name fromlineno="427" tolineno="427" lineno="427" name="bb"/>
                    </Getattr>
                  </Getattr>
                </Getattr>
                <BinOp fromlineno="427" tolineno="427" lineno="427" op="%" left="&quot;'%s' RDEPENDS/RRECOMMENDS or otherwise requires the runtime entity '%s' but it wasn't found in any PACKAGE or RPROVIDES variables of any buildable targets.\nEnable debugging and see earlier logs to find unbuildable targets.&quot;" right="(self.get_rdependees_str(item), item)">
                  <Const fromlineno="427" tolineno="427" lineno="427" type="str">"'%s' RDEPENDS/RRECOMMENDS or otherwise requires the runtime entity '%s' but it wasn't found in any PACKAGE or RPROVIDES variables of any buildable targets.\nEnable debugging and see earlier logs to find unbuildable targets."</Const>
                  <Tuple fromlineno="427" tolineno="427" lineno="427">
                    <CallFunc fromlineno="427" tolineno="427" lineno="427" func="Getattr(get_rdependees_str)">
                      <Getattr fromlineno="427" tolineno="427" lineno="427" attrname="get_rdependees_str" expr="self">
                        <Name fromlineno="427" tolineno="427" lineno="427" name="self"/>
                      </Getattr>
                      <Name fromlineno="427" tolineno="427" lineno="427" name="item"/>
                    </CallFunc>
                    <Name fromlineno="427" tolineno="427" lineno="427" name="item"/>
                  </Tuple>
                </BinOp>
              </CallFunc>
            </Discard>
            <Discard fromlineno="428" tolineno="428" lineno="428">
              <CallFunc fromlineno="428" tolineno="428" lineno="428" func="Getattr(fire)">
                <Getattr fromlineno="428" tolineno="428" lineno="428" attrname="fire" expr="bb.event">
                  <Getattr fromlineno="428" tolineno="428" lineno="428" attrname="event" expr="bb">
                    <Name fromlineno="428" tolineno="428" lineno="428" name="bb"/>
                  </Getattr>
                </Getattr>
                <CallFunc fromlineno="428" tolineno="428" lineno="428" func="Getattr(NoProvider)">
                  <Getattr fromlineno="428" tolineno="428" lineno="428" attrname="NoProvider" expr="bb.event">
                    <Getattr fromlineno="428" tolineno="428" lineno="428" attrname="event" expr="bb">
                      <Name fromlineno="428" tolineno="428" lineno="428" name="bb"/>
                    </Getattr>
                  </Getattr>
                  <Name fromlineno="428" tolineno="428" lineno="428" name="item"/>
                  <Name fromlineno="428" tolineno="428" lineno="428" name="cfgData"/>
                  <Keyword fromlineno="428" tolineno="428" lineno="None">
                    <Const fromlineno="428" tolineno="428" lineno="428" type="bool">True</Const>
                  </Keyword>
                </CallFunc>
              </CallFunc>
            </Discard>
            <Raise fromlineno="429" tolineno="429" lineno="429">
              <CallFunc fromlineno="429" tolineno="429" lineno="429" func="Getattr(NoRProvider)">
                <Getattr fromlineno="429" tolineno="429" lineno="429" attrname="NoRProvider" expr="bb.providers">
                  <Getattr fromlineno="429" tolineno="429" lineno="429" attrname="providers" expr="bb">
                    <Name fromlineno="429" tolineno="429" lineno="429" name="bb"/>
                  </Getattr>
                </Getattr>
                <Name fromlineno="429" tolineno="429" lineno="429" name="item"/>
              </CallFunc>
            </Raise>
          </If>
          <If fromlineno="431" tolineno="439" lineno="431">
            <BoolOp fromlineno="431" tolineno="431" lineno="431" op="and" values="len(eligible) &gt; 1,numberPreferred == 0,">
              <Compare fromlineno="431" tolineno="431" lineno="431" op="('&gt;', &lt;Const(int) l.431 [bb.taskdata] at Ox9bf202c&gt;)">
                <CallFunc fromlineno="431" tolineno="431" lineno="431" func="Name(len)">
                  <Name fromlineno="431" tolineno="431" lineno="431" name="len"/>
                  <Name fromlineno="431" tolineno="431" lineno="431" name="eligible"/>
                </CallFunc>
                <Const fromlineno="431" tolineno="431" lineno="431" type="int">1</Const>
              </Compare>
              <Compare fromlineno="431" tolineno="431" lineno="431" op="('==', &lt;Const(int) l.431 [bb.taskdata] at Ox9bf20cc&gt;)">
                <Name fromlineno="431" tolineno="431" lineno="431" name="numberPreferred"/>
                <Const fromlineno="431" tolineno="431" lineno="431" type="int">0</Const>
              </Compare>
            </BoolOp>
            <If fromlineno="432" tolineno="438" lineno="432">
              <Compare fromlineno="432" tolineno="432" lineno="432" op="('not in', &lt;Getattr(consider_msgs_cache) l.432 [bb.taskdata] at Ox9bf21cc&gt;)">
                <Name fromlineno="432" tolineno="432" lineno="432" name="item"/>
                <Getattr fromlineno="432" tolineno="432" lineno="432" attrname="consider_msgs_cache" expr="self">
                  <Name fromlineno="432" tolineno="432" lineno="432" name="self"/>
                </Getattr>
              </Compare>
              <Assign fromlineno="433" tolineno="433" lineno="433" targets="[&lt;AssName(providers_list) l.433 [bb.taskdata] at Ox9bf228c&gt;]" value="[]">
                <AssName fromlineno="433" tolineno="433" lineno="433" name="providers_list"/>
                <List fromlineno="433" tolineno="433" lineno="433"/>
              </Assign>
              <For fromlineno="434" tolineno="435" lineno="434">
                <AssName fromlineno="434" tolineno="434" lineno="434" name="fn"/>
                <Name fromlineno="434" tolineno="434" lineno="434" name="eligible"/>
                <Discard fromlineno="435" tolineno="435" lineno="435">
                  <CallFunc fromlineno="435" tolineno="435" lineno="435" func="Getattr(append)">
                    <Getattr fromlineno="435" tolineno="435" lineno="435" attrname="append" expr="providers_list">
                      <Name fromlineno="435" tolineno="435" lineno="435" name="providers_list"/>
                    </Getattr>
                    <Subscript fromlineno="435" tolineno="435" lineno="435">
                      <Getattr fromlineno="435" tolineno="435" lineno="435" attrname="pkg_fn" expr="dataCache">
                        <Name fromlineno="435" tolineno="435" lineno="435" name="dataCache"/>
                      </Getattr>
                      <Index fromlineno="435" tolineno="435" lineno="None">
                        <Name fromlineno="435" tolineno="435" lineno="435" name="fn"/>
                      </Index>
                    </Subscript>
                  </CallFunc>
                </Discard>
              </For>
              <Discard fromlineno="436" tolineno="436" lineno="436">
                <CallFunc fromlineno="436" tolineno="436" lineno="436" func="Getattr(note)">
                  <Getattr fromlineno="436" tolineno="436" lineno="436" attrname="note" expr="bb.msg">
                    <Getattr fromlineno="436" tolineno="436" lineno="436" attrname="msg" expr="bb">
                      <Name fromlineno="436" tolineno="436" lineno="436" name="bb"/>
                    </Getattr>
                  </Getattr>
                  <Const fromlineno="436" tolineno="436" lineno="436" type="int">2</Const>
                  <Getattr fromlineno="436" tolineno="436" lineno="436" attrname="Provider" expr="bb.msg.domain">
                    <Getattr fromlineno="436" tolineno="436" lineno="436" attrname="domain" expr="bb.msg">
                      <Getattr fromlineno="436" tolineno="436" lineno="436" attrname="msg" expr="bb">
                        <Name fromlineno="436" tolineno="436" lineno="436" name="bb"/>
                      </Getattr>
                    </Getattr>
                  </Getattr>
                  <BinOp fromlineno="436" tolineno="436" lineno="436" op="%" left="'multiple providers are available for runtime %s (%s);'" right="(item, ', '.join(providers_list))">
                    <Const fromlineno="436" tolineno="436" lineno="436" type="str">'multiple providers are available for runtime %s (%s);'</Const>
                    <Tuple fromlineno="436" tolineno="436" lineno="436">
                      <Name fromlineno="436" tolineno="436" lineno="436" name="item"/>
                      <CallFunc fromlineno="436" tolineno="436" lineno="436" func="Getattr(join)">
                        <Getattr fromlineno="436" tolineno="436" lineno="436" attrname="join" expr="', '">
                          <Const fromlineno="436" tolineno="436" lineno="436" type="str">', '</Const>
                        </Getattr>
                        <Name fromlineno="436" tolineno="436" lineno="436" name="providers_list"/>
                      </CallFunc>
                    </Tuple>
                  </BinOp>
                </CallFunc>
              </Discard>
              <Discard fromlineno="437" tolineno="437" lineno="437">
                <CallFunc fromlineno="437" tolineno="437" lineno="437" func="Getattr(note)">
                  <Getattr fromlineno="437" tolineno="437" lineno="437" attrname="note" expr="bb.msg">
                    <Getattr fromlineno="437" tolineno="437" lineno="437" attrname="msg" expr="bb">
                      <Name fromlineno="437" tolineno="437" lineno="437" name="bb"/>
                    </Getattr>
                  </Getattr>
                  <Const fromlineno="437" tolineno="437" lineno="437" type="int">2</Const>
                  <Getattr fromlineno="437" tolineno="437" lineno="437" attrname="Provider" expr="bb.msg.domain">
                    <Getattr fromlineno="437" tolineno="437" lineno="437" attrname="domain" expr="bb.msg">
                      <Getattr fromlineno="437" tolineno="437" lineno="437" attrname="msg" expr="bb">
                        <Name fromlineno="437" tolineno="437" lineno="437" name="bb"/>
                      </Getattr>
                    </Getattr>
                  </Getattr>
                  <BinOp fromlineno="437" tolineno="437" lineno="437" op="%" left="'consider defining a PREFERRED_PROVIDER entry to match runtime %s'" right="item">
                    <Const fromlineno="437" tolineno="437" lineno="437" type="str">'consider defining a PREFERRED_PROVIDER entry to match runtime %s'</Const>
                    <Name fromlineno="437" tolineno="437" lineno="437" name="item"/>
                  </BinOp>
                </CallFunc>
              </Discard>
              <Discard fromlineno="438" tolineno="438" lineno="438">
                <CallFunc fromlineno="438" tolineno="438" lineno="438" func="Getattr(fire)">
                  <Getattr fromlineno="438" tolineno="438" lineno="438" attrname="fire" expr="bb.event">
                    <Getattr fromlineno="438" tolineno="438" lineno="438" attrname="event" expr="bb">
                      <Name fromlineno="438" tolineno="438" lineno="438" name="bb"/>
                    </Getattr>
                  </Getattr>
                  <CallFunc fromlineno="438" tolineno="438" lineno="438" func="Getattr(MultipleProviders)">
                    <Getattr fromlineno="438" tolineno="438" lineno="438" attrname="MultipleProviders" expr="bb.event">
                      <Getattr fromlineno="438" tolineno="438" lineno="438" attrname="event" expr="bb">
                        <Name fromlineno="438" tolineno="438" lineno="438" name="bb"/>
                      </Getattr>
                    </Getattr>
                    <Name fromlineno="438" tolineno="438" lineno="438" name="item"/>
                    <Name fromlineno="438" tolineno="438" lineno="438" name="providers_list"/>
                    <Name fromlineno="438" tolineno="438" lineno="438" name="cfgData"/>
                    <Keyword fromlineno="438" tolineno="438" lineno="None">
                      <Const fromlineno="438" tolineno="438" lineno="438" type="bool">True</Const>
                    </Keyword>
                  </CallFunc>
                </CallFunc>
              </Discard>
            </If>
            <Discard fromlineno="439" tolineno="439" lineno="439">
              <CallFunc fromlineno="439" tolineno="439" lineno="439" func="Getattr(append)">
                <Getattr fromlineno="439" tolineno="439" lineno="439" attrname="append" expr="self.consider_msgs_cache">
                  <Getattr fromlineno="439" tolineno="439" lineno="439" attrname="consider_msgs_cache" expr="self">
                    <Name fromlineno="439" tolineno="439" lineno="439" name="self"/>
                  </Getattr>
                </Getattr>
                <Name fromlineno="439" tolineno="439" lineno="439" name="item"/>
              </CallFunc>
            </Discard>
          </If>
          <If fromlineno="441" tolineno="449" lineno="441">
            <Compare fromlineno="441" tolineno="441" lineno="441" op="('&gt;', &lt;Const(int) l.441 [bb.taskdata] at Ox9bf2ccc&gt;)">
              <Name fromlineno="441" tolineno="441" lineno="441" name="numberPreferred"/>
              <Const fromlineno="441" tolineno="441" lineno="441" type="int">1</Const>
            </Compare>
            <If fromlineno="442" tolineno="448" lineno="442">
              <Compare fromlineno="442" tolineno="442" lineno="442" op="('not in', &lt;Getattr(consider_msgs_cache) l.442 [bb.taskdata] at Ox9bf2dec&gt;)">
                <Name fromlineno="442" tolineno="442" lineno="442" name="item"/>
                <Getattr fromlineno="442" tolineno="442" lineno="442" attrname="consider_msgs_cache" expr="self">
                  <Name fromlineno="442" tolineno="442" lineno="442" name="self"/>
                </Getattr>
              </Compare>
              <Assign fromlineno="443" tolineno="443" lineno="443" targets="[&lt;AssName(providers_list) l.443 [bb.taskdata] at Ox9bf2eac&gt;]" value="[]">
                <AssName fromlineno="443" tolineno="443" lineno="443" name="providers_list"/>
                <List fromlineno="443" tolineno="443" lineno="443"/>
              </Assign>
              <For fromlineno="444" tolineno="445" lineno="444">
                <AssName fromlineno="444" tolineno="444" lineno="444" name="fn"/>
                <Name fromlineno="444" tolineno="444" lineno="444" name="eligible"/>
                <Discard fromlineno="445" tolineno="445" lineno="445">
                  <CallFunc fromlineno="445" tolineno="445" lineno="445" func="Getattr(append)">
                    <Getattr fromlineno="445" tolineno="445" lineno="445" attrname="append" expr="providers_list">
                      <Name fromlineno="445" tolineno="445" lineno="445" name="providers_list"/>
                    </Getattr>
                    <Subscript fromlineno="445" tolineno="445" lineno="445">
                      <Getattr fromlineno="445" tolineno="445" lineno="445" attrname="pkg_fn" expr="dataCache">
                        <Name fromlineno="445" tolineno="445" lineno="445" name="dataCache"/>
                      </Getattr>
                      <Index fromlineno="445" tolineno="445" lineno="None">
                        <Name fromlineno="445" tolineno="445" lineno="445" name="fn"/>
                      </Index>
                    </Subscript>
                  </CallFunc>
                </Discard>
              </For>
              <Discard fromlineno="446" tolineno="446" lineno="446">
                <CallFunc fromlineno="446" tolineno="446" lineno="446" func="Getattr(note)">
                  <Getattr fromlineno="446" tolineno="446" lineno="446" attrname="note" expr="bb.msg">
                    <Getattr fromlineno="446" tolineno="446" lineno="446" attrname="msg" expr="bb">
                      <Name fromlineno="446" tolineno="446" lineno="446" name="bb"/>
                    </Getattr>
                  </Getattr>
                  <Const fromlineno="446" tolineno="446" lineno="446" type="int">2</Const>
                  <Getattr fromlineno="446" tolineno="446" lineno="446" attrname="Provider" expr="bb.msg.domain">
                    <Getattr fromlineno="446" tolineno="446" lineno="446" attrname="domain" expr="bb.msg">
                      <Getattr fromlineno="446" tolineno="446" lineno="446" attrname="msg" expr="bb">
                        <Name fromlineno="446" tolineno="446" lineno="446" name="bb"/>
                      </Getattr>
                    </Getattr>
                  </Getattr>
                  <BinOp fromlineno="446" tolineno="446" lineno="446" op="%" left="'multiple providers are available for runtime %s (top %s entries preferred) (%s);'" right="(item, numberPreferred, ', '.join(providers_list))">
                    <Const fromlineno="446" tolineno="446" lineno="446" type="str">'multiple providers are available for runtime %s (top %s entries preferred) (%s);'</Const>
                    <Tuple fromlineno="446" tolineno="446" lineno="446">
                      <Name fromlineno="446" tolineno="446" lineno="446" name="item"/>
                      <Name fromlineno="446" tolineno="446" lineno="446" name="numberPreferred"/>
                      <CallFunc fromlineno="446" tolineno="446" lineno="446" func="Getattr(join)">
                        <Getattr fromlineno="446" tolineno="446" lineno="446" attrname="join" expr="', '">
                          <Const fromlineno="446" tolineno="446" lineno="446" type="str">', '</Const>
                        </Getattr>
                        <Name fromlineno="446" tolineno="446" lineno="446" name="providers_list"/>
                      </CallFunc>
                    </Tuple>
                  </BinOp>
                </CallFunc>
              </Discard>
              <Discard fromlineno="447" tolineno="447" lineno="447">
                <CallFunc fromlineno="447" tolineno="447" lineno="447" func="Getattr(note)">
                  <Getattr fromlineno="447" tolineno="447" lineno="447" attrname="note" expr="bb.msg">
                    <Getattr fromlineno="447" tolineno="447" lineno="447" attrname="msg" expr="bb">
                      <Name fromlineno="447" tolineno="447" lineno="447" name="bb"/>
                    </Getattr>
                  </Getattr>
                  <Const fromlineno="447" tolineno="447" lineno="447" type="int">2</Const>
                  <Getattr fromlineno="447" tolineno="447" lineno="447" attrname="Provider" expr="bb.msg.domain">
                    <Getattr fromlineno="447" tolineno="447" lineno="447" attrname="domain" expr="bb.msg">
                      <Getattr fromlineno="447" tolineno="447" lineno="447" attrname="msg" expr="bb">
                        <Name fromlineno="447" tolineno="447" lineno="447" name="bb"/>
                      </Getattr>
                    </Getattr>
                  </Getattr>
                  <BinOp fromlineno="447" tolineno="447" lineno="447" op="%" left="'consider defining only one PREFERRED_PROVIDER entry to match runtime %s'" right="item">
                    <Const fromlineno="447" tolineno="447" lineno="447" type="str">'consider defining only one PREFERRED_PROVIDER entry to match runtime %s'</Const>
                    <Name fromlineno="447" tolineno="447" lineno="447" name="item"/>
                  </BinOp>
                </CallFunc>
              </Discard>
              <Discard fromlineno="448" tolineno="448" lineno="448">
                <CallFunc fromlineno="448" tolineno="448" lineno="448" func="Getattr(fire)">
                  <Getattr fromlineno="448" tolineno="448" lineno="448" attrname="fire" expr="bb.event">
                    <Getattr fromlineno="448" tolineno="448" lineno="448" attrname="event" expr="bb">
                      <Name fromlineno="448" tolineno="448" lineno="448" name="bb"/>
                    </Getattr>
                  </Getattr>
                  <CallFunc fromlineno="448" tolineno="448" lineno="448" func="Getattr(MultipleProviders)">
                    <Getattr fromlineno="448" tolineno="448" lineno="448" attrname="MultipleProviders" expr="bb.event">
                      <Getattr fromlineno="448" tolineno="448" lineno="448" attrname="event" expr="bb">
                        <Name fromlineno="448" tolineno="448" lineno="448" name="bb"/>
                      </Getattr>
                    </Getattr>
                    <Name fromlineno="448" tolineno="448" lineno="448" name="item"/>
                    <Name fromlineno="448" tolineno="448" lineno="448" name="providers_list"/>
                    <Name fromlineno="448" tolineno="448" lineno="448" name="cfgData"/>
                    <Keyword fromlineno="448" tolineno="448" lineno="None">
                      <Const fromlineno="448" tolineno="448" lineno="448" type="bool">True</Const>
                    </Keyword>
                  </CallFunc>
                </CallFunc>
              </Discard>
            </If>
            <Discard fromlineno="449" tolineno="449" lineno="449">
              <CallFunc fromlineno="449" tolineno="449" lineno="449" func="Getattr(append)">
                <Getattr fromlineno="449" tolineno="449" lineno="449" attrname="append" expr="self.consider_msgs_cache">
                  <Getattr fromlineno="449" tolineno="449" lineno="449" attrname="consider_msgs_cache" expr="self">
                    <Name fromlineno="449" tolineno="449" lineno="449" name="self"/>
                  </Getattr>
                </Getattr>
                <Name fromlineno="449" tolineno="449" lineno="449" name="item"/>
              </CallFunc>
            </Discard>
          </If>
          <For fromlineno="452" tolineno="458" lineno="452">
            <AssName fromlineno="452" tolineno="452" lineno="452" name="fn"/>
            <Name fromlineno="452" tolineno="452" lineno="452" name="eligible"/>
            <Assign fromlineno="453" tolineno="453" lineno="453" targets="[&lt;AssName(fnid) l.453 [bb.taskdata] at Ox9bf792c&gt;]" value="self.getfn_id(fn)">
              <AssName fromlineno="453" tolineno="453" lineno="453" name="fnid"/>
              <CallFunc fromlineno="453" tolineno="453" lineno="453" func="Getattr(getfn_id)">
                <Getattr fromlineno="453" tolineno="453" lineno="453" attrname="getfn_id" expr="self">
                  <Name fromlineno="453" tolineno="453" lineno="453" name="self"/>
                </Getattr>
                <Name fromlineno="453" tolineno="453" lineno="453" name="fn"/>
              </CallFunc>
            </Assign>
            <If fromlineno="454" tolineno="455" lineno="454">
              <Compare fromlineno="454" tolineno="454" lineno="454" op="('in', &lt;Getattr(failed_fnids) l.454 [bb.taskdata] at Ox9bf7aac&gt;)">
                <Name fromlineno="454" tolineno="454" lineno="454" name="fnid"/>
                <Getattr fromlineno="454" tolineno="454" lineno="454" attrname="failed_fnids" expr="self">
                  <Name fromlineno="454" tolineno="454" lineno="454" name="self"/>
                </Getattr>
              </Compare>
              <Continue fromlineno="455" tolineno="455" lineno="455"/>
            </If>
            <Discard fromlineno="456" tolineno="456" lineno="456">
              <CallFunc fromlineno="456" tolineno="456" lineno="456" func="Getattr(debug)">
                <Getattr fromlineno="456" tolineno="456" lineno="456" attrname="debug" expr="bb.msg">
                  <Getattr fromlineno="456" tolineno="456" lineno="456" attrname="msg" expr="bb">
                    <Name fromlineno="456" tolineno="456" lineno="456" name="bb"/>
                  </Getattr>
                </Getattr>
                <Const fromlineno="456" tolineno="456" lineno="456" type="int">2</Const>
                <Getattr fromlineno="456" tolineno="456" lineno="456" attrname="Provider" expr="bb.msg.domain">
                  <Getattr fromlineno="456" tolineno="456" lineno="456" attrname="domain" expr="bb.msg">
                    <Getattr fromlineno="456" tolineno="456" lineno="456" attrname="msg" expr="bb">
                      <Name fromlineno="456" tolineno="456" lineno="456" name="bb"/>
                    </Getattr>
                  </Getattr>
                </Getattr>
                <BinOp fromlineno="456" tolineno="456" lineno="456" op="%" left="&quot;adding '%s' to satisfy runtime '%s'&quot;" right="(fn, item)">
                  <Const fromlineno="456" tolineno="456" lineno="456" type="str">"adding '%s' to satisfy runtime '%s'"</Const>
                  <Tuple fromlineno="456" tolineno="456" lineno="456">
                    <Name fromlineno="456" tolineno="456" lineno="456" name="fn"/>
                    <Name fromlineno="456" tolineno="456" lineno="456" name="item"/>
                  </Tuple>
                </BinOp>
              </CallFunc>
            </Discard>
            <Discard fromlineno="457" tolineno="457" lineno="457">
              <CallFunc fromlineno="457" tolineno="457" lineno="457" func="Getattr(add_runtime_target)">
                <Getattr fromlineno="457" tolineno="457" lineno="457" attrname="add_runtime_target" expr="self">
                  <Name fromlineno="457" tolineno="457" lineno="457" name="self"/>
                </Getattr>
                <Name fromlineno="457" tolineno="457" lineno="457" name="fn"/>
                <Name fromlineno="457" tolineno="457" lineno="457" name="item"/>
              </CallFunc>
            </Discard>
            <Discard fromlineno="458" tolineno="458" lineno="458">
              <CallFunc fromlineno="458" tolineno="458" lineno="458" func="Getattr(add_tasks)">
                <Getattr fromlineno="458" tolineno="458" lineno="458" attrname="add_tasks" expr="self">
                  <Name fromlineno="458" tolineno="458" lineno="458" name="self"/>
                </Getattr>
                <Name fromlineno="458" tolineno="458" lineno="458" name="fn"/>
                <Name fromlineno="458" tolineno="458" lineno="458" name="dataCache"/>
              </CallFunc>
            </Discard>
          </For>
        </Function>
        <Function fromlineno="460" tolineno="480" lineno="460">
          <Arguments fromlineno="460" tolineno="460" lineno="None" format_args="self, fnid, missing_list=[]">
            <AssName fromlineno="460" tolineno="460" lineno="460" name="self"/>
            <AssName fromlineno="460" tolineno="460" lineno="460" name="fnid"/>
            <AssName fromlineno="460" tolineno="460" lineno="460" name="missing_list"/>
            <List fromlineno="460" tolineno="460" lineno="460"/>
          </Arguments>
          <If fromlineno="467" tolineno="468" lineno="467">
            <Compare fromlineno="467" tolineno="467" lineno="467" op="('in', &lt;Getattr(failed_fnids) l.467 [bb.taskdata] at Ox9c0316c&gt;)">
              <Name fromlineno="467" tolineno="467" lineno="467" name="fnid"/>
              <Getattr fromlineno="467" tolineno="467" lineno="467" attrname="failed_fnids" expr="self">
                <Name fromlineno="467" tolineno="467" lineno="467" name="self"/>
              </Getattr>
            </Compare>
            <Return fromlineno="468" tolineno="468" lineno="468"/>
          </If>
          <Discard fromlineno="469" tolineno="469" lineno="469">
            <CallFunc fromlineno="469" tolineno="469" lineno="469" func="Getattr(debug)">
              <Getattr fromlineno="469" tolineno="469" lineno="469" attrname="debug" expr="bb.msg">
                <Getattr fromlineno="469" tolineno="469" lineno="469" attrname="msg" expr="bb">
                  <Name fromlineno="469" tolineno="469" lineno="469" name="bb"/>
                </Getattr>
              </Getattr>
              <Const fromlineno="469" tolineno="469" lineno="469" type="int">1</Const>
              <Getattr fromlineno="469" tolineno="469" lineno="469" attrname="Provider" expr="bb.msg.domain">
                <Getattr fromlineno="469" tolineno="469" lineno="469" attrname="domain" expr="bb.msg">
                  <Getattr fromlineno="469" tolineno="469" lineno="469" attrname="msg" expr="bb">
                    <Name fromlineno="469" tolineno="469" lineno="469" name="bb"/>
                  </Getattr>
                </Getattr>
              </Getattr>
              <BinOp fromlineno="469" tolineno="469" lineno="469" op="%" left="&quot;File '%s' is unbuildable, removing...&quot;" right="self.fn_index[fnid]">
                <Const fromlineno="469" tolineno="469" lineno="469" type="str">"File '%s' is unbuildable, removing..."</Const>
                <Subscript fromlineno="469" tolineno="469" lineno="469">
                  <Getattr fromlineno="469" tolineno="469" lineno="469" attrname="fn_index" expr="self">
                    <Name fromlineno="469" tolineno="469" lineno="469" name="self"/>
                  </Getattr>
                  <Index fromlineno="469" tolineno="469" lineno="None">
                    <Name fromlineno="469" tolineno="469" lineno="469" name="fnid"/>
                  </Index>
                </Subscript>
              </BinOp>
            </CallFunc>
          </Discard>
          <Discard fromlineno="470" tolineno="470" lineno="470">
            <CallFunc fromlineno="470" tolineno="470" lineno="470" func="Getattr(append)">
              <Getattr fromlineno="470" tolineno="470" lineno="470" attrname="append" expr="self.failed_fnids">
                <Getattr fromlineno="470" tolineno="470" lineno="470" attrname="failed_fnids" expr="self">
                  <Name fromlineno="470" tolineno="470" lineno="470" name="self"/>
                </Getattr>
              </Getattr>
              <Name fromlineno="470" tolineno="470" lineno="470" name="fnid"/>
            </CallFunc>
          </Discard>
          <For fromlineno="471" tolineno="475" lineno="471">
            <AssName fromlineno="471" tolineno="471" lineno="471" name="target"/>
            <Getattr fromlineno="471" tolineno="471" lineno="471" attrname="build_targets" expr="self">
              <Name fromlineno="471" tolineno="471" lineno="471" name="self"/>
            </Getattr>
            <If fromlineno="472" tolineno="475" lineno="472">
              <Compare fromlineno="472" tolineno="472" lineno="472" op="('in', &lt;Subscript() l.472 [bb.taskdata] at Ox9c036ac&gt;)">
                <Name fromlineno="472" tolineno="472" lineno="472" name="fnid"/>
                <Subscript fromlineno="472" tolineno="472" lineno="472">
                  <Getattr fromlineno="472" tolineno="472" lineno="472" attrname="build_targets" expr="self">
                    <Name fromlineno="472" tolineno="472" lineno="472" name="self"/>
                  </Getattr>
                  <Index fromlineno="472" tolineno="472" lineno="None">
                    <Name fromlineno="472" tolineno="472" lineno="472" name="target"/>
                  </Index>
                </Subscript>
              </Compare>
              <Discard fromlineno="473" tolineno="473" lineno="473">
                <CallFunc fromlineno="473" tolineno="473" lineno="473" func="Getattr(remove)">
                  <Getattr fromlineno="473" tolineno="473" lineno="473" attrname="remove" expr="self.build_targets[target]">
                    <Subscript fromlineno="473" tolineno="473" lineno="473">
                      <Getattr fromlineno="473" tolineno="473" lineno="473" attrname="build_targets" expr="self">
                        <Name fromlineno="473" tolineno="473" lineno="473" name="self"/>
                      </Getattr>
                      <Index fromlineno="473" tolineno="473" lineno="None">
                        <Name fromlineno="473" tolineno="473" lineno="473" name="target"/>
                      </Index>
                    </Subscript>
                  </Getattr>
                  <Name fromlineno="473" tolineno="473" lineno="473" name="fnid"/>
                </CallFunc>
              </Discard>
              <If fromlineno="474" tolineno="475" lineno="474">
                <Compare fromlineno="474" tolineno="474" lineno="474" op="('==', &lt;Const(int) l.474 [bb.taskdata] at Ox9c03a6c&gt;)">
                  <CallFunc fromlineno="474" tolineno="474" lineno="474" func="Name(len)">
                    <Name fromlineno="474" tolineno="474" lineno="474" name="len"/>
                    <Subscript fromlineno="474" tolineno="474" lineno="474">
                      <Getattr fromlineno="474" tolineno="474" lineno="474" attrname="build_targets" expr="self">
                        <Name fromlineno="474" tolineno="474" lineno="474" name="self"/>
                      </Getattr>
                      <Index fromlineno="474" tolineno="474" lineno="None">
                        <Name fromlineno="474" tolineno="474" lineno="474" name="target"/>
                      </Index>
                    </Subscript>
                  </CallFunc>
                  <Const fromlineno="474" tolineno="474" lineno="474" type="int">0</Const>
                </Compare>
                <Discard fromlineno="475" tolineno="475" lineno="475">
                  <CallFunc fromlineno="475" tolineno="475" lineno="475" func="Getattr(remove_buildtarget)">
                    <Getattr fromlineno="475" tolineno="475" lineno="475" attrname="remove_buildtarget" expr="self">
                      <Name fromlineno="475" tolineno="475" lineno="475" name="self"/>
                    </Getattr>
                    <Name fromlineno="475" tolineno="475" lineno="475" name="target"/>
                    <Name fromlineno="475" tolineno="475" lineno="475" name="missing_list"/>
                  </CallFunc>
                </Discard>
              </If>
            </If>
          </For>
          <For fromlineno="476" tolineno="480" lineno="476">
            <AssName fromlineno="476" tolineno="476" lineno="476" name="target"/>
            <Getattr fromlineno="476" tolineno="476" lineno="476" attrname="run_targets" expr="self">
              <Name fromlineno="476" tolineno="476" lineno="476" name="self"/>
            </Getattr>
            <If fromlineno="477" tolineno="480" lineno="477">
              <Compare fromlineno="477" tolineno="477" lineno="477" op="('in', &lt;Subscript() l.477 [bb.taskdata] at Ox9c03cec&gt;)">
                <Name fromlineno="477" tolineno="477" lineno="477" name="fnid"/>
                <Subscript fromlineno="477" tolineno="477" lineno="477">
                  <Getattr fromlineno="477" tolineno="477" lineno="477" attrname="run_targets" expr="self">
                    <Name fromlineno="477" tolineno="477" lineno="477" name="self"/>
                  </Getattr>
                  <Index fromlineno="477" tolineno="477" lineno="None">
                    <Name fromlineno="477" tolineno="477" lineno="477" name="target"/>
                  </Index>
                </Subscript>
              </Compare>
              <Discard fromlineno="478" tolineno="478" lineno="478">
                <CallFunc fromlineno="478" tolineno="478" lineno="478" func="Getattr(remove)">
                  <Getattr fromlineno="478" tolineno="478" lineno="478" attrname="remove" expr="self.run_targets[target]">
                    <Subscript fromlineno="478" tolineno="478" lineno="478">
                      <Getattr fromlineno="478" tolineno="478" lineno="478" attrname="run_targets" expr="self">
                        <Name fromlineno="478" tolineno="478" lineno="478" name="self"/>
                      </Getattr>
                      <Index fromlineno="478" tolineno="478" lineno="None">
                        <Name fromlineno="478" tolineno="478" lineno="478" name="target"/>
                      </Index>
                    </Subscript>
                  </Getattr>
                  <Name fromlineno="478" tolineno="478" lineno="478" name="fnid"/>
                </CallFunc>
              </Discard>
              <If fromlineno="479" tolineno="480" lineno="479">
                <Compare fromlineno="479" tolineno="479" lineno="479" op="('==', &lt;Const(int) l.479 [bb.taskdata] at Ox9c070cc&gt;)">
                  <CallFunc fromlineno="479" tolineno="479" lineno="479" func="Name(len)">
                    <Name fromlineno="479" tolineno="479" lineno="479" name="len"/>
                    <Subscript fromlineno="479" tolineno="479" lineno="479">
                      <Getattr fromlineno="479" tolineno="479" lineno="479" attrname="run_targets" expr="self">
                        <Name fromlineno="479" tolineno="479" lineno="479" name="self"/>
                      </Getattr>
                      <Index fromlineno="479" tolineno="479" lineno="None">
                        <Name fromlineno="479" tolineno="479" lineno="479" name="target"/>
                      </Index>
                    </Subscript>
                  </CallFunc>
                  <Const fromlineno="479" tolineno="479" lineno="479" type="int">0</Const>
                </Compare>
                <Discard fromlineno="480" tolineno="480" lineno="480">
                  <CallFunc fromlineno="480" tolineno="480" lineno="480" func="Getattr(remove_runtarget)">
                    <Getattr fromlineno="480" tolineno="480" lineno="480" attrname="remove_runtarget" expr="self">
                      <Name fromlineno="480" tolineno="480" lineno="480" name="self"/>
                    </Getattr>
                    <Name fromlineno="480" tolineno="480" lineno="480" name="target"/>
                    <Name fromlineno="480" tolineno="480" lineno="480" name="missing_list"/>
                  </CallFunc>
                </Discard>
              </If>
            </If>
          </For>
        </Function>
        <Function fromlineno="482" tolineno="504" lineno="482">
          <Arguments fromlineno="482" tolineno="482" lineno="None" format_args="self, targetid, missing_list=[]">
            <AssName fromlineno="482" tolineno="482" lineno="482" name="self"/>
            <AssName fromlineno="482" tolineno="482" lineno="482" name="targetid"/>
            <AssName fromlineno="482" tolineno="482" lineno="482" name="missing_list"/>
            <List fromlineno="482" tolineno="482" lineno="482"/>
          </Arguments>
          <If fromlineno="487" tolineno="490" lineno="487">
            <UnaryOp fromlineno="487" tolineno="487" lineno="487">
              <Name fromlineno="487" tolineno="487" lineno="487" name="missing_list"/>
            </UnaryOp>
            <Assign fromlineno="488" tolineno="488" lineno="488" targets="[&lt;AssName(missing_list) l.488 [bb.taskdata] at Ox9c0744c&gt;]" value="[self.build_names_index[targetid]]">
              <AssName fromlineno="488" tolineno="488" lineno="488" name="missing_list"/>
              <List fromlineno="488" tolineno="488" lineno="488">
                <Subscript fromlineno="488" tolineno="488" lineno="488">
                  <Getattr fromlineno="488" tolineno="488" lineno="488" attrname="build_names_index" expr="self">
                    <Name fromlineno="488" tolineno="488" lineno="488" name="self"/>
                  </Getattr>
                  <Index fromlineno="488" tolineno="488" lineno="None">
                    <Name fromlineno="488" tolineno="488" lineno="488" name="targetid"/>
                  </Index>
                </Subscript>
              </List>
            </Assign>
            <Assign fromlineno="490" tolineno="490" lineno="490" targets="[&lt;AssName(missing_list) l.490 [bb.taskdata] at Ox9c075ac&gt;]" value="([self.build_names_index[targetid]]) + (missing_list)">
              <AssName fromlineno="490" tolineno="490" lineno="490" name="missing_list"/>
              <BinOp fromlineno="490" tolineno="490" lineno="490" op="+" left="[self.build_names_index[targetid]]" right="missing_list">
                <List fromlineno="490" tolineno="490" lineno="490">
                  <Subscript fromlineno="490" tolineno="490" lineno="490">
                    <Getattr fromlineno="490" tolineno="490" lineno="490" attrname="build_names_index" expr="self">
                      <Name fromlineno="490" tolineno="490" lineno="490" name="self"/>
                    </Getattr>
                    <Index fromlineno="490" tolineno="490" lineno="None">
                      <Name fromlineno="490" tolineno="490" lineno="490" name="targetid"/>
                    </Index>
                  </Subscript>
                </List>
                <Name fromlineno="490" tolineno="490" lineno="490" name="missing_list"/>
              </BinOp>
            </Assign>
          </If>
          <Discard fromlineno="491" tolineno="491" lineno="491">
            <CallFunc fromlineno="491" tolineno="491" lineno="491" func="Getattr(note)">
              <Getattr fromlineno="491" tolineno="491" lineno="491" attrname="note" expr="bb.msg">
                <Getattr fromlineno="491" tolineno="491" lineno="491" attrname="msg" expr="bb">
                  <Name fromlineno="491" tolineno="491" lineno="491" name="bb"/>
                </Getattr>
              </Getattr>
              <Const fromlineno="491" tolineno="491" lineno="491" type="int">2</Const>
              <Getattr fromlineno="491" tolineno="491" lineno="491" attrname="Provider" expr="bb.msg.domain">
                <Getattr fromlineno="491" tolineno="491" lineno="491" attrname="domain" expr="bb.msg">
                  <Getattr fromlineno="491" tolineno="491" lineno="491" attrname="msg" expr="bb">
                    <Name fromlineno="491" tolineno="491" lineno="491" name="bb"/>
                  </Getattr>
                </Getattr>
              </Getattr>
              <BinOp fromlineno="491" tolineno="491" lineno="491" op="%" left="&quot;Target '%s' is unbuildable, removing...\nMissing or unbuildable dependency chain was: %s&quot;" right="(self.build_names_index[targetid], missing_list)">
                <Const fromlineno="491" tolineno="491" lineno="491" type="str">"Target '%s' is unbuildable, removing...\nMissing or unbuildable dependency chain was: %s"</Const>
                <Tuple fromlineno="491" tolineno="491" lineno="491">
                  <Subscript fromlineno="491" tolineno="491" lineno="491">
                    <Getattr fromlineno="491" tolineno="491" lineno="491" attrname="build_names_index" expr="self">
                      <Name fromlineno="491" tolineno="491" lineno="491" name="self"/>
                    </Getattr>
                    <Index fromlineno="491" tolineno="491" lineno="None">
                      <Name fromlineno="491" tolineno="491" lineno="491" name="targetid"/>
                    </Index>
                  </Subscript>
                  <Name fromlineno="491" tolineno="491" lineno="491" name="missing_list"/>
                </Tuple>
              </BinOp>
            </CallFunc>
          </Discard>
          <Discard fromlineno="492" tolineno="492" lineno="492">
            <CallFunc fromlineno="492" tolineno="492" lineno="492" func="Getattr(append)">
              <Getattr fromlineno="492" tolineno="492" lineno="492" attrname="append" expr="self.failed_deps">
                <Getattr fromlineno="492" tolineno="492" lineno="492" attrname="failed_deps" expr="self">
                  <Name fromlineno="492" tolineno="492" lineno="492" name="self"/>
                </Getattr>
              </Getattr>
              <Name fromlineno="492" tolineno="492" lineno="492" name="targetid"/>
            </CallFunc>
          </Discard>
          <Assign fromlineno="493" tolineno="493" lineno="493" targets="[&lt;AssName(dependees) l.493 [bb.taskdata] at Ox9c07a8c&gt;]" value="self.get_dependees(targetid)">
            <AssName fromlineno="493" tolineno="493" lineno="493" name="dependees"/>
            <CallFunc fromlineno="493" tolineno="493" lineno="493" func="Getattr(get_dependees)">
              <Getattr fromlineno="493" tolineno="493" lineno="493" attrname="get_dependees" expr="self">
                <Name fromlineno="493" tolineno="493" lineno="493" name="self"/>
              </Getattr>
              <Name fromlineno="493" tolineno="493" lineno="493" name="targetid"/>
            </CallFunc>
          </Assign>
          <For fromlineno="494" tolineno="495" lineno="494">
            <AssName fromlineno="494" tolineno="494" lineno="494" name="fnid"/>
            <Name fromlineno="494" tolineno="494" lineno="494" name="dependees"/>
            <Discard fromlineno="495" tolineno="495" lineno="495">
              <CallFunc fromlineno="495" tolineno="495" lineno="495" func="Getattr(fail_fnid)">
                <Getattr fromlineno="495" tolineno="495" lineno="495" attrname="fail_fnid" expr="self">
                  <Name fromlineno="495" tolineno="495" lineno="495" name="self"/>
                </Getattr>
                <Name fromlineno="495" tolineno="495" lineno="495" name="fnid"/>
                <Name fromlineno="495" tolineno="495" lineno="495" name="missing_list"/>
              </CallFunc>
            </Discard>
          </For>
          <For fromlineno="496" tolineno="500" lineno="496">
            <AssName fromlineno="496" tolineno="496" lineno="496" name="taskid"/>
            <CallFunc fromlineno="496" tolineno="496" lineno="496" func="Name(range)">
              <Name fromlineno="496" tolineno="496" lineno="496" name="range"/>
              <CallFunc fromlineno="496" tolineno="496" lineno="496" func="Name(len)">
                <Name fromlineno="496" tolineno="496" lineno="496" name="len"/>
                <Getattr fromlineno="496" tolineno="496" lineno="496" attrname="tasks_idepends" expr="self">
                  <Name fromlineno="496" tolineno="496" lineno="496" name="self"/>
                </Getattr>
              </CallFunc>
            </CallFunc>
            <Assign fromlineno="497" tolineno="497" lineno="497" targets="[&lt;AssName(idepends) l.497 [bb.taskdata] at Ox9c07eec&gt;]" value="self.tasks_idepends[taskid]">
              <AssName fromlineno="497" tolineno="497" lineno="497" name="idepends"/>
              <Subscript fromlineno="497" tolineno="497" lineno="497">
                <Getattr fromlineno="497" tolineno="497" lineno="497" attrname="tasks_idepends" expr="self">
                  <Name fromlineno="497" tolineno="497" lineno="497" name="self"/>
                </Getattr>
                <Index fromlineno="497" tolineno="497" lineno="None">
                  <Name fromlineno="497" tolineno="497" lineno="497" name="taskid"/>
                </Index>
              </Subscript>
            </Assign>
            <For fromlineno="498" tolineno="500" lineno="498">
              <Tuple fromlineno="498" tolineno="498" lineno="498">
                <AssName fromlineno="498" tolineno="498" lineno="498" name="idependid"/>
                <AssName fromlineno="498" tolineno="498" lineno="498" name="idependtask"/>
              </Tuple>
              <Name fromlineno="498" tolineno="498" lineno="498" name="idepends"/>
              <If fromlineno="499" tolineno="500" lineno="499">
                <Compare fromlineno="499" tolineno="499" lineno="499" op="('==', &lt;Name(targetid) l.499 [bb.taskdata] at Ox9c0b1cc&gt;)">
                  <Name fromlineno="499" tolineno="499" lineno="499" name="idependid"/>
                  <Name fromlineno="499" tolineno="499" lineno="499" name="targetid"/>
                </Compare>
                <Discard fromlineno="500" tolineno="500" lineno="500">
                  <CallFunc fromlineno="500" tolineno="500" lineno="500" func="Getattr(fail_fnid)">
                    <Getattr fromlineno="500" tolineno="500" lineno="500" attrname="fail_fnid" expr="self">
                      <Name fromlineno="500" tolineno="500" lineno="500" name="self"/>
                    </Getattr>
                    <Subscript fromlineno="500" tolineno="500" lineno="500">
                      <Getattr fromlineno="500" tolineno="500" lineno="500" attrname="tasks_fnid" expr="self">
                        <Name fromlineno="500" tolineno="500" lineno="500" name="self"/>
                      </Getattr>
                      <Index fromlineno="500" tolineno="500" lineno="None">
                        <Name fromlineno="500" tolineno="500" lineno="500" name="taskid"/>
                      </Index>
                    </Subscript>
                    <Name fromlineno="500" tolineno="500" lineno="500" name="missing_list"/>
                  </CallFunc>
                </Discard>
              </If>
            </For>
          </For>
          <If fromlineno="502" tolineno="504" lineno="502">
            <BoolOp fromlineno="502" tolineno="502" lineno="502" op="and" values="self.abort,targetid in self.external_targets,">
              <Getattr fromlineno="502" tolineno="502" lineno="502" attrname="abort" expr="self">
                <Name fromlineno="502" tolineno="502" lineno="502" name="self"/>
              </Getattr>
              <Compare fromlineno="502" tolineno="502" lineno="502" op="('in', &lt;Getattr(external_targets) l.502 [bb.taskdata] at Ox9c0b4cc&gt;)">
                <Name fromlineno="502" tolineno="502" lineno="502" name="targetid"/>
                <Getattr fromlineno="502" tolineno="502" lineno="502" attrname="external_targets" expr="self">
                  <Name fromlineno="502" tolineno="502" lineno="502" name="self"/>
                </Getattr>
              </Compare>
            </BoolOp>
            <Discard fromlineno="503" tolineno="503" lineno="503">
              <CallFunc fromlineno="503" tolineno="503" lineno="503" func="Getattr(error)">
                <Getattr fromlineno="503" tolineno="503" lineno="503" attrname="error" expr="bb.msg">
                  <Getattr fromlineno="503" tolineno="503" lineno="503" attrname="msg" expr="bb">
                    <Name fromlineno="503" tolineno="503" lineno="503" name="bb"/>
                  </Getattr>
                </Getattr>
                <Getattr fromlineno="503" tolineno="503" lineno="503" attrname="Provider" expr="bb.msg.domain">
                  <Getattr fromlineno="503" tolineno="503" lineno="503" attrname="domain" expr="bb.msg">
                    <Getattr fromlineno="503" tolineno="503" lineno="503" attrname="msg" expr="bb">
                      <Name fromlineno="503" tolineno="503" lineno="503" name="bb"/>
                    </Getattr>
                  </Getattr>
                </Getattr>
                <BinOp fromlineno="503" tolineno="503" lineno="503" op="%" left="&quot;Required build target '%s' has no buildable providers.\nMissing or unbuildable dependency chain was: %s&quot;" right="(self.build_names_index[targetid], missing_list)">
                  <Const fromlineno="503" tolineno="503" lineno="503" type="str">"Required build target '%s' has no buildable providers.\nMissing or unbuildable dependency chain was: %s"</Const>
                  <Tuple fromlineno="503" tolineno="503" lineno="503">
                    <Subscript fromlineno="503" tolineno="503" lineno="503">
                      <Getattr fromlineno="503" tolineno="503" lineno="503" attrname="build_names_index" expr="self">
                        <Name fromlineno="503" tolineno="503" lineno="503" name="self"/>
                      </Getattr>
                      <Index fromlineno="503" tolineno="503" lineno="None">
                        <Name fromlineno="503" tolineno="503" lineno="503" name="targetid"/>
                      </Index>
                    </Subscript>
                    <Name fromlineno="503" tolineno="503" lineno="503" name="missing_list"/>
                  </Tuple>
                </BinOp>
              </CallFunc>
            </Discard>
            <Raise fromlineno="504" tolineno="504" lineno="504">
              <Getattr fromlineno="504" tolineno="504" lineno="504" attrname="NoProvider" expr="bb.providers">
                <Getattr fromlineno="504" tolineno="504" lineno="504" attrname="providers" expr="bb">
                  <Name fromlineno="504" tolineno="504" lineno="504" name="bb"/>
                </Getattr>
              </Getattr>
            </Raise>
          </If>
        </Function>
        <Function fromlineno="506" tolineno="520" lineno="506">
          <Arguments fromlineno="506" tolineno="506" lineno="None" format_args="self, targetid, missing_list=[]">
            <AssName fromlineno="506" tolineno="506" lineno="506" name="self"/>
            <AssName fromlineno="506" tolineno="506" lineno="506" name="targetid"/>
            <AssName fromlineno="506" tolineno="506" lineno="506" name="missing_list"/>
            <List fromlineno="506" tolineno="506" lineno="506"/>
          </Arguments>
          <If fromlineno="511" tolineno="514" lineno="511">
            <UnaryOp fromlineno="511" tolineno="511" lineno="511">
              <Name fromlineno="511" tolineno="511" lineno="511" name="missing_list"/>
            </UnaryOp>
            <Assign fromlineno="512" tolineno="512" lineno="512" targets="[&lt;AssName(missing_list) l.512 [bb.taskdata] at Ox9c0ba8c&gt;]" value="[self.run_names_index[targetid]]">
              <AssName fromlineno="512" tolineno="512" lineno="512" name="missing_list"/>
              <List fromlineno="512" tolineno="512" lineno="512">
                <Subscript fromlineno="512" tolineno="512" lineno="512">
                  <Getattr fromlineno="512" tolineno="512" lineno="512" attrname="run_names_index" expr="self">
                    <Name fromlineno="512" tolineno="512" lineno="512" name="self"/>
                  </Getattr>
                  <Index fromlineno="512" tolineno="512" lineno="None">
                    <Name fromlineno="512" tolineno="512" lineno="512" name="targetid"/>
                  </Index>
                </Subscript>
              </List>
            </Assign>
            <Assign fromlineno="514" tolineno="514" lineno="514" targets="[&lt;AssName(missing_list) l.514 [bb.taskdata] at Ox9c0bbec&gt;]" value="([self.run_names_index[targetid]]) + (missing_list)">
              <AssName fromlineno="514" tolineno="514" lineno="514" name="missing_list"/>
              <BinOp fromlineno="514" tolineno="514" lineno="514" op="+" left="[self.run_names_index[targetid]]" right="missing_list">
                <List fromlineno="514" tolineno="514" lineno="514">
                  <Subscript fromlineno="514" tolineno="514" lineno="514">
                    <Getattr fromlineno="514" tolineno="514" lineno="514" attrname="run_names_index" expr="self">
                      <Name fromlineno="514" tolineno="514" lineno="514" name="self"/>
                    </Getattr>
                    <Index fromlineno="514" tolineno="514" lineno="None">
                      <Name fromlineno="514" tolineno="514" lineno="514" name="targetid"/>
                    </Index>
                  </Subscript>
                </List>
                <Name fromlineno="514" tolineno="514" lineno="514" name="missing_list"/>
              </BinOp>
            </Assign>
          </If>
          <Discard fromlineno="516" tolineno="516" lineno="516">
            <CallFunc fromlineno="516" tolineno="516" lineno="516" func="Getattr(note)">
              <Getattr fromlineno="516" tolineno="516" lineno="516" attrname="note" expr="bb.msg">
                <Getattr fromlineno="516" tolineno="516" lineno="516" attrname="msg" expr="bb">
                  <Name fromlineno="516" tolineno="516" lineno="516" name="bb"/>
                </Getattr>
              </Getattr>
              <Const fromlineno="516" tolineno="516" lineno="516" type="int">1</Const>
              <Getattr fromlineno="516" tolineno="516" lineno="516" attrname="Provider" expr="bb.msg.domain">
                <Getattr fromlineno="516" tolineno="516" lineno="516" attrname="domain" expr="bb.msg">
                  <Getattr fromlineno="516" tolineno="516" lineno="516" attrname="msg" expr="bb">
                    <Name fromlineno="516" tolineno="516" lineno="516" name="bb"/>
                  </Getattr>
                </Getattr>
              </Getattr>
              <BinOp fromlineno="516" tolineno="516" lineno="516" op="%" left="&quot;Runtime target '%s' is unbuildable, removing...\nMissing or unbuildable dependency chain was: %s&quot;" right="(self.run_names_index[targetid], missing_list)">
                <Const fromlineno="516" tolineno="516" lineno="516" type="str">"Runtime target '%s' is unbuildable, removing...\nMissing or unbuildable dependency chain was: %s"</Const>
                <Tuple fromlineno="516" tolineno="516" lineno="516">
                  <Subscript fromlineno="516" tolineno="516" lineno="516">
                    <Getattr fromlineno="516" tolineno="516" lineno="516" attrname="run_names_index" expr="self">
                      <Name fromlineno="516" tolineno="516" lineno="516" name="self"/>
                    </Getattr>
                    <Index fromlineno="516" tolineno="516" lineno="None">
                      <Name fromlineno="516" tolineno="516" lineno="516" name="targetid"/>
                    </Index>
                  </Subscript>
                  <Name fromlineno="516" tolineno="516" lineno="516" name="missing_list"/>
                </Tuple>
              </BinOp>
            </CallFunc>
          </Discard>
          <Discard fromlineno="517" tolineno="517" lineno="517">
            <CallFunc fromlineno="517" tolineno="517" lineno="517" func="Getattr(append)">
              <Getattr fromlineno="517" tolineno="517" lineno="517" attrname="append" expr="self.failed_rdeps">
                <Getattr fromlineno="517" tolineno="517" lineno="517" attrname="failed_rdeps" expr="self">
                  <Name fromlineno="517" tolineno="517" lineno="517" name="self"/>
                </Getattr>
              </Getattr>
              <Name fromlineno="517" tolineno="517" lineno="517" name="targetid"/>
            </CallFunc>
          </Discard>
          <Assign fromlineno="518" tolineno="518" lineno="518" targets="[&lt;AssName(dependees) l.518 [bb.taskdata] at Ox9c100ec&gt;]" value="self.get_rdependees(targetid)">
            <AssName fromlineno="518" tolineno="518" lineno="518" name="dependees"/>
            <CallFunc fromlineno="518" tolineno="518" lineno="518" func="Getattr(get_rdependees)">
              <Getattr fromlineno="518" tolineno="518" lineno="518" attrname="get_rdependees" expr="self">
                <Name fromlineno="518" tolineno="518" lineno="518" name="self"/>
              </Getattr>
              <Name fromlineno="518" tolineno="518" lineno="518" name="targetid"/>
            </CallFunc>
          </Assign>
          <For fromlineno="519" tolineno="520" lineno="519">
            <AssName fromlineno="519" tolineno="519" lineno="519" name="fnid"/>
            <Name fromlineno="519" tolineno="519" lineno="519" name="dependees"/>
            <Discard fromlineno="520" tolineno="520" lineno="520">
              <CallFunc fromlineno="520" tolineno="520" lineno="520" func="Getattr(fail_fnid)">
                <Getattr fromlineno="520" tolineno="520" lineno="520" attrname="fail_fnid" expr="self">
                  <Name fromlineno="520" tolineno="520" lineno="520" name="self"/>
                </Getattr>
                <Name fromlineno="520" tolineno="520" lineno="520" name="fnid"/>
                <Name fromlineno="520" tolineno="520" lineno="520" name="missing_list"/>
              </CallFunc>
            </Discard>
          </For>
        </Function>
        <Function fromlineno="522" tolineno="550" lineno="522">
          <Arguments fromlineno="522" tolineno="522" lineno="None" format_args="self, cfgData, dataCache">
            <AssName fromlineno="522" tolineno="522" lineno="522" name="self"/>
            <AssName fromlineno="522" tolineno="522" lineno="522" name="cfgData"/>
            <AssName fromlineno="522" tolineno="522" lineno="522" name="dataCache"/>
          </Arguments>
          <Discard fromlineno="526" tolineno="526" lineno="526">
            <CallFunc fromlineno="526" tolineno="526" lineno="526" func="Getattr(note)">
              <Getattr fromlineno="526" tolineno="526" lineno="526" attrname="note" expr="bb.msg">
                <Getattr fromlineno="526" tolineno="526" lineno="526" attrname="msg" expr="bb">
                  <Name fromlineno="526" tolineno="526" lineno="526" name="bb"/>
                </Getattr>
              </Getattr>
              <Const fromlineno="526" tolineno="526" lineno="526" type="int">1</Const>
              <Getattr fromlineno="526" tolineno="526" lineno="526" attrname="TaskData" expr="bb.msg.domain">
                <Getattr fromlineno="526" tolineno="526" lineno="526" attrname="domain" expr="bb.msg">
                  <Getattr fromlineno="526" tolineno="526" lineno="526" attrname="msg" expr="bb">
                    <Name fromlineno="526" tolineno="526" lineno="526" name="bb"/>
                  </Getattr>
                </Getattr>
              </Getattr>
              <Const fromlineno="526" tolineno="526" lineno="526" type="str">'Resolving any missing task queue dependencies'</Const>
            </CallFunc>
          </Discard>
          <While fromlineno="527" tolineno="550" lineno="527">
            <Const fromlineno="527" tolineno="527" lineno="527" type="int">1</Const>
            <Assign fromlineno="528" tolineno="528" lineno="528" targets="[&lt;AssName(added) l.528 [bb.taskdata] at Ox9c106ec&gt;]" value="0">
              <AssName fromlineno="528" tolineno="528" lineno="528" name="added"/>
              <Const fromlineno="528" tolineno="528" lineno="528" type="int">0</Const>
            </Assign>
            <For fromlineno="529" tolineno="541" lineno="529">
              <AssName fromlineno="529" tolineno="529" lineno="529" name="target"/>
              <CallFunc fromlineno="529" tolineno="529" lineno="529" func="Getattr(get_unresolved_build_targets)">
                <Getattr fromlineno="529" tolineno="529" lineno="529" attrname="get_unresolved_build_targets" expr="self">
                  <Name fromlineno="529" tolineno="529" lineno="529" name="self"/>
                </Getattr>
                <Name fromlineno="529" tolineno="529" lineno="529" name="dataCache"/>
              </CallFunc>
              <TryExcept fromlineno="530" tolineno="541" lineno="530">
                <Discard fromlineno="531" tolineno="531" lineno="531">
                  <CallFunc fromlineno="531" tolineno="531" lineno="531" func="Getattr(add_provider_internal)">
                    <Getattr fromlineno="531" tolineno="531" lineno="531" attrname="add_provider_internal" expr="self">
                      <Name fromlineno="531" tolineno="531" lineno="531" name="self"/>
                    </Getattr>
                    <Name fromlineno="531" tolineno="531" lineno="531" name="cfgData"/>
                    <Name fromlineno="531" tolineno="531" lineno="531" name="dataCache"/>
                    <Name fromlineno="531" tolineno="531" lineno="531" name="target"/>
                  </CallFunc>
                </Discard>
                <Assign fromlineno="532" tolineno="532" lineno="532" targets="[&lt;AssName(added) l.532 [bb.taskdata] at Ox9c10a2c&gt;]" value="(added) + (1)">
                  <AssName fromlineno="532" tolineno="532" lineno="532" name="added"/>
                  <BinOp fromlineno="532" tolineno="532" lineno="532" op="+" left="added" right="1">
                    <Name fromlineno="532" tolineno="532" lineno="532" name="added"/>
                    <Const fromlineno="532" tolineno="532" lineno="532" type="int">1</Const>
                  </BinOp>
                </Assign>
                <ExceptHandler fromlineno="533" tolineno="541" lineno="533">
                  <Getattr fromlineno="533" tolineno="533" lineno="533" attrname="NoProvider" expr="bb.providers">
                    <Getattr fromlineno="533" tolineno="533" lineno="533" attrname="providers" expr="bb">
                      <Name fromlineno="533" tolineno="533" lineno="533" name="bb"/>
                    </Getattr>
                  </Getattr>
                  <Assign fromlineno="534" tolineno="534" lineno="534" targets="[&lt;AssName(targetid) l.534 [bb.taskdata] at Ox9c10bcc&gt;]" value="self.getbuild_id(target)">
                    <AssName fromlineno="534" tolineno="534" lineno="534" name="targetid"/>
                    <CallFunc fromlineno="534" tolineno="534" lineno="534" func="Getattr(getbuild_id)">
                      <Getattr fromlineno="534" tolineno="534" lineno="534" attrname="getbuild_id" expr="self">
                        <Name fromlineno="534" tolineno="534" lineno="534" name="self"/>
                      </Getattr>
                      <Name fromlineno="534" tolineno="534" lineno="534" name="target"/>
                    </CallFunc>
                  </Assign>
                  <If fromlineno="535" tolineno="540" lineno="535">
                    <BoolOp fromlineno="535" tolineno="535" lineno="535" op="and" values="self.abort,targetid in self.external_targets,">
                      <Getattr fromlineno="535" tolineno="535" lineno="535" attrname="abort" expr="self">
                        <Name fromlineno="535" tolineno="535" lineno="535" name="self"/>
                      </Getattr>
                      <Compare fromlineno="535" tolineno="535" lineno="535" op="('in', &lt;Getattr(external_targets) l.535 [bb.taskdata] at Ox9c10dec&gt;)">
                        <Name fromlineno="535" tolineno="535" lineno="535" name="targetid"/>
                        <Getattr fromlineno="535" tolineno="535" lineno="535" attrname="external_targets" expr="self">
                          <Name fromlineno="535" tolineno="535" lineno="535" name="self"/>
                        </Getattr>
                      </Compare>
                    </BoolOp>
                    <If fromlineno="536" tolineno="539" lineno="536">
                      <CallFunc fromlineno="536" tolineno="536" lineno="536" func="Getattr(get_rdependees_str)">
                        <Getattr fromlineno="536" tolineno="536" lineno="536" attrname="get_rdependees_str" expr="self">
                          <Name fromlineno="536" tolineno="536" lineno="536" name="self"/>
                        </Getattr>
                        <Name fromlineno="536" tolineno="536" lineno="536" name="target"/>
                      </CallFunc>
                      <Discard fromlineno="537" tolineno="537" lineno="537">
                        <CallFunc fromlineno="537" tolineno="537" lineno="537" func="Getattr(error)">
                          <Getattr fromlineno="537" tolineno="537" lineno="537" attrname="error" expr="bb.msg">
                            <Getattr fromlineno="537" tolineno="537" lineno="537" attrname="msg" expr="bb">
                              <Name fromlineno="537" tolineno="537" lineno="537" name="bb"/>
                            </Getattr>
                          </Getattr>
                          <Getattr fromlineno="537" tolineno="537" lineno="537" attrname="Provider" expr="bb.msg.domain">
                            <Getattr fromlineno="537" tolineno="537" lineno="537" attrname="domain" expr="bb.msg">
                              <Getattr fromlineno="537" tolineno="537" lineno="537" attrname="msg" expr="bb">
                                <Name fromlineno="537" tolineno="537" lineno="537" name="bb"/>
                              </Getattr>
                            </Getattr>
                          </Getattr>
                          <BinOp fromlineno="537" tolineno="537" lineno="537" op="%" left="&quot;Nothing PROVIDES '%s' (but '%s' DEPENDS on or otherwise requires it)&quot;" right="(target, self.get_dependees_str(target))">
                            <Const fromlineno="537" tolineno="537" lineno="537" type="str">"Nothing PROVIDES '%s' (but '%s' DEPENDS on or otherwise requires it)"</Const>
                            <Tuple fromlineno="537" tolineno="537" lineno="537">
                              <Name fromlineno="537" tolineno="537" lineno="537" name="target"/>
                              <CallFunc fromlineno="537" tolineno="537" lineno="537" func="Getattr(get_dependees_str)">
                                <Getattr fromlineno="537" tolineno="537" lineno="537" attrname="get_dependees_str" expr="self">
                                  <Name fromlineno="537" tolineno="537" lineno="537" name="self"/>
                                </Getattr>
                                <Name fromlineno="537" tolineno="537" lineno="537" name="target"/>
                              </CallFunc>
                            </Tuple>
                          </BinOp>
                        </CallFunc>
                      </Discard>
                      <Discard fromlineno="539" tolineno="539" lineno="539">
                        <CallFunc fromlineno="539" tolineno="539" lineno="539" func="Getattr(error)">
                          <Getattr fromlineno="539" tolineno="539" lineno="539" attrname="error" expr="bb.msg">
                            <Getattr fromlineno="539" tolineno="539" lineno="539" attrname="msg" expr="bb">
                              <Name fromlineno="539" tolineno="539" lineno="539" name="bb"/>
                            </Getattr>
                          </Getattr>
                          <Getattr fromlineno="539" tolineno="539" lineno="539" attrname="Provider" expr="bb.msg.domain">
                            <Getattr fromlineno="539" tolineno="539" lineno="539" attrname="domain" expr="bb.msg">
                              <Getattr fromlineno="539" tolineno="539" lineno="539" attrname="msg" expr="bb">
                                <Name fromlineno="539" tolineno="539" lineno="539" name="bb"/>
                              </Getattr>
                            </Getattr>
                          </Getattr>
                          <BinOp fromlineno="539" tolineno="539" lineno="539" op="%" left="&quot;Nothing PROVIDES '%s'&quot;" right="target">
                            <Const fromlineno="539" tolineno="539" lineno="539" type="str">"Nothing PROVIDES '%s'"</Const>
                            <Name fromlineno="539" tolineno="539" lineno="539" name="target"/>
                          </BinOp>
                        </CallFunc>
                      </Discard>
                    </If>
                    <Raise fromlineno="540" tolineno="540" lineno="540"/>
                  </If>
                  <Discard fromlineno="541" tolineno="541" lineno="541">
                    <CallFunc fromlineno="541" tolineno="541" lineno="541" func="Getattr(remove_buildtarget)">
                      <Getattr fromlineno="541" tolineno="541" lineno="541" attrname="remove_buildtarget" expr="self">
                        <Name fromlineno="541" tolineno="541" lineno="541" name="self"/>
                      </Getattr>
                      <Name fromlineno="541" tolineno="541" lineno="541" name="targetid"/>
                    </CallFunc>
                  </Discard>
                </ExceptHandler>
              </TryExcept>
            </For>
            <For fromlineno="542" tolineno="547" lineno="542">
              <AssName fromlineno="542" tolineno="542" lineno="542" name="target"/>
              <CallFunc fromlineno="542" tolineno="542" lineno="542" func="Getattr(get_unresolved_run_targets)">
                <Getattr fromlineno="542" tolineno="542" lineno="542" attrname="get_unresolved_run_targets" expr="self">
                  <Name fromlineno="542" tolineno="542" lineno="542" name="self"/>
                </Getattr>
                <Name fromlineno="542" tolineno="542" lineno="542" name="dataCache"/>
              </CallFunc>
              <TryExcept fromlineno="543" tolineno="547" lineno="543">
                <Discard fromlineno="544" tolineno="544" lineno="544">
                  <CallFunc fromlineno="544" tolineno="544" lineno="544" func="Getattr(add_rprovider)">
                    <Getattr fromlineno="544" tolineno="544" lineno="544" attrname="add_rprovider" expr="self">
                      <Name fromlineno="544" tolineno="544" lineno="544" name="self"/>
                    </Getattr>
                    <Name fromlineno="544" tolineno="544" lineno="544" name="cfgData"/>
                    <Name fromlineno="544" tolineno="544" lineno="544" name="dataCache"/>
                    <Name fromlineno="544" tolineno="544" lineno="544" name="target"/>
                  </CallFunc>
                </Discard>
                <Assign fromlineno="545" tolineno="545" lineno="545" targets="[&lt;AssName(added) l.545 [bb.taskdata] at Ox9c1470c&gt;]" value="(added) + (1)">
                  <AssName fromlineno="545" tolineno="545" lineno="545" name="added"/>
                  <BinOp fromlineno="545" tolineno="545" lineno="545" op="+" left="added" right="1">
                    <Name fromlineno="545" tolineno="545" lineno="545" name="added"/>
                    <Const fromlineno="545" tolineno="545" lineno="545" type="int">1</Const>
                  </BinOp>
                </Assign>
                <ExceptHandler fromlineno="546" tolineno="547" lineno="546">
                  <Getattr fromlineno="546" tolineno="546" lineno="546" attrname="NoRProvider" expr="bb.providers">
                    <Getattr fromlineno="546" tolineno="546" lineno="546" attrname="providers" expr="bb">
                      <Name fromlineno="546" tolineno="546" lineno="546" name="bb"/>
                    </Getattr>
                  </Getattr>
                  <Discard fromlineno="547" tolineno="547" lineno="547">
                    <CallFunc fromlineno="547" tolineno="547" lineno="547" func="Getattr(remove_runtarget)">
                      <Getattr fromlineno="547" tolineno="547" lineno="547" attrname="remove_runtarget" expr="self">
                        <Name fromlineno="547" tolineno="547" lineno="547" name="self"/>
                      </Getattr>
                      <CallFunc fromlineno="547" tolineno="547" lineno="547" func="Getattr(getrun_id)">
                        <Getattr fromlineno="547" tolineno="547" lineno="547" attrname="getrun_id" expr="self">
                          <Name fromlineno="547" tolineno="547" lineno="547" name="self"/>
                        </Getattr>
                        <Name fromlineno="547" tolineno="547" lineno="547" name="target"/>
                      </CallFunc>
                    </CallFunc>
                  </Discard>
                </ExceptHandler>
              </TryExcept>
            </For>
            <Discard fromlineno="548" tolineno="548" lineno="548">
              <CallFunc fromlineno="548" tolineno="548" lineno="548" func="Getattr(debug)">
                <Getattr fromlineno="548" tolineno="548" lineno="548" attrname="debug" expr="bb.msg">
                  <Getattr fromlineno="548" tolineno="548" lineno="548" attrname="msg" expr="bb">
                    <Name fromlineno="548" tolineno="548" lineno="548" name="bb"/>
                  </Getattr>
                </Getattr>
                <Const fromlineno="548" tolineno="548" lineno="548" type="int">1</Const>
                <Getattr fromlineno="548" tolineno="548" lineno="548" attrname="TaskData" expr="bb.msg.domain">
                  <Getattr fromlineno="548" tolineno="548" lineno="548" attrname="domain" expr="bb.msg">
                    <Getattr fromlineno="548" tolineno="548" lineno="548" attrname="msg" expr="bb">
                      <Name fromlineno="548" tolineno="548" lineno="548" name="bb"/>
                    </Getattr>
                  </Getattr>
                </Getattr>
                <BinOp fromlineno="548" tolineno="548" lineno="548" op="+" left="('Resolved ') + (str(added))" right="' extra dependecies'">
                  <BinOp fromlineno="548" tolineno="548" lineno="548" op="+" left="'Resolved '" right="str(added)">
                    <Const fromlineno="548" tolineno="548" lineno="548" type="str">'Resolved '</Const>
                    <CallFunc fromlineno="548" tolineno="548" lineno="548" func="Name(str)">
                      <Name fromlineno="548" tolineno="548" lineno="548" name="str"/>
                      <Name fromlineno="548" tolineno="548" lineno="548" name="added"/>
                    </CallFunc>
                  </BinOp>
                  <Const fromlineno="548" tolineno="548" lineno="548" type="str">' extra dependecies'</Const>
                </BinOp>
              </CallFunc>
            </Discard>
            <If fromlineno="549" tolineno="550" lineno="549">
              <Compare fromlineno="549" tolineno="549" lineno="549" op="('==', &lt;Const(int) l.549 [bb.taskdata] at Ox9c14c8c&gt;)">
                <Name fromlineno="549" tolineno="549" lineno="549" name="added"/>
                <Const fromlineno="549" tolineno="549" lineno="549" type="int">0</Const>
              </Compare>
              <Break fromlineno="550" tolineno="550" lineno="550"/>
            </If>
          </While>
        </Function>
        <Function fromlineno="553" tolineno="593" lineno="553">
          <Arguments fromlineno="553" tolineno="553" lineno="None" format_args="self">
            <AssName fromlineno="553" tolineno="553" lineno="553" name="self"/>
          </Arguments>
          <Discard fromlineno="557" tolineno="557" lineno="557">
            <CallFunc fromlineno="557" tolineno="557" lineno="557" func="Getattr(debug)">
              <Getattr fromlineno="557" tolineno="557" lineno="557" attrname="debug" expr="bb.msg">
                <Getattr fromlineno="557" tolineno="557" lineno="557" attrname="msg" expr="bb">
                  <Name fromlineno="557" tolineno="557" lineno="557" name="bb"/>
                </Getattr>
              </Getattr>
              <Const fromlineno="557" tolineno="557" lineno="557" type="int">3</Const>
              <Getattr fromlineno="557" tolineno="557" lineno="557" attrname="TaskData" expr="bb.msg.domain">
                <Getattr fromlineno="557" tolineno="557" lineno="557" attrname="domain" expr="bb.msg">
                  <Getattr fromlineno="557" tolineno="557" lineno="557" attrname="msg" expr="bb">
                    <Name fromlineno="557" tolineno="557" lineno="557" name="bb"/>
                  </Getattr>
                </Getattr>
              </Getattr>
              <Const fromlineno="557" tolineno="557" lineno="557" type="str">'build_names:'</Const>
            </CallFunc>
          </Discard>
          <Discard fromlineno="558" tolineno="558" lineno="558">
            <CallFunc fromlineno="558" tolineno="558" lineno="558" func="Getattr(debug)">
              <Getattr fromlineno="558" tolineno="558" lineno="558" attrname="debug" expr="bb.msg">
                <Getattr fromlineno="558" tolineno="558" lineno="558" attrname="msg" expr="bb">
                  <Name fromlineno="558" tolineno="558" lineno="558" name="bb"/>
                </Getattr>
              </Getattr>
              <Const fromlineno="558" tolineno="558" lineno="558" type="int">3</Const>
              <Getattr fromlineno="558" tolineno="558" lineno="558" attrname="TaskData" expr="bb.msg.domain">
                <Getattr fromlineno="558" tolineno="558" lineno="558" attrname="domain" expr="bb.msg">
                  <Getattr fromlineno="558" tolineno="558" lineno="558" attrname="msg" expr="bb">
                    <Name fromlineno="558" tolineno="558" lineno="558" name="bb"/>
                  </Getattr>
                </Getattr>
              </Getattr>
              <CallFunc fromlineno="558" tolineno="558" lineno="558" func="Getattr(join)">
                <Getattr fromlineno="558" tolineno="558" lineno="558" attrname="join" expr="', '">
                  <Const fromlineno="558" tolineno="558" lineno="558" type="str">', '</Const>
                </Getattr>
                <Getattr fromlineno="558" tolineno="558" lineno="558" attrname="build_names_index" expr="self">
                  <Name fromlineno="558" tolineno="558" lineno="558" name="self"/>
                </Getattr>
              </CallFunc>
            </CallFunc>
          </Discard>
          <Discard fromlineno="560" tolineno="560" lineno="560">
            <CallFunc fromlineno="560" tolineno="560" lineno="560" func="Getattr(debug)">
              <Getattr fromlineno="560" tolineno="560" lineno="560" attrname="debug" expr="bb.msg">
                <Getattr fromlineno="560" tolineno="560" lineno="560" attrname="msg" expr="bb">
                  <Name fromlineno="560" tolineno="560" lineno="560" name="bb"/>
                </Getattr>
              </Getattr>
              <Const fromlineno="560" tolineno="560" lineno="560" type="int">3</Const>
              <Getattr fromlineno="560" tolineno="560" lineno="560" attrname="TaskData" expr="bb.msg.domain">
                <Getattr fromlineno="560" tolineno="560" lineno="560" attrname="domain" expr="bb.msg">
                  <Getattr fromlineno="560" tolineno="560" lineno="560" attrname="msg" expr="bb">
                    <Name fromlineno="560" tolineno="560" lineno="560" name="bb"/>
                  </Getattr>
                </Getattr>
              </Getattr>
              <Const fromlineno="560" tolineno="560" lineno="560" type="str">'run_names:'</Const>
            </CallFunc>
          </Discard>
          <Discard fromlineno="561" tolineno="561" lineno="561">
            <CallFunc fromlineno="561" tolineno="561" lineno="561" func="Getattr(debug)">
              <Getattr fromlineno="561" tolineno="561" lineno="561" attrname="debug" expr="bb.msg">
                <Getattr fromlineno="561" tolineno="561" lineno="561" attrname="msg" expr="bb">
                  <Name fromlineno="561" tolineno="561" lineno="561" name="bb"/>
                </Getattr>
              </Getattr>
              <Const fromlineno="561" tolineno="561" lineno="561" type="int">3</Const>
              <Getattr fromlineno="561" tolineno="561" lineno="561" attrname="TaskData" expr="bb.msg.domain">
                <Getattr fromlineno="561" tolineno="561" lineno="561" attrname="domain" expr="bb.msg">
                  <Getattr fromlineno="561" tolineno="561" lineno="561" attrname="msg" expr="bb">
                    <Name fromlineno="561" tolineno="561" lineno="561" name="bb"/>
                  </Getattr>
                </Getattr>
              </Getattr>
              <CallFunc fromlineno="561" tolineno="561" lineno="561" func="Getattr(join)">
                <Getattr fromlineno="561" tolineno="561" lineno="561" attrname="join" expr="', '">
                  <Const fromlineno="561" tolineno="561" lineno="561" type="str">', '</Const>
                </Getattr>
                <Getattr fromlineno="561" tolineno="561" lineno="561" attrname="run_names_index" expr="self">
                  <Name fromlineno="561" tolineno="561" lineno="561" name="self"/>
                </Getattr>
              </CallFunc>
            </CallFunc>
          </Discard>
          <Discard fromlineno="563" tolineno="563" lineno="563">
            <CallFunc fromlineno="563" tolineno="563" lineno="563" func="Getattr(debug)">
              <Getattr fromlineno="563" tolineno="563" lineno="563" attrname="debug" expr="bb.msg">
                <Getattr fromlineno="563" tolineno="563" lineno="563" attrname="msg" expr="bb">
                  <Name fromlineno="563" tolineno="563" lineno="563" name="bb"/>
                </Getattr>
              </Getattr>
              <Const fromlineno="563" tolineno="563" lineno="563" type="int">3</Const>
              <Getattr fromlineno="563" tolineno="563" lineno="563" attrname="TaskData" expr="bb.msg.domain">
                <Getattr fromlineno="563" tolineno="563" lineno="563" attrname="domain" expr="bb.msg">
                  <Getattr fromlineno="563" tolineno="563" lineno="563" attrname="msg" expr="bb">
                    <Name fromlineno="563" tolineno="563" lineno="563" name="bb"/>
                  </Getattr>
                </Getattr>
              </Getattr>
              <Const fromlineno="563" tolineno="563" lineno="563" type="str">'build_targets:'</Const>
            </CallFunc>
          </Discard>
          <For fromlineno="564" tolineno="569" lineno="564">
            <AssName fromlineno="564" tolineno="564" lineno="564" name="buildid"/>
            <CallFunc fromlineno="564" tolineno="564" lineno="564" func="Name(range)">
              <Name fromlineno="564" tolineno="564" lineno="564" name="range"/>
              <CallFunc fromlineno="564" tolineno="564" lineno="564" func="Name(len)">
                <Name fromlineno="564" tolineno="564" lineno="564" name="len"/>
                <Getattr fromlineno="564" tolineno="564" lineno="564" attrname="build_names_index" expr="self">
                  <Name fromlineno="564" tolineno="564" lineno="564" name="self"/>
                </Getattr>
              </CallFunc>
            </CallFunc>
            <Assign fromlineno="565" tolineno="565" lineno="565" targets="[&lt;AssName(target) l.565 [bb.taskdata] at Ox9c1888c&gt;]" value="self.build_names_index[buildid]">
              <AssName fromlineno="565" tolineno="565" lineno="565" name="target"/>
              <Subscript fromlineno="565" tolineno="565" lineno="565">
                <Getattr fromlineno="565" tolineno="565" lineno="565" attrname="build_names_index" expr="self">
                  <Name fromlineno="565" tolineno="565" lineno="565" name="self"/>
                </Getattr>
                <Index fromlineno="565" tolineno="565" lineno="None">
                  <Name fromlineno="565" tolineno="565" lineno="565" name="buildid"/>
                </Index>
              </Subscript>
            </Assign>
            <Assign fromlineno="566" tolineno="566" lineno="566" targets="[&lt;AssName(targets) l.566 [bb.taskdata] at Ox9c189ac&gt;]" value="'None'">
              <AssName fromlineno="566" tolineno="566" lineno="566" name="targets"/>
              <Const fromlineno="566" tolineno="566" lineno="566" type="str">'None'</Const>
            </Assign>
            <If fromlineno="567" tolineno="568" lineno="567">
              <Compare fromlineno="567" tolineno="567" lineno="567" op="('in', &lt;Getattr(build_targets) l.567 [bb.taskdata] at Ox9c18aac&gt;)">
                <Name fromlineno="567" tolineno="567" lineno="567" name="buildid"/>
                <Getattr fromlineno="567" tolineno="567" lineno="567" attrname="build_targets" expr="self">
                  <Name fromlineno="567" tolineno="567" lineno="567" name="self"/>
                </Getattr>
              </Compare>
              <Assign fromlineno="568" tolineno="568" lineno="568" targets="[&lt;AssName(targets) l.568 [bb.taskdata] at Ox9c18b6c&gt;]" value="self.build_targets[buildid]">
                <AssName fromlineno="568" tolineno="568" lineno="568" name="targets"/>
                <Subscript fromlineno="568" tolineno="568" lineno="568">
                  <Getattr fromlineno="568" tolineno="568" lineno="568" attrname="build_targets" expr="self">
                    <Name fromlineno="568" tolineno="568" lineno="568" name="self"/>
                  </Getattr>
                  <Index fromlineno="568" tolineno="568" lineno="None">
                    <Name fromlineno="568" tolineno="568" lineno="568" name="buildid"/>
                  </Index>
                </Subscript>
              </Assign>
            </If>
            <Discard fromlineno="569" tolineno="569" lineno="569">
              <CallFunc fromlineno="569" tolineno="569" lineno="569" func="Getattr(debug)">
                <Getattr fromlineno="569" tolineno="569" lineno="569" attrname="debug" expr="bb.msg">
                  <Getattr fromlineno="569" tolineno="569" lineno="569" attrname="msg" expr="bb">
                    <Name fromlineno="569" tolineno="569" lineno="569" name="bb"/>
                  </Getattr>
                </Getattr>
                <Const fromlineno="569" tolineno="569" lineno="569" type="int">3</Const>
                <Getattr fromlineno="569" tolineno="569" lineno="569" attrname="TaskData" expr="bb.msg.domain">
                  <Getattr fromlineno="569" tolineno="569" lineno="569" attrname="domain" expr="bb.msg">
                    <Getattr fromlineno="569" tolineno="569" lineno="569" attrname="msg" expr="bb">
                      <Name fromlineno="569" tolineno="569" lineno="569" name="bb"/>
                    </Getattr>
                  </Getattr>
                </Getattr>
                <BinOp fromlineno="569" tolineno="569" lineno="569" op="%" left="' (%s)%s: %s'" right="(buildid, target, targets)">
                  <Const fromlineno="569" tolineno="569" lineno="569" type="str">' (%s)%s: %s'</Const>
                  <Tuple fromlineno="569" tolineno="569" lineno="569">
                    <Name fromlineno="569" tolineno="569" lineno="569" name="buildid"/>
                    <Name fromlineno="569" tolineno="569" lineno="569" name="target"/>
                    <Name fromlineno="569" tolineno="569" lineno="569" name="targets"/>
                  </Tuple>
                </BinOp>
              </CallFunc>
            </Discard>
          </For>
          <Discard fromlineno="571" tolineno="571" lineno="571">
            <CallFunc fromlineno="571" tolineno="571" lineno="571" func="Getattr(debug)">
              <Getattr fromlineno="571" tolineno="571" lineno="571" attrname="debug" expr="bb.msg">
                <Getattr fromlineno="571" tolineno="571" lineno="571" attrname="msg" expr="bb">
                  <Name fromlineno="571" tolineno="571" lineno="571" name="bb"/>
                </Getattr>
              </Getattr>
              <Const fromlineno="571" tolineno="571" lineno="571" type="int">3</Const>
              <Getattr fromlineno="571" tolineno="571" lineno="571" attrname="TaskData" expr="bb.msg.domain">
                <Getattr fromlineno="571" tolineno="571" lineno="571" attrname="domain" expr="bb.msg">
                  <Getattr fromlineno="571" tolineno="571" lineno="571" attrname="msg" expr="bb">
                    <Name fromlineno="571" tolineno="571" lineno="571" name="bb"/>
                  </Getattr>
                </Getattr>
              </Getattr>
              <Const fromlineno="571" tolineno="571" lineno="571" type="str">'run_targets:'</Const>
            </CallFunc>
          </Discard>
          <For fromlineno="572" tolineno="577" lineno="572">
            <AssName fromlineno="572" tolineno="572" lineno="572" name="runid"/>
            <CallFunc fromlineno="572" tolineno="572" lineno="572" func="Name(range)">
              <Name fromlineno="572" tolineno="572" lineno="572" name="range"/>
              <CallFunc fromlineno="572" tolineno="572" lineno="572" func="Name(len)">
                <Name fromlineno="572" tolineno="572" lineno="572" name="len"/>
                <Getattr fromlineno="572" tolineno="572" lineno="572" attrname="run_names_index" expr="self">
                  <Name fromlineno="572" tolineno="572" lineno="572" name="self"/>
                </Getattr>
              </CallFunc>
            </CallFunc>
            <Assign fromlineno="573" tolineno="573" lineno="573" targets="[&lt;AssName(target) l.573 [bb.taskdata] at Ox9c1d1ec&gt;]" value="self.run_names_index[runid]">
              <AssName fromlineno="573" tolineno="573" lineno="573" name="target"/>
              <Subscript fromlineno="573" tolineno="573" lineno="573">
                <Getattr fromlineno="573" tolineno="573" lineno="573" attrname="run_names_index" expr="self">
                  <Name fromlineno="573" tolineno="573" lineno="573" name="self"/>
                </Getattr>
                <Index fromlineno="573" tolineno="573" lineno="None">
                  <Name fromlineno="573" tolineno="573" lineno="573" name="runid"/>
                </Index>
              </Subscript>
            </Assign>
            <Assign fromlineno="574" tolineno="574" lineno="574" targets="[&lt;AssName(targets) l.574 [bb.taskdata] at Ox9c1d2ec&gt;]" value="'None'">
              <AssName fromlineno="574" tolineno="574" lineno="574" name="targets"/>
              <Const fromlineno="574" tolineno="574" lineno="574" type="str">'None'</Const>
            </Assign>
            <If fromlineno="575" tolineno="576" lineno="575">
              <Compare fromlineno="575" tolineno="575" lineno="575" op="('in', &lt;Getattr(run_targets) l.575 [bb.taskdata] at Ox9c1d3cc&gt;)">
                <Name fromlineno="575" tolineno="575" lineno="575" name="runid"/>
                <Getattr fromlineno="575" tolineno="575" lineno="575" attrname="run_targets" expr="self">
                  <Name fromlineno="575" tolineno="575" lineno="575" name="self"/>
                </Getattr>
              </Compare>
              <Assign fromlineno="576" tolineno="576" lineno="576" targets="[&lt;AssName(targets) l.576 [bb.taskdata] at Ox9c1d48c&gt;]" value="self.run_targets[runid]">
                <AssName fromlineno="576" tolineno="576" lineno="576" name="targets"/>
                <Subscript fromlineno="576" tolineno="576" lineno="576">
                  <Getattr fromlineno="576" tolineno="576" lineno="576" attrname="run_targets" expr="self">
                    <Name fromlineno="576" tolineno="576" lineno="576" name="self"/>
                  </Getattr>
                  <Index fromlineno="576" tolineno="576" lineno="None">
                    <Name fromlineno="576" tolineno="576" lineno="576" name="runid"/>
                  </Index>
                </Subscript>
              </Assign>
            </If>
            <Discard fromlineno="577" tolineno="577" lineno="577">
              <CallFunc fromlineno="577" tolineno="577" lineno="577" func="Getattr(debug)">
                <Getattr fromlineno="577" tolineno="577" lineno="577" attrname="debug" expr="bb.msg">
                  <Getattr fromlineno="577" tolineno="577" lineno="577" attrname="msg" expr="bb">
                    <Name fromlineno="577" tolineno="577" lineno="577" name="bb"/>
                  </Getattr>
                </Getattr>
                <Const fromlineno="577" tolineno="577" lineno="577" type="int">3</Const>
                <Getattr fromlineno="577" tolineno="577" lineno="577" attrname="TaskData" expr="bb.msg.domain">
                  <Getattr fromlineno="577" tolineno="577" lineno="577" attrname="domain" expr="bb.msg">
                    <Getattr fromlineno="577" tolineno="577" lineno="577" attrname="msg" expr="bb">
                      <Name fromlineno="577" tolineno="577" lineno="577" name="bb"/>
                    </Getattr>
                  </Getattr>
                </Getattr>
                <BinOp fromlineno="577" tolineno="577" lineno="577" op="%" left="' (%s)%s: %s'" right="(runid, target, targets)">
                  <Const fromlineno="577" tolineno="577" lineno="577" type="str">' (%s)%s: %s'</Const>
                  <Tuple fromlineno="577" tolineno="577" lineno="577">
                    <Name fromlineno="577" tolineno="577" lineno="577" name="runid"/>
                    <Name fromlineno="577" tolineno="577" lineno="577" name="target"/>
                    <Name fromlineno="577" tolineno="577" lineno="577" name="targets"/>
                  </Tuple>
                </BinOp>
              </CallFunc>
            </Discard>
          </For>
          <Discard fromlineno="579" tolineno="579" lineno="579">
            <CallFunc fromlineno="579" tolineno="579" lineno="579" func="Getattr(debug)">
              <Getattr fromlineno="579" tolineno="579" lineno="579" attrname="debug" expr="bb.msg">
                <Getattr fromlineno="579" tolineno="579" lineno="579" attrname="msg" expr="bb">
                  <Name fromlineno="579" tolineno="579" lineno="579" name="bb"/>
                </Getattr>
              </Getattr>
              <Const fromlineno="579" tolineno="579" lineno="579" type="int">3</Const>
              <Getattr fromlineno="579" tolineno="579" lineno="579" attrname="TaskData" expr="bb.msg.domain">
                <Getattr fromlineno="579" tolineno="579" lineno="579" attrname="domain" expr="bb.msg">
                  <Getattr fromlineno="579" tolineno="579" lineno="579" attrname="msg" expr="bb">
                    <Name fromlineno="579" tolineno="579" lineno="579" name="bb"/>
                  </Getattr>
                </Getattr>
              </Getattr>
              <Const fromlineno="579" tolineno="579" lineno="579" type="str">'tasks:'</Const>
            </CallFunc>
          </Discard>
          <For fromlineno="580" tolineno="585" lineno="580">
            <AssName fromlineno="580" tolineno="580" lineno="580" name="task"/>
            <CallFunc fromlineno="580" tolineno="580" lineno="580" func="Name(range)">
              <Name fromlineno="580" tolineno="580" lineno="580" name="range"/>
              <CallFunc fromlineno="580" tolineno="580" lineno="580" func="Name(len)">
                <Name fromlineno="580" tolineno="580" lineno="580" name="len"/>
                <Getattr fromlineno="580" tolineno="580" lineno="580" attrname="tasks_name" expr="self">
                  <Name fromlineno="580" tolineno="580" lineno="580" name="self"/>
                </Getattr>
              </CallFunc>
            </CallFunc>
            <Discard fromlineno="581" tolineno="585" lineno="581">
              <CallFunc fromlineno="581" tolineno="585" lineno="581" func="Getattr(debug)">
                <Getattr fromlineno="581" tolineno="581" lineno="581" attrname="debug" expr="bb.msg">
                  <Getattr fromlineno="581" tolineno="581" lineno="581" attrname="msg" expr="bb">
                    <Name fromlineno="581" tolineno="581" lineno="581" name="bb"/>
                  </Getattr>
                </Getattr>
                <Const fromlineno="581" tolineno="581" lineno="581" type="int">3</Const>
                <Getattr fromlineno="581" tolineno="581" lineno="581" attrname="TaskData" expr="bb.msg.domain">
                  <Getattr fromlineno="581" tolineno="581" lineno="581" attrname="domain" expr="bb.msg">
                    <Getattr fromlineno="581" tolineno="581" lineno="581" attrname="msg" expr="bb">
                      <Name fromlineno="581" tolineno="581" lineno="581" name="bb"/>
                    </Getattr>
                  </Getattr>
                </Getattr>
                <BinOp fromlineno="581" tolineno="585" lineno="581" op="%" left="' (%s)%s - %s: %s'" right="(task, self.fn_index[self.tasks_fnid[task]], self.tasks_name[task], self.tasks_tdepends[task])">
                  <Const fromlineno="581" tolineno="581" lineno="581" type="str">' (%s)%s - %s: %s'</Const>
                  <Tuple fromlineno="582" tolineno="585" lineno="582">
                    <Name fromlineno="582" tolineno="582" lineno="582" name="task"/>
                    <Subscript fromlineno="583" tolineno="583" lineno="583">
                      <Getattr fromlineno="583" tolineno="583" lineno="583" attrname="fn_index" expr="self">
                        <Name fromlineno="583" tolineno="583" lineno="583" name="self"/>
                      </Getattr>
                      <Index fromlineno="583" tolineno="583" lineno="None">
                        <Subscript fromlineno="583" tolineno="583" lineno="583">
                          <Getattr fromlineno="583" tolineno="583" lineno="583" attrname="tasks_fnid" expr="self">
                            <Name fromlineno="583" tolineno="583" lineno="583" name="self"/>
                          </Getattr>
                          <Index fromlineno="583" tolineno="583" lineno="None">
                            <Name fromlineno="583" tolineno="583" lineno="583" name="task"/>
                          </Index>
                        </Subscript>
                      </Index>
                    </Subscript>
                    <Subscript fromlineno="584" tolineno="584" lineno="584">
                      <Getattr fromlineno="584" tolineno="584" lineno="584" attrname="tasks_name" expr="self">
                        <Name fromlineno="584" tolineno="584" lineno="584" name="self"/>
                      </Getattr>
                      <Index fromlineno="584" tolineno="584" lineno="None">
                        <Name fromlineno="584" tolineno="584" lineno="584" name="task"/>
                      </Index>
                    </Subscript>
                    <Subscript fromlineno="585" tolineno="585" lineno="585">
                      <Getattr fromlineno="585" tolineno="585" lineno="585" attrname="tasks_tdepends" expr="self">
                        <Name fromlineno="585" tolineno="585" lineno="585" name="self"/>
                      </Getattr>
                      <Index fromlineno="585" tolineno="585" lineno="None">
                        <Name fromlineno="585" tolineno="585" lineno="585" name="task"/>
                      </Index>
                    </Subscript>
                  </Tuple>
                </BinOp>
              </CallFunc>
            </Discard>
          </For>
          <Discard fromlineno="587" tolineno="587" lineno="587">
            <CallFunc fromlineno="587" tolineno="587" lineno="587" func="Getattr(debug)">
              <Getattr fromlineno="587" tolineno="587" lineno="587" attrname="debug" expr="bb.msg">
                <Getattr fromlineno="587" tolineno="587" lineno="587" attrname="msg" expr="bb">
                  <Name fromlineno="587" tolineno="587" lineno="587" name="bb"/>
                </Getattr>
              </Getattr>
              <Const fromlineno="587" tolineno="587" lineno="587" type="int">3</Const>
              <Getattr fromlineno="587" tolineno="587" lineno="587" attrname="TaskData" expr="bb.msg.domain">
                <Getattr fromlineno="587" tolineno="587" lineno="587" attrname="domain" expr="bb.msg">
                  <Getattr fromlineno="587" tolineno="587" lineno="587" attrname="msg" expr="bb">
                    <Name fromlineno="587" tolineno="587" lineno="587" name="bb"/>
                  </Getattr>
                </Getattr>
              </Getattr>
              <Const fromlineno="587" tolineno="587" lineno="587" type="str">'dependency ids (per fn):'</Const>
            </CallFunc>
          </Discard>
          <For fromlineno="588" tolineno="589" lineno="588">
            <AssName fromlineno="588" tolineno="588" lineno="588" name="fnid"/>
            <Getattr fromlineno="588" tolineno="588" lineno="588" attrname="depids" expr="self">
              <Name fromlineno="588" tolineno="588" lineno="588" name="self"/>
            </Getattr>
            <Discard fromlineno="589" tolineno="589" lineno="589">
              <CallFunc fromlineno="589" tolineno="589" lineno="589" func="Getattr(debug)">
                <Getattr fromlineno="589" tolineno="589" lineno="589" attrname="debug" expr="bb.msg">
                  <Getattr fromlineno="589" tolineno="589" lineno="589" attrname="msg" expr="bb">
                    <Name fromlineno="589" tolineno="589" lineno="589" name="bb"/>
                  </Getattr>
                </Getattr>
                <Const fromlineno="589" tolineno="589" lineno="589" type="int">3</Const>
                <Getattr fromlineno="589" tolineno="589" lineno="589" attrname="TaskData" expr="bb.msg.domain">
                  <Getattr fromlineno="589" tolineno="589" lineno="589" attrname="domain" expr="bb.msg">
                    <Getattr fromlineno="589" tolineno="589" lineno="589" attrname="msg" expr="bb">
                      <Name fromlineno="589" tolineno="589" lineno="589" name="bb"/>
                    </Getattr>
                  </Getattr>
                </Getattr>
                <BinOp fromlineno="589" tolineno="589" lineno="589" op="%" left="' %s %s: %s'" right="(fnid, self.fn_index[fnid], self.depids[fnid])">
                  <Const fromlineno="589" tolineno="589" lineno="589" type="str">' %s %s: %s'</Const>
                  <Tuple fromlineno="589" tolineno="589" lineno="589">
                    <Name fromlineno="589" tolineno="589" lineno="589" name="fnid"/>
                    <Subscript fromlineno="589" tolineno="589" lineno="589">
                      <Getattr fromlineno="589" tolineno="589" lineno="589" attrname="fn_index" expr="self">
                        <Name fromlineno="589" tolineno="589" lineno="589" name="self"/>
                      </Getattr>
                      <Index fromlineno="589" tolineno="589" lineno="None">
                        <Name fromlineno="589" tolineno="589" lineno="589" name="fnid"/>
                      </Index>
                    </Subscript>
                    <Subscript fromlineno="589" tolineno="589" lineno="589">
                      <Getattr fromlineno="589" tolineno="589" lineno="589" attrname="depids" expr="self">
                        <Name fromlineno="589" tolineno="589" lineno="589" name="self"/>
                      </Getattr>
                      <Index fromlineno="589" tolineno="589" lineno="None">
                        <Name fromlineno="589" tolineno="589" lineno="589" name="fnid"/>
                      </Index>
                    </Subscript>
                  </Tuple>
                </BinOp>
              </CallFunc>
            </Discard>
          </For>
          <Discard fromlineno="591" tolineno="591" lineno="591">
            <CallFunc fromlineno="591" tolineno="591" lineno="591" func="Getattr(debug)">
              <Getattr fromlineno="591" tolineno="591" lineno="591" attrname="debug" expr="bb.msg">
                <Getattr fromlineno="591" tolineno="591" lineno="591" attrname="msg" expr="bb">
                  <Name fromlineno="591" tolineno="591" lineno="591" name="bb"/>
                </Getattr>
              </Getattr>
              <Const fromlineno="591" tolineno="591" lineno="591" type="int">3</Const>
              <Getattr fromlineno="591" tolineno="591" lineno="591" attrname="TaskData" expr="bb.msg.domain">
                <Getattr fromlineno="591" tolineno="591" lineno="591" attrname="domain" expr="bb.msg">
                  <Getattr fromlineno="591" tolineno="591" lineno="591" attrname="msg" expr="bb">
                    <Name fromlineno="591" tolineno="591" lineno="591" name="bb"/>
                  </Getattr>
                </Getattr>
              </Getattr>
              <Const fromlineno="591" tolineno="591" lineno="591" type="str">'runtime dependency ids (per fn):'</Const>
            </CallFunc>
          </Discard>
          <For fromlineno="592" tolineno="593" lineno="592">
            <AssName fromlineno="592" tolineno="592" lineno="592" name="fnid"/>
            <Getattr fromlineno="592" tolineno="592" lineno="592" attrname="rdepids" expr="self">
              <Name fromlineno="592" tolineno="592" lineno="592" name="self"/>
            </Getattr>
            <Discard fromlineno="593" tolineno="593" lineno="593">
              <CallFunc fromlineno="593" tolineno="593" lineno="593" func="Getattr(debug)">
                <Getattr fromlineno="593" tolineno="593" lineno="593" attrname="debug" expr="bb.msg">
                  <Getattr fromlineno="593" tolineno="593" lineno="593" attrname="msg" expr="bb">
                    <Name fromlineno="593" tolineno="593" lineno="593" name="bb"/>
                  </Getattr>
                </Getattr>
                <Const fromlineno="593" tolineno="593" lineno="593" type="int">3</Const>
                <Getattr fromlineno="593" tolineno="593" lineno="593" attrname="TaskData" expr="bb.msg.domain">
                  <Getattr fromlineno="593" tolineno="593" lineno="593" attrname="domain" expr="bb.msg">
                    <Getattr fromlineno="593" tolineno="593" lineno="593" attrname="msg" expr="bb">
                      <Name fromlineno="593" tolineno="593" lineno="593" name="bb"/>
                    </Getattr>
                  </Getattr>
                </Getattr>
                <BinOp fromlineno="593" tolineno="593" lineno="593" op="%" left="' %s %s: %s'" right="(fnid, self.fn_index[fnid], self.rdepids[fnid])">
                  <Const fromlineno="593" tolineno="593" lineno="593" type="str">' %s %s: %s'</Const>
                  <Tuple fromlineno="593" tolineno="593" lineno="593">
                    <Name fromlineno="593" tolineno="593" lineno="593" name="fnid"/>
                    <Subscript fromlineno="593" tolineno="593" lineno="593">
                      <Getattr fromlineno="593" tolineno="593" lineno="593" attrname="fn_index" expr="self">
                        <Name fromlineno="593" tolineno="593" lineno="593" name="self"/>
                      </Getattr>
                      <Index fromlineno="593" tolineno="593" lineno="None">
                        <Name fromlineno="593" tolineno="593" lineno="593" name="fnid"/>
                      </Index>
                    </Subscript>
                    <Subscript fromlineno="593" tolineno="593" lineno="593">
                      <Getattr fromlineno="593" tolineno="593" lineno="593" attrname="rdepids" expr="self">
                        <Name fromlineno="593" tolineno="593" lineno="593" name="self"/>
                      </Getattr>
                      <Index fromlineno="593" tolineno="593" lineno="None">
                        <Name fromlineno="593" tolineno="593" lineno="593" name="fnid"/>
                      </Index>
                    </Subscript>
                  </Tuple>
                </BinOp>
              </CallFunc>
            </Discard>
          </For>
        </Function>
      </Class>
    </Module>
    <Module fromlineno="0" tolineno="128" lineno="0" name="bb.msg">
      <Import fromlineno="25" tolineno="25" lineno="25">
        <ImportName name="sys"/>
        <ImportName name="os"/>
        <ImportName name="re"/>
        <ImportName name="bb"/>
      </Import>
      <From fromlineno="26" tolineno="26" lineno="26" modname="bb">
        <ImportName name="utils"/>
        <ImportName name="event"/>
      </From>
      <Assign fromlineno="28" tolineno="28" lineno="28" targets="[&lt;AssName(debug_level) l.28 [bb.msg] at Ox982fe0c&gt;]" value="{}">
        <AssName fromlineno="28" tolineno="28" lineno="28" name="debug_level"/>
        <Dict fromlineno="28" tolineno="28" lineno="28"/>
      </Assign>
      <Assign fromlineno="30" tolineno="30" lineno="30" targets="[&lt;AssName(verbose) l.30 [bb.msg] at Ox982f3ec&gt;]" value="False">
        <AssName fromlineno="30" tolineno="30" lineno="30" name="verbose"/>
        <Const fromlineno="30" tolineno="30" lineno="30" type="bool">False</Const>
      </Assign>
      <Assign fromlineno="32" tolineno="44" lineno="32" targets="[&lt;AssName(domain) l.32 [bb.msg] at Ox982f36c&gt;]" value="bb.utils.Enum('Build', 'Cache', 'Collection', 'Data', 'Depends', 'Fetcher', 'Parsing', 'PersistData', 'Provider', 'RunQueue', 'TaskData', 'Util')">
        <AssName fromlineno="32" tolineno="32" lineno="32" name="domain"/>
        <CallFunc fromlineno="32" tolineno="44" lineno="32" func="Getattr(Enum)">
          <Getattr fromlineno="32" tolineno="32" lineno="32" attrname="Enum" expr="bb.utils">
            <Getattr fromlineno="32" tolineno="32" lineno="32" attrname="utils" expr="bb">
              <Name fromlineno="32" tolineno="32" lineno="32" name="bb"/>
            </Getattr>
          </Getattr>
          <Const fromlineno="33" tolineno="33" lineno="33" type="str">'Build'</Const>
          <Const fromlineno="34" tolineno="34" lineno="34" type="str">'Cache'</Const>
          <Const fromlineno="35" tolineno="35" lineno="35" type="str">'Collection'</Const>
          <Const fromlineno="36" tolineno="36" lineno="36" type="str">'Data'</Const>
          <Const fromlineno="37" tolineno="37" lineno="37" type="str">'Depends'</Const>
          <Const fromlineno="38" tolineno="38" lineno="38" type="str">'Fetcher'</Const>
          <Const fromlineno="39" tolineno="39" lineno="39" type="str">'Parsing'</Const>
          <Const fromlineno="40" tolineno="40" lineno="40" type="str">'PersistData'</Const>
          <Const fromlineno="41" tolineno="41" lineno="41" type="str">'Provider'</Const>
          <Const fromlineno="42" tolineno="42" lineno="42" type="str">'RunQueue'</Const>
          <Const fromlineno="43" tolineno="43" lineno="43" type="str">'TaskData'</Const>
          <Const fromlineno="44" tolineno="44" lineno="44" type="str">'Util'</Const>
        </CallFunc>
      </Assign>
      <Class fromlineno="47" tolineno="52" lineno="47">
        <Getattr fromlineno="47" tolineno="47" lineno="47" attrname="Event" expr="bb.event">
          <Getattr fromlineno="47" tolineno="47" lineno="47" attrname="event" expr="bb">
            <Name fromlineno="47" tolineno="47" lineno="47" name="bb"/>
          </Getattr>
        </Getattr>
        <Function fromlineno="50" tolineno="52" lineno="50">
          <Arguments fromlineno="50" tolineno="50" lineno="None" format_args="self, msg, d">
            <AssName fromlineno="50" tolineno="50" lineno="50" name="self"/>
            <AssName fromlineno="50" tolineno="50" lineno="50" name="msg"/>
            <AssName fromlineno="50" tolineno="50" lineno="50" name="d"/>
          </Arguments>
          <Assign fromlineno="51" tolineno="51" lineno="51" targets="[&lt;AssAttr(_message) l.51 [bb.msg] at Ox9524cac&gt;]" value="msg">
            <AssAttr fromlineno="51" tolineno="51" lineno="51" attrname="_message" expr="self">
              <Name fromlineno="51" tolineno="51" lineno="51" name="self"/>
            </AssAttr>
            <Name fromlineno="51" tolineno="51" lineno="51" name="msg"/>
          </Assign>
          <Discard fromlineno="52" tolineno="52" lineno="52">
            <CallFunc fromlineno="52" tolineno="52" lineno="52" func="Getattr(__init__)">
              <Getattr fromlineno="52" tolineno="52" lineno="52" attrname="__init__" expr="event.Event">
                <Getattr fromlineno="52" tolineno="52" lineno="52" attrname="Event" expr="event">
                  <Name fromlineno="52" tolineno="52" lineno="52" name="event"/>
                </Getattr>
              </Getattr>
              <Name fromlineno="52" tolineno="52" lineno="52" name="self"/>
              <Name fromlineno="52" tolineno="52" lineno="52" name="d"/>
            </CallFunc>
          </Discard>
        </Function>
      </Class>
      <Class fromlineno="54" tolineno="54" lineno="54">
        <Name fromlineno="54" tolineno="54" lineno="54" name="MsgBase"/>
      </Class>
      <Class fromlineno="57" tolineno="57" lineno="57">
        <Name fromlineno="57" tolineno="57" lineno="57" name="MsgBase"/>
      </Class>
      <Class fromlineno="60" tolineno="60" lineno="60">
        <Name fromlineno="60" tolineno="60" lineno="60" name="MsgBase"/>
      </Class>
      <Class fromlineno="63" tolineno="63" lineno="63">
        <Name fromlineno="63" tolineno="63" lineno="63" name="MsgBase"/>
      </Class>
      <Class fromlineno="66" tolineno="66" lineno="66">
        <Name fromlineno="66" tolineno="66" lineno="66" name="MsgBase"/>
      </Class>
      <Class fromlineno="69" tolineno="69" lineno="69">
        <Name fromlineno="69" tolineno="69" lineno="69" name="MsgBase"/>
      </Class>
      <Function fromlineno="76" tolineno="80" lineno="76">
        <Arguments fromlineno="76" tolineno="76" lineno="None" format_args="level">
          <AssName fromlineno="76" tolineno="76" lineno="76" name="level"/>
        </Arguments>
        <Assign fromlineno="77" tolineno="77" lineno="77" targets="[&lt;AssAttr(debug_level) l.77 [bb.msg] at Ox9524fac&gt;]" value="{}">
          <AssAttr fromlineno="77" tolineno="77" lineno="77" attrname="debug_level" expr="bb.msg">
            <Getattr fromlineno="77" tolineno="77" lineno="77" attrname="msg" expr="bb">
              <Name fromlineno="77" tolineno="77" lineno="77" name="bb"/>
            </Getattr>
          </AssAttr>
          <Dict fromlineno="77" tolineno="77" lineno="77"/>
        </Assign>
        <For fromlineno="78" tolineno="79" lineno="78">
          <AssName fromlineno="78" tolineno="78" lineno="78" name="domain"/>
          <Getattr fromlineno="78" tolineno="78" lineno="78" attrname="domain" expr="bb.msg">
            <Getattr fromlineno="78" tolineno="78" lineno="78" attrname="msg" expr="bb">
              <Name fromlineno="78" tolineno="78" lineno="78" name="bb"/>
            </Getattr>
          </Getattr>
          <Assign fromlineno="79" tolineno="79" lineno="79" targets="[&lt;Subscript() l.79 [bb.msg] at Ox9524e0c&gt;]" value="level">
            <Subscript fromlineno="79" tolineno="79" lineno="79">
              <Getattr fromlineno="79" tolineno="79" lineno="79" attrname="debug_level" expr="bb.msg">
                <Getattr fromlineno="79" tolineno="79" lineno="79" attrname="msg" expr="bb">
                  <Name fromlineno="79" tolineno="79" lineno="79" name="bb"/>
                </Getattr>
              </Getattr>
              <Index fromlineno="79" tolineno="79" lineno="None">
                <Name fromlineno="79" tolineno="79" lineno="79" name="domain"/>
              </Index>
            </Subscript>
            <Name fromlineno="79" tolineno="79" lineno="79" name="level"/>
          </Assign>
        </For>
        <Assign fromlineno="80" tolineno="80" lineno="80" targets="[&lt;Subscript() l.80 [bb.msg] at Ox9524e2c&gt;]" value="level">
          <Subscript fromlineno="80" tolineno="80" lineno="80">
            <Getattr fromlineno="80" tolineno="80" lineno="80" attrname="debug_level" expr="bb.msg">
              <Getattr fromlineno="80" tolineno="80" lineno="80" attrname="msg" expr="bb">
                <Name fromlineno="80" tolineno="80" lineno="80" name="bb"/>
              </Getattr>
            </Getattr>
            <Index fromlineno="80" tolineno="80" lineno="None">
              <Const fromlineno="80" tolineno="80" lineno="80" type="str">'default'</Const>
            </Index>
          </Subscript>
          <Name fromlineno="80" tolineno="80" lineno="80" name="level"/>
        </Assign>
      </Function>
      <Function fromlineno="82" tolineno="83" lineno="82">
        <Arguments fromlineno="82" tolineno="82" lineno="None" format_args="level">
          <AssName fromlineno="82" tolineno="82" lineno="82" name="level"/>
        </Arguments>
        <Assign fromlineno="83" tolineno="83" lineno="83" targets="[&lt;AssAttr(verbose) l.83 [bb.msg] at Ox961fecc&gt;]" value="level">
          <AssAttr fromlineno="83" tolineno="83" lineno="83" attrname="verbose" expr="bb.msg">
            <Getattr fromlineno="83" tolineno="83" lineno="83" attrname="msg" expr="bb">
              <Name fromlineno="83" tolineno="83" lineno="83" name="bb"/>
            </Getattr>
          </AssAttr>
          <Name fromlineno="83" tolineno="83" lineno="83" name="level"/>
        </Assign>
      </Function>
      <Function fromlineno="85" tolineno="93" lineno="85">
        <Arguments fromlineno="85" tolineno="85" lineno="None" format_args="domains">
          <AssName fromlineno="85" tolineno="85" lineno="85" name="domains"/>
        </Arguments>
        <For fromlineno="86" tolineno="93" lineno="86">
          <AssName fromlineno="86" tolineno="86" lineno="86" name="domain"/>
          <Name fromlineno="86" tolineno="86" lineno="86" name="domains"/>
          <Assign fromlineno="87" tolineno="87" lineno="87" targets="[&lt;AssName(found) l.87 [bb.msg] at Ox961fa0c&gt;]" value="False">
            <AssName fromlineno="87" tolineno="87" lineno="87" name="found"/>
            <Const fromlineno="87" tolineno="87" lineno="87" type="bool">False</Const>
          </Assign>
          <For fromlineno="88" tolineno="91" lineno="88">
            <AssName fromlineno="88" tolineno="88" lineno="88" name="ddomain"/>
            <Getattr fromlineno="88" tolineno="88" lineno="88" attrname="domain" expr="bb.msg">
              <Getattr fromlineno="88" tolineno="88" lineno="88" attrname="msg" expr="bb">
                <Name fromlineno="88" tolineno="88" lineno="88" name="bb"/>
              </Getattr>
            </Getattr>
            <If fromlineno="89" tolineno="91" lineno="89">
              <Compare fromlineno="89" tolineno="89" lineno="89" op="('==', &lt;CallFunc() l.89 [bb.msg] at Ox921d30c&gt;)">
                <Name fromlineno="89" tolineno="89" lineno="89" name="domain"/>
                <CallFunc fromlineno="89" tolineno="89" lineno="89" func="Name(str)">
                  <Name fromlineno="89" tolineno="89" lineno="89" name="str"/>
                  <Name fromlineno="89" tolineno="89" lineno="89" name="ddomain"/>
                </CallFunc>
              </Compare>
              <Assign fromlineno="90" tolineno="90" lineno="90" targets="[&lt;Subscript() l.90 [bb.msg] at Ox921d08c&gt;]" value="(bb.msg.debug_level[ddomain]) + (1)">
                <Subscript fromlineno="90" tolineno="90" lineno="90">
                  <Getattr fromlineno="90" tolineno="90" lineno="90" attrname="debug_level" expr="bb.msg">
                    <Getattr fromlineno="90" tolineno="90" lineno="90" attrname="msg" expr="bb">
                      <Name fromlineno="90" tolineno="90" lineno="90" name="bb"/>
                    </Getattr>
                  </Getattr>
                  <Index fromlineno="90" tolineno="90" lineno="None">
                    <Name fromlineno="90" tolineno="90" lineno="90" name="ddomain"/>
                  </Index>
                </Subscript>
                <BinOp fromlineno="90" tolineno="90" lineno="90" op="+" left="bb.msg.debug_level[ddomain]" right="1">
                  <Subscript fromlineno="90" tolineno="90" lineno="90">
                    <Getattr fromlineno="90" tolineno="90" lineno="90" attrname="debug_level" expr="bb.msg">
                      <Getattr fromlineno="90" tolineno="90" lineno="90" attrname="msg" expr="bb">
                        <Name fromlineno="90" tolineno="90" lineno="90" name="bb"/>
                      </Getattr>
                    </Getattr>
                    <Index fromlineno="90" tolineno="90" lineno="None">
                      <Name fromlineno="90" tolineno="90" lineno="90" name="ddomain"/>
                    </Index>
                  </Subscript>
                  <Const fromlineno="90" tolineno="90" lineno="90" type="int">1</Const>
                </BinOp>
              </Assign>
              <Assign fromlineno="91" tolineno="91" lineno="91" targets="[&lt;AssName(found) l.91 [bb.msg] at Ox981aecc&gt;]" value="True">
                <AssName fromlineno="91" tolineno="91" lineno="91" name="found"/>
                <Const fromlineno="91" tolineno="91" lineno="91" type="bool">True</Const>
              </Assign>
            </If>
          </For>
          <If fromlineno="92" tolineno="93" lineno="92">
            <UnaryOp fromlineno="92" tolineno="92" lineno="92">
              <Name fromlineno="92" tolineno="92" lineno="92" name="found"/>
            </UnaryOp>
            <Discard fromlineno="93" tolineno="93" lineno="93">
              <CallFunc fromlineno="93" tolineno="93" lineno="93" func="Getattr(warn)">
                <Getattr fromlineno="93" tolineno="93" lineno="93" attrname="warn" expr="bb.msg">
                  <Getattr fromlineno="93" tolineno="93" lineno="93" attrname="msg" expr="bb">
                    <Name fromlineno="93" tolineno="93" lineno="93" name="bb"/>
                  </Getattr>
                </Getattr>
                <Const fromlineno="93" tolineno="93" lineno="93" type="NoneType">None</Const>
                <BinOp fromlineno="93" tolineno="93" lineno="93" op="%" left="'Logging domain %s is not valid, ignoring'" right="domain">
                  <Const fromlineno="93" tolineno="93" lineno="93" type="str">'Logging domain %s is not valid, ignoring'</Const>
                  <Name fromlineno="93" tolineno="93" lineno="93" name="domain"/>
                </BinOp>
              </CallFunc>
            </Discard>
          </If>
        </For>
      </Function>
      <Function fromlineno="99" tolineno="104" lineno="99">
        <Arguments fromlineno="99" tolineno="99" lineno="None" format_args="level, domain, msg, fn=None">
          <AssName fromlineno="99" tolineno="99" lineno="99" name="level"/>
          <AssName fromlineno="99" tolineno="99" lineno="99" name="domain"/>
          <AssName fromlineno="99" tolineno="99" lineno="99" name="msg"/>
          <AssName fromlineno="99" tolineno="99" lineno="99" name="fn"/>
          <Const fromlineno="99" tolineno="99" lineno="99" type="NoneType">None</Const>
        </Arguments>
        <Discard fromlineno="100" tolineno="100" lineno="100">
          <CallFunc fromlineno="100" tolineno="100" lineno="100" func="Getattr(fire)">
            <Getattr fromlineno="100" tolineno="100" lineno="100" attrname="fire" expr="bb.event">
              <Getattr fromlineno="100" tolineno="100" lineno="100" attrname="event" expr="bb">
                <Name fromlineno="100" tolineno="100" lineno="100" name="bb"/>
              </Getattr>
            </Getattr>
            <CallFunc fromlineno="100" tolineno="100" lineno="100" func="Name(MsgDebug)">
              <Name fromlineno="100" tolineno="100" lineno="100" name="MsgDebug"/>
              <Name fromlineno="100" tolineno="100" lineno="100" name="msg"/>
              <Const fromlineno="100" tolineno="100" lineno="100" type="NoneType">None</Const>
            </CallFunc>
          </CallFunc>
        </Discard>
        <If fromlineno="101" tolineno="102" lineno="101">
          <UnaryOp fromlineno="101" tolineno="101" lineno="101">
            <Name fromlineno="101" tolineno="101" lineno="101" name="domain"/>
          </UnaryOp>
          <Assign fromlineno="102" tolineno="102" lineno="102" targets="[&lt;AssName(domain) l.102 [bb.msg] at Ox95254ac&gt;]" value="'default'">
            <AssName fromlineno="102" tolineno="102" lineno="102" name="domain"/>
            <Const fromlineno="102" tolineno="102" lineno="102" type="str">'default'</Const>
          </Assign>
        </If>
        <If fromlineno="103" tolineno="104" lineno="103">
          <Compare fromlineno="103" tolineno="103" lineno="103" op="('&gt;=', &lt;Name(level) l.103 [bb.msg] at Ox95253ac&gt;)">
            <Subscript fromlineno="103" tolineno="103" lineno="103">
              <Name fromlineno="103" tolineno="103" lineno="103" name="debug_level"/>
              <Index fromlineno="103" tolineno="103" lineno="None">
                <Name fromlineno="103" tolineno="103" lineno="103" name="domain"/>
              </Index>
            </Subscript>
            <Name fromlineno="103" tolineno="103" lineno="103" name="level"/>
          </Compare>
          <Print fromlineno="104" tolineno="104" lineno="104">
            <BinOp fromlineno="104" tolineno="104" lineno="104" op="+" left="'DEBUG: '" right="msg">
              <Const fromlineno="104" tolineno="104" lineno="104" type="str">'DEBUG: '</Const>
              <Name fromlineno="104" tolineno="104" lineno="104" name="msg"/>
            </BinOp>
          </Print>
        </If>
      </Function>
      <Function fromlineno="106" tolineno="111" lineno="106">
        <Arguments fromlineno="106" tolineno="106" lineno="None" format_args="level, domain, msg, fn=None">
          <AssName fromlineno="106" tolineno="106" lineno="106" name="level"/>
          <AssName fromlineno="106" tolineno="106" lineno="106" name="domain"/>
          <AssName fromlineno="106" tolineno="106" lineno="106" name="msg"/>
          <AssName fromlineno="106" tolineno="106" lineno="106" name="fn"/>
          <Const fromlineno="106" tolineno="106" lineno="106" type="NoneType">None</Const>
        </Arguments>
        <Discard fromlineno="107" tolineno="107" lineno="107">
          <CallFunc fromlineno="107" tolineno="107" lineno="107" func="Getattr(fire)">
            <Getattr fromlineno="107" tolineno="107" lineno="107" attrname="fire" expr="bb.event">
              <Getattr fromlineno="107" tolineno="107" lineno="107" attrname="event" expr="bb">
                <Name fromlineno="107" tolineno="107" lineno="107" name="bb"/>
              </Getattr>
            </Getattr>
            <CallFunc fromlineno="107" tolineno="107" lineno="107" func="Name(MsgNote)">
              <Name fromlineno="107" tolineno="107" lineno="107" name="MsgNote"/>
              <Name fromlineno="107" tolineno="107" lineno="107" name="msg"/>
              <Const fromlineno="107" tolineno="107" lineno="107" type="NoneType">None</Const>
            </CallFunc>
          </CallFunc>
        </Discard>
        <If fromlineno="108" tolineno="109" lineno="108">
          <UnaryOp fromlineno="108" tolineno="108" lineno="108">
            <Name fromlineno="108" tolineno="108" lineno="108" name="domain"/>
          </UnaryOp>
          <Assign fromlineno="109" tolineno="109" lineno="109" targets="[&lt;AssName(domain) l.109 [bb.msg] at Ox952652c&gt;]" value="'default'">
            <AssName fromlineno="109" tolineno="109" lineno="109" name="domain"/>
            <Const fromlineno="109" tolineno="109" lineno="109" type="str">'default'</Const>
          </Assign>
        </If>
        <If fromlineno="110" tolineno="111" lineno="110">
          <BoolOp fromlineno="110" tolineno="110" lineno="110" op="or" values="level == 1,verbose,debug_level[domain] &gt;= 1,">
            <Compare fromlineno="110" tolineno="110" lineno="110" op="('==', &lt;Const(int) l.110 [bb.msg] at Ox952628c&gt;)">
              <Name fromlineno="110" tolineno="110" lineno="110" name="level"/>
              <Const fromlineno="110" tolineno="110" lineno="110" type="int">1</Const>
            </Compare>
            <Name fromlineno="110" tolineno="110" lineno="110" name="verbose"/>
            <Compare fromlineno="110" tolineno="110" lineno="110" op="('&gt;=', &lt;Const(int) l.110 [bb.msg] at Ox95260cc&gt;)">
              <Subscript fromlineno="110" tolineno="110" lineno="110">
                <Name fromlineno="110" tolineno="110" lineno="110" name="debug_level"/>
                <Index fromlineno="110" tolineno="110" lineno="None">
                  <Name fromlineno="110" tolineno="110" lineno="110" name="domain"/>
                </Index>
              </Subscript>
              <Const fromlineno="110" tolineno="110" lineno="110" type="int">1</Const>
            </Compare>
          </BoolOp>
          <Print fromlineno="111" tolineno="111" lineno="111">
            <BinOp fromlineno="111" tolineno="111" lineno="111" op="+" left="'NOTE: '" right="msg">
              <Const fromlineno="111" tolineno="111" lineno="111" type="str">'NOTE: '</Const>
              <Name fromlineno="111" tolineno="111" lineno="111" name="msg"/>
            </BinOp>
          </Print>
        </If>
      </Function>
      <Function fromlineno="113" tolineno="115" lineno="113">
        <Arguments fromlineno="113" tolineno="113" lineno="None" format_args="domain, msg, fn=None">
          <AssName fromlineno="113" tolineno="113" lineno="113" name="domain"/>
          <AssName fromlineno="113" tolineno="113" lineno="113" name="msg"/>
          <AssName fromlineno="113" tolineno="113" lineno="113" name="fn"/>
          <Const fromlineno="113" tolineno="113" lineno="113" type="NoneType">None</Const>
        </Arguments>
        <Discard fromlineno="114" tolineno="114" lineno="114">
          <CallFunc fromlineno="114" tolineno="114" lineno="114" func="Getattr(fire)">
            <Getattr fromlineno="114" tolineno="114" lineno="114" attrname="fire" expr="bb.event">
              <Getattr fromlineno="114" tolineno="114" lineno="114" attrname="event" expr="bb">
                <Name fromlineno="114" tolineno="114" lineno="114" name="bb"/>
              </Getattr>
            </Getattr>
            <CallFunc fromlineno="114" tolineno="114" lineno="114" func="Name(MsgWarn)">
              <Name fromlineno="114" tolineno="114" lineno="114" name="MsgWarn"/>
              <Name fromlineno="114" tolineno="114" lineno="114" name="msg"/>
              <Const fromlineno="114" tolineno="114" lineno="114" type="NoneType">None</Const>
            </CallFunc>
          </CallFunc>
        </Discard>
        <Print fromlineno="115" tolineno="115" lineno="115">
          <BinOp fromlineno="115" tolineno="115" lineno="115" op="+" left="'WARNING: '" right="msg">
            <Const fromlineno="115" tolineno="115" lineno="115" type="str">'WARNING: '</Const>
            <Name fromlineno="115" tolineno="115" lineno="115" name="msg"/>
          </BinOp>
        </Print>
      </Function>
      <Function fromlineno="117" tolineno="119" lineno="117">
        <Arguments fromlineno="117" tolineno="117" lineno="None" format_args="domain, msg, fn=None">
          <AssName fromlineno="117" tolineno="117" lineno="117" name="domain"/>
          <AssName fromlineno="117" tolineno="117" lineno="117" name="msg"/>
          <AssName fromlineno="117" tolineno="117" lineno="117" name="fn"/>
          <Const fromlineno="117" tolineno="117" lineno="117" type="NoneType">None</Const>
        </Arguments>
        <Discard fromlineno="118" tolineno="118" lineno="118">
          <CallFunc fromlineno="118" tolineno="118" lineno="118" func="Getattr(fire)">
            <Getattr fromlineno="118" tolineno="118" lineno="118" attrname="fire" expr="bb.event">
              <Getattr fromlineno="118" tolineno="118" lineno="118" attrname="event" expr="bb">
                <Name fromlineno="118" tolineno="118" lineno="118" name="bb"/>
              </Getattr>
            </Getattr>
            <CallFunc fromlineno="118" tolineno="118" lineno="118" func="Name(MsgError)">
              <Name fromlineno="118" tolineno="118" lineno="118" name="MsgError"/>
              <Name fromlineno="118" tolineno="118" lineno="118" name="msg"/>
              <Const fromlineno="118" tolineno="118" lineno="118" type="NoneType">None</Const>
            </CallFunc>
          </CallFunc>
        </Discard>
        <Print fromlineno="119" tolineno="119" lineno="119">
          <BinOp fromlineno="119" tolineno="119" lineno="119" op="+" left="'ERROR: '" right="msg">
            <Const fromlineno="119" tolineno="119" lineno="119" type="str">'ERROR: '</Const>
            <Name fromlineno="119" tolineno="119" lineno="119" name="msg"/>
          </BinOp>
        </Print>
      </Function>
      <Function fromlineno="121" tolineno="124" lineno="121">
        <Arguments fromlineno="121" tolineno="121" lineno="None" format_args="domain, msg, fn=None">
          <AssName fromlineno="121" tolineno="121" lineno="121" name="domain"/>
          <AssName fromlineno="121" tolineno="121" lineno="121" name="msg"/>
          <AssName fromlineno="121" tolineno="121" lineno="121" name="fn"/>
          <Const fromlineno="121" tolineno="121" lineno="121" type="NoneType">None</Const>
        </Arguments>
        <Discard fromlineno="122" tolineno="122" lineno="122">
          <CallFunc fromlineno="122" tolineno="122" lineno="122" func="Getattr(fire)">
            <Getattr fromlineno="122" tolineno="122" lineno="122" attrname="fire" expr="bb.event">
              <Getattr fromlineno="122" tolineno="122" lineno="122" attrname="event" expr="bb">
                <Name fromlineno="122" tolineno="122" lineno="122" name="bb"/>
              </Getattr>
            </Getattr>
            <CallFunc fromlineno="122" tolineno="122" lineno="122" func="Name(MsgFatal)">
              <Name fromlineno="122" tolineno="122" lineno="122" name="MsgFatal"/>
              <Name fromlineno="122" tolineno="122" lineno="122" name="msg"/>
              <Const fromlineno="122" tolineno="122" lineno="122" type="NoneType">None</Const>
            </CallFunc>
          </CallFunc>
        </Discard>
        <Print fromlineno="123" tolineno="123" lineno="123">
          <BinOp fromlineno="123" tolineno="123" lineno="123" op="+" left="'ERROR: '" right="msg">
            <Const fromlineno="123" tolineno="123" lineno="123" type="str">'ERROR: '</Const>
            <Name fromlineno="123" tolineno="123" lineno="123" name="msg"/>
          </BinOp>
        </Print>
        <Discard fromlineno="124" tolineno="124" lineno="124">
          <CallFunc fromlineno="124" tolineno="124" lineno="124" func="Getattr(exit)">
            <Getattr fromlineno="124" tolineno="124" lineno="124" attrname="exit" expr="sys">
              <Name fromlineno="124" tolineno="124" lineno="124" name="sys"/>
            </Getattr>
            <Const fromlineno="124" tolineno="124" lineno="124" type="int">1</Const>
          </CallFunc>
        </Discard>
      </Function>
      <Function fromlineno="126" tolineno="128" lineno="126">
        <Arguments fromlineno="126" tolineno="126" lineno="None" format_args="msg, fn=None">
          <AssName fromlineno="126" tolineno="126" lineno="126" name="msg"/>
          <AssName fromlineno="126" tolineno="126" lineno="126" name="fn"/>
          <Const fromlineno="126" tolineno="126" lineno="126" type="NoneType">None</Const>
        </Arguments>
        <Discard fromlineno="127" tolineno="127" lineno="127">
          <CallFunc fromlineno="127" tolineno="127" lineno="127" func="Getattr(fire)">
            <Getattr fromlineno="127" tolineno="127" lineno="127" attrname="fire" expr="bb.event">
              <Getattr fromlineno="127" tolineno="127" lineno="127" attrname="event" expr="bb">
                <Name fromlineno="127" tolineno="127" lineno="127" name="bb"/>
              </Getattr>
            </Getattr>
            <CallFunc fromlineno="127" tolineno="127" lineno="127" func="Name(MsgPlain)">
              <Name fromlineno="127" tolineno="127" lineno="127" name="MsgPlain"/>
              <Name fromlineno="127" tolineno="127" lineno="127" name="msg"/>
              <Const fromlineno="127" tolineno="127" lineno="127" type="NoneType">None</Const>
            </CallFunc>
          </CallFunc>
        </Discard>
        <Print fromlineno="128" tolineno="128" lineno="128">
          <Name fromlineno="128" tolineno="128" lineno="128" name="msg"/>
        </Print>
      </Function>
    </Module>
    <Module fromlineno="0" tolineno="107" lineno="0" name="bb.persist_data">
      <Import fromlineno="18" tolineno="18" lineno="18">
        <ImportName name="bb"/>
        <ImportName name="os"/>
      </Import>
      <TryExcept fromlineno="20" tolineno="26" lineno="20">
        <Import fromlineno="21" tolineno="21" lineno="21">
          <ImportName name="sqlite3"/>
        </Import>
        <ExceptHandler fromlineno="22" tolineno="26" lineno="22">
          <Name fromlineno="22" tolineno="22" lineno="22" name="ImportError"/>
          <TryExcept fromlineno="23" tolineno="26" lineno="23">
            <From fromlineno="24" tolineno="24" lineno="24" modname="pysqlite2">
              <ImportName name="dbapi2" asname="sqlite3"/>
            </From>
            <ExceptHandler fromlineno="25" tolineno="26" lineno="25">
              <Name fromlineno="25" tolineno="25" lineno="25" name="ImportError"/>
              <Discard fromlineno="26" tolineno="26" lineno="26">
                <CallFunc fromlineno="26" tolineno="26" lineno="26" func="Getattr(fatal)">
                  <Getattr fromlineno="26" tolineno="26" lineno="26" attrname="fatal" expr="bb.msg">
                    <Getattr fromlineno="26" tolineno="26" lineno="26" attrname="msg" expr="bb">
                      <Name fromlineno="26" tolineno="26" lineno="26" name="bb"/>
                    </Getattr>
                  </Getattr>
                  <Getattr fromlineno="26" tolineno="26" lineno="26" attrname="PersistData" expr="bb.msg.domain">
                    <Getattr fromlineno="26" tolineno="26" lineno="26" attrname="domain" expr="bb.msg">
                      <Getattr fromlineno="26" tolineno="26" lineno="26" attrname="msg" expr="bb">
                        <Name fromlineno="26" tolineno="26" lineno="26" name="bb"/>
                      </Getattr>
                    </Getattr>
                  </Getattr>
                  <Const fromlineno="26" tolineno="26" lineno="26" type="str">"Importing sqlite3 and pysqlite2 failed, please install one of them. Python 2.5 or a 'python-pysqlite2' like package is likely to be what you need."</Const>
                </CallFunc>
              </Discard>
            </ExceptHandler>
          </TryExcept>
        </ExceptHandler>
      </TryExcept>
      <Assign fromlineno="28" tolineno="28" lineno="28" targets="[&lt;AssName(sqlversion) l.28 [bb.persist_data] at Ox98fbaec&gt;]" value="sqlite3.sqlite_version_info">
        <AssName fromlineno="28" tolineno="28" lineno="28" name="sqlversion"/>
        <Getattr fromlineno="28" tolineno="28" lineno="28" attrname="sqlite_version_info" expr="sqlite3">
          <Name fromlineno="28" tolineno="28" lineno="28" name="sqlite3"/>
        </Getattr>
      </Assign>
      <If fromlineno="29" tolineno="30" lineno="29">
        <BoolOp fromlineno="29" tolineno="29" lineno="29" op="or" values="sqlversion[0] &lt; 3,(sqlversion[0] == 3) and (sqlversion[1] &lt; 3),">
          <Compare fromlineno="29" tolineno="29" lineno="29" op="('&lt;', &lt;Const(int) l.29 [bb.persist_data] at Ox98fbcec&gt;)">
            <Subscript fromlineno="29" tolineno="29" lineno="29">
              <Name fromlineno="29" tolineno="29" lineno="29" name="sqlversion"/>
              <Index fromlineno="29" tolineno="29" lineno="None">
                <Const fromlineno="29" tolineno="29" lineno="29" type="int">0</Const>
              </Index>
            </Subscript>
            <Const fromlineno="29" tolineno="29" lineno="29" type="int">3</Const>
          </Compare>
          <BoolOp fromlineno="29" tolineno="29" lineno="29" op="and" values="sqlversion[0] == 3,sqlversion[1] &lt; 3,">
            <Compare fromlineno="29" tolineno="29" lineno="29" op="('==', &lt;Const(int) l.29 [bb.persist_data] at Ox98fb72c&gt;)">
              <Subscript fromlineno="29" tolineno="29" lineno="29">
                <Name fromlineno="29" tolineno="29" lineno="29" name="sqlversion"/>
                <Index fromlineno="29" tolineno="29" lineno="None">
                  <Const fromlineno="29" tolineno="29" lineno="29" type="int">0</Const>
                </Index>
              </Subscript>
              <Const fromlineno="29" tolineno="29" lineno="29" type="int">3</Const>
            </Compare>
            <Compare fromlineno="29" tolineno="29" lineno="29" op="('&lt;', &lt;Const(int) l.29 [bb.persist_data] at Ox98fb8ac&gt;)">
              <Subscript fromlineno="29" tolineno="29" lineno="29">
                <Name fromlineno="29" tolineno="29" lineno="29" name="sqlversion"/>
                <Index fromlineno="29" tolineno="29" lineno="None">
                  <Const fromlineno="29" tolineno="29" lineno="29" type="int">1</Const>
                </Index>
              </Subscript>
              <Const fromlineno="29" tolineno="29" lineno="29" type="int">3</Const>
            </Compare>
          </BoolOp>
        </BoolOp>
        <Discard fromlineno="30" tolineno="30" lineno="30">
          <CallFunc fromlineno="30" tolineno="30" lineno="30" func="Getattr(fatal)">
            <Getattr fromlineno="30" tolineno="30" lineno="30" attrname="fatal" expr="bb.msg">
              <Getattr fromlineno="30" tolineno="30" lineno="30" attrname="msg" expr="bb">
                <Name fromlineno="30" tolineno="30" lineno="30" name="bb"/>
              </Getattr>
            </Getattr>
            <Getattr fromlineno="30" tolineno="30" lineno="30" attrname="PersistData" expr="bb.msg.domain">
              <Getattr fromlineno="30" tolineno="30" lineno="30" attrname="domain" expr="bb.msg">
                <Getattr fromlineno="30" tolineno="30" lineno="30" attrname="msg" expr="bb">
                  <Name fromlineno="30" tolineno="30" lineno="30" name="bb"/>
                </Getattr>
              </Getattr>
            </Getattr>
            <Const fromlineno="30" tolineno="30" lineno="30" type="str">'sqlite3 version 3.3.0 or later is required.'</Const>
          </CallFunc>
        </Discard>
      </If>
      <Class fromlineno="32" tolineno="107" lineno="32">
        <Function fromlineno="45" tolineno="57" lineno="45">
          <Arguments fromlineno="45" tolineno="45" lineno="None" format_args="self, d">
            <AssName fromlineno="45" tolineno="45" lineno="45" name="self"/>
            <AssName fromlineno="45" tolineno="45" lineno="45" name="d"/>
          </Arguments>
          <Assign fromlineno="46" tolineno="46" lineno="46" targets="[&lt;AssAttr(cachedir) l.46 [bb.persist_data] at Ox9a3aa4c&gt;]" value="(bb.data.getVar('PERSISTENT_DIR', d, True)) or (bb.data.getVar('CACHE', d, True))">
            <AssAttr fromlineno="46" tolineno="46" lineno="46" attrname="cachedir" expr="self">
              <Name fromlineno="46" tolineno="46" lineno="46" name="self"/>
            </AssAttr>
            <BoolOp fromlineno="46" tolineno="46" lineno="46" op="or" values="bb.data.getVar('PERSISTENT_DIR', d, True),bb.data.getVar('CACHE', d, True),">
              <CallFunc fromlineno="46" tolineno="46" lineno="46" func="Getattr(getVar)">
                <Getattr fromlineno="46" tolineno="46" lineno="46" attrname="getVar" expr="bb.data">
                  <Getattr fromlineno="46" tolineno="46" lineno="46" attrname="data" expr="bb">
                    <Name fromlineno="46" tolineno="46" lineno="46" name="bb"/>
                  </Getattr>
                </Getattr>
                <Const fromlineno="46" tolineno="46" lineno="46" type="str">'PERSISTENT_DIR'</Const>
                <Name fromlineno="46" tolineno="46" lineno="46" name="d"/>
                <Const fromlineno="46" tolineno="46" lineno="46" type="bool">True</Const>
              </CallFunc>
              <CallFunc fromlineno="46" tolineno="46" lineno="46" func="Getattr(getVar)">
                <Getattr fromlineno="46" tolineno="46" lineno="46" attrname="getVar" expr="bb.data">
                  <Getattr fromlineno="46" tolineno="46" lineno="46" attrname="data" expr="bb">
                    <Name fromlineno="46" tolineno="46" lineno="46" name="bb"/>
                  </Getattr>
                </Getattr>
                <Const fromlineno="46" tolineno="46" lineno="46" type="str">'CACHE'</Const>
                <Name fromlineno="46" tolineno="46" lineno="46" name="d"/>
                <Const fromlineno="46" tolineno="46" lineno="46" type="bool">True</Const>
              </CallFunc>
            </BoolOp>
          </Assign>
          <If fromlineno="47" tolineno="48" lineno="47">
            <Compare fromlineno="47" tolineno="47" lineno="47" op="('in', &lt;List(list) l.47 [bb.persist_data] at Ox9a3a2ac&gt;)">
              <Getattr fromlineno="47" tolineno="47" lineno="47" attrname="cachedir" expr="self">
                <Name fromlineno="47" tolineno="47" lineno="47" name="self"/>
              </Getattr>
              <List fromlineno="47" tolineno="47" lineno="47">
                <Const fromlineno="47" tolineno="47" lineno="47" type="NoneType">None</Const>
                <Const fromlineno="47" tolineno="47" lineno="47" type="str">''</Const>
              </List>
            </Compare>
            <Discard fromlineno="48" tolineno="48" lineno="48">
              <CallFunc fromlineno="48" tolineno="48" lineno="48" func="Getattr(fatal)">
                <Getattr fromlineno="48" tolineno="48" lineno="48" attrname="fatal" expr="bb.msg">
                  <Getattr fromlineno="48" tolineno="48" lineno="48" attrname="msg" expr="bb">
                    <Name fromlineno="48" tolineno="48" lineno="48" name="bb"/>
                  </Getattr>
                </Getattr>
                <Getattr fromlineno="48" tolineno="48" lineno="48" attrname="PersistData" expr="bb.msg.domain">
                  <Getattr fromlineno="48" tolineno="48" lineno="48" attrname="domain" expr="bb.msg">
                    <Getattr fromlineno="48" tolineno="48" lineno="48" attrname="msg" expr="bb">
                      <Name fromlineno="48" tolineno="48" lineno="48" name="bb"/>
                    </Getattr>
                  </Getattr>
                </Getattr>
                <Const fromlineno="48" tolineno="48" lineno="48" type="str">"Please set the 'PERSISTENT_DIR' or 'CACHE' variable."</Const>
              </CallFunc>
            </Discard>
          </If>
          <TryExcept fromlineno="49" tolineno="52" lineno="49">
            <Discard fromlineno="50" tolineno="50" lineno="50">
              <CallFunc fromlineno="50" tolineno="50" lineno="50" func="Getattr(stat)">
                <Getattr fromlineno="50" tolineno="50" lineno="50" attrname="stat" expr="os">
                  <Name fromlineno="50" tolineno="50" lineno="50" name="os"/>
                </Getattr>
                <Getattr fromlineno="50" tolineno="50" lineno="50" attrname="cachedir" expr="self">
                  <Name fromlineno="50" tolineno="50" lineno="50" name="self"/>
                </Getattr>
              </CallFunc>
            </Discard>
            <ExceptHandler fromlineno="51" tolineno="52" lineno="51">
              <Name fromlineno="51" tolineno="51" lineno="51" name="OSError"/>
              <Discard fromlineno="52" tolineno="52" lineno="52">
                <CallFunc fromlineno="52" tolineno="52" lineno="52" func="Getattr(mkdirhier)">
                  <Getattr fromlineno="52" tolineno="52" lineno="52" attrname="mkdirhier" expr="bb">
                    <Name fromlineno="52" tolineno="52" lineno="52" name="bb"/>
                  </Getattr>
                  <Getattr fromlineno="52" tolineno="52" lineno="52" attrname="cachedir" expr="self">
                    <Name fromlineno="52" tolineno="52" lineno="52" name="self"/>
                  </Getattr>
                </CallFunc>
              </Discard>
            </ExceptHandler>
          </TryExcept>
          <Assign fromlineno="54" tolineno="54" lineno="54" targets="[&lt;AssAttr(cachefile) l.54 [bb.persist_data] at Ox9a3aa8c&gt;]" value="os.path.join(self.cachedir, 'bb_persist_data.sqlite3')">
            <AssAttr fromlineno="54" tolineno="54" lineno="54" attrname="cachefile" expr="self">
              <Name fromlineno="54" tolineno="54" lineno="54" name="self"/>
            </AssAttr>
            <CallFunc fromlineno="54" tolineno="54" lineno="54" func="Getattr(join)">
              <Getattr fromlineno="54" tolineno="54" lineno="54" attrname="join" expr="os.path">
                <Getattr fromlineno="54" tolineno="54" lineno="54" attrname="path" expr="os">
                  <Name fromlineno="54" tolineno="54" lineno="54" name="os"/>
                </Getattr>
              </Getattr>
              <Getattr fromlineno="54" tolineno="54" lineno="54" attrname="cachedir" expr="self">
                <Name fromlineno="54" tolineno="54" lineno="54" name="self"/>
              </Getattr>
              <Const fromlineno="54" tolineno="54" lineno="54" type="str">'bb_persist_data.sqlite3'</Const>
            </CallFunc>
          </Assign>
          <Discard fromlineno="55" tolineno="55" lineno="55">
            <CallFunc fromlineno="55" tolineno="55" lineno="55" func="Getattr(debug)">
              <Getattr fromlineno="55" tolineno="55" lineno="55" attrname="debug" expr="bb.msg">
                <Getattr fromlineno="55" tolineno="55" lineno="55" attrname="msg" expr="bb">
                  <Name fromlineno="55" tolineno="55" lineno="55" name="bb"/>
                </Getattr>
              </Getattr>
              <Const fromlineno="55" tolineno="55" lineno="55" type="int">1</Const>
              <Getattr fromlineno="55" tolineno="55" lineno="55" attrname="PersistData" expr="bb.msg.domain">
                <Getattr fromlineno="55" tolineno="55" lineno="55" attrname="domain" expr="bb.msg">
                  <Getattr fromlineno="55" tolineno="55" lineno="55" attrname="msg" expr="bb">
                    <Name fromlineno="55" tolineno="55" lineno="55" name="bb"/>
                  </Getattr>
                </Getattr>
              </Getattr>
              <BinOp fromlineno="55" tolineno="55" lineno="55" op="%" left="&quot;Using '%s' as the persistent data cache&quot;" right="self.cachefile">
                <Const fromlineno="55" tolineno="55" lineno="55" type="str">"Using '%s' as the persistent data cache"</Const>
                <Getattr fromlineno="55" tolineno="55" lineno="55" attrname="cachefile" expr="self">
                  <Name fromlineno="55" tolineno="55" lineno="55" name="self"/>
                </Getattr>
              </BinOp>
            </CallFunc>
          </Discard>
          <Assign fromlineno="57" tolineno="57" lineno="57" targets="[&lt;AssAttr(connection) l.57 [bb.persist_data] at Ox9a3a98c&gt;]" value="sqlite3.connect(self.cachefile, timeout=5, isolation_level=None)">
            <AssAttr fromlineno="57" tolineno="57" lineno="57" attrname="connection" expr="self">
              <Name fromlineno="57" tolineno="57" lineno="57" name="self"/>
            </AssAttr>
            <CallFunc fromlineno="57" tolineno="57" lineno="57" func="Getattr(connect)">
              <Getattr fromlineno="57" tolineno="57" lineno="57" attrname="connect" expr="sqlite3">
                <Name fromlineno="57" tolineno="57" lineno="57" name="sqlite3"/>
              </Getattr>
              <Getattr fromlineno="57" tolineno="57" lineno="57" attrname="cachefile" expr="self">
                <Name fromlineno="57" tolineno="57" lineno="57" name="self"/>
              </Getattr>
              <Keyword fromlineno="57" tolineno="57" lineno="None">
                <Const fromlineno="57" tolineno="57" lineno="57" type="int">5</Const>
              </Keyword>
              <Keyword fromlineno="57" tolineno="57" lineno="None">
                <Const fromlineno="57" tolineno="57" lineno="57" type="NoneType">None</Const>
              </Keyword>
            </CallFunc>
          </Assign>
        </Function>
        <Function fromlineno="59" tolineno="64" lineno="59">
          <Arguments fromlineno="59" tolineno="59" lineno="None" format_args="self, domain">
            <AssName fromlineno="59" tolineno="59" lineno="59" name="self"/>
            <AssName fromlineno="59" tolineno="59" lineno="59" name="domain"/>
          </Arguments>
          <Discard fromlineno="64" tolineno="64" lineno="64">
            <CallFunc fromlineno="64" tolineno="64" lineno="64" func="Getattr(execute)">
              <Getattr fromlineno="64" tolineno="64" lineno="64" attrname="execute" expr="self.connection">
                <Getattr fromlineno="64" tolineno="64" lineno="64" attrname="connection" expr="self">
                  <Name fromlineno="64" tolineno="64" lineno="64" name="self"/>
                </Getattr>
              </Getattr>
              <BinOp fromlineno="64" tolineno="64" lineno="64" op="%" left="'CREATE TABLE IF NOT EXISTS %s(key TEXT, value TEXT);'" right="domain">
                <Const fromlineno="64" tolineno="64" lineno="64" type="str">'CREATE TABLE IF NOT EXISTS %s(key TEXT, value TEXT);'</Const>
                <Name fromlineno="64" tolineno="64" lineno="64" name="domain"/>
              </BinOp>
            </CallFunc>
          </Discard>
        </Function>
        <Function fromlineno="66" tolineno="70" lineno="66">
          <Arguments fromlineno="66" tolineno="66" lineno="None" format_args="self, domain">
            <AssName fromlineno="66" tolineno="66" lineno="66" name="self"/>
            <AssName fromlineno="66" tolineno="66" lineno="66" name="domain"/>
          </Arguments>
          <Discard fromlineno="70" tolineno="70" lineno="70">
            <CallFunc fromlineno="70" tolineno="70" lineno="70" func="Getattr(execute)">
              <Getattr fromlineno="70" tolineno="70" lineno="70" attrname="execute" expr="self.connection">
                <Getattr fromlineno="70" tolineno="70" lineno="70" attrname="connection" expr="self">
                  <Name fromlineno="70" tolineno="70" lineno="70" name="self"/>
                </Getattr>
              </Getattr>
              <BinOp fromlineno="70" tolineno="70" lineno="70" op="%" left="'DROP TABLE IF EXISTS %s;'" right="domain">
                <Const fromlineno="70" tolineno="70" lineno="70" type="str">'DROP TABLE IF EXISTS %s;'</Const>
                <Name fromlineno="70" tolineno="70" lineno="70" name="domain"/>
              </BinOp>
            </CallFunc>
          </Discard>
        </Function>
        <Function fromlineno="72" tolineno="78" lineno="72">
          <Arguments fromlineno="72" tolineno="72" lineno="None" format_args="self, domain, key">
            <AssName fromlineno="72" tolineno="72" lineno="72" name="self"/>
            <AssName fromlineno="72" tolineno="72" lineno="72" name="domain"/>
            <AssName fromlineno="72" tolineno="72" lineno="72" name="key"/>
          </Arguments>
          <Assign fromlineno="76" tolineno="76" lineno="76" targets="[&lt;AssName(data) l.76 [bb.persist_data] at Ox98f03cc&gt;]" value="self.connection.execute(('SELECT * from %s where key=?;') % (domain), [key])">
            <AssName fromlineno="76" tolineno="76" lineno="76" name="data"/>
            <CallFunc fromlineno="76" tolineno="76" lineno="76" func="Getattr(execute)">
              <Getattr fromlineno="76" tolineno="76" lineno="76" attrname="execute" expr="self.connection">
                <Getattr fromlineno="76" tolineno="76" lineno="76" attrname="connection" expr="self">
                  <Name fromlineno="76" tolineno="76" lineno="76" name="self"/>
                </Getattr>
              </Getattr>
              <BinOp fromlineno="76" tolineno="76" lineno="76" op="%" left="'SELECT * from %s where key=?;'" right="domain">
                <Const fromlineno="76" tolineno="76" lineno="76" type="str">'SELECT * from %s where key=?;'</Const>
                <Name fromlineno="76" tolineno="76" lineno="76" name="domain"/>
              </BinOp>
              <List fromlineno="76" tolineno="76" lineno="76">
                <Name fromlineno="76" tolineno="76" lineno="76" name="key"/>
              </List>
            </CallFunc>
          </Assign>
          <For fromlineno="77" tolineno="78" lineno="77">
            <AssName fromlineno="77" tolineno="77" lineno="77" name="row"/>
            <Name fromlineno="77" tolineno="77" lineno="77" name="data"/>
            <Return fromlineno="78" tolineno="78" lineno="78">
              <Subscript fromlineno="78" tolineno="78" lineno="78">
                <Name fromlineno="78" tolineno="78" lineno="78" name="row"/>
                <Index fromlineno="78" tolineno="78" lineno="None">
                  <Const fromlineno="78" tolineno="78" lineno="78" type="int">1</Const>
                </Index>
              </Subscript>
            </Return>
          </For>
        </Function>
        <Function fromlineno="80" tolineno="91" lineno="80">
          <Arguments fromlineno="80" tolineno="80" lineno="None" format_args="self, domain, key, value">
            <AssName fromlineno="80" tolineno="80" lineno="80" name="self"/>
            <AssName fromlineno="80" tolineno="80" lineno="80" name="domain"/>
            <AssName fromlineno="80" tolineno="80" lineno="80" name="key"/>
            <AssName fromlineno="80" tolineno="80" lineno="80" name="value"/>
          </Arguments>
          <Assign fromlineno="84" tolineno="84" lineno="84" targets="[&lt;AssName(data) l.84 [bb.persist_data] at Ox98f0b0c&gt;]" value="self.connection.execute(('SELECT * from %s where key=?;') % (domain), [key])">
            <AssName fromlineno="84" tolineno="84" lineno="84" name="data"/>
            <CallFunc fromlineno="84" tolineno="84" lineno="84" func="Getattr(execute)">
              <Getattr fromlineno="84" tolineno="84" lineno="84" attrname="execute" expr="self.connection">
                <Getattr fromlineno="84" tolineno="84" lineno="84" attrname="connection" expr="self">
                  <Name fromlineno="84" tolineno="84" lineno="84" name="self"/>
                </Getattr>
              </Getattr>
              <BinOp fromlineno="84" tolineno="84" lineno="84" op="%" left="'SELECT * from %s where key=?;'" right="domain">
                <Const fromlineno="84" tolineno="84" lineno="84" type="str">'SELECT * from %s where key=?;'</Const>
                <Name fromlineno="84" tolineno="84" lineno="84" name="domain"/>
              </BinOp>
              <List fromlineno="84" tolineno="84" lineno="84">
                <Name fromlineno="84" tolineno="84" lineno="84" name="key"/>
              </List>
            </CallFunc>
          </Assign>
          <Assign fromlineno="85" tolineno="85" lineno="85" targets="[&lt;AssName(rows) l.85 [bb.persist_data] at Ox98f0aac&gt;]" value="0">
            <AssName fromlineno="85" tolineno="85" lineno="85" name="rows"/>
            <Const fromlineno="85" tolineno="85" lineno="85" type="int">0</Const>
          </Assign>
          <For fromlineno="86" tolineno="87" lineno="86">
            <AssName fromlineno="86" tolineno="86" lineno="86" name="row"/>
            <Name fromlineno="86" tolineno="86" lineno="86" name="data"/>
            <Assign fromlineno="87" tolineno="87" lineno="87" targets="[&lt;AssName(rows) l.87 [bb.persist_data] at Ox98f0fcc&gt;]" value="(rows) + (1)">
              <AssName fromlineno="87" tolineno="87" lineno="87" name="rows"/>
              <BinOp fromlineno="87" tolineno="87" lineno="87" op="+" left="rows" right="1">
                <Name fromlineno="87" tolineno="87" lineno="87" name="rows"/>
                <Const fromlineno="87" tolineno="87" lineno="87" type="int">1</Const>
              </BinOp>
            </Assign>
          </For>
          <If fromlineno="88" tolineno="91" lineno="88">
            <Name fromlineno="88" tolineno="88" lineno="88" name="rows"/>
            <Discard fromlineno="89" tolineno="89" lineno="89">
              <CallFunc fromlineno="89" tolineno="89" lineno="89" func="Getattr(_execute)">
                <Getattr fromlineno="89" tolineno="89" lineno="89" attrname="_execute" expr="self">
                  <Name fromlineno="89" tolineno="89" lineno="89" name="self"/>
                </Getattr>
                <BinOp fromlineno="89" tolineno="89" lineno="89" op="%" left="'UPDATE %s SET value=? WHERE key=?;'" right="domain">
                  <Const fromlineno="89" tolineno="89" lineno="89" type="str">'UPDATE %s SET value=? WHERE key=?;'</Const>
                  <Name fromlineno="89" tolineno="89" lineno="89" name="domain"/>
                </BinOp>
                <List fromlineno="89" tolineno="89" lineno="89">
                  <Name fromlineno="89" tolineno="89" lineno="89" name="value"/>
                  <Name fromlineno="89" tolineno="89" lineno="89" name="key"/>
                </List>
              </CallFunc>
            </Discard>
            <Discard fromlineno="91" tolineno="91" lineno="91">
              <CallFunc fromlineno="91" tolineno="91" lineno="91" func="Getattr(_execute)">
                <Getattr fromlineno="91" tolineno="91" lineno="91" attrname="_execute" expr="self">
                  <Name fromlineno="91" tolineno="91" lineno="91" name="self"/>
                </Getattr>
                <BinOp fromlineno="91" tolineno="91" lineno="91" op="%" left="'INSERT into %s(key, value) values (?, ?);'" right="domain">
                  <Const fromlineno="91" tolineno="91" lineno="91" type="str">'INSERT into %s(key, value) values (?, ?);'</Const>
                  <Name fromlineno="91" tolineno="91" lineno="91" name="domain"/>
                </BinOp>
                <List fromlineno="91" tolineno="91" lineno="91">
                  <Name fromlineno="91" tolineno="91" lineno="91" name="key"/>
                  <Name fromlineno="91" tolineno="91" lineno="91" name="value"/>
                </List>
              </CallFunc>
            </Discard>
          </If>
        </Function>
        <Function fromlineno="93" tolineno="97" lineno="93">
          <Arguments fromlineno="93" tolineno="93" lineno="None" format_args="self, domain, key">
            <AssName fromlineno="93" tolineno="93" lineno="93" name="self"/>
            <AssName fromlineno="93" tolineno="93" lineno="93" name="domain"/>
            <AssName fromlineno="93" tolineno="93" lineno="93" name="key"/>
          </Arguments>
          <Discard fromlineno="97" tolineno="97" lineno="97">
            <CallFunc fromlineno="97" tolineno="97" lineno="97" func="Getattr(_execute)">
              <Getattr fromlineno="97" tolineno="97" lineno="97" attrname="_execute" expr="self">
                <Name fromlineno="97" tolineno="97" lineno="97" name="self"/>
              </Getattr>
              <BinOp fromlineno="97" tolineno="97" lineno="97" op="%" left="'DELETE from %s where key=?;'" right="domain">
                <Const fromlineno="97" tolineno="97" lineno="97" type="str">'DELETE from %s where key=?;'</Const>
                <Name fromlineno="97" tolineno="97" lineno="97" name="domain"/>
              </BinOp>
              <List fromlineno="97" tolineno="97" lineno="97">
                <Name fromlineno="97" tolineno="97" lineno="97" name="key"/>
              </List>
            </CallFunc>
          </Discard>
        </Function>
        <Function fromlineno="99" tolineno="107" lineno="99">
          <Arguments fromlineno="99" tolineno="99" lineno="None" format_args="self, *query">
            <AssName fromlineno="99" tolineno="99" lineno="99" name="self"/>
          </Arguments>
          <While fromlineno="100" tolineno="107" lineno="100">
            <Const fromlineno="100" tolineno="100" lineno="100" type="bool">True</Const>
            <TryExcept fromlineno="101" tolineno="107" lineno="101">
              <Discard fromlineno="102" tolineno="102" lineno="102">
                <CallFunc fromlineno="102" tolineno="102" lineno="102" func="Getattr(execute)">
                  <Getattr fromlineno="102" tolineno="102" lineno="102" attrname="execute" expr="self.connection">
                    <Getattr fromlineno="102" tolineno="102" lineno="102" attrname="connection" expr="self">
                      <Name fromlineno="102" tolineno="102" lineno="102" name="self"/>
                    </Getattr>
                  </Getattr>
                  <Name fromlineno="102" tolineno="102" lineno="102" name="query"/>
                </CallFunc>
              </Discard>
              <Return fromlineno="103" tolineno="103" lineno="103"/>
              <ExceptHandler fromlineno="104" tolineno="107" lineno="104">
                <Getattr fromlineno="104" tolineno="104" lineno="104" attrname="OperationalError" expr="sqlite3">
                  <Name fromlineno="104" tolineno="104" lineno="104" name="sqlite3"/>
                </Getattr>
                <AssName fromlineno="104" tolineno="104" lineno="104" name="e"/>
                <If fromlineno="105" tolineno="106" lineno="105">
                  <Compare fromlineno="105" tolineno="105" lineno="105" op="('in', &lt;CallFunc() l.105 [bb.persist_data] at Ox9ae0cac&gt;)">
                    <Const fromlineno="105" tolineno="105" lineno="105" type="str">'database is locked'</Const>
                    <CallFunc fromlineno="105" tolineno="105" lineno="105" func="Name(str)">
                      <Name fromlineno="105" tolineno="105" lineno="105" name="str"/>
                      <Name fromlineno="105" tolineno="105" lineno="105" name="e"/>
                    </CallFunc>
                  </Compare>
                  <Continue fromlineno="106" tolineno="106" lineno="106"/>
                </If>
                <Raise fromlineno="107" tolineno="107" lineno="107"/>
              </ExceptHandler>
            </TryExcept>
          </While>
        </Function>
      </Class>
    </Module>
    <Module fromlineno="0" tolineno="770" lineno="0" name="bb.cooker">
      <Import fromlineno="24" tolineno="24" lineno="24">
        <ImportName name="sys"/>
        <ImportName name="os"/>
        <ImportName name="getopt"/>
        <ImportName name="glob"/>
        <ImportName name="copy"/>
        <ImportName name="os.path"/>
        <ImportName name="re"/>
        <ImportName name="time"/>
      </Import>
      <Import fromlineno="25" tolineno="25" lineno="25">
        <ImportName name="bb"/>
      </Import>
      <From fromlineno="26" tolineno="26" lineno="26" modname="bb">
        <ImportName name="utils"/>
        <ImportName name="data"/>
        <ImportName name="parse"/>
        <ImportName name="event"/>
        <ImportName name="cache"/>
        <ImportName name="providers"/>
        <ImportName name="taskdata"/>
        <ImportName name="runqueue"/>
      </From>
      <Import fromlineno="27" tolineno="27" lineno="27">
        <ImportName name="itertools"/>
        <ImportName name="sre_constants"/>
      </Import>
      <Assign fromlineno="29" tolineno="29" lineno="29" targets="[&lt;AssName(parsespin) l.29 [bb.cooker] at Ox9cecbec&gt;]" value="itertools.cycle('|/-\\\\')">
        <AssName fromlineno="29" tolineno="29" lineno="29" name="parsespin"/>
        <CallFunc fromlineno="29" tolineno="29" lineno="29" func="Getattr(cycle)">
          <Getattr fromlineno="29" tolineno="29" lineno="29" attrname="cycle" expr="itertools">
            <Name fromlineno="29" tolineno="29" lineno="29" name="itertools"/>
          </Getattr>
          <Const fromlineno="29" tolineno="29" lineno="29" type="str">'|/-\\\\'</Const>
        </CallFunc>
      </Assign>
      <Class fromlineno="34" tolineno="770" lineno="34">
        <Function fromlineno="39" tolineno="58" lineno="39">
          <Arguments fromlineno="39" tolineno="39" lineno="None" format_args="self, configuration">
            <AssName fromlineno="39" tolineno="39" lineno="39" name="self"/>
            <AssName fromlineno="39" tolineno="39" lineno="39" name="configuration"/>
          </Arguments>
          <Assign fromlineno="40" tolineno="40" lineno="40" targets="[&lt;AssAttr(status) l.40 [bb.cooker] at Ox9cececc&gt;]" value="None">
            <AssAttr fromlineno="40" tolineno="40" lineno="40" attrname="status" expr="self">
              <Name fromlineno="40" tolineno="40" lineno="40" name="self"/>
            </AssAttr>
            <Const fromlineno="40" tolineno="40" lineno="40" type="NoneType">None</Const>
          </Assign>
          <Assign fromlineno="42" tolineno="42" lineno="42" targets="[&lt;AssAttr(cache) l.42 [bb.cooker] at Ox9cecf6c&gt;]" value="None">
            <AssAttr fromlineno="42" tolineno="42" lineno="42" attrname="cache" expr="self">
              <Name fromlineno="42" tolineno="42" lineno="42" name="self"/>
            </AssAttr>
            <Const fromlineno="42" tolineno="42" lineno="42" type="NoneType">None</Const>
          </Assign>
          <Assign fromlineno="43" tolineno="43" lineno="43" targets="[&lt;AssAttr(bb_cache) l.43 [bb.cooker] at Ox9cf002c&gt;]" value="None">
            <AssAttr fromlineno="43" tolineno="43" lineno="43" attrname="bb_cache" expr="self">
              <Name fromlineno="43" tolineno="43" lineno="43" name="self"/>
            </AssAttr>
            <Const fromlineno="43" tolineno="43" lineno="43" type="NoneType">None</Const>
          </Assign>
          <Assign fromlineno="45" tolineno="45" lineno="45" targets="[&lt;AssAttr(configuration) l.45 [bb.cooker] at Ox9cf00cc&gt;]" value="configuration">
            <AssAttr fromlineno="45" tolineno="45" lineno="45" attrname="configuration" expr="self">
              <Name fromlineno="45" tolineno="45" lineno="45" name="self"/>
            </AssAttr>
            <Name fromlineno="45" tolineno="45" lineno="45" name="configuration"/>
          </Assign>
          <If fromlineno="47" tolineno="48" lineno="47">
            <Getattr fromlineno="47" tolineno="47" lineno="47" attrname="verbose" expr="self.configuration">
              <Getattr fromlineno="47" tolineno="47" lineno="47" attrname="configuration" expr="self">
                <Name fromlineno="47" tolineno="47" lineno="47" name="self"/>
              </Getattr>
            </Getattr>
            <Discard fromlineno="48" tolineno="48" lineno="48">
              <CallFunc fromlineno="48" tolineno="48" lineno="48" func="Getattr(set_verbose)">
                <Getattr fromlineno="48" tolineno="48" lineno="48" attrname="set_verbose" expr="bb.msg">
                  <Getattr fromlineno="48" tolineno="48" lineno="48" attrname="msg" expr="bb">
                    <Name fromlineno="48" tolineno="48" lineno="48" name="bb"/>
                  </Getattr>
                </Getattr>
                <Const fromlineno="48" tolineno="48" lineno="48" type="bool">True</Const>
              </CallFunc>
            </Discard>
          </If>
          <If fromlineno="50" tolineno="53" lineno="50">
            <Getattr fromlineno="50" tolineno="50" lineno="50" attrname="debug" expr="self.configuration">
              <Getattr fromlineno="50" tolineno="50" lineno="50" attrname="configuration" expr="self">
                <Name fromlineno="50" tolineno="50" lineno="50" name="self"/>
              </Getattr>
            </Getattr>
            <Discard fromlineno="51" tolineno="51" lineno="51">
              <CallFunc fromlineno="51" tolineno="51" lineno="51" func="Getattr(set_debug_level)">
                <Getattr fromlineno="51" tolineno="51" lineno="51" attrname="set_debug_level" expr="bb.msg">
                  <Getattr fromlineno="51" tolineno="51" lineno="51" attrname="msg" expr="bb">
                    <Name fromlineno="51" tolineno="51" lineno="51" name="bb"/>
                  </Getattr>
                </Getattr>
                <Getattr fromlineno="51" tolineno="51" lineno="51" attrname="debug" expr="self.configuration">
                  <Getattr fromlineno="51" tolineno="51" lineno="51" attrname="configuration" expr="self">
                    <Name fromlineno="51" tolineno="51" lineno="51" name="self"/>
                  </Getattr>
                </Getattr>
              </CallFunc>
            </Discard>
            <Discard fromlineno="53" tolineno="53" lineno="53">
              <CallFunc fromlineno="53" tolineno="53" lineno="53" func="Getattr(set_debug_level)">
                <Getattr fromlineno="53" tolineno="53" lineno="53" attrname="set_debug_level" expr="bb.msg">
                  <Getattr fromlineno="53" tolineno="53" lineno="53" attrname="msg" expr="bb">
                    <Name fromlineno="53" tolineno="53" lineno="53" name="bb"/>
                  </Getattr>
                </Getattr>
                <Const fromlineno="53" tolineno="53" lineno="53" type="int">0</Const>
              </CallFunc>
            </Discard>
          </If>
          <If fromlineno="55" tolineno="56" lineno="55">
            <Getattr fromlineno="55" tolineno="55" lineno="55" attrname="debug_domains" expr="self.configuration">
              <Getattr fromlineno="55" tolineno="55" lineno="55" attrname="configuration" expr="self">
                <Name fromlineno="55" tolineno="55" lineno="55" name="self"/>
              </Getattr>
            </Getattr>
            <Discard fromlineno="56" tolineno="56" lineno="56">
              <CallFunc fromlineno="56" tolineno="56" lineno="56" func="Getattr(set_debug_domains)">
                <Getattr fromlineno="56" tolineno="56" lineno="56" attrname="set_debug_domains" expr="bb.msg">
                  <Getattr fromlineno="56" tolineno="56" lineno="56" attrname="msg" expr="bb">
                    <Name fromlineno="56" tolineno="56" lineno="56" name="bb"/>
                  </Getattr>
                </Getattr>
                <Getattr fromlineno="56" tolineno="56" lineno="56" attrname="debug_domains" expr="self.configuration">
                  <Getattr fromlineno="56" tolineno="56" lineno="56" attrname="configuration" expr="self">
                    <Name fromlineno="56" tolineno="56" lineno="56" name="self"/>
                  </Getattr>
                </Getattr>
              </CallFunc>
            </Discard>
          </If>
          <Assign fromlineno="58" tolineno="58" lineno="58" targets="[&lt;AssAttr(data) l.58 [bb.cooker] at Ox9cf07ac&gt;]" value="bb.data.init()">
            <AssAttr fromlineno="58" tolineno="58" lineno="58" attrname="data" expr="self.configuration">
              <Getattr fromlineno="58" tolineno="58" lineno="58" attrname="configuration" expr="self">
                <Name fromlineno="58" tolineno="58" lineno="58" name="self"/>
              </Getattr>
            </AssAttr>
            <CallFunc fromlineno="58" tolineno="58" lineno="58" func="Getattr(init)">
              <Getattr fromlineno="58" tolineno="58" lineno="58" attrname="init" expr="bb.data">
                <Getattr fromlineno="58" tolineno="58" lineno="58" attrname="data" expr="bb">
                  <Name fromlineno="58" tolineno="58" lineno="58" name="bb"/>
                </Getattr>
              </Getattr>
            </CallFunc>
          </Assign>
        </Function>
        <Function fromlineno="60" tolineno="99" lineno="60">
          <Arguments fromlineno="60" tolineno="60" lineno="None" format_args="self">
            <AssName fromlineno="60" tolineno="60" lineno="60" name="self"/>
          </Arguments>
          <Discard fromlineno="62" tolineno="62" lineno="62">
            <CallFunc fromlineno="62" tolineno="62" lineno="62" func="Getattr(inheritFromOS)">
              <Getattr fromlineno="62" tolineno="62" lineno="62" attrname="inheritFromOS" expr="bb.data">
                <Getattr fromlineno="62" tolineno="62" lineno="62" attrname="data" expr="bb">
                  <Name fromlineno="62" tolineno="62" lineno="62" name="bb"/>
                </Getattr>
              </Getattr>
              <Getattr fromlineno="62" tolineno="62" lineno="62" attrname="data" expr="self.configuration">
                <Getattr fromlineno="62" tolineno="62" lineno="62" attrname="configuration" expr="self">
                  <Name fromlineno="62" tolineno="62" lineno="62" name="self"/>
                </Getattr>
              </Getattr>
            </CallFunc>
          </Discard>
          <For fromlineno="64" tolineno="65" lineno="64">
            <AssName fromlineno="64" tolineno="64" lineno="64" name="f"/>
            <Getattr fromlineno="64" tolineno="64" lineno="64" attrname="file" expr="self.configuration">
              <Getattr fromlineno="64" tolineno="64" lineno="64" attrname="configuration" expr="self">
                <Name fromlineno="64" tolineno="64" lineno="64" name="self"/>
              </Getattr>
            </Getattr>
            <Discard fromlineno="65" tolineno="65" lineno="65">
              <CallFunc fromlineno="65" tolineno="65" lineno="65" func="Getattr(parseConfigurationFile)">
                <Getattr fromlineno="65" tolineno="65" lineno="65" attrname="parseConfigurationFile" expr="self">
                  <Name fromlineno="65" tolineno="65" lineno="65" name="self"/>
                </Getattr>
                <Name fromlineno="65" tolineno="65" lineno="65" name="f"/>
              </CallFunc>
            </Discard>
          </For>
          <Discard fromlineno="67" tolineno="67" lineno="67">
            <CallFunc fromlineno="67" tolineno="67" lineno="67" func="Getattr(parseConfigurationFile)">
              <Getattr fromlineno="67" tolineno="67" lineno="67" attrname="parseConfigurationFile" expr="self">
                <Name fromlineno="67" tolineno="67" lineno="67" name="self"/>
              </Getattr>
              <CallFunc fromlineno="67" tolineno="67" lineno="67" func="Getattr(join)">
                <Getattr fromlineno="67" tolineno="67" lineno="67" attrname="join" expr="os.path">
                  <Getattr fromlineno="67" tolineno="67" lineno="67" attrname="path" expr="os">
                    <Name fromlineno="67" tolineno="67" lineno="67" name="os"/>
                  </Getattr>
                </Getattr>
                <Const fromlineno="67" tolineno="67" lineno="67" type="str">'conf'</Const>
                <Const fromlineno="67" tolineno="67" lineno="67" type="str">'bitbake.conf'</Const>
              </CallFunc>
            </CallFunc>
          </Discard>
          <If fromlineno="69" tolineno="70" lineno="69">
            <UnaryOp fromlineno="69" tolineno="69" lineno="69">
              <Getattr fromlineno="69" tolineno="69" lineno="69" attrname="cmd" expr="self.configuration">
                <Getattr fromlineno="69" tolineno="69" lineno="69" attrname="configuration" expr="self">
                  <Name fromlineno="69" tolineno="69" lineno="69" name="self"/>
                </Getattr>
              </Getattr>
            </UnaryOp>
            <Assign fromlineno="70" tolineno="70" lineno="70" targets="[&lt;AssAttr(cmd) l.70 [bb.cooker] at Ox9cf0f2c&gt;]" value="(bb.data.getVar('BB_DEFAULT_TASK', self.configuration.data)) or ('build')">
              <AssAttr fromlineno="70" tolineno="70" lineno="70" attrname="cmd" expr="self.configuration">
                <Getattr fromlineno="70" tolineno="70" lineno="70" attrname="configuration" expr="self">
                  <Name fromlineno="70" tolineno="70" lineno="70" name="self"/>
                </Getattr>
              </AssAttr>
              <BoolOp fromlineno="70" tolineno="70" lineno="70" op="or" values="bb.data.getVar('BB_DEFAULT_TASK', self.configuration.data),'build',">
                <CallFunc fromlineno="70" tolineno="70" lineno="70" func="Getattr(getVar)">
                  <Getattr fromlineno="70" tolineno="70" lineno="70" attrname="getVar" expr="bb.data">
                    <Getattr fromlineno="70" tolineno="70" lineno="70" attrname="data" expr="bb">
                      <Name fromlineno="70" tolineno="70" lineno="70" name="bb"/>
                    </Getattr>
                  </Getattr>
                  <Const fromlineno="70" tolineno="70" lineno="70" type="str">'BB_DEFAULT_TASK'</Const>
                  <Getattr fromlineno="70" tolineno="70" lineno="70" attrname="data" expr="self.configuration">
                    <Getattr fromlineno="70" tolineno="70" lineno="70" attrname="configuration" expr="self">
                      <Name fromlineno="70" tolineno="70" lineno="70" name="self"/>
                    </Getattr>
                  </Getattr>
                </CallFunc>
                <Const fromlineno="70" tolineno="70" lineno="70" type="str">'build'</Const>
              </BoolOp>
            </Assign>
          </If>
          <Assign fromlineno="72" tolineno="72" lineno="72" targets="[&lt;AssName(bbpkgs) l.72 [bb.cooker] at Ox9cf516c&gt;]" value="bb.data.getVar('BBPKGS', self.configuration.data, True)">
            <AssName fromlineno="72" tolineno="72" lineno="72" name="bbpkgs"/>
            <CallFunc fromlineno="72" tolineno="72" lineno="72" func="Getattr(getVar)">
              <Getattr fromlineno="72" tolineno="72" lineno="72" attrname="getVar" expr="bb.data">
                <Getattr fromlineno="72" tolineno="72" lineno="72" attrname="data" expr="bb">
                  <Name fromlineno="72" tolineno="72" lineno="72" name="bb"/>
                </Getattr>
              </Getattr>
              <Const fromlineno="72" tolineno="72" lineno="72" type="str">'BBPKGS'</Const>
              <Getattr fromlineno="72" tolineno="72" lineno="72" attrname="data" expr="self.configuration">
                <Getattr fromlineno="72" tolineno="72" lineno="72" attrname="configuration" expr="self">
                  <Name fromlineno="72" tolineno="72" lineno="72" name="self"/>
                </Getattr>
              </Getattr>
              <Const fromlineno="72" tolineno="72" lineno="72" type="bool">True</Const>
            </CallFunc>
          </Assign>
          <If fromlineno="73" tolineno="74" lineno="73">
            <BoolOp fromlineno="73" tolineno="73" lineno="73" op="and" values="bbpkgs,len(self.configuration.pkgs_to_build) == 0,">
              <Name fromlineno="73" tolineno="73" lineno="73" name="bbpkgs"/>
              <Compare fromlineno="73" tolineno="73" lineno="73" op="('==', &lt;Const(int) l.73 [bb.cooker] at Ox9cf54ac&gt;)">
                <CallFunc fromlineno="73" tolineno="73" lineno="73" func="Name(len)">
                  <Name fromlineno="73" tolineno="73" lineno="73" name="len"/>
                  <Getattr fromlineno="73" tolineno="73" lineno="73" attrname="pkgs_to_build" expr="self.configuration">
                    <Getattr fromlineno="73" tolineno="73" lineno="73" attrname="configuration" expr="self">
                      <Name fromlineno="73" tolineno="73" lineno="73" name="self"/>
                    </Getattr>
                  </Getattr>
                </CallFunc>
                <Const fromlineno="73" tolineno="73" lineno="73" type="int">0</Const>
              </Compare>
            </BoolOp>
            <Discard fromlineno="74" tolineno="74" lineno="74">
              <CallFunc fromlineno="74" tolineno="74" lineno="74" func="Getattr(extend)">
                <Getattr fromlineno="74" tolineno="74" lineno="74" attrname="extend" expr="self.configuration.pkgs_to_build">
                  <Getattr fromlineno="74" tolineno="74" lineno="74" attrname="pkgs_to_build" expr="self.configuration">
                    <Getattr fromlineno="74" tolineno="74" lineno="74" attrname="configuration" expr="self">
                      <Name fromlineno="74" tolineno="74" lineno="74" name="self"/>
                    </Getattr>
                  </Getattr>
                </Getattr>
                <CallFunc fromlineno="74" tolineno="74" lineno="74" func="Getattr(split)">
                  <Getattr fromlineno="74" tolineno="74" lineno="74" attrname="split" expr="bbpkgs">
                    <Name fromlineno="74" tolineno="74" lineno="74" name="bbpkgs"/>
                  </Getattr>
                </CallFunc>
              </CallFunc>
            </Discard>
          </If>
          <Assign fromlineno="79" tolineno="79" lineno="79" targets="[&lt;AssAttr(event_data) l.79 [bb.cooker] at Ox9cf566c&gt;]" value="bb.data.createCopy(self.configuration.data)">
            <AssAttr fromlineno="79" tolineno="79" lineno="79" attrname="event_data" expr="self.configuration">
              <Getattr fromlineno="79" tolineno="79" lineno="79" attrname="configuration" expr="self">
                <Name fromlineno="79" tolineno="79" lineno="79" name="self"/>
              </Getattr>
            </AssAttr>
            <CallFunc fromlineno="79" tolineno="79" lineno="79" func="Getattr(createCopy)">
              <Getattr fromlineno="79" tolineno="79" lineno="79" attrname="createCopy" expr="bb.data">
                <Getattr fromlineno="79" tolineno="79" lineno="79" attrname="data" expr="bb">
                  <Name fromlineno="79" tolineno="79" lineno="79" name="bb"/>
                </Getattr>
              </Getattr>
              <Getattr fromlineno="79" tolineno="79" lineno="79" attrname="data" expr="self.configuration">
                <Getattr fromlineno="79" tolineno="79" lineno="79" attrname="configuration" expr="self">
                  <Name fromlineno="79" tolineno="79" lineno="79" name="self"/>
                </Getattr>
              </Getattr>
            </CallFunc>
          </Assign>
          <Discard fromlineno="80" tolineno="80" lineno="80">
            <CallFunc fromlineno="80" tolineno="80" lineno="80" func="Getattr(update_data)">
              <Getattr fromlineno="80" tolineno="80" lineno="80" attrname="update_data" expr="bb.data">
                <Getattr fromlineno="80" tolineno="80" lineno="80" attrname="data" expr="bb">
                  <Name fromlineno="80" tolineno="80" lineno="80" name="bb"/>
                </Getattr>
              </Getattr>
              <Getattr fromlineno="80" tolineno="80" lineno="80" attrname="event_data" expr="self.configuration">
                <Getattr fromlineno="80" tolineno="80" lineno="80" attrname="configuration" expr="self">
                  <Name fromlineno="80" tolineno="80" lineno="80" name="self"/>
                </Getattr>
              </Getattr>
            </CallFunc>
          </Discard>
          <Assign fromlineno="85" tolineno="85" lineno="85" targets="[&lt;AssName(fd) l.85 [bb.cooker] at Ox9cf592c&gt;]" value="sys.stdout.fileno()">
            <AssName fromlineno="85" tolineno="85" lineno="85" name="fd"/>
            <CallFunc fromlineno="85" tolineno="85" lineno="85" func="Getattr(fileno)">
              <Getattr fromlineno="85" tolineno="85" lineno="85" attrname="fileno" expr="sys.stdout">
                <Getattr fromlineno="85" tolineno="85" lineno="85" attrname="stdout" expr="sys">
                  <Name fromlineno="85" tolineno="85" lineno="85" name="sys"/>
                </Getattr>
              </Getattr>
            </CallFunc>
          </Assign>
          <If fromlineno="86" tolineno="92" lineno="86">
            <CallFunc fromlineno="86" tolineno="86" lineno="86" func="Getattr(isatty)">
              <Getattr fromlineno="86" tolineno="86" lineno="86" attrname="isatty" expr="os">
                <Name fromlineno="86" tolineno="86" lineno="86" name="os"/>
              </Getattr>
              <Name fromlineno="86" tolineno="86" lineno="86" name="fd"/>
            </CallFunc>
            <Import fromlineno="87" tolineno="87" lineno="87">
              <ImportName name="termios"/>
            </Import>
            <Assign fromlineno="88" tolineno="88" lineno="88" targets="[&lt;AssName(tcattr) l.88 [bb.cooker] at Ox9cf5bac&gt;]" value="termios.tcgetattr(fd)">
              <AssName fromlineno="88" tolineno="88" lineno="88" name="tcattr"/>
              <CallFunc fromlineno="88" tolineno="88" lineno="88" func="Getattr(tcgetattr)">
                <Getattr fromlineno="88" tolineno="88" lineno="88" attrname="tcgetattr" expr="termios">
                  <Name fromlineno="88" tolineno="88" lineno="88" name="termios"/>
                </Getattr>
                <Name fromlineno="88" tolineno="88" lineno="88" name="fd"/>
              </CallFunc>
            </Assign>
            <If fromlineno="89" tolineno="92" lineno="89">
              <BinOp fromlineno="89" tolineno="89" lineno="89" op="&amp;" left="tcattr[3]" right="termios.TOSTOP">
                <Subscript fromlineno="89" tolineno="89" lineno="89">
                  <Name fromlineno="89" tolineno="89" lineno="89" name="tcattr"/>
                  <Index fromlineno="89" tolineno="89" lineno="None">
                    <Const fromlineno="89" tolineno="89" lineno="89" type="int">3</Const>
                  </Index>
                </Subscript>
                <Getattr fromlineno="89" tolineno="89" lineno="89" attrname="TOSTOP" expr="termios">
                  <Name fromlineno="89" tolineno="89" lineno="89" name="termios"/>
                </Getattr>
              </BinOp>
              <Discard fromlineno="90" tolineno="90" lineno="90">
                <CallFunc fromlineno="90" tolineno="90" lineno="90" func="Getattr(note)">
                  <Getattr fromlineno="90" tolineno="90" lineno="90" attrname="note" expr="bb.msg">
                    <Getattr fromlineno="90" tolineno="90" lineno="90" attrname="msg" expr="bb">
                      <Name fromlineno="90" tolineno="90" lineno="90" name="bb"/>
                    </Getattr>
                  </Getattr>
                  <Const fromlineno="90" tolineno="90" lineno="90" type="int">1</Const>
                  <Getattr fromlineno="90" tolineno="90" lineno="90" attrname="Build" expr="bb.msg.domain">
                    <Getattr fromlineno="90" tolineno="90" lineno="90" attrname="domain" expr="bb.msg">
                      <Getattr fromlineno="90" tolineno="90" lineno="90" attrname="msg" expr="bb">
                        <Name fromlineno="90" tolineno="90" lineno="90" name="bb"/>
                      </Getattr>
                    </Getattr>
                  </Getattr>
                  <Const fromlineno="90" tolineno="90" lineno="90" type="str">'The terminal had the TOSTOP bit set, clearing...'</Const>
                </CallFunc>
              </Discard>
              <Assign fromlineno="91" tolineno="91" lineno="91" targets="[&lt;Subscript() l.91 [bb.cooker] at Ox9cf5fac&gt;]" value="(tcattr[3]) &amp; (~termios.TOSTOP)">
                <Subscript fromlineno="91" tolineno="91" lineno="91">
                  <Name fromlineno="91" tolineno="91" lineno="91" name="tcattr"/>
                  <Index fromlineno="91" tolineno="91" lineno="None">
                    <Const fromlineno="91" tolineno="91" lineno="91" type="int">3</Const>
                  </Index>
                </Subscript>
                <BinOp fromlineno="91" tolineno="91" lineno="91" op="&amp;" left="tcattr[3]" right="~termios.TOSTOP">
                  <Subscript fromlineno="91" tolineno="91" lineno="91">
                    <Name fromlineno="91" tolineno="91" lineno="91" name="tcattr"/>
                    <Index fromlineno="91" tolineno="91" lineno="None">
                      <Const fromlineno="91" tolineno="91" lineno="91" type="int">3</Const>
                    </Index>
                  </Subscript>
                  <UnaryOp fromlineno="91" tolineno="91" lineno="91">
                    <Getattr fromlineno="91" tolineno="91" lineno="91" attrname="TOSTOP" expr="termios">
                      <Name fromlineno="91" tolineno="91" lineno="91" name="termios"/>
                    </Getattr>
                  </UnaryOp>
                </BinOp>
              </Assign>
              <Discard fromlineno="92" tolineno="92" lineno="92">
                <CallFunc fromlineno="92" tolineno="92" lineno="92" func="Getattr(tcsetattr)">
                  <Getattr fromlineno="92" tolineno="92" lineno="92" attrname="tcsetattr" expr="termios">
                    <Name fromlineno="92" tolineno="92" lineno="92" name="termios"/>
                  </Getattr>
                  <Name fromlineno="92" tolineno="92" lineno="92" name="fd"/>
                  <Getattr fromlineno="92" tolineno="92" lineno="92" attrname="TCSANOW" expr="termios">
                    <Name fromlineno="92" tolineno="92" lineno="92" name="termios"/>
                  </Getattr>
                  <Name fromlineno="92" tolineno="92" lineno="92" name="tcattr"/>
                </CallFunc>
              </Discard>
            </If>
          </If>
          <Assign fromlineno="95" tolineno="95" lineno="95" targets="[&lt;AssName(nice) l.95 [bb.cooker] at Ox9cfc28c&gt;]" value="bb.data.getVar('BB_NICE_LEVEL', self.configuration.data, True)">
            <AssName fromlineno="95" tolineno="95" lineno="95" name="nice"/>
            <CallFunc fromlineno="95" tolineno="95" lineno="95" func="Getattr(getVar)">
              <Getattr fromlineno="95" tolineno="95" lineno="95" attrname="getVar" expr="bb.data">
                <Getattr fromlineno="95" tolineno="95" lineno="95" attrname="data" expr="bb">
                  <Name fromlineno="95" tolineno="95" lineno="95" name="bb"/>
                </Getattr>
              </Getattr>
              <Const fromlineno="95" tolineno="95" lineno="95" type="str">'BB_NICE_LEVEL'</Const>
              <Getattr fromlineno="95" tolineno="95" lineno="95" attrname="data" expr="self.configuration">
                <Getattr fromlineno="95" tolineno="95" lineno="95" attrname="configuration" expr="self">
                  <Name fromlineno="95" tolineno="95" lineno="95" name="self"/>
                </Getattr>
              </Getattr>
              <Const fromlineno="95" tolineno="95" lineno="95" type="bool">True</Const>
            </CallFunc>
          </Assign>
          <If fromlineno="96" tolineno="99" lineno="96">
            <Name fromlineno="96" tolineno="96" lineno="96" name="nice"/>
            <Assign fromlineno="97" tolineno="97" lineno="97" targets="[&lt;AssName(curnice) l.97 [bb.cooker] at Ox9cfc4cc&gt;]" value="os.nice(0)">
              <AssName fromlineno="97" tolineno="97" lineno="97" name="curnice"/>
              <CallFunc fromlineno="97" tolineno="97" lineno="97" func="Getattr(nice)">
                <Getattr fromlineno="97" tolineno="97" lineno="97" attrname="nice" expr="os">
                  <Name fromlineno="97" tolineno="97" lineno="97" name="os"/>
                </Getattr>
                <Const fromlineno="97" tolineno="97" lineno="97" type="int">0</Const>
              </CallFunc>
            </Assign>
            <Assign fromlineno="98" tolineno="98" lineno="98" targets="[&lt;AssName(nice) l.98 [bb.cooker] at Ox9cfc5ec&gt;]" value="(int(nice)) - (curnice)">
              <AssName fromlineno="98" tolineno="98" lineno="98" name="nice"/>
              <BinOp fromlineno="98" tolineno="98" lineno="98" op="-" left="int(nice)" right="curnice">
                <CallFunc fromlineno="98" tolineno="98" lineno="98" func="Name(int)">
                  <Name fromlineno="98" tolineno="98" lineno="98" name="int"/>
                  <Name fromlineno="98" tolineno="98" lineno="98" name="nice"/>
                </CallFunc>
                <Name fromlineno="98" tolineno="98" lineno="98" name="curnice"/>
              </BinOp>
            </Assign>
            <Discard fromlineno="99" tolineno="99" lineno="99">
              <CallFunc fromlineno="99" tolineno="99" lineno="99" func="Getattr(note)">
                <Getattr fromlineno="99" tolineno="99" lineno="99" attrname="note" expr="bb.msg">
                  <Getattr fromlineno="99" tolineno="99" lineno="99" attrname="msg" expr="bb">
                    <Name fromlineno="99" tolineno="99" lineno="99" name="bb"/>
                  </Getattr>
                </Getattr>
                <Const fromlineno="99" tolineno="99" lineno="99" type="int">2</Const>
                <Getattr fromlineno="99" tolineno="99" lineno="99" attrname="Build" expr="bb.msg.domain">
                  <Getattr fromlineno="99" tolineno="99" lineno="99" attrname="domain" expr="bb.msg">
                    <Getattr fromlineno="99" tolineno="99" lineno="99" attrname="msg" expr="bb">
                      <Name fromlineno="99" tolineno="99" lineno="99" name="bb"/>
                    </Getattr>
                  </Getattr>
                </Getattr>
                <BinOp fromlineno="99" tolineno="99" lineno="99" op="%" left="'Renice to %s '" right="os.nice(nice)">
                  <Const fromlineno="99" tolineno="99" lineno="99" type="str">'Renice to %s '</Const>
                  <CallFunc fromlineno="99" tolineno="99" lineno="99" func="Getattr(nice)">
                    <Getattr fromlineno="99" tolineno="99" lineno="99" attrname="nice" expr="os">
                      <Name fromlineno="99" tolineno="99" lineno="99" name="os"/>
                    </Getattr>
                    <Name fromlineno="99" tolineno="99" lineno="99" name="nice"/>
                  </CallFunc>
                </BinOp>
              </CallFunc>
            </Discard>
          </If>
        </Function>
        <Function fromlineno="102" tolineno="120" lineno="102">
          <Arguments fromlineno="102" tolineno="102" lineno="None" format_args="self, fn, item, task, the_data">
            <AssName fromlineno="102" tolineno="102" lineno="102" name="self"/>
            <AssName fromlineno="102" tolineno="102" lineno="102" name="fn"/>
            <AssName fromlineno="102" tolineno="102" lineno="102" name="item"/>
            <AssName fromlineno="102" tolineno="102" lineno="102" name="task"/>
            <AssName fromlineno="102" tolineno="102" lineno="102" name="the_data"/>
          </Arguments>
          <Discard fromlineno="106" tolineno="106" lineno="106">
            <CallFunc fromlineno="106" tolineno="106" lineno="106" func="Getattr(fire)">
              <Getattr fromlineno="106" tolineno="106" lineno="106" attrname="fire" expr="bb.event">
                <Getattr fromlineno="106" tolineno="106" lineno="106" attrname="event" expr="bb">
                  <Name fromlineno="106" tolineno="106" lineno="106" name="bb"/>
                </Getattr>
              </Getattr>
              <CallFunc fromlineno="106" tolineno="106" lineno="106" func="Getattr(PkgStarted)">
                <Getattr fromlineno="106" tolineno="106" lineno="106" attrname="PkgStarted" expr="bb.event">
                  <Getattr fromlineno="106" tolineno="106" lineno="106" attrname="event" expr="bb">
                    <Name fromlineno="106" tolineno="106" lineno="106" name="bb"/>
                  </Getattr>
                </Getattr>
                <Name fromlineno="106" tolineno="106" lineno="106" name="item"/>
                <Name fromlineno="106" tolineno="106" lineno="106" name="the_data"/>
              </CallFunc>
            </CallFunc>
          </Discard>
          <TryExcept fromlineno="107" tolineno="120" lineno="107">
            <If fromlineno="108" tolineno="109" lineno="108">
              <UnaryOp fromlineno="108" tolineno="108" lineno="108">
                <Getattr fromlineno="108" tolineno="108" lineno="108" attrname="dry_run" expr="self.configuration">
                  <Getattr fromlineno="108" tolineno="108" lineno="108" attrname="configuration" expr="self">
                    <Name fromlineno="108" tolineno="108" lineno="108" name="self"/>
                  </Getattr>
                </Getattr>
              </UnaryOp>
              <Discard fromlineno="109" tolineno="109" lineno="109">
                <CallFunc fromlineno="109" tolineno="109" lineno="109" func="Getattr(exec_task)">
                  <Getattr fromlineno="109" tolineno="109" lineno="109" attrname="exec_task" expr="bb.build">
                    <Getattr fromlineno="109" tolineno="109" lineno="109" attrname="build" expr="bb">
                      <Name fromlineno="109" tolineno="109" lineno="109" name="bb"/>
                    </Getattr>
                  </Getattr>
                  <BinOp fromlineno="109" tolineno="109" lineno="109" op="%" left="'do_%s'" right="task">
                    <Const fromlineno="109" tolineno="109" lineno="109" type="str">'do_%s'</Const>
                    <Name fromlineno="109" tolineno="109" lineno="109" name="task"/>
                  </BinOp>
                  <Name fromlineno="109" tolineno="109" lineno="109" name="the_data"/>
                </CallFunc>
              </Discard>
            </If>
            <Discard fromlineno="110" tolineno="110" lineno="110">
              <CallFunc fromlineno="110" tolineno="110" lineno="110" func="Getattr(fire)">
                <Getattr fromlineno="110" tolineno="110" lineno="110" attrname="fire" expr="bb.event">
                  <Getattr fromlineno="110" tolineno="110" lineno="110" attrname="event" expr="bb">
                    <Name fromlineno="110" tolineno="110" lineno="110" name="bb"/>
                  </Getattr>
                </Getattr>
                <CallFunc fromlineno="110" tolineno="110" lineno="110" func="Getattr(PkgSucceeded)">
                  <Getattr fromlineno="110" tolineno="110" lineno="110" attrname="PkgSucceeded" expr="bb.event">
                    <Getattr fromlineno="110" tolineno="110" lineno="110" attrname="event" expr="bb">
                      <Name fromlineno="110" tolineno="110" lineno="110" name="bb"/>
                    </Getattr>
                  </Getattr>
                  <Name fromlineno="110" tolineno="110" lineno="110" name="item"/>
                  <Name fromlineno="110" tolineno="110" lineno="110" name="the_data"/>
                </CallFunc>
              </CallFunc>
            </Discard>
            <Return fromlineno="111" tolineno="111" lineno="111">
              <Const fromlineno="111" tolineno="111" lineno="111" type="bool">True</Const>
            </Return>
            <ExceptHandler fromlineno="112" tolineno="115" lineno="112">
              <Getattr fromlineno="112" tolineno="112" lineno="112" attrname="FuncFailed" expr="bb.build">
                <Getattr fromlineno="112" tolineno="112" lineno="112" attrname="build" expr="bb">
                  <Name fromlineno="112" tolineno="112" lineno="112" name="bb"/>
                </Getattr>
              </Getattr>
              <Discard fromlineno="113" tolineno="113" lineno="113">
                <CallFunc fromlineno="113" tolineno="113" lineno="113" func="Getattr(error)">
                  <Getattr fromlineno="113" tolineno="113" lineno="113" attrname="error" expr="bb.msg">
                    <Getattr fromlineno="113" tolineno="113" lineno="113" attrname="msg" expr="bb">
                      <Name fromlineno="113" tolineno="113" lineno="113" name="bb"/>
                    </Getattr>
                  </Getattr>
                  <Getattr fromlineno="113" tolineno="113" lineno="113" attrname="Build" expr="bb.msg.domain">
                    <Getattr fromlineno="113" tolineno="113" lineno="113" attrname="domain" expr="bb.msg">
                      <Getattr fromlineno="113" tolineno="113" lineno="113" attrname="msg" expr="bb">
                        <Name fromlineno="113" tolineno="113" lineno="113" name="bb"/>
                      </Getattr>
                    </Getattr>
                  </Getattr>
                  <Const fromlineno="113" tolineno="113" lineno="113" type="str">'task stack execution failed'</Const>
                </CallFunc>
              </Discard>
              <Discard fromlineno="114" tolineno="114" lineno="114">
                <CallFunc fromlineno="114" tolineno="114" lineno="114" func="Getattr(fire)">
                  <Getattr fromlineno="114" tolineno="114" lineno="114" attrname="fire" expr="bb.event">
                    <Getattr fromlineno="114" tolineno="114" lineno="114" attrname="event" expr="bb">
                      <Name fromlineno="114" tolineno="114" lineno="114" name="bb"/>
                    </Getattr>
                  </Getattr>
                  <CallFunc fromlineno="114" tolineno="114" lineno="114" func="Getattr(PkgFailed)">
                    <Getattr fromlineno="114" tolineno="114" lineno="114" attrname="PkgFailed" expr="bb.event">
                      <Getattr fromlineno="114" tolineno="114" lineno="114" attrname="event" expr="bb">
                        <Name fromlineno="114" tolineno="114" lineno="114" name="bb"/>
                      </Getattr>
                    </Getattr>
                    <Name fromlineno="114" tolineno="114" lineno="114" name="item"/>
                    <Name fromlineno="114" tolineno="114" lineno="114" name="the_data"/>
                  </CallFunc>
                </CallFunc>
              </Discard>
              <Raise fromlineno="115" tolineno="115" lineno="115"/>
            </ExceptHandler>
            <ExceptHandler fromlineno="116" tolineno="120" lineno="116">
              <Getattr fromlineno="116" tolineno="116" lineno="116" attrname="EventException" expr="bb.build">
                <Getattr fromlineno="116" tolineno="116" lineno="116" attrname="build" expr="bb">
                  <Name fromlineno="116" tolineno="116" lineno="116" name="bb"/>
                </Getattr>
              </Getattr>
              <AssName fromlineno="116" tolineno="116" lineno="116" name="e"/>
              <Assign fromlineno="117" tolineno="117" lineno="117" targets="[&lt;AssName(event) l.117 [bb.cooker] at Ox9c8160c&gt;]" value="e.args[1]">
                <AssName fromlineno="117" tolineno="117" lineno="117" name="event"/>
                <Subscript fromlineno="117" tolineno="117" lineno="117">
                  <Getattr fromlineno="117" tolineno="117" lineno="117" attrname="args" expr="e">
                    <Name fromlineno="117" tolineno="117" lineno="117" name="e"/>
                  </Getattr>
                  <Index fromlineno="117" tolineno="117" lineno="None">
                    <Const fromlineno="117" tolineno="117" lineno="117" type="int">1</Const>
                  </Index>
                </Subscript>
              </Assign>
              <Discard fromlineno="118" tolineno="118" lineno="118">
                <CallFunc fromlineno="118" tolineno="118" lineno="118" func="Getattr(error)">
                  <Getattr fromlineno="118" tolineno="118" lineno="118" attrname="error" expr="bb.msg">
                    <Getattr fromlineno="118" tolineno="118" lineno="118" attrname="msg" expr="bb">
                      <Name fromlineno="118" tolineno="118" lineno="118" name="bb"/>
                    </Getattr>
                  </Getattr>
                  <Getattr fromlineno="118" tolineno="118" lineno="118" attrname="Build" expr="bb.msg.domain">
                    <Getattr fromlineno="118" tolineno="118" lineno="118" attrname="domain" expr="bb.msg">
                      <Getattr fromlineno="118" tolineno="118" lineno="118" attrname="msg" expr="bb">
                        <Name fromlineno="118" tolineno="118" lineno="118" name="bb"/>
                      </Getattr>
                    </Getattr>
                  </Getattr>
                  <BinOp fromlineno="118" tolineno="118" lineno="118" op="%" left="'%s event exception, aborting'" right="bb.event.getName(event)">
                    <Const fromlineno="118" tolineno="118" lineno="118" type="str">'%s event exception, aborting'</Const>
                    <CallFunc fromlineno="118" tolineno="118" lineno="118" func="Getattr(getName)">
                      <Getattr fromlineno="118" tolineno="118" lineno="118" attrname="getName" expr="bb.event">
                        <Getattr fromlineno="118" tolineno="118" lineno="118" attrname="event" expr="bb">
                          <Name fromlineno="118" tolineno="118" lineno="118" name="bb"/>
                        </Getattr>
                      </Getattr>
                      <Name fromlineno="118" tolineno="118" lineno="118" name="event"/>
                    </CallFunc>
                  </BinOp>
                </CallFunc>
              </Discard>
              <Discard fromlineno="119" tolineno="119" lineno="119">
                <CallFunc fromlineno="119" tolineno="119" lineno="119" func="Getattr(fire)">
                  <Getattr fromlineno="119" tolineno="119" lineno="119" attrname="fire" expr="bb.event">
                    <Getattr fromlineno="119" tolineno="119" lineno="119" attrname="event" expr="bb">
                      <Name fromlineno="119" tolineno="119" lineno="119" name="bb"/>
                    </Getattr>
                  </Getattr>
                  <CallFunc fromlineno="119" tolineno="119" lineno="119" func="Getattr(PkgFailed)">
                    <Getattr fromlineno="119" tolineno="119" lineno="119" attrname="PkgFailed" expr="bb.event">
                      <Getattr fromlineno="119" tolineno="119" lineno="119" attrname="event" expr="bb">
                        <Name fromlineno="119" tolineno="119" lineno="119" name="bb"/>
                      </Getattr>
                    </Getattr>
                    <Name fromlineno="119" tolineno="119" lineno="119" name="item"/>
                    <Name fromlineno="119" tolineno="119" lineno="119" name="the_data"/>
                  </CallFunc>
                </CallFunc>
              </Discard>
              <Raise fromlineno="120" tolineno="120" lineno="120"/>
            </ExceptHandler>
          </TryExcept>
        </Function>
        <Function fromlineno="122" tolineno="135" lineno="122">
          <Arguments fromlineno="122" tolineno="122" lineno="None" format_args="self, fn">
            <AssName fromlineno="122" tolineno="122" lineno="122" name="self"/>
            <AssName fromlineno="122" tolineno="122" lineno="122" name="fn"/>
          </Arguments>
          <Assign fromlineno="128" tolineno="128" lineno="128" targets="[&lt;AssName(the_data) l.128 [bb.cooker] at Ox9c81c0c&gt;]" value="self.bb_cache.loadDataFull(fn, self.configuration.data)">
            <AssName fromlineno="128" tolineno="128" lineno="128" name="the_data"/>
            <CallFunc fromlineno="128" tolineno="128" lineno="128" func="Getattr(loadDataFull)">
              <Getattr fromlineno="128" tolineno="128" lineno="128" attrname="loadDataFull" expr="self.bb_cache">
                <Getattr fromlineno="128" tolineno="128" lineno="128" attrname="bb_cache" expr="self">
                  <Name fromlineno="128" tolineno="128" lineno="128" name="self"/>
                </Getattr>
              </Getattr>
              <Name fromlineno="128" tolineno="128" lineno="128" name="fn"/>
              <Getattr fromlineno="128" tolineno="128" lineno="128" attrname="data" expr="self.configuration">
                <Getattr fromlineno="128" tolineno="128" lineno="128" attrname="configuration" expr="self">
                  <Name fromlineno="128" tolineno="128" lineno="128" name="self"/>
                </Getattr>
              </Getattr>
            </CallFunc>
          </Assign>
          <Assign fromlineno="130" tolineno="130" lineno="130" targets="[&lt;AssName(item) l.130 [bb.cooker] at Ox9c81dac&gt;]" value="self.status.pkg_fn[fn]">
            <AssName fromlineno="130" tolineno="130" lineno="130" name="item"/>
            <Subscript fromlineno="130" tolineno="130" lineno="130">
              <Getattr fromlineno="130" tolineno="130" lineno="130" attrname="pkg_fn" expr="self.status">
                <Getattr fromlineno="130" tolineno="130" lineno="130" attrname="status" expr="self">
                  <Name fromlineno="130" tolineno="130" lineno="130" name="self"/>
                </Getattr>
              </Getattr>
              <Index fromlineno="130" tolineno="130" lineno="None">
                <Name fromlineno="130" tolineno="130" lineno="130" name="fn"/>
              </Index>
            </Subscript>
          </Assign>
          <Return fromlineno="135" tolineno="135" lineno="135">
            <CallFunc fromlineno="135" tolineno="135" lineno="135" func="Getattr(tryBuildPackage)">
              <Getattr fromlineno="135" tolineno="135" lineno="135" attrname="tryBuildPackage" expr="self">
                <Name fromlineno="135" tolineno="135" lineno="135" name="self"/>
              </Getattr>
              <Name fromlineno="135" tolineno="135" lineno="135" name="fn"/>
              <Name fromlineno="135" tolineno="135" lineno="135" name="item"/>
              <Getattr fromlineno="135" tolineno="135" lineno="135" attrname="cmd" expr="self.configuration">
                <Getattr fromlineno="135" tolineno="135" lineno="135" attrname="configuration" expr="self">
                  <Name fromlineno="135" tolineno="135" lineno="135" name="self"/>
                </Getattr>
              </Getattr>
              <Name fromlineno="135" tolineno="135" lineno="135" name="the_data"/>
            </CallFunc>
          </Return>
        </Function>
        <Function fromlineno="137" tolineno="161" lineno="137">
          <Arguments fromlineno="137" tolineno="137" lineno="None" format_args="self">
            <AssName fromlineno="137" tolineno="137" lineno="137" name="self"/>
          </Arguments>
          <Assign fromlineno="138" tolineno="138" lineno="138" targets="[&lt;AssName(pkg_pn) l.138 [bb.cooker] at Ox9c8516c&gt;]" value="self.status.pkg_pn">
            <AssName fromlineno="138" tolineno="138" lineno="138" name="pkg_pn"/>
            <Getattr fromlineno="138" tolineno="138" lineno="138" attrname="pkg_pn" expr="self.status">
              <Getattr fromlineno="138" tolineno="138" lineno="138" attrname="status" expr="self">
                <Name fromlineno="138" tolineno="138" lineno="138" name="self"/>
              </Getattr>
            </Getattr>
          </Assign>
          <Assign fromlineno="139" tolineno="139" lineno="139" targets="[&lt;AssName(preferred_versions) l.139 [bb.cooker] at Ox9c8524c&gt;]" value="{}">
            <AssName fromlineno="139" tolineno="139" lineno="139" name="preferred_versions"/>
            <Dict fromlineno="139" tolineno="139" lineno="139"/>
          </Assign>
          <Assign fromlineno="140" tolineno="140" lineno="140" targets="[&lt;AssName(latest_versions) l.140 [bb.cooker] at Ox9c8530c&gt;]" value="{}">
            <AssName fromlineno="140" tolineno="140" lineno="140" name="latest_versions"/>
            <Dict fromlineno="140" tolineno="140" lineno="140"/>
          </Assign>
          <For fromlineno="143" tolineno="146" lineno="143">
            <AssName fromlineno="143" tolineno="143" lineno="143" name="pn"/>
            <CallFunc fromlineno="143" tolineno="143" lineno="143" func="Getattr(keys)">
              <Getattr fromlineno="143" tolineno="143" lineno="143" attrname="keys" expr="pkg_pn">
                <Name fromlineno="143" tolineno="143" lineno="143" name="pkg_pn"/>
              </Getattr>
            </CallFunc>
            <Assign fromlineno="144" tolineno="144" lineno="144" targets="[&lt;Tuple(tuple) l.144 [bb.cooker] at Ox9c854ec&gt;]" value="bb.providers.findBestProvider(pn, self.configuration.data, self.status)">
              <Tuple fromlineno="144" tolineno="144" lineno="144">
                <AssName fromlineno="144" tolineno="144" lineno="144" name="last_ver"/>
                <AssName fromlineno="144" tolineno="144" lineno="144" name="last_file"/>
                <AssName fromlineno="144" tolineno="144" lineno="144" name="pref_ver"/>
                <AssName fromlineno="144" tolineno="144" lineno="144" name="pref_file"/>
              </Tuple>
              <CallFunc fromlineno="144" tolineno="144" lineno="144" func="Getattr(findBestProvider)">
                <Getattr fromlineno="144" tolineno="144" lineno="144" attrname="findBestProvider" expr="bb.providers">
                  <Getattr fromlineno="144" tolineno="144" lineno="144" attrname="providers" expr="bb">
                    <Name fromlineno="144" tolineno="144" lineno="144" name="bb"/>
                  </Getattr>
                </Getattr>
                <Name fromlineno="144" tolineno="144" lineno="144" name="pn"/>
                <Getattr fromlineno="144" tolineno="144" lineno="144" attrname="data" expr="self.configuration">
                  <Getattr fromlineno="144" tolineno="144" lineno="144" attrname="configuration" expr="self">
                    <Name fromlineno="144" tolineno="144" lineno="144" name="self"/>
                  </Getattr>
                </Getattr>
                <Getattr fromlineno="144" tolineno="144" lineno="144" attrname="status" expr="self">
                  <Name fromlineno="144" tolineno="144" lineno="144" name="self"/>
                </Getattr>
              </CallFunc>
            </Assign>
            <Assign fromlineno="145" tolineno="145" lineno="145" targets="[&lt;Subscript() l.145 [bb.cooker] at Ox9c857cc&gt;]" value="(pref_ver, pref_file)">
              <Subscript fromlineno="145" tolineno="145" lineno="145">
                <Name fromlineno="145" tolineno="145" lineno="145" name="preferred_versions"/>
                <Index fromlineno="145" tolineno="145" lineno="None">
                  <Name fromlineno="145" tolineno="145" lineno="145" name="pn"/>
                </Index>
              </Subscript>
              <Tuple fromlineno="145" tolineno="145" lineno="145">
                <Name fromlineno="145" tolineno="145" lineno="145" name="pref_ver"/>
                <Name fromlineno="145" tolineno="145" lineno="145" name="pref_file"/>
              </Tuple>
            </Assign>
            <Assign fromlineno="146" tolineno="146" lineno="146" targets="[&lt;Subscript() l.146 [bb.cooker] at Ox9c8590c&gt;]" value="(last_ver, last_file)">
              <Subscript fromlineno="146" tolineno="146" lineno="146">
                <Name fromlineno="146" tolineno="146" lineno="146" name="latest_versions"/>
                <Index fromlineno="146" tolineno="146" lineno="None">
                  <Name fromlineno="146" tolineno="146" lineno="146" name="pn"/>
                </Index>
              </Subscript>
              <Tuple fromlineno="146" tolineno="146" lineno="146">
                <Name fromlineno="146" tolineno="146" lineno="146" name="last_ver"/>
                <Name fromlineno="146" tolineno="146" lineno="146" name="last_file"/>
              </Tuple>
            </Assign>
          </For>
          <Assign fromlineno="148" tolineno="148" lineno="148" targets="[&lt;AssName(pkg_list) l.148 [bb.cooker] at Ox9c85a4c&gt;]" value="pkg_pn.keys()">
            <AssName fromlineno="148" tolineno="148" lineno="148" name="pkg_list"/>
            <CallFunc fromlineno="148" tolineno="148" lineno="148" func="Getattr(keys)">
              <Getattr fromlineno="148" tolineno="148" lineno="148" attrname="keys" expr="pkg_pn">
                <Name fromlineno="148" tolineno="148" lineno="148" name="pkg_pn"/>
              </Getattr>
            </CallFunc>
          </Assign>
          <Discard fromlineno="149" tolineno="149" lineno="149">
            <CallFunc fromlineno="149" tolineno="149" lineno="149" func="Getattr(sort)">
              <Getattr fromlineno="149" tolineno="149" lineno="149" attrname="sort" expr="pkg_list">
                <Name fromlineno="149" tolineno="149" lineno="149" name="pkg_list"/>
              </Getattr>
            </CallFunc>
          </Discard>
          <For fromlineno="151" tolineno="161" lineno="151">
            <AssName fromlineno="151" tolineno="151" lineno="151" name="p"/>
            <Name fromlineno="151" tolineno="151" lineno="151" name="pkg_list"/>
            <Assign fromlineno="152" tolineno="152" lineno="152" targets="[&lt;AssName(pref) l.152 [bb.cooker] at Ox9c85cac&gt;]" value="preferred_versions[p]">
              <AssName fromlineno="152" tolineno="152" lineno="152" name="pref"/>
              <Subscript fromlineno="152" tolineno="152" lineno="152">
                <Name fromlineno="152" tolineno="152" lineno="152" name="preferred_versions"/>
                <Index fromlineno="152" tolineno="152" lineno="None">
                  <Name fromlineno="152" tolineno="152" lineno="152" name="p"/>
                </Index>
              </Subscript>
            </Assign>
            <Assign fromlineno="153" tolineno="153" lineno="153" targets="[&lt;AssName(latest) l.153 [bb.cooker] at Ox9c85dac&gt;]" value="latest_versions[p]">
              <AssName fromlineno="153" tolineno="153" lineno="153" name="latest"/>
              <Subscript fromlineno="153" tolineno="153" lineno="153">
                <Name fromlineno="153" tolineno="153" lineno="153" name="latest_versions"/>
                <Index fromlineno="153" tolineno="153" lineno="None">
                  <Name fromlineno="153" tolineno="153" lineno="153" name="p"/>
                </Index>
              </Subscript>
            </Assign>
            <If fromlineno="155" tolineno="158" lineno="155">
              <Compare fromlineno="155" tolineno="155" lineno="155" op="('!=', &lt;Name(latest) l.155 [bb.cooker] at Ox9c85f0c&gt;)">
                <Name fromlineno="155" tolineno="155" lineno="155" name="pref"/>
                <Name fromlineno="155" tolineno="155" lineno="155" name="latest"/>
              </Compare>
              <Assign fromlineno="156" tolineno="156" lineno="156" targets="[&lt;AssName(prefstr) l.156 [bb.cooker] at Ox9c85f8c&gt;]" value="((((pref[0][0]) + (':')) + (pref[0][1])) + ('-')) + (pref[0][2])">
                <AssName fromlineno="156" tolineno="156" lineno="156" name="prefstr"/>
                <BinOp fromlineno="156" tolineno="156" lineno="156" op="+" left="(((pref[0][0]) + (':')) + (pref[0][1])) + ('-')" right="pref[0][2]">
                  <BinOp fromlineno="156" tolineno="156" lineno="156" op="+" left="((pref[0][0]) + (':')) + (pref[0][1])" right="'-'">
                    <BinOp fromlineno="156" tolineno="156" lineno="156" op="+" left="(pref[0][0]) + (':')" right="pref[0][1]">
                      <BinOp fromlineno="156" tolineno="156" lineno="156" op="+" left="pref[0][0]" right="':'">
                        <Subscript fromlineno="156" tolineno="156" lineno="156">
                          <Subscript fromlineno="156" tolineno="156" lineno="156">
                            <Name fromlineno="156" tolineno="156" lineno="156" name="pref"/>
                            <Index fromlineno="156" tolineno="156" lineno="None">
                              <Const fromlineno="156" tolineno="156" lineno="156" type="int">0</Const>
                            </Index>
                          </Subscript>
                          <Index fromlineno="156" tolineno="156" lineno="None">
                            <Const fromlineno="156" tolineno="156" lineno="156" type="int">0</Const>
                          </Index>
                        </Subscript>
                        <Const fromlineno="156" tolineno="156" lineno="156" type="str">':'</Const>
                      </BinOp>
                      <Subscript fromlineno="156" tolineno="156" lineno="156">
                        <Subscript fromlineno="156" tolineno="156" lineno="156">
                          <Name fromlineno="156" tolineno="156" lineno="156" name="pref"/>
                          <Index fromlineno="156" tolineno="156" lineno="None">
                            <Const fromlineno="156" tolineno="156" lineno="156" type="int">0</Const>
                          </Index>
                        </Subscript>
                        <Index fromlineno="156" tolineno="156" lineno="None">
                          <Const fromlineno="156" tolineno="156" lineno="156" type="int">1</Const>
                        </Index>
                      </Subscript>
                    </BinOp>
                    <Const fromlineno="156" tolineno="156" lineno="156" type="str">'-'</Const>
                  </BinOp>
                  <Subscript fromlineno="156" tolineno="156" lineno="156">
                    <Subscript fromlineno="156" tolineno="156" lineno="156">
                      <Name fromlineno="156" tolineno="156" lineno="156" name="pref"/>
                      <Index fromlineno="156" tolineno="156" lineno="None">
                        <Const fromlineno="156" tolineno="156" lineno="156" type="int">0</Const>
                      </Index>
                    </Subscript>
                    <Index fromlineno="156" tolineno="156" lineno="None">
                      <Const fromlineno="156" tolineno="156" lineno="156" type="int">2</Const>
                    </Index>
                  </Subscript>
                </BinOp>
              </Assign>
              <Assign fromlineno="158" tolineno="158" lineno="158" targets="[&lt;AssName(prefstr) l.158 [bb.cooker] at Ox9c8a3ac&gt;]" value="''">
                <AssName fromlineno="158" tolineno="158" lineno="158" name="prefstr"/>
                <Const fromlineno="158" tolineno="158" lineno="158" type="str">''</Const>
              </Assign>
            </If>
            <Print fromlineno="160" tolineno="161" lineno="160">
              <BinOp fromlineno="160" tolineno="161" lineno="160" op="%" left="'%-30s %20s %20s'" right="(p, ((((latest[0][0]) + (':')) + (latest[0][1])) + ('-')) + (latest[0][2]), prefstr)">
                <Const fromlineno="160" tolineno="160" lineno="160" type="str">'%-30s %20s %20s'</Const>
                <Tuple fromlineno="160" tolineno="161" lineno="160">
                  <Name fromlineno="160" tolineno="160" lineno="160" name="p"/>
                  <BinOp fromlineno="160" tolineno="160" lineno="160" op="+" left="(((latest[0][0]) + (':')) + (latest[0][1])) + ('-')" right="latest[0][2]">
                    <BinOp fromlineno="160" tolineno="160" lineno="160" op="+" left="((latest[0][0]) + (':')) + (latest[0][1])" right="'-'">
                      <BinOp fromlineno="160" tolineno="160" lineno="160" op="+" left="(latest[0][0]) + (':')" right="latest[0][1]">
                        <BinOp fromlineno="160" tolineno="160" lineno="160" op="+" left="latest[0][0]" right="':'">
                          <Subscript fromlineno="160" tolineno="160" lineno="160">
                            <Subscript fromlineno="160" tolineno="160" lineno="160">
                              <Name fromlineno="160" tolineno="160" lineno="160" name="latest"/>
                              <Index fromlineno="160" tolineno="160" lineno="None">
                                <Const fromlineno="160" tolineno="160" lineno="160" type="int">0</Const>
                              </Index>
                            </Subscript>
                            <Index fromlineno="160" tolineno="160" lineno="None">
                              <Const fromlineno="160" tolineno="160" lineno="160" type="int">0</Const>
                            </Index>
                          </Subscript>
                          <Const fromlineno="160" tolineno="160" lineno="160" type="str">':'</Const>
                        </BinOp>
                        <Subscript fromlineno="160" tolineno="160" lineno="160">
                          <Subscript fromlineno="160" tolineno="160" lineno="160">
                            <Name fromlineno="160" tolineno="160" lineno="160" name="latest"/>
                            <Index fromlineno="160" tolineno="160" lineno="None">
                              <Const fromlineno="160" tolineno="160" lineno="160" type="int">0</Const>
                            </Index>
                          </Subscript>
                          <Index fromlineno="160" tolineno="160" lineno="None">
                            <Const fromlineno="160" tolineno="160" lineno="160" type="int">1</Const>
                          </Index>
                        </Subscript>
                      </BinOp>
                      <Const fromlineno="160" tolineno="160" lineno="160" type="str">'-'</Const>
                    </BinOp>
                    <Subscript fromlineno="160" tolineno="160" lineno="160">
                      <Subscript fromlineno="160" tolineno="160" lineno="160">
                        <Name fromlineno="160" tolineno="160" lineno="160" name="latest"/>
                        <Index fromlineno="160" tolineno="160" lineno="None">
                          <Const fromlineno="160" tolineno="160" lineno="160" type="int">0</Const>
                        </Index>
                      </Subscript>
                      <Index fromlineno="160" tolineno="160" lineno="None">
                        <Const fromlineno="160" tolineno="160" lineno="160" type="int">2</Const>
                      </Index>
                    </Subscript>
                  </BinOp>
                  <Name fromlineno="161" tolineno="161" lineno="161" name="prefstr"/>
                </Tuple>
              </BinOp>
            </Print>
          </For>
        </Function>
        <Function fromlineno="164" tolineno="227" lineno="164">
          <Arguments fromlineno="164" tolineno="164" lineno="None" format_args="self, buildfile=None, pkgs_to_build=[]">
            <AssName fromlineno="164" tolineno="164" lineno="164" name="self"/>
            <AssName fromlineno="164" tolineno="164" lineno="164" name="buildfile"/>
            <AssName fromlineno="164" tolineno="164" lineno="164" name="pkgs_to_build"/>
            <Const fromlineno="164" tolineno="164" lineno="164" type="NoneType">None</Const>
            <List fromlineno="164" tolineno="164" lineno="164"/>
          </Arguments>
          <Assign fromlineno="168" tolineno="168" lineno="168" targets="[&lt;AssName(fn) l.168 [bb.cooker] at Ox9c8aa0c&gt;]" value="None">
            <AssName fromlineno="168" tolineno="168" lineno="168" name="fn"/>
            <Const fromlineno="168" tolineno="168" lineno="168" type="NoneType">None</Const>
          </Assign>
          <Assign fromlineno="169" tolineno="169" lineno="169" targets="[&lt;AssName(envdata) l.169 [bb.cooker] at Ox9c8aaac&gt;]" value="None">
            <AssName fromlineno="169" tolineno="169" lineno="169" name="envdata"/>
            <Const fromlineno="169" tolineno="169" lineno="169" type="NoneType">None</Const>
          </Assign>
          <If fromlineno="171" tolineno="173" lineno="171">
            <Compare fromlineno="171" tolineno="171" lineno="171" op="('in', &lt;Name(pkgs_to_build) l.171 [bb.cooker] at Ox9c8abac&gt;)">
              <Const fromlineno="171" tolineno="171" lineno="171" type="str">'world'</Const>
              <Name fromlineno="171" tolineno="171" lineno="171" name="pkgs_to_build"/>
            </Compare>
            <Print fromlineno="172" tolineno="172" lineno="172">
              <Const fromlineno="172" tolineno="172" lineno="172" type="str">"'world' is not a valid target for --environment."</Const>
            </Print>
            <Discard fromlineno="173" tolineno="173" lineno="173">
              <CallFunc fromlineno="173" tolineno="173" lineno="173" func="Getattr(exit)">
                <Getattr fromlineno="173" tolineno="173" lineno="173" attrname="exit" expr="sys">
                  <Name fromlineno="173" tolineno="173" lineno="173" name="sys"/>
                </Getattr>
                <Const fromlineno="173" tolineno="173" lineno="173" type="int">1</Const>
              </CallFunc>
            </Discard>
          </If>
          <If fromlineno="175" tolineno="177" lineno="175">
            <Compare fromlineno="175" tolineno="175" lineno="175" op="('&gt;', &lt;Const(int) l.175 [bb.cooker] at Ox9c8ae0c&gt;)">
              <CallFunc fromlineno="175" tolineno="175" lineno="175" func="Name(len)">
                <Name fromlineno="175" tolineno="175" lineno="175" name="len"/>
                <Name fromlineno="175" tolineno="175" lineno="175" name="pkgs_to_build"/>
              </CallFunc>
              <Const fromlineno="175" tolineno="175" lineno="175" type="int">1</Const>
            </Compare>
            <Print fromlineno="176" tolineno="176" lineno="176">
              <Const fromlineno="176" tolineno="176" lineno="176" type="str">'Only one target can be used with the --environment option.'</Const>
            </Print>
            <Discard fromlineno="177" tolineno="177" lineno="177">
              <CallFunc fromlineno="177" tolineno="177" lineno="177" func="Getattr(exit)">
                <Getattr fromlineno="177" tolineno="177" lineno="177" attrname="exit" expr="sys">
                  <Name fromlineno="177" tolineno="177" lineno="177" name="sys"/>
                </Getattr>
                <Const fromlineno="177" tolineno="177" lineno="177" type="int">1</Const>
              </CallFunc>
            </Discard>
          </If>
          <If fromlineno="179" tolineno="207" lineno="179">
            <Name fromlineno="179" tolineno="179" lineno="179" name="buildfile"/>
            <If fromlineno="180" tolineno="182" lineno="180">
              <Compare fromlineno="180" tolineno="180" lineno="180" op="('&gt;', &lt;Const(int) l.180 [bb.cooker] at Ox9c8e14c&gt;)">
                <CallFunc fromlineno="180" tolineno="180" lineno="180" func="Name(len)">
                  <Name fromlineno="180" tolineno="180" lineno="180" name="len"/>
                  <Name fromlineno="180" tolineno="180" lineno="180" name="pkgs_to_build"/>
                </CallFunc>
                <Const fromlineno="180" tolineno="180" lineno="180" type="int">0</Const>
              </Compare>
              <Print fromlineno="181" tolineno="181" lineno="181">
                <Const fromlineno="181" tolineno="181" lineno="181" type="str">'No target should be used with the --environment and --buildfile options.'</Const>
              </Print>
              <Discard fromlineno="182" tolineno="182" lineno="182">
                <CallFunc fromlineno="182" tolineno="182" lineno="182" func="Getattr(exit)">
                  <Getattr fromlineno="182" tolineno="182" lineno="182" attrname="exit" expr="sys">
                    <Name fromlineno="182" tolineno="182" lineno="182" name="sys"/>
                  </Getattr>
                  <Const fromlineno="182" tolineno="182" lineno="182" type="int">1</Const>
                </CallFunc>
              </Discard>
            </If>
            <Assign fromlineno="183" tolineno="183" lineno="183" targets="[&lt;AssAttr(cb) l.183 [bb.cooker] at Ox9c8e30c&gt;]" value="None">
              <AssAttr fromlineno="183" tolineno="183" lineno="183" attrname="cb" expr="self">
                <Name fromlineno="183" tolineno="183" lineno="183" name="self"/>
              </AssAttr>
              <Const fromlineno="183" tolineno="183" lineno="183" type="NoneType">None</Const>
            </Assign>
            <Assign fromlineno="184" tolineno="184" lineno="184" targets="[&lt;AssAttr(bb_cache) l.184 [bb.cooker] at Ox9c8e3ac&gt;]" value="bb.cache.init(self)">
              <AssAttr fromlineno="184" tolineno="184" lineno="184" attrname="bb_cache" expr="self">
                <Name fromlineno="184" tolineno="184" lineno="184" name="self"/>
              </AssAttr>
              <CallFunc fromlineno="184" tolineno="184" lineno="184" func="Getattr(init)">
                <Getattr fromlineno="184" tolineno="184" lineno="184" attrname="init" expr="bb.cache">
                  <Getattr fromlineno="184" tolineno="184" lineno="184" attrname="cache" expr="bb">
                    <Name fromlineno="184" tolineno="184" lineno="184" name="bb"/>
                  </Getattr>
                </Getattr>
                <Name fromlineno="184" tolineno="184" lineno="184" name="self"/>
              </CallFunc>
            </Assign>
            <Assign fromlineno="185" tolineno="185" lineno="185" targets="[&lt;AssName(fn) l.185 [bb.cooker] at Ox9c8e4ec&gt;]" value="self.matchFile(buildfile)">
              <AssName fromlineno="185" tolineno="185" lineno="185" name="fn"/>
              <CallFunc fromlineno="185" tolineno="185" lineno="185" func="Getattr(matchFile)">
                <Getattr fromlineno="185" tolineno="185" lineno="185" attrname="matchFile" expr="self">
                  <Name fromlineno="185" tolineno="185" lineno="185" name="self"/>
                </Getattr>
                <Name fromlineno="185" tolineno="185" lineno="185" name="buildfile"/>
              </CallFunc>
            </Assign>
            <If fromlineno="186" tolineno="187" lineno="186">
              <UnaryOp fromlineno="186" tolineno="186" lineno="186">
                <Name fromlineno="186" tolineno="186" lineno="186" name="fn"/>
              </UnaryOp>
              <Discard fromlineno="187" tolineno="187" lineno="187">
                <CallFunc fromlineno="187" tolineno="187" lineno="187" func="Getattr(exit)">
                  <Getattr fromlineno="187" tolineno="187" lineno="187" attrname="exit" expr="sys">
                    <Name fromlineno="187" tolineno="187" lineno="187" name="sys"/>
                  </Getattr>
                  <Const fromlineno="187" tolineno="187" lineno="187" type="int">1</Const>
                </CallFunc>
              </Discard>
            </If>
            <If fromlineno="188" tolineno="207" lineno="188">
              <Compare fromlineno="188" tolineno="188" lineno="188" op="('==', &lt;Const(int) l.188 [bb.cooker] at Ox9c8e82c&gt;)">
                <CallFunc fromlineno="188" tolineno="188" lineno="188" func="Name(len)">
                  <Name fromlineno="188" tolineno="188" lineno="188" name="len"/>
                  <Name fromlineno="188" tolineno="188" lineno="188" name="pkgs_to_build"/>
                </CallFunc>
                <Const fromlineno="188" tolineno="188" lineno="188" type="int">1</Const>
              </Compare>
              <Discard fromlineno="189" tolineno="189" lineno="189">
                <CallFunc fromlineno="189" tolineno="189" lineno="189" func="Getattr(updateCache)">
                  <Getattr fromlineno="189" tolineno="189" lineno="189" attrname="updateCache" expr="self">
                    <Name fromlineno="189" tolineno="189" lineno="189" name="self"/>
                  </Getattr>
                </CallFunc>
              </Discard>
              <Assign fromlineno="191" tolineno="191" lineno="191" targets="[&lt;AssName(localdata) l.191 [bb.cooker] at Ox9c8e96c&gt;]" value="data.createCopy(self.configuration.data)">
                <AssName fromlineno="191" tolineno="191" lineno="191" name="localdata"/>
                <CallFunc fromlineno="191" tolineno="191" lineno="191" func="Getattr(createCopy)">
                  <Getattr fromlineno="191" tolineno="191" lineno="191" attrname="createCopy" expr="data">
                    <Name fromlineno="191" tolineno="191" lineno="191" name="data"/>
                  </Getattr>
                  <Getattr fromlineno="191" tolineno="191" lineno="191" attrname="data" expr="self.configuration">
                    <Getattr fromlineno="191" tolineno="191" lineno="191" attrname="configuration" expr="self">
                      <Name fromlineno="191" tolineno="191" lineno="191" name="self"/>
                    </Getattr>
                  </Getattr>
                </CallFunc>
              </Assign>
              <Discard fromlineno="192" tolineno="192" lineno="192">
                <CallFunc fromlineno="192" tolineno="192" lineno="192" func="Getattr(update_data)">
                  <Getattr fromlineno="192" tolineno="192" lineno="192" attrname="update_data" expr="bb.data">
                    <Getattr fromlineno="192" tolineno="192" lineno="192" attrname="data" expr="bb">
                      <Name fromlineno="192" tolineno="192" lineno="192" name="bb"/>
                    </Getattr>
                  </Getattr>
                  <Name fromlineno="192" tolineno="192" lineno="192" name="localdata"/>
                </CallFunc>
              </Discard>
              <Discard fromlineno="193" tolineno="193" lineno="193">
                <CallFunc fromlineno="193" tolineno="193" lineno="193" func="Getattr(expandKeys)">
                  <Getattr fromlineno="193" tolineno="193" lineno="193" attrname="expandKeys" expr="bb.data">
                    <Getattr fromlineno="193" tolineno="193" lineno="193" attrname="data" expr="bb">
                      <Name fromlineno="193" tolineno="193" lineno="193" name="bb"/>
                    </Getattr>
                  </Getattr>
                  <Name fromlineno="193" tolineno="193" lineno="193" name="localdata"/>
                </CallFunc>
              </Discard>
              <Assign fromlineno="195" tolineno="195" lineno="195" targets="[&lt;AssName(taskdata) l.195 [bb.cooker] at Ox9c8ec8c&gt;]" value="bb.taskdata.TaskData(self.configuration.abort, self.configuration.tryaltconfigs)">
                <AssName fromlineno="195" tolineno="195" lineno="195" name="taskdata"/>
                <CallFunc fromlineno="195" tolineno="195" lineno="195" func="Getattr(TaskData)">
                  <Getattr fromlineno="195" tolineno="195" lineno="195" attrname="TaskData" expr="bb.taskdata">
                    <Getattr fromlineno="195" tolineno="195" lineno="195" attrname="taskdata" expr="bb">
                      <Name fromlineno="195" tolineno="195" lineno="195" name="bb"/>
                    </Getattr>
                  </Getattr>
                  <Getattr fromlineno="195" tolineno="195" lineno="195" attrname="abort" expr="self.configuration">
                    <Getattr fromlineno="195" tolineno="195" lineno="195" attrname="configuration" expr="self">
                      <Name fromlineno="195" tolineno="195" lineno="195" name="self"/>
                    </Getattr>
                  </Getattr>
                  <Getattr fromlineno="195" tolineno="195" lineno="195" attrname="tryaltconfigs" expr="self.configuration">
                    <Getattr fromlineno="195" tolineno="195" lineno="195" attrname="configuration" expr="self">
                      <Name fromlineno="195" tolineno="195" lineno="195" name="self"/>
                    </Getattr>
                  </Getattr>
                </CallFunc>
              </Assign>
              <TryExcept fromlineno="197" tolineno="201" lineno="197">
                <Discard fromlineno="198" tolineno="198" lineno="198">
                  <CallFunc fromlineno="198" tolineno="198" lineno="198" func="Getattr(add_provider)">
                    <Getattr fromlineno="198" tolineno="198" lineno="198" attrname="add_provider" expr="taskdata">
                      <Name fromlineno="198" tolineno="198" lineno="198" name="taskdata"/>
                    </Getattr>
                    <Name fromlineno="198" tolineno="198" lineno="198" name="localdata"/>
                    <Getattr fromlineno="198" tolineno="198" lineno="198" attrname="status" expr="self">
                      <Name fromlineno="198" tolineno="198" lineno="198" name="self"/>
                    </Getattr>
                    <Subscript fromlineno="198" tolineno="198" lineno="198">
                      <Name fromlineno="198" tolineno="198" lineno="198" name="pkgs_to_build"/>
                      <Index fromlineno="198" tolineno="198" lineno="None">
                        <Const fromlineno="198" tolineno="198" lineno="198" type="int">0</Const>
                      </Index>
                    </Subscript>
                  </CallFunc>
                </Discard>
                <Discard fromlineno="199" tolineno="199" lineno="199">
                  <CallFunc fromlineno="199" tolineno="199" lineno="199" func="Getattr(add_unresolved)">
                    <Getattr fromlineno="199" tolineno="199" lineno="199" attrname="add_unresolved" expr="taskdata">
                      <Name fromlineno="199" tolineno="199" lineno="199" name="taskdata"/>
                    </Getattr>
                    <Name fromlineno="199" tolineno="199" lineno="199" name="localdata"/>
                    <Getattr fromlineno="199" tolineno="199" lineno="199" attrname="status" expr="self">
                      <Name fromlineno="199" tolineno="199" lineno="199" name="self"/>
                    </Getattr>
                  </CallFunc>
                </Discard>
                <ExceptHandler fromlineno="200" tolineno="201" lineno="200">
                  <Getattr fromlineno="200" tolineno="200" lineno="200" attrname="NoProvider" expr="bb.providers">
                    <Getattr fromlineno="200" tolineno="200" lineno="200" attrname="providers" expr="bb">
                      <Name fromlineno="200" tolineno="200" lineno="200" name="bb"/>
                    </Getattr>
                  </Getattr>
                  <Discard fromlineno="201" tolineno="201" lineno="201">
                    <CallFunc fromlineno="201" tolineno="201" lineno="201" func="Getattr(exit)">
                      <Getattr fromlineno="201" tolineno="201" lineno="201" attrname="exit" expr="sys">
                        <Name fromlineno="201" tolineno="201" lineno="201" name="sys"/>
                      </Getattr>
                      <Const fromlineno="201" tolineno="201" lineno="201" type="int">1</Const>
                    </CallFunc>
                  </Discard>
                </ExceptHandler>
              </TryExcept>
              <Assign fromlineno="203" tolineno="203" lineno="203" targets="[&lt;AssName(targetid) l.203 [bb.cooker] at Ox9c922ec&gt;]" value="taskdata.getbuild_id(pkgs_to_build[0])">
                <AssName fromlineno="203" tolineno="203" lineno="203" name="targetid"/>
                <CallFunc fromlineno="203" tolineno="203" lineno="203" func="Getattr(getbuild_id)">
                  <Getattr fromlineno="203" tolineno="203" lineno="203" attrname="getbuild_id" expr="taskdata">
                    <Name fromlineno="203" tolineno="203" lineno="203" name="taskdata"/>
                  </Getattr>
                  <Subscript fromlineno="203" tolineno="203" lineno="203">
                    <Name fromlineno="203" tolineno="203" lineno="203" name="pkgs_to_build"/>
                    <Index fromlineno="203" tolineno="203" lineno="None">
                      <Const fromlineno="203" tolineno="203" lineno="203" type="int">0</Const>
                    </Index>
                  </Subscript>
                </CallFunc>
              </Assign>
              <Assign fromlineno="204" tolineno="204" lineno="204" targets="[&lt;AssName(fnid) l.204 [bb.cooker] at Ox9c9246c&gt;]" value="taskdata.build_targets[targetid][0]">
                <AssName fromlineno="204" tolineno="204" lineno="204" name="fnid"/>
                <Subscript fromlineno="204" tolineno="204" lineno="204">
                  <Subscript fromlineno="204" tolineno="204" lineno="204">
                    <Getattr fromlineno="204" tolineno="204" lineno="204" attrname="build_targets" expr="taskdata">
                      <Name fromlineno="204" tolineno="204" lineno="204" name="taskdata"/>
                    </Getattr>
                    <Index fromlineno="204" tolineno="204" lineno="None">
                      <Name fromlineno="204" tolineno="204" lineno="204" name="targetid"/>
                    </Index>
                  </Subscript>
                  <Index fromlineno="204" tolineno="204" lineno="None">
                    <Const fromlineno="204" tolineno="204" lineno="204" type="int">0</Const>
                  </Index>
                </Subscript>
              </Assign>
              <Assign fromlineno="205" tolineno="205" lineno="205" targets="[&lt;AssName(fn) l.205 [bb.cooker] at Ox9c925ec&gt;]" value="taskdata.fn_index[fnid]">
                <AssName fromlineno="205" tolineno="205" lineno="205" name="fn"/>
                <Subscript fromlineno="205" tolineno="205" lineno="205">
                  <Getattr fromlineno="205" tolineno="205" lineno="205" attrname="fn_index" expr="taskdata">
                    <Name fromlineno="205" tolineno="205" lineno="205" name="taskdata"/>
                  </Getattr>
                  <Index fromlineno="205" tolineno="205" lineno="None">
                    <Name fromlineno="205" tolineno="205" lineno="205" name="fnid"/>
                  </Index>
                </Subscript>
              </Assign>
              <Assign fromlineno="207" tolineno="207" lineno="207" targets="[&lt;AssName(envdata) l.207 [bb.cooker] at Ox9c9270c&gt;]" value="self.configuration.data">
                <AssName fromlineno="207" tolineno="207" lineno="207" name="envdata"/>
                <Getattr fromlineno="207" tolineno="207" lineno="207" attrname="data" expr="self.configuration">
                  <Getattr fromlineno="207" tolineno="207" lineno="207" attrname="configuration" expr="self">
                    <Name fromlineno="207" tolineno="207" lineno="207" name="self"/>
                  </Getattr>
                </Getattr>
              </Assign>
            </If>
          </If>
          <If fromlineno="209" tolineno="215" lineno="209">
            <Name fromlineno="209" tolineno="209" lineno="209" name="fn"/>
            <TryExcept fromlineno="210" tolineno="215" lineno="210">
              <Assign fromlineno="211" tolineno="211" lineno="211" targets="[&lt;AssName(envdata) l.211 [bb.cooker] at Ox9c9284c&gt;]" value="self.bb_cache.loadDataFull(fn, self.configuration.data)">
                <AssName fromlineno="211" tolineno="211" lineno="211" name="envdata"/>
                <CallFunc fromlineno="211" tolineno="211" lineno="211" func="Getattr(loadDataFull)">
                  <Getattr fromlineno="211" tolineno="211" lineno="211" attrname="loadDataFull" expr="self.bb_cache">
                    <Getattr fromlineno="211" tolineno="211" lineno="211" attrname="bb_cache" expr="self">
                      <Name fromlineno="211" tolineno="211" lineno="211" name="self"/>
                    </Getattr>
                  </Getattr>
                  <Name fromlineno="211" tolineno="211" lineno="211" name="fn"/>
                  <Getattr fromlineno="211" tolineno="211" lineno="211" attrname="data" expr="self.configuration">
                    <Getattr fromlineno="211" tolineno="211" lineno="211" attrname="configuration" expr="self">
                      <Name fromlineno="211" tolineno="211" lineno="211" name="self"/>
                    </Getattr>
                  </Getattr>
                </CallFunc>
              </Assign>
              <ExceptHandler fromlineno="212" tolineno="213" lineno="212">
                <Name fromlineno="212" tolineno="212" lineno="212" name="IOError"/>
                <AssName fromlineno="212" tolineno="212" lineno="212" name="e"/>
                <Discard fromlineno="213" tolineno="213" lineno="213">
                  <CallFunc fromlineno="213" tolineno="213" lineno="213" func="Getattr(fatal)">
                    <Getattr fromlineno="213" tolineno="213" lineno="213" attrname="fatal" expr="bb.msg">
                      <Getattr fromlineno="213" tolineno="213" lineno="213" attrname="msg" expr="bb">
                        <Name fromlineno="213" tolineno="213" lineno="213" name="bb"/>
                      </Getattr>
                    </Getattr>
                    <Getattr fromlineno="213" tolineno="213" lineno="213" attrname="Parsing" expr="bb.msg.domain">
                      <Getattr fromlineno="213" tolineno="213" lineno="213" attrname="domain" expr="bb.msg">
                        <Getattr fromlineno="213" tolineno="213" lineno="213" attrname="msg" expr="bb">
                          <Name fromlineno="213" tolineno="213" lineno="213" name="bb"/>
                        </Getattr>
                      </Getattr>
                    </Getattr>
                    <BinOp fromlineno="213" tolineno="213" lineno="213" op="%" left="'Unable to read %s: %s'" right="(fn, e)">
                      <Const fromlineno="213" tolineno="213" lineno="213" type="str">'Unable to read %s: %s'</Const>
                      <Tuple fromlineno="213" tolineno="213" lineno="213">
                        <Name fromlineno="213" tolineno="213" lineno="213" name="fn"/>
                        <Name fromlineno="213" tolineno="213" lineno="213" name="e"/>
                      </Tuple>
                    </BinOp>
                  </CallFunc>
                </Discard>
              </ExceptHandler>
              <ExceptHandler fromlineno="214" tolineno="215" lineno="214">
                <Name fromlineno="214" tolineno="214" lineno="214" name="Exception"/>
                <AssName fromlineno="214" tolineno="214" lineno="214" name="e"/>
                <Discard fromlineno="215" tolineno="215" lineno="215">
                  <CallFunc fromlineno="215" tolineno="215" lineno="215" func="Getattr(fatal)">
                    <Getattr fromlineno="215" tolineno="215" lineno="215" attrname="fatal" expr="bb.msg">
                      <Getattr fromlineno="215" tolineno="215" lineno="215" attrname="msg" expr="bb">
                        <Name fromlineno="215" tolineno="215" lineno="215" name="bb"/>
                      </Getattr>
                    </Getattr>
                    <Getattr fromlineno="215" tolineno="215" lineno="215" attrname="Parsing" expr="bb.msg.domain">
                      <Getattr fromlineno="215" tolineno="215" lineno="215" attrname="domain" expr="bb.msg">
                        <Getattr fromlineno="215" tolineno="215" lineno="215" attrname="msg" expr="bb">
                          <Name fromlineno="215" tolineno="215" lineno="215" name="bb"/>
                        </Getattr>
                      </Getattr>
                    </Getattr>
                    <BinOp fromlineno="215" tolineno="215" lineno="215" op="%" left="'%s'" right="e">
                      <Const fromlineno="215" tolineno="215" lineno="215" type="str">'%s'</Const>
                      <Name fromlineno="215" tolineno="215" lineno="215" name="e"/>
                    </BinOp>
                  </CallFunc>
                </Discard>
              </ExceptHandler>
            </TryExcept>
          </If>
          <TryExcept fromlineno="218" tolineno="222" lineno="218">
            <Discard fromlineno="219" tolineno="219" lineno="219">
              <CallFunc fromlineno="219" tolineno="219" lineno="219" func="Getattr(update_data)">
                <Getattr fromlineno="219" tolineno="219" lineno="219" attrname="update_data" expr="data">
                  <Name fromlineno="219" tolineno="219" lineno="219" name="data"/>
                </Getattr>
                <Name fromlineno="219" tolineno="219" lineno="219" name="envdata"/>
              </CallFunc>
            </Discard>
            <Discard fromlineno="220" tolineno="220" lineno="220">
              <CallFunc fromlineno="220" tolineno="220" lineno="220" func="Getattr(emit_env)">
                <Getattr fromlineno="220" tolineno="220" lineno="220" attrname="emit_env" expr="data">
                  <Name fromlineno="220" tolineno="220" lineno="220" name="data"/>
                </Getattr>
                <Getattr fromlineno="220" tolineno="220" lineno="220" attrname="__stdout__" expr="sys">
                  <Name fromlineno="220" tolineno="220" lineno="220" name="sys"/>
                </Getattr>
                <Name fromlineno="220" tolineno="220" lineno="220" name="envdata"/>
                <Const fromlineno="220" tolineno="220" lineno="220" type="bool">True</Const>
              </CallFunc>
            </Discard>
            <ExceptHandler fromlineno="221" tolineno="222" lineno="221">
              <Name fromlineno="221" tolineno="221" lineno="221" name="Exception"/>
              <AssName fromlineno="221" tolineno="221" lineno="221" name="e"/>
              <Discard fromlineno="222" tolineno="222" lineno="222">
                <CallFunc fromlineno="222" tolineno="222" lineno="222" func="Getattr(fatal)">
                  <Getattr fromlineno="222" tolineno="222" lineno="222" attrname="fatal" expr="bb.msg">
                    <Getattr fromlineno="222" tolineno="222" lineno="222" attrname="msg" expr="bb">
                      <Name fromlineno="222" tolineno="222" lineno="222" name="bb"/>
                    </Getattr>
                  </Getattr>
                  <Getattr fromlineno="222" tolineno="222" lineno="222" attrname="Parsing" expr="bb.msg.domain">
                    <Getattr fromlineno="222" tolineno="222" lineno="222" attrname="domain" expr="bb.msg">
                      <Getattr fromlineno="222" tolineno="222" lineno="222" attrname="msg" expr="bb">
                        <Name fromlineno="222" tolineno="222" lineno="222" name="bb"/>
                      </Getattr>
                    </Getattr>
                  </Getattr>
                  <BinOp fromlineno="222" tolineno="222" lineno="222" op="%" left="'%s'" right="e">
                    <Const fromlineno="222" tolineno="222" lineno="222" type="str">'%s'</Const>
                    <Name fromlineno="222" tolineno="222" lineno="222" name="e"/>
                  </BinOp>
                </CallFunc>
              </Discard>
            </ExceptHandler>
          </TryExcept>
          <Discard fromlineno="224" tolineno="224" lineno="224">
            <CallFunc fromlineno="224" tolineno="224" lineno="224" func="Getattr(expandKeys)">
              <Getattr fromlineno="224" tolineno="224" lineno="224" attrname="expandKeys" expr="data">
                <Name fromlineno="224" tolineno="224" lineno="224" name="data"/>
              </Getattr>
              <Name fromlineno="224" tolineno="224" lineno="224" name="envdata"/>
            </CallFunc>
          </Discard>
          <For fromlineno="225" tolineno="227" lineno="225">
            <AssName fromlineno="225" tolineno="225" lineno="225" name="e"/>
            <CallFunc fromlineno="225" tolineno="225" lineno="225" func="Getattr(keys)">
              <Getattr fromlineno="225" tolineno="225" lineno="225" attrname="keys" expr="envdata">
                <Name fromlineno="225" tolineno="225" lineno="225" name="envdata"/>
              </Getattr>
            </CallFunc>
            <If fromlineno="226" tolineno="227" lineno="226">
              <CallFunc fromlineno="226" tolineno="226" lineno="226" func="Getattr(getVarFlag)">
                <Getattr fromlineno="226" tolineno="226" lineno="226" attrname="getVarFlag" expr="data">
                  <Name fromlineno="226" tolineno="226" lineno="226" name="data"/>
                </Getattr>
                <Name fromlineno="226" tolineno="226" lineno="226" name="e"/>
                <Const fromlineno="226" tolineno="226" lineno="226" type="str">'python'</Const>
                <Name fromlineno="226" tolineno="226" lineno="226" name="envdata"/>
              </CallFunc>
              <Discard fromlineno="227" tolineno="227" lineno="227">
                <CallFunc fromlineno="227" tolineno="227" lineno="227" func="Getattr(write)">
                  <Getattr fromlineno="227" tolineno="227" lineno="227" attrname="write" expr="sys.__stdout__">
                    <Getattr fromlineno="227" tolineno="227" lineno="227" attrname="__stdout__" expr="sys">
                      <Name fromlineno="227" tolineno="227" lineno="227" name="sys"/>
                    </Getattr>
                  </Getattr>
                  <BinOp fromlineno="227" tolineno="227" lineno="227" op="%" left="'\npython %s () {\n%s}\n'" right="(e, data.getVar(e, envdata, 1))">
                    <Const fromlineno="227" tolineno="227" lineno="227" type="str">'\npython %s () {\n%s}\n'</Const>
                    <Tuple fromlineno="227" tolineno="227" lineno="227">
                      <Name fromlineno="227" tolineno="227" lineno="227" name="e"/>
                      <CallFunc fromlineno="227" tolineno="227" lineno="227" func="Getattr(getVar)">
                        <Getattr fromlineno="227" tolineno="227" lineno="227" attrname="getVar" expr="data">
                          <Name fromlineno="227" tolineno="227" lineno="227" name="data"/>
                        </Getattr>
                        <Name fromlineno="227" tolineno="227" lineno="227" name="e"/>
                        <Name fromlineno="227" tolineno="227" lineno="227" name="envdata"/>
                        <Const fromlineno="227" tolineno="227" lineno="227" type="int">1</Const>
                      </CallFunc>
                    </Tuple>
                  </BinOp>
                </CallFunc>
              </Discard>
            </If>
          </For>
        </Function>
        <Function fromlineno="229" tolineno="305" lineno="229">
          <Arguments fromlineno="229" tolineno="229" lineno="None" format_args="self, pkgs_to_build, ignore_deps">
            <AssName fromlineno="229" tolineno="229" lineno="229" name="self"/>
            <AssName fromlineno="229" tolineno="229" lineno="229" name="pkgs_to_build"/>
            <AssName fromlineno="229" tolineno="229" lineno="229" name="ignore_deps"/>
          </Arguments>
          <For fromlineno="238" tolineno="239" lineno="238">
            <AssName fromlineno="238" tolineno="238" lineno="238" name="dep"/>
            <Name fromlineno="238" tolineno="238" lineno="238" name="ignore_deps"/>
            <Discard fromlineno="239" tolineno="239" lineno="239">
              <CallFunc fromlineno="239" tolineno="239" lineno="239" func="Getattr(add)">
                <Getattr fromlineno="239" tolineno="239" lineno="239" attrname="add" expr="self.status.ignored_dependencies">
                  <Getattr fromlineno="239" tolineno="239" lineno="239" attrname="ignored_dependencies" expr="self.status">
                    <Getattr fromlineno="239" tolineno="239" lineno="239" attrname="status" expr="self">
                      <Name fromlineno="239" tolineno="239" lineno="239" name="self"/>
                    </Getattr>
                  </Getattr>
                </Getattr>
                <Name fromlineno="239" tolineno="239" lineno="239" name="dep"/>
              </CallFunc>
            </Discard>
          </For>
          <Assign fromlineno="241" tolineno="241" lineno="241" targets="[&lt;AssName(localdata) l.241 [bb.cooker] at Ox9c96b8c&gt;]" value="data.createCopy(self.configuration.data)">
            <AssName fromlineno="241" tolineno="241" lineno="241" name="localdata"/>
            <CallFunc fromlineno="241" tolineno="241" lineno="241" func="Getattr(createCopy)">
              <Getattr fromlineno="241" tolineno="241" lineno="241" attrname="createCopy" expr="data">
                <Name fromlineno="241" tolineno="241" lineno="241" name="data"/>
              </Getattr>
              <Getattr fromlineno="241" tolineno="241" lineno="241" attrname="data" expr="self.configuration">
                <Getattr fromlineno="241" tolineno="241" lineno="241" attrname="configuration" expr="self">
                  <Name fromlineno="241" tolineno="241" lineno="241" name="self"/>
                </Getattr>
              </Getattr>
            </CallFunc>
          </Assign>
          <Discard fromlineno="242" tolineno="242" lineno="242">
            <CallFunc fromlineno="242" tolineno="242" lineno="242" func="Getattr(update_data)">
              <Getattr fromlineno="242" tolineno="242" lineno="242" attrname="update_data" expr="bb.data">
                <Getattr fromlineno="242" tolineno="242" lineno="242" attrname="data" expr="bb">
                  <Name fromlineno="242" tolineno="242" lineno="242" name="bb"/>
                </Getattr>
              </Getattr>
              <Name fromlineno="242" tolineno="242" lineno="242" name="localdata"/>
            </CallFunc>
          </Discard>
          <Discard fromlineno="243" tolineno="243" lineno="243">
            <CallFunc fromlineno="243" tolineno="243" lineno="243" func="Getattr(expandKeys)">
              <Getattr fromlineno="243" tolineno="243" lineno="243" attrname="expandKeys" expr="bb.data">
                <Getattr fromlineno="243" tolineno="243" lineno="243" attrname="data" expr="bb">
                  <Name fromlineno="243" tolineno="243" lineno="243" name="bb"/>
                </Getattr>
              </Getattr>
              <Name fromlineno="243" tolineno="243" lineno="243" name="localdata"/>
            </CallFunc>
          </Discard>
          <Assign fromlineno="244" tolineno="244" lineno="244" targets="[&lt;AssName(taskdata) l.244 [bb.cooker] at Ox9c96eac&gt;]" value="bb.taskdata.TaskData(self.configuration.abort, self.configuration.tryaltconfigs)">
            <AssName fromlineno="244" tolineno="244" lineno="244" name="taskdata"/>
            <CallFunc fromlineno="244" tolineno="244" lineno="244" func="Getattr(TaskData)">
              <Getattr fromlineno="244" tolineno="244" lineno="244" attrname="TaskData" expr="bb.taskdata">
                <Getattr fromlineno="244" tolineno="244" lineno="244" attrname="taskdata" expr="bb">
                  <Name fromlineno="244" tolineno="244" lineno="244" name="bb"/>
                </Getattr>
              </Getattr>
              <Getattr fromlineno="244" tolineno="244" lineno="244" attrname="abort" expr="self.configuration">
                <Getattr fromlineno="244" tolineno="244" lineno="244" attrname="configuration" expr="self">
                  <Name fromlineno="244" tolineno="244" lineno="244" name="self"/>
                </Getattr>
              </Getattr>
              <Getattr fromlineno="244" tolineno="244" lineno="244" attrname="tryaltconfigs" expr="self.configuration">
                <Getattr fromlineno="244" tolineno="244" lineno="244" attrname="configuration" expr="self">
                  <Name fromlineno="244" tolineno="244" lineno="244" name="self"/>
                </Getattr>
              </Getattr>
            </CallFunc>
          </Assign>
          <Assign fromlineno="246" tolineno="246" lineno="246" targets="[&lt;AssName(runlist) l.246 [bb.cooker] at Ox9c9c0ac&gt;]" value="[]">
            <AssName fromlineno="246" tolineno="246" lineno="246" name="runlist"/>
            <List fromlineno="246" tolineno="246" lineno="246"/>
          </Assign>
          <TryExcept fromlineno="247" tolineno="253" lineno="247">
            <For fromlineno="248" tolineno="250" lineno="248">
              <AssName fromlineno="248" tolineno="248" lineno="248" name="k"/>
              <Name fromlineno="248" tolineno="248" lineno="248" name="pkgs_to_build"/>
              <Discard fromlineno="249" tolineno="249" lineno="249">
                <CallFunc fromlineno="249" tolineno="249" lineno="249" func="Getattr(add_provider)">
                  <Getattr fromlineno="249" tolineno="249" lineno="249" attrname="add_provider" expr="taskdata">
                    <Name fromlineno="249" tolineno="249" lineno="249" name="taskdata"/>
                  </Getattr>
                  <Name fromlineno="249" tolineno="249" lineno="249" name="localdata"/>
                  <Getattr fromlineno="249" tolineno="249" lineno="249" attrname="status" expr="self">
                    <Name fromlineno="249" tolineno="249" lineno="249" name="self"/>
                  </Getattr>
                  <Name fromlineno="249" tolineno="249" lineno="249" name="k"/>
                </CallFunc>
              </Discard>
              <Discard fromlineno="250" tolineno="250" lineno="250">
                <CallFunc fromlineno="250" tolineno="250" lineno="250" func="Getattr(append)">
                  <Getattr fromlineno="250" tolineno="250" lineno="250" attrname="append" expr="runlist">
                    <Name fromlineno="250" tolineno="250" lineno="250" name="runlist"/>
                  </Getattr>
                  <List fromlineno="250" tolineno="250" lineno="250">
                    <Name fromlineno="250" tolineno="250" lineno="250" name="k"/>
                    <BinOp fromlineno="250" tolineno="250" lineno="250" op="%" left="'do_%s'" right="self.configuration.cmd">
                      <Const fromlineno="250" tolineno="250" lineno="250" type="str">'do_%s'</Const>
                      <Getattr fromlineno="250" tolineno="250" lineno="250" attrname="cmd" expr="self.configuration">
                        <Getattr fromlineno="250" tolineno="250" lineno="250" attrname="configuration" expr="self">
                          <Name fromlineno="250" tolineno="250" lineno="250" name="self"/>
                        </Getattr>
                      </Getattr>
                    </BinOp>
                  </List>
                </CallFunc>
              </Discard>
            </For>
            <Discard fromlineno="251" tolineno="251" lineno="251">
              <CallFunc fromlineno="251" tolineno="251" lineno="251" func="Getattr(add_unresolved)">
                <Getattr fromlineno="251" tolineno="251" lineno="251" attrname="add_unresolved" expr="taskdata">
                  <Name fromlineno="251" tolineno="251" lineno="251" name="taskdata"/>
                </Getattr>
                <Name fromlineno="251" tolineno="251" lineno="251" name="localdata"/>
                <Getattr fromlineno="251" tolineno="251" lineno="251" attrname="status" expr="self">
                  <Name fromlineno="251" tolineno="251" lineno="251" name="self"/>
                </Getattr>
              </CallFunc>
            </Discard>
            <ExceptHandler fromlineno="252" tolineno="253" lineno="252">
              <Getattr fromlineno="252" tolineno="252" lineno="252" attrname="NoProvider" expr="bb.providers">
                <Getattr fromlineno="252" tolineno="252" lineno="252" attrname="providers" expr="bb">
                  <Name fromlineno="252" tolineno="252" lineno="252" name="bb"/>
                </Getattr>
              </Getattr>
              <Discard fromlineno="253" tolineno="253" lineno="253">
                <CallFunc fromlineno="253" tolineno="253" lineno="253" func="Getattr(exit)">
                  <Getattr fromlineno="253" tolineno="253" lineno="253" attrname="exit" expr="sys">
                    <Name fromlineno="253" tolineno="253" lineno="253" name="sys"/>
                  </Getattr>
                  <Const fromlineno="253" tolineno="253" lineno="253" type="int">1</Const>
                </CallFunc>
              </Discard>
            </ExceptHandler>
          </TryExcept>
          <Assign fromlineno="254" tolineno="254" lineno="254" targets="[&lt;AssName(rq) l.254 [bb.cooker] at Ox9c9c7cc&gt;]" value="bb.runqueue.RunQueue(self, self.configuration.data, self.status, taskdata, runlist)">
            <AssName fromlineno="254" tolineno="254" lineno="254" name="rq"/>
            <CallFunc fromlineno="254" tolineno="254" lineno="254" func="Getattr(RunQueue)">
              <Getattr fromlineno="254" tolineno="254" lineno="254" attrname="RunQueue" expr="bb.runqueue">
                <Getattr fromlineno="254" tolineno="254" lineno="254" attrname="runqueue" expr="bb">
                  <Name fromlineno="254" tolineno="254" lineno="254" name="bb"/>
                </Getattr>
              </Getattr>
              <Name fromlineno="254" tolineno="254" lineno="254" name="self"/>
              <Getattr fromlineno="254" tolineno="254" lineno="254" attrname="data" expr="self.configuration">
                <Getattr fromlineno="254" tolineno="254" lineno="254" attrname="configuration" expr="self">
                  <Name fromlineno="254" tolineno="254" lineno="254" name="self"/>
                </Getattr>
              </Getattr>
              <Getattr fromlineno="254" tolineno="254" lineno="254" attrname="status" expr="self">
                <Name fromlineno="254" tolineno="254" lineno="254" name="self"/>
              </Getattr>
              <Name fromlineno="254" tolineno="254" lineno="254" name="taskdata"/>
              <Name fromlineno="254" tolineno="254" lineno="254" name="runlist"/>
            </CallFunc>
          </Assign>
          <Discard fromlineno="255" tolineno="255" lineno="255">
            <CallFunc fromlineno="255" tolineno="255" lineno="255" func="Getattr(prepare_runqueue)">
              <Getattr fromlineno="255" tolineno="255" lineno="255" attrname="prepare_runqueue" expr="rq">
                <Name fromlineno="255" tolineno="255" lineno="255" name="rq"/>
              </Getattr>
            </CallFunc>
          </Discard>
          <Assign fromlineno="257" tolineno="257" lineno="257" targets="[&lt;AssName(seen_fnids) l.257 [bb.cooker] at Ox9c9ca8c&gt;]" value="[]">
            <AssName fromlineno="257" tolineno="257" lineno="257" name="seen_fnids"/>
            <List fromlineno="257" tolineno="257" lineno="257"/>
          </Assign>
          <Assign fromlineno="258" tolineno="258" lineno="258" targets="[&lt;AssName(depends_file) l.258 [bb.cooker] at Ox9c9cb4c&gt;]" value="file('depends.dot', 'w')">
            <AssName fromlineno="258" tolineno="258" lineno="258" name="depends_file"/>
            <CallFunc fromlineno="258" tolineno="258" lineno="258" func="Name(file)">
              <Name fromlineno="258" tolineno="258" lineno="258" name="file"/>
              <Const fromlineno="258" tolineno="258" lineno="258" type="str">'depends.dot'</Const>
              <Const fromlineno="258" tolineno="258" lineno="258" type="str">'w'</Const>
            </CallFunc>
          </Assign>
          <Assign fromlineno="259" tolineno="259" lineno="259" targets="[&lt;AssName(tdepends_file) l.259 [bb.cooker] at Ox9c9cc6c&gt;]" value="file('task-depends.dot', 'w')">
            <AssName fromlineno="259" tolineno="259" lineno="259" name="tdepends_file"/>
            <CallFunc fromlineno="259" tolineno="259" lineno="259" func="Name(file)">
              <Name fromlineno="259" tolineno="259" lineno="259" name="file"/>
              <Const fromlineno="259" tolineno="259" lineno="259" type="str">'task-depends.dot'</Const>
              <Const fromlineno="259" tolineno="259" lineno="259" type="str">'w'</Const>
            </CallFunc>
          </Assign>
          <Print fromlineno="260" tolineno="260" lineno="260">
            <Name fromlineno="260" tolineno="260" lineno="260" name="depends_file"/>
            <Const fromlineno="260" tolineno="260" lineno="260" type="str">'digraph depends {'</Const>
          </Print>
          <Print fromlineno="261" tolineno="261" lineno="261">
            <Name fromlineno="261" tolineno="261" lineno="261" name="tdepends_file"/>
            <Const fromlineno="261" tolineno="261" lineno="261" type="str">'digraph depends {'</Const>
          </Print>
          <For fromlineno="263" tolineno="295" lineno="263">
            <AssName fromlineno="263" tolineno="263" lineno="263" name="task"/>
            <CallFunc fromlineno="263" tolineno="263" lineno="263" func="Name(range)">
              <Name fromlineno="263" tolineno="263" lineno="263" name="range"/>
              <CallFunc fromlineno="263" tolineno="263" lineno="263" func="Name(len)">
                <Name fromlineno="263" tolineno="263" lineno="263" name="len"/>
                <Getattr fromlineno="263" tolineno="263" lineno="263" attrname="runq_fnid" expr="rq">
                  <Name fromlineno="263" tolineno="263" lineno="263" name="rq"/>
                </Getattr>
              </CallFunc>
            </CallFunc>
            <Assign fromlineno="264" tolineno="264" lineno="264" targets="[&lt;AssName(taskname) l.264 [bb.cooker] at Ox9ca004c&gt;]" value="rq.runq_task[task]">
              <AssName fromlineno="264" tolineno="264" lineno="264" name="taskname"/>
              <Subscript fromlineno="264" tolineno="264" lineno="264">
                <Getattr fromlineno="264" tolineno="264" lineno="264" attrname="runq_task" expr="rq">
                  <Name fromlineno="264" tolineno="264" lineno="264" name="rq"/>
                </Getattr>
                <Index fromlineno="264" tolineno="264" lineno="None">
                  <Name fromlineno="264" tolineno="264" lineno="264" name="task"/>
                </Index>
              </Subscript>
            </Assign>
            <Assign fromlineno="265" tolineno="265" lineno="265" targets="[&lt;AssName(fnid) l.265 [bb.cooker] at Ox9ca016c&gt;]" value="rq.runq_fnid[task]">
              <AssName fromlineno="265" tolineno="265" lineno="265" name="fnid"/>
              <Subscript fromlineno="265" tolineno="265" lineno="265">
                <Getattr fromlineno="265" tolineno="265" lineno="265" attrname="runq_fnid" expr="rq">
                  <Name fromlineno="265" tolineno="265" lineno="265" name="rq"/>
                </Getattr>
                <Index fromlineno="265" tolineno="265" lineno="None">
                  <Name fromlineno="265" tolineno="265" lineno="265" name="task"/>
                </Index>
              </Subscript>
            </Assign>
            <Assign fromlineno="266" tolineno="266" lineno="266" targets="[&lt;AssName(fn) l.266 [bb.cooker] at Ox9ca028c&gt;]" value="taskdata.fn_index[fnid]">
              <AssName fromlineno="266" tolineno="266" lineno="266" name="fn"/>
              <Subscript fromlineno="266" tolineno="266" lineno="266">
                <Getattr fromlineno="266" tolineno="266" lineno="266" attrname="fn_index" expr="taskdata">
                  <Name fromlineno="266" tolineno="266" lineno="266" name="taskdata"/>
                </Getattr>
                <Index fromlineno="266" tolineno="266" lineno="None">
                  <Name fromlineno="266" tolineno="266" lineno="266" name="fnid"/>
                </Index>
              </Subscript>
            </Assign>
            <Assign fromlineno="267" tolineno="267" lineno="267" targets="[&lt;AssName(pn) l.267 [bb.cooker] at Ox9ca03ac&gt;]" value="self.status.pkg_fn[fn]">
              <AssName fromlineno="267" tolineno="267" lineno="267" name="pn"/>
              <Subscript fromlineno="267" tolineno="267" lineno="267">
                <Getattr fromlineno="267" tolineno="267" lineno="267" attrname="pkg_fn" expr="self.status">
                  <Getattr fromlineno="267" tolineno="267" lineno="267" attrname="status" expr="self">
                    <Name fromlineno="267" tolineno="267" lineno="267" name="self"/>
                  </Getattr>
                </Getattr>
                <Index fromlineno="267" tolineno="267" lineno="None">
                  <Name fromlineno="267" tolineno="267" lineno="267" name="fn"/>
                </Index>
              </Subscript>
            </Assign>
            <Assign fromlineno="268" tolineno="268" lineno="268" targets="[&lt;AssName(version) l.268 [bb.cooker] at Ox9ca04ec&gt;]" value="('%s:%s-%s') % (self.status.pkg_pepvpr[fn])">
              <AssName fromlineno="268" tolineno="268" lineno="268" name="version"/>
              <BinOp fromlineno="268" tolineno="268" lineno="268" op="%" left="'%s:%s-%s'" right="self.status.pkg_pepvpr[fn]">
                <Const fromlineno="268" tolineno="268" lineno="268" type="str">'%s:%s-%s'</Const>
                <Subscript fromlineno="268" tolineno="268" lineno="268">
                  <Getattr fromlineno="268" tolineno="268" lineno="268" attrname="pkg_pepvpr" expr="self.status">
                    <Getattr fromlineno="268" tolineno="268" lineno="268" attrname="status" expr="self">
                      <Name fromlineno="268" tolineno="268" lineno="268" name="self"/>
                    </Getattr>
                  </Getattr>
                  <Index fromlineno="268" tolineno="268" lineno="None">
                    <Name fromlineno="268" tolineno="268" lineno="268" name="fn"/>
                  </Index>
                </Subscript>
              </BinOp>
            </Assign>
            <Print fromlineno="269" tolineno="269" lineno="269">
              <Name fromlineno="269" tolineno="269" lineno="269" name="tdepends_file"/>
              <BinOp fromlineno="269" tolineno="269" lineno="269" op="%" left="'&quot;%s.%s&quot; [label=&quot;%s %s\\n%s\\n%s&quot;]'" right="(pn, taskname, pn, taskname, version, fn)">
                <Const fromlineno="269" tolineno="269" lineno="269" type="str">'"%s.%s" [label="%s %s\\n%s\\n%s"]'</Const>
                <Tuple fromlineno="269" tolineno="269" lineno="269">
                  <Name fromlineno="269" tolineno="269" lineno="269" name="pn"/>
                  <Name fromlineno="269" tolineno="269" lineno="269" name="taskname"/>
                  <Name fromlineno="269" tolineno="269" lineno="269" name="pn"/>
                  <Name fromlineno="269" tolineno="269" lineno="269" name="taskname"/>
                  <Name fromlineno="269" tolineno="269" lineno="269" name="version"/>
                  <Name fromlineno="269" tolineno="269" lineno="269" name="fn"/>
                </Tuple>
              </BinOp>
            </Print>
            <For fromlineno="270" tolineno="273" lineno="270">
              <AssName fromlineno="270" tolineno="270" lineno="270" name="dep"/>
              <Subscript fromlineno="270" tolineno="270" lineno="270">
                <Getattr fromlineno="270" tolineno="270" lineno="270" attrname="runq_depends" expr="rq">
                  <Name fromlineno="270" tolineno="270" lineno="270" name="rq"/>
                </Getattr>
                <Index fromlineno="270" tolineno="270" lineno="None">
                  <Name fromlineno="270" tolineno="270" lineno="270" name="task"/>
                </Index>
              </Subscript>
              <Assign fromlineno="271" tolineno="271" lineno="271" targets="[&lt;AssName(depfn) l.271 [bb.cooker] at Ox9ca092c&gt;]" value="taskdata.fn_index[rq.runq_fnid[dep]]">
                <AssName fromlineno="271" tolineno="271" lineno="271" name="depfn"/>
                <Subscript fromlineno="271" tolineno="271" lineno="271">
                  <Getattr fromlineno="271" tolineno="271" lineno="271" attrname="fn_index" expr="taskdata">
                    <Name fromlineno="271" tolineno="271" lineno="271" name="taskdata"/>
                  </Getattr>
                  <Index fromlineno="271" tolineno="271" lineno="None">
                    <Subscript fromlineno="271" tolineno="271" lineno="271">
                      <Getattr fromlineno="271" tolineno="271" lineno="271" attrname="runq_fnid" expr="rq">
                        <Name fromlineno="271" tolineno="271" lineno="271" name="rq"/>
                      </Getattr>
                      <Index fromlineno="271" tolineno="271" lineno="None">
                        <Name fromlineno="271" tolineno="271" lineno="271" name="dep"/>
                      </Index>
                    </Subscript>
                  </Index>
                </Subscript>
              </Assign>
              <Assign fromlineno="272" tolineno="272" lineno="272" targets="[&lt;AssName(deppn) l.272 [bb.cooker] at Ox9ca0acc&gt;]" value="self.status.pkg_fn[depfn]">
                <AssName fromlineno="272" tolineno="272" lineno="272" name="deppn"/>
                <Subscript fromlineno="272" tolineno="272" lineno="272">
                  <Getattr fromlineno="272" tolineno="272" lineno="272" attrname="pkg_fn" expr="self.status">
                    <Getattr fromlineno="272" tolineno="272" lineno="272" attrname="status" expr="self">
                      <Name fromlineno="272" tolineno="272" lineno="272" name="self"/>
                    </Getattr>
                  </Getattr>
                  <Index fromlineno="272" tolineno="272" lineno="None">
                    <Name fromlineno="272" tolineno="272" lineno="272" name="depfn"/>
                  </Index>
                </Subscript>
              </Assign>
              <Print fromlineno="273" tolineno="273" lineno="273">
                <Name fromlineno="273" tolineno="273" lineno="273" name="tdepends_file"/>
                <BinOp fromlineno="273" tolineno="273" lineno="273" op="%" left="'&quot;%s.%s&quot; -&gt; &quot;%s.%s&quot;'" right="(pn, rq.runq_task[task], deppn, rq.runq_task[dep])">
                  <Const fromlineno="273" tolineno="273" lineno="273" type="str">'"%s.%s" -&gt; "%s.%s"'</Const>
                  <Tuple fromlineno="273" tolineno="273" lineno="273">
                    <Name fromlineno="273" tolineno="273" lineno="273" name="pn"/>
                    <Subscript fromlineno="273" tolineno="273" lineno="273">
                      <Getattr fromlineno="273" tolineno="273" lineno="273" attrname="runq_task" expr="rq">
                        <Name fromlineno="273" tolineno="273" lineno="273" name="rq"/>
                      </Getattr>
                      <Index fromlineno="273" tolineno="273" lineno="None">
                        <Name fromlineno="273" tolineno="273" lineno="273" name="task"/>
                      </Index>
                    </Subscript>
                    <Name fromlineno="273" tolineno="273" lineno="273" name="deppn"/>
                    <Subscript fromlineno="273" tolineno="273" lineno="273">
                      <Getattr fromlineno="273" tolineno="273" lineno="273" attrname="runq_task" expr="rq">
                        <Name fromlineno="273" tolineno="273" lineno="273" name="rq"/>
                      </Getattr>
                      <Index fromlineno="273" tolineno="273" lineno="None">
                        <Name fromlineno="273" tolineno="273" lineno="273" name="dep"/>
                      </Index>
                    </Subscript>
                  </Tuple>
                </BinOp>
              </Print>
            </For>
            <If fromlineno="274" tolineno="295" lineno="274">
              <Compare fromlineno="274" tolineno="274" lineno="274" op="('not in', &lt;Name(seen_fnids) l.274 [bb.cooker] at Ox9ca0ecc&gt;)">
                <Name fromlineno="274" tolineno="274" lineno="274" name="fnid"/>
                <Name fromlineno="274" tolineno="274" lineno="274" name="seen_fnids"/>
              </Compare>
              <Discard fromlineno="275" tolineno="275" lineno="275">
                <CallFunc fromlineno="275" tolineno="275" lineno="275" func="Getattr(append)">
                  <Getattr fromlineno="275" tolineno="275" lineno="275" attrname="append" expr="seen_fnids">
                    <Name fromlineno="275" tolineno="275" lineno="275" name="seen_fnids"/>
                  </Getattr>
                  <Name fromlineno="275" tolineno="275" lineno="275" name="fnid"/>
                </CallFunc>
              </Discard>
              <Assign fromlineno="276" tolineno="276" lineno="276" targets="[&lt;AssName(packages) l.276 [bb.cooker] at Ox9ca504c&gt;]" value="[]">
                <AssName fromlineno="276" tolineno="276" lineno="276" name="packages"/>
                <List fromlineno="276" tolineno="276" lineno="276"/>
              </Assign>
              <Print fromlineno="277" tolineno="277" lineno="277">
                <Name fromlineno="277" tolineno="277" lineno="277" name="depends_file"/>
                <BinOp fromlineno="277" tolineno="277" lineno="277" op="%" left="'&quot;%s&quot; [label=&quot;%s %s\\n%s&quot;]'" right="(pn, pn, version, fn)">
                  <Const fromlineno="277" tolineno="277" lineno="277" type="str">'"%s" [label="%s %s\\n%s"]'</Const>
                  <Tuple fromlineno="277" tolineno="277" lineno="277">
                    <Name fromlineno="277" tolineno="277" lineno="277" name="pn"/>
                    <Name fromlineno="277" tolineno="277" lineno="277" name="pn"/>
                    <Name fromlineno="277" tolineno="277" lineno="277" name="version"/>
                    <Name fromlineno="277" tolineno="277" lineno="277" name="fn"/>
                  </Tuple>
                </BinOp>
              </Print>
              <For fromlineno="278" tolineno="279" lineno="278">
                <AssName fromlineno="278" tolineno="278" lineno="278" name="depend"/>
                <Subscript fromlineno="278" tolineno="278" lineno="278">
                  <Getattr fromlineno="278" tolineno="278" lineno="278" attrname="deps" expr="self.status">
                    <Getattr fromlineno="278" tolineno="278" lineno="278" attrname="status" expr="self">
                      <Name fromlineno="278" tolineno="278" lineno="278" name="self"/>
                    </Getattr>
                  </Getattr>
                  <Index fromlineno="278" tolineno="278" lineno="None">
                    <Name fromlineno="278" tolineno="278" lineno="278" name="fn"/>
                  </Index>
                </Subscript>
                <Print fromlineno="279" tolineno="279" lineno="279">
                  <Name fromlineno="279" tolineno="279" lineno="279" name="depends_file"/>
                  <BinOp fromlineno="279" tolineno="279" lineno="279" op="%" left="'&quot;%s&quot; -&gt; &quot;%s&quot;'" right="(pn, depend)">
                    <Const fromlineno="279" tolineno="279" lineno="279" type="str">'"%s" -&gt; "%s"'</Const>
                    <Tuple fromlineno="279" tolineno="279" lineno="279">
                      <Name fromlineno="279" tolineno="279" lineno="279" name="pn"/>
                      <Name fromlineno="279" tolineno="279" lineno="279" name="depend"/>
                    </Tuple>
                  </BinOp>
                </Print>
              </For>
              <Assign fromlineno="280" tolineno="280" lineno="280" targets="[&lt;AssName(rdepends) l.280 [bb.cooker] at Ox9ca54ec&gt;]" value="self.status.rundeps[fn]">
                <AssName fromlineno="280" tolineno="280" lineno="280" name="rdepends"/>
                <Subscript fromlineno="280" tolineno="280" lineno="280">
                  <Getattr fromlineno="280" tolineno="280" lineno="280" attrname="rundeps" expr="self.status">
                    <Getattr fromlineno="280" tolineno="280" lineno="280" attrname="status" expr="self">
                      <Name fromlineno="280" tolineno="280" lineno="280" name="self"/>
                    </Getattr>
                  </Getattr>
                  <Index fromlineno="280" tolineno="280" lineno="None">
                    <Name fromlineno="280" tolineno="280" lineno="280" name="fn"/>
                  </Index>
                </Subscript>
              </Assign>
              <For fromlineno="281" tolineno="284" lineno="281">
                <AssName fromlineno="281" tolineno="281" lineno="281" name="package"/>
                <Name fromlineno="281" tolineno="281" lineno="281" name="rdepends"/>
                <For fromlineno="282" tolineno="283" lineno="282">
                  <AssName fromlineno="282" tolineno="282" lineno="282" name="rdepend"/>
                  <CallFunc fromlineno="282" tolineno="282" lineno="282" func="Getattr(findall)">
                    <Getattr fromlineno="282" tolineno="282" lineno="282" attrname="findall" expr="re">
                      <Name fromlineno="282" tolineno="282" lineno="282" name="re"/>
                    </Getattr>
                    <Const fromlineno="282" tolineno="282" lineno="282" type="str">'([\\w.-]+)(\\ \\(.+\\))?'</Const>
                    <Subscript fromlineno="282" tolineno="282" lineno="282">
                      <Name fromlineno="282" tolineno="282" lineno="282" name="rdepends"/>
                      <Index fromlineno="282" tolineno="282" lineno="None">
                        <Name fromlineno="282" tolineno="282" lineno="282" name="package"/>
                      </Index>
                    </Subscript>
                  </CallFunc>
                  <Print fromlineno="283" tolineno="283" lineno="283">
                    <Name fromlineno="283" tolineno="283" lineno="283" name="depends_file"/>
                    <BinOp fromlineno="283" tolineno="283" lineno="283" op="%" left="'&quot;%s&quot; -&gt; &quot;%s%s&quot; [style=dashed]'" right="(package, rdepend[0], rdepend[1])">
                      <Const fromlineno="283" tolineno="283" lineno="283" type="str">'"%s" -&gt; "%s%s" [style=dashed]'</Const>
                      <Tuple fromlineno="283" tolineno="283" lineno="283">
                        <Name fromlineno="283" tolineno="283" lineno="283" name="package"/>
                        <Subscript fromlineno="283" tolineno="283" lineno="283">
                          <Name fromlineno="283" tolineno="283" lineno="283" name="rdepend"/>
                          <Index fromlineno="283" tolineno="283" lineno="None">
                            <Const fromlineno="283" tolineno="283" lineno="283" type="int">0</Const>
                          </Index>
                        </Subscript>
                        <Subscript fromlineno="283" tolineno="283" lineno="283">
                          <Name fromlineno="283" tolineno="283" lineno="283" name="rdepend"/>
                          <Index fromlineno="283" tolineno="283" lineno="None">
                            <Const fromlineno="283" tolineno="283" lineno="283" type="int">1</Const>
                          </Index>
                        </Subscript>
                      </Tuple>
                    </BinOp>
                  </Print>
                </For>
                <Discard fromlineno="284" tolineno="284" lineno="284">
                  <CallFunc fromlineno="284" tolineno="284" lineno="284" func="Getattr(append)">
                    <Getattr fromlineno="284" tolineno="284" lineno="284" attrname="append" expr="packages">
                      <Name fromlineno="284" tolineno="284" lineno="284" name="packages"/>
                    </Getattr>
                    <Name fromlineno="284" tolineno="284" lineno="284" name="package"/>
                  </CallFunc>
                </Discard>
              </For>
              <Assign fromlineno="285" tolineno="285" lineno="285" targets="[&lt;AssName(rrecs) l.285 [bb.cooker] at Ox9ca5b6c&gt;]" value="self.status.runrecs[fn]">
                <AssName fromlineno="285" tolineno="285" lineno="285" name="rrecs"/>
                <Subscript fromlineno="285" tolineno="285" lineno="285">
                  <Getattr fromlineno="285" tolineno="285" lineno="285" attrname="runrecs" expr="self.status">
                    <Getattr fromlineno="285" tolineno="285" lineno="285" attrname="status" expr="self">
                      <Name fromlineno="285" tolineno="285" lineno="285" name="self"/>
                    </Getattr>
                  </Getattr>
                  <Index fromlineno="285" tolineno="285" lineno="None">
                    <Name fromlineno="285" tolineno="285" lineno="285" name="fn"/>
                  </Index>
                </Subscript>
              </Assign>
              <For fromlineno="286" tolineno="290" lineno="286">
                <AssName fromlineno="286" tolineno="286" lineno="286" name="package"/>
                <Name fromlineno="286" tolineno="286" lineno="286" name="rrecs"/>
                <For fromlineno="287" tolineno="288" lineno="287">
                  <AssName fromlineno="287" tolineno="287" lineno="287" name="rdepend"/>
                  <CallFunc fromlineno="287" tolineno="287" lineno="287" func="Getattr(findall)">
                    <Getattr fromlineno="287" tolineno="287" lineno="287" attrname="findall" expr="re">
                      <Name fromlineno="287" tolineno="287" lineno="287" name="re"/>
                    </Getattr>
                    <Const fromlineno="287" tolineno="287" lineno="287" type="str">'([\\w.-]+)(\\ \\(.+\\))?'</Const>
                    <Subscript fromlineno="287" tolineno="287" lineno="287">
                      <Name fromlineno="287" tolineno="287" lineno="287" name="rrecs"/>
                      <Index fromlineno="287" tolineno="287" lineno="None">
                        <Name fromlineno="287" tolineno="287" lineno="287" name="package"/>
                      </Index>
                    </Subscript>
                  </CallFunc>
                  <Print fromlineno="288" tolineno="288" lineno="288">
                    <Name fromlineno="288" tolineno="288" lineno="288" name="depends_file"/>
                    <BinOp fromlineno="288" tolineno="288" lineno="288" op="%" left="'&quot;%s&quot; -&gt; &quot;%s%s&quot; [style=dashed]'" right="(package, rdepend[0], rdepend[1])">
                      <Const fromlineno="288" tolineno="288" lineno="288" type="str">'"%s" -&gt; "%s%s" [style=dashed]'</Const>
                      <Tuple fromlineno="288" tolineno="288" lineno="288">
                        <Name fromlineno="288" tolineno="288" lineno="288" name="package"/>
                        <Subscript fromlineno="288" tolineno="288" lineno="288">
                          <Name fromlineno="288" tolineno="288" lineno="288" name="rdepend"/>
                          <Index fromlineno="288" tolineno="288" lineno="None">
                            <Const fromlineno="288" tolineno="288" lineno="288" type="int">0</Const>
                          </Index>
                        </Subscript>
                        <Subscript fromlineno="288" tolineno="288" lineno="288">
                          <Name fromlineno="288" tolineno="288" lineno="288" name="rdepend"/>
                          <Index fromlineno="288" tolineno="288" lineno="None">
                            <Const fromlineno="288" tolineno="288" lineno="288" type="int">1</Const>
                          </Index>
                        </Subscript>
                      </Tuple>
                    </BinOp>
                  </Print>
                </For>
                <If fromlineno="289" tolineno="290" lineno="289">
                  <UnaryOp fromlineno="289" tolineno="289" lineno="289">
                    <Compare fromlineno="289" tolineno="289" lineno="289" op="('in', &lt;Name(packages) l.289 [bb.cooker] at Ox9ca91ac&gt;)">
                      <Name fromlineno="289" tolineno="289" lineno="289" name="package"/>
                      <Name fromlineno="289" tolineno="289" lineno="289" name="packages"/>
                    </Compare>
                  </UnaryOp>
                  <Discard fromlineno="290" tolineno="290" lineno="290">
                    <CallFunc fromlineno="290" tolineno="290" lineno="290" func="Getattr(append)">
                      <Getattr fromlineno="290" tolineno="290" lineno="290" attrname="append" expr="packages">
                        <Name fromlineno="290" tolineno="290" lineno="290" name="packages"/>
                      </Getattr>
                      <Name fromlineno="290" tolineno="290" lineno="290" name="package"/>
                    </CallFunc>
                  </Discard>
                </If>
              </For>
              <For fromlineno="291" tolineno="295" lineno="291">
                <AssName fromlineno="291" tolineno="291" lineno="291" name="package"/>
                <Name fromlineno="291" tolineno="291" lineno="291" name="packages"/>
                <If fromlineno="292" tolineno="295" lineno="292">
                  <Compare fromlineno="292" tolineno="292" lineno="292" op="('!=', &lt;Name(pn) l.292 [bb.cooker] at Ox9ca940c&gt;)">
                    <Name fromlineno="292" tolineno="292" lineno="292" name="package"/>
                    <Name fromlineno="292" tolineno="292" lineno="292" name="pn"/>
                  </Compare>
                  <Print fromlineno="293" tolineno="293" lineno="293">
                    <Name fromlineno="293" tolineno="293" lineno="293" name="depends_file"/>
                    <BinOp fromlineno="293" tolineno="293" lineno="293" op="%" left="'&quot;%s&quot; [label=&quot;%s(%s) %s\\n%s&quot;]'" right="(package, package, pn, version, fn)">
                      <Const fromlineno="293" tolineno="293" lineno="293" type="str">'"%s" [label="%s(%s) %s\\n%s"]'</Const>
                      <Tuple fromlineno="293" tolineno="293" lineno="293">
                        <Name fromlineno="293" tolineno="293" lineno="293" name="package"/>
                        <Name fromlineno="293" tolineno="293" lineno="293" name="package"/>
                        <Name fromlineno="293" tolineno="293" lineno="293" name="pn"/>
                        <Name fromlineno="293" tolineno="293" lineno="293" name="version"/>
                        <Name fromlineno="293" tolineno="293" lineno="293" name="fn"/>
                      </Tuple>
                    </BinOp>
                  </Print>
                  <For fromlineno="294" tolineno="295" lineno="294">
                    <AssName fromlineno="294" tolineno="294" lineno="294" name="depend"/>
                    <Subscript fromlineno="294" tolineno="294" lineno="294">
                      <Getattr fromlineno="294" tolineno="294" lineno="294" attrname="deps" expr="self.status">
                        <Getattr fromlineno="294" tolineno="294" lineno="294" attrname="status" expr="self">
                          <Name fromlineno="294" tolineno="294" lineno="294" name="self"/>
                        </Getattr>
                      </Getattr>
                      <Index fromlineno="294" tolineno="294" lineno="None">
                        <Name fromlineno="294" tolineno="294" lineno="294" name="fn"/>
                      </Index>
                    </Subscript>
                    <Print fromlineno="295" tolineno="295" lineno="295">
                      <Name fromlineno="295" tolineno="295" lineno="295" name="depends_file"/>
                      <BinOp fromlineno="295" tolineno="295" lineno="295" op="%" left="'&quot;%s&quot; -&gt; &quot;%s&quot;'" right="(package, depend)">
                        <Const fromlineno="295" tolineno="295" lineno="295" type="str">'"%s" -&gt; "%s"'</Const>
                        <Tuple fromlineno="295" tolineno="295" lineno="295">
                          <Name fromlineno="295" tolineno="295" lineno="295" name="package"/>
                          <Name fromlineno="295" tolineno="295" lineno="295" name="depend"/>
                        </Tuple>
                      </BinOp>
                    </Print>
                  </For>
                </If>
              </For>
            </If>
          </For>
          <Print fromlineno="302" tolineno="302" lineno="302">
            <Name fromlineno="302" tolineno="302" lineno="302" name="depends_file"/>
            <Const fromlineno="302" tolineno="302" lineno="302" type="str">'}'</Const>
          </Print>
          <Print fromlineno="303" tolineno="303" lineno="303">
            <Name fromlineno="303" tolineno="303" lineno="303" name="tdepends_file"/>
            <Const fromlineno="303" tolineno="303" lineno="303" type="str">'}'</Const>
          </Print>
          <Discard fromlineno="304" tolineno="304" lineno="304">
            <CallFunc fromlineno="304" tolineno="304" lineno="304" func="Getattr(note)">
              <Getattr fromlineno="304" tolineno="304" lineno="304" attrname="note" expr="bb.msg">
                <Getattr fromlineno="304" tolineno="304" lineno="304" attrname="msg" expr="bb">
                  <Name fromlineno="304" tolineno="304" lineno="304" name="bb"/>
                </Getattr>
              </Getattr>
              <Const fromlineno="304" tolineno="304" lineno="304" type="int">1</Const>
              <Getattr fromlineno="304" tolineno="304" lineno="304" attrname="Collection" expr="bb.msg.domain">
                <Getattr fromlineno="304" tolineno="304" lineno="304" attrname="domain" expr="bb.msg">
                  <Getattr fromlineno="304" tolineno="304" lineno="304" attrname="msg" expr="bb">
                    <Name fromlineno="304" tolineno="304" lineno="304" name="bb"/>
                  </Getattr>
                </Getattr>
              </Getattr>
              <Const fromlineno="304" tolineno="304" lineno="304" type="str">"Dependencies saved to 'depends.dot'"</Const>
            </CallFunc>
          </Discard>
          <Discard fromlineno="305" tolineno="305" lineno="305">
            <CallFunc fromlineno="305" tolineno="305" lineno="305" func="Getattr(note)">
              <Getattr fromlineno="305" tolineno="305" lineno="305" attrname="note" expr="bb.msg">
                <Getattr fromlineno="305" tolineno="305" lineno="305" attrname="msg" expr="bb">
                  <Name fromlineno="305" tolineno="305" lineno="305" name="bb"/>
                </Getattr>
              </Getattr>
              <Const fromlineno="305" tolineno="305" lineno="305" type="int">1</Const>
              <Getattr fromlineno="305" tolineno="305" lineno="305" attrname="Collection" expr="bb.msg.domain">
                <Getattr fromlineno="305" tolineno="305" lineno="305" attrname="domain" expr="bb.msg">
                  <Getattr fromlineno="305" tolineno="305" lineno="305" attrname="msg" expr="bb">
                    <Name fromlineno="305" tolineno="305" lineno="305" name="bb"/>
                  </Getattr>
                </Getattr>
              </Getattr>
              <Const fromlineno="305" tolineno="305" lineno="305" type="str">"Task dependencies saved to 'task-depends.dot'"</Const>
            </CallFunc>
          </Discard>
        </Function>
        <Function fromlineno="307" tolineno="334" lineno="307">
          <Arguments fromlineno="307" tolineno="307" lineno="None" format_args="self">
            <AssName fromlineno="307" tolineno="307" lineno="307" name="self"/>
          </Arguments>
          <Assign fromlineno="308" tolineno="308" lineno="308" targets="[&lt;AssName(all_depends) l.308 [bb.cooker] at Ox9ca9d6c&gt;]" value="self.status.all_depends">
            <AssName fromlineno="308" tolineno="308" lineno="308" name="all_depends"/>
            <Getattr fromlineno="308" tolineno="308" lineno="308" attrname="all_depends" expr="self.status">
              <Getattr fromlineno="308" tolineno="308" lineno="308" attrname="status" expr="self">
                <Name fromlineno="308" tolineno="308" lineno="308" name="self"/>
              </Getattr>
            </Getattr>
          </Assign>
          <Assign fromlineno="309" tolineno="309" lineno="309" targets="[&lt;AssName(pn_provides) l.309 [bb.cooker] at Ox9ca9e4c&gt;]" value="self.status.pn_provides">
            <AssName fromlineno="309" tolineno="309" lineno="309" name="pn_provides"/>
            <Getattr fromlineno="309" tolineno="309" lineno="309" attrname="pn_provides" expr="self.status">
              <Getattr fromlineno="309" tolineno="309" lineno="309" attrname="status" expr="self">
                <Name fromlineno="309" tolineno="309" lineno="309" name="self"/>
              </Getattr>
            </Getattr>
          </Assign>
          <Assign fromlineno="311" tolineno="311" lineno="311" targets="[&lt;AssName(localdata) l.311 [bb.cooker] at Ox9ca9f2c&gt;]" value="data.createCopy(self.configuration.data)">
            <AssName fromlineno="311" tolineno="311" lineno="311" name="localdata"/>
            <CallFunc fromlineno="311" tolineno="311" lineno="311" func="Getattr(createCopy)">
              <Getattr fromlineno="311" tolineno="311" lineno="311" attrname="createCopy" expr="data">
                <Name fromlineno="311" tolineno="311" lineno="311" name="data"/>
              </Getattr>
              <Getattr fromlineno="311" tolineno="311" lineno="311" attrname="data" expr="self.configuration">
                <Getattr fromlineno="311" tolineno="311" lineno="311" attrname="configuration" expr="self">
                  <Name fromlineno="311" tolineno="311" lineno="311" name="self"/>
                </Getattr>
              </Getattr>
            </CallFunc>
          </Assign>
          <Discard fromlineno="312" tolineno="312" lineno="312">
            <CallFunc fromlineno="312" tolineno="312" lineno="312" func="Getattr(update_data)">
              <Getattr fromlineno="312" tolineno="312" lineno="312" attrname="update_data" expr="bb.data">
                <Getattr fromlineno="312" tolineno="312" lineno="312" attrname="data" expr="bb">
                  <Name fromlineno="312" tolineno="312" lineno="312" name="bb"/>
                </Getattr>
              </Getattr>
              <Name fromlineno="312" tolineno="312" lineno="312" name="localdata"/>
            </CallFunc>
          </Discard>
          <Discard fromlineno="313" tolineno="313" lineno="313">
            <CallFunc fromlineno="313" tolineno="313" lineno="313" func="Getattr(expandKeys)">
              <Getattr fromlineno="313" tolineno="313" lineno="313" attrname="expandKeys" expr="bb.data">
                <Getattr fromlineno="313" tolineno="313" lineno="313" attrname="data" expr="bb">
                  <Name fromlineno="313" tolineno="313" lineno="313" name="bb"/>
                </Getattr>
              </Getattr>
              <Name fromlineno="313" tolineno="313" lineno="313" name="localdata"/>
            </CallFunc>
          </Discard>
          <Function fromlineno="315" tolineno="319" lineno="315">
            <Arguments fromlineno="315" tolineno="315" lineno="None" format_args="filename">
              <AssName fromlineno="315" tolineno="315" lineno="315" name="filename"/>
            </Arguments>
            <For fromlineno="316" tolineno="318" lineno="316">
              <Tuple fromlineno="316" tolineno="316" lineno="316">
                <AssName fromlineno="316" tolineno="316" lineno="316" name="regex"/>
                <AssName fromlineno="316" tolineno="316" lineno="316" name="pri"/>
              </Tuple>
              <Getattr fromlineno="316" tolineno="316" lineno="316" attrname="bbfile_config_priorities" expr="self.status">
                <Getattr fromlineno="316" tolineno="316" lineno="316" attrname="status" expr="self">
                  <Name fromlineno="316" tolineno="316" lineno="316" name="self"/>
                </Getattr>
              </Getattr>
              <If fromlineno="317" tolineno="318" lineno="317">
                <CallFunc fromlineno="317" tolineno="317" lineno="317" func="Getattr(match)">
                  <Getattr fromlineno="317" tolineno="317" lineno="317" attrname="match" expr="regex">
                    <Name fromlineno="317" tolineno="317" lineno="317" name="regex"/>
                  </Getattr>
                  <Name fromlineno="317" tolineno="317" lineno="317" name="filename"/>
                </CallFunc>
                <Return fromlineno="318" tolineno="318" lineno="318">
                  <Name fromlineno="318" tolineno="318" lineno="318" name="pri"/>
                </Return>
              </If>
            </For>
            <Return fromlineno="319" tolineno="319" lineno="319">
              <Const fromlineno="319" tolineno="319" lineno="319" type="int">0</Const>
            </Return>
          </Function>
          <For fromlineno="322" tolineno="330" lineno="322">
            <AssName fromlineno="322" tolineno="322" lineno="322" name="p"/>
            <CallFunc fromlineno="322" tolineno="322" lineno="322" func="Getattr(split)">
              <Getattr fromlineno="322" tolineno="322" lineno="322" attrname="split" expr="(bb.data.getVar('PREFERRED_PROVIDERS', localdata, 1)) or ('')">
                <BoolOp fromlineno="322" tolineno="322" lineno="322" op="or" values="bb.data.getVar('PREFERRED_PROVIDERS', localdata, 1),'',">
                  <CallFunc fromlineno="322" tolineno="322" lineno="322" func="Getattr(getVar)">
                    <Getattr fromlineno="322" tolineno="322" lineno="322" attrname="getVar" expr="bb.data">
                      <Getattr fromlineno="322" tolineno="322" lineno="322" attrname="data" expr="bb">
                        <Name fromlineno="322" tolineno="322" lineno="322" name="bb"/>
                      </Getattr>
                    </Getattr>
                    <Const fromlineno="322" tolineno="322" lineno="322" type="str">'PREFERRED_PROVIDERS'</Const>
                    <Name fromlineno="322" tolineno="322" lineno="322" name="localdata"/>
                    <Const fromlineno="322" tolineno="322" lineno="322" type="int">1</Const>
                  </CallFunc>
                  <Const fromlineno="322" tolineno="322" lineno="322" type="str">''</Const>
                </BoolOp>
              </Getattr>
            </CallFunc>
            <TryExcept fromlineno="323" tolineno="327" lineno="323">
              <Assign fromlineno="324" tolineno="324" lineno="324" targets="[&lt;Tuple(tuple) l.324 [bb.cooker] at Ox9cad92c&gt;]" value="p.split(':')">
                <Tuple fromlineno="324" tolineno="324" lineno="324">
                  <AssName fromlineno="324" tolineno="324" lineno="324" name="providee"/>
                  <AssName fromlineno="324" tolineno="324" lineno="324" name="provider"/>
                </Tuple>
                <CallFunc fromlineno="324" tolineno="324" lineno="324" func="Getattr(split)">
                  <Getattr fromlineno="324" tolineno="324" lineno="324" attrname="split" expr="p">
                    <Name fromlineno="324" tolineno="324" lineno="324" name="p"/>
                  </Getattr>
                  <Const fromlineno="324" tolineno="324" lineno="324" type="str">':'</Const>
                </CallFunc>
              </Assign>
              <ExceptHandler fromlineno="325" tolineno="327" lineno="325">
                <Discard fromlineno="326" tolineno="326" lineno="326">
                  <CallFunc fromlineno="326" tolineno="326" lineno="326" func="Getattr(error)">
                    <Getattr fromlineno="326" tolineno="326" lineno="326" attrname="error" expr="bb.msg">
                      <Getattr fromlineno="326" tolineno="326" lineno="326" attrname="msg" expr="bb">
                        <Name fromlineno="326" tolineno="326" lineno="326" name="bb"/>
                      </Getattr>
                    </Getattr>
                    <Getattr fromlineno="326" tolineno="326" lineno="326" attrname="Provider" expr="bb.msg.domain">
                      <Getattr fromlineno="326" tolineno="326" lineno="326" attrname="domain" expr="bb.msg">
                        <Getattr fromlineno="326" tolineno="326" lineno="326" attrname="msg" expr="bb">
                          <Name fromlineno="326" tolineno="326" lineno="326" name="bb"/>
                        </Getattr>
                      </Getattr>
                    </Getattr>
                    <BinOp fromlineno="326" tolineno="326" lineno="326" op="%" left="'Malformed option in PREFERRED_PROVIDERS variable: %s'" right="p">
                      <Const fromlineno="326" tolineno="326" lineno="326" type="str">'Malformed option in PREFERRED_PROVIDERS variable: %s'</Const>
                      <Name fromlineno="326" tolineno="326" lineno="326" name="p"/>
                    </BinOp>
                  </CallFunc>
                </Discard>
                <Continue fromlineno="327" tolineno="327" lineno="327"/>
              </ExceptHandler>
            </TryExcept>
            <If fromlineno="328" tolineno="329" lineno="328">
              <BoolOp fromlineno="328" tolineno="328" lineno="328" op="and" values="providee in self.status.preferred,self.status.preferred[providee] != provider,">
                <Compare fromlineno="328" tolineno="328" lineno="328" op="('in', &lt;Getattr(preferred) l.328 [bb.cooker] at Ox9caddac&gt;)">
                  <Name fromlineno="328" tolineno="328" lineno="328" name="providee"/>
                  <Getattr fromlineno="328" tolineno="328" lineno="328" attrname="preferred" expr="self.status">
                    <Getattr fromlineno="328" tolineno="328" lineno="328" attrname="status" expr="self">
                      <Name fromlineno="328" tolineno="328" lineno="328" name="self"/>
                    </Getattr>
                  </Getattr>
                </Compare>
                <Compare fromlineno="328" tolineno="328" lineno="328" op="('!=', &lt;Name(provider) l.328 [bb.cooker] at Ox9cadf2c&gt;)">
                  <Subscript fromlineno="328" tolineno="328" lineno="328">
                    <Getattr fromlineno="328" tolineno="328" lineno="328" attrname="preferred" expr="self.status">
                      <Getattr fromlineno="328" tolineno="328" lineno="328" attrname="status" expr="self">
                        <Name fromlineno="328" tolineno="328" lineno="328" name="self"/>
                      </Getattr>
                    </Getattr>
                    <Index fromlineno="328" tolineno="328" lineno="None">
                      <Name fromlineno="328" tolineno="328" lineno="328" name="providee"/>
                    </Index>
                  </Subscript>
                  <Name fromlineno="328" tolineno="328" lineno="328" name="provider"/>
                </Compare>
              </BoolOp>
              <Discard fromlineno="329" tolineno="329" lineno="329">
                <CallFunc fromlineno="329" tolineno="329" lineno="329" func="Getattr(error)">
                  <Getattr fromlineno="329" tolineno="329" lineno="329" attrname="error" expr="bb.msg">
                    <Getattr fromlineno="329" tolineno="329" lineno="329" attrname="msg" expr="bb">
                      <Name fromlineno="329" tolineno="329" lineno="329" name="bb"/>
                    </Getattr>
                  </Getattr>
                  <Getattr fromlineno="329" tolineno="329" lineno="329" attrname="Provider" expr="bb.msg.domain">
                    <Getattr fromlineno="329" tolineno="329" lineno="329" attrname="domain" expr="bb.msg">
                      <Getattr fromlineno="329" tolineno="329" lineno="329" attrname="msg" expr="bb">
                        <Name fromlineno="329" tolineno="329" lineno="329" name="bb"/>
                      </Getattr>
                    </Getattr>
                  </Getattr>
                  <BinOp fromlineno="329" tolineno="329" lineno="329" op="%" left="'conflicting preferences for %s: both %s and %s specified'" right="(providee, provider, self.status.preferred[providee])">
                    <Const fromlineno="329" tolineno="329" lineno="329" type="str">'conflicting preferences for %s: both %s and %s specified'</Const>
                    <Tuple fromlineno="329" tolineno="329" lineno="329">
                      <Name fromlineno="329" tolineno="329" lineno="329" name="providee"/>
                      <Name fromlineno="329" tolineno="329" lineno="329" name="provider"/>
                      <Subscript fromlineno="329" tolineno="329" lineno="329">
                        <Getattr fromlineno="329" tolineno="329" lineno="329" attrname="preferred" expr="self.status">
                          <Getattr fromlineno="329" tolineno="329" lineno="329" attrname="status" expr="self">
                            <Name fromlineno="329" tolineno="329" lineno="329" name="self"/>
                          </Getattr>
                        </Getattr>
                        <Index fromlineno="329" tolineno="329" lineno="None">
                          <Name fromlineno="329" tolineno="329" lineno="329" name="providee"/>
                        </Index>
                      </Subscript>
                    </Tuple>
                  </BinOp>
                </CallFunc>
              </Discard>
            </If>
            <Assign fromlineno="330" tolineno="330" lineno="330" targets="[&lt;Subscript() l.330 [bb.cooker] at Ox9cb228c&gt;]" value="provider">
              <Subscript fromlineno="330" tolineno="330" lineno="330">
                <Getattr fromlineno="330" tolineno="330" lineno="330" attrname="preferred" expr="self.status">
                  <Getattr fromlineno="330" tolineno="330" lineno="330" attrname="status" expr="self">
                    <Name fromlineno="330" tolineno="330" lineno="330" name="self"/>
                  </Getattr>
                </Getattr>
                <Index fromlineno="330" tolineno="330" lineno="None">
                  <Name fromlineno="330" tolineno="330" lineno="330" name="providee"/>
                </Index>
              </Subscript>
              <Name fromlineno="330" tolineno="330" lineno="330" name="provider"/>
            </Assign>
          </For>
          <For fromlineno="333" tolineno="334" lineno="333">
            <AssName fromlineno="333" tolineno="333" lineno="333" name="p"/>
            <CallFunc fromlineno="333" tolineno="333" lineno="333" func="Getattr(keys)">
              <Getattr fromlineno="333" tolineno="333" lineno="333" attrname="keys" expr="self.status.pkg_fn">
                <Getattr fromlineno="333" tolineno="333" lineno="333" attrname="pkg_fn" expr="self.status">
                  <Getattr fromlineno="333" tolineno="333" lineno="333" attrname="status" expr="self">
                    <Name fromlineno="333" tolineno="333" lineno="333" name="self"/>
                  </Getattr>
                </Getattr>
              </Getattr>
            </CallFunc>
            <Assign fromlineno="334" tolineno="334" lineno="334" targets="[&lt;Subscript() l.334 [bb.cooker] at Ox9cb24ec&gt;]" value="calc_bbfile_priority(p)">
              <Subscript fromlineno="334" tolineno="334" lineno="334">
                <Getattr fromlineno="334" tolineno="334" lineno="334" attrname="bbfile_priority" expr="self.status">
                  <Getattr fromlineno="334" tolineno="334" lineno="334" attrname="status" expr="self">
                    <Name fromlineno="334" tolineno="334" lineno="334" name="self"/>
                  </Getattr>
                </Getattr>
                <Index fromlineno="334" tolineno="334" lineno="None">
                  <Name fromlineno="334" tolineno="334" lineno="334" name="p"/>
                </Index>
              </Subscript>
              <CallFunc fromlineno="334" tolineno="334" lineno="334" func="Name(calc_bbfile_priority)">
                <Name fromlineno="334" tolineno="334" lineno="334" name="calc_bbfile_priority"/>
                <Name fromlineno="334" tolineno="334" lineno="334" name="p"/>
              </CallFunc>
            </Assign>
          </For>
        </Function>
        <Function fromlineno="336" tolineno="362" lineno="336">
          <Arguments fromlineno="336" tolineno="336" lineno="None" format_args="self">
            <AssName fromlineno="336" tolineno="336" lineno="336" name="self"/>
          </Arguments>
          <Assign fromlineno="340" tolineno="340" lineno="340" targets="[&lt;AssName(all_depends) l.340 [bb.cooker] at Ox9cb272c&gt;]" value="self.status.all_depends">
            <AssName fromlineno="340" tolineno="340" lineno="340" name="all_depends"/>
            <Getattr fromlineno="340" tolineno="340" lineno="340" attrname="all_depends" expr="self.status">
              <Getattr fromlineno="340" tolineno="340" lineno="340" attrname="status" expr="self">
                <Name fromlineno="340" tolineno="340" lineno="340" name="self"/>
              </Getattr>
            </Getattr>
          </Assign>
          <Assign fromlineno="341" tolineno="341" lineno="341" targets="[&lt;AssName(pn_provides) l.341 [bb.cooker] at Ox9cb280c&gt;]" value="self.status.pn_provides">
            <AssName fromlineno="341" tolineno="341" lineno="341" name="pn_provides"/>
            <Getattr fromlineno="341" tolineno="341" lineno="341" attrname="pn_provides" expr="self.status">
              <Getattr fromlineno="341" tolineno="341" lineno="341" attrname="status" expr="self">
                <Name fromlineno="341" tolineno="341" lineno="341" name="self"/>
              </Getattr>
            </Getattr>
          </Assign>
          <Discard fromlineno="342" tolineno="342" lineno="342">
            <CallFunc fromlineno="342" tolineno="342" lineno="342" func="Getattr(debug)">
              <Getattr fromlineno="342" tolineno="342" lineno="342" attrname="debug" expr="bb.msg">
                <Getattr fromlineno="342" tolineno="342" lineno="342" attrname="msg" expr="bb">
                  <Name fromlineno="342" tolineno="342" lineno="342" name="bb"/>
                </Getattr>
              </Getattr>
              <Const fromlineno="342" tolineno="342" lineno="342" type="int">1</Const>
              <Getattr fromlineno="342" tolineno="342" lineno="342" attrname="Parsing" expr="bb.msg.domain">
                <Getattr fromlineno="342" tolineno="342" lineno="342" attrname="domain" expr="bb.msg">
                  <Getattr fromlineno="342" tolineno="342" lineno="342" attrname="msg" expr="bb">
                    <Name fromlineno="342" tolineno="342" lineno="342" name="bb"/>
                  </Getattr>
                </Getattr>
              </Getattr>
              <Const fromlineno="342" tolineno="342" lineno="342" type="str">'collating packages for "world"'</Const>
            </CallFunc>
          </Discard>
          <For fromlineno="343" tolineno="362" lineno="343">
            <AssName fromlineno="343" tolineno="343" lineno="343" name="f"/>
            <Getattr fromlineno="343" tolineno="343" lineno="343" attrname="possible_world" expr="self.status">
              <Getattr fromlineno="343" tolineno="343" lineno="343" attrname="status" expr="self">
                <Name fromlineno="343" tolineno="343" lineno="343" name="self"/>
              </Getattr>
            </Getattr>
            <Assign fromlineno="344" tolineno="344" lineno="344" targets="[&lt;AssName(terminal) l.344 [bb.cooker] at Ox9cb2b6c&gt;]" value="True">
              <AssName fromlineno="344" tolineno="344" lineno="344" name="terminal"/>
              <Const fromlineno="344" tolineno="344" lineno="344" type="bool">True</Const>
            </Assign>
            <Assign fromlineno="345" tolineno="345" lineno="345" targets="[&lt;AssName(pn) l.345 [bb.cooker] at Ox9cb2c0c&gt;]" value="self.status.pkg_fn[f]">
              <AssName fromlineno="345" tolineno="345" lineno="345" name="pn"/>
              <Subscript fromlineno="345" tolineno="345" lineno="345">
                <Getattr fromlineno="345" tolineno="345" lineno="345" attrname="pkg_fn" expr="self.status">
                  <Getattr fromlineno="345" tolineno="345" lineno="345" attrname="status" expr="self">
                    <Name fromlineno="345" tolineno="345" lineno="345" name="self"/>
                  </Getattr>
                </Getattr>
                <Index fromlineno="345" tolineno="345" lineno="None">
                  <Name fromlineno="345" tolineno="345" lineno="345" name="f"/>
                </Index>
              </Subscript>
            </Assign>
            <For fromlineno="347" tolineno="356" lineno="347">
              <AssName fromlineno="347" tolineno="347" lineno="347" name="p"/>
              <Subscript fromlineno="347" tolineno="347" lineno="347">
                <Name fromlineno="347" tolineno="347" lineno="347" name="pn_provides"/>
                <Index fromlineno="347" tolineno="347" lineno="None">
                  <Name fromlineno="347" tolineno="347" lineno="347" name="pn"/>
                </Index>
              </Subscript>
              <If fromlineno="348" tolineno="351" lineno="348">
                <CallFunc fromlineno="348" tolineno="348" lineno="348" func="Getattr(startswith)">
                  <Getattr fromlineno="348" tolineno="348" lineno="348" attrname="startswith" expr="p">
                    <Name fromlineno="348" tolineno="348" lineno="348" name="p"/>
                  </Getattr>
                  <Const fromlineno="348" tolineno="348" lineno="348" type="str">'virtual/'</Const>
                </CallFunc>
                <Discard fromlineno="349" tolineno="349" lineno="349">
                  <CallFunc fromlineno="349" tolineno="349" lineno="349" func="Getattr(debug)">
                    <Getattr fromlineno="349" tolineno="349" lineno="349" attrname="debug" expr="bb.msg">
                      <Getattr fromlineno="349" tolineno="349" lineno="349" attrname="msg" expr="bb">
                        <Name fromlineno="349" tolineno="349" lineno="349" name="bb"/>
                      </Getattr>
                    </Getattr>
                    <Const fromlineno="349" tolineno="349" lineno="349" type="int">2</Const>
                    <Getattr fromlineno="349" tolineno="349" lineno="349" attrname="Parsing" expr="bb.msg.domain">
                      <Getattr fromlineno="349" tolineno="349" lineno="349" attrname="domain" expr="bb.msg">
                        <Getattr fromlineno="349" tolineno="349" lineno="349" attrname="msg" expr="bb">
                          <Name fromlineno="349" tolineno="349" lineno="349" name="bb"/>
                        </Getattr>
                      </Getattr>
                    </Getattr>
                    <BinOp fromlineno="349" tolineno="349" lineno="349" op="%" left="'World build skipping %s due to %s provider starting with virtual/'" right="(f, p)">
                      <Const fromlineno="349" tolineno="349" lineno="349" type="str">'World build skipping %s due to %s provider starting with virtual/'</Const>
                      <Tuple fromlineno="349" tolineno="349" lineno="349">
                        <Name fromlineno="349" tolineno="349" lineno="349" name="f"/>
                        <Name fromlineno="349" tolineno="349" lineno="349" name="p"/>
                      </Tuple>
                    </BinOp>
                  </CallFunc>
                </Discard>
                <Assign fromlineno="350" tolineno="350" lineno="350" targets="[&lt;AssName(terminal) l.350 [bb.cooker] at Ox9cb61ac&gt;]" value="False">
                  <AssName fromlineno="350" tolineno="350" lineno="350" name="terminal"/>
                  <Const fromlineno="350" tolineno="350" lineno="350" type="bool">False</Const>
                </Assign>
                <Break fromlineno="351" tolineno="351" lineno="351"/>
              </If>
              <For fromlineno="352" tolineno="356" lineno="352">
                <AssName fromlineno="352" tolineno="352" lineno="352" name="pf"/>
                <Subscript fromlineno="352" tolineno="352" lineno="352">
                  <Getattr fromlineno="352" tolineno="352" lineno="352" attrname="providers" expr="self.status">
                    <Getattr fromlineno="352" tolineno="352" lineno="352" attrname="status" expr="self">
                      <Name fromlineno="352" tolineno="352" lineno="352" name="self"/>
                    </Getattr>
                  </Getattr>
                  <Index fromlineno="352" tolineno="352" lineno="None">
                    <Name fromlineno="352" tolineno="352" lineno="352" name="p"/>
                  </Index>
                </Subscript>
                <If fromlineno="353" tolineno="356" lineno="353">
                  <Compare fromlineno="353" tolineno="353" lineno="353" op="('!=', &lt;Name(pn) l.353 [bb.cooker] at Ox9cb64ac&gt;)">
                    <Subscript fromlineno="353" tolineno="353" lineno="353">
                      <Getattr fromlineno="353" tolineno="353" lineno="353" attrname="pkg_fn" expr="self.status">
                        <Getattr fromlineno="353" tolineno="353" lineno="353" attrname="status" expr="self">
                          <Name fromlineno="353" tolineno="353" lineno="353" name="self"/>
                        </Getattr>
                      </Getattr>
                      <Index fromlineno="353" tolineno="353" lineno="None">
                        <Name fromlineno="353" tolineno="353" lineno="353" name="pf"/>
                      </Index>
                    </Subscript>
                    <Name fromlineno="353" tolineno="353" lineno="353" name="pn"/>
                  </Compare>
                  <Discard fromlineno="354" tolineno="354" lineno="354">
                    <CallFunc fromlineno="354" tolineno="354" lineno="354" func="Getattr(debug)">
                      <Getattr fromlineno="354" tolineno="354" lineno="354" attrname="debug" expr="bb.msg">
                        <Getattr fromlineno="354" tolineno="354" lineno="354" attrname="msg" expr="bb">
                          <Name fromlineno="354" tolineno="354" lineno="354" name="bb"/>
                        </Getattr>
                      </Getattr>
                      <Const fromlineno="354" tolineno="354" lineno="354" type="int">2</Const>
                      <Getattr fromlineno="354" tolineno="354" lineno="354" attrname="Parsing" expr="bb.msg.domain">
                        <Getattr fromlineno="354" tolineno="354" lineno="354" attrname="domain" expr="bb.msg">
                          <Getattr fromlineno="354" tolineno="354" lineno="354" attrname="msg" expr="bb">
                            <Name fromlineno="354" tolineno="354" lineno="354" name="bb"/>
                          </Getattr>
                        </Getattr>
                      </Getattr>
                      <BinOp fromlineno="354" tolineno="354" lineno="354" op="%" left="'World build skipping %s due to both us and %s providing %s'" right="(f, pf, p)">
                        <Const fromlineno="354" tolineno="354" lineno="354" type="str">'World build skipping %s due to both us and %s providing %s'</Const>
                        <Tuple fromlineno="354" tolineno="354" lineno="354">
                          <Name fromlineno="354" tolineno="354" lineno="354" name="f"/>
                          <Name fromlineno="354" tolineno="354" lineno="354" name="pf"/>
                          <Name fromlineno="354" tolineno="354" lineno="354" name="p"/>
                        </Tuple>
                      </BinOp>
                    </CallFunc>
                  </Discard>
                  <Assign fromlineno="355" tolineno="355" lineno="355" targets="[&lt;AssName(terminal) l.355 [bb.cooker] at Ox9cb678c&gt;]" value="False">
                    <AssName fromlineno="355" tolineno="355" lineno="355" name="terminal"/>
                    <Const fromlineno="355" tolineno="355" lineno="355" type="bool">False</Const>
                  </Assign>
                  <Break fromlineno="356" tolineno="356" lineno="356"/>
                </If>
              </For>
            </For>
            <If fromlineno="357" tolineno="358" lineno="357">
              <Name fromlineno="357" tolineno="357" lineno="357" name="terminal"/>
              <Discard fromlineno="358" tolineno="358" lineno="358">
                <CallFunc fromlineno="358" tolineno="358" lineno="358" func="Getattr(add)">
                  <Getattr fromlineno="358" tolineno="358" lineno="358" attrname="add" expr="self.status.world_target">
                    <Getattr fromlineno="358" tolineno="358" lineno="358" attrname="world_target" expr="self.status">
                      <Getattr fromlineno="358" tolineno="358" lineno="358" attrname="status" expr="self">
                        <Name fromlineno="358" tolineno="358" lineno="358" name="self"/>
                      </Getattr>
                    </Getattr>
                  </Getattr>
                  <Name fromlineno="358" tolineno="358" lineno="358" name="pn"/>
                </CallFunc>
              </Discard>
            </If>
            <Assign fromlineno="361" tolineno="361" lineno="361" targets="[&lt;AssAttr(possible_world) l.361 [bb.cooker] at Ox9cb69ac&gt;]" value="None">
              <AssAttr fromlineno="361" tolineno="361" lineno="361" attrname="possible_world" expr="self.status">
                <Getattr fromlineno="361" tolineno="361" lineno="361" attrname="status" expr="self">
                  <Name fromlineno="361" tolineno="361" lineno="361" name="self"/>
                </Getattr>
              </AssAttr>
              <Const fromlineno="361" tolineno="361" lineno="361" type="NoneType">None</Const>
            </Assign>
            <Assign fromlineno="362" tolineno="362" lineno="362" targets="[&lt;AssAttr(all_depends) l.362 [bb.cooker] at Ox9cb6a6c&gt;]" value="None">
              <AssAttr fromlineno="362" tolineno="362" lineno="362" attrname="all_depends" expr="self.status">
                <Getattr fromlineno="362" tolineno="362" lineno="362" attrname="status" expr="self">
                  <Name fromlineno="362" tolineno="362" lineno="362" name="self"/>
                </Getattr>
              </AssAttr>
              <Const fromlineno="362" tolineno="362" lineno="362" type="NoneType">None</Const>
            </Assign>
          </For>
        </Function>
        <Function fromlineno="364" tolineno="375" lineno="364">
          <Arguments fromlineno="364" tolineno="364" lineno="None" format_args="self, x, y, f, from_cache">
            <AssName fromlineno="364" tolineno="364" lineno="364" name="self"/>
            <AssName fromlineno="364" tolineno="364" lineno="364" name="x"/>
            <AssName fromlineno="364" tolineno="364" lineno="364" name="y"/>
            <AssName fromlineno="364" tolineno="364" lineno="364" name="f"/>
            <AssName fromlineno="364" tolineno="364" lineno="364" name="from_cache"/>
          </Arguments>
          <If fromlineno="366" tolineno="375" lineno="366">
            <CallFunc fromlineno="366" tolineno="366" lineno="366" func="Getattr(isatty)">
              <Getattr fromlineno="366" tolineno="366" lineno="366" attrname="isatty" expr="os">
                <Name fromlineno="366" tolineno="366" lineno="366" name="os"/>
              </Getattr>
              <CallFunc fromlineno="366" tolineno="366" lineno="366" func="Getattr(fileno)">
                <Getattr fromlineno="366" tolineno="366" lineno="366" attrname="fileno" expr="sys.stdout">
                  <Getattr fromlineno="366" tolineno="366" lineno="366" attrname="stdout" expr="sys">
                    <Name fromlineno="366" tolineno="366" lineno="366" name="sys"/>
                  </Getattr>
                </Getattr>
              </CallFunc>
            </CallFunc>
            <Discard fromlineno="367" tolineno="367" lineno="367">
              <CallFunc fromlineno="367" tolineno="367" lineno="367" func="Getattr(write)">
                <Getattr fromlineno="367" tolineno="367" lineno="367" attrname="write" expr="sys.stdout">
                  <Getattr fromlineno="367" tolineno="367" lineno="367" attrname="stdout" expr="sys">
                    <Name fromlineno="367" tolineno="367" lineno="367" name="sys"/>
                  </Getattr>
                </Getattr>
                <BinOp fromlineno="367" tolineno="367" lineno="367" op="%" left="'\rNOTE: Handling BitBake files: %s (%04d/%04d) [%2d %%]'" right="(parsespin.next(), x, y, ((x) * (100)) / (y))">
                  <Const fromlineno="367" tolineno="367" lineno="367" type="str">'\rNOTE: Handling BitBake files: %s (%04d/%04d) [%2d %%]'</Const>
                  <Tuple fromlineno="367" tolineno="367" lineno="367">
                    <CallFunc fromlineno="367" tolineno="367" lineno="367" func="Getattr(next)">
                      <Getattr fromlineno="367" tolineno="367" lineno="367" attrname="next" expr="parsespin">
                        <Name fromlineno="367" tolineno="367" lineno="367" name="parsespin"/>
                      </Getattr>
                    </CallFunc>
                    <Name fromlineno="367" tolineno="367" lineno="367" name="x"/>
                    <Name fromlineno="367" tolineno="367" lineno="367" name="y"/>
                    <BinOp fromlineno="367" tolineno="367" lineno="367" op="/" left="(x) * (100)" right="y">
                      <BinOp fromlineno="367" tolineno="367" lineno="367" op="*" left="x" right="100">
                        <Name fromlineno="367" tolineno="367" lineno="367" name="x"/>
                        <Const fromlineno="367" tolineno="367" lineno="367" type="int">100</Const>
                      </BinOp>
                      <Name fromlineno="367" tolineno="367" lineno="367" name="y"/>
                    </BinOp>
                  </Tuple>
                </BinOp>
              </CallFunc>
            </Discard>
            <Discard fromlineno="368" tolineno="368" lineno="368">
              <CallFunc fromlineno="368" tolineno="368" lineno="368" func="Getattr(flush)">
                <Getattr fromlineno="368" tolineno="368" lineno="368" attrname="flush" expr="sys.stdout">
                  <Getattr fromlineno="368" tolineno="368" lineno="368" attrname="stdout" expr="sys">
                    <Name fromlineno="368" tolineno="368" lineno="368" name="sys"/>
                  </Getattr>
                </Getattr>
              </CallFunc>
            </Discard>
            <If fromlineno="370" tolineno="372" lineno="370">
              <Compare fromlineno="370" tolineno="370" lineno="370" op="('==', &lt;Const(int) l.370 [bb.cooker] at Ox9cbb28c&gt;)">
                <Name fromlineno="370" tolineno="370" lineno="370" name="x"/>
                <Const fromlineno="370" tolineno="370" lineno="370" type="int">1</Const>
              </Compare>
              <Discard fromlineno="371" tolineno="371" lineno="371">
                <CallFunc fromlineno="371" tolineno="371" lineno="371" func="Getattr(write)">
                  <Getattr fromlineno="371" tolineno="371" lineno="371" attrname="write" expr="sys.stdout">
                    <Getattr fromlineno="371" tolineno="371" lineno="371" attrname="stdout" expr="sys">
                      <Name fromlineno="371" tolineno="371" lineno="371" name="sys"/>
                    </Getattr>
                  </Getattr>
                  <Const fromlineno="371" tolineno="371" lineno="371" type="str">'Parsing .bb files, please wait...'</Const>
                </CallFunc>
              </Discard>
              <Discard fromlineno="372" tolineno="372" lineno="372">
                <CallFunc fromlineno="372" tolineno="372" lineno="372" func="Getattr(flush)">
                  <Getattr fromlineno="372" tolineno="372" lineno="372" attrname="flush" expr="sys.stdout">
                    <Getattr fromlineno="372" tolineno="372" lineno="372" attrname="stdout" expr="sys">
                      <Name fromlineno="372" tolineno="372" lineno="372" name="sys"/>
                    </Getattr>
                  </Getattr>
                </CallFunc>
              </Discard>
            </If>
            <If fromlineno="373" tolineno="375" lineno="373">
              <Compare fromlineno="373" tolineno="373" lineno="373" op="('==', &lt;Name(y) l.373 [bb.cooker] at Ox9cbb52c&gt;)">
                <Name fromlineno="373" tolineno="373" lineno="373" name="x"/>
                <Name fromlineno="373" tolineno="373" lineno="373" name="y"/>
              </Compare>
              <Discard fromlineno="374" tolineno="374" lineno="374">
                <CallFunc fromlineno="374" tolineno="374" lineno="374" func="Getattr(write)">
                  <Getattr fromlineno="374" tolineno="374" lineno="374" attrname="write" expr="sys.stdout">
                    <Getattr fromlineno="374" tolineno="374" lineno="374" attrname="stdout" expr="sys">
                      <Name fromlineno="374" tolineno="374" lineno="374" name="sys"/>
                    </Getattr>
                  </Getattr>
                  <Const fromlineno="374" tolineno="374" lineno="374" type="str">'done.'</Const>
                </CallFunc>
              </Discard>
              <Discard fromlineno="375" tolineno="375" lineno="375">
                <CallFunc fromlineno="375" tolineno="375" lineno="375" func="Getattr(flush)">
                  <Getattr fromlineno="375" tolineno="375" lineno="375" attrname="flush" expr="sys.stdout">
                    <Getattr fromlineno="375" tolineno="375" lineno="375" attrname="stdout" expr="sys">
                      <Name fromlineno="375" tolineno="375" lineno="375" name="sys"/>
                    </Getattr>
                  </Getattr>
                </CallFunc>
              </Discard>
            </If>
          </If>
        </Function>
        <Function fromlineno="377" tolineno="385" lineno="377">
          <Arguments fromlineno="377" tolineno="377" lineno="None" format_args="self">
            <AssName fromlineno="377" tolineno="377" lineno="377" name="self"/>
          </Arguments>
          <TryExcept fromlineno="379" tolineno="385" lineno="379">
            <From fromlineno="380" tolineno="380" lineno="380" modname="bb">
              <ImportName name="shell"/>
            </From>
            <ExceptHandler fromlineno="381" tolineno="382" lineno="381">
              <Name fromlineno="381" tolineno="381" lineno="381" name="ImportError"/>
              <AssName fromlineno="381" tolineno="381" lineno="381" name="details"/>
              <Discard fromlineno="382" tolineno="382" lineno="382">
                <CallFunc fromlineno="382" tolineno="382" lineno="382" func="Getattr(fatal)">
                  <Getattr fromlineno="382" tolineno="382" lineno="382" attrname="fatal" expr="bb.msg">
                    <Getattr fromlineno="382" tolineno="382" lineno="382" attrname="msg" expr="bb">
                      <Name fromlineno="382" tolineno="382" lineno="382" name="bb"/>
                    </Getattr>
                  </Getattr>
                  <Getattr fromlineno="382" tolineno="382" lineno="382" attrname="Parsing" expr="bb.msg.domain">
                    <Getattr fromlineno="382" tolineno="382" lineno="382" attrname="domain" expr="bb.msg">
                      <Getattr fromlineno="382" tolineno="382" lineno="382" attrname="msg" expr="bb">
                        <Name fromlineno="382" tolineno="382" lineno="382" name="bb"/>
                      </Getattr>
                    </Getattr>
                  </Getattr>
                  <BinOp fromlineno="382" tolineno="382" lineno="382" op="%" left="'Sorry, shell not available (%s)'" right="details">
                    <Const fromlineno="382" tolineno="382" lineno="382" type="str">'Sorry, shell not available (%s)'</Const>
                    <Name fromlineno="382" tolineno="382" lineno="382" name="details"/>
                  </BinOp>
                </CallFunc>
              </Discard>
            </ExceptHandler>
            <Discard fromlineno="384" tolineno="384" lineno="384">
              <CallFunc fromlineno="384" tolineno="384" lineno="384" func="Getattr(start)">
                <Getattr fromlineno="384" tolineno="384" lineno="384" attrname="start" expr="shell">
                  <Name fromlineno="384" tolineno="384" lineno="384" name="shell"/>
                </Getattr>
                <Name fromlineno="384" tolineno="384" lineno="384" name="self"/>
              </CallFunc>
            </Discard>
            <Discard fromlineno="385" tolineno="385" lineno="385">
              <CallFunc fromlineno="385" tolineno="385" lineno="385" func="Getattr(exit)">
                <Getattr fromlineno="385" tolineno="385" lineno="385" attrname="exit" expr="sys">
                  <Name fromlineno="385" tolineno="385" lineno="385" name="sys"/>
                </Getattr>
                <Const fromlineno="385" tolineno="385" lineno="385" type="int">0</Const>
              </CallFunc>
            </Discard>
          </TryExcept>
        </Function>
        <Function fromlineno="387" tolineno="408" lineno="387">
          <Arguments fromlineno="387" tolineno="387" lineno="None" format_args="self, afile">
            <AssName fromlineno="387" tolineno="387" lineno="387" name="self"/>
            <AssName fromlineno="387" tolineno="387" lineno="387" name="afile"/>
          </Arguments>
          <TryExcept fromlineno="388" tolineno="408" lineno="388">
            <Assign fromlineno="389" tolineno="389" lineno="389" targets="[&lt;AssAttr(data) l.389 [bb.cooker] at Ox9cbbe4c&gt;]" value="bb.parse.handle(afile, self.configuration.data)">
              <AssAttr fromlineno="389" tolineno="389" lineno="389" attrname="data" expr="self.configuration">
                <Getattr fromlineno="389" tolineno="389" lineno="389" attrname="configuration" expr="self">
                  <Name fromlineno="389" tolineno="389" lineno="389" name="self"/>
                </Getattr>
              </AssAttr>
              <CallFunc fromlineno="389" tolineno="389" lineno="389" func="Getattr(handle)">
                <Getattr fromlineno="389" tolineno="389" lineno="389" attrname="handle" expr="bb.parse">
                  <Getattr fromlineno="389" tolineno="389" lineno="389" attrname="parse" expr="bb">
                    <Name fromlineno="389" tolineno="389" lineno="389" name="bb"/>
                  </Getattr>
                </Getattr>
                <Name fromlineno="389" tolineno="389" lineno="389" name="afile"/>
                <Getattr fromlineno="389" tolineno="389" lineno="389" attrname="data" expr="self.configuration">
                  <Getattr fromlineno="389" tolineno="389" lineno="389" attrname="configuration" expr="self">
                    <Name fromlineno="389" tolineno="389" lineno="389" name="self"/>
                  </Getattr>
                </Getattr>
              </CallFunc>
            </Assign>
            <Assign fromlineno="392" tolineno="392" lineno="392" targets="[&lt;AssName(inherits) l.392 [bb.cooker] at Ox9cbe02c&gt;]" value="(['base']) + ((bb.data.getVar('INHERIT', self.configuration.data, True)) or ('').split())">
              <AssName fromlineno="392" tolineno="392" lineno="392" name="inherits"/>
              <BinOp fromlineno="392" tolineno="392" lineno="392" op="+" left="['base']" right="(bb.data.getVar('INHERIT', self.configuration.data, True)) or ('').split()">
                <List fromlineno="392" tolineno="392" lineno="392">
                  <Const fromlineno="392" tolineno="392" lineno="392" type="str">'base'</Const>
                </List>
                <CallFunc fromlineno="392" tolineno="392" lineno="392" func="Getattr(split)">
                  <Getattr fromlineno="392" tolineno="392" lineno="392" attrname="split" expr="(bb.data.getVar('INHERIT', self.configuration.data, True)) or ('')">
                    <BoolOp fromlineno="392" tolineno="392" lineno="392" op="or" values="bb.data.getVar('INHERIT', self.configuration.data, True),'',">
                      <CallFunc fromlineno="392" tolineno="392" lineno="392" func="Getattr(getVar)">
                        <Getattr fromlineno="392" tolineno="392" lineno="392" attrname="getVar" expr="bb.data">
                          <Getattr fromlineno="392" tolineno="392" lineno="392" attrname="data" expr="bb">
                            <Name fromlineno="392" tolineno="392" lineno="392" name="bb"/>
                          </Getattr>
                        </Getattr>
                        <Const fromlineno="392" tolineno="392" lineno="392" type="str">'INHERIT'</Const>
                        <Getattr fromlineno="392" tolineno="392" lineno="392" attrname="data" expr="self.configuration">
                          <Getattr fromlineno="392" tolineno="392" lineno="392" attrname="configuration" expr="self">
                            <Name fromlineno="392" tolineno="392" lineno="392" name="self"/>
                          </Getattr>
                        </Getattr>
                        <Const fromlineno="392" tolineno="392" lineno="392" type="bool">True</Const>
                      </CallFunc>
                      <Const fromlineno="392" tolineno="392" lineno="392" type="str">''</Const>
                    </BoolOp>
                  </Getattr>
                </CallFunc>
              </BinOp>
            </Assign>
            <For fromlineno="393" tolineno="394" lineno="393">
              <AssName fromlineno="393" tolineno="393" lineno="393" name="inherit"/>
              <Name fromlineno="393" tolineno="393" lineno="393" name="inherits"/>
              <Assign fromlineno="394" tolineno="394" lineno="394" targets="[&lt;AssAttr(data) l.394 [bb.cooker] at Ox9cbe3ec&gt;]" value="bb.parse.handle(os.path.join('classes', ('%s.bbclass') % (inherit)), self.configuration.data, True)">
                <AssAttr fromlineno="394" tolineno="394" lineno="394" attrname="data" expr="self.configuration">
                  <Getattr fromlineno="394" tolineno="394" lineno="394" attrname="configuration" expr="self">
                    <Name fromlineno="394" tolineno="394" lineno="394" name="self"/>
                  </Getattr>
                </AssAttr>
                <CallFunc fromlineno="394" tolineno="394" lineno="394" func="Getattr(handle)">
                  <Getattr fromlineno="394" tolineno="394" lineno="394" attrname="handle" expr="bb.parse">
                    <Getattr fromlineno="394" tolineno="394" lineno="394" attrname="parse" expr="bb">
                      <Name fromlineno="394" tolineno="394" lineno="394" name="bb"/>
                    </Getattr>
                  </Getattr>
                  <CallFunc fromlineno="394" tolineno="394" lineno="394" func="Getattr(join)">
                    <Getattr fromlineno="394" tolineno="394" lineno="394" attrname="join" expr="os.path">
                      <Getattr fromlineno="394" tolineno="394" lineno="394" attrname="path" expr="os">
                        <Name fromlineno="394" tolineno="394" lineno="394" name="os"/>
                      </Getattr>
                    </Getattr>
                    <Const fromlineno="394" tolineno="394" lineno="394" type="str">'classes'</Const>
                    <BinOp fromlineno="394" tolineno="394" lineno="394" op="%" left="'%s.bbclass'" right="inherit">
                      <Const fromlineno="394" tolineno="394" lineno="394" type="str">'%s.bbclass'</Const>
                      <Name fromlineno="394" tolineno="394" lineno="394" name="inherit"/>
                    </BinOp>
                  </CallFunc>
                  <Getattr fromlineno="394" tolineno="394" lineno="394" attrname="data" expr="self.configuration">
                    <Getattr fromlineno="394" tolineno="394" lineno="394" attrname="configuration" expr="self">
                      <Name fromlineno="394" tolineno="394" lineno="394" name="self"/>
                    </Getattr>
                  </Getattr>
                  <Const fromlineno="394" tolineno="394" lineno="394" type="bool">True</Const>
                </CallFunc>
              </Assign>
            </For>
            <For fromlineno="398" tolineno="399" lineno="398">
              <AssName fromlineno="398" tolineno="398" lineno="398" name="var"/>
              <BoolOp fromlineno="398" tolineno="398" lineno="398" op="or" values="data.getVar('__BBHANDLERS', self.configuration.data),[],">
                <CallFunc fromlineno="398" tolineno="398" lineno="398" func="Getattr(getVar)">
                  <Getattr fromlineno="398" tolineno="398" lineno="398" attrname="getVar" expr="data">
                    <Name fromlineno="398" tolineno="398" lineno="398" name="data"/>
                  </Getattr>
                  <Const fromlineno="398" tolineno="398" lineno="398" type="str">'__BBHANDLERS'</Const>
                  <Getattr fromlineno="398" tolineno="398" lineno="398" attrname="data" expr="self.configuration">
                    <Getattr fromlineno="398" tolineno="398" lineno="398" attrname="configuration" expr="self">
                      <Name fromlineno="398" tolineno="398" lineno="398" name="self"/>
                    </Getattr>
                  </Getattr>
                </CallFunc>
                <List fromlineno="398" tolineno="398" lineno="398"/>
              </BoolOp>
              <Discard fromlineno="399" tolineno="399" lineno="399">
                <CallFunc fromlineno="399" tolineno="399" lineno="399" func="Getattr(register)">
                  <Getattr fromlineno="399" tolineno="399" lineno="399" attrname="register" expr="bb.event">
                    <Getattr fromlineno="399" tolineno="399" lineno="399" attrname="event" expr="bb">
                      <Name fromlineno="399" tolineno="399" lineno="399" name="bb"/>
                    </Getattr>
                  </Getattr>
                  <Name fromlineno="399" tolineno="399" lineno="399" name="var"/>
                  <CallFunc fromlineno="399" tolineno="399" lineno="399" func="Getattr(getVar)">
                    <Getattr fromlineno="399" tolineno="399" lineno="399" attrname="getVar" expr="bb.data">
                      <Getattr fromlineno="399" tolineno="399" lineno="399" attrname="data" expr="bb">
                        <Name fromlineno="399" tolineno="399" lineno="399" name="bb"/>
                      </Getattr>
                    </Getattr>
                    <Name fromlineno="399" tolineno="399" lineno="399" name="var"/>
                    <Getattr fromlineno="399" tolineno="399" lineno="399" attrname="data" expr="self.configuration">
                      <Getattr fromlineno="399" tolineno="399" lineno="399" attrname="configuration" expr="self">
                        <Name fromlineno="399" tolineno="399" lineno="399" name="self"/>
                      </Getattr>
                    </Getattr>
                  </CallFunc>
                </CallFunc>
              </Discard>
            </For>
            <Discard fromlineno="401" tolineno="401" lineno="401">
              <CallFunc fromlineno="401" tolineno="401" lineno="401" func="Getattr(fetcher_init)">
                <Getattr fromlineno="401" tolineno="401" lineno="401" attrname="fetcher_init" expr="bb.fetch">
                  <Getattr fromlineno="401" tolineno="401" lineno="401" attrname="fetch" expr="bb">
                    <Name fromlineno="401" tolineno="401" lineno="401" name="bb"/>
                  </Getattr>
                </Getattr>
                <Getattr fromlineno="401" tolineno="401" lineno="401" attrname="data" expr="self.configuration">
                  <Getattr fromlineno="401" tolineno="401" lineno="401" attrname="configuration" expr="self">
                    <Name fromlineno="401" tolineno="401" lineno="401" name="self"/>
                  </Getattr>
                </Getattr>
              </CallFunc>
            </Discard>
            <Discard fromlineno="403" tolineno="403" lineno="403">
              <CallFunc fromlineno="403" tolineno="403" lineno="403" func="Getattr(fire)">
                <Getattr fromlineno="403" tolineno="403" lineno="403" attrname="fire" expr="bb.event">
                  <Getattr fromlineno="403" tolineno="403" lineno="403" attrname="event" expr="bb">
                    <Name fromlineno="403" tolineno="403" lineno="403" name="bb"/>
                  </Getattr>
                </Getattr>
                <CallFunc fromlineno="403" tolineno="403" lineno="403" func="Getattr(ConfigParsed)">
                  <Getattr fromlineno="403" tolineno="403" lineno="403" attrname="ConfigParsed" expr="bb.event">
                    <Getattr fromlineno="403" tolineno="403" lineno="403" attrname="event" expr="bb">
                      <Name fromlineno="403" tolineno="403" lineno="403" name="bb"/>
                    </Getattr>
                  </Getattr>
                  <Getattr fromlineno="403" tolineno="403" lineno="403" attrname="data" expr="self.configuration">
                    <Getattr fromlineno="403" tolineno="403" lineno="403" attrname="configuration" expr="self">
                      <Name fromlineno="403" tolineno="403" lineno="403" name="self"/>
                    </Getattr>
                  </Getattr>
                </CallFunc>
              </CallFunc>
            </Discard>
            <ExceptHandler fromlineno="405" tolineno="406" lineno="405">
              <Name fromlineno="405" tolineno="405" lineno="405" name="IOError"/>
              <AssName fromlineno="405" tolineno="405" lineno="405" name="e"/>
              <Discard fromlineno="406" tolineno="406" lineno="406">
                <CallFunc fromlineno="406" tolineno="406" lineno="406" func="Getattr(fatal)">
                  <Getattr fromlineno="406" tolineno="406" lineno="406" attrname="fatal" expr="bb.msg">
                    <Getattr fromlineno="406" tolineno="406" lineno="406" attrname="msg" expr="bb">
                      <Name fromlineno="406" tolineno="406" lineno="406" name="bb"/>
                    </Getattr>
                  </Getattr>
                  <Getattr fromlineno="406" tolineno="406" lineno="406" attrname="Parsing" expr="bb.msg.domain">
                    <Getattr fromlineno="406" tolineno="406" lineno="406" attrname="domain" expr="bb.msg">
                      <Getattr fromlineno="406" tolineno="406" lineno="406" attrname="msg" expr="bb">
                        <Name fromlineno="406" tolineno="406" lineno="406" name="bb"/>
                      </Getattr>
                    </Getattr>
                  </Getattr>
                  <BinOp fromlineno="406" tolineno="406" lineno="406" op="%" left="'IO Error: %s'" right="str(e)">
                    <Const fromlineno="406" tolineno="406" lineno="406" type="str">'IO Error: %s'</Const>
                    <CallFunc fromlineno="406" tolineno="406" lineno="406" func="Name(str)">
                      <Name fromlineno="406" tolineno="406" lineno="406" name="str"/>
                      <Name fromlineno="406" tolineno="406" lineno="406" name="e"/>
                    </CallFunc>
                  </BinOp>
                </CallFunc>
              </Discard>
            </ExceptHandler>
            <ExceptHandler fromlineno="407" tolineno="408" lineno="407">
              <Getattr fromlineno="407" tolineno="407" lineno="407" attrname="ParseError" expr="bb.parse">
                <Getattr fromlineno="407" tolineno="407" lineno="407" attrname="parse" expr="bb">
                  <Name fromlineno="407" tolineno="407" lineno="407" name="bb"/>
                </Getattr>
              </Getattr>
              <AssName fromlineno="407" tolineno="407" lineno="407" name="details"/>
              <Discard fromlineno="408" tolineno="408" lineno="408">
                <CallFunc fromlineno="408" tolineno="408" lineno="408" func="Getattr(fatal)">
                  <Getattr fromlineno="408" tolineno="408" lineno="408" attrname="fatal" expr="bb.msg">
                    <Getattr fromlineno="408" tolineno="408" lineno="408" attrname="msg" expr="bb">
                      <Name fromlineno="408" tolineno="408" lineno="408" name="bb"/>
                    </Getattr>
                  </Getattr>
                  <Getattr fromlineno="408" tolineno="408" lineno="408" attrname="Parsing" expr="bb.msg.domain">
                    <Getattr fromlineno="408" tolineno="408" lineno="408" attrname="domain" expr="bb.msg">
                      <Getattr fromlineno="408" tolineno="408" lineno="408" attrname="msg" expr="bb">
                        <Name fromlineno="408" tolineno="408" lineno="408" name="bb"/>
                      </Getattr>
                    </Getattr>
                  </Getattr>
                  <BinOp fromlineno="408" tolineno="408" lineno="408" op="%" left="'Unable to parse %s (%s)'" right="(afile, details)">
                    <Const fromlineno="408" tolineno="408" lineno="408" type="str">'Unable to parse %s (%s)'</Const>
                    <Tuple fromlineno="408" tolineno="408" lineno="408">
                      <Name fromlineno="408" tolineno="408" lineno="408" name="afile"/>
                      <Name fromlineno="408" tolineno="408" lineno="408" name="details"/>
                    </Tuple>
                  </BinOp>
                </CallFunc>
              </Discard>
            </ExceptHandler>
          </TryExcept>
        </Function>
        <Function fromlineno="410" tolineno="432" lineno="410">
          <Arguments fromlineno="410" tolineno="410" lineno="None" format_args="self, collections">
            <AssName fromlineno="410" tolineno="410" lineno="410" name="self"/>
            <AssName fromlineno="410" tolineno="410" lineno="410" name="collections"/>
          </Arguments>
          <If fromlineno="412" tolineno="432" lineno="412">
            <Name fromlineno="412" tolineno="412" lineno="412" name="collections"/>
            <Assign fromlineno="413" tolineno="413" lineno="413" targets="[&lt;AssName(collection_list) l.413 [bb.cooker] at Ox9d6d50c&gt;]" value="collections.split()">
              <AssName fromlineno="413" tolineno="413" lineno="413" name="collection_list"/>
              <CallFunc fromlineno="413" tolineno="413" lineno="413" func="Getattr(split)">
                <Getattr fromlineno="413" tolineno="413" lineno="413" attrname="split" expr="collections">
                  <Name fromlineno="413" tolineno="413" lineno="413" name="collections"/>
                </Getattr>
              </CallFunc>
            </Assign>
            <For fromlineno="414" tolineno="432" lineno="414">
              <AssName fromlineno="414" tolineno="414" lineno="414" name="c"/>
              <Name fromlineno="414" tolineno="414" lineno="414" name="collection_list"/>
              <Assign fromlineno="415" tolineno="415" lineno="415" targets="[&lt;AssName(regex) l.415 [bb.cooker] at Ox9d6d6cc&gt;]" value="bb.data.getVar(('BBFILE_PATTERN_%s') % (c), self.configuration.data, 1)">
                <AssName fromlineno="415" tolineno="415" lineno="415" name="regex"/>
                <CallFunc fromlineno="415" tolineno="415" lineno="415" func="Getattr(getVar)">
                  <Getattr fromlineno="415" tolineno="415" lineno="415" attrname="getVar" expr="bb.data">
                    <Getattr fromlineno="415" tolineno="415" lineno="415" attrname="data" expr="bb">
                      <Name fromlineno="415" tolineno="415" lineno="415" name="bb"/>
                    </Getattr>
                  </Getattr>
                  <BinOp fromlineno="415" tolineno="415" lineno="415" op="%" left="'BBFILE_PATTERN_%s'" right="c">
                    <Const fromlineno="415" tolineno="415" lineno="415" type="str">'BBFILE_PATTERN_%s'</Const>
                    <Name fromlineno="415" tolineno="415" lineno="415" name="c"/>
                  </BinOp>
                  <Getattr fromlineno="415" tolineno="415" lineno="415" attrname="data" expr="self.configuration">
                    <Getattr fromlineno="415" tolineno="415" lineno="415" attrname="configuration" expr="self">
                      <Name fromlineno="415" tolineno="415" lineno="415" name="self"/>
                    </Getattr>
                  </Getattr>
                  <Const fromlineno="415" tolineno="415" lineno="415" type="int">1</Const>
                </CallFunc>
              </Assign>
              <If fromlineno="416" tolineno="418" lineno="416">
                <Compare fromlineno="416" tolineno="416" lineno="416" op="('==', &lt;Const(NoneType) l.416 [bb.cooker] at Ox9d6d94c&gt;)">
                  <Name fromlineno="416" tolineno="416" lineno="416" name="regex"/>
                  <Const fromlineno="416" tolineno="416" lineno="416" type="NoneType">None</Const>
                </Compare>
                <Discard fromlineno="417" tolineno="417" lineno="417">
                  <CallFunc fromlineno="417" tolineno="417" lineno="417" func="Getattr(error)">
                    <Getattr fromlineno="417" tolineno="417" lineno="417" attrname="error" expr="bb.msg">
                      <Getattr fromlineno="417" tolineno="417" lineno="417" attrname="msg" expr="bb">
                        <Name fromlineno="417" tolineno="417" lineno="417" name="bb"/>
                      </Getattr>
                    </Getattr>
                    <Getattr fromlineno="417" tolineno="417" lineno="417" attrname="Parsing" expr="bb.msg.domain">
                      <Getattr fromlineno="417" tolineno="417" lineno="417" attrname="domain" expr="bb.msg">
                        <Getattr fromlineno="417" tolineno="417" lineno="417" attrname="msg" expr="bb">
                          <Name fromlineno="417" tolineno="417" lineno="417" name="bb"/>
                        </Getattr>
                      </Getattr>
                    </Getattr>
                    <BinOp fromlineno="417" tolineno="417" lineno="417" op="%" left="'BBFILE_PATTERN_%s not defined'" right="c">
                      <Const fromlineno="417" tolineno="417" lineno="417" type="str">'BBFILE_PATTERN_%s not defined'</Const>
                      <Name fromlineno="417" tolineno="417" lineno="417" name="c"/>
                    </BinOp>
                  </CallFunc>
                </Discard>
                <Continue fromlineno="418" tolineno="418" lineno="418"/>
              </If>
              <Assign fromlineno="419" tolineno="419" lineno="419" targets="[&lt;AssName(priority) l.419 [bb.cooker] at Ox9d6dbac&gt;]" value="bb.data.getVar(('BBFILE_PRIORITY_%s') % (c), self.configuration.data, 1)">
                <AssName fromlineno="419" tolineno="419" lineno="419" name="priority"/>
                <CallFunc fromlineno="419" tolineno="419" lineno="419" func="Getattr(getVar)">
                  <Getattr fromlineno="419" tolineno="419" lineno="419" attrname="getVar" expr="bb.data">
                    <Getattr fromlineno="419" tolineno="419" lineno="419" attrname="data" expr="bb">
                      <Name fromlineno="419" tolineno="419" lineno="419" name="bb"/>
                    </Getattr>
                  </Getattr>
                  <BinOp fromlineno="419" tolineno="419" lineno="419" op="%" left="'BBFILE_PRIORITY_%s'" right="c">
                    <Const fromlineno="419" tolineno="419" lineno="419" type="str">'BBFILE_PRIORITY_%s'</Const>
                    <Name fromlineno="419" tolineno="419" lineno="419" name="c"/>
                  </BinOp>
                  <Getattr fromlineno="419" tolineno="419" lineno="419" attrname="data" expr="self.configuration">
                    <Getattr fromlineno="419" tolineno="419" lineno="419" attrname="configuration" expr="self">
                      <Name fromlineno="419" tolineno="419" lineno="419" name="self"/>
                    </Getattr>
                  </Getattr>
                  <Const fromlineno="419" tolineno="419" lineno="419" type="int">1</Const>
                </CallFunc>
              </Assign>
              <If fromlineno="420" tolineno="422" lineno="420">
                <Compare fromlineno="420" tolineno="420" lineno="420" op="('==', &lt;Const(NoneType) l.420 [bb.cooker] at Ox9d6de0c&gt;)">
                  <Name fromlineno="420" tolineno="420" lineno="420" name="priority"/>
                  <Const fromlineno="420" tolineno="420" lineno="420" type="NoneType">None</Const>
                </Compare>
                <Discard fromlineno="421" tolineno="421" lineno="421">
                  <CallFunc fromlineno="421" tolineno="421" lineno="421" func="Getattr(error)">
                    <Getattr fromlineno="421" tolineno="421" lineno="421" attrname="error" expr="bb.msg">
                      <Getattr fromlineno="421" tolineno="421" lineno="421" attrname="msg" expr="bb">
                        <Name fromlineno="421" tolineno="421" lineno="421" name="bb"/>
                      </Getattr>
                    </Getattr>
                    <Getattr fromlineno="421" tolineno="421" lineno="421" attrname="Parsing" expr="bb.msg.domain">
                      <Getattr fromlineno="421" tolineno="421" lineno="421" attrname="domain" expr="bb.msg">
                        <Getattr fromlineno="421" tolineno="421" lineno="421" attrname="msg" expr="bb">
                          <Name fromlineno="421" tolineno="421" lineno="421" name="bb"/>
                        </Getattr>
                      </Getattr>
                    </Getattr>
                    <BinOp fromlineno="421" tolineno="421" lineno="421" op="%" left="'BBFILE_PRIORITY_%s not defined'" right="c">
                      <Const fromlineno="421" tolineno="421" lineno="421" type="str">'BBFILE_PRIORITY_%s not defined'</Const>
                      <Name fromlineno="421" tolineno="421" lineno="421" name="c"/>
                    </BinOp>
                  </CallFunc>
                </Discard>
                <Continue fromlineno="422" tolineno="422" lineno="422"/>
              </If>
              <TryExcept fromlineno="423" tolineno="427" lineno="423">
                <Assign fromlineno="424" tolineno="424" lineno="424" targets="[&lt;AssName(cre) l.424 [bb.cooker] at Ox9d710ec&gt;]" value="re.compile(regex)">
                  <AssName fromlineno="424" tolineno="424" lineno="424" name="cre"/>
                  <CallFunc fromlineno="424" tolineno="424" lineno="424" func="Getattr(compile)">
                    <Getattr fromlineno="424" tolineno="424" lineno="424" attrname="compile" expr="re">
                      <Name fromlineno="424" tolineno="424" lineno="424" name="re"/>
                    </Getattr>
                    <Name fromlineno="424" tolineno="424" lineno="424" name="regex"/>
                  </CallFunc>
                </Assign>
                <ExceptHandler fromlineno="425" tolineno="427" lineno="425">
                  <Getattr fromlineno="425" tolineno="425" lineno="425" attrname="error" expr="re">
                    <Name fromlineno="425" tolineno="425" lineno="425" name="re"/>
                  </Getattr>
                  <Discard fromlineno="426" tolineno="426" lineno="426">
                    <CallFunc fromlineno="426" tolineno="426" lineno="426" func="Getattr(error)">
                      <Getattr fromlineno="426" tolineno="426" lineno="426" attrname="error" expr="bb.msg">
                        <Getattr fromlineno="426" tolineno="426" lineno="426" attrname="msg" expr="bb">
                          <Name fromlineno="426" tolineno="426" lineno="426" name="bb"/>
                        </Getattr>
                      </Getattr>
                      <Getattr fromlineno="426" tolineno="426" lineno="426" attrname="Parsing" expr="bb.msg.domain">
                        <Getattr fromlineno="426" tolineno="426" lineno="426" attrname="domain" expr="bb.msg">
                          <Getattr fromlineno="426" tolineno="426" lineno="426" attrname="msg" expr="bb">
                            <Name fromlineno="426" tolineno="426" lineno="426" name="bb"/>
                          </Getattr>
                        </Getattr>
                      </Getattr>
                      <BinOp fromlineno="426" tolineno="426" lineno="426" op="%" left="'BBFILE_PATTERN_%s &quot;%s&quot; is not a valid regular expression'" right="(c, regex)">
                        <Const fromlineno="426" tolineno="426" lineno="426" type="str">'BBFILE_PATTERN_%s "%s" is not a valid regular expression'</Const>
                        <Tuple fromlineno="426" tolineno="426" lineno="426">
                          <Name fromlineno="426" tolineno="426" lineno="426" name="c"/>
                          <Name fromlineno="426" tolineno="426" lineno="426" name="regex"/>
                        </Tuple>
                      </BinOp>
                    </CallFunc>
                  </Discard>
                  <Continue fromlineno="427" tolineno="427" lineno="427"/>
                </ExceptHandler>
              </TryExcept>
              <TryExcept fromlineno="428" tolineno="432" lineno="428">
                <Assign fromlineno="429" tolineno="429" lineno="429" targets="[&lt;AssName(pri) l.429 [bb.cooker] at Ox9d7152c&gt;]" value="int(priority)">
                  <AssName fromlineno="429" tolineno="429" lineno="429" name="pri"/>
                  <CallFunc fromlineno="429" tolineno="429" lineno="429" func="Name(int)">
                    <Name fromlineno="429" tolineno="429" lineno="429" name="int"/>
                    <Name fromlineno="429" tolineno="429" lineno="429" name="priority"/>
                  </CallFunc>
                </Assign>
                <Discard fromlineno="430" tolineno="430" lineno="430">
                  <CallFunc fromlineno="430" tolineno="430" lineno="430" func="Getattr(append)">
                    <Getattr fromlineno="430" tolineno="430" lineno="430" attrname="append" expr="self.status.bbfile_config_priorities">
                      <Getattr fromlineno="430" tolineno="430" lineno="430" attrname="bbfile_config_priorities" expr="self.status">
                        <Getattr fromlineno="430" tolineno="430" lineno="430" attrname="status" expr="self">
                          <Name fromlineno="430" tolineno="430" lineno="430" name="self"/>
                        </Getattr>
                      </Getattr>
                    </Getattr>
                    <Tuple fromlineno="430" tolineno="430" lineno="430">
                      <Name fromlineno="430" tolineno="430" lineno="430" name="cre"/>
                      <Name fromlineno="430" tolineno="430" lineno="430" name="pri"/>
                    </Tuple>
                  </CallFunc>
                </Discard>
                <ExceptHandler fromlineno="431" tolineno="432" lineno="431">
                  <Name fromlineno="431" tolineno="431" lineno="431" name="ValueError"/>
                  <Discard fromlineno="432" tolineno="432" lineno="432">
                    <CallFunc fromlineno="432" tolineno="432" lineno="432" func="Getattr(error)">
                      <Getattr fromlineno="432" tolineno="432" lineno="432" attrname="error" expr="bb.msg">
                        <Getattr fromlineno="432" tolineno="432" lineno="432" attrname="msg" expr="bb">
                          <Name fromlineno="432" tolineno="432" lineno="432" name="bb"/>
                        </Getattr>
                      </Getattr>
                      <Getattr fromlineno="432" tolineno="432" lineno="432" attrname="Parsing" expr="bb.msg.domain">
                        <Getattr fromlineno="432" tolineno="432" lineno="432" attrname="domain" expr="bb.msg">
                          <Getattr fromlineno="432" tolineno="432" lineno="432" attrname="msg" expr="bb">
                            <Name fromlineno="432" tolineno="432" lineno="432" name="bb"/>
                          </Getattr>
                        </Getattr>
                      </Getattr>
                      <BinOp fromlineno="432" tolineno="432" lineno="432" op="%" left="'invalid value for BBFILE_PRIORITY_%s: &quot;%s&quot;'" right="(c, priority)">
                        <Const fromlineno="432" tolineno="432" lineno="432" type="str">'invalid value for BBFILE_PRIORITY_%s: "%s"'</Const>
                        <Tuple fromlineno="432" tolineno="432" lineno="432">
                          <Name fromlineno="432" tolineno="432" lineno="432" name="c"/>
                          <Name fromlineno="432" tolineno="432" lineno="432" name="priority"/>
                        </Tuple>
                      </BinOp>
                    </CallFunc>
                  </Discard>
                </ExceptHandler>
              </TryExcept>
            </For>
          </If>
        </Function>
        <Function fromlineno="434" tolineno="440" lineno="434">
          <Arguments fromlineno="434" tolineno="434" lineno="None" format_args="self">
            <AssName fromlineno="434" tolineno="434" lineno="434" name="self"/>
          </Arguments>
          <If fromlineno="438" tolineno="439" lineno="438">
            <UnaryOp fromlineno="438" tolineno="438" lineno="438">
              <CallFunc fromlineno="438" tolineno="438" lineno="438" func="Getattr(getVar)">
                <Getattr fromlineno="438" tolineno="438" lineno="438" attrname="getVar" expr="bb.data">
                  <Getattr fromlineno="438" tolineno="438" lineno="438" attrname="data" expr="bb">
                    <Name fromlineno="438" tolineno="438" lineno="438" name="bb"/>
                  </Getattr>
                </Getattr>
                <Const fromlineno="438" tolineno="438" lineno="438" type="str">'BUILDNAME'</Const>
                <Getattr fromlineno="438" tolineno="438" lineno="438" attrname="data" expr="self.configuration">
                  <Getattr fromlineno="438" tolineno="438" lineno="438" attrname="configuration" expr="self">
                    <Name fromlineno="438" tolineno="438" lineno="438" name="self"/>
                  </Getattr>
                </Getattr>
              </CallFunc>
            </UnaryOp>
            <Discard fromlineno="439" tolineno="439" lineno="439">
              <CallFunc fromlineno="439" tolineno="439" lineno="439" func="Getattr(setVar)">
                <Getattr fromlineno="439" tolineno="439" lineno="439" attrname="setVar" expr="bb.data">
                  <Getattr fromlineno="439" tolineno="439" lineno="439" attrname="data" expr="bb">
                    <Name fromlineno="439" tolineno="439" lineno="439" name="bb"/>
                  </Getattr>
                </Getattr>
                <Const fromlineno="439" tolineno="439" lineno="439" type="str">'BUILDNAME'</Const>
                <CallFunc fromlineno="439" tolineno="439" lineno="439" func="Getattr(strip)">
                  <Getattr fromlineno="439" tolineno="439" lineno="439" attrname="strip" expr="os.popen('date +%Y%m%d%H%M').readline()">
                    <CallFunc fromlineno="439" tolineno="439" lineno="439" func="Getattr(readline)">
                      <Getattr fromlineno="439" tolineno="439" lineno="439" attrname="readline" expr="os.popen('date +%Y%m%d%H%M')">
                        <CallFunc fromlineno="439" tolineno="439" lineno="439" func="Getattr(popen)">
                          <Getattr fromlineno="439" tolineno="439" lineno="439" attrname="popen" expr="os">
                            <Name fromlineno="439" tolineno="439" lineno="439" name="os"/>
                          </Getattr>
                          <Const fromlineno="439" tolineno="439" lineno="439" type="str">'date +%Y%m%d%H%M'</Const>
                        </CallFunc>
                      </Getattr>
                    </CallFunc>
                  </Getattr>
                </CallFunc>
                <Getattr fromlineno="439" tolineno="439" lineno="439" attrname="data" expr="self.configuration">
                  <Getattr fromlineno="439" tolineno="439" lineno="439" attrname="configuration" expr="self">
                    <Name fromlineno="439" tolineno="439" lineno="439" name="self"/>
                  </Getattr>
                </Getattr>
              </CallFunc>
            </Discard>
          </If>
          <Discard fromlineno="440" tolineno="440" lineno="440">
            <CallFunc fromlineno="440" tolineno="440" lineno="440" func="Getattr(setVar)">
              <Getattr fromlineno="440" tolineno="440" lineno="440" attrname="setVar" expr="bb.data">
                <Getattr fromlineno="440" tolineno="440" lineno="440" attrname="data" expr="bb">
                  <Name fromlineno="440" tolineno="440" lineno="440" name="bb"/>
                </Getattr>
              </Getattr>
              <Const fromlineno="440" tolineno="440" lineno="440" type="str">'BUILDSTART'</Const>
              <CallFunc fromlineno="440" tolineno="440" lineno="440" func="Getattr(strftime)">
                <Getattr fromlineno="440" tolineno="440" lineno="440" attrname="strftime" expr="time">
                  <Name fromlineno="440" tolineno="440" lineno="440" name="time"/>
                </Getattr>
                <Const fromlineno="440" tolineno="440" lineno="440" type="str">'%m/%d/%Y %H:%M:%S'</Const>
                <CallFunc fromlineno="440" tolineno="440" lineno="440" func="Getattr(gmtime)">
                  <Getattr fromlineno="440" tolineno="440" lineno="440" attrname="gmtime" expr="time">
                    <Name fromlineno="440" tolineno="440" lineno="440" name="time"/>
                  </Getattr>
                </CallFunc>
              </CallFunc>
              <Getattr fromlineno="440" tolineno="440" lineno="440" attrname="data" expr="self.configuration">
                <Getattr fromlineno="440" tolineno="440" lineno="440" attrname="configuration" expr="self">
                  <Name fromlineno="440" tolineno="440" lineno="440" name="self"/>
                </Getattr>
              </Getattr>
            </CallFunc>
          </Discard>
        </Function>
        <Function fromlineno="442" tolineno="464" lineno="442">
          <Arguments fromlineno="442" tolineno="442" lineno="None" format_args="self, buildfile">
            <AssName fromlineno="442" tolineno="442" lineno="442" name="self"/>
            <AssName fromlineno="442" tolineno="442" lineno="442" name="buildfile"/>
          </Arguments>
          <Assign fromlineno="447" tolineno="447" lineno="447" targets="[&lt;AssName(bf) l.447 [bb.cooker] at Ox9d7526c&gt;]" value="os.path.abspath(buildfile)">
            <AssName fromlineno="447" tolineno="447" lineno="447" name="bf"/>
            <CallFunc fromlineno="447" tolineno="447" lineno="447" func="Getattr(abspath)">
              <Getattr fromlineno="447" tolineno="447" lineno="447" attrname="abspath" expr="os.path">
                <Getattr fromlineno="447" tolineno="447" lineno="447" attrname="path" expr="os">
                  <Name fromlineno="447" tolineno="447" lineno="447" name="os"/>
                </Getattr>
              </Getattr>
              <Name fromlineno="447" tolineno="447" lineno="447" name="buildfile"/>
            </CallFunc>
          </Assign>
          <TryExcept fromlineno="448" tolineno="464" lineno="448">
            <Discard fromlineno="449" tolineno="449" lineno="449">
              <CallFunc fromlineno="449" tolineno="449" lineno="449" func="Getattr(stat)">
                <Getattr fromlineno="449" tolineno="449" lineno="449" attrname="stat" expr="os">
                  <Name fromlineno="449" tolineno="449" lineno="449" name="os"/>
                </Getattr>
                <Name fromlineno="449" tolineno="449" lineno="449" name="bf"/>
              </CallFunc>
            </Discard>
            <Return fromlineno="450" tolineno="450" lineno="450">
              <Name fromlineno="450" tolineno="450" lineno="450" name="bf"/>
            </Return>
            <ExceptHandler fromlineno="451" tolineno="464" lineno="451">
              <Name fromlineno="451" tolineno="451" lineno="451" name="OSError"/>
              <Assign fromlineno="452" tolineno="452" lineno="452" targets="[&lt;Tuple(tuple) l.452 [bb.cooker] at Ox9d755ac&gt;]" value="self.collect_bbfiles()">
                <Tuple fromlineno="452" tolineno="452" lineno="452">
                  <AssName fromlineno="452" tolineno="452" lineno="452" name="filelist"/>
                  <AssName fromlineno="452" tolineno="452" lineno="452" name="masked"/>
                </Tuple>
                <CallFunc fromlineno="452" tolineno="452" lineno="452" func="Getattr(collect_bbfiles)">
                  <Getattr fromlineno="452" tolineno="452" lineno="452" attrname="collect_bbfiles" expr="self">
                    <Name fromlineno="452" tolineno="452" lineno="452" name="self"/>
                  </Getattr>
                </CallFunc>
              </Assign>
              <Assign fromlineno="453" tolineno="453" lineno="453" targets="[&lt;AssName(regexp) l.453 [bb.cooker] at Ox9d7572c&gt;]" value="re.compile(buildfile)">
                <AssName fromlineno="453" tolineno="453" lineno="453" name="regexp"/>
                <CallFunc fromlineno="453" tolineno="453" lineno="453" func="Getattr(compile)">
                  <Getattr fromlineno="453" tolineno="453" lineno="453" attrname="compile" expr="re">
                    <Name fromlineno="453" tolineno="453" lineno="453" name="re"/>
                  </Getattr>
                  <Name fromlineno="453" tolineno="453" lineno="453" name="buildfile"/>
                </CallFunc>
              </Assign>
              <Assign fromlineno="454" tolineno="454" lineno="454" targets="[&lt;AssName(matches) l.454 [bb.cooker] at Ox9d7584c&gt;]" value="[]">
                <AssName fromlineno="454" tolineno="454" lineno="454" name="matches"/>
                <List fromlineno="454" tolineno="454" lineno="454"/>
              </Assign>
              <For fromlineno="455" tolineno="458" lineno="455">
                <AssName fromlineno="455" tolineno="455" lineno="455" name="f"/>
                <Name fromlineno="455" tolineno="455" lineno="455" name="filelist"/>
                <If fromlineno="456" tolineno="458" lineno="456">
                  <BoolOp fromlineno="456" tolineno="456" lineno="456" op="and" values="regexp.search(f),os.path.isfile(f),">
                    <CallFunc fromlineno="456" tolineno="456" lineno="456" func="Getattr(search)">
                      <Getattr fromlineno="456" tolineno="456" lineno="456" attrname="search" expr="regexp">
                        <Name fromlineno="456" tolineno="456" lineno="456" name="regexp"/>
                      </Getattr>
                      <Name fromlineno="456" tolineno="456" lineno="456" name="f"/>
                    </CallFunc>
                    <CallFunc fromlineno="456" tolineno="456" lineno="456" func="Getattr(isfile)">
                      <Getattr fromlineno="456" tolineno="456" lineno="456" attrname="isfile" expr="os.path">
                        <Getattr fromlineno="456" tolineno="456" lineno="456" attrname="path" expr="os">
                          <Name fromlineno="456" tolineno="456" lineno="456" name="os"/>
                        </Getattr>
                      </Getattr>
                      <Name fromlineno="456" tolineno="456" lineno="456" name="f"/>
                    </CallFunc>
                  </BoolOp>
                  <Assign fromlineno="457" tolineno="457" lineno="457" targets="[&lt;AssName(bf) l.457 [bb.cooker] at Ox9d75bcc&gt;]" value="f">
                    <AssName fromlineno="457" tolineno="457" lineno="457" name="bf"/>
                    <Name fromlineno="457" tolineno="457" lineno="457" name="f"/>
                  </Assign>
                  <Discard fromlineno="458" tolineno="458" lineno="458">
                    <CallFunc fromlineno="458" tolineno="458" lineno="458" func="Getattr(append)">
                      <Getattr fromlineno="458" tolineno="458" lineno="458" attrname="append" expr="matches">
                        <Name fromlineno="458" tolineno="458" lineno="458" name="matches"/>
                      </Getattr>
                      <Name fromlineno="458" tolineno="458" lineno="458" name="f"/>
                    </CallFunc>
                  </Discard>
                </If>
              </For>
              <If fromlineno="459" tolineno="463" lineno="459">
                <Compare fromlineno="459" tolineno="459" lineno="459" op="('!=', &lt;Const(int) l.459 [bb.cooker] at Ox9d75dcc&gt;)">
                  <CallFunc fromlineno="459" tolineno="459" lineno="459" func="Name(len)">
                    <Name fromlineno="459" tolineno="459" lineno="459" name="len"/>
                    <Name fromlineno="459" tolineno="459" lineno="459" name="matches"/>
                  </CallFunc>
                  <Const fromlineno="459" tolineno="459" lineno="459" type="int">1</Const>
                </Compare>
                <Discard fromlineno="460" tolineno="460" lineno="460">
                  <CallFunc fromlineno="460" tolineno="460" lineno="460" func="Getattr(error)">
                    <Getattr fromlineno="460" tolineno="460" lineno="460" attrname="error" expr="bb.msg">
                      <Getattr fromlineno="460" tolineno="460" lineno="460" attrname="msg" expr="bb">
                        <Name fromlineno="460" tolineno="460" lineno="460" name="bb"/>
                      </Getattr>
                    </Getattr>
                    <Getattr fromlineno="460" tolineno="460" lineno="460" attrname="Parsing" expr="bb.msg.domain">
                      <Getattr fromlineno="460" tolineno="460" lineno="460" attrname="domain" expr="bb.msg">
                        <Getattr fromlineno="460" tolineno="460" lineno="460" attrname="msg" expr="bb">
                          <Name fromlineno="460" tolineno="460" lineno="460" name="bb"/>
                        </Getattr>
                      </Getattr>
                    </Getattr>
                    <BinOp fromlineno="460" tolineno="460" lineno="460" op="%" left="'Unable to match %s (%s matches found):'" right="(buildfile, len(matches))">
                      <Const fromlineno="460" tolineno="460" lineno="460" type="str">'Unable to match %s (%s matches found):'</Const>
                      <Tuple fromlineno="460" tolineno="460" lineno="460">
                        <Name fromlineno="460" tolineno="460" lineno="460" name="buildfile"/>
                        <CallFunc fromlineno="460" tolineno="460" lineno="460" func="Name(len)">
                          <Name fromlineno="460" tolineno="460" lineno="460" name="len"/>
                          <Name fromlineno="460" tolineno="460" lineno="460" name="matches"/>
                        </CallFunc>
                      </Tuple>
                    </BinOp>
                  </CallFunc>
                </Discard>
                <For fromlineno="461" tolineno="462" lineno="461">
                  <AssName fromlineno="461" tolineno="461" lineno="461" name="f"/>
                  <Name fromlineno="461" tolineno="461" lineno="461" name="matches"/>
                  <Discard fromlineno="462" tolineno="462" lineno="462">
                    <CallFunc fromlineno="462" tolineno="462" lineno="462" func="Getattr(error)">
                      <Getattr fromlineno="462" tolineno="462" lineno="462" attrname="error" expr="bb.msg">
                        <Getattr fromlineno="462" tolineno="462" lineno="462" attrname="msg" expr="bb">
                          <Name fromlineno="462" tolineno="462" lineno="462" name="bb"/>
                        </Getattr>
                      </Getattr>
                      <Getattr fromlineno="462" tolineno="462" lineno="462" attrname="Parsing" expr="bb.msg.domain">
                        <Getattr fromlineno="462" tolineno="462" lineno="462" attrname="domain" expr="bb.msg">
                          <Getattr fromlineno="462" tolineno="462" lineno="462" attrname="msg" expr="bb">
                            <Name fromlineno="462" tolineno="462" lineno="462" name="bb"/>
                          </Getattr>
                        </Getattr>
                      </Getattr>
                      <BinOp fromlineno="462" tolineno="462" lineno="462" op="%" left="'    %s'" right="f">
                        <Const fromlineno="462" tolineno="462" lineno="462" type="str">'    %s'</Const>
                        <Name fromlineno="462" tolineno="462" lineno="462" name="f"/>
                      </BinOp>
                    </CallFunc>
                  </Discard>
                </For>
                <Return fromlineno="463" tolineno="463" lineno="463">
                  <Const fromlineno="463" tolineno="463" lineno="463" type="bool">False</Const>
                </Return>
              </If>
              <Return fromlineno="464" tolineno="464" lineno="464">
                <Subscript fromlineno="464" tolineno="464" lineno="464">
                  <Name fromlineno="464" tolineno="464" lineno="464" name="matches"/>
                  <Index fromlineno="464" tolineno="464" lineno="None">
                    <Const fromlineno="464" tolineno="464" lineno="464" type="int">0</Const>
                  </Index>
                </Subscript>
              </Return>
            </ExceptHandler>
          </TryExcept>
        </Function>
        <Function fromlineno="466" tolineno="518" lineno="466">
          <Arguments fromlineno="466" tolineno="466" lineno="None" format_args="self, buildfile">
            <AssName fromlineno="466" tolineno="466" lineno="466" name="self"/>
            <AssName fromlineno="466" tolineno="466" lineno="466" name="buildfile"/>
          </Arguments>
          <Assign fromlineno="472" tolineno="472" lineno="472" targets="[&lt;AssName(fn) l.472 [bb.cooker] at Ox9d794ec&gt;]" value="self.matchFile(buildfile)">
            <AssName fromlineno="472" tolineno="472" lineno="472" name="fn"/>
            <CallFunc fromlineno="472" tolineno="472" lineno="472" func="Getattr(matchFile)">
              <Getattr fromlineno="472" tolineno="472" lineno="472" attrname="matchFile" expr="self">
                <Name fromlineno="472" tolineno="472" lineno="472" name="self"/>
              </Getattr>
              <Name fromlineno="472" tolineno="472" lineno="472" name="buildfile"/>
            </CallFunc>
          </Assign>
          <If fromlineno="473" tolineno="474" lineno="473">
            <UnaryOp fromlineno="473" tolineno="473" lineno="473">
              <Name fromlineno="473" tolineno="473" lineno="473" name="fn"/>
            </UnaryOp>
            <Return fromlineno="474" tolineno="474" lineno="474">
              <Const fromlineno="474" tolineno="474" lineno="474" type="bool">False</Const>
            </Return>
          </If>
          <Assign fromlineno="477" tolineno="477" lineno="477" targets="[&lt;AssAttr(bb_cache) l.477 [bb.cooker] at Ox9d796ec&gt;]" value="bb.cache.init(self)">
            <AssAttr fromlineno="477" tolineno="477" lineno="477" attrname="bb_cache" expr="self">
              <Name fromlineno="477" tolineno="477" lineno="477" name="self"/>
            </AssAttr>
            <CallFunc fromlineno="477" tolineno="477" lineno="477" func="Getattr(init)">
              <Getattr fromlineno="477" tolineno="477" lineno="477" attrname="init" expr="bb.cache">
                <Getattr fromlineno="477" tolineno="477" lineno="477" attrname="cache" expr="bb">
                  <Name fromlineno="477" tolineno="477" lineno="477" name="bb"/>
                </Getattr>
              </Getattr>
              <Name fromlineno="477" tolineno="477" lineno="477" name="self"/>
            </CallFunc>
          </Assign>
          <Assign fromlineno="478" tolineno="478" lineno="478" targets="[&lt;AssAttr(status) l.478 [bb.cooker] at Ox9d7982c&gt;]" value="bb.cache.CacheData()">
            <AssAttr fromlineno="478" tolineno="478" lineno="478" attrname="status" expr="self">
              <Name fromlineno="478" tolineno="478" lineno="478" name="self"/>
            </AssAttr>
            <CallFunc fromlineno="478" tolineno="478" lineno="478" func="Getattr(CacheData)">
              <Getattr fromlineno="478" tolineno="478" lineno="478" attrname="CacheData" expr="bb.cache">
                <Getattr fromlineno="478" tolineno="478" lineno="478" attrname="cache" expr="bb">
                  <Name fromlineno="478" tolineno="478" lineno="478" name="bb"/>
                </Getattr>
              </Getattr>
            </CallFunc>
          </Assign>
          <Discard fromlineno="479" tolineno="479" lineno="479">
            <CallFunc fromlineno="479" tolineno="479" lineno="479" func="Getattr(loadData)">
              <Getattr fromlineno="479" tolineno="479" lineno="479" attrname="loadData" expr="self.bb_cache">
                <Getattr fromlineno="479" tolineno="479" lineno="479" attrname="bb_cache" expr="self">
                  <Name fromlineno="479" tolineno="479" lineno="479" name="self"/>
                </Getattr>
              </Getattr>
              <Name fromlineno="479" tolineno="479" lineno="479" name="fn"/>
              <Getattr fromlineno="479" tolineno="479" lineno="479" attrname="data" expr="self.configuration">
                <Getattr fromlineno="479" tolineno="479" lineno="479" attrname="configuration" expr="self">
                  <Name fromlineno="479" tolineno="479" lineno="479" name="self"/>
                </Getattr>
              </Getattr>
              <Getattr fromlineno="479" tolineno="479" lineno="479" attrname="status" expr="self">
                <Name fromlineno="479" tolineno="479" lineno="479" name="self"/>
              </Getattr>
            </CallFunc>
          </Discard>
          <Assign fromlineno="482" tolineno="482" lineno="482" targets="[&lt;AssName(item) l.482 [bb.cooker] at Ox9d79acc&gt;]" value="self.bb_cache.getVar('PN', fn, True)">
            <AssName fromlineno="482" tolineno="482" lineno="482" name="item"/>
            <CallFunc fromlineno="482" tolineno="482" lineno="482" func="Getattr(getVar)">
              <Getattr fromlineno="482" tolineno="482" lineno="482" attrname="getVar" expr="self.bb_cache">
                <Getattr fromlineno="482" tolineno="482" lineno="482" attrname="bb_cache" expr="self">
                  <Name fromlineno="482" tolineno="482" lineno="482" name="self"/>
                </Getattr>
              </Getattr>
              <Const fromlineno="482" tolineno="482" lineno="482" type="str">'PN'</Const>
              <Name fromlineno="482" tolineno="482" lineno="482" name="fn"/>
              <Const fromlineno="482" tolineno="482" lineno="482" type="bool">True</Const>
            </CallFunc>
          </Assign>
          <Assign fromlineno="483" tolineno="483" lineno="483" targets="[&lt;AssAttr(ignored_dependencies) l.483 [bb.cooker] at Ox9d79c4c&gt;]" value="set()">
            <AssAttr fromlineno="483" tolineno="483" lineno="483" attrname="ignored_dependencies" expr="self.status">
              <Getattr fromlineno="483" tolineno="483" lineno="483" attrname="status" expr="self">
                <Name fromlineno="483" tolineno="483" lineno="483" name="self"/>
              </Getattr>
            </AssAttr>
            <CallFunc fromlineno="483" tolineno="483" lineno="483" func="Name(set)">
              <Name fromlineno="483" tolineno="483" lineno="483" name="set"/>
            </CallFunc>
          </Assign>
          <Assign fromlineno="484" tolineno="484" lineno="484" targets="[&lt;Subscript() l.484 [bb.cooker] at Ox9d79d4c&gt;]" value="1">
            <Subscript fromlineno="484" tolineno="484" lineno="484">
              <Getattr fromlineno="484" tolineno="484" lineno="484" attrname="bbfile_priority" expr="self.status">
                <Getattr fromlineno="484" tolineno="484" lineno="484" attrname="status" expr="self">
                  <Name fromlineno="484" tolineno="484" lineno="484" name="self"/>
                </Getattr>
              </Getattr>
              <Index fromlineno="484" tolineno="484" lineno="None">
                <Name fromlineno="484" tolineno="484" lineno="484" name="fn"/>
              </Index>
            </Subscript>
            <Const fromlineno="484" tolineno="484" lineno="484" type="int">1</Const>
          </Assign>
          <Assign fromlineno="487" tolineno="487" lineno="487" targets="[&lt;Subscript() l.487 [bb.cooker] at Ox9d79e6c&gt;]" value="{}">
            <Subscript fromlineno="487" tolineno="487" lineno="487">
              <Subscript fromlineno="487" tolineno="487" lineno="487">
                <Getattr fromlineno="487" tolineno="487" lineno="487" attrname="task_deps" expr="self.status">
                  <Getattr fromlineno="487" tolineno="487" lineno="487" attrname="status" expr="self">
                    <Name fromlineno="487" tolineno="487" lineno="487" name="self"/>
                  </Getattr>
                </Getattr>
                <Index fromlineno="487" tolineno="487" lineno="None">
                  <Name fromlineno="487" tolineno="487" lineno="487" name="fn"/>
                </Index>
              </Subscript>
              <Index fromlineno="487" tolineno="487" lineno="None">
                <Const fromlineno="487" tolineno="487" lineno="487" type="str">'depends'</Const>
              </Index>
            </Subscript>
            <Dict fromlineno="487" tolineno="487" lineno="487"/>
          </Assign>
          <Assign fromlineno="488" tolineno="488" lineno="488" targets="[&lt;Subscript() l.488 [bb.cooker] at Ox9d7d02c&gt;]" value="[]">
            <Subscript fromlineno="488" tolineno="488" lineno="488">
              <Getattr fromlineno="488" tolineno="488" lineno="488" attrname="deps" expr="self.status">
                <Getattr fromlineno="488" tolineno="488" lineno="488" attrname="status" expr="self">
                  <Name fromlineno="488" tolineno="488" lineno="488" name="self"/>
                </Getattr>
              </Getattr>
              <Index fromlineno="488" tolineno="488" lineno="None">
                <Name fromlineno="488" tolineno="488" lineno="488" name="fn"/>
              </Index>
            </Subscript>
            <List fromlineno="488" tolineno="488" lineno="488"/>
          </Assign>
          <Assign fromlineno="489" tolineno="489" lineno="489" targets="[&lt;Subscript() l.489 [bb.cooker] at Ox9d7d16c&gt;]" value="[]">
            <Subscript fromlineno="489" tolineno="489" lineno="489">
              <Getattr fromlineno="489" tolineno="489" lineno="489" attrname="rundeps" expr="self.status">
                <Getattr fromlineno="489" tolineno="489" lineno="489" attrname="status" expr="self">
                  <Name fromlineno="489" tolineno="489" lineno="489" name="self"/>
                </Getattr>
              </Getattr>
              <Index fromlineno="489" tolineno="489" lineno="None">
                <Name fromlineno="489" tolineno="489" lineno="489" name="fn"/>
              </Index>
            </Subscript>
            <List fromlineno="489" tolineno="489" lineno="489"/>
          </Assign>
          <Assign fromlineno="490" tolineno="490" lineno="490" targets="[&lt;Subscript() l.490 [bb.cooker] at Ox9d7d2ac&gt;]" value="[]">
            <Subscript fromlineno="490" tolineno="490" lineno="490">
              <Getattr fromlineno="490" tolineno="490" lineno="490" attrname="runrecs" expr="self.status">
                <Getattr fromlineno="490" tolineno="490" lineno="490" attrname="status" expr="self">
                  <Name fromlineno="490" tolineno="490" lineno="490" name="self"/>
                </Getattr>
              </Getattr>
              <Index fromlineno="490" tolineno="490" lineno="None">
                <Name fromlineno="490" tolineno="490" lineno="490" name="fn"/>
              </Index>
            </Subscript>
            <List fromlineno="490" tolineno="490" lineno="490"/>
          </Assign>
          <If fromlineno="493" tolineno="495" lineno="493">
            <Getattr fromlineno="493" tolineno="493" lineno="493" attrname="force" expr="self.configuration">
              <Getattr fromlineno="493" tolineno="493" lineno="493" attrname="configuration" expr="self">
                <Name fromlineno="493" tolineno="493" lineno="493" name="self"/>
              </Getattr>
            </Getattr>
            <Discard fromlineno="494" tolineno="494" lineno="494">
              <CallFunc fromlineno="494" tolineno="494" lineno="494" func="Getattr(note)">
                <Getattr fromlineno="494" tolineno="494" lineno="494" attrname="note" expr="bb.msg">
                  <Getattr fromlineno="494" tolineno="494" lineno="494" attrname="msg" expr="bb">
                    <Name fromlineno="494" tolineno="494" lineno="494" name="bb"/>
                  </Getattr>
                </Getattr>
                <Const fromlineno="494" tolineno="494" lineno="494" type="int">2</Const>
                <Getattr fromlineno="494" tolineno="494" lineno="494" attrname="RunQueue" expr="bb.msg.domain">
                  <Getattr fromlineno="494" tolineno="494" lineno="494" attrname="domain" expr="bb.msg">
                    <Getattr fromlineno="494" tolineno="494" lineno="494" attrname="msg" expr="bb">
                      <Name fromlineno="494" tolineno="494" lineno="494" name="bb"/>
                    </Getattr>
                  </Getattr>
                </Getattr>
                <BinOp fromlineno="494" tolineno="494" lineno="494" op="%" left="'Remove stamp %s, %s'" right="(self.configuration.cmd, fn)">
                  <Const fromlineno="494" tolineno="494" lineno="494" type="str">'Remove stamp %s, %s'</Const>
                  <Tuple fromlineno="494" tolineno="494" lineno="494">
                    <Getattr fromlineno="494" tolineno="494" lineno="494" attrname="cmd" expr="self.configuration">
                      <Getattr fromlineno="494" tolineno="494" lineno="494" attrname="configuration" expr="self">
                        <Name fromlineno="494" tolineno="494" lineno="494" name="self"/>
                      </Getattr>
                    </Getattr>
                    <Name fromlineno="494" tolineno="494" lineno="494" name="fn"/>
                  </Tuple>
                </BinOp>
              </CallFunc>
            </Discard>
            <Discard fromlineno="495" tolineno="495" lineno="495">
              <CallFunc fromlineno="495" tolineno="495" lineno="495" func="Getattr(del_stamp)">
                <Getattr fromlineno="495" tolineno="495" lineno="495" attrname="del_stamp" expr="bb.build">
                  <Getattr fromlineno="495" tolineno="495" lineno="495" attrname="build" expr="bb">
                    <Name fromlineno="495" tolineno="495" lineno="495" name="bb"/>
                  </Getattr>
                </Getattr>
                <BinOp fromlineno="495" tolineno="495" lineno="495" op="%" left="'do_%s'" right="self.configuration.cmd">
                  <Const fromlineno="495" tolineno="495" lineno="495" type="str">'do_%s'</Const>
                  <Getattr fromlineno="495" tolineno="495" lineno="495" attrname="cmd" expr="self.configuration">
                    <Getattr fromlineno="495" tolineno="495" lineno="495" attrname="configuration" expr="self">
                      <Name fromlineno="495" tolineno="495" lineno="495" name="self"/>
                    </Getattr>
                  </Getattr>
                </BinOp>
                <Getattr fromlineno="495" tolineno="495" lineno="495" attrname="data" expr="self.configuration">
                  <Getattr fromlineno="495" tolineno="495" lineno="495" attrname="configuration" expr="self">
                    <Name fromlineno="495" tolineno="495" lineno="495" name="self"/>
                  </Getattr>
                </Getattr>
              </CallFunc>
            </Discard>
          </If>
          <Assign fromlineno="498" tolineno="498" lineno="498" targets="[&lt;AssName(taskdata) l.498 [bb.cooker] at Ox9d7d8cc&gt;]" value="bb.taskdata.TaskData(self.configuration.abort, self.configuration.tryaltconfigs)">
            <AssName fromlineno="498" tolineno="498" lineno="498" name="taskdata"/>
            <CallFunc fromlineno="498" tolineno="498" lineno="498" func="Getattr(TaskData)">
              <Getattr fromlineno="498" tolineno="498" lineno="498" attrname="TaskData" expr="bb.taskdata">
                <Getattr fromlineno="498" tolineno="498" lineno="498" attrname="taskdata" expr="bb">
                  <Name fromlineno="498" tolineno="498" lineno="498" name="bb"/>
                </Getattr>
              </Getattr>
              <Getattr fromlineno="498" tolineno="498" lineno="498" attrname="abort" expr="self.configuration">
                <Getattr fromlineno="498" tolineno="498" lineno="498" attrname="configuration" expr="self">
                  <Name fromlineno="498" tolineno="498" lineno="498" name="self"/>
                </Getattr>
              </Getattr>
              <Getattr fromlineno="498" tolineno="498" lineno="498" attrname="tryaltconfigs" expr="self.configuration">
                <Getattr fromlineno="498" tolineno="498" lineno="498" attrname="configuration" expr="self">
                  <Name fromlineno="498" tolineno="498" lineno="498" name="self"/>
                </Getattr>
              </Getattr>
            </CallFunc>
          </Assign>
          <Discard fromlineno="499" tolineno="499" lineno="499">
            <CallFunc fromlineno="499" tolineno="499" lineno="499" func="Getattr(add_provider)">
              <Getattr fromlineno="499" tolineno="499" lineno="499" attrname="add_provider" expr="taskdata">
                <Name fromlineno="499" tolineno="499" lineno="499" name="taskdata"/>
              </Getattr>
              <Getattr fromlineno="499" tolineno="499" lineno="499" attrname="data" expr="self.configuration">
                <Getattr fromlineno="499" tolineno="499" lineno="499" attrname="configuration" expr="self">
                  <Name fromlineno="499" tolineno="499" lineno="499" name="self"/>
                </Getattr>
              </Getattr>
              <Getattr fromlineno="499" tolineno="499" lineno="499" attrname="status" expr="self">
                <Name fromlineno="499" tolineno="499" lineno="499" name="self"/>
              </Getattr>
              <Name fromlineno="499" tolineno="499" lineno="499" name="item"/>
            </CallFunc>
          </Discard>
          <Assign fromlineno="501" tolineno="501" lineno="501" targets="[&lt;AssName(buildname) l.501 [bb.cooker] at Ox9d7dc0c&gt;]" value="bb.data.getVar('BUILDNAME', self.configuration.data)">
            <AssName fromlineno="501" tolineno="501" lineno="501" name="buildname"/>
            <CallFunc fromlineno="501" tolineno="501" lineno="501" func="Getattr(getVar)">
              <Getattr fromlineno="501" tolineno="501" lineno="501" attrname="getVar" expr="bb.data">
                <Getattr fromlineno="501" tolineno="501" lineno="501" attrname="data" expr="bb">
                  <Name fromlineno="501" tolineno="501" lineno="501" name="bb"/>
                </Getattr>
              </Getattr>
              <Const fromlineno="501" tolineno="501" lineno="501" type="str">'BUILDNAME'</Const>
              <Getattr fromlineno="501" tolineno="501" lineno="501" attrname="data" expr="self.configuration">
                <Getattr fromlineno="501" tolineno="501" lineno="501" attrname="configuration" expr="self">
                  <Name fromlineno="501" tolineno="501" lineno="501" name="self"/>
                </Getattr>
              </Getattr>
            </CallFunc>
          </Assign>
          <Discard fromlineno="502" tolineno="502" lineno="502">
            <CallFunc fromlineno="502" tolineno="502" lineno="502" func="Getattr(fire)">
              <Getattr fromlineno="502" tolineno="502" lineno="502" attrname="fire" expr="bb.event">
                <Getattr fromlineno="502" tolineno="502" lineno="502" attrname="event" expr="bb">
                  <Name fromlineno="502" tolineno="502" lineno="502" name="bb"/>
                </Getattr>
              </Getattr>
              <CallFunc fromlineno="502" tolineno="502" lineno="502" func="Getattr(BuildStarted)">
                <Getattr fromlineno="502" tolineno="502" lineno="502" attrname="BuildStarted" expr="bb.event">
                  <Getattr fromlineno="502" tolineno="502" lineno="502" attrname="event" expr="bb">
                    <Name fromlineno="502" tolineno="502" lineno="502" name="bb"/>
                  </Getattr>
                </Getattr>
                <Name fromlineno="502" tolineno="502" lineno="502" name="buildname"/>
                <List fromlineno="502" tolineno="502" lineno="502">
                  <Name fromlineno="502" tolineno="502" lineno="502" name="item"/>
                </List>
                <Getattr fromlineno="502" tolineno="502" lineno="502" attrname="event_data" expr="self.configuration">
                  <Getattr fromlineno="502" tolineno="502" lineno="502" attrname="configuration" expr="self">
                    <Name fromlineno="502" tolineno="502" lineno="502" name="self"/>
                  </Getattr>
                </Getattr>
              </CallFunc>
            </CallFunc>
          </Discard>
          <Assign fromlineno="505" tolineno="505" lineno="505" targets="[&lt;AssName(runlist) l.505 [bb.cooker] at Ox9d7dfec&gt;]" value="[[item, ('do_%s') % (self.configuration.cmd)]]">
            <AssName fromlineno="505" tolineno="505" lineno="505" name="runlist"/>
            <List fromlineno="505" tolineno="505" lineno="505">
              <List fromlineno="505" tolineno="505" lineno="505">
                <Name fromlineno="505" tolineno="505" lineno="505" name="item"/>
                <BinOp fromlineno="505" tolineno="505" lineno="505" op="%" left="'do_%s'" right="self.configuration.cmd">
                  <Const fromlineno="505" tolineno="505" lineno="505" type="str">'do_%s'</Const>
                  <Getattr fromlineno="505" tolineno="505" lineno="505" attrname="cmd" expr="self.configuration">
                    <Getattr fromlineno="505" tolineno="505" lineno="505" attrname="configuration" expr="self">
                      <Name fromlineno="505" tolineno="505" lineno="505" name="self"/>
                    </Getattr>
                  </Getattr>
                </BinOp>
              </List>
            </List>
          </Assign>
          <Assign fromlineno="506" tolineno="506" lineno="506" targets="[&lt;AssName(rq) l.506 [bb.cooker] at Ox9d821cc&gt;]" value="bb.runqueue.RunQueue(self, self.configuration.data, self.status, taskdata, runlist)">
            <AssName fromlineno="506" tolineno="506" lineno="506" name="rq"/>
            <CallFunc fromlineno="506" tolineno="506" lineno="506" func="Getattr(RunQueue)">
              <Getattr fromlineno="506" tolineno="506" lineno="506" attrname="RunQueue" expr="bb.runqueue">
                <Getattr fromlineno="506" tolineno="506" lineno="506" attrname="runqueue" expr="bb">
                  <Name fromlineno="506" tolineno="506" lineno="506" name="bb"/>
                </Getattr>
              </Getattr>
              <Name fromlineno="506" tolineno="506" lineno="506" name="self"/>
              <Getattr fromlineno="506" tolineno="506" lineno="506" attrname="data" expr="self.configuration">
                <Getattr fromlineno="506" tolineno="506" lineno="506" attrname="configuration" expr="self">
                  <Name fromlineno="506" tolineno="506" lineno="506" name="self"/>
                </Getattr>
              </Getattr>
              <Getattr fromlineno="506" tolineno="506" lineno="506" attrname="status" expr="self">
                <Name fromlineno="506" tolineno="506" lineno="506" name="self"/>
              </Getattr>
              <Name fromlineno="506" tolineno="506" lineno="506" name="taskdata"/>
              <Name fromlineno="506" tolineno="506" lineno="506" name="runlist"/>
            </CallFunc>
          </Assign>
          <Discard fromlineno="507" tolineno="507" lineno="507">
            <CallFunc fromlineno="507" tolineno="507" lineno="507" func="Getattr(prepare_runqueue)">
              <Getattr fromlineno="507" tolineno="507" lineno="507" attrname="prepare_runqueue" expr="rq">
                <Name fromlineno="507" tolineno="507" lineno="507" name="rq"/>
              </Getattr>
            </CallFunc>
          </Discard>
          <TryExcept fromlineno="508" tolineno="516" lineno="508">
            <Assign fromlineno="509" tolineno="509" lineno="509" targets="[&lt;AssName(failures) l.509 [bb.cooker] at Ox9d824ec&gt;]" value="rq.execute_runqueue()">
              <AssName fromlineno="509" tolineno="509" lineno="509" name="failures"/>
              <CallFunc fromlineno="509" tolineno="509" lineno="509" func="Getattr(execute_runqueue)">
                <Getattr fromlineno="509" tolineno="509" lineno="509" attrname="execute_runqueue" expr="rq">
                  <Name fromlineno="509" tolineno="509" lineno="509" name="rq"/>
                </Getattr>
              </CallFunc>
            </Assign>
            <ExceptHandler fromlineno="510" tolineno="516" lineno="510">
              <Getattr fromlineno="510" tolineno="510" lineno="510" attrname="TaskFailure" expr="runqueue">
                <Name fromlineno="510" tolineno="510" lineno="510" name="runqueue"/>
              </Getattr>
              <AssName fromlineno="510" tolineno="510" lineno="510" name="fnids"/>
              <Assign fromlineno="511" tolineno="511" lineno="511" targets="[&lt;AssName(failures) l.511 [bb.cooker] at Ox9d826ec&gt;]" value="0">
                <AssName fromlineno="511" tolineno="511" lineno="511" name="failures"/>
                <Const fromlineno="511" tolineno="511" lineno="511" type="int">0</Const>
              </Assign>
              <For fromlineno="512" tolineno="514" lineno="512">
                <AssName fromlineno="512" tolineno="512" lineno="512" name="fnid"/>
                <Name fromlineno="512" tolineno="512" lineno="512" name="fnids"/>
                <Discard fromlineno="513" tolineno="513" lineno="513">
                  <CallFunc fromlineno="513" tolineno="513" lineno="513" func="Getattr(error)">
                    <Getattr fromlineno="513" tolineno="513" lineno="513" attrname="error" expr="bb.msg">
                      <Getattr fromlineno="513" tolineno="513" lineno="513" attrname="msg" expr="bb">
                        <Name fromlineno="513" tolineno="513" lineno="513" name="bb"/>
                      </Getattr>
                    </Getattr>
                    <Getattr fromlineno="513" tolineno="513" lineno="513" attrname="Build" expr="bb.msg.domain">
                      <Getattr fromlineno="513" tolineno="513" lineno="513" attrname="domain" expr="bb.msg">
                        <Getattr fromlineno="513" tolineno="513" lineno="513" attrname="msg" expr="bb">
                          <Name fromlineno="513" tolineno="513" lineno="513" name="bb"/>
                        </Getattr>
                      </Getattr>
                    </Getattr>
                    <BinOp fromlineno="513" tolineno="513" lineno="513" op="%" left="&quot;'%s' failed&quot;" right="taskdata.fn_index[fnid]">
                      <Const fromlineno="513" tolineno="513" lineno="513" type="str">"'%s' failed"</Const>
                      <Subscript fromlineno="513" tolineno="513" lineno="513">
                        <Getattr fromlineno="513" tolineno="513" lineno="513" attrname="fn_index" expr="taskdata">
                          <Name fromlineno="513" tolineno="513" lineno="513" name="taskdata"/>
                        </Getattr>
                        <Index fromlineno="513" tolineno="513" lineno="None">
                          <Name fromlineno="513" tolineno="513" lineno="513" name="fnid"/>
                        </Index>
                      </Subscript>
                    </BinOp>
                  </CallFunc>
                </Discard>
                <Assign fromlineno="514" tolineno="514" lineno="514" targets="[&lt;AssName(failures) l.514 [bb.cooker] at Ox9d82a4c&gt;]" value="(failures) + (1)">
                  <AssName fromlineno="514" tolineno="514" lineno="514" name="failures"/>
                  <BinOp fromlineno="514" tolineno="514" lineno="514" op="+" left="failures" right="1">
                    <Name fromlineno="514" tolineno="514" lineno="514" name="failures"/>
                    <Const fromlineno="514" tolineno="514" lineno="514" type="int">1</Const>
                  </BinOp>
                </Assign>
              </For>
              <Discard fromlineno="515" tolineno="515" lineno="515">
                <CallFunc fromlineno="515" tolineno="515" lineno="515" func="Getattr(fire)">
                  <Getattr fromlineno="515" tolineno="515" lineno="515" attrname="fire" expr="bb.event">
                    <Getattr fromlineno="515" tolineno="515" lineno="515" attrname="event" expr="bb">
                      <Name fromlineno="515" tolineno="515" lineno="515" name="bb"/>
                    </Getattr>
                  </Getattr>
                  <CallFunc fromlineno="515" tolineno="515" lineno="515" func="Getattr(BuildCompleted)">
                    <Getattr fromlineno="515" tolineno="515" lineno="515" attrname="BuildCompleted" expr="bb.event">
                      <Getattr fromlineno="515" tolineno="515" lineno="515" attrname="event" expr="bb">
                        <Name fromlineno="515" tolineno="515" lineno="515" name="bb"/>
                      </Getattr>
                    </Getattr>
                    <Name fromlineno="515" tolineno="515" lineno="515" name="buildname"/>
                    <List fromlineno="515" tolineno="515" lineno="515">
                      <Name fromlineno="515" tolineno="515" lineno="515" name="item"/>
                    </List>
                    <Getattr fromlineno="515" tolineno="515" lineno="515" attrname="event_data" expr="self.configuration">
                      <Getattr fromlineno="515" tolineno="515" lineno="515" attrname="configuration" expr="self">
                        <Name fromlineno="515" tolineno="515" lineno="515" name="self"/>
                      </Getattr>
                    </Getattr>
                    <Name fromlineno="515" tolineno="515" lineno="515" name="failures"/>
                  </CallFunc>
                </CallFunc>
              </Discard>
              <Return fromlineno="516" tolineno="516" lineno="516">
                <Const fromlineno="516" tolineno="516" lineno="516" type="bool">False</Const>
              </Return>
            </ExceptHandler>
          </TryExcept>
          <Discard fromlineno="517" tolineno="517" lineno="517">
            <CallFunc fromlineno="517" tolineno="517" lineno="517" func="Getattr(fire)">
              <Getattr fromlineno="517" tolineno="517" lineno="517" attrname="fire" expr="bb.event">
                <Getattr fromlineno="517" tolineno="517" lineno="517" attrname="event" expr="bb">
                  <Name fromlineno="517" tolineno="517" lineno="517" name="bb"/>
                </Getattr>
              </Getattr>
              <CallFunc fromlineno="517" tolineno="517" lineno="517" func="Getattr(BuildCompleted)">
                <Getattr fromlineno="517" tolineno="517" lineno="517" attrname="BuildCompleted" expr="bb.event">
                  <Getattr fromlineno="517" tolineno="517" lineno="517" attrname="event" expr="bb">
                    <Name fromlineno="517" tolineno="517" lineno="517" name="bb"/>
                  </Getattr>
                </Getattr>
                <Name fromlineno="517" tolineno="517" lineno="517" name="buildname"/>
                <List fromlineno="517" tolineno="517" lineno="517">
                  <Name fromlineno="517" tolineno="517" lineno="517" name="item"/>
                </List>
                <Getattr fromlineno="517" tolineno="517" lineno="517" attrname="event_data" expr="self.configuration">
                  <Getattr fromlineno="517" tolineno="517" lineno="517" attrname="configuration" expr="self">
                    <Name fromlineno="517" tolineno="517" lineno="517" name="self"/>
                  </Getattr>
                </Getattr>
                <Name fromlineno="517" tolineno="517" lineno="517" name="failures"/>
              </CallFunc>
            </CallFunc>
          </Discard>
          <Return fromlineno="518" tolineno="518" lineno="518">
            <Const fromlineno="518" tolineno="518" lineno="518" type="bool">True</Const>
          </Return>
        </Function>
        <Function fromlineno="520" tolineno="556" lineno="520">
          <Arguments fromlineno="520" tolineno="520" lineno="None" format_args="self, targets">
            <AssName fromlineno="520" tolineno="520" lineno="520" name="self"/>
            <AssName fromlineno="520" tolineno="520" lineno="520" name="targets"/>
          </Arguments>
          <Assign fromlineno="525" tolineno="525" lineno="525" targets="[&lt;AssName(buildname) l.525 [bb.cooker] at Ox9d8614c&gt;]" value="bb.data.getVar('BUILDNAME', self.configuration.data)">
            <AssName fromlineno="525" tolineno="525" lineno="525" name="buildname"/>
            <CallFunc fromlineno="525" tolineno="525" lineno="525" func="Getattr(getVar)">
              <Getattr fromlineno="525" tolineno="525" lineno="525" attrname="getVar" expr="bb.data">
                <Getattr fromlineno="525" tolineno="525" lineno="525" attrname="data" expr="bb">
                  <Name fromlineno="525" tolineno="525" lineno="525" name="bb"/>
                </Getattr>
              </Getattr>
              <Const fromlineno="525" tolineno="525" lineno="525" type="str">'BUILDNAME'</Const>
              <Getattr fromlineno="525" tolineno="525" lineno="525" attrname="data" expr="self.configuration">
                <Getattr fromlineno="525" tolineno="525" lineno="525" attrname="configuration" expr="self">
                  <Name fromlineno="525" tolineno="525" lineno="525" name="self"/>
                </Getattr>
              </Getattr>
            </CallFunc>
          </Assign>
          <Discard fromlineno="526" tolineno="526" lineno="526">
            <CallFunc fromlineno="526" tolineno="526" lineno="526" func="Getattr(fire)">
              <Getattr fromlineno="526" tolineno="526" lineno="526" attrname="fire" expr="bb.event">
                <Getattr fromlineno="526" tolineno="526" lineno="526" attrname="event" expr="bb">
                  <Name fromlineno="526" tolineno="526" lineno="526" name="bb"/>
                </Getattr>
              </Getattr>
              <CallFunc fromlineno="526" tolineno="526" lineno="526" func="Getattr(BuildStarted)">
                <Getattr fromlineno="526" tolineno="526" lineno="526" attrname="BuildStarted" expr="bb.event">
                  <Getattr fromlineno="526" tolineno="526" lineno="526" attrname="event" expr="bb">
                    <Name fromlineno="526" tolineno="526" lineno="526" name="bb"/>
                  </Getattr>
                </Getattr>
                <Name fromlineno="526" tolineno="526" lineno="526" name="buildname"/>
                <Name fromlineno="526" tolineno="526" lineno="526" name="targets"/>
                <Getattr fromlineno="526" tolineno="526" lineno="526" attrname="event_data" expr="self.configuration">
                  <Getattr fromlineno="526" tolineno="526" lineno="526" attrname="configuration" expr="self">
                    <Name fromlineno="526" tolineno="526" lineno="526" name="self"/>
                  </Getattr>
                </Getattr>
              </CallFunc>
            </CallFunc>
          </Discard>
          <Assign fromlineno="528" tolineno="528" lineno="528" targets="[&lt;AssName(localdata) l.528 [bb.cooker] at Ox9d864ec&gt;]" value="data.createCopy(self.configuration.data)">
            <AssName fromlineno="528" tolineno="528" lineno="528" name="localdata"/>
            <CallFunc fromlineno="528" tolineno="528" lineno="528" func="Getattr(createCopy)">
              <Getattr fromlineno="528" tolineno="528" lineno="528" attrname="createCopy" expr="data">
                <Name fromlineno="528" tolineno="528" lineno="528" name="data"/>
              </Getattr>
              <Getattr fromlineno="528" tolineno="528" lineno="528" attrname="data" expr="self.configuration">
                <Getattr fromlineno="528" tolineno="528" lineno="528" attrname="configuration" expr="self">
                  <Name fromlineno="528" tolineno="528" lineno="528" name="self"/>
                </Getattr>
              </Getattr>
            </CallFunc>
          </Assign>
          <Discard fromlineno="529" tolineno="529" lineno="529">
            <CallFunc fromlineno="529" tolineno="529" lineno="529" func="Getattr(update_data)">
              <Getattr fromlineno="529" tolineno="529" lineno="529" attrname="update_data" expr="bb.data">
                <Getattr fromlineno="529" tolineno="529" lineno="529" attrname="data" expr="bb">
                  <Name fromlineno="529" tolineno="529" lineno="529" name="bb"/>
                </Getattr>
              </Getattr>
              <Name fromlineno="529" tolineno="529" lineno="529" name="localdata"/>
            </CallFunc>
          </Discard>
          <Discard fromlineno="530" tolineno="530" lineno="530">
            <CallFunc fromlineno="530" tolineno="530" lineno="530" func="Getattr(expandKeys)">
              <Getattr fromlineno="530" tolineno="530" lineno="530" attrname="expandKeys" expr="bb.data">
                <Getattr fromlineno="530" tolineno="530" lineno="530" attrname="data" expr="bb">
                  <Name fromlineno="530" tolineno="530" lineno="530" name="bb"/>
                </Getattr>
              </Getattr>
              <Name fromlineno="530" tolineno="530" lineno="530" name="localdata"/>
            </CallFunc>
          </Discard>
          <Assign fromlineno="532" tolineno="532" lineno="532" targets="[&lt;AssName(taskdata) l.532 [bb.cooker] at Ox9d8680c&gt;]" value="bb.taskdata.TaskData(self.configuration.abort, self.configuration.tryaltconfigs)">
            <AssName fromlineno="532" tolineno="532" lineno="532" name="taskdata"/>
            <CallFunc fromlineno="532" tolineno="532" lineno="532" func="Getattr(TaskData)">
              <Getattr fromlineno="532" tolineno="532" lineno="532" attrname="TaskData" expr="bb.taskdata">
                <Getattr fromlineno="532" tolineno="532" lineno="532" attrname="taskdata" expr="bb">
                  <Name fromlineno="532" tolineno="532" lineno="532" name="bb"/>
                </Getattr>
              </Getattr>
              <Getattr fromlineno="532" tolineno="532" lineno="532" attrname="abort" expr="self.configuration">
                <Getattr fromlineno="532" tolineno="532" lineno="532" attrname="configuration" expr="self">
                  <Name fromlineno="532" tolineno="532" lineno="532" name="self"/>
                </Getattr>
              </Getattr>
              <Getattr fromlineno="532" tolineno="532" lineno="532" attrname="tryaltconfigs" expr="self.configuration">
                <Getattr fromlineno="532" tolineno="532" lineno="532" attrname="configuration" expr="self">
                  <Name fromlineno="532" tolineno="532" lineno="532" name="self"/>
                </Getattr>
              </Getattr>
            </CallFunc>
          </Assign>
          <Assign fromlineno="534" tolineno="534" lineno="534" targets="[&lt;AssName(runlist) l.534 [bb.cooker] at Ox9d869ec&gt;]" value="[]">
            <AssName fromlineno="534" tolineno="534" lineno="534" name="runlist"/>
            <List fromlineno="534" tolineno="534" lineno="534"/>
          </Assign>
          <TryExcept fromlineno="535" tolineno="541" lineno="535">
            <For fromlineno="536" tolineno="538" lineno="536">
              <AssName fromlineno="536" tolineno="536" lineno="536" name="k"/>
              <Name fromlineno="536" tolineno="536" lineno="536" name="targets"/>
              <Discard fromlineno="537" tolineno="537" lineno="537">
                <CallFunc fromlineno="537" tolineno="537" lineno="537" func="Getattr(add_provider)">
                  <Getattr fromlineno="537" tolineno="537" lineno="537" attrname="add_provider" expr="taskdata">
                    <Name fromlineno="537" tolineno="537" lineno="537" name="taskdata"/>
                  </Getattr>
                  <Name fromlineno="537" tolineno="537" lineno="537" name="localdata"/>
                  <Getattr fromlineno="537" tolineno="537" lineno="537" attrname="status" expr="self">
                    <Name fromlineno="537" tolineno="537" lineno="537" name="self"/>
                  </Getattr>
                  <Name fromlineno="537" tolineno="537" lineno="537" name="k"/>
                </CallFunc>
              </Discard>
              <Discard fromlineno="538" tolineno="538" lineno="538">
                <CallFunc fromlineno="538" tolineno="538" lineno="538" func="Getattr(append)">
                  <Getattr fromlineno="538" tolineno="538" lineno="538" attrname="append" expr="runlist">
                    <Name fromlineno="538" tolineno="538" lineno="538" name="runlist"/>
                  </Getattr>
                  <List fromlineno="538" tolineno="538" lineno="538">
                    <Name fromlineno="538" tolineno="538" lineno="538" name="k"/>
                    <BinOp fromlineno="538" tolineno="538" lineno="538" op="%" left="'do_%s'" right="self.configuration.cmd">
                      <Const fromlineno="538" tolineno="538" lineno="538" type="str">'do_%s'</Const>
                      <Getattr fromlineno="538" tolineno="538" lineno="538" attrname="cmd" expr="self.configuration">
                        <Getattr fromlineno="538" tolineno="538" lineno="538" attrname="configuration" expr="self">
                          <Name fromlineno="538" tolineno="538" lineno="538" name="self"/>
                        </Getattr>
                      </Getattr>
                    </BinOp>
                  </List>
                </CallFunc>
              </Discard>
            </For>
            <Discard fromlineno="539" tolineno="539" lineno="539">
              <CallFunc fromlineno="539" tolineno="539" lineno="539" func="Getattr(add_unresolved)">
                <Getattr fromlineno="539" tolineno="539" lineno="539" attrname="add_unresolved" expr="taskdata">
                  <Name fromlineno="539" tolineno="539" lineno="539" name="taskdata"/>
                </Getattr>
                <Name fromlineno="539" tolineno="539" lineno="539" name="localdata"/>
                <Getattr fromlineno="539" tolineno="539" lineno="539" attrname="status" expr="self">
                  <Name fromlineno="539" tolineno="539" lineno="539" name="self"/>
                </Getattr>
              </CallFunc>
            </Discard>
            <ExceptHandler fromlineno="540" tolineno="541" lineno="540">
              <Getattr fromlineno="540" tolineno="540" lineno="540" attrname="NoProvider" expr="bb.providers">
                <Getattr fromlineno="540" tolineno="540" lineno="540" attrname="providers" expr="bb">
                  <Name fromlineno="540" tolineno="540" lineno="540" name="bb"/>
                </Getattr>
              </Getattr>
              <Discard fromlineno="541" tolineno="541" lineno="541">
                <CallFunc fromlineno="541" tolineno="541" lineno="541" func="Getattr(exit)">
                  <Getattr fromlineno="541" tolineno="541" lineno="541" attrname="exit" expr="sys">
                    <Name fromlineno="541" tolineno="541" lineno="541" name="sys"/>
                  </Getattr>
                  <Const fromlineno="541" tolineno="541" lineno="541" type="int">1</Const>
                </CallFunc>
              </Discard>
            </ExceptHandler>
          </TryExcept>
          <Assign fromlineno="543" tolineno="543" lineno="543" targets="[&lt;AssName(rq) l.543 [bb.cooker] at Ox9d8b12c&gt;]" value="bb.runqueue.RunQueue(self, self.configuration.data, self.status, taskdata, runlist)">
            <AssName fromlineno="543" tolineno="543" lineno="543" name="rq"/>
            <CallFunc fromlineno="543" tolineno="543" lineno="543" func="Getattr(RunQueue)">
              <Getattr fromlineno="543" tolineno="543" lineno="543" attrname="RunQueue" expr="bb.runqueue">
                <Getattr fromlineno="543" tolineno="543" lineno="543" attrname="runqueue" expr="bb">
                  <Name fromlineno="543" tolineno="543" lineno="543" name="bb"/>
                </Getattr>
              </Getattr>
              <Name fromlineno="543" tolineno="543" lineno="543" name="self"/>
              <Getattr fromlineno="543" tolineno="543" lineno="543" attrname="data" expr="self.configuration">
                <Getattr fromlineno="543" tolineno="543" lineno="543" attrname="configuration" expr="self">
                  <Name fromlineno="543" tolineno="543" lineno="543" name="self"/>
                </Getattr>
              </Getattr>
              <Getattr fromlineno="543" tolineno="543" lineno="543" attrname="status" expr="self">
                <Name fromlineno="543" tolineno="543" lineno="543" name="self"/>
              </Getattr>
              <Name fromlineno="543" tolineno="543" lineno="543" name="taskdata"/>
              <Name fromlineno="543" tolineno="543" lineno="543" name="runlist"/>
            </CallFunc>
          </Assign>
          <Discard fromlineno="544" tolineno="544" lineno="544">
            <CallFunc fromlineno="544" tolineno="544" lineno="544" func="Getattr(prepare_runqueue)">
              <Getattr fromlineno="544" tolineno="544" lineno="544" attrname="prepare_runqueue" expr="rq">
                <Name fromlineno="544" tolineno="544" lineno="544" name="rq"/>
              </Getattr>
            </CallFunc>
          </Discard>
          <TryExcept fromlineno="545" tolineno="553" lineno="545">
            <Assign fromlineno="546" tolineno="546" lineno="546" targets="[&lt;AssName(failures) l.546 [bb.cooker] at Ox9d8b44c&gt;]" value="rq.execute_runqueue()">
              <AssName fromlineno="546" tolineno="546" lineno="546" name="failures"/>
              <CallFunc fromlineno="546" tolineno="546" lineno="546" func="Getattr(execute_runqueue)">
                <Getattr fromlineno="546" tolineno="546" lineno="546" attrname="execute_runqueue" expr="rq">
                  <Name fromlineno="546" tolineno="546" lineno="546" name="rq"/>
                </Getattr>
              </CallFunc>
            </Assign>
            <ExceptHandler fromlineno="547" tolineno="553" lineno="547">
              <Getattr fromlineno="547" tolineno="547" lineno="547" attrname="TaskFailure" expr="runqueue">
                <Name fromlineno="547" tolineno="547" lineno="547" name="runqueue"/>
              </Getattr>
              <AssName fromlineno="547" tolineno="547" lineno="547" name="fnids"/>
              <Assign fromlineno="548" tolineno="548" lineno="548" targets="[&lt;AssName(failures) l.548 [bb.cooker] at Ox9d8b64c&gt;]" value="0">
                <AssName fromlineno="548" tolineno="548" lineno="548" name="failures"/>
                <Const fromlineno="548" tolineno="548" lineno="548" type="int">0</Const>
              </Assign>
              <For fromlineno="549" tolineno="551" lineno="549">
                <AssName fromlineno="549" tolineno="549" lineno="549" name="fnid"/>
                <Name fromlineno="549" tolineno="549" lineno="549" name="fnids"/>
                <Discard fromlineno="550" tolineno="550" lineno="550">
                  <CallFunc fromlineno="550" tolineno="550" lineno="550" func="Getattr(error)">
                    <Getattr fromlineno="550" tolineno="550" lineno="550" attrname="error" expr="bb.msg">
                      <Getattr fromlineno="550" tolineno="550" lineno="550" attrname="msg" expr="bb">
                        <Name fromlineno="550" tolineno="550" lineno="550" name="bb"/>
                      </Getattr>
                    </Getattr>
                    <Getattr fromlineno="550" tolineno="550" lineno="550" attrname="Build" expr="bb.msg.domain">
                      <Getattr fromlineno="550" tolineno="550" lineno="550" attrname="domain" expr="bb.msg">
                        <Getattr fromlineno="550" tolineno="550" lineno="550" attrname="msg" expr="bb">
                          <Name fromlineno="550" tolineno="550" lineno="550" name="bb"/>
                        </Getattr>
                      </Getattr>
                    </Getattr>
                    <BinOp fromlineno="550" tolineno="550" lineno="550" op="%" left="&quot;'%s' failed&quot;" right="taskdata.fn_index[fnid]">
                      <Const fromlineno="550" tolineno="550" lineno="550" type="str">"'%s' failed"</Const>
                      <Subscript fromlineno="550" tolineno="550" lineno="550">
                        <Getattr fromlineno="550" tolineno="550" lineno="550" attrname="fn_index" expr="taskdata">
                          <Name fromlineno="550" tolineno="550" lineno="550" name="taskdata"/>
                        </Getattr>
                        <Index fromlineno="550" tolineno="550" lineno="None">
                          <Name fromlineno="550" tolineno="550" lineno="550" name="fnid"/>
                        </Index>
                      </Subscript>
                    </BinOp>
                  </CallFunc>
                </Discard>
                <Assign fromlineno="551" tolineno="551" lineno="551" targets="[&lt;AssName(failures) l.551 [bb.cooker] at Ox9d8b9ac&gt;]" value="(failures) + (1)">
                  <AssName fromlineno="551" tolineno="551" lineno="551" name="failures"/>
                  <BinOp fromlineno="551" tolineno="551" lineno="551" op="+" left="failures" right="1">
                    <Name fromlineno="551" tolineno="551" lineno="551" name="failures"/>
                    <Const fromlineno="551" tolineno="551" lineno="551" type="int">1</Const>
                  </BinOp>
                </Assign>
              </For>
              <Discard fromlineno="552" tolineno="552" lineno="552">
                <CallFunc fromlineno="552" tolineno="552" lineno="552" func="Getattr(fire)">
                  <Getattr fromlineno="552" tolineno="552" lineno="552" attrname="fire" expr="bb.event">
                    <Getattr fromlineno="552" tolineno="552" lineno="552" attrname="event" expr="bb">
                      <Name fromlineno="552" tolineno="552" lineno="552" name="bb"/>
                    </Getattr>
                  </Getattr>
                  <CallFunc fromlineno="552" tolineno="552" lineno="552" func="Getattr(BuildCompleted)">
                    <Getattr fromlineno="552" tolineno="552" lineno="552" attrname="BuildCompleted" expr="bb.event">
                      <Getattr fromlineno="552" tolineno="552" lineno="552" attrname="event" expr="bb">
                        <Name fromlineno="552" tolineno="552" lineno="552" name="bb"/>
                      </Getattr>
                    </Getattr>
                    <Name fromlineno="552" tolineno="552" lineno="552" name="buildname"/>
                    <Name fromlineno="552" tolineno="552" lineno="552" name="targets"/>
                    <Getattr fromlineno="552" tolineno="552" lineno="552" attrname="event_data" expr="self.configuration">
                      <Getattr fromlineno="552" tolineno="552" lineno="552" attrname="configuration" expr="self">
                        <Name fromlineno="552" tolineno="552" lineno="552" name="self"/>
                      </Getattr>
                    </Getattr>
                    <Name fromlineno="552" tolineno="552" lineno="552" name="failures"/>
                  </CallFunc>
                </CallFunc>
              </Discard>
              <Discard fromlineno="553" tolineno="553" lineno="553">
                <CallFunc fromlineno="553" tolineno="553" lineno="553" func="Getattr(exit)">
                  <Getattr fromlineno="553" tolineno="553" lineno="553" attrname="exit" expr="sys">
                    <Name fromlineno="553" tolineno="553" lineno="553" name="sys"/>
                  </Getattr>
                  <Const fromlineno="553" tolineno="553" lineno="553" type="int">1</Const>
                </CallFunc>
              </Discard>
            </ExceptHandler>
          </TryExcept>
          <Discard fromlineno="554" tolineno="554" lineno="554">
            <CallFunc fromlineno="554" tolineno="554" lineno="554" func="Getattr(fire)">
              <Getattr fromlineno="554" tolineno="554" lineno="554" attrname="fire" expr="bb.event">
                <Getattr fromlineno="554" tolineno="554" lineno="554" attrname="event" expr="bb">
                  <Name fromlineno="554" tolineno="554" lineno="554" name="bb"/>
                </Getattr>
              </Getattr>
              <CallFunc fromlineno="554" tolineno="554" lineno="554" func="Getattr(BuildCompleted)">
                <Getattr fromlineno="554" tolineno="554" lineno="554" attrname="BuildCompleted" expr="bb.event">
                  <Getattr fromlineno="554" tolineno="554" lineno="554" attrname="event" expr="bb">
                    <Name fromlineno="554" tolineno="554" lineno="554" name="bb"/>
                  </Getattr>
                </Getattr>
                <Name fromlineno="554" tolineno="554" lineno="554" name="buildname"/>
                <Name fromlineno="554" tolineno="554" lineno="554" name="targets"/>
                <Getattr fromlineno="554" tolineno="554" lineno="554" attrname="event_data" expr="self.configuration">
                  <Getattr fromlineno="554" tolineno="554" lineno="554" attrname="configuration" expr="self">
                    <Name fromlineno="554" tolineno="554" lineno="554" name="self"/>
                  </Getattr>
                </Getattr>
                <Name fromlineno="554" tolineno="554" lineno="554" name="failures"/>
              </CallFunc>
            </CallFunc>
          </Discard>
          <Discard fromlineno="556" tolineno="556" lineno="556">
            <CallFunc fromlineno="556" tolineno="556" lineno="556" func="Getattr(exit)">
              <Getattr fromlineno="556" tolineno="556" lineno="556" attrname="exit" expr="sys">
                <Name fromlineno="556" tolineno="556" lineno="556" name="sys"/>
              </Getattr>
              <Const fromlineno="556" tolineno="556" lineno="556" type="int">0</Const>
            </CallFunc>
          </Discard>
        </Function>
        <Function fromlineno="558" tolineno="585" lineno="558">
          <Arguments fromlineno="558" tolineno="558" lineno="None" format_args="self">
            <AssName fromlineno="558" tolineno="558" lineno="558" name="self"/>
          </Arguments>
          <Import fromlineno="560" tolineno="560" lineno="560">
            <ImportName name="platform"/>
          </Import>
          <If fromlineno="561" tolineno="570" lineno="561">
            <Compare fromlineno="561" tolineno="561" lineno="561" op="('in', &lt;List(list) l.561 [bb.cooker] at Ox9d8f24c&gt;)">
              <CallFunc fromlineno="561" tolineno="561" lineno="561" func="Getattr(machine)">
                <Getattr fromlineno="561" tolineno="561" lineno="561" attrname="machine" expr="platform">
                  <Name fromlineno="561" tolineno="561" lineno="561" name="platform"/>
                </Getattr>
              </CallFunc>
              <List fromlineno="561" tolineno="561" lineno="561">
                <Const fromlineno="561" tolineno="561" lineno="561" type="str">'i386'</Const>
                <Const fromlineno="561" tolineno="561" lineno="561" type="str">'i486'</Const>
                <Const fromlineno="561" tolineno="561" lineno="561" type="str">'i586'</Const>
                <Const fromlineno="561" tolineno="561" lineno="561" type="str">'i686'</Const>
              </List>
            </Compare>
            <If fromlineno="562" tolineno="570" lineno="562">
              <UnaryOp fromlineno="562" tolineno="562" lineno="562">
                <Getattr fromlineno="562" tolineno="562" lineno="562" attrname="disable_psyco" expr="self.configuration">
                  <Getattr fromlineno="562" tolineno="562" lineno="562" attrname="configuration" expr="self">
                    <Name fromlineno="562" tolineno="562" lineno="562" name="self"/>
                  </Getattr>
                </Getattr>
              </UnaryOp>
              <TryExcept fromlineno="563" tolineno="568" lineno="563">
                <Import fromlineno="564" tolineno="564" lineno="564">
                  <ImportName name="psyco"/>
                </Import>
                <ExceptHandler fromlineno="565" tolineno="566" lineno="565">
                  <Name fromlineno="565" tolineno="565" lineno="565" name="ImportError"/>
                  <Discard fromlineno="566" tolineno="566" lineno="566">
                    <CallFunc fromlineno="566" tolineno="566" lineno="566" func="Getattr(note)">
                      <Getattr fromlineno="566" tolineno="566" lineno="566" attrname="note" expr="bb.msg">
                        <Getattr fromlineno="566" tolineno="566" lineno="566" attrname="msg" expr="bb">
                          <Name fromlineno="566" tolineno="566" lineno="566" name="bb"/>
                        </Getattr>
                      </Getattr>
                      <Const fromlineno="566" tolineno="566" lineno="566" type="int">1</Const>
                      <Getattr fromlineno="566" tolineno="566" lineno="566" attrname="Collection" expr="bb.msg.domain">
                        <Getattr fromlineno="566" tolineno="566" lineno="566" attrname="domain" expr="bb.msg">
                          <Getattr fromlineno="566" tolineno="566" lineno="566" attrname="msg" expr="bb">
                            <Name fromlineno="566" tolineno="566" lineno="566" name="bb"/>
                          </Getattr>
                        </Getattr>
                      </Getattr>
                      <Const fromlineno="566" tolineno="566" lineno="566" type="str">'Psyco JIT Compiler (http://psyco.sf.net) not available. Install it to increase performance.'</Const>
                    </CallFunc>
                  </Discard>
                </ExceptHandler>
                <Discard fromlineno="568" tolineno="568" lineno="568">
                  <CallFunc fromlineno="568" tolineno="568" lineno="568" func="Getattr(bind)">
                    <Getattr fromlineno="568" tolineno="568" lineno="568" attrname="bind" expr="psyco">
                      <Name fromlineno="568" tolineno="568" lineno="568" name="psyco"/>
                    </Getattr>
                    <Getattr fromlineno="568" tolineno="568" lineno="568" attrname="parse_bbfiles" expr="self">
                      <Name fromlineno="568" tolineno="568" lineno="568" name="self"/>
                    </Getattr>
                  </CallFunc>
                </Discard>
              </TryExcept>
              <Discard fromlineno="570" tolineno="570" lineno="570">
                <CallFunc fromlineno="570" tolineno="570" lineno="570" func="Getattr(note)">
                  <Getattr fromlineno="570" tolineno="570" lineno="570" attrname="note" expr="bb.msg">
                    <Getattr fromlineno="570" tolineno="570" lineno="570" attrname="msg" expr="bb">
                      <Name fromlineno="570" tolineno="570" lineno="570" name="bb"/>
                    </Getattr>
                  </Getattr>
                  <Const fromlineno="570" tolineno="570" lineno="570" type="int">1</Const>
                  <Getattr fromlineno="570" tolineno="570" lineno="570" attrname="Collection" expr="bb.msg.domain">
                    <Getattr fromlineno="570" tolineno="570" lineno="570" attrname="domain" expr="bb.msg">
                      <Getattr fromlineno="570" tolineno="570" lineno="570" attrname="msg" expr="bb">
                        <Name fromlineno="570" tolineno="570" lineno="570" name="bb"/>
                      </Getattr>
                    </Getattr>
                  </Getattr>
                  <Const fromlineno="570" tolineno="570" lineno="570" type="str">'You have disabled Psyco. This decreases performance.'</Const>
                </CallFunc>
              </Discard>
            </If>
          </If>
          <Assign fromlineno="572" tolineno="572" lineno="572" targets="[&lt;AssAttr(status) l.572 [bb.cooker] at Ox9d8f9ac&gt;]" value="bb.cache.CacheData()">
            <AssAttr fromlineno="572" tolineno="572" lineno="572" attrname="status" expr="self">
              <Name fromlineno="572" tolineno="572" lineno="572" name="self"/>
            </AssAttr>
            <CallFunc fromlineno="572" tolineno="572" lineno="572" func="Getattr(CacheData)">
              <Getattr fromlineno="572" tolineno="572" lineno="572" attrname="CacheData" expr="bb.cache">
                <Getattr fromlineno="572" tolineno="572" lineno="572" attrname="cache" expr="bb">
                  <Name fromlineno="572" tolineno="572" lineno="572" name="bb"/>
                </Getattr>
              </Getattr>
            </CallFunc>
          </Assign>
          <Assign fromlineno="574" tolineno="574" lineno="574" targets="[&lt;AssName(ignore) l.574 [bb.cooker] at Ox9d8faec&gt;]" value="(bb.data.getVar('ASSUME_PROVIDED', self.configuration.data, 1)) or ('')">
            <AssName fromlineno="574" tolineno="574" lineno="574" name="ignore"/>
            <BoolOp fromlineno="574" tolineno="574" lineno="574" op="or" values="bb.data.getVar('ASSUME_PROVIDED', self.configuration.data, 1),'',">
              <CallFunc fromlineno="574" tolineno="574" lineno="574" func="Getattr(getVar)">
                <Getattr fromlineno="574" tolineno="574" lineno="574" attrname="getVar" expr="bb.data">
                  <Getattr fromlineno="574" tolineno="574" lineno="574" attrname="data" expr="bb">
                    <Name fromlineno="574" tolineno="574" lineno="574" name="bb"/>
                  </Getattr>
                </Getattr>
                <Const fromlineno="574" tolineno="574" lineno="574" type="str">'ASSUME_PROVIDED'</Const>
                <Getattr fromlineno="574" tolineno="574" lineno="574" attrname="data" expr="self.configuration">
                  <Getattr fromlineno="574" tolineno="574" lineno="574" attrname="configuration" expr="self">
                    <Name fromlineno="574" tolineno="574" lineno="574" name="self"/>
                  </Getattr>
                </Getattr>
                <Const fromlineno="574" tolineno="574" lineno="574" type="int">1</Const>
              </CallFunc>
              <Const fromlineno="574" tolineno="574" lineno="574" type="str">''</Const>
            </BoolOp>
          </Assign>
          <Assign fromlineno="575" tolineno="575" lineno="575" targets="[&lt;AssAttr(ignored_dependencies) l.575 [bb.cooker] at Ox9d8fd0c&gt;]" value="set(ignore.split())">
            <AssAttr fromlineno="575" tolineno="575" lineno="575" attrname="ignored_dependencies" expr="self.status">
              <Getattr fromlineno="575" tolineno="575" lineno="575" attrname="status" expr="self">
                <Name fromlineno="575" tolineno="575" lineno="575" name="self"/>
              </Getattr>
            </AssAttr>
            <CallFunc fromlineno="575" tolineno="575" lineno="575" func="Name(set)">
              <Name fromlineno="575" tolineno="575" lineno="575" name="set"/>
              <CallFunc fromlineno="575" tolineno="575" lineno="575" func="Getattr(split)">
                <Getattr fromlineno="575" tolineno="575" lineno="575" attrname="split" expr="ignore">
                  <Name fromlineno="575" tolineno="575" lineno="575" name="ignore"/>
                </Getattr>
              </CallFunc>
            </CallFunc>
          </Assign>
          <Discard fromlineno="577" tolineno="577" lineno="577">
            <CallFunc fromlineno="577" tolineno="577" lineno="577" func="Getattr(handleCollections)">
              <Getattr fromlineno="577" tolineno="577" lineno="577" attrname="handleCollections" expr="self">
                <Name fromlineno="577" tolineno="577" lineno="577" name="self"/>
              </Getattr>
              <CallFunc fromlineno="577" tolineno="577" lineno="577" func="Getattr(getVar)">
                <Getattr fromlineno="577" tolineno="577" lineno="577" attrname="getVar" expr="bb.data">
                  <Getattr fromlineno="577" tolineno="577" lineno="577" attrname="data" expr="bb">
                    <Name fromlineno="577" tolineno="577" lineno="577" name="bb"/>
                  </Getattr>
                </Getattr>
                <Const fromlineno="577" tolineno="577" lineno="577" type="str">'BBFILE_COLLECTIONS'</Const>
                <Getattr fromlineno="577" tolineno="577" lineno="577" attrname="data" expr="self.configuration">
                  <Getattr fromlineno="577" tolineno="577" lineno="577" attrname="configuration" expr="self">
                    <Name fromlineno="577" tolineno="577" lineno="577" name="self"/>
                  </Getattr>
                </Getattr>
                <Const fromlineno="577" tolineno="577" lineno="577" type="int">1</Const>
              </CallFunc>
            </CallFunc>
          </Discard>
          <Discard fromlineno="579" tolineno="579" lineno="579">
            <CallFunc fromlineno="579" tolineno="579" lineno="579" func="Getattr(debug)">
              <Getattr fromlineno="579" tolineno="579" lineno="579" attrname="debug" expr="bb.msg">
                <Getattr fromlineno="579" tolineno="579" lineno="579" attrname="msg" expr="bb">
                  <Name fromlineno="579" tolineno="579" lineno="579" name="bb"/>
                </Getattr>
              </Getattr>
              <Const fromlineno="579" tolineno="579" lineno="579" type="int">1</Const>
              <Getattr fromlineno="579" tolineno="579" lineno="579" attrname="Collection" expr="bb.msg.domain">
                <Getattr fromlineno="579" tolineno="579" lineno="579" attrname="domain" expr="bb.msg">
                  <Getattr fromlineno="579" tolineno="579" lineno="579" attrname="msg" expr="bb">
                    <Name fromlineno="579" tolineno="579" lineno="579" name="bb"/>
                  </Getattr>
                </Getattr>
              </Getattr>
              <Const fromlineno="579" tolineno="579" lineno="579" type="str">'collecting .bb files'</Const>
            </CallFunc>
          </Discard>
          <Assign fromlineno="580" tolineno="580" lineno="580" targets="[&lt;Tuple(tuple) l.580 [bb.cooker] at Ox9d9320c&gt;]" value="self.collect_bbfiles()">
            <Tuple fromlineno="580" tolineno="580" lineno="580">
              <AssName fromlineno="580" tolineno="580" lineno="580" name="filelist"/>
              <AssName fromlineno="580" tolineno="580" lineno="580" name="masked"/>
            </Tuple>
            <CallFunc fromlineno="580" tolineno="580" lineno="580" func="Getattr(collect_bbfiles)">
              <Getattr fromlineno="580" tolineno="580" lineno="580" attrname="collect_bbfiles" expr="self">
                <Name fromlineno="580" tolineno="580" lineno="580" name="self"/>
              </Getattr>
            </CallFunc>
          </Assign>
          <Discard fromlineno="581" tolineno="581" lineno="581">
            <CallFunc fromlineno="581" tolineno="581" lineno="581" func="Getattr(renameVar)">
              <Getattr fromlineno="581" tolineno="581" lineno="581" attrname="renameVar" expr="bb.data">
                <Getattr fromlineno="581" tolineno="581" lineno="581" attrname="data" expr="bb">
                  <Name fromlineno="581" tolineno="581" lineno="581" name="bb"/>
                </Getattr>
              </Getattr>
              <Const fromlineno="581" tolineno="581" lineno="581" type="str">'__depends'</Const>
              <Const fromlineno="581" tolineno="581" lineno="581" type="str">'__base_depends'</Const>
              <Getattr fromlineno="581" tolineno="581" lineno="581" attrname="data" expr="self.configuration">
                <Getattr fromlineno="581" tolineno="581" lineno="581" attrname="configuration" expr="self">
                  <Name fromlineno="581" tolineno="581" lineno="581" name="self"/>
                </Getattr>
              </Getattr>
            </CallFunc>
          </Discard>
          <Discard fromlineno="582" tolineno="582" lineno="582">
            <CallFunc fromlineno="582" tolineno="582" lineno="582" func="Getattr(parse_bbfiles)">
              <Getattr fromlineno="582" tolineno="582" lineno="582" attrname="parse_bbfiles" expr="self">
                <Name fromlineno="582" tolineno="582" lineno="582" name="self"/>
              </Getattr>
              <Name fromlineno="582" tolineno="582" lineno="582" name="filelist"/>
              <Name fromlineno="582" tolineno="582" lineno="582" name="masked"/>
              <Getattr fromlineno="582" tolineno="582" lineno="582" attrname="myProgressCallback" expr="self">
                <Name fromlineno="582" tolineno="582" lineno="582" name="self"/>
              </Getattr>
            </CallFunc>
          </Discard>
          <Discard fromlineno="583" tolineno="583" lineno="583">
            <CallFunc fromlineno="583" tolineno="583" lineno="583" func="Getattr(debug)">
              <Getattr fromlineno="583" tolineno="583" lineno="583" attrname="debug" expr="bb.msg">
                <Getattr fromlineno="583" tolineno="583" lineno="583" attrname="msg" expr="bb">
                  <Name fromlineno="583" tolineno="583" lineno="583" name="bb"/>
                </Getattr>
              </Getattr>
              <Const fromlineno="583" tolineno="583" lineno="583" type="int">1</Const>
              <Getattr fromlineno="583" tolineno="583" lineno="583" attrname="Collection" expr="bb.msg.domain">
                <Getattr fromlineno="583" tolineno="583" lineno="583" attrname="domain" expr="bb.msg">
                  <Getattr fromlineno="583" tolineno="583" lineno="583" attrname="msg" expr="bb">
                    <Name fromlineno="583" tolineno="583" lineno="583" name="bb"/>
                  </Getattr>
                </Getattr>
              </Getattr>
              <Const fromlineno="583" tolineno="583" lineno="583" type="str">'parsing complete'</Const>
            </CallFunc>
          </Discard>
          <Discard fromlineno="585" tolineno="585" lineno="585">
            <CallFunc fromlineno="585" tolineno="585" lineno="585" func="Getattr(buildDepgraph)">
              <Getattr fromlineno="585" tolineno="585" lineno="585" attrname="buildDepgraph" expr="self">
                <Name fromlineno="585" tolineno="585" lineno="585" name="self"/>
              </Getattr>
            </CallFunc>
          </Discard>
        </Function>
        <Function fromlineno="587" tolineno="643" lineno="587">
          <Arguments fromlineno="587" tolineno="587" lineno="None" format_args="self">
            <AssName fromlineno="587" tolineno="587" lineno="587" name="self"/>
          </Arguments>
          <Discard fromlineno="595" tolineno="595" lineno="595">
            <CallFunc fromlineno="595" tolineno="595" lineno="595" func="Getattr(empty_environment)">
              <Getattr fromlineno="595" tolineno="595" lineno="595" attrname="empty_environment" expr="bb.utils">
                <Getattr fromlineno="595" tolineno="595" lineno="595" attrname="utils" expr="bb">
                  <Name fromlineno="595" tolineno="595" lineno="595" name="bb"/>
                </Getattr>
              </Getattr>
            </CallFunc>
          </Discard>
          <If fromlineno="597" tolineno="599" lineno="597">
            <Getattr fromlineno="597" tolineno="597" lineno="597" attrname="show_environment" expr="self.configuration">
              <Getattr fromlineno="597" tolineno="597" lineno="597" attrname="configuration" expr="self">
                <Name fromlineno="597" tolineno="597" lineno="597" name="self"/>
              </Getattr>
            </Getattr>
            <Discard fromlineno="598" tolineno="598" lineno="598">
              <CallFunc fromlineno="598" tolineno="598" lineno="598" func="Getattr(showEnvironment)">
                <Getattr fromlineno="598" tolineno="598" lineno="598" attrname="showEnvironment" expr="self">
                  <Name fromlineno="598" tolineno="598" lineno="598" name="self"/>
                </Getattr>
                <Getattr fromlineno="598" tolineno="598" lineno="598" attrname="buildfile" expr="self.configuration">
                  <Getattr fromlineno="598" tolineno="598" lineno="598" attrname="configuration" expr="self">
                    <Name fromlineno="598" tolineno="598" lineno="598" name="self"/>
                  </Getattr>
                </Getattr>
                <Getattr fromlineno="598" tolineno="598" lineno="598" attrname="pkgs_to_build" expr="self.configuration">
                  <Getattr fromlineno="598" tolineno="598" lineno="598" attrname="configuration" expr="self">
                    <Name fromlineno="598" tolineno="598" lineno="598" name="self"/>
                  </Getattr>
                </Getattr>
              </CallFunc>
            </Discard>
            <Discard fromlineno="599" tolineno="599" lineno="599">
              <CallFunc fromlineno="599" tolineno="599" lineno="599" func="Getattr(exit)">
                <Getattr fromlineno="599" tolineno="599" lineno="599" attrname="exit" expr="sys">
                  <Name fromlineno="599" tolineno="599" lineno="599" name="sys"/>
                </Getattr>
                <Const fromlineno="599" tolineno="599" lineno="599" type="int">0</Const>
              </CallFunc>
            </Discard>
          </If>
          <Discard fromlineno="601" tolineno="601" lineno="601">
            <CallFunc fromlineno="601" tolineno="601" lineno="601" func="Getattr(buildSetVars)">
              <Getattr fromlineno="601" tolineno="601" lineno="601" attrname="buildSetVars" expr="self">
                <Name fromlineno="601" tolineno="601" lineno="601" name="self"/>
              </Getattr>
            </CallFunc>
          </Discard>
          <If fromlineno="603" tolineno="604" lineno="603">
            <Getattr fromlineno="603" tolineno="603" lineno="603" attrname="interactive" expr="self.configuration">
              <Getattr fromlineno="603" tolineno="603" lineno="603" attrname="configuration" expr="self">
                <Name fromlineno="603" tolineno="603" lineno="603" name="self"/>
              </Getattr>
            </Getattr>
            <Discard fromlineno="604" tolineno="604" lineno="604">
              <CallFunc fromlineno="604" tolineno="604" lineno="604" func="Getattr(interactiveMode)">
                <Getattr fromlineno="604" tolineno="604" lineno="604" attrname="interactiveMode" expr="self">
                  <Name fromlineno="604" tolineno="604" lineno="604" name="self"/>
                </Getattr>
              </CallFunc>
            </Discard>
          </If>
          <If fromlineno="606" tolineno="609" lineno="606">
            <Compare fromlineno="606" tolineno="606" lineno="606" op="('is not', &lt;Const(NoneType) l.606 [bb.cooker] at Ox9d93f2c&gt;)">
              <Getattr fromlineno="606" tolineno="606" lineno="606" attrname="buildfile" expr="self.configuration">
                <Getattr fromlineno="606" tolineno="606" lineno="606" attrname="configuration" expr="self">
                  <Name fromlineno="606" tolineno="606" lineno="606" name="self"/>
                </Getattr>
              </Getattr>
              <Const fromlineno="606" tolineno="606" lineno="606" type="NoneType">None</Const>
            </Compare>
            <If fromlineno="607" tolineno="608" lineno="607">
              <UnaryOp fromlineno="607" tolineno="607" lineno="607">
                <CallFunc fromlineno="607" tolineno="607" lineno="607" func="Getattr(buildFile)">
                  <Getattr fromlineno="607" tolineno="607" lineno="607" attrname="buildFile" expr="self">
                    <Name fromlineno="607" tolineno="607" lineno="607" name="self"/>
                  </Getattr>
                  <Getattr fromlineno="607" tolineno="607" lineno="607" attrname="buildfile" expr="self.configuration">
                    <Getattr fromlineno="607" tolineno="607" lineno="607" attrname="configuration" expr="self">
                      <Name fromlineno="607" tolineno="607" lineno="607" name="self"/>
                    </Getattr>
                  </Getattr>
                </CallFunc>
              </UnaryOp>
              <Discard fromlineno="608" tolineno="608" lineno="608">
                <CallFunc fromlineno="608" tolineno="608" lineno="608" func="Getattr(exit)">
                  <Getattr fromlineno="608" tolineno="608" lineno="608" attrname="exit" expr="sys">
                    <Name fromlineno="608" tolineno="608" lineno="608" name="sys"/>
                  </Getattr>
                  <Const fromlineno="608" tolineno="608" lineno="608" type="int">1</Const>
                </CallFunc>
              </Discard>
            </If>
            <Discard fromlineno="609" tolineno="609" lineno="609">
              <CallFunc fromlineno="609" tolineno="609" lineno="609" func="Getattr(exit)">
                <Getattr fromlineno="609" tolineno="609" lineno="609" attrname="exit" expr="sys">
                  <Name fromlineno="609" tolineno="609" lineno="609" name="sys"/>
                </Getattr>
                <Const fromlineno="609" tolineno="609" lineno="609" type="int">0</Const>
              </CallFunc>
            </Discard>
          </If>
          <Discard fromlineno="612" tolineno="612" lineno="612">
            <CallFunc fromlineno="612" tolineno="612" lineno="612" func="Getattr(updateCache)">
              <Getattr fromlineno="612" tolineno="612" lineno="612" attrname="updateCache" expr="self">
                <Name fromlineno="612" tolineno="612" lineno="612" name="self"/>
              </Getattr>
            </CallFunc>
          </Discard>
          <If fromlineno="614" tolineno="616" lineno="614">
            <Getattr fromlineno="614" tolineno="614" lineno="614" attrname="parse_only" expr="self.configuration">
              <Getattr fromlineno="614" tolineno="614" lineno="614" attrname="configuration" expr="self">
                <Name fromlineno="614" tolineno="614" lineno="614" name="self"/>
              </Getattr>
            </Getattr>
            <Discard fromlineno="615" tolineno="615" lineno="615">
              <CallFunc fromlineno="615" tolineno="615" lineno="615" func="Getattr(note)">
                <Getattr fromlineno="615" tolineno="615" lineno="615" attrname="note" expr="bb.msg">
                  <Getattr fromlineno="615" tolineno="615" lineno="615" attrname="msg" expr="bb">
                    <Name fromlineno="615" tolineno="615" lineno="615" name="bb"/>
                  </Getattr>
                </Getattr>
                <Const fromlineno="615" tolineno="615" lineno="615" type="int">1</Const>
                <Getattr fromlineno="615" tolineno="615" lineno="615" attrname="Collection" expr="bb.msg.domain">
                  <Getattr fromlineno="615" tolineno="615" lineno="615" attrname="domain" expr="bb.msg">
                    <Getattr fromlineno="615" tolineno="615" lineno="615" attrname="msg" expr="bb">
                      <Name fromlineno="615" tolineno="615" lineno="615" name="bb"/>
                    </Getattr>
                  </Getattr>
                </Getattr>
                <Const fromlineno="615" tolineno="615" lineno="615" type="str">'Requested parsing .bb files only.  Exiting.'</Const>
              </CallFunc>
            </Discard>
            <Return fromlineno="616" tolineno="616" lineno="616">
              <Const fromlineno="616" tolineno="616" lineno="616" type="int">0</Const>
            </Return>
          </If>
          <Assign fromlineno="618" tolineno="618" lineno="618" targets="[&lt;AssName(pkgs_to_build) l.618 [bb.cooker] at Ox9d985ec&gt;]" value="self.configuration.pkgs_to_build">
            <AssName fromlineno="618" tolineno="618" lineno="618" name="pkgs_to_build"/>
            <Getattr fromlineno="618" tolineno="618" lineno="618" attrname="pkgs_to_build" expr="self.configuration">
              <Getattr fromlineno="618" tolineno="618" lineno="618" attrname="configuration" expr="self">
                <Name fromlineno="618" tolineno="618" lineno="618" name="self"/>
              </Getattr>
            </Getattr>
          </Assign>
          <If fromlineno="620" tolineno="623" lineno="620">
            <BoolOp fromlineno="620" tolineno="620" lineno="620" op="and" values="len(pkgs_to_build) == 0,not self.configuration.show_versions,">
              <Compare fromlineno="620" tolineno="620" lineno="620" op="('==', &lt;Const(int) l.620 [bb.cooker] at Ox9d987ec&gt;)">
                <CallFunc fromlineno="620" tolineno="620" lineno="620" func="Name(len)">
                  <Name fromlineno="620" tolineno="620" lineno="620" name="len"/>
                  <Name fromlineno="620" tolineno="620" lineno="620" name="pkgs_to_build"/>
                </CallFunc>
                <Const fromlineno="620" tolineno="620" lineno="620" type="int">0</Const>
              </Compare>
              <UnaryOp fromlineno="620" tolineno="620" lineno="620">
                <Getattr fromlineno="620" tolineno="620" lineno="620" attrname="show_versions" expr="self.configuration">
                  <Getattr fromlineno="620" tolineno="620" lineno="620" attrname="configuration" expr="self">
                    <Name fromlineno="620" tolineno="620" lineno="620" name="self"/>
                  </Getattr>
                </Getattr>
              </UnaryOp>
            </BoolOp>
            <Print fromlineno="621" tolineno="621" lineno="621">
              <Const fromlineno="621" tolineno="621" lineno="621" type="str">"Nothing to do.  Use 'bitbake world' to build everything, or run 'bitbake --help'"</Const>
            </Print>
            <Print fromlineno="622" tolineno="622" lineno="622">
              <Const fromlineno="622" tolineno="622" lineno="622" type="str">'for usage information.'</Const>
            </Print>
            <Discard fromlineno="623" tolineno="623" lineno="623">
              <CallFunc fromlineno="623" tolineno="623" lineno="623" func="Getattr(exit)">
                <Getattr fromlineno="623" tolineno="623" lineno="623" attrname="exit" expr="sys">
                  <Name fromlineno="623" tolineno="623" lineno="623" name="sys"/>
                </Getattr>
                <Const fromlineno="623" tolineno="623" lineno="623" type="int">0</Const>
              </CallFunc>
            </Discard>
          </If>
          <TryExcept fromlineno="625" tolineno="643" lineno="625">
            <If fromlineno="626" tolineno="628" lineno="626">
              <Getattr fromlineno="626" tolineno="626" lineno="626" attrname="show_versions" expr="self.configuration">
                <Getattr fromlineno="626" tolineno="626" lineno="626" attrname="configuration" expr="self">
                  <Name fromlineno="626" tolineno="626" lineno="626" name="self"/>
                </Getattr>
              </Getattr>
              <Discard fromlineno="627" tolineno="627" lineno="627">
                <CallFunc fromlineno="627" tolineno="627" lineno="627" func="Getattr(showVersions)">
                  <Getattr fromlineno="627" tolineno="627" lineno="627" attrname="showVersions" expr="self">
                    <Name fromlineno="627" tolineno="627" lineno="627" name="self"/>
                  </Getattr>
                </CallFunc>
              </Discard>
              <Discard fromlineno="628" tolineno="628" lineno="628">
                <CallFunc fromlineno="628" tolineno="628" lineno="628" func="Getattr(exit)">
                  <Getattr fromlineno="628" tolineno="628" lineno="628" attrname="exit" expr="sys">
                    <Name fromlineno="628" tolineno="628" lineno="628" name="sys"/>
                  </Getattr>
                  <Const fromlineno="628" tolineno="628" lineno="628" type="int">0</Const>
                </CallFunc>
              </Discard>
            </If>
            <If fromlineno="629" tolineno="633" lineno="629">
              <Compare fromlineno="629" tolineno="629" lineno="629" op="('in', &lt;Name(pkgs_to_build) l.629 [bb.cooker] at Ox9d98d4c&gt;)">
                <Const fromlineno="629" tolineno="629" lineno="629" type="str">'world'</Const>
                <Name fromlineno="629" tolineno="629" lineno="629" name="pkgs_to_build"/>
              </Compare>
              <Discard fromlineno="630" tolineno="630" lineno="630">
                <CallFunc fromlineno="630" tolineno="630" lineno="630" func="Getattr(buildWorldTargetList)">
                  <Getattr fromlineno="630" tolineno="630" lineno="630" attrname="buildWorldTargetList" expr="self">
                    <Name fromlineno="630" tolineno="630" lineno="630" name="self"/>
                  </Getattr>
                </CallFunc>
              </Discard>
              <Discard fromlineno="631" tolineno="631" lineno="631">
                <CallFunc fromlineno="631" tolineno="631" lineno="631" func="Getattr(remove)">
                  <Getattr fromlineno="631" tolineno="631" lineno="631" attrname="remove" expr="pkgs_to_build">
                    <Name fromlineno="631" tolineno="631" lineno="631" name="pkgs_to_build"/>
                  </Getattr>
                  <Const fromlineno="631" tolineno="631" lineno="631" type="str">'world'</Const>
                </CallFunc>
              </Discard>
              <For fromlineno="632" tolineno="633" lineno="632">
                <AssName fromlineno="632" tolineno="632" lineno="632" name="t"/>
                <Getattr fromlineno="632" tolineno="632" lineno="632" attrname="world_target" expr="self.status">
                  <Getattr fromlineno="632" tolineno="632" lineno="632" attrname="status" expr="self">
                    <Name fromlineno="632" tolineno="632" lineno="632" name="self"/>
                  </Getattr>
                </Getattr>
                <Discard fromlineno="633" tolineno="633" lineno="633">
                  <CallFunc fromlineno="633" tolineno="633" lineno="633" func="Getattr(append)">
                    <Getattr fromlineno="633" tolineno="633" lineno="633" attrname="append" expr="pkgs_to_build">
                      <Name fromlineno="633" tolineno="633" lineno="633" name="pkgs_to_build"/>
                    </Getattr>
                    <Name fromlineno="633" tolineno="633" lineno="633" name="t"/>
                  </CallFunc>
                </Discard>
              </For>
            </If>
            <If fromlineno="635" tolineno="637" lineno="635">
              <Getattr fromlineno="635" tolineno="635" lineno="635" attrname="dot_graph" expr="self.configuration">
                <Getattr fromlineno="635" tolineno="635" lineno="635" attrname="configuration" expr="self">
                  <Name fromlineno="635" tolineno="635" lineno="635" name="self"/>
                </Getattr>
              </Getattr>
              <Discard fromlineno="636" tolineno="636" lineno="636">
                <CallFunc fromlineno="636" tolineno="636" lineno="636" func="Getattr(generateDotGraph)">
                  <Getattr fromlineno="636" tolineno="636" lineno="636" attrname="generateDotGraph" expr="self">
                    <Name fromlineno="636" tolineno="636" lineno="636" name="self"/>
                  </Getattr>
                  <Name fromlineno="636" tolineno="636" lineno="636" name="pkgs_to_build"/>
                  <Getattr fromlineno="636" tolineno="636" lineno="636" attrname="ignored_dot_deps" expr="self.configuration">
                    <Getattr fromlineno="636" tolineno="636" lineno="636" attrname="configuration" expr="self">
                      <Name fromlineno="636" tolineno="636" lineno="636" name="self"/>
                    </Getattr>
                  </Getattr>
                </CallFunc>
              </Discard>
              <Discard fromlineno="637" tolineno="637" lineno="637">
                <CallFunc fromlineno="637" tolineno="637" lineno="637" func="Getattr(exit)">
                  <Getattr fromlineno="637" tolineno="637" lineno="637" attrname="exit" expr="sys">
                    <Name fromlineno="637" tolineno="637" lineno="637" name="sys"/>
                  </Getattr>
                  <Const fromlineno="637" tolineno="637" lineno="637" type="int">0</Const>
                </CallFunc>
              </Discard>
            </If>
            <Return fromlineno="639" tolineno="639" lineno="639">
              <CallFunc fromlineno="639" tolineno="639" lineno="639" func="Getattr(buildTargets)">
                <Getattr fromlineno="639" tolineno="639" lineno="639" attrname="buildTargets" expr="self">
                  <Name fromlineno="639" tolineno="639" lineno="639" name="self"/>
                </Getattr>
                <Name fromlineno="639" tolineno="639" lineno="639" name="pkgs_to_build"/>
              </CallFunc>
            </Return>
            <ExceptHandler fromlineno="641" tolineno="643" lineno="641">
              <Name fromlineno="641" tolineno="641" lineno="641" name="KeyboardInterrupt"/>
              <Discard fromlineno="642" tolineno="642" lineno="642">
                <CallFunc fromlineno="642" tolineno="642" lineno="642" func="Getattr(note)">
                  <Getattr fromlineno="642" tolineno="642" lineno="642" attrname="note" expr="bb.msg">
                    <Getattr fromlineno="642" tolineno="642" lineno="642" attrname="msg" expr="bb">
                      <Name fromlineno="642" tolineno="642" lineno="642" name="bb"/>
                    </Getattr>
                  </Getattr>
                  <Const fromlineno="642" tolineno="642" lineno="642" type="int">1</Const>
                  <Getattr fromlineno="642" tolineno="642" lineno="642" attrname="Collection" expr="bb.msg.domain">
                    <Getattr fromlineno="642" tolineno="642" lineno="642" attrname="domain" expr="bb.msg">
                      <Getattr fromlineno="642" tolineno="642" lineno="642" attrname="msg" expr="bb">
                        <Name fromlineno="642" tolineno="642" lineno="642" name="bb"/>
                      </Getattr>
                    </Getattr>
                  </Getattr>
                  <Const fromlineno="642" tolineno="642" lineno="642" type="str">'KeyboardInterrupt - Build not completed.'</Const>
                </CallFunc>
              </Discard>
              <Discard fromlineno="643" tolineno="643" lineno="643">
                <CallFunc fromlineno="643" tolineno="643" lineno="643" func="Getattr(exit)">
                  <Getattr fromlineno="643" tolineno="643" lineno="643" attrname="exit" expr="sys">
                    <Name fromlineno="643" tolineno="643" lineno="643" name="sys"/>
                  </Getattr>
                  <Const fromlineno="643" tolineno="643" lineno="643" type="int">1</Const>
                </CallFunc>
              </Discard>
            </ExceptHandler>
          </TryExcept>
        </Function>
        <Function fromlineno="645" tolineno="653" lineno="645">
          <Arguments fromlineno="645" tolineno="645" lineno="None" format_args="self, path=os.getcwd()">
            <AssName fromlineno="645" tolineno="645" lineno="645" name="self"/>
            <AssName fromlineno="645" tolineno="645" lineno="645" name="path"/>
            <CallFunc fromlineno="645" tolineno="645" lineno="645" func="Getattr(getcwd)">
              <Getattr fromlineno="645" tolineno="645" lineno="645" attrname="getcwd" expr="os">
                <Name fromlineno="645" tolineno="645" lineno="645" name="os"/>
              </Getattr>
            </CallFunc>
          </Arguments>
          <Assign fromlineno="647" tolineno="647" lineno="647" targets="[&lt;AssName(contents) l.647 [bb.cooker] at Ox9d9c8cc&gt;]" value="os.listdir(path)">
            <AssName fromlineno="647" tolineno="647" lineno="647" name="contents"/>
            <CallFunc fromlineno="647" tolineno="647" lineno="647" func="Getattr(listdir)">
              <Getattr fromlineno="647" tolineno="647" lineno="647" attrname="listdir" expr="os">
                <Name fromlineno="647" tolineno="647" lineno="647" name="os"/>
              </Getattr>
              <Name fromlineno="647" tolineno="647" lineno="647" name="path"/>
            </CallFunc>
          </Assign>
          <Assign fromlineno="648" tolineno="648" lineno="648" targets="[&lt;AssName(bbfiles) l.648 [bb.cooker] at Ox9d9c9ec&gt;]" value="[]">
            <AssName fromlineno="648" tolineno="648" lineno="648" name="bbfiles"/>
            <List fromlineno="648" tolineno="648" lineno="648"/>
          </Assign>
          <For fromlineno="649" tolineno="652" lineno="649">
            <AssName fromlineno="649" tolineno="649" lineno="649" name="f"/>
            <Name fromlineno="649" tolineno="649" lineno="649" name="contents"/>
            <Assign fromlineno="650" tolineno="650" lineno="650" targets="[&lt;Tuple(tuple) l.650 [bb.cooker] at Ox9d9cb6c&gt;]" value="os.path.splitext(f)">
              <Tuple fromlineno="650" tolineno="650" lineno="650">
                <AssName fromlineno="650" tolineno="650" lineno="650" name="root"/>
                <AssName fromlineno="650" tolineno="650" lineno="650" name="ext"/>
              </Tuple>
              <CallFunc fromlineno="650" tolineno="650" lineno="650" func="Getattr(splitext)">
                <Getattr fromlineno="650" tolineno="650" lineno="650" attrname="splitext" expr="os.path">
                  <Getattr fromlineno="650" tolineno="650" lineno="650" attrname="path" expr="os">
                    <Name fromlineno="650" tolineno="650" lineno="650" name="os"/>
                  </Getattr>
                </Getattr>
                <Name fromlineno="650" tolineno="650" lineno="650" name="f"/>
              </CallFunc>
            </Assign>
            <If fromlineno="651" tolineno="652" lineno="651">
              <Compare fromlineno="651" tolineno="651" lineno="651" op="('==', &lt;Const(str) l.651 [bb.cooker] at Ox9d9cd8c&gt;)">
                <Name fromlineno="651" tolineno="651" lineno="651" name="ext"/>
                <Const fromlineno="651" tolineno="651" lineno="651" type="str">'.bb'</Const>
              </Compare>
              <Discard fromlineno="652" tolineno="652" lineno="652">
                <CallFunc fromlineno="652" tolineno="652" lineno="652" func="Getattr(append)">
                  <Getattr fromlineno="652" tolineno="652" lineno="652" attrname="append" expr="bbfiles">
                    <Name fromlineno="652" tolineno="652" lineno="652" name="bbfiles"/>
                  </Getattr>
                  <CallFunc fromlineno="652" tolineno="652" lineno="652" func="Getattr(abspath)">
                    <Getattr fromlineno="652" tolineno="652" lineno="652" attrname="abspath" expr="os.path">
                      <Getattr fromlineno="652" tolineno="652" lineno="652" attrname="path" expr="os">
                        <Name fromlineno="652" tolineno="652" lineno="652" name="os"/>
                      </Getattr>
                    </Getattr>
                    <CallFunc fromlineno="652" tolineno="652" lineno="652" func="Getattr(join)">
                      <Getattr fromlineno="652" tolineno="652" lineno="652" attrname="join" expr="os.path">
                        <Getattr fromlineno="652" tolineno="652" lineno="652" attrname="path" expr="os">
                          <Name fromlineno="652" tolineno="652" lineno="652" name="os"/>
                        </Getattr>
                      </Getattr>
                      <CallFunc fromlineno="652" tolineno="652" lineno="652" func="Getattr(getcwd)">
                        <Getattr fromlineno="652" tolineno="652" lineno="652" attrname="getcwd" expr="os">
                          <Name fromlineno="652" tolineno="652" lineno="652" name="os"/>
                        </Getattr>
                      </CallFunc>
                      <Name fromlineno="652" tolineno="652" lineno="652" name="f"/>
                    </CallFunc>
                  </CallFunc>
                </CallFunc>
              </Discard>
            </If>
          </For>
          <Return fromlineno="653" tolineno="653" lineno="653">
            <Name fromlineno="653" tolineno="653" lineno="653" name="bbfiles"/>
          </Return>
        </Function>
        <Function fromlineno="655" tolineno="666" lineno="655">
          <Arguments fromlineno="655" tolineno="655" lineno="None" format_args="self, path">
            <AssName fromlineno="655" tolineno="655" lineno="655" name="self"/>
            <AssName fromlineno="655" tolineno="655" lineno="655" name="path"/>
          </Arguments>
          <From fromlineno="657" tolineno="657" lineno="657" modname="os.path">
            <ImportName name="join"/>
          </From>
          <Assign fromlineno="659" tolineno="659" lineno="659" targets="[&lt;AssName(found) l.659 [bb.cooker] at Ox9da024c&gt;]" value="[]">
            <AssName fromlineno="659" tolineno="659" lineno="659" name="found"/>
            <List fromlineno="659" tolineno="659" lineno="659"/>
          </Assign>
          <For fromlineno="660" tolineno="664" lineno="660">
            <Tuple fromlineno="660" tolineno="660" lineno="660">
              <AssName fromlineno="660" tolineno="660" lineno="660" name="dir"/>
              <AssName fromlineno="660" tolineno="660" lineno="660" name="dirs"/>
              <AssName fromlineno="660" tolineno="660" lineno="660" name="files"/>
            </Tuple>
            <CallFunc fromlineno="660" tolineno="660" lineno="660" func="Getattr(walk)">
              <Getattr fromlineno="660" tolineno="660" lineno="660" attrname="walk" expr="os">
                <Name fromlineno="660" tolineno="660" lineno="660" name="os"/>
              </Getattr>
              <Name fromlineno="660" tolineno="660" lineno="660" name="path"/>
            </CallFunc>
            <For fromlineno="661" tolineno="663" lineno="661">
              <AssName fromlineno="661" tolineno="661" lineno="661" name="ignored"/>
              <Tuple fromlineno="661" tolineno="661" lineno="661">
                <Const fromlineno="661" tolineno="661" lineno="661" type="str">'SCCS'</Const>
                <Const fromlineno="661" tolineno="661" lineno="661" type="str">'CVS'</Const>
                <Const fromlineno="661" tolineno="661" lineno="661" type="str">'.svn'</Const>
              </Tuple>
              <If fromlineno="662" tolineno="663" lineno="662">
                <Compare fromlineno="662" tolineno="662" lineno="662" op="('in', &lt;Name(dirs) l.662 [bb.cooker] at Ox9da06cc&gt;)">
                  <Name fromlineno="662" tolineno="662" lineno="662" name="ignored"/>
                  <Name fromlineno="662" tolineno="662" lineno="662" name="dirs"/>
                </Compare>
                <Discard fromlineno="663" tolineno="663" lineno="663">
                  <CallFunc fromlineno="663" tolineno="663" lineno="663" func="Getattr(remove)">
                    <Getattr fromlineno="663" tolineno="663" lineno="663" attrname="remove" expr="dirs">
                      <Name fromlineno="663" tolineno="663" lineno="663" name="dirs"/>
                    </Getattr>
                    <Name fromlineno="663" tolineno="663" lineno="663" name="ignored"/>
                  </CallFunc>
                </Discard>
              </If>
            </For>
            <AugAssign fromlineno="664" tolineno="664" lineno="664" target="found" value="[join(dir, f) for f in files if f.endswith('.bb')]">
              <AssName fromlineno="664" tolineno="664" lineno="664" name="found"/>
              <ListComp fromlineno="664" tolineno="664" lineno="664">
                <CallFunc fromlineno="664" tolineno="664" lineno="664" func="Name(join)">
                  <Name fromlineno="664" tolineno="664" lineno="664" name="join"/>
                  <Name fromlineno="664" tolineno="664" lineno="664" name="dir"/>
                  <Name fromlineno="664" tolineno="664" lineno="664" name="f"/>
                </CallFunc>
                <Comprehension fromlineno="664" tolineno="664" lineno="None">
                  <AssName fromlineno="664" tolineno="664" lineno="664" name="f"/>
                  <Name fromlineno="664" tolineno="664" lineno="664" name="files"/>
                  <CallFunc fromlineno="664" tolineno="664" lineno="664" func="Getattr(endswith)">
                    <Getattr fromlineno="664" tolineno="664" lineno="664" attrname="endswith" expr="f">
                      <Name fromlineno="664" tolineno="664" lineno="664" name="f"/>
                    </Getattr>
                    <Const fromlineno="664" tolineno="664" lineno="664" type="str">'.bb'</Const>
                  </CallFunc>
                </Comprehension>
              </ListComp>
            </AugAssign>
          </For>
          <Return fromlineno="666" tolineno="666" lineno="666">
            <Name fromlineno="666" tolineno="666" lineno="666" name="found"/>
          </Return>
        </Function>
        <Function fromlineno="668" tolineno="713" lineno="668">
          <Arguments fromlineno="668" tolineno="668" lineno="None" format_args="self">
            <AssName fromlineno="668" tolineno="668" lineno="668" name="self"/>
          </Arguments>
          <Assign fromlineno="670" tolineno="670" lineno="670" targets="[&lt;Tuple(tuple) l.670 [bb.cooker] at Ox9da0bac&gt;]" value="(0, 0, 0, 0)">
            <Tuple fromlineno="670" tolineno="670" lineno="670">
              <AssName fromlineno="670" tolineno="670" lineno="670" name="parsed"/>
              <AssName fromlineno="670" tolineno="670" lineno="670" name="cached"/>
              <AssName fromlineno="670" tolineno="670" lineno="670" name="skipped"/>
              <AssName fromlineno="670" tolineno="670" lineno="670" name="masked"/>
            </Tuple>
            <Tuple fromlineno="670" tolineno="670" lineno="670">
              <Const fromlineno="670" tolineno="670" lineno="670" type="int">0</Const>
              <Const fromlineno="670" tolineno="670" lineno="670" type="int">0</Const>
              <Const fromlineno="670" tolineno="670" lineno="670" type="int">0</Const>
              <Const fromlineno="670" tolineno="670" lineno="670" type="int">0</Const>
            </Tuple>
          </Assign>
          <Assign fromlineno="671" tolineno="671" lineno="671" targets="[&lt;AssAttr(bb_cache) l.671 [bb.cooker] at Ox9da0dec&gt;]" value="bb.cache.init(self)">
            <AssAttr fromlineno="671" tolineno="671" lineno="671" attrname="bb_cache" expr="self">
              <Name fromlineno="671" tolineno="671" lineno="671" name="self"/>
            </AssAttr>
            <CallFunc fromlineno="671" tolineno="671" lineno="671" func="Getattr(init)">
              <Getattr fromlineno="671" tolineno="671" lineno="671" attrname="init" expr="bb.cache">
                <Getattr fromlineno="671" tolineno="671" lineno="671" attrname="cache" expr="bb">
                  <Name fromlineno="671" tolineno="671" lineno="671" name="bb"/>
                </Getattr>
              </Getattr>
              <Name fromlineno="671" tolineno="671" lineno="671" name="self"/>
            </CallFunc>
          </Assign>
          <Assign fromlineno="673" tolineno="673" lineno="673" targets="[&lt;AssName(files) l.673 [bb.cooker] at Ox9da0f2c&gt;]" value="(data.getVar('BBFILES', self.configuration.data, 1)) or ('').split()">
            <AssName fromlineno="673" tolineno="673" lineno="673" name="files"/>
            <CallFunc fromlineno="673" tolineno="673" lineno="673" func="Getattr(split)">
              <Getattr fromlineno="673" tolineno="673" lineno="673" attrname="split" expr="(data.getVar('BBFILES', self.configuration.data, 1)) or ('')">
                <BoolOp fromlineno="673" tolineno="673" lineno="673" op="or" values="data.getVar('BBFILES', self.configuration.data, 1),'',">
                  <CallFunc fromlineno="673" tolineno="673" lineno="673" func="Getattr(getVar)">
                    <Getattr fromlineno="673" tolineno="673" lineno="673" attrname="getVar" expr="data">
                      <Name fromlineno="673" tolineno="673" lineno="673" name="data"/>
                    </Getattr>
                    <Const fromlineno="673" tolineno="673" lineno="673" type="str">'BBFILES'</Const>
                    <Getattr fromlineno="673" tolineno="673" lineno="673" attrname="data" expr="self.configuration">
                      <Getattr fromlineno="673" tolineno="673" lineno="673" attrname="configuration" expr="self">
                        <Name fromlineno="673" tolineno="673" lineno="673" name="self"/>
                      </Getattr>
                    </Getattr>
                    <Const fromlineno="673" tolineno="673" lineno="673" type="int">1</Const>
                  </CallFunc>
                  <Const fromlineno="673" tolineno="673" lineno="673" type="str">''</Const>
                </BoolOp>
              </Getattr>
            </CallFunc>
          </Assign>
          <Discard fromlineno="674" tolineno="674" lineno="674">
            <CallFunc fromlineno="674" tolineno="674" lineno="674" func="Getattr(setVar)">
              <Getattr fromlineno="674" tolineno="674" lineno="674" attrname="setVar" expr="data">
                <Name fromlineno="674" tolineno="674" lineno="674" name="data"/>
              </Getattr>
              <Const fromlineno="674" tolineno="674" lineno="674" type="str">'BBFILES'</Const>
              <CallFunc fromlineno="674" tolineno="674" lineno="674" func="Getattr(join)">
                <Getattr fromlineno="674" tolineno="674" lineno="674" attrname="join" expr="' '">
                  <Const fromlineno="674" tolineno="674" lineno="674" type="str">' '</Const>
                </Getattr>
                <Name fromlineno="674" tolineno="674" lineno="674" name="files"/>
              </CallFunc>
              <Getattr fromlineno="674" tolineno="674" lineno="674" attrname="data" expr="self.configuration">
                <Getattr fromlineno="674" tolineno="674" lineno="674" attrname="configuration" expr="self">
                  <Name fromlineno="674" tolineno="674" lineno="674" name="self"/>
                </Getattr>
              </Getattr>
            </CallFunc>
          </Discard>
          <If fromlineno="676" tolineno="677" lineno="676">
            <UnaryOp fromlineno="676" tolineno="676" lineno="676">
              <CallFunc fromlineno="676" tolineno="676" lineno="676" func="Name(len)">
                <Name fromlineno="676" tolineno="676" lineno="676" name="len"/>
                <Name fromlineno="676" tolineno="676" lineno="676" name="files"/>
              </CallFunc>
            </UnaryOp>
            <Assign fromlineno="677" tolineno="677" lineno="677" targets="[&lt;AssName(files) l.677 [bb.cooker] at Ox9da446c&gt;]" value="self.get_bbfiles()">
              <AssName fromlineno="677" tolineno="677" lineno="677" name="files"/>
              <CallFunc fromlineno="677" tolineno="677" lineno="677" func="Getattr(get_bbfiles)">
                <Getattr fromlineno="677" tolineno="677" lineno="677" attrname="get_bbfiles" expr="self">
                  <Name fromlineno="677" tolineno="677" lineno="677" name="self"/>
                </Getattr>
              </CallFunc>
            </Assign>
          </If>
          <If fromlineno="679" tolineno="680" lineno="679">
            <UnaryOp fromlineno="679" tolineno="679" lineno="679">
              <CallFunc fromlineno="679" tolineno="679" lineno="679" func="Name(len)">
                <Name fromlineno="679" tolineno="679" lineno="679" name="len"/>
                <Name fromlineno="679" tolineno="679" lineno="679" name="files"/>
              </CallFunc>
            </UnaryOp>
            <Discard fromlineno="680" tolineno="680" lineno="680">
              <CallFunc fromlineno="680" tolineno="680" lineno="680" func="Getattr(error)">
                <Getattr fromlineno="680" tolineno="680" lineno="680" attrname="error" expr="bb.msg">
                  <Getattr fromlineno="680" tolineno="680" lineno="680" attrname="msg" expr="bb">
                    <Name fromlineno="680" tolineno="680" lineno="680" name="bb"/>
                  </Getattr>
                </Getattr>
                <Getattr fromlineno="680" tolineno="680" lineno="680" attrname="Collection" expr="bb.msg.domain">
                  <Getattr fromlineno="680" tolineno="680" lineno="680" attrname="domain" expr="bb.msg">
                    <Getattr fromlineno="680" tolineno="680" lineno="680" attrname="msg" expr="bb">
                      <Name fromlineno="680" tolineno="680" lineno="680" name="bb"/>
                    </Getattr>
                  </Getattr>
                </Getattr>
                <Const fromlineno="680" tolineno="680" lineno="680" type="str">'no files to build.'</Const>
              </CallFunc>
            </Discard>
          </If>
          <Assign fromlineno="682" tolineno="682" lineno="682" targets="[&lt;AssName(newfiles) l.682 [bb.cooker] at Ox9da47ac&gt;]" value="[]">
            <AssName fromlineno="682" tolineno="682" lineno="682" name="newfiles"/>
            <List fromlineno="682" tolineno="682" lineno="682"/>
          </Assign>
          <For fromlineno="683" tolineno="693" lineno="683">
            <AssName fromlineno="683" tolineno="683" lineno="683" name="f"/>
            <Name fromlineno="683" tolineno="683" lineno="683" name="files"/>
            <If fromlineno="684" tolineno="693" lineno="684">
              <CallFunc fromlineno="684" tolineno="684" lineno="684" func="Getattr(isdir)">
                <Getattr fromlineno="684" tolineno="684" lineno="684" attrname="isdir" expr="os.path">
                  <Getattr fromlineno="684" tolineno="684" lineno="684" attrname="path" expr="os">
                    <Name fromlineno="684" tolineno="684" lineno="684" name="os"/>
                  </Getattr>
                </Getattr>
                <Name fromlineno="684" tolineno="684" lineno="684" name="f"/>
              </CallFunc>
              <Assign fromlineno="685" tolineno="685" lineno="685" targets="[&lt;AssName(dirfiles) l.685 [bb.cooker] at Ox9da4a4c&gt;]" value="self.find_bbfiles(f)">
                <AssName fromlineno="685" tolineno="685" lineno="685" name="dirfiles"/>
                <CallFunc fromlineno="685" tolineno="685" lineno="685" func="Getattr(find_bbfiles)">
                  <Getattr fromlineno="685" tolineno="685" lineno="685" attrname="find_bbfiles" expr="self">
                    <Name fromlineno="685" tolineno="685" lineno="685" name="self"/>
                  </Getattr>
                  <Name fromlineno="685" tolineno="685" lineno="685" name="f"/>
                </CallFunc>
              </Assign>
              <If fromlineno="686" tolineno="688" lineno="686">
                <Name fromlineno="686" tolineno="686" lineno="686" name="dirfiles"/>
                <AugAssign fromlineno="687" tolineno="687" lineno="687" target="newfiles" value="dirfiles">
                  <AssName fromlineno="687" tolineno="687" lineno="687" name="newfiles"/>
                  <Name fromlineno="687" tolineno="687" lineno="687" name="dirfiles"/>
                </AugAssign>
                <Continue fromlineno="688" tolineno="688" lineno="688"/>
              </If>
              <Assign fromlineno="690" tolineno="690" lineno="690" targets="[&lt;AssName(globbed) l.690 [bb.cooker] at Ox9da4ccc&gt;]" value="glob.glob(f)">
                <AssName fromlineno="690" tolineno="690" lineno="690" name="globbed"/>
                <CallFunc fromlineno="690" tolineno="690" lineno="690" func="Getattr(glob)">
                  <Getattr fromlineno="690" tolineno="690" lineno="690" attrname="glob" expr="glob">
                    <Name fromlineno="690" tolineno="690" lineno="690" name="glob"/>
                  </Getattr>
                  <Name fromlineno="690" tolineno="690" lineno="690" name="f"/>
                </CallFunc>
              </Assign>
              <If fromlineno="691" tolineno="692" lineno="691">
                <BoolOp fromlineno="691" tolineno="691" lineno="691" op="and" values="not globbed,os.path.exists(f),">
                  <UnaryOp fromlineno="691" tolineno="691" lineno="691">
                    <Name fromlineno="691" tolineno="691" lineno="691" name="globbed"/>
                  </UnaryOp>
                  <CallFunc fromlineno="691" tolineno="691" lineno="691" func="Getattr(exists)">
                    <Getattr fromlineno="691" tolineno="691" lineno="691" attrname="exists" expr="os.path">
                      <Getattr fromlineno="691" tolineno="691" lineno="691" attrname="path" expr="os">
                        <Name fromlineno="691" tolineno="691" lineno="691" name="os"/>
                      </Getattr>
                    </Getattr>
                    <Name fromlineno="691" tolineno="691" lineno="691" name="f"/>
                  </CallFunc>
                </BoolOp>
                <Assign fromlineno="692" tolineno="692" lineno="692" targets="[&lt;AssName(globbed) l.692 [bb.cooker] at Ox9da4f8c&gt;]" value="[f]">
                  <AssName fromlineno="692" tolineno="692" lineno="692" name="globbed"/>
                  <List fromlineno="692" tolineno="692" lineno="692">
                    <Name fromlineno="692" tolineno="692" lineno="692" name="f"/>
                  </List>
                </Assign>
              </If>
              <AugAssign fromlineno="693" tolineno="693" lineno="693" target="newfiles" value="globbed">
                <AssName fromlineno="693" tolineno="693" lineno="693" name="newfiles"/>
                <Name fromlineno="693" tolineno="693" lineno="693" name="globbed"/>
              </AugAssign>
            </If>
          </For>
          <Assign fromlineno="695" tolineno="695" lineno="695" targets="[&lt;AssName(bbmask) l.695 [bb.cooker] at Ox9df30ac&gt;]" value="bb.data.getVar('BBMASK', self.configuration.data, 1)">
            <AssName fromlineno="695" tolineno="695" lineno="695" name="bbmask"/>
            <CallFunc fromlineno="695" tolineno="695" lineno="695" func="Getattr(getVar)">
              <Getattr fromlineno="695" tolineno="695" lineno="695" attrname="getVar" expr="bb.data">
                <Getattr fromlineno="695" tolineno="695" lineno="695" attrname="data" expr="bb">
                  <Name fromlineno="695" tolineno="695" lineno="695" name="bb"/>
                </Getattr>
              </Getattr>
              <Const fromlineno="695" tolineno="695" lineno="695" type="str">'BBMASK'</Const>
              <Getattr fromlineno="695" tolineno="695" lineno="695" attrname="data" expr="self.configuration">
                <Getattr fromlineno="695" tolineno="695" lineno="695" attrname="configuration" expr="self">
                  <Name fromlineno="695" tolineno="695" lineno="695" name="self"/>
                </Getattr>
              </Getattr>
              <Const fromlineno="695" tolineno="695" lineno="695" type="int">1</Const>
            </CallFunc>
          </Assign>
          <If fromlineno="697" tolineno="698" lineno="697">
            <UnaryOp fromlineno="697" tolineno="697" lineno="697">
              <Name fromlineno="697" tolineno="697" lineno="697" name="bbmask"/>
            </UnaryOp>
            <Return fromlineno="698" tolineno="698" lineno="698">
              <Tuple fromlineno="698" tolineno="698" lineno="698">
                <Name fromlineno="698" tolineno="698" lineno="698" name="newfiles"/>
                <Const fromlineno="698" tolineno="698" lineno="698" type="int">0</Const>
              </Tuple>
            </Return>
          </If>
          <TryExcept fromlineno="700" tolineno="703" lineno="700">
            <Assign fromlineno="701" tolineno="701" lineno="701" targets="[&lt;AssName(bbmask_compiled) l.701 [bb.cooker] at Ox9df340c&gt;]" value="re.compile(bbmask)">
              <AssName fromlineno="701" tolineno="701" lineno="701" name="bbmask_compiled"/>
              <CallFunc fromlineno="701" tolineno="701" lineno="701" func="Getattr(compile)">
                <Getattr fromlineno="701" tolineno="701" lineno="701" attrname="compile" expr="re">
                  <Name fromlineno="701" tolineno="701" lineno="701" name="re"/>
                </Getattr>
                <Name fromlineno="701" tolineno="701" lineno="701" name="bbmask"/>
              </CallFunc>
            </Assign>
            <ExceptHandler fromlineno="702" tolineno="703" lineno="702">
              <Getattr fromlineno="702" tolineno="702" lineno="702" attrname="error" expr="sre_constants">
                <Name fromlineno="702" tolineno="702" lineno="702" name="sre_constants"/>
              </Getattr>
              <Discard fromlineno="703" tolineno="703" lineno="703">
                <CallFunc fromlineno="703" tolineno="703" lineno="703" func="Getattr(fatal)">
                  <Getattr fromlineno="703" tolineno="703" lineno="703" attrname="fatal" expr="bb.msg">
                    <Getattr fromlineno="703" tolineno="703" lineno="703" attrname="msg" expr="bb">
                      <Name fromlineno="703" tolineno="703" lineno="703" name="bb"/>
                    </Getattr>
                  </Getattr>
                  <Getattr fromlineno="703" tolineno="703" lineno="703" attrname="Collection" expr="bb.msg.domain">
                    <Getattr fromlineno="703" tolineno="703" lineno="703" attrname="domain" expr="bb.msg">
                      <Getattr fromlineno="703" tolineno="703" lineno="703" attrname="msg" expr="bb">
                        <Name fromlineno="703" tolineno="703" lineno="703" name="bb"/>
                      </Getattr>
                    </Getattr>
                  </Getattr>
                  <Const fromlineno="703" tolineno="703" lineno="703" type="str">'BBMASK is not a valid regular expression.'</Const>
                </CallFunc>
              </Discard>
            </ExceptHandler>
          </TryExcept>
          <Assign fromlineno="705" tolineno="705" lineno="705" targets="[&lt;AssName(finalfiles) l.705 [bb.cooker] at Ox9df372c&gt;]" value="[]">
            <AssName fromlineno="705" tolineno="705" lineno="705" name="finalfiles"/>
            <List fromlineno="705" tolineno="705" lineno="705"/>
          </Assign>
          <For fromlineno="706" tolineno="711" lineno="706">
            <AssName fromlineno="706" tolineno="706" lineno="706" name="f"/>
            <Name fromlineno="706" tolineno="706" lineno="706" name="newfiles"/>
            <If fromlineno="707" tolineno="710" lineno="707">
              <CallFunc fromlineno="707" tolineno="707" lineno="707" func="Getattr(search)">
                <Getattr fromlineno="707" tolineno="707" lineno="707" attrname="search" expr="bbmask_compiled">
                  <Name fromlineno="707" tolineno="707" lineno="707" name="bbmask_compiled"/>
                </Getattr>
                <Name fromlineno="707" tolineno="707" lineno="707" name="f"/>
              </CallFunc>
              <Discard fromlineno="708" tolineno="708" lineno="708">
                <CallFunc fromlineno="708" tolineno="708" lineno="708" func="Getattr(debug)">
                  <Getattr fromlineno="708" tolineno="708" lineno="708" attrname="debug" expr="bb.msg">
                    <Getattr fromlineno="708" tolineno="708" lineno="708" attrname="msg" expr="bb">
                      <Name fromlineno="708" tolineno="708" lineno="708" name="bb"/>
                    </Getattr>
                  </Getattr>
                  <Const fromlineno="708" tolineno="708" lineno="708" type="int">1</Const>
                  <Getattr fromlineno="708" tolineno="708" lineno="708" attrname="Collection" expr="bb.msg.domain">
                    <Getattr fromlineno="708" tolineno="708" lineno="708" attrname="domain" expr="bb.msg">
                      <Getattr fromlineno="708" tolineno="708" lineno="708" attrname="msg" expr="bb">
                        <Name fromlineno="708" tolineno="708" lineno="708" name="bb"/>
                      </Getattr>
                    </Getattr>
                  </Getattr>
                  <BinOp fromlineno="708" tolineno="708" lineno="708" op="%" left="'skipping masked file %s'" right="f">
                    <Const fromlineno="708" tolineno="708" lineno="708" type="str">'skipping masked file %s'</Const>
                    <Name fromlineno="708" tolineno="708" lineno="708" name="f"/>
                  </BinOp>
                </CallFunc>
              </Discard>
              <AugAssign fromlineno="709" tolineno="709" lineno="709" target="masked" value="1">
                <AssName fromlineno="709" tolineno="709" lineno="709" name="masked"/>
                <Const fromlineno="709" tolineno="709" lineno="709" type="int">1</Const>
              </AugAssign>
              <Continue fromlineno="710" tolineno="710" lineno="710"/>
            </If>
            <Discard fromlineno="711" tolineno="711" lineno="711">
              <CallFunc fromlineno="711" tolineno="711" lineno="711" func="Getattr(append)">
                <Getattr fromlineno="711" tolineno="711" lineno="711" attrname="append" expr="finalfiles">
                  <Name fromlineno="711" tolineno="711" lineno="711" name="finalfiles"/>
                </Getattr>
                <Name fromlineno="711" tolineno="711" lineno="711" name="f"/>
              </CallFunc>
            </Discard>
          </For>
          <Return fromlineno="713" tolineno="713" lineno="713">
            <Tuple fromlineno="713" tolineno="713" lineno="713">
              <Name fromlineno="713" tolineno="713" lineno="713" name="finalfiles"/>
              <Name fromlineno="713" tolineno="713" lineno="713" name="masked"/>
            </Tuple>
          </Return>
        </Function>
        <Function fromlineno="715" tolineno="770" lineno="715">
          <Arguments fromlineno="715" tolineno="715" lineno="None" format_args="self, filelist, masked, progressCallback=None">
            <AssName fromlineno="715" tolineno="715" lineno="715" name="self"/>
            <AssName fromlineno="715" tolineno="715" lineno="715" name="filelist"/>
            <AssName fromlineno="715" tolineno="715" lineno="715" name="masked"/>
            <AssName fromlineno="715" tolineno="715" lineno="715" name="progressCallback"/>
            <Const fromlineno="715" tolineno="715" lineno="715" type="NoneType">None</Const>
          </Arguments>
          <Assign fromlineno="716" tolineno="716" lineno="716" targets="[&lt;Tuple(tuple) l.716 [bb.cooker] at Ox9df3f2c&gt;]" value="(0, 0, 0, 0)">
            <Tuple fromlineno="716" tolineno="716" lineno="716">
              <AssName fromlineno="716" tolineno="716" lineno="716" name="parsed"/>
              <AssName fromlineno="716" tolineno="716" lineno="716" name="cached"/>
              <AssName fromlineno="716" tolineno="716" lineno="716" name="skipped"/>
              <AssName fromlineno="716" tolineno="716" lineno="716" name="error"/>
            </Tuple>
            <Tuple fromlineno="716" tolineno="716" lineno="716">
              <Const fromlineno="716" tolineno="716" lineno="716" type="int">0</Const>
              <Const fromlineno="716" tolineno="716" lineno="716" type="int">0</Const>
              <Const fromlineno="716" tolineno="716" lineno="716" type="int">0</Const>
              <Const fromlineno="716" tolineno="716" lineno="716" type="int">0</Const>
            </Tuple>
          </Assign>
          <For fromlineno="717" tolineno="761" lineno="717">
            <AssName fromlineno="717" tolineno="717" lineno="717" name="i"/>
            <CallFunc fromlineno="717" tolineno="717" lineno="717" func="Name(xrange)">
              <Name fromlineno="717" tolineno="717" lineno="717" name="xrange"/>
              <CallFunc fromlineno="717" tolineno="717" lineno="717" func="Name(len)">
                <Name fromlineno="717" tolineno="717" lineno="717" name="len"/>
                <Name fromlineno="717" tolineno="717" lineno="717" name="filelist"/>
              </CallFunc>
            </CallFunc>
            <Assign fromlineno="718" tolineno="718" lineno="718" targets="[&lt;AssName(f) l.718 [bb.cooker] at Ox9df730c&gt;]" value="filelist[i]">
              <AssName fromlineno="718" tolineno="718" lineno="718" name="f"/>
              <Subscript fromlineno="718" tolineno="718" lineno="718">
                <Name fromlineno="718" tolineno="718" lineno="718" name="filelist"/>
                <Index fromlineno="718" tolineno="718" lineno="None">
                  <Name fromlineno="718" tolineno="718" lineno="718" name="i"/>
                </Index>
              </Subscript>
            </Assign>
            <TryExcept fromlineno="723" tolineno="761" lineno="723">
              <Assign fromlineno="724" tolineno="724" lineno="724" targets="[&lt;Tuple(tuple) l.724 [bb.cooker] at Ox9df746c&gt;]" value="self.bb_cache.loadData(f, self.configuration.data, self.status)">
                <Tuple fromlineno="724" tolineno="724" lineno="724">
                  <AssName fromlineno="724" tolineno="724" lineno="724" name="fromCache"/>
                  <AssName fromlineno="724" tolineno="724" lineno="724" name="skip"/>
                </Tuple>
                <CallFunc fromlineno="724" tolineno="724" lineno="724" func="Getattr(loadData)">
                  <Getattr fromlineno="724" tolineno="724" lineno="724" attrname="loadData" expr="self.bb_cache">
                    <Getattr fromlineno="724" tolineno="724" lineno="724" attrname="bb_cache" expr="self">
                      <Name fromlineno="724" tolineno="724" lineno="724" name="self"/>
                    </Getattr>
                  </Getattr>
                  <Name fromlineno="724" tolineno="724" lineno="724" name="f"/>
                  <Getattr fromlineno="724" tolineno="724" lineno="724" attrname="data" expr="self.configuration">
                    <Getattr fromlineno="724" tolineno="724" lineno="724" attrname="configuration" expr="self">
                      <Name fromlineno="724" tolineno="724" lineno="724" name="self"/>
                    </Getattr>
                  </Getattr>
                  <Getattr fromlineno="724" tolineno="724" lineno="724" attrname="status" expr="self">
                    <Name fromlineno="724" tolineno="724" lineno="724" name="self"/>
                  </Getattr>
                </CallFunc>
              </Assign>
              <If fromlineno="725" tolineno="731" lineno="725">
                <Name fromlineno="725" tolineno="725" lineno="725" name="skip"/>
                <AugAssign fromlineno="726" tolineno="726" lineno="726" target="skipped" value="1">
                  <AssName fromlineno="726" tolineno="726" lineno="726" name="skipped"/>
                  <Const fromlineno="726" tolineno="726" lineno="726" type="int">1</Const>
                </AugAssign>
                <Discard fromlineno="727" tolineno="727" lineno="727">
                  <CallFunc fromlineno="727" tolineno="727" lineno="727" func="Getattr(debug)">
                    <Getattr fromlineno="727" tolineno="727" lineno="727" attrname="debug" expr="bb.msg">
                      <Getattr fromlineno="727" tolineno="727" lineno="727" attrname="msg" expr="bb">
                        <Name fromlineno="727" tolineno="727" lineno="727" name="bb"/>
                      </Getattr>
                    </Getattr>
                    <Const fromlineno="727" tolineno="727" lineno="727" type="int">2</Const>
                    <Getattr fromlineno="727" tolineno="727" lineno="727" attrname="Collection" expr="bb.msg.domain">
                      <Getattr fromlineno="727" tolineno="727" lineno="727" attrname="domain" expr="bb.msg">
                        <Getattr fromlineno="727" tolineno="727" lineno="727" attrname="msg" expr="bb">
                          <Name fromlineno="727" tolineno="727" lineno="727" name="bb"/>
                        </Getattr>
                      </Getattr>
                    </Getattr>
                    <BinOp fromlineno="727" tolineno="727" lineno="727" op="%" left="'skipping %s'" right="f">
                      <Const fromlineno="727" tolineno="727" lineno="727" type="str">'skipping %s'</Const>
                      <Name fromlineno="727" tolineno="727" lineno="727" name="f"/>
                    </BinOp>
                  </CallFunc>
                </Discard>
                <Discard fromlineno="728" tolineno="728" lineno="728">
                  <CallFunc fromlineno="728" tolineno="728" lineno="728" func="Getattr(skip)">
                    <Getattr fromlineno="728" tolineno="728" lineno="728" attrname="skip" expr="self.bb_cache">
                      <Getattr fromlineno="728" tolineno="728" lineno="728" attrname="bb_cache" expr="self">
                        <Name fromlineno="728" tolineno="728" lineno="728" name="self"/>
                      </Getattr>
                    </Getattr>
                    <Name fromlineno="728" tolineno="728" lineno="728" name="f"/>
                  </CallFunc>
                </Discard>
                <Continue fromlineno="729" tolineno="729" lineno="729"/>
                <If fromlineno="730" tolineno="731" lineno="730">
                  <Name fromlineno="730" tolineno="730" lineno="730" name="fromCache"/>
                  <AugAssign fromlineno="730" tolineno="730" lineno="730" target="cached" value="1">
                    <AssName fromlineno="730" tolineno="730" lineno="730" name="cached"/>
                    <Const fromlineno="730" tolineno="730" lineno="730" type="int">1</Const>
                  </AugAssign>
                  <AugAssign fromlineno="731" tolineno="731" lineno="731" target="parsed" value="1">
                    <AssName fromlineno="731" tolineno="731" lineno="731" name="parsed"/>
                    <Const fromlineno="731" tolineno="731" lineno="731" type="int">1</Const>
                  </AugAssign>
                </If>
              </If>
              <If fromlineno="745" tolineno="746" lineno="745">
                <Compare fromlineno="745" tolineno="745" lineno="745" op="('is not', &lt;Const(NoneType) l.745 [bb.cooker] at Ox9df7c6c&gt;)">
                  <Name fromlineno="745" tolineno="745" lineno="745" name="progressCallback"/>
                  <Const fromlineno="745" tolineno="745" lineno="745" type="NoneType">None</Const>
                </Compare>
                <Discard fromlineno="746" tolineno="746" lineno="746">
                  <CallFunc fromlineno="746" tolineno="746" lineno="746" func="Name(progressCallback)">
                    <Name fromlineno="746" tolineno="746" lineno="746" name="progressCallback"/>
                    <BinOp fromlineno="746" tolineno="746" lineno="746" op="+" left="i" right="1">
                      <Name fromlineno="746" tolineno="746" lineno="746" name="i"/>
                      <Const fromlineno="746" tolineno="746" lineno="746" type="int">1</Const>
                    </BinOp>
                    <CallFunc fromlineno="746" tolineno="746" lineno="746" func="Name(len)">
                      <Name fromlineno="746" tolineno="746" lineno="746" name="len"/>
                      <Name fromlineno="746" tolineno="746" lineno="746" name="filelist"/>
                    </CallFunc>
                    <Name fromlineno="746" tolineno="746" lineno="746" name="f"/>
                    <Name fromlineno="746" tolineno="746" lineno="746" name="fromCache"/>
                  </CallFunc>
                </Discard>
              </If>
              <ExceptHandler fromlineno="748" tolineno="751" lineno="748">
                <Name fromlineno="748" tolineno="748" lineno="748" name="IOError"/>
                <AssName fromlineno="748" tolineno="748" lineno="748" name="e"/>
                <Discard fromlineno="749" tolineno="749" lineno="749">
                  <CallFunc fromlineno="749" tolineno="749" lineno="749" func="Getattr(remove)">
                    <Getattr fromlineno="749" tolineno="749" lineno="749" attrname="remove" expr="self.bb_cache">
                      <Getattr fromlineno="749" tolineno="749" lineno="749" attrname="bb_cache" expr="self">
                        <Name fromlineno="749" tolineno="749" lineno="749" name="self"/>
                      </Getattr>
                    </Getattr>
                    <Name fromlineno="749" tolineno="749" lineno="749" name="f"/>
                  </CallFunc>
                </Discard>
                <Discard fromlineno="750" tolineno="750" lineno="750">
                  <CallFunc fromlineno="750" tolineno="750" lineno="750" func="Getattr(error)">
                    <Getattr fromlineno="750" tolineno="750" lineno="750" attrname="error" expr="bb.msg">
                      <Getattr fromlineno="750" tolineno="750" lineno="750" attrname="msg" expr="bb">
                        <Name fromlineno="750" tolineno="750" lineno="750" name="bb"/>
                      </Getattr>
                    </Getattr>
                    <Getattr fromlineno="750" tolineno="750" lineno="750" attrname="Collection" expr="bb.msg.domain">
                      <Getattr fromlineno="750" tolineno="750" lineno="750" attrname="domain" expr="bb.msg">
                        <Getattr fromlineno="750" tolineno="750" lineno="750" attrname="msg" expr="bb">
                          <Name fromlineno="750" tolineno="750" lineno="750" name="bb"/>
                        </Getattr>
                      </Getattr>
                    </Getattr>
                    <BinOp fromlineno="750" tolineno="750" lineno="750" op="%" left="'opening %s: %s'" right="(f, e)">
                      <Const fromlineno="750" tolineno="750" lineno="750" type="str">'opening %s: %s'</Const>
                      <Tuple fromlineno="750" tolineno="750" lineno="750">
                        <Name fromlineno="750" tolineno="750" lineno="750" name="f"/>
                        <Name fromlineno="750" tolineno="750" lineno="750" name="e"/>
                      </Tuple>
                    </BinOp>
                  </CallFunc>
                </Discard>
                <Pass fromlineno="751" tolineno="751" lineno="751"/>
              </ExceptHandler>
              <ExceptHandler fromlineno="752" tolineno="754" lineno="752">
                <Name fromlineno="752" tolineno="752" lineno="752" name="KeyboardInterrupt"/>
                <Discard fromlineno="753" tolineno="753" lineno="753">
                  <CallFunc fromlineno="753" tolineno="753" lineno="753" func="Getattr(sync)">
                    <Getattr fromlineno="753" tolineno="753" lineno="753" attrname="sync" expr="self.bb_cache">
                      <Getattr fromlineno="753" tolineno="753" lineno="753" attrname="bb_cache" expr="self">
                        <Name fromlineno="753" tolineno="753" lineno="753" name="self"/>
                      </Getattr>
                    </Getattr>
                  </CallFunc>
                </Discard>
                <Raise fromlineno="754" tolineno="754" lineno="754"/>
              </ExceptHandler>
              <ExceptHandler fromlineno="755" tolineno="758" lineno="755">
                <Name fromlineno="755" tolineno="755" lineno="755" name="Exception"/>
                <AssName fromlineno="755" tolineno="755" lineno="755" name="e"/>
                <AugAssign fromlineno="756" tolineno="756" lineno="756" target="error" value="1">
                  <AssName fromlineno="756" tolineno="756" lineno="756" name="error"/>
                  <Const fromlineno="756" tolineno="756" lineno="756" type="int">1</Const>
                </AugAssign>
                <Discard fromlineno="757" tolineno="757" lineno="757">
                  <CallFunc fromlineno="757" tolineno="757" lineno="757" func="Getattr(remove)">
                    <Getattr fromlineno="757" tolineno="757" lineno="757" attrname="remove" expr="self.bb_cache">
                      <Getattr fromlineno="757" tolineno="757" lineno="757" attrname="bb_cache" expr="self">
                        <Name fromlineno="757" tolineno="757" lineno="757" name="self"/>
                      </Getattr>
                    </Getattr>
                    <Name fromlineno="757" tolineno="757" lineno="757" name="f"/>
                  </CallFunc>
                </Discard>
                <Discard fromlineno="758" tolineno="758" lineno="758">
                  <CallFunc fromlineno="758" tolineno="758" lineno="758" func="Getattr(error)">
                    <Getattr fromlineno="758" tolineno="758" lineno="758" attrname="error" expr="bb.msg">
                      <Getattr fromlineno="758" tolineno="758" lineno="758" attrname="msg" expr="bb">
                        <Name fromlineno="758" tolineno="758" lineno="758" name="bb"/>
                      </Getattr>
                    </Getattr>
                    <Getattr fromlineno="758" tolineno="758" lineno="758" attrname="Collection" expr="bb.msg.domain">
                      <Getattr fromlineno="758" tolineno="758" lineno="758" attrname="domain" expr="bb.msg">
                        <Getattr fromlineno="758" tolineno="758" lineno="758" attrname="msg" expr="bb">
                          <Name fromlineno="758" tolineno="758" lineno="758" name="bb"/>
                        </Getattr>
                      </Getattr>
                    </Getattr>
                    <BinOp fromlineno="758" tolineno="758" lineno="758" op="%" left="'%s while parsing %s'" right="(e, f)">
                      <Const fromlineno="758" tolineno="758" lineno="758" type="str">'%s while parsing %s'</Const>
                      <Tuple fromlineno="758" tolineno="758" lineno="758">
                        <Name fromlineno="758" tolineno="758" lineno="758" name="e"/>
                        <Name fromlineno="758" tolineno="758" lineno="758" name="f"/>
                      </Tuple>
                    </BinOp>
                  </CallFunc>
                </Discard>
              </ExceptHandler>
              <ExceptHandler fromlineno="759" tolineno="761" lineno="759">
                <Discard fromlineno="760" tolineno="760" lineno="760">
                  <CallFunc fromlineno="760" tolineno="760" lineno="760" func="Getattr(remove)">
                    <Getattr fromlineno="760" tolineno="760" lineno="760" attrname="remove" expr="self.bb_cache">
                      <Getattr fromlineno="760" tolineno="760" lineno="760" attrname="bb_cache" expr="self">
                        <Name fromlineno="760" tolineno="760" lineno="760" name="self"/>
                      </Getattr>
                    </Getattr>
                    <Name fromlineno="760" tolineno="760" lineno="760" name="f"/>
                  </CallFunc>
                </Discard>
                <Raise fromlineno="761" tolineno="761" lineno="761"/>
              </ExceptHandler>
            </TryExcept>
          </For>
          <If fromlineno="763" tolineno="765" lineno="763">
            <Compare fromlineno="763" tolineno="763" lineno="763" op="('is not', &lt;Const(NoneType) l.763 [bb.cooker] at Ox9dfb94c&gt;)">
              <Name fromlineno="763" tolineno="763" lineno="763" name="progressCallback"/>
              <Const fromlineno="763" tolineno="763" lineno="763" type="NoneType">None</Const>
            </Compare>
            <Print fromlineno="764" tolineno="764" lineno="764">
              <Const fromlineno="764" tolineno="764" lineno="764" type="str">'\r'</Const>
            </Print>
            <Discard fromlineno="765" tolineno="765" lineno="765">
              <CallFunc fromlineno="765" tolineno="765" lineno="765" func="Getattr(note)">
                <Getattr fromlineno="765" tolineno="765" lineno="765" attrname="note" expr="bb.msg">
                  <Getattr fromlineno="765" tolineno="765" lineno="765" attrname="msg" expr="bb">
                    <Name fromlineno="765" tolineno="765" lineno="765" name="bb"/>
                  </Getattr>
                </Getattr>
                <Const fromlineno="765" tolineno="765" lineno="765" type="int">1</Const>
                <Getattr fromlineno="765" tolineno="765" lineno="765" attrname="Collection" expr="bb.msg.domain">
                  <Getattr fromlineno="765" tolineno="765" lineno="765" attrname="domain" expr="bb.msg">
                    <Getattr fromlineno="765" tolineno="765" lineno="765" attrname="msg" expr="bb">
                      <Name fromlineno="765" tolineno="765" lineno="765" name="bb"/>
                    </Getattr>
                  </Getattr>
                </Getattr>
                <BinOp fromlineno="765" tolineno="765" lineno="765" op="%" left="'Parsing finished. %d cached, %d parsed, %d skipped, %d masked.'" right="(cached, parsed, skipped, masked)">
                  <Const fromlineno="765" tolineno="765" lineno="765" type="str">'Parsing finished. %d cached, %d parsed, %d skipped, %d masked.'</Const>
                  <Tuple fromlineno="765" tolineno="765" lineno="765">
                    <Name fromlineno="765" tolineno="765" lineno="765" name="cached"/>
                    <Name fromlineno="765" tolineno="765" lineno="765" name="parsed"/>
                    <Name fromlineno="765" tolineno="765" lineno="765" name="skipped"/>
                    <Name fromlineno="765" tolineno="765" lineno="765" name="masked"/>
                  </Tuple>
                </BinOp>
              </CallFunc>
            </Discard>
          </If>
          <Discard fromlineno="767" tolineno="767" lineno="767">
            <CallFunc fromlineno="767" tolineno="767" lineno="767" func="Getattr(sync)">
              <Getattr fromlineno="767" tolineno="767" lineno="767" attrname="sync" expr="self.bb_cache">
                <Getattr fromlineno="767" tolineno="767" lineno="767" attrname="bb_cache" expr="self">
                  <Name fromlineno="767" tolineno="767" lineno="767" name="self"/>
                </Getattr>
              </Getattr>
            </CallFunc>
          </Discard>
          <If fromlineno="769" tolineno="770" lineno="769">
            <Compare fromlineno="769" tolineno="769" lineno="769" op="('&gt;', &lt;Const(int) l.769 [bb.cooker] at Ox9dfbdcc&gt;)">
              <Name fromlineno="769" tolineno="769" lineno="769" name="error"/>
              <Const fromlineno="769" tolineno="769" lineno="769" type="int">0</Const>
            </Compare>
            <Discard fromlineno="770" tolineno="770" lineno="770">
              <CallFunc fromlineno="770" tolineno="770" lineno="770" func="Getattr(fatal)">
                <Getattr fromlineno="770" tolineno="770" lineno="770" attrname="fatal" expr="bb.msg">
                  <Getattr fromlineno="770" tolineno="770" lineno="770" attrname="msg" expr="bb">
                    <Name fromlineno="770" tolineno="770" lineno="770" name="bb"/>
                  </Getattr>
                </Getattr>
                <Getattr fromlineno="770" tolineno="770" lineno="770" attrname="Collection" expr="bb.msg.domain">
                  <Getattr fromlineno="770" tolineno="770" lineno="770" attrname="domain" expr="bb.msg">
                    <Getattr fromlineno="770" tolineno="770" lineno="770" attrname="msg" expr="bb">
                      <Name fromlineno="770" tolineno="770" lineno="770" name="bb"/>
                    </Getattr>
                  </Getattr>
                </Getattr>
                <Const fromlineno="770" tolineno="770" lineno="770" type="str">'Parsing errors found, exiting...'</Const>
              </CallFunc>
            </Discard>
          </If>
        </Function>
      </Class>
    </Module>
    <Module fromlineno="0" tolineno="594" lineno="0" name="bb.fetch">
      <Import fromlineno="27" tolineno="27" lineno="27">
        <ImportName name="os"/>
        <ImportName name="re"/>
        <ImportName name="fcntl"/>
      </Import>
      <Import fromlineno="28" tolineno="28" lineno="28">
        <ImportName name="bb"/>
      </Import>
      <From fromlineno="29" tolineno="29" lineno="29" modname="bb">
        <ImportName name="data"/>
      </From>
      <From fromlineno="30" tolineno="30" lineno="30" modname="bb">
        <ImportName name="persist_data"/>
      </From>
      <TryExcept fromlineno="32" tolineno="35" lineno="32">
        <Import fromlineno="33" tolineno="33" lineno="33">
          <ImportName name="cPickle" asname="pickle"/>
        </Import>
        <ExceptHandler fromlineno="34" tolineno="35" lineno="34">
          <Name fromlineno="34" tolineno="34" lineno="34" name="ImportError"/>
          <Import fromlineno="35" tolineno="35" lineno="35">
            <ImportName name="pickle"/>
          </Import>
        </ExceptHandler>
      </TryExcept>
      <Class fromlineno="37" tolineno="37" lineno="37">
        <Name fromlineno="37" tolineno="37" lineno="37" name="Exception"/>
      </Class>
      <Class fromlineno="40" tolineno="40" lineno="40">
        <Name fromlineno="40" tolineno="40" lineno="40" name="Exception"/>
      </Class>
      <Class fromlineno="43" tolineno="43" lineno="43">
        <Name fromlineno="43" tolineno="43" lineno="43" name="Exception"/>
      </Class>
      <Class fromlineno="46" tolineno="46" lineno="46">
        <Name fromlineno="46" tolineno="46" lineno="46" name="Exception"/>
      </Class>
      <Class fromlineno="49" tolineno="49" lineno="49">
        <Name fromlineno="49" tolineno="49" lineno="49" name="Exception"/>
      </Class>
      <Class fromlineno="52" tolineno="52" lineno="52">
        <Name fromlineno="52" tolineno="52" lineno="52" name="Exception"/>
      </Class>
      <Function fromlineno="55" tolineno="83" lineno="55">
        <Arguments fromlineno="55" tolineno="55" lineno="None" format_args="uri, uri_find, uri_replace, d">
          <AssName fromlineno="55" tolineno="55" lineno="55" name="uri"/>
          <AssName fromlineno="55" tolineno="55" lineno="55" name="uri_find"/>
          <AssName fromlineno="55" tolineno="55" lineno="55" name="uri_replace"/>
          <AssName fromlineno="55" tolineno="55" lineno="55" name="d"/>
        </Arguments>
        <If fromlineno="57" tolineno="58" lineno="57">
          <BoolOp fromlineno="57" tolineno="57" lineno="57" op="or" values="not uri,not uri_find,not uri_replace,">
            <UnaryOp fromlineno="57" tolineno="57" lineno="57">
              <Name fromlineno="57" tolineno="57" lineno="57" name="uri"/>
            </UnaryOp>
            <UnaryOp fromlineno="57" tolineno="57" lineno="57">
              <Name fromlineno="57" tolineno="57" lineno="57" name="uri_find"/>
            </UnaryOp>
            <UnaryOp fromlineno="57" tolineno="57" lineno="57">
              <Name fromlineno="57" tolineno="57" lineno="57" name="uri_replace"/>
            </UnaryOp>
          </BoolOp>
          <Discard fromlineno="58" tolineno="58" lineno="58">
            <CallFunc fromlineno="58" tolineno="58" lineno="58" func="Getattr(debug)">
              <Getattr fromlineno="58" tolineno="58" lineno="58" attrname="debug" expr="bb.msg">
                <Getattr fromlineno="58" tolineno="58" lineno="58" attrname="msg" expr="bb">
                  <Name fromlineno="58" tolineno="58" lineno="58" name="bb"/>
                </Getattr>
              </Getattr>
              <Const fromlineno="58" tolineno="58" lineno="58" type="int">1</Const>
              <Getattr fromlineno="58" tolineno="58" lineno="58" attrname="Fetcher" expr="bb.msg.domain">
                <Getattr fromlineno="58" tolineno="58" lineno="58" attrname="domain" expr="bb.msg">
                  <Getattr fromlineno="58" tolineno="58" lineno="58" attrname="msg" expr="bb">
                    <Name fromlineno="58" tolineno="58" lineno="58" name="bb"/>
                  </Getattr>
                </Getattr>
              </Getattr>
              <Const fromlineno="58" tolineno="58" lineno="58" type="str">'uri_replace: passed an undefined value, not replacing'</Const>
            </CallFunc>
          </Discard>
        </If>
        <Assign fromlineno="59" tolineno="59" lineno="59" targets="[&lt;AssName(uri_decoded) l.59 [bb.fetch] at Ox9cd82cc&gt;]" value="list(bb.decodeurl(uri))">
          <AssName fromlineno="59" tolineno="59" lineno="59" name="uri_decoded"/>
          <CallFunc fromlineno="59" tolineno="59" lineno="59" func="Name(list)">
            <Name fromlineno="59" tolineno="59" lineno="59" name="list"/>
            <CallFunc fromlineno="59" tolineno="59" lineno="59" func="Getattr(decodeurl)">
              <Getattr fromlineno="59" tolineno="59" lineno="59" attrname="decodeurl" expr="bb">
                <Name fromlineno="59" tolineno="59" lineno="59" name="bb"/>
              </Getattr>
              <Name fromlineno="59" tolineno="59" lineno="59" name="uri"/>
            </CallFunc>
          </CallFunc>
        </Assign>
        <Assign fromlineno="60" tolineno="60" lineno="60" targets="[&lt;AssName(uri_find_decoded) l.60 [bb.fetch] at Ox9cd844c&gt;]" value="list(bb.decodeurl(uri_find))">
          <AssName fromlineno="60" tolineno="60" lineno="60" name="uri_find_decoded"/>
          <CallFunc fromlineno="60" tolineno="60" lineno="60" func="Name(list)">
            <Name fromlineno="60" tolineno="60" lineno="60" name="list"/>
            <CallFunc fromlineno="60" tolineno="60" lineno="60" func="Getattr(decodeurl)">
              <Getattr fromlineno="60" tolineno="60" lineno="60" attrname="decodeurl" expr="bb">
                <Name fromlineno="60" tolineno="60" lineno="60" name="bb"/>
              </Getattr>
              <Name fromlineno="60" tolineno="60" lineno="60" name="uri_find"/>
            </CallFunc>
          </CallFunc>
        </Assign>
        <Assign fromlineno="61" tolineno="61" lineno="61" targets="[&lt;AssName(uri_replace_decoded) l.61 [bb.fetch] at Ox9cd858c&gt;]" value="list(bb.decodeurl(uri_replace))">
          <AssName fromlineno="61" tolineno="61" lineno="61" name="uri_replace_decoded"/>
          <CallFunc fromlineno="61" tolineno="61" lineno="61" func="Name(list)">
            <Name fromlineno="61" tolineno="61" lineno="61" name="list"/>
            <CallFunc fromlineno="61" tolineno="61" lineno="61" func="Getattr(decodeurl)">
              <Getattr fromlineno="61" tolineno="61" lineno="61" attrname="decodeurl" expr="bb">
                <Name fromlineno="61" tolineno="61" lineno="61" name="bb"/>
              </Getattr>
              <Name fromlineno="61" tolineno="61" lineno="61" name="uri_replace"/>
            </CallFunc>
          </CallFunc>
        </Assign>
        <Assign fromlineno="62" tolineno="62" lineno="62" targets="[&lt;AssName(result_decoded) l.62 [bb.fetch] at Ox9cd838c&gt;]" value="['', '', '', '', '', {}]">
          <AssName fromlineno="62" tolineno="62" lineno="62" name="result_decoded"/>
          <List fromlineno="62" tolineno="62" lineno="62">
            <Const fromlineno="62" tolineno="62" lineno="62" type="str">''</Const>
            <Const fromlineno="62" tolineno="62" lineno="62" type="str">''</Const>
            <Const fromlineno="62" tolineno="62" lineno="62" type="str">''</Const>
            <Const fromlineno="62" tolineno="62" lineno="62" type="str">''</Const>
            <Const fromlineno="62" tolineno="62" lineno="62" type="str">''</Const>
            <Dict fromlineno="62" tolineno="62" lineno="62"/>
          </List>
        </Assign>
        <For fromlineno="63" tolineno="79" lineno="63">
          <AssName fromlineno="63" tolineno="63" lineno="63" name="i"/>
          <Name fromlineno="63" tolineno="63" lineno="63" name="uri_find_decoded"/>
          <Assign fromlineno="64" tolineno="64" lineno="64" targets="[&lt;AssName(loc) l.64 [bb.fetch] at Ox9cd898c&gt;]" value="uri_find_decoded.index(i)">
            <AssName fromlineno="64" tolineno="64" lineno="64" name="loc"/>
            <CallFunc fromlineno="64" tolineno="64" lineno="64" func="Getattr(index)">
              <Getattr fromlineno="64" tolineno="64" lineno="64" attrname="index" expr="uri_find_decoded">
                <Name fromlineno="64" tolineno="64" lineno="64" name="uri_find_decoded"/>
              </Getattr>
              <Name fromlineno="64" tolineno="64" lineno="64" name="i"/>
            </CallFunc>
          </Assign>
          <Assign fromlineno="65" tolineno="65" lineno="65" targets="[&lt;Subscript() l.65 [bb.fetch] at Ox9cd8a2c&gt;]" value="uri_decoded[loc]">
            <Subscript fromlineno="65" tolineno="65" lineno="65">
              <Name fromlineno="65" tolineno="65" lineno="65" name="result_decoded"/>
              <Index fromlineno="65" tolineno="65" lineno="None">
                <Name fromlineno="65" tolineno="65" lineno="65" name="loc"/>
              </Index>
            </Subscript>
            <Subscript fromlineno="65" tolineno="65" lineno="65">
              <Name fromlineno="65" tolineno="65" lineno="65" name="uri_decoded"/>
              <Index fromlineno="65" tolineno="65" lineno="None">
                <Name fromlineno="65" tolineno="65" lineno="65" name="loc"/>
              </Index>
            </Subscript>
          </Assign>
          <Import fromlineno="66" tolineno="66" lineno="66">
            <ImportName name="types"/>
          </Import>
          <If fromlineno="67" tolineno="79" lineno="67">
            <Compare fromlineno="67" tolineno="67" lineno="67" op="('==', &lt;Getattr(StringType) l.67 [bb.fetch] at Ox9cd8dac&gt;)">
              <CallFunc fromlineno="67" tolineno="67" lineno="67" func="Name(type)">
                <Name fromlineno="67" tolineno="67" lineno="67" name="type"/>
                <Name fromlineno="67" tolineno="67" lineno="67" name="i"/>
              </CallFunc>
              <Getattr fromlineno="67" tolineno="67" lineno="67" attrname="StringType" expr="types">
                <Name fromlineno="67" tolineno="67" lineno="67" name="types"/>
              </Getattr>
            </Compare>
            <Import fromlineno="68" tolineno="68" lineno="68">
              <ImportName name="re"/>
            </Import>
            <If fromlineno="69" tolineno="79" lineno="69">
              <CallFunc fromlineno="69" tolineno="69" lineno="69" func="Getattr(match)">
                <Getattr fromlineno="69" tolineno="69" lineno="69" attrname="match" expr="re">
                  <Name fromlineno="69" tolineno="69" lineno="69" name="re"/>
                </Getattr>
                <Name fromlineno="69" tolineno="69" lineno="69" name="i"/>
                <Subscript fromlineno="69" tolineno="69" lineno="69">
                  <Name fromlineno="69" tolineno="69" lineno="69" name="uri_decoded"/>
                  <Index fromlineno="69" tolineno="69" lineno="None">
                    <Name fromlineno="69" tolineno="69" lineno="69" name="loc"/>
                  </Index>
                </Subscript>
              </CallFunc>
              <Assign fromlineno="70" tolineno="70" lineno="70" targets="[&lt;Subscript() l.70 [bb.fetch] at Ox9cd8ecc&gt;]" value="re.sub(i, uri_replace_decoded[loc], uri_decoded[loc])">
                <Subscript fromlineno="70" tolineno="70" lineno="70">
                  <Name fromlineno="70" tolineno="70" lineno="70" name="result_decoded"/>
                  <Index fromlineno="70" tolineno="70" lineno="None">
                    <Name fromlineno="70" tolineno="70" lineno="70" name="loc"/>
                  </Index>
                </Subscript>
                <CallFunc fromlineno="70" tolineno="70" lineno="70" func="Getattr(sub)">
                  <Getattr fromlineno="70" tolineno="70" lineno="70" attrname="sub" expr="re">
                    <Name fromlineno="70" tolineno="70" lineno="70" name="re"/>
                  </Getattr>
                  <Name fromlineno="70" tolineno="70" lineno="70" name="i"/>
                  <Subscript fromlineno="70" tolineno="70" lineno="70">
                    <Name fromlineno="70" tolineno="70" lineno="70" name="uri_replace_decoded"/>
                    <Index fromlineno="70" tolineno="70" lineno="None">
                      <Name fromlineno="70" tolineno="70" lineno="70" name="loc"/>
                    </Index>
                  </Subscript>
                  <Subscript fromlineno="70" tolineno="70" lineno="70">
                    <Name fromlineno="70" tolineno="70" lineno="70" name="uri_decoded"/>
                    <Index fromlineno="70" tolineno="70" lineno="None">
                      <Name fromlineno="70" tolineno="70" lineno="70" name="loc"/>
                    </Index>
                  </Subscript>
                </CallFunc>
              </Assign>
              <If fromlineno="71" tolineno="75" lineno="71">
                <Compare fromlineno="71" tolineno="71" lineno="71" op="('==', &lt;Const(int) l.71 [bb.fetch] at Ox9cdc46c&gt;)">
                  <CallFunc fromlineno="71" tolineno="71" lineno="71" func="Getattr(index)">
                    <Getattr fromlineno="71" tolineno="71" lineno="71" attrname="index" expr="uri_find_decoded">
                      <Name fromlineno="71" tolineno="71" lineno="71" name="uri_find_decoded"/>
                    </Getattr>
                    <Name fromlineno="71" tolineno="71" lineno="71" name="i"/>
                  </CallFunc>
                  <Const fromlineno="71" tolineno="71" lineno="71" type="int">2</Const>
                </Compare>
                <If fromlineno="72" tolineno="75" lineno="72">
                  <Name fromlineno="72" tolineno="72" lineno="72" name="d"/>
                  <Assign fromlineno="73" tolineno="73" lineno="73" targets="[&lt;AssName(localfn) l.73 [bb.fetch] at Ox9cdc50c&gt;]" value="bb.fetch.localpath(uri, d)">
                    <AssName fromlineno="73" tolineno="73" lineno="73" name="localfn"/>
                    <CallFunc fromlineno="73" tolineno="73" lineno="73" func="Getattr(localpath)">
                      <Getattr fromlineno="73" tolineno="73" lineno="73" attrname="localpath" expr="bb.fetch">
                        <Getattr fromlineno="73" tolineno="73" lineno="73" attrname="fetch" expr="bb">
                          <Name fromlineno="73" tolineno="73" lineno="73" name="bb"/>
                        </Getattr>
                      </Getattr>
                      <Name fromlineno="73" tolineno="73" lineno="73" name="uri"/>
                      <Name fromlineno="73" tolineno="73" lineno="73" name="d"/>
                    </CallFunc>
                  </Assign>
                  <If fromlineno="74" tolineno="75" lineno="74">
                    <Name fromlineno="74" tolineno="74" lineno="74" name="localfn"/>
                    <Assign fromlineno="75" tolineno="75" lineno="75" targets="[&lt;Subscript() l.75 [bb.fetch] at Ox9cdc6cc&gt;]" value="((os.path.dirname(result_decoded[loc])) + ('/')) + (os.path.basename(bb.fetch.localpath(uri, d)))">
                      <Subscript fromlineno="75" tolineno="75" lineno="75">
                        <Name fromlineno="75" tolineno="75" lineno="75" name="result_decoded"/>
                        <Index fromlineno="75" tolineno="75" lineno="None">
                          <Name fromlineno="75" tolineno="75" lineno="75" name="loc"/>
                        </Index>
                      </Subscript>
                      <BinOp fromlineno="75" tolineno="75" lineno="75" op="+" left="(os.path.dirname(result_decoded[loc])) + ('/')" right="os.path.basename(bb.fetch.localpath(uri, d))">
                        <BinOp fromlineno="75" tolineno="75" lineno="75" op="+" left="os.path.dirname(result_decoded[loc])" right="'/'">
                          <CallFunc fromlineno="75" tolineno="75" lineno="75" func="Getattr(dirname)">
                            <Getattr fromlineno="75" tolineno="75" lineno="75" attrname="dirname" expr="os.path">
                              <Getattr fromlineno="75" tolineno="75" lineno="75" attrname="path" expr="os">
                                <Name fromlineno="75" tolineno="75" lineno="75" name="os"/>
                              </Getattr>
                            </Getattr>
                            <Subscript fromlineno="75" tolineno="75" lineno="75">
                              <Name fromlineno="75" tolineno="75" lineno="75" name="result_decoded"/>
                              <Index fromlineno="75" tolineno="75" lineno="None">
                                <Name fromlineno="75" tolineno="75" lineno="75" name="loc"/>
                              </Index>
                            </Subscript>
                          </CallFunc>
                          <Const fromlineno="75" tolineno="75" lineno="75" type="str">'/'</Const>
                        </BinOp>
                        <CallFunc fromlineno="75" tolineno="75" lineno="75" func="Getattr(basename)">
                          <Getattr fromlineno="75" tolineno="75" lineno="75" attrname="basename" expr="os.path">
                            <Getattr fromlineno="75" tolineno="75" lineno="75" attrname="path" expr="os">
                              <Name fromlineno="75" tolineno="75" lineno="75" name="os"/>
                            </Getattr>
                          </Getattr>
                          <CallFunc fromlineno="75" tolineno="75" lineno="75" func="Getattr(localpath)">
                            <Getattr fromlineno="75" tolineno="75" lineno="75" attrname="localpath" expr="bb.fetch">
                              <Getattr fromlineno="75" tolineno="75" lineno="75" attrname="fetch" expr="bb">
                                <Name fromlineno="75" tolineno="75" lineno="75" name="bb"/>
                              </Getattr>
                            </Getattr>
                            <Name fromlineno="75" tolineno="75" lineno="75" name="uri"/>
                            <Name fromlineno="75" tolineno="75" lineno="75" name="d"/>
                          </CallFunc>
                        </CallFunc>
                      </BinOp>
                    </Assign>
                  </If>
                </If>
              </If>
              <Return fromlineno="79" tolineno="79" lineno="79">
                <Name fromlineno="79" tolineno="79" lineno="79" name="uri"/>
              </Return>
            </If>
          </If>
        </For>
        <Return fromlineno="83" tolineno="83" lineno="83">
          <CallFunc fromlineno="83" tolineno="83" lineno="83" func="Getattr(encodeurl)">
            <Getattr fromlineno="83" tolineno="83" lineno="83" attrname="encodeurl" expr="bb">
              <Name fromlineno="83" tolineno="83" lineno="83" name="bb"/>
            </Getattr>
            <Name fromlineno="83" tolineno="83" lineno="83" name="result_decoded"/>
          </CallFunc>
        </Return>
      </Function>
      <Assign fromlineno="85" tolineno="85" lineno="85" targets="[&lt;AssName(methods) l.85 [bb.fetch] at Ox9cdcb6c&gt;]" value="[]">
        <AssName fromlineno="85" tolineno="85" lineno="85" name="methods"/>
        <List fromlineno="85" tolineno="85" lineno="85"/>
      </Assign>
      <Assign fromlineno="86" tolineno="86" lineno="86" targets="[&lt;AssName(urldata_cache) l.86 [bb.fetch] at Ox9cdcb8c&gt;]" value="{}">
        <AssName fromlineno="86" tolineno="86" lineno="86" name="urldata_cache"/>
        <Dict fromlineno="86" tolineno="86" lineno="86"/>
      </Assign>
      <Function fromlineno="88" tolineno="105" lineno="88">
        <Arguments fromlineno="88" tolineno="88" lineno="None" format_args="d">
          <AssName fromlineno="88" tolineno="88" lineno="88" name="d"/>
        </Arguments>
        <Assign fromlineno="93" tolineno="93" lineno="93" targets="[&lt;AssName(pd) l.93 [bb.fetch] at Ox9cdceec&gt;]" value="persist_data.PersistData(d)">
          <AssName fromlineno="93" tolineno="93" lineno="93" name="pd"/>
          <CallFunc fromlineno="93" tolineno="93" lineno="93" func="Getattr(PersistData)">
            <Getattr fromlineno="93" tolineno="93" lineno="93" attrname="PersistData" expr="persist_data">
              <Name fromlineno="93" tolineno="93" lineno="93" name="persist_data"/>
            </Getattr>
            <Name fromlineno="93" tolineno="93" lineno="93" name="d"/>
          </CallFunc>
        </Assign>
        <Assign fromlineno="95" tolineno="95" lineno="95" targets="[&lt;AssName(srcrev_policy) l.95 [bb.fetch] at Ox9cdcecc&gt;]" value="(bb.data.getVar('BB_SRCREV_POLICY', d, 1)) or ('clear')">
          <AssName fromlineno="95" tolineno="95" lineno="95" name="srcrev_policy"/>
          <BoolOp fromlineno="95" tolineno="95" lineno="95" op="or" values="bb.data.getVar('BB_SRCREV_POLICY', d, 1),'clear',">
            <CallFunc fromlineno="95" tolineno="95" lineno="95" func="Getattr(getVar)">
              <Getattr fromlineno="95" tolineno="95" lineno="95" attrname="getVar" expr="bb.data">
                <Getattr fromlineno="95" tolineno="95" lineno="95" attrname="data" expr="bb">
                  <Name fromlineno="95" tolineno="95" lineno="95" name="bb"/>
                </Getattr>
              </Getattr>
              <Const fromlineno="95" tolineno="95" lineno="95" type="str">'BB_SRCREV_POLICY'</Const>
              <Name fromlineno="95" tolineno="95" lineno="95" name="d"/>
              <Const fromlineno="95" tolineno="95" lineno="95" type="int">1</Const>
            </CallFunc>
            <Const fromlineno="95" tolineno="95" lineno="95" type="str">'clear'</Const>
          </BoolOp>
        </Assign>
        <If fromlineno="96" tolineno="102" lineno="96">
          <Compare fromlineno="96" tolineno="96" lineno="96" op="('==', &lt;Const(str) l.96 [bb.fetch] at Ox9ce40cc&gt;)">
            <Name fromlineno="96" tolineno="96" lineno="96" name="srcrev_policy"/>
            <Const fromlineno="96" tolineno="96" lineno="96" type="str">'cache'</Const>
          </Compare>
          <Discard fromlineno="97" tolineno="97" lineno="97">
            <CallFunc fromlineno="97" tolineno="97" lineno="97" func="Getattr(debug)">
              <Getattr fromlineno="97" tolineno="97" lineno="97" attrname="debug" expr="bb.msg">
                <Getattr fromlineno="97" tolineno="97" lineno="97" attrname="msg" expr="bb">
                  <Name fromlineno="97" tolineno="97" lineno="97" name="bb"/>
                </Getattr>
              </Getattr>
              <Const fromlineno="97" tolineno="97" lineno="97" type="int">1</Const>
              <Getattr fromlineno="97" tolineno="97" lineno="97" attrname="Fetcher" expr="bb.msg.domain">
                <Getattr fromlineno="97" tolineno="97" lineno="97" attrname="domain" expr="bb.msg">
                  <Getattr fromlineno="97" tolineno="97" lineno="97" attrname="msg" expr="bb">
                    <Name fromlineno="97" tolineno="97" lineno="97" name="bb"/>
                  </Getattr>
                </Getattr>
              </Getattr>
              <BinOp fromlineno="97" tolineno="97" lineno="97" op="%" left="'Keeping SRCREV cache due to cache policy of: %s'" right="srcrev_policy">
                <Const fromlineno="97" tolineno="97" lineno="97" type="str">'Keeping SRCREV cache due to cache policy of: %s'</Const>
                <Name fromlineno="97" tolineno="97" lineno="97" name="srcrev_policy"/>
              </BinOp>
            </CallFunc>
          </Discard>
          <If fromlineno="98" tolineno="102" lineno="98">
            <Compare fromlineno="98" tolineno="98" lineno="98" op="('==', &lt;Const(str) l.98 [bb.fetch] at Ox9ce434c&gt;)">
              <Name fromlineno="98" tolineno="98" lineno="98" name="srcrev_policy"/>
              <Const fromlineno="98" tolineno="98" lineno="98" type="str">'clear'</Const>
            </Compare>
            <Discard fromlineno="99" tolineno="99" lineno="99">
              <CallFunc fromlineno="99" tolineno="99" lineno="99" func="Getattr(debug)">
                <Getattr fromlineno="99" tolineno="99" lineno="99" attrname="debug" expr="bb.msg">
                  <Getattr fromlineno="99" tolineno="99" lineno="99" attrname="msg" expr="bb">
                    <Name fromlineno="99" tolineno="99" lineno="99" name="bb"/>
                  </Getattr>
                </Getattr>
                <Const fromlineno="99" tolineno="99" lineno="99" type="int">1</Const>
                <Getattr fromlineno="99" tolineno="99" lineno="99" attrname="Fetcher" expr="bb.msg.domain">
                  <Getattr fromlineno="99" tolineno="99" lineno="99" attrname="domain" expr="bb.msg">
                    <Getattr fromlineno="99" tolineno="99" lineno="99" attrname="msg" expr="bb">
                      <Name fromlineno="99" tolineno="99" lineno="99" name="bb"/>
                    </Getattr>
                  </Getattr>
                </Getattr>
                <BinOp fromlineno="99" tolineno="99" lineno="99" op="%" left="'Clearing SRCREV cache due to cache policy of: %s'" right="srcrev_policy">
                  <Const fromlineno="99" tolineno="99" lineno="99" type="str">'Clearing SRCREV cache due to cache policy of: %s'</Const>
                  <Name fromlineno="99" tolineno="99" lineno="99" name="srcrev_policy"/>
                </BinOp>
              </CallFunc>
            </Discard>
            <Discard fromlineno="100" tolineno="100" lineno="100">
              <CallFunc fromlineno="100" tolineno="100" lineno="100" func="Getattr(delDomain)">
                <Getattr fromlineno="100" tolineno="100" lineno="100" attrname="delDomain" expr="pd">
                  <Name fromlineno="100" tolineno="100" lineno="100" name="pd"/>
                </Getattr>
                <Const fromlineno="100" tolineno="100" lineno="100" type="str">'BB_URI_HEADREVS'</Const>
              </CallFunc>
            </Discard>
            <Discard fromlineno="102" tolineno="102" lineno="102">
              <CallFunc fromlineno="102" tolineno="102" lineno="102" func="Getattr(fatal)">
                <Getattr fromlineno="102" tolineno="102" lineno="102" attrname="fatal" expr="bb.msg">
                  <Getattr fromlineno="102" tolineno="102" lineno="102" attrname="msg" expr="bb">
                    <Name fromlineno="102" tolineno="102" lineno="102" name="bb"/>
                  </Getattr>
                </Getattr>
                <Getattr fromlineno="102" tolineno="102" lineno="102" attrname="Fetcher" expr="bb.msg.domain">
                  <Getattr fromlineno="102" tolineno="102" lineno="102" attrname="domain" expr="bb.msg">
                    <Getattr fromlineno="102" tolineno="102" lineno="102" attrname="msg" expr="bb">
                      <Name fromlineno="102" tolineno="102" lineno="102" name="bb"/>
                    </Getattr>
                  </Getattr>
                </Getattr>
                <BinOp fromlineno="102" tolineno="102" lineno="102" op="%" left="'Invalid SRCREV cache policy of: %s'" right="srcrev_policy">
                  <Const fromlineno="102" tolineno="102" lineno="102" type="str">'Invalid SRCREV cache policy of: %s'</Const>
                  <Name fromlineno="102" tolineno="102" lineno="102" name="srcrev_policy"/>
                </BinOp>
              </CallFunc>
            </Discard>
          </If>
        </If>
        <Discard fromlineno="104" tolineno="104" lineno="104">
          <CallFunc fromlineno="104" tolineno="104" lineno="104" func="Getattr(addDomain)">
            <Getattr fromlineno="104" tolineno="104" lineno="104" attrname="addDomain" expr="pd">
              <Name fromlineno="104" tolineno="104" lineno="104" name="pd"/>
            </Getattr>
            <Const fromlineno="104" tolineno="104" lineno="104" type="str">'BB_URI_HEADREVS'</Const>
          </CallFunc>
        </Discard>
        <Discard fromlineno="105" tolineno="105" lineno="105">
          <CallFunc fromlineno="105" tolineno="105" lineno="105" func="Getattr(addDomain)">
            <Getattr fromlineno="105" tolineno="105" lineno="105" attrname="addDomain" expr="pd">
              <Name fromlineno="105" tolineno="105" lineno="105" name="pd"/>
            </Getattr>
            <Const fromlineno="105" tolineno="105" lineno="105" type="str">'BB_URI_LOCALCOUNT'</Const>
          </CallFunc>
        </Discard>
      </Function>
      <Function fromlineno="113" tolineno="129" lineno="113">
        <Arguments fromlineno="113" tolineno="113" lineno="None" format_args="urls, d, setup=True">
          <AssName fromlineno="113" tolineno="113" lineno="113" name="urls"/>
          <AssName fromlineno="113" tolineno="113" lineno="113" name="d"/>
          <AssName fromlineno="113" tolineno="113" lineno="113" name="setup"/>
          <Const fromlineno="113" tolineno="113" lineno="113" type="bool">True</Const>
        </Arguments>
        <Assign fromlineno="114" tolineno="114" lineno="114" targets="[&lt;AssName(urldata) l.114 [bb.fetch] at Ox9ce4bcc&gt;]" value="{}">
          <AssName fromlineno="114" tolineno="114" lineno="114" name="urldata"/>
          <Dict fromlineno="114" tolineno="114" lineno="114"/>
        </Assign>
        <Assign fromlineno="115" tolineno="115" lineno="115" targets="[&lt;AssName(fn) l.115 [bb.fetch] at Ox9ce4cac&gt;]" value="bb.data.getVar('FILE', d, 1)">
          <AssName fromlineno="115" tolineno="115" lineno="115" name="fn"/>
          <CallFunc fromlineno="115" tolineno="115" lineno="115" func="Getattr(getVar)">
            <Getattr fromlineno="115" tolineno="115" lineno="115" attrname="getVar" expr="bb.data">
              <Getattr fromlineno="115" tolineno="115" lineno="115" attrname="data" expr="bb">
                <Name fromlineno="115" tolineno="115" lineno="115" name="bb"/>
              </Getattr>
            </Getattr>
            <Const fromlineno="115" tolineno="115" lineno="115" type="str">'FILE'</Const>
            <Name fromlineno="115" tolineno="115" lineno="115" name="d"/>
            <Const fromlineno="115" tolineno="115" lineno="115" type="int">1</Const>
          </CallFunc>
        </Assign>
        <If fromlineno="116" tolineno="117" lineno="116">
          <Compare fromlineno="116" tolineno="116" lineno="116" op="('in', &lt;Name(urldata_cache) l.116 [bb.fetch] at Ox9ce4eac&gt;)">
            <Name fromlineno="116" tolineno="116" lineno="116" name="fn"/>
            <Name fromlineno="116" tolineno="116" lineno="116" name="urldata_cache"/>
          </Compare>
          <Assign fromlineno="117" tolineno="117" lineno="117" targets="[&lt;AssName(urldata) l.117 [bb.fetch] at Ox9ce4f2c&gt;]" value="urldata_cache[fn]">
            <AssName fromlineno="117" tolineno="117" lineno="117" name="urldata"/>
            <Subscript fromlineno="117" tolineno="117" lineno="117">
              <Name fromlineno="117" tolineno="117" lineno="117" name="urldata_cache"/>
              <Index fromlineno="117" tolineno="117" lineno="None">
                <Name fromlineno="117" tolineno="117" lineno="117" name="fn"/>
              </Index>
            </Subscript>
          </Assign>
        </If>
        <For fromlineno="119" tolineno="121" lineno="119">
          <AssName fromlineno="119" tolineno="119" lineno="119" name="url"/>
          <Name fromlineno="119" tolineno="119" lineno="119" name="urls"/>
          <If fromlineno="120" tolineno="121" lineno="120">
            <Compare fromlineno="120" tolineno="120" lineno="120" op="('not in', &lt;Name(urldata) l.120 [bb.fetch] at Ox9ce95ec&gt;)">
              <Name fromlineno="120" tolineno="120" lineno="120" name="url"/>
              <Name fromlineno="120" tolineno="120" lineno="120" name="urldata"/>
            </Compare>
            <Assign fromlineno="121" tolineno="121" lineno="121" targets="[&lt;Subscript() l.121 [bb.fetch] at Ox9ce966c&gt;]" value="FetchData(url, d)">
              <Subscript fromlineno="121" tolineno="121" lineno="121">
                <Name fromlineno="121" tolineno="121" lineno="121" name="urldata"/>
                <Index fromlineno="121" tolineno="121" lineno="None">
                  <Name fromlineno="121" tolineno="121" lineno="121" name="url"/>
                </Index>
              </Subscript>
              <CallFunc fromlineno="121" tolineno="121" lineno="121" func="Name(FetchData)">
                <Name fromlineno="121" tolineno="121" lineno="121" name="FetchData"/>
                <Name fromlineno="121" tolineno="121" lineno="121" name="url"/>
                <Name fromlineno="121" tolineno="121" lineno="121" name="d"/>
              </CallFunc>
            </Assign>
          </If>
        </For>
        <If fromlineno="123" tolineno="126" lineno="123">
          <Name fromlineno="123" tolineno="123" lineno="123" name="setup"/>
          <For fromlineno="124" tolineno="126" lineno="124">
            <AssName fromlineno="124" tolineno="124" lineno="124" name="url"/>
            <Name fromlineno="124" tolineno="124" lineno="124" name="urldata"/>
            <If fromlineno="125" tolineno="126" lineno="125">
              <UnaryOp fromlineno="125" tolineno="125" lineno="125">
                <Getattr fromlineno="125" tolineno="125" lineno="125" attrname="setup" expr="urldata[url]">
                  <Subscript fromlineno="125" tolineno="125" lineno="125">
                    <Name fromlineno="125" tolineno="125" lineno="125" name="urldata"/>
                    <Index fromlineno="125" tolineno="125" lineno="None">
                      <Name fromlineno="125" tolineno="125" lineno="125" name="url"/>
                    </Index>
                  </Subscript>
                </Getattr>
              </UnaryOp>
              <Discard fromlineno="126" tolineno="126" lineno="126">
                <CallFunc fromlineno="126" tolineno="126" lineno="126" func="Getattr(setup_localpath)">
                  <Getattr fromlineno="126" tolineno="126" lineno="126" attrname="setup_localpath" expr="urldata[url]">
                    <Subscript fromlineno="126" tolineno="126" lineno="126">
                      <Name fromlineno="126" tolineno="126" lineno="126" name="urldata"/>
                      <Index fromlineno="126" tolineno="126" lineno="None">
                        <Name fromlineno="126" tolineno="126" lineno="126" name="url"/>
                      </Index>
                    </Subscript>
                  </Getattr>
                  <Name fromlineno="126" tolineno="126" lineno="126" name="d"/>
                </CallFunc>
              </Discard>
            </If>
          </For>
        </If>
        <Assign fromlineno="128" tolineno="128" lineno="128" targets="[&lt;Subscript() l.128 [bb.fetch] at Ox9ce9b4c&gt;]" value="urldata">
          <Subscript fromlineno="128" tolineno="128" lineno="128">
            <Name fromlineno="128" tolineno="128" lineno="128" name="urldata_cache"/>
            <Index fromlineno="128" tolineno="128" lineno="None">
              <Name fromlineno="128" tolineno="128" lineno="128" name="fn"/>
            </Index>
          </Subscript>
          <Name fromlineno="128" tolineno="128" lineno="128" name="urldata"/>
        </Assign>
        <Return fromlineno="129" tolineno="129" lineno="129">
          <Name fromlineno="129" tolineno="129" lineno="129" name="urldata"/>
        </Return>
      </Function>
      <Function fromlineno="131" tolineno="168" lineno="131">
        <Arguments fromlineno="131" tolineno="131" lineno="None" format_args="d, urls=None">
          <AssName fromlineno="131" tolineno="131" lineno="131" name="d"/>
          <AssName fromlineno="131" tolineno="131" lineno="131" name="urls"/>
          <Const fromlineno="131" tolineno="131" lineno="131" type="NoneType">None</Const>
        </Arguments>
        <If fromlineno="136" tolineno="137" lineno="136">
          <UnaryOp fromlineno="136" tolineno="136" lineno="136">
            <Name fromlineno="136" tolineno="136" lineno="136" name="urls"/>
          </UnaryOp>
          <Assign fromlineno="137" tolineno="137" lineno="137" targets="[&lt;AssName(urls) l.137 [bb.fetch] at Ox9ce9ecc&gt;]" value="d.getVar('SRC_URI', 1).split()">
            <AssName fromlineno="137" tolineno="137" lineno="137" name="urls"/>
            <CallFunc fromlineno="137" tolineno="137" lineno="137" func="Getattr(split)">
              <Getattr fromlineno="137" tolineno="137" lineno="137" attrname="split" expr="d.getVar('SRC_URI', 1)">
                <CallFunc fromlineno="137" tolineno="137" lineno="137" func="Getattr(getVar)">
                  <Getattr fromlineno="137" tolineno="137" lineno="137" attrname="getVar" expr="d">
                    <Name fromlineno="137" tolineno="137" lineno="137" name="d"/>
                  </Getattr>
                  <Const fromlineno="137" tolineno="137" lineno="137" type="str">'SRC_URI'</Const>
                  <Const fromlineno="137" tolineno="137" lineno="137" type="int">1</Const>
                </CallFunc>
              </Getattr>
            </CallFunc>
          </Assign>
        </If>
        <Assign fromlineno="138" tolineno="138" lineno="138" targets="[&lt;AssName(urldata) l.138 [bb.fetch] at Ox9ce910c&gt;]" value="init(urls, d, True)">
          <AssName fromlineno="138" tolineno="138" lineno="138" name="urldata"/>
          <CallFunc fromlineno="138" tolineno="138" lineno="138" func="Name(init)">
            <Name fromlineno="138" tolineno="138" lineno="138" name="init"/>
            <Name fromlineno="138" tolineno="138" lineno="138" name="urls"/>
            <Name fromlineno="138" tolineno="138" lineno="138" name="d"/>
            <Const fromlineno="138" tolineno="138" lineno="138" type="bool">True</Const>
          </CallFunc>
        </Assign>
        <For fromlineno="140" tolineno="168" lineno="140">
          <AssName fromlineno="140" tolineno="140" lineno="140" name="u"/>
          <Name fromlineno="140" tolineno="140" lineno="140" name="urls"/>
          <Assign fromlineno="141" tolineno="141" lineno="141" targets="[&lt;AssName(ud) l.141 [bb.fetch] at Ox9ce924c&gt;]" value="urldata[u]">
            <AssName fromlineno="141" tolineno="141" lineno="141" name="ud"/>
            <Subscript fromlineno="141" tolineno="141" lineno="141">
              <Name fromlineno="141" tolineno="141" lineno="141" name="urldata"/>
              <Index fromlineno="141" tolineno="141" lineno="None">
                <Name fromlineno="141" tolineno="141" lineno="141" name="u"/>
              </Index>
            </Subscript>
          </Assign>
          <Assign fromlineno="142" tolineno="142" lineno="142" targets="[&lt;AssName(m) l.142 [bb.fetch] at Ox9cec74c&gt;]" value="ud.method">
            <AssName fromlineno="142" tolineno="142" lineno="142" name="m"/>
            <Getattr fromlineno="142" tolineno="142" lineno="142" attrname="method" expr="ud">
              <Name fromlineno="142" tolineno="142" lineno="142" name="ud"/>
            </Getattr>
          </Assign>
          <If fromlineno="143" tolineno="163" lineno="143">
            <Getattr fromlineno="143" tolineno="143" lineno="143" attrname="localfile" expr="ud">
              <Name fromlineno="143" tolineno="143" lineno="143" name="ud"/>
            </Getattr>
            <If fromlineno="144" tolineno="152" lineno="144">
              <BoolOp fromlineno="144" tolineno="144" lineno="144" op="and" values="not m.forcefetch(u, ud, d),os.path.exists(ud.md5),">
                <UnaryOp fromlineno="144" tolineno="144" lineno="144">
                  <CallFunc fromlineno="144" tolineno="144" lineno="144" func="Getattr(forcefetch)">
                    <Getattr fromlineno="144" tolineno="144" lineno="144" attrname="forcefetch" expr="m">
                      <Name fromlineno="144" tolineno="144" lineno="144" name="m"/>
                    </Getattr>
                    <Name fromlineno="144" tolineno="144" lineno="144" name="u"/>
                    <Name fromlineno="144" tolineno="144" lineno="144" name="ud"/>
                    <Name fromlineno="144" tolineno="144" lineno="144" name="d"/>
                  </CallFunc>
                </UnaryOp>
                <CallFunc fromlineno="144" tolineno="144" lineno="144" func="Getattr(exists)">
                  <Getattr fromlineno="144" tolineno="144" lineno="144" attrname="exists" expr="os.path">
                    <Getattr fromlineno="144" tolineno="144" lineno="144" attrname="path" expr="os">
                      <Name fromlineno="144" tolineno="144" lineno="144" name="os"/>
                    </Getattr>
                  </Getattr>
                  <Getattr fromlineno="144" tolineno="144" lineno="144" attrname="md5" expr="ud">
                    <Name fromlineno="144" tolineno="144" lineno="144" name="ud"/>
                  </Getattr>
                </CallFunc>
              </BoolOp>
              <TryExcept fromlineno="147" tolineno="151" lineno="147">
                <Discard fromlineno="148" tolineno="148" lineno="148">
                  <CallFunc fromlineno="148" tolineno="148" lineno="148" func="Getattr(utime)">
                    <Getattr fromlineno="148" tolineno="148" lineno="148" attrname="utime" expr="os">
                      <Name fromlineno="148" tolineno="148" lineno="148" name="os"/>
                    </Getattr>
                    <Getattr fromlineno="148" tolineno="148" lineno="148" attrname="md5" expr="ud">
                      <Name fromlineno="148" tolineno="148" lineno="148" name="ud"/>
                    </Getattr>
                    <Const fromlineno="148" tolineno="148" lineno="148" type="NoneType">None</Const>
                  </CallFunc>
                </Discard>
                <ExceptHandler fromlineno="149" tolineno="151" lineno="149">
                  <Pass fromlineno="151" tolineno="151" lineno="151"/>
                </ExceptHandler>
              </TryExcept>
              <Continue fromlineno="152" tolineno="152" lineno="152"/>
            </If>
            <Assign fromlineno="153" tolineno="153" lineno="153" targets="[&lt;AssName(lf) l.153 [bb.fetch] at Ox9e006cc&gt;]" value="bb.utils.lockfile(ud.lockfile)">
              <AssName fromlineno="153" tolineno="153" lineno="153" name="lf"/>
              <CallFunc fromlineno="153" tolineno="153" lineno="153" func="Getattr(lockfile)">
                <Getattr fromlineno="153" tolineno="153" lineno="153" attrname="lockfile" expr="bb.utils">
                  <Getattr fromlineno="153" tolineno="153" lineno="153" attrname="utils" expr="bb">
                    <Name fromlineno="153" tolineno="153" lineno="153" name="bb"/>
                  </Getattr>
                </Getattr>
                <Getattr fromlineno="153" tolineno="153" lineno="153" attrname="lockfile" expr="ud">
                  <Name fromlineno="153" tolineno="153" lineno="153" name="ud"/>
                </Getattr>
              </CallFunc>
            </Assign>
            <If fromlineno="154" tolineno="163" lineno="154">
              <BoolOp fromlineno="154" tolineno="154" lineno="154" op="and" values="not m.forcefetch(u, ud, d),os.path.exists(ud.md5),">
                <UnaryOp fromlineno="154" tolineno="154" lineno="154">
                  <CallFunc fromlineno="154" tolineno="154" lineno="154" func="Getattr(forcefetch)">
                    <Getattr fromlineno="154" tolineno="154" lineno="154" attrname="forcefetch" expr="m">
                      <Name fromlineno="154" tolineno="154" lineno="154" name="m"/>
                    </Getattr>
                    <Name fromlineno="154" tolineno="154" lineno="154" name="u"/>
                    <Name fromlineno="154" tolineno="154" lineno="154" name="ud"/>
                    <Name fromlineno="154" tolineno="154" lineno="154" name="d"/>
                  </CallFunc>
                </UnaryOp>
                <CallFunc fromlineno="154" tolineno="154" lineno="154" func="Getattr(exists)">
                  <Getattr fromlineno="154" tolineno="154" lineno="154" attrname="exists" expr="os.path">
                    <Getattr fromlineno="154" tolineno="154" lineno="154" attrname="path" expr="os">
                      <Name fromlineno="154" tolineno="154" lineno="154" name="os"/>
                    </Getattr>
                  </Getattr>
                  <Getattr fromlineno="154" tolineno="154" lineno="154" attrname="md5" expr="ud">
                    <Name fromlineno="154" tolineno="154" lineno="154" name="ud"/>
                  </Getattr>
                </CallFunc>
              </BoolOp>
              <TryExcept fromlineno="157" tolineno="161" lineno="157">
                <Discard fromlineno="158" tolineno="158" lineno="158">
                  <CallFunc fromlineno="158" tolineno="158" lineno="158" func="Getattr(utime)">
                    <Getattr fromlineno="158" tolineno="158" lineno="158" attrname="utime" expr="os">
                      <Name fromlineno="158" tolineno="158" lineno="158" name="os"/>
                    </Getattr>
                    <Getattr fromlineno="158" tolineno="158" lineno="158" attrname="md5" expr="ud">
                      <Name fromlineno="158" tolineno="158" lineno="158" name="ud"/>
                    </Getattr>
                    <Const fromlineno="158" tolineno="158" lineno="158" type="NoneType">None</Const>
                  </CallFunc>
                </Discard>
                <ExceptHandler fromlineno="159" tolineno="161" lineno="159">
                  <Pass fromlineno="161" tolineno="161" lineno="161"/>
                </ExceptHandler>
              </TryExcept>
              <Discard fromlineno="162" tolineno="162" lineno="162">
                <CallFunc fromlineno="162" tolineno="162" lineno="162" func="Getattr(unlockfile)">
                  <Getattr fromlineno="162" tolineno="162" lineno="162" attrname="unlockfile" expr="bb.utils">
                    <Getattr fromlineno="162" tolineno="162" lineno="162" attrname="utils" expr="bb">
                      <Name fromlineno="162" tolineno="162" lineno="162" name="bb"/>
                    </Getattr>
                  </Getattr>
                  <Name fromlineno="162" tolineno="162" lineno="162" name="lf"/>
                </CallFunc>
              </Discard>
              <Continue fromlineno="163" tolineno="163" lineno="163"/>
            </If>
          </If>
          <Discard fromlineno="164" tolineno="164" lineno="164">
            <CallFunc fromlineno="164" tolineno="164" lineno="164" func="Getattr(go)">
              <Getattr fromlineno="164" tolineno="164" lineno="164" attrname="go" expr="m">
                <Name fromlineno="164" tolineno="164" lineno="164" name="m"/>
              </Getattr>
              <Name fromlineno="164" tolineno="164" lineno="164" name="u"/>
              <Name fromlineno="164" tolineno="164" lineno="164" name="ud"/>
              <Name fromlineno="164" tolineno="164" lineno="164" name="d"/>
            </CallFunc>
          </Discard>
          <If fromlineno="165" tolineno="168" lineno="165">
            <Getattr fromlineno="165" tolineno="165" lineno="165" attrname="localfile" expr="ud">
              <Name fromlineno="165" tolineno="165" lineno="165" name="ud"/>
            </Getattr>
            <If fromlineno="166" tolineno="167" lineno="166">
              <UnaryOp fromlineno="166" tolineno="166" lineno="166">
                <CallFunc fromlineno="166" tolineno="166" lineno="166" func="Getattr(forcefetch)">
                  <Getattr fromlineno="166" tolineno="166" lineno="166" attrname="forcefetch" expr="m">
                    <Name fromlineno="166" tolineno="166" lineno="166" name="m"/>
                  </Getattr>
                  <Name fromlineno="166" tolineno="166" lineno="166" name="u"/>
                  <Name fromlineno="166" tolineno="166" lineno="166" name="ud"/>
                  <Name fromlineno="166" tolineno="166" lineno="166" name="d"/>
                </CallFunc>
              </UnaryOp>
              <Discard fromlineno="167" tolineno="167" lineno="167">
                <CallFunc fromlineno="167" tolineno="167" lineno="167" func="Getattr(write_md5sum)">
                  <Getattr fromlineno="167" tolineno="167" lineno="167" attrname="write_md5sum" expr="Fetch">
                    <Name fromlineno="167" tolineno="167" lineno="167" name="Fetch"/>
                  </Getattr>
                  <Name fromlineno="167" tolineno="167" lineno="167" name="u"/>
                  <Name fromlineno="167" tolineno="167" lineno="167" name="ud"/>
                  <Name fromlineno="167" tolineno="167" lineno="167" name="d"/>
                </CallFunc>
              </Discard>
            </If>
            <Discard fromlineno="168" tolineno="168" lineno="168">
              <CallFunc fromlineno="168" tolineno="168" lineno="168" func="Getattr(unlockfile)">
                <Getattr fromlineno="168" tolineno="168" lineno="168" attrname="unlockfile" expr="bb.utils">
                  <Getattr fromlineno="168" tolineno="168" lineno="168" attrname="utils" expr="bb">
                    <Name fromlineno="168" tolineno="168" lineno="168" name="bb"/>
                  </Getattr>
                </Getattr>
                <Name fromlineno="168" tolineno="168" lineno="168" name="lf"/>
              </CallFunc>
            </Discard>
          </If>
        </For>
      </Function>
      <Function fromlineno="171" tolineno="184" lineno="171">
        <Arguments fromlineno="171" tolineno="171" lineno="None" format_args="d">
          <AssName fromlineno="171" tolineno="171" lineno="171" name="d"/>
        </Arguments>
        <Assign fromlineno="176" tolineno="176" lineno="176" targets="[&lt;AssName(urldata) l.176 [bb.fetch] at Ox9b8438c&gt;]" value="init([], d, True)">
          <AssName fromlineno="176" tolineno="176" lineno="176" name="urldata"/>
          <CallFunc fromlineno="176" tolineno="176" lineno="176" func="Name(init)">
            <Name fromlineno="176" tolineno="176" lineno="176" name="init"/>
            <List fromlineno="176" tolineno="176" lineno="176"/>
            <Name fromlineno="176" tolineno="176" lineno="176" name="d"/>
            <Const fromlineno="176" tolineno="176" lineno="176" type="bool">True</Const>
          </CallFunc>
        </Assign>
        <For fromlineno="178" tolineno="184" lineno="178">
          <AssName fromlineno="178" tolineno="178" lineno="178" name="u"/>
          <Name fromlineno="178" tolineno="178" lineno="178" name="urldata"/>
          <Assign fromlineno="179" tolineno="179" lineno="179" targets="[&lt;AssName(ud) l.179 [bb.fetch] at Ox9b845ac&gt;]" value="urldata[u]">
            <AssName fromlineno="179" tolineno="179" lineno="179" name="ud"/>
            <Subscript fromlineno="179" tolineno="179" lineno="179">
              <Name fromlineno="179" tolineno="179" lineno="179" name="urldata"/>
              <Index fromlineno="179" tolineno="179" lineno="None">
                <Name fromlineno="179" tolineno="179" lineno="179" name="u"/>
              </Index>
            </Subscript>
          </Assign>
          <Assign fromlineno="180" tolineno="180" lineno="180" targets="[&lt;AssName(m) l.180 [bb.fetch] at Ox9b846ac&gt;]" value="ud.method">
            <AssName fromlineno="180" tolineno="180" lineno="180" name="m"/>
            <Getattr fromlineno="180" tolineno="180" lineno="180" attrname="method" expr="ud">
              <Name fromlineno="180" tolineno="180" lineno="180" name="ud"/>
            </Getattr>
          </Assign>
          <Discard fromlineno="181" tolineno="181" lineno="181">
            <CallFunc fromlineno="181" tolineno="181" lineno="181" func="Getattr(note)">
              <Getattr fromlineno="181" tolineno="181" lineno="181" attrname="note" expr="bb.msg">
                <Getattr fromlineno="181" tolineno="181" lineno="181" attrname="msg" expr="bb">
                  <Name fromlineno="181" tolineno="181" lineno="181" name="bb"/>
                </Getattr>
              </Getattr>
              <Const fromlineno="181" tolineno="181" lineno="181" type="int">1</Const>
              <Getattr fromlineno="181" tolineno="181" lineno="181" attrname="Fetcher" expr="bb.msg.domain">
                <Getattr fromlineno="181" tolineno="181" lineno="181" attrname="domain" expr="bb.msg">
                  <Getattr fromlineno="181" tolineno="181" lineno="181" attrname="msg" expr="bb">
                    <Name fromlineno="181" tolineno="181" lineno="181" name="bb"/>
                  </Getattr>
                </Getattr>
              </Getattr>
              <BinOp fromlineno="181" tolineno="181" lineno="181" op="%" left="'Testing URL %s'" right="u">
                <Const fromlineno="181" tolineno="181" lineno="181" type="str">'Testing URL %s'</Const>
                <Name fromlineno="181" tolineno="181" lineno="181" name="u"/>
              </BinOp>
            </CallFunc>
          </Discard>
          <Assign fromlineno="182" tolineno="182" lineno="182" targets="[&lt;AssName(ret) l.182 [bb.fetch] at Ox9b8492c&gt;]" value="m.checkstatus(u, ud, d)">
            <AssName fromlineno="182" tolineno="182" lineno="182" name="ret"/>
            <CallFunc fromlineno="182" tolineno="182" lineno="182" func="Getattr(checkstatus)">
              <Getattr fromlineno="182" tolineno="182" lineno="182" attrname="checkstatus" expr="m">
                <Name fromlineno="182" tolineno="182" lineno="182" name="m"/>
              </Getattr>
              <Name fromlineno="182" tolineno="182" lineno="182" name="u"/>
              <Name fromlineno="182" tolineno="182" lineno="182" name="ud"/>
              <Name fromlineno="182" tolineno="182" lineno="182" name="d"/>
            </CallFunc>
          </Assign>
          <If fromlineno="183" tolineno="184" lineno="183">
            <UnaryOp fromlineno="183" tolineno="183" lineno="183">
              <Name fromlineno="183" tolineno="183" lineno="183" name="ret"/>
            </UnaryOp>
            <Discard fromlineno="184" tolineno="184" lineno="184">
              <CallFunc fromlineno="184" tolineno="184" lineno="184" func="Getattr(fatal)">
                <Getattr fromlineno="184" tolineno="184" lineno="184" attrname="fatal" expr="bb.msg">
                  <Getattr fromlineno="184" tolineno="184" lineno="184" attrname="msg" expr="bb">
                    <Name fromlineno="184" tolineno="184" lineno="184" name="bb"/>
                  </Getattr>
                </Getattr>
                <Getattr fromlineno="184" tolineno="184" lineno="184" attrname="Fetcher" expr="bb.msg.domain">
                  <Getattr fromlineno="184" tolineno="184" lineno="184" attrname="domain" expr="bb.msg">
                    <Getattr fromlineno="184" tolineno="184" lineno="184" attrname="msg" expr="bb">
                      <Name fromlineno="184" tolineno="184" lineno="184" name="bb"/>
                    </Getattr>
                  </Getattr>
                </Getattr>
                <BinOp fromlineno="184" tolineno="184" lineno="184" op="%" left="&quot;URL %s doesn't work&quot;" right="u">
                  <Const fromlineno="184" tolineno="184" lineno="184" type="str">"URL %s doesn't work"</Const>
                  <Name fromlineno="184" tolineno="184" lineno="184" name="u"/>
                </BinOp>
              </CallFunc>
            </Discard>
          </If>
        </For>
      </Function>
      <Function fromlineno="186" tolineno="197" lineno="186">
        <Arguments fromlineno="186" tolineno="186" lineno="None" format_args="d">
          <AssName fromlineno="186" tolineno="186" lineno="186" name="d"/>
        </Arguments>
        <Assign fromlineno="190" tolineno="190" lineno="190" targets="[&lt;AssName(local) l.190 [bb.fetch] at Ox9b84d8c&gt;]" value="[]">
          <AssName fromlineno="190" tolineno="190" lineno="190" name="local"/>
          <List fromlineno="190" tolineno="190" lineno="190"/>
        </Assign>
        <Assign fromlineno="191" tolineno="191" lineno="191" targets="[&lt;AssName(urldata) l.191 [bb.fetch] at Ox9b84e4c&gt;]" value="init([], d, True)">
          <AssName fromlineno="191" tolineno="191" lineno="191" name="urldata"/>
          <CallFunc fromlineno="191" tolineno="191" lineno="191" func="Name(init)">
            <Name fromlineno="191" tolineno="191" lineno="191" name="init"/>
            <List fromlineno="191" tolineno="191" lineno="191"/>
            <Name fromlineno="191" tolineno="191" lineno="191" name="d"/>
            <Const fromlineno="191" tolineno="191" lineno="191" type="bool">True</Const>
          </CallFunc>
        </Assign>
        <For fromlineno="193" tolineno="195" lineno="193">
          <AssName fromlineno="193" tolineno="193" lineno="193" name="u"/>
          <Name fromlineno="193" tolineno="193" lineno="193" name="urldata"/>
          <Assign fromlineno="194" tolineno="194" lineno="194" targets="[&lt;AssName(ud) l.194 [bb.fetch] at Ox9b8c08c&gt;]" value="urldata[u]">
            <AssName fromlineno="194" tolineno="194" lineno="194" name="ud"/>
            <Subscript fromlineno="194" tolineno="194" lineno="194">
              <Name fromlineno="194" tolineno="194" lineno="194" name="urldata"/>
              <Index fromlineno="194" tolineno="194" lineno="None">
                <Name fromlineno="194" tolineno="194" lineno="194" name="u"/>
              </Index>
            </Subscript>
          </Assign>
          <Discard fromlineno="195" tolineno="195" lineno="195">
            <CallFunc fromlineno="195" tolineno="195" lineno="195" func="Getattr(append)">
              <Getattr fromlineno="195" tolineno="195" lineno="195" attrname="append" expr="local">
                <Name fromlineno="195" tolineno="195" lineno="195" name="local"/>
              </Getattr>
              <Getattr fromlineno="195" tolineno="195" lineno="195" attrname="localpath" expr="ud">
                <Name fromlineno="195" tolineno="195" lineno="195" name="ud"/>
              </Getattr>
            </CallFunc>
          </Discard>
        </For>
        <Return fromlineno="197" tolineno="197" lineno="197">
          <Name fromlineno="197" tolineno="197" lineno="197" name="local"/>
        </Return>
      </Function>
      <Assign fromlineno="199" tolineno="199" lineno="199" targets="[&lt;AssName(srcrev_internal_call) l.199 [bb.fetch] at Ox9b8c28c&gt;]" value="False">
        <AssName fromlineno="199" tolineno="199" lineno="199" name="srcrev_internal_call"/>
        <Const fromlineno="199" tolineno="199" lineno="199" type="bool">False</Const>
      </Assign>
      <Function fromlineno="201" tolineno="256" lineno="201">
        <Arguments fromlineno="201" tolineno="201" lineno="None" format_args="d">
          <AssName fromlineno="201" tolineno="201" lineno="201" name="d"/>
        </Arguments>
        <If fromlineno="219" tolineno="220" lineno="219">
          <Getattr fromlineno="219" tolineno="219" lineno="219" attrname="srcrev_internal_call" expr="bb.fetch">
            <Getattr fromlineno="219" tolineno="219" lineno="219" attrname="fetch" expr="bb">
              <Name fromlineno="219" tolineno="219" lineno="219" name="bb"/>
            </Getattr>
          </Getattr>
          <Return fromlineno="220" tolineno="220" lineno="220">
            <Const fromlineno="220" tolineno="220" lineno="220" type="str">'SRCREVINACTION'</Const>
          </Return>
        </If>
        <Assign fromlineno="222" tolineno="222" lineno="222" targets="[&lt;AssName(scms) l.222 [bb.fetch] at Ox9b8c50c&gt;]" value="[]">
          <AssName fromlineno="222" tolineno="222" lineno="222" name="scms"/>
          <List fromlineno="222" tolineno="222" lineno="222"/>
        </Assign>
        <Assign fromlineno="225" tolineno="225" lineno="225" targets="[&lt;AssName(urldata) l.225 [bb.fetch] at Ox9b8c5cc&gt;]" value="init(bb.data.getVar('SRC_URI', d, 1).split(), d, False)">
          <AssName fromlineno="225" tolineno="225" lineno="225" name="urldata"/>
          <CallFunc fromlineno="225" tolineno="225" lineno="225" func="Name(init)">
            <Name fromlineno="225" tolineno="225" lineno="225" name="init"/>
            <CallFunc fromlineno="225" tolineno="225" lineno="225" func="Getattr(split)">
              <Getattr fromlineno="225" tolineno="225" lineno="225" attrname="split" expr="bb.data.getVar('SRC_URI', d, 1)">
                <CallFunc fromlineno="225" tolineno="225" lineno="225" func="Getattr(getVar)">
                  <Getattr fromlineno="225" tolineno="225" lineno="225" attrname="getVar" expr="bb.data">
                    <Getattr fromlineno="225" tolineno="225" lineno="225" attrname="data" expr="bb">
                      <Name fromlineno="225" tolineno="225" lineno="225" name="bb"/>
                    </Getattr>
                  </Getattr>
                  <Const fromlineno="225" tolineno="225" lineno="225" type="str">'SRC_URI'</Const>
                  <Name fromlineno="225" tolineno="225" lineno="225" name="d"/>
                  <Const fromlineno="225" tolineno="225" lineno="225" type="int">1</Const>
                </CallFunc>
              </Getattr>
            </CallFunc>
            <Name fromlineno="225" tolineno="225" lineno="225" name="d"/>
            <Const fromlineno="225" tolineno="225" lineno="225" type="bool">False</Const>
          </CallFunc>
        </Assign>
        <For fromlineno="226" tolineno="231" lineno="226">
          <AssName fromlineno="226" tolineno="226" lineno="226" name="u"/>
          <Name fromlineno="226" tolineno="226" lineno="226" name="urldata"/>
          <Assign fromlineno="227" tolineno="227" lineno="227" targets="[&lt;AssName(ud) l.227 [bb.fetch] at Ox9b8c90c&gt;]" value="urldata[u]">
            <AssName fromlineno="227" tolineno="227" lineno="227" name="ud"/>
            <Subscript fromlineno="227" tolineno="227" lineno="227">
              <Name fromlineno="227" tolineno="227" lineno="227" name="urldata"/>
              <Index fromlineno="227" tolineno="227" lineno="None">
                <Name fromlineno="227" tolineno="227" lineno="227" name="u"/>
              </Index>
            </Subscript>
          </Assign>
          <If fromlineno="228" tolineno="231" lineno="228">
            <CallFunc fromlineno="228" tolineno="228" lineno="228" func="Getattr(suppports_srcrev)">
              <Getattr fromlineno="228" tolineno="228" lineno="228" attrname="suppports_srcrev" expr="ud.method">
                <Getattr fromlineno="228" tolineno="228" lineno="228" attrname="method" expr="ud">
                  <Name fromlineno="228" tolineno="228" lineno="228" name="ud"/>
                </Getattr>
              </Getattr>
            </CallFunc>
            <If fromlineno="229" tolineno="230" lineno="229">
              <UnaryOp fromlineno="229" tolineno="229" lineno="229">
                <Getattr fromlineno="229" tolineno="229" lineno="229" attrname="setup" expr="ud">
                  <Name fromlineno="229" tolineno="229" lineno="229" name="ud"/>
                </Getattr>
              </UnaryOp>
              <Discard fromlineno="230" tolineno="230" lineno="230">
                <CallFunc fromlineno="230" tolineno="230" lineno="230" func="Getattr(setup_localpath)">
                  <Getattr fromlineno="230" tolineno="230" lineno="230" attrname="setup_localpath" expr="ud">
                    <Name fromlineno="230" tolineno="230" lineno="230" name="ud"/>
                  </Getattr>
                  <Name fromlineno="230" tolineno="230" lineno="230" name="d"/>
                </CallFunc>
              </Discard>
            </If>
            <Discard fromlineno="231" tolineno="231" lineno="231">
              <CallFunc fromlineno="231" tolineno="231" lineno="231" func="Getattr(append)">
                <Getattr fromlineno="231" tolineno="231" lineno="231" attrname="append" expr="scms">
                  <Name fromlineno="231" tolineno="231" lineno="231" name="scms"/>
                </Getattr>
                <Name fromlineno="231" tolineno="231" lineno="231" name="u"/>
              </CallFunc>
            </Discard>
          </If>
        </For>
        <If fromlineno="233" tolineno="235" lineno="233">
          <Compare fromlineno="233" tolineno="233" lineno="233" op="('==', &lt;Const(int) l.233 [bb.fetch] at Ox9b8ce0c&gt;)">
            <CallFunc fromlineno="233" tolineno="233" lineno="233" func="Name(len)">
              <Name fromlineno="233" tolineno="233" lineno="233" name="len"/>
              <Name fromlineno="233" tolineno="233" lineno="233" name="scms"/>
            </CallFunc>
            <Const fromlineno="233" tolineno="233" lineno="233" type="int">0</Const>
          </Compare>
          <Discard fromlineno="234" tolineno="234" lineno="234">
            <CallFunc fromlineno="234" tolineno="234" lineno="234" func="Getattr(error)">
              <Getattr fromlineno="234" tolineno="234" lineno="234" attrname="error" expr="bb.msg">
                <Getattr fromlineno="234" tolineno="234" lineno="234" attrname="msg" expr="bb">
                  <Name fromlineno="234" tolineno="234" lineno="234" name="bb"/>
                </Getattr>
              </Getattr>
              <Getattr fromlineno="234" tolineno="234" lineno="234" attrname="Fetcher" expr="bb.msg.domain">
                <Getattr fromlineno="234" tolineno="234" lineno="234" attrname="domain" expr="bb.msg">
                  <Getattr fromlineno="234" tolineno="234" lineno="234" attrname="msg" expr="bb">
                    <Name fromlineno="234" tolineno="234" lineno="234" name="bb"/>
                  </Getattr>
                </Getattr>
              </Getattr>
              <Const fromlineno="234" tolineno="234" lineno="234" type="str">'SRCREV was used yet no valid SCM was found in SRC_URI'</Const>
            </CallFunc>
          </Discard>
          <Raise fromlineno="235" tolineno="235" lineno="235">
            <Name fromlineno="235" tolineno="235" lineno="235" name="ParameterError"/>
          </Raise>
        </If>
        <Discard fromlineno="237" tolineno="237" lineno="237">
          <CallFunc fromlineno="237" tolineno="237" lineno="237" func="Getattr(setVar)">
            <Getattr fromlineno="237" tolineno="237" lineno="237" attrname="setVar" expr="bb.data">
              <Getattr fromlineno="237" tolineno="237" lineno="237" attrname="data" expr="bb">
                <Name fromlineno="237" tolineno="237" lineno="237" name="bb"/>
              </Getattr>
            </Getattr>
            <Const fromlineno="237" tolineno="237" lineno="237" type="str">'__BB_DONT_CACHE'</Const>
            <Const fromlineno="237" tolineno="237" lineno="237" type="str">'1'</Const>
            <Name fromlineno="237" tolineno="237" lineno="237" name="d"/>
          </CallFunc>
        </Discard>
        <If fromlineno="239" tolineno="240" lineno="239">
          <Compare fromlineno="239" tolineno="239" lineno="239" op="('==', &lt;Const(int) l.239 [bb.fetch] at Ox9b9222c&gt;)">
            <CallFunc fromlineno="239" tolineno="239" lineno="239" func="Name(len)">
              <Name fromlineno="239" tolineno="239" lineno="239" name="len"/>
              <Name fromlineno="239" tolineno="239" lineno="239" name="scms"/>
            </CallFunc>
            <Const fromlineno="239" tolineno="239" lineno="239" type="int">1</Const>
          </Compare>
          <Return fromlineno="240" tolineno="240" lineno="240">
            <CallFunc fromlineno="240" tolineno="240" lineno="240" func="Getattr(sortable_revision)">
              <Getattr fromlineno="240" tolineno="240" lineno="240" attrname="sortable_revision" expr="urldata[scms[0]].method">
                <Getattr fromlineno="240" tolineno="240" lineno="240" attrname="method" expr="urldata[scms[0]]">
                  <Subscript fromlineno="240" tolineno="240" lineno="240">
                    <Name fromlineno="240" tolineno="240" lineno="240" name="urldata"/>
                    <Index fromlineno="240" tolineno="240" lineno="None">
                      <Subscript fromlineno="240" tolineno="240" lineno="240">
                        <Name fromlineno="240" tolineno="240" lineno="240" name="scms"/>
                        <Index fromlineno="240" tolineno="240" lineno="None">
                          <Const fromlineno="240" tolineno="240" lineno="240" type="int">0</Const>
                        </Index>
                      </Subscript>
                    </Index>
                  </Subscript>
                </Getattr>
              </Getattr>
              <Subscript fromlineno="240" tolineno="240" lineno="240">
                <Name fromlineno="240" tolineno="240" lineno="240" name="scms"/>
                <Index fromlineno="240" tolineno="240" lineno="None">
                  <Const fromlineno="240" tolineno="240" lineno="240" type="int">0</Const>
                </Index>
              </Subscript>
              <Subscript fromlineno="240" tolineno="240" lineno="240">
                <Name fromlineno="240" tolineno="240" lineno="240" name="urldata"/>
                <Index fromlineno="240" tolineno="240" lineno="None">
                  <Subscript fromlineno="240" tolineno="240" lineno="240">
                    <Name fromlineno="240" tolineno="240" lineno="240" name="scms"/>
                    <Index fromlineno="240" tolineno="240" lineno="None">
                      <Const fromlineno="240" tolineno="240" lineno="240" type="int">0</Const>
                    </Index>
                  </Subscript>
                </Index>
              </Subscript>
              <Name fromlineno="240" tolineno="240" lineno="240" name="d"/>
            </CallFunc>
          </Return>
        </If>
        <Assign fromlineno="245" tolineno="245" lineno="245" targets="[&lt;AssName(format) l.245 [bb.fetch] at Ox9b925ac&gt;]" value="bb.data.getVar('SRCREV_FORMAT', d, 1)">
          <AssName fromlineno="245" tolineno="245" lineno="245" name="format"/>
          <CallFunc fromlineno="245" tolineno="245" lineno="245" func="Getattr(getVar)">
            <Getattr fromlineno="245" tolineno="245" lineno="245" attrname="getVar" expr="bb.data">
              <Getattr fromlineno="245" tolineno="245" lineno="245" attrname="data" expr="bb">
                <Name fromlineno="245" tolineno="245" lineno="245" name="bb"/>
              </Getattr>
            </Getattr>
            <Const fromlineno="245" tolineno="245" lineno="245" type="str">'SRCREV_FORMAT'</Const>
            <Name fromlineno="245" tolineno="245" lineno="245" name="d"/>
            <Const fromlineno="245" tolineno="245" lineno="245" type="int">1</Const>
          </CallFunc>
        </Assign>
        <If fromlineno="246" tolineno="248" lineno="246">
          <UnaryOp fromlineno="246" tolineno="246" lineno="246">
            <Name fromlineno="246" tolineno="246" lineno="246" name="format"/>
          </UnaryOp>
          <Discard fromlineno="247" tolineno="247" lineno="247">
            <CallFunc fromlineno="247" tolineno="247" lineno="247" func="Getattr(error)">
              <Getattr fromlineno="247" tolineno="247" lineno="247" attrname="error" expr="bb.msg">
                <Getattr fromlineno="247" tolineno="247" lineno="247" attrname="msg" expr="bb">
                  <Name fromlineno="247" tolineno="247" lineno="247" name="bb"/>
                </Getattr>
              </Getattr>
              <Getattr fromlineno="247" tolineno="247" lineno="247" attrname="Fetcher" expr="bb.msg.domain">
                <Getattr fromlineno="247" tolineno="247" lineno="247" attrname="domain" expr="bb.msg">
                  <Getattr fromlineno="247" tolineno="247" lineno="247" attrname="msg" expr="bb">
                    <Name fromlineno="247" tolineno="247" lineno="247" name="bb"/>
                  </Getattr>
                </Getattr>
              </Getattr>
              <Const fromlineno="247" tolineno="247" lineno="247" type="str">'The SRCREV_FORMAT variable must be set when multiple SCMs are used.'</Const>
            </CallFunc>
          </Discard>
          <Raise fromlineno="248" tolineno="248" lineno="248">
            <Name fromlineno="248" tolineno="248" lineno="248" name="ParameterError"/>
          </Raise>
        </If>
        <For fromlineno="250" tolineno="254" lineno="250">
          <AssName fromlineno="250" tolineno="250" lineno="250" name="scm"/>
          <Name fromlineno="250" tolineno="250" lineno="250" name="scms"/>
          <If fromlineno="251" tolineno="254" lineno="251">
            <Compare fromlineno="251" tolineno="251" lineno="251" op="('in', &lt;Getattr(parm) l.251 [bb.fetch] at Ox9b92a8c&gt;)">
              <Const fromlineno="251" tolineno="251" lineno="251" type="str">'name'</Const>
              <Getattr fromlineno="251" tolineno="251" lineno="251" attrname="parm" expr="urldata[scm]">
                <Subscript fromlineno="251" tolineno="251" lineno="251">
                  <Name fromlineno="251" tolineno="251" lineno="251" name="urldata"/>
                  <Index fromlineno="251" tolineno="251" lineno="None">
                    <Name fromlineno="251" tolineno="251" lineno="251" name="scm"/>
                  </Index>
                </Subscript>
              </Getattr>
            </Compare>
            <Assign fromlineno="252" tolineno="252" lineno="252" targets="[&lt;AssName(name) l.252 [bb.fetch] at Ox9b92b8c&gt;]" value="urldata[scm].parm['name']">
              <AssName fromlineno="252" tolineno="252" lineno="252" name="name"/>
              <Subscript fromlineno="252" tolineno="252" lineno="252">
                <Getattr fromlineno="252" tolineno="252" lineno="252" attrname="parm" expr="urldata[scm]">
                  <Subscript fromlineno="252" tolineno="252" lineno="252">
                    <Name fromlineno="252" tolineno="252" lineno="252" name="urldata"/>
                    <Index fromlineno="252" tolineno="252" lineno="None">
                      <Name fromlineno="252" tolineno="252" lineno="252" name="scm"/>
                    </Index>
                  </Subscript>
                </Getattr>
                <Index fromlineno="252" tolineno="252" lineno="None">
                  <Const fromlineno="252" tolineno="252" lineno="252" type="str">'name'</Const>
                </Index>
              </Subscript>
            </Assign>
            <Assign fromlineno="253" tolineno="253" lineno="253" targets="[&lt;AssName(rev) l.253 [bb.fetch] at Ox9b92d0c&gt;]" value="urldata[scm].method.sortable_revision(scm, urldata[scm], d)">
              <AssName fromlineno="253" tolineno="253" lineno="253" name="rev"/>
              <CallFunc fromlineno="253" tolineno="253" lineno="253" func="Getattr(sortable_revision)">
                <Getattr fromlineno="253" tolineno="253" lineno="253" attrname="sortable_revision" expr="urldata[scm].method">
                  <Getattr fromlineno="253" tolineno="253" lineno="253" attrname="method" expr="urldata[scm]">
                    <Subscript fromlineno="253" tolineno="253" lineno="253">
                      <Name fromlineno="253" tolineno="253" lineno="253" name="urldata"/>
                      <Index fromlineno="253" tolineno="253" lineno="None">
                        <Name fromlineno="253" tolineno="253" lineno="253" name="scm"/>
                      </Index>
                    </Subscript>
                  </Getattr>
                </Getattr>
                <Name fromlineno="253" tolineno="253" lineno="253" name="scm"/>
                <Subscript fromlineno="253" tolineno="253" lineno="253">
                  <Name fromlineno="253" tolineno="253" lineno="253" name="urldata"/>
                  <Index fromlineno="253" tolineno="253" lineno="None">
                    <Name fromlineno="253" tolineno="253" lineno="253" name="scm"/>
                  </Index>
                </Subscript>
                <Name fromlineno="253" tolineno="253" lineno="253" name="d"/>
              </CallFunc>
            </Assign>
            <Assign fromlineno="254" tolineno="254" lineno="254" targets="[&lt;AssName(format) l.254 [bb.fetch] at Ox9b92f4c&gt;]" value="format.replace(name, rev)">
              <AssName fromlineno="254" tolineno="254" lineno="254" name="format"/>
              <CallFunc fromlineno="254" tolineno="254" lineno="254" func="Getattr(replace)">
                <Getattr fromlineno="254" tolineno="254" lineno="254" attrname="replace" expr="format">
                  <Name fromlineno="254" tolineno="254" lineno="254" name="format"/>
                </Getattr>
                <Name fromlineno="254" tolineno="254" lineno="254" name="name"/>
                <Name fromlineno="254" tolineno="254" lineno="254" name="rev"/>
              </CallFunc>
            </Assign>
          </If>
        </For>
        <Return fromlineno="256" tolineno="256" lineno="256">
          <Name fromlineno="256" tolineno="256" lineno="256" name="format"/>
        </Return>
      </Function>
      <Function fromlineno="258" tolineno="266" lineno="258">
        <Arguments fromlineno="258" tolineno="258" lineno="None" format_args="url, d, cache=True">
          <AssName fromlineno="258" tolineno="258" lineno="258" name="url"/>
          <AssName fromlineno="258" tolineno="258" lineno="258" name="d"/>
          <AssName fromlineno="258" tolineno="258" lineno="258" name="cache"/>
          <Const fromlineno="258" tolineno="258" lineno="258" type="bool">True</Const>
        </Arguments>
        <Assign fromlineno="263" tolineno="263" lineno="263" targets="[&lt;AssName(ud) l.263 [bb.fetch] at Ox9cc422c&gt;]" value="init([url], d)">
          <AssName fromlineno="263" tolineno="263" lineno="263" name="ud"/>
          <CallFunc fromlineno="263" tolineno="263" lineno="263" func="Name(init)">
            <Name fromlineno="263" tolineno="263" lineno="263" name="init"/>
            <List fromlineno="263" tolineno="263" lineno="263">
              <Name fromlineno="263" tolineno="263" lineno="263" name="url"/>
            </List>
            <Name fromlineno="263" tolineno="263" lineno="263" name="d"/>
          </CallFunc>
        </Assign>
        <If fromlineno="264" tolineno="265" lineno="264">
          <Getattr fromlineno="264" tolineno="264" lineno="264" attrname="method" expr="ud[url]">
            <Subscript fromlineno="264" tolineno="264" lineno="264">
              <Name fromlineno="264" tolineno="264" lineno="264" name="ud"/>
              <Index fromlineno="264" tolineno="264" lineno="None">
                <Name fromlineno="264" tolineno="264" lineno="264" name="url"/>
              </Index>
            </Subscript>
          </Getattr>
          <Return fromlineno="265" tolineno="265" lineno="265">
            <Getattr fromlineno="265" tolineno="265" lineno="265" attrname="localpath" expr="ud[url]">
              <Subscript fromlineno="265" tolineno="265" lineno="265">
                <Name fromlineno="265" tolineno="265" lineno="265" name="ud"/>
                <Index fromlineno="265" tolineno="265" lineno="None">
                  <Name fromlineno="265" tolineno="265" lineno="265" name="url"/>
                </Index>
              </Subscript>
            </Getattr>
          </Return>
        </If>
        <Return fromlineno="266" tolineno="266" lineno="266">
          <Name fromlineno="266" tolineno="266" lineno="266" name="url"/>
        </Return>
      </Function>
      <Function fromlineno="268" tolineno="309" lineno="268">
        <Arguments fromlineno="268" tolineno="268" lineno="None" format_args="cmd, d, quiet=False">
          <AssName fromlineno="268" tolineno="268" lineno="268" name="cmd"/>
          <AssName fromlineno="268" tolineno="268" lineno="268" name="d"/>
          <AssName fromlineno="268" tolineno="268" lineno="268" name="quiet"/>
          <Const fromlineno="268" tolineno="268" lineno="268" type="bool">False</Const>
        </Arguments>
        <Assign fromlineno="279" tolineno="279" lineno="279" targets="[&lt;AssName(exportvars) l.279 [bb.fetch] at Ox9cc46ec&gt;]" value="['PATH', 'GIT_PROXY_HOST', 'GIT_PROXY_PORT', 'GIT_CONFIG', 'http_proxy', 'ftp_proxy', 'SSH_AUTH_SOCK', 'SSH_AGENT_PID', 'HOME']">
          <AssName fromlineno="279" tolineno="279" lineno="279" name="exportvars"/>
          <List fromlineno="279" tolineno="279" lineno="279">
            <Const fromlineno="279" tolineno="279" lineno="279" type="str">'PATH'</Const>
            <Const fromlineno="279" tolineno="279" lineno="279" type="str">'GIT_PROXY_HOST'</Const>
            <Const fromlineno="279" tolineno="279" lineno="279" type="str">'GIT_PROXY_PORT'</Const>
            <Const fromlineno="279" tolineno="279" lineno="279" type="str">'GIT_CONFIG'</Const>
            <Const fromlineno="279" tolineno="279" lineno="279" type="str">'http_proxy'</Const>
            <Const fromlineno="279" tolineno="279" lineno="279" type="str">'ftp_proxy'</Const>
            <Const fromlineno="279" tolineno="279" lineno="279" type="str">'SSH_AUTH_SOCK'</Const>
            <Const fromlineno="279" tolineno="279" lineno="279" type="str">'SSH_AGENT_PID'</Const>
            <Const fromlineno="279" tolineno="279" lineno="279" type="str">'HOME'</Const>
          </List>
        </Assign>
        <For fromlineno="281" tolineno="284" lineno="281">
          <AssName fromlineno="281" tolineno="281" lineno="281" name="var"/>
          <Name fromlineno="281" tolineno="281" lineno="281" name="exportvars"/>
          <Assign fromlineno="282" tolineno="282" lineno="282" targets="[&lt;AssName(val) l.282 [bb.fetch] at Ox9cc498c&gt;]" value="data.getVar(var, d, True)">
            <AssName fromlineno="282" tolineno="282" lineno="282" name="val"/>
            <CallFunc fromlineno="282" tolineno="282" lineno="282" func="Getattr(getVar)">
              <Getattr fromlineno="282" tolineno="282" lineno="282" attrname="getVar" expr="data">
                <Name fromlineno="282" tolineno="282" lineno="282" name="data"/>
              </Getattr>
              <Name fromlineno="282" tolineno="282" lineno="282" name="var"/>
              <Name fromlineno="282" tolineno="282" lineno="282" name="d"/>
              <Const fromlineno="282" tolineno="282" lineno="282" type="bool">True</Const>
            </CallFunc>
          </Assign>
          <If fromlineno="283" tolineno="284" lineno="283">
            <Name fromlineno="283" tolineno="283" lineno="283" name="val"/>
            <Assign fromlineno="284" tolineno="284" lineno="284" targets="[&lt;AssName(cmd) l.284 [bb.fetch] at Ox9cc4b6c&gt;]" value="(('export ') + (var)) + (('=%s; %s') % ((val, cmd)))">
              <AssName fromlineno="284" tolineno="284" lineno="284" name="cmd"/>
              <BinOp fromlineno="284" tolineno="284" lineno="284" op="+" left="('export ') + (var)" right="('=%s; %s') % ((val, cmd))">
                <BinOp fromlineno="284" tolineno="284" lineno="284" op="+" left="'export '" right="var">
                  <Const fromlineno="284" tolineno="284" lineno="284" type="str">'export '</Const>
                  <Name fromlineno="284" tolineno="284" lineno="284" name="var"/>
                </BinOp>
                <BinOp fromlineno="284" tolineno="284" lineno="284" op="%" left="'=%s; %s'" right="(val, cmd)">
                  <Const fromlineno="284" tolineno="284" lineno="284" type="str">'=%s; %s'</Const>
                  <Tuple fromlineno="284" tolineno="284" lineno="284">
                    <Name fromlineno="284" tolineno="284" lineno="284" name="val"/>
                    <Name fromlineno="284" tolineno="284" lineno="284" name="cmd"/>
                  </Tuple>
                </BinOp>
              </BinOp>
            </Assign>
          </If>
        </For>
        <Discard fromlineno="286" tolineno="286" lineno="286">
          <CallFunc fromlineno="286" tolineno="286" lineno="286" func="Getattr(debug)">
            <Getattr fromlineno="286" tolineno="286" lineno="286" attrname="debug" expr="bb.msg">
              <Getattr fromlineno="286" tolineno="286" lineno="286" attrname="msg" expr="bb">
                <Name fromlineno="286" tolineno="286" lineno="286" name="bb"/>
              </Getattr>
            </Getattr>
            <Const fromlineno="286" tolineno="286" lineno="286" type="int">1</Const>
            <Getattr fromlineno="286" tolineno="286" lineno="286" attrname="Fetcher" expr="bb.msg.domain">
              <Getattr fromlineno="286" tolineno="286" lineno="286" attrname="domain" expr="bb.msg">
                <Getattr fromlineno="286" tolineno="286" lineno="286" attrname="msg" expr="bb">
                  <Name fromlineno="286" tolineno="286" lineno="286" name="bb"/>
                </Getattr>
              </Getattr>
            </Getattr>
            <BinOp fromlineno="286" tolineno="286" lineno="286" op="%" left="'Running %s'" right="cmd">
              <Const fromlineno="286" tolineno="286" lineno="286" type="str">'Running %s'</Const>
              <Name fromlineno="286" tolineno="286" lineno="286" name="cmd"/>
            </BinOp>
          </CallFunc>
        </Discard>
        <Assign fromlineno="289" tolineno="289" lineno="289" targets="[&lt;AssName(stdout_handle) l.289 [bb.fetch] at Ox9cc4ecc&gt;]" value="os.popen((cmd) + (' 2&gt;&amp;1'), 'r')">
          <AssName fromlineno="289" tolineno="289" lineno="289" name="stdout_handle"/>
          <CallFunc fromlineno="289" tolineno="289" lineno="289" func="Getattr(popen)">
            <Getattr fromlineno="289" tolineno="289" lineno="289" attrname="popen" expr="os">
              <Name fromlineno="289" tolineno="289" lineno="289" name="os"/>
            </Getattr>
            <BinOp fromlineno="289" tolineno="289" lineno="289" op="+" left="cmd" right="' 2&gt;&amp;1'">
              <Name fromlineno="289" tolineno="289" lineno="289" name="cmd"/>
              <Const fromlineno="289" tolineno="289" lineno="289" type="str">' 2&gt;&amp;1'</Const>
            </BinOp>
            <Const fromlineno="289" tolineno="289" lineno="289" type="str">'r'</Const>
          </CallFunc>
        </Assign>
        <Assign fromlineno="290" tolineno="290" lineno="290" targets="[&lt;AssName(output) l.290 [bb.fetch] at Ox9cc906c&gt;]" value="''">
          <AssName fromlineno="290" tolineno="290" lineno="290" name="output"/>
          <Const fromlineno="290" tolineno="290" lineno="290" type="str">''</Const>
        </Assign>
        <While fromlineno="292" tolineno="298" lineno="292">
          <Const fromlineno="292" tolineno="292" lineno="292" type="int">1</Const>
          <Assign fromlineno="293" tolineno="293" lineno="293" targets="[&lt;AssName(line) l.293 [bb.fetch] at Ox9cc918c&gt;]" value="stdout_handle.readline()">
            <AssName fromlineno="293" tolineno="293" lineno="293" name="line"/>
            <CallFunc fromlineno="293" tolineno="293" lineno="293" func="Getattr(readline)">
              <Getattr fromlineno="293" tolineno="293" lineno="293" attrname="readline" expr="stdout_handle">
                <Name fromlineno="293" tolineno="293" lineno="293" name="stdout_handle"/>
              </Getattr>
            </CallFunc>
          </Assign>
          <If fromlineno="294" tolineno="295" lineno="294">
            <UnaryOp fromlineno="294" tolineno="294" lineno="294">
              <Name fromlineno="294" tolineno="294" lineno="294" name="line"/>
            </UnaryOp>
            <Break fromlineno="295" tolineno="295" lineno="295"/>
          </If>
          <If fromlineno="296" tolineno="297" lineno="296">
            <UnaryOp fromlineno="296" tolineno="296" lineno="296">
              <Name fromlineno="296" tolineno="296" lineno="296" name="quiet"/>
            </UnaryOp>
            <Print fromlineno="297" tolineno="297" lineno="297">
              <Name fromlineno="297" tolineno="297" lineno="297" name="line"/>
            </Print>
          </If>
          <AugAssign fromlineno="298" tolineno="298" lineno="298" target="output" value="line">
            <AssName fromlineno="298" tolineno="298" lineno="298" name="output"/>
            <Name fromlineno="298" tolineno="298" lineno="298" name="line"/>
          </AugAssign>
        </While>
        <Assign fromlineno="300" tolineno="300" lineno="300" targets="[&lt;AssName(status) l.300 [bb.fetch] at Ox9cc94cc&gt;]" value="(stdout_handle.close()) or (0)">
          <AssName fromlineno="300" tolineno="300" lineno="300" name="status"/>
          <BoolOp fromlineno="300" tolineno="300" lineno="300" op="or" values="stdout_handle.close(),0,">
            <CallFunc fromlineno="300" tolineno="300" lineno="300" func="Getattr(close)">
              <Getattr fromlineno="300" tolineno="300" lineno="300" attrname="close" expr="stdout_handle">
                <Name fromlineno="300" tolineno="300" lineno="300" name="stdout_handle"/>
              </Getattr>
            </CallFunc>
            <Const fromlineno="300" tolineno="300" lineno="300" type="int">0</Const>
          </BoolOp>
        </Assign>
        <Assign fromlineno="301" tolineno="301" lineno="301" targets="[&lt;AssName(signal) l.301 [bb.fetch] at Ox9cc962c&gt;]" value="(status) &gt;&gt; (8)">
          <AssName fromlineno="301" tolineno="301" lineno="301" name="signal"/>
          <BinOp fromlineno="301" tolineno="301" lineno="301" op="&gt;&gt;" left="status" right="8">
            <Name fromlineno="301" tolineno="301" lineno="301" name="status"/>
            <Const fromlineno="301" tolineno="301" lineno="301" type="int">8</Const>
          </BinOp>
        </Assign>
        <Assign fromlineno="302" tolineno="302" lineno="302" targets="[&lt;AssName(exitstatus) l.302 [bb.fetch] at Ox9cc970c&gt;]" value="(status) &amp; (255)">
          <AssName fromlineno="302" tolineno="302" lineno="302" name="exitstatus"/>
          <BinOp fromlineno="302" tolineno="302" lineno="302" op="&amp;" left="status" right="255">
            <Name fromlineno="302" tolineno="302" lineno="302" name="status"/>
            <Const fromlineno="302" tolineno="302" lineno="302" type="int">255</Const>
          </BinOp>
        </Assign>
        <If fromlineno="304" tolineno="307" lineno="304">
          <Name fromlineno="304" tolineno="304" lineno="304" name="signal"/>
          <Raise fromlineno="305" tolineno="305" lineno="305">
            <CallFunc fromlineno="305" tolineno="305" lineno="305" func="Name(FetchError)">
              <Name fromlineno="305" tolineno="305" lineno="305" name="FetchError"/>
              <BinOp fromlineno="305" tolineno="305" lineno="305" op="%" left="'Fetch command %s failed with signal %s, output:\n%s'" right="(cmd, signal, output)">
                <Const fromlineno="305" tolineno="305" lineno="305" type="str">'Fetch command %s failed with signal %s, output:\n%s'</Const>
                <Tuple fromlineno="305" tolineno="305" lineno="305">
                  <Name fromlineno="305" tolineno="305" lineno="305" name="cmd"/>
                  <Name fromlineno="305" tolineno="305" lineno="305" name="signal"/>
                  <Name fromlineno="305" tolineno="305" lineno="305" name="output"/>
                </Tuple>
              </BinOp>
            </CallFunc>
          </Raise>
          <If fromlineno="306" tolineno="307" lineno="306">
            <Compare fromlineno="306" tolineno="306" lineno="306" op="('!=', &lt;Const(int) l.306 [bb.fetch] at Ox9cc9a6c&gt;)">
              <Name fromlineno="306" tolineno="306" lineno="306" name="status"/>
              <Const fromlineno="306" tolineno="306" lineno="306" type="int">0</Const>
            </Compare>
            <Raise fromlineno="307" tolineno="307" lineno="307">
              <CallFunc fromlineno="307" tolineno="307" lineno="307" func="Name(FetchError)">
                <Name fromlineno="307" tolineno="307" lineno="307" name="FetchError"/>
                <BinOp fromlineno="307" tolineno="307" lineno="307" op="%" left="'Fetch command %s failed with exit code %s, output:\n%s'" right="(cmd, status, output)">
                  <Const fromlineno="307" tolineno="307" lineno="307" type="str">'Fetch command %s failed with exit code %s, output:\n%s'</Const>
                  <Tuple fromlineno="307" tolineno="307" lineno="307">
                    <Name fromlineno="307" tolineno="307" lineno="307" name="cmd"/>
                    <Name fromlineno="307" tolineno="307" lineno="307" name="status"/>
                    <Name fromlineno="307" tolineno="307" lineno="307" name="output"/>
                  </Tuple>
                </BinOp>
              </CallFunc>
            </Raise>
          </If>
        </If>
        <Return fromlineno="309" tolineno="309" lineno="309">
          <Name fromlineno="309" tolineno="309" lineno="309" name="output"/>
        </Return>
      </Function>
      <Class fromlineno="311" tolineno="346" lineno="311">
        <Name fromlineno="311" tolineno="311" lineno="311" name="object"/>
        <Function fromlineno="315" tolineno="329" lineno="315">
          <Arguments fromlineno="315" tolineno="315" lineno="None" format_args="self, url, d">
            <AssName fromlineno="315" tolineno="315" lineno="315" name="self"/>
            <AssName fromlineno="315" tolineno="315" lineno="315" name="url"/>
            <AssName fromlineno="315" tolineno="315" lineno="315" name="d"/>
          </Arguments>
          <Assign fromlineno="316" tolineno="316" lineno="316" targets="[&lt;AssAttr(localfile) l.316 [bb.fetch] at Ox9cc9e6c&gt;]" value="''">
            <AssAttr fromlineno="316" tolineno="316" lineno="316" attrname="localfile" expr="self">
              <Name fromlineno="316" tolineno="316" lineno="316" name="self"/>
            </AssAttr>
            <Const fromlineno="316" tolineno="316" lineno="316" type="str">''</Const>
          </Assign>
          <Assign fromlineno="317" tolineno="317" lineno="317" targets="[&lt;Tuple(tuple) l.317 [bb.fetch] at Ox9cc9f0c&gt;]" value="bb.decodeurl(data.expand(url, d))">
            <Tuple fromlineno="317" tolineno="317" lineno="317">
              <AssAttr fromlineno="317" tolineno="317" lineno="317" attrname="type" expr="self">
                <Name fromlineno="317" tolineno="317" lineno="317" name="self"/>
              </AssAttr>
              <AssAttr fromlineno="317" tolineno="317" lineno="317" attrname="host" expr="self">
                <Name fromlineno="317" tolineno="317" lineno="317" name="self"/>
              </AssAttr>
              <AssAttr fromlineno="317" tolineno="317" lineno="317" attrname="path" expr="self">
                <Name fromlineno="317" tolineno="317" lineno="317" name="self"/>
              </AssAttr>
              <AssAttr fromlineno="317" tolineno="317" lineno="317" attrname="user" expr="self">
                <Name fromlineno="317" tolineno="317" lineno="317" name="self"/>
              </AssAttr>
              <AssAttr fromlineno="317" tolineno="317" lineno="317" attrname="pswd" expr="self">
                <Name fromlineno="317" tolineno="317" lineno="317" name="self"/>
              </AssAttr>
              <AssAttr fromlineno="317" tolineno="317" lineno="317" attrname="parm" expr="self">
                <Name fromlineno="317" tolineno="317" lineno="317" name="self"/>
              </AssAttr>
            </Tuple>
            <CallFunc fromlineno="317" tolineno="317" lineno="317" func="Getattr(decodeurl)">
              <Getattr fromlineno="317" tolineno="317" lineno="317" attrname="decodeurl" expr="bb">
                <Name fromlineno="317" tolineno="317" lineno="317" name="bb"/>
              </Getattr>
              <CallFunc fromlineno="317" tolineno="317" lineno="317" func="Getattr(expand)">
                <Getattr fromlineno="317" tolineno="317" lineno="317" attrname="expand" expr="data">
                  <Name fromlineno="317" tolineno="317" lineno="317" name="data"/>
                </Getattr>
                <Name fromlineno="317" tolineno="317" lineno="317" name="url"/>
                <Name fromlineno="317" tolineno="317" lineno="317" name="d"/>
              </CallFunc>
            </CallFunc>
          </Assign>
          <Assign fromlineno="318" tolineno="318" lineno="318" targets="[&lt;AssAttr(date) l.318 [bb.fetch] at Ox9ccd26c&gt;]" value="Fetch.getSRCDate(self, d)">
            <AssAttr fromlineno="318" tolineno="318" lineno="318" attrname="date" expr="self">
              <Name fromlineno="318" tolineno="318" lineno="318" name="self"/>
            </AssAttr>
            <CallFunc fromlineno="318" tolineno="318" lineno="318" func="Getattr(getSRCDate)">
              <Getattr fromlineno="318" tolineno="318" lineno="318" attrname="getSRCDate" expr="Fetch">
                <Name fromlineno="318" tolineno="318" lineno="318" name="Fetch"/>
              </Getattr>
              <Name fromlineno="318" tolineno="318" lineno="318" name="self"/>
              <Name fromlineno="318" tolineno="318" lineno="318" name="d"/>
            </CallFunc>
          </Assign>
          <Assign fromlineno="319" tolineno="319" lineno="319" targets="[&lt;AssAttr(url) l.319 [bb.fetch] at Ox9ccd3ac&gt;]" value="url">
            <AssAttr fromlineno="319" tolineno="319" lineno="319" attrname="url" expr="self">
              <Name fromlineno="319" tolineno="319" lineno="319" name="self"/>
            </AssAttr>
            <Name fromlineno="319" tolineno="319" lineno="319" name="url"/>
          </Assign>
          <If fromlineno="320" tolineno="321" lineno="320">
            <BoolOp fromlineno="320" tolineno="320" lineno="320" op="and" values="not self.user,'user' in self.parm,">
              <UnaryOp fromlineno="320" tolineno="320" lineno="320">
                <Getattr fromlineno="320" tolineno="320" lineno="320" attrname="user" expr="self">
                  <Name fromlineno="320" tolineno="320" lineno="320" name="self"/>
                </Getattr>
              </UnaryOp>
              <Compare fromlineno="320" tolineno="320" lineno="320" op="('in', &lt;Getattr(parm) l.320 [bb.fetch] at Ox9ccd56c&gt;)">
                <Const fromlineno="320" tolineno="320" lineno="320" type="str">'user'</Const>
                <Getattr fromlineno="320" tolineno="320" lineno="320" attrname="parm" expr="self">
                  <Name fromlineno="320" tolineno="320" lineno="320" name="self"/>
                </Getattr>
              </Compare>
            </BoolOp>
            <Assign fromlineno="321" tolineno="321" lineno="321" targets="[&lt;AssAttr(user) l.321 [bb.fetch] at Ox9ccd60c&gt;]" value="self.parm['user']">
              <AssAttr fromlineno="321" tolineno="321" lineno="321" attrname="user" expr="self">
                <Name fromlineno="321" tolineno="321" lineno="321" name="self"/>
              </AssAttr>
              <Subscript fromlineno="321" tolineno="321" lineno="321">
                <Getattr fromlineno="321" tolineno="321" lineno="321" attrname="parm" expr="self">
                  <Name fromlineno="321" tolineno="321" lineno="321" name="self"/>
                </Getattr>
                <Index fromlineno="321" tolineno="321" lineno="None">
                  <Const fromlineno="321" tolineno="321" lineno="321" type="str">'user'</Const>
                </Index>
              </Subscript>
            </Assign>
          </If>
          <If fromlineno="322" tolineno="323" lineno="322">
            <BoolOp fromlineno="322" tolineno="322" lineno="322" op="and" values="not self.pswd,'pswd' in self.parm,">
              <UnaryOp fromlineno="322" tolineno="322" lineno="322">
                <Getattr fromlineno="322" tolineno="322" lineno="322" attrname="pswd" expr="self">
                  <Name fromlineno="322" tolineno="322" lineno="322" name="self"/>
                </Getattr>
              </UnaryOp>
              <Compare fromlineno="322" tolineno="322" lineno="322" op="('in', &lt;Getattr(parm) l.322 [bb.fetch] at Ox9ccd84c&gt;)">
                <Const fromlineno="322" tolineno="322" lineno="322" type="str">'pswd'</Const>
                <Getattr fromlineno="322" tolineno="322" lineno="322" attrname="parm" expr="self">
                  <Name fromlineno="322" tolineno="322" lineno="322" name="self"/>
                </Getattr>
              </Compare>
            </BoolOp>
            <Assign fromlineno="323" tolineno="323" lineno="323" targets="[&lt;AssAttr(pswd) l.323 [bb.fetch] at Ox9ccd8ec&gt;]" value="self.parm['pswd']">
              <AssAttr fromlineno="323" tolineno="323" lineno="323" attrname="pswd" expr="self">
                <Name fromlineno="323" tolineno="323" lineno="323" name="self"/>
              </AssAttr>
              <Subscript fromlineno="323" tolineno="323" lineno="323">
                <Getattr fromlineno="323" tolineno="323" lineno="323" attrname="parm" expr="self">
                  <Name fromlineno="323" tolineno="323" lineno="323" name="self"/>
                </Getattr>
                <Index fromlineno="323" tolineno="323" lineno="None">
                  <Const fromlineno="323" tolineno="323" lineno="323" type="str">'pswd'</Const>
                </Index>
              </Subscript>
            </Assign>
          </If>
          <Assign fromlineno="324" tolineno="324" lineno="324" targets="[&lt;AssAttr(setup) l.324 [bb.fetch] at Ox9ccda0c&gt;]" value="False">
            <AssAttr fromlineno="324" tolineno="324" lineno="324" attrname="setup" expr="self">
              <Name fromlineno="324" tolineno="324" lineno="324" name="self"/>
            </AssAttr>
            <Const fromlineno="324" tolineno="324" lineno="324" type="bool">False</Const>
          </Assign>
          <For fromlineno="325" tolineno="328" lineno="325">
            <AssName fromlineno="325" tolineno="325" lineno="325" name="m"/>
            <Name fromlineno="325" tolineno="325" lineno="325" name="methods"/>
            <If fromlineno="326" tolineno="328" lineno="326">
              <CallFunc fromlineno="326" tolineno="326" lineno="326" func="Getattr(supports)">
                <Getattr fromlineno="326" tolineno="326" lineno="326" attrname="supports" expr="m">
                  <Name fromlineno="326" tolineno="326" lineno="326" name="m"/>
                </Getattr>
                <Name fromlineno="326" tolineno="326" lineno="326" name="url"/>
                <Name fromlineno="326" tolineno="326" lineno="326" name="self"/>
                <Name fromlineno="326" tolineno="326" lineno="326" name="d"/>
              </CallFunc>
              <Assign fromlineno="327" tolineno="327" lineno="327" targets="[&lt;AssAttr(method) l.327 [bb.fetch] at Ox9ccdcac&gt;]" value="m">
                <AssAttr fromlineno="327" tolineno="327" lineno="327" attrname="method" expr="self">
                  <Name fromlineno="327" tolineno="327" lineno="327" name="self"/>
                </AssAttr>
                <Name fromlineno="327" tolineno="327" lineno="327" name="m"/>
              </Assign>
              <Return fromlineno="328" tolineno="328" lineno="328"/>
            </If>
          </For>
          <Raise fromlineno="329" tolineno="329" lineno="329">
            <CallFunc fromlineno="329" tolineno="329" lineno="329" func="Name(NoMethodError)">
              <Name fromlineno="329" tolineno="329" lineno="329" name="NoMethodError"/>
              <BinOp fromlineno="329" tolineno="329" lineno="329" op="%" left="'Missing implementation for url %s'" right="url">
                <Const fromlineno="329" tolineno="329" lineno="329" type="str">'Missing implementation for url %s'</Const>
                <Name fromlineno="329" tolineno="329" lineno="329" name="url"/>
              </BinOp>
            </CallFunc>
          </Raise>
        </Function>
        <Function fromlineno="331" tolineno="346" lineno="331">
          <Arguments fromlineno="331" tolineno="331" lineno="None" format_args="self, d">
            <AssName fromlineno="331" tolineno="331" lineno="331" name="self"/>
            <AssName fromlineno="331" tolineno="331" lineno="331" name="d"/>
          </Arguments>
          <Assign fromlineno="332" tolineno="332" lineno="332" targets="[&lt;AssAttr(setup) l.332 [bb.fetch] at Ox9ccdf8c&gt;]" value="True">
            <AssAttr fromlineno="332" tolineno="332" lineno="332" attrname="setup" expr="self">
              <Name fromlineno="332" tolineno="332" lineno="332" name="self"/>
            </AssAttr>
            <Const fromlineno="332" tolineno="332" lineno="332" type="bool">True</Const>
          </Assign>
          <If fromlineno="333" tolineno="344" lineno="333">
            <Compare fromlineno="333" tolineno="333" lineno="333" op="('in', &lt;Getattr(parm) l.333 [bb.fetch] at Ox9cd60ac&gt;)">
              <Const fromlineno="333" tolineno="333" lineno="333" type="str">'localpath'</Const>
              <Getattr fromlineno="333" tolineno="333" lineno="333" attrname="parm" expr="self">
                <Name fromlineno="333" tolineno="333" lineno="333" name="self"/>
              </Getattr>
            </Compare>
            <Assign fromlineno="335" tolineno="335" lineno="335" targets="[&lt;AssAttr(localpath) l.335 [bb.fetch] at Ox9cd616c&gt;]" value="self.parm['localpath']">
              <AssAttr fromlineno="335" tolineno="335" lineno="335" attrname="localpath" expr="self">
                <Name fromlineno="335" tolineno="335" lineno="335" name="self"/>
              </AssAttr>
              <Subscript fromlineno="335" tolineno="335" lineno="335">
                <Getattr fromlineno="335" tolineno="335" lineno="335" attrname="parm" expr="self">
                  <Name fromlineno="335" tolineno="335" lineno="335" name="self"/>
                </Getattr>
                <Index fromlineno="335" tolineno="335" lineno="None">
                  <Const fromlineno="335" tolineno="335" lineno="335" type="str">'localpath'</Const>
                </Index>
              </Subscript>
            </Assign>
            <TryFinally fromlineno="337" tolineno="341" lineno="337">
              <Assign fromlineno="338" tolineno="338" lineno="338" targets="[&lt;AssAttr(srcrev_internal_call) l.338 [bb.fetch] at Ox9cd630c&gt;]" value="True">
                <AssAttr fromlineno="338" tolineno="338" lineno="338" attrname="srcrev_internal_call" expr="bb.fetch">
                  <Getattr fromlineno="338" tolineno="338" lineno="338" attrname="fetch" expr="bb">
                    <Name fromlineno="338" tolineno="338" lineno="338" name="bb"/>
                  </Getattr>
                </AssAttr>
                <Const fromlineno="338" tolineno="338" lineno="338" type="bool">True</Const>
              </Assign>
              <Assign fromlineno="339" tolineno="339" lineno="339" targets="[&lt;AssAttr(localpath) l.339 [bb.fetch] at Ox9cd63cc&gt;]" value="self.method.localpath(self.url, self, d)">
                <AssAttr fromlineno="339" tolineno="339" lineno="339" attrname="localpath" expr="self">
                  <Name fromlineno="339" tolineno="339" lineno="339" name="self"/>
                </AssAttr>
                <CallFunc fromlineno="339" tolineno="339" lineno="339" func="Getattr(localpath)">
                  <Getattr fromlineno="339" tolineno="339" lineno="339" attrname="localpath" expr="self.method">
                    <Getattr fromlineno="339" tolineno="339" lineno="339" attrname="method" expr="self">
                      <Name fromlineno="339" tolineno="339" lineno="339" name="self"/>
                    </Getattr>
                  </Getattr>
                  <Getattr fromlineno="339" tolineno="339" lineno="339" attrname="url" expr="self">
                    <Name fromlineno="339" tolineno="339" lineno="339" name="self"/>
                  </Getattr>
                  <Name fromlineno="339" tolineno="339" lineno="339" name="self"/>
                  <Name fromlineno="339" tolineno="339" lineno="339" name="d"/>
                </CallFunc>
              </Assign>
              <Assign fromlineno="341" tolineno="341" lineno="341" targets="[&lt;AssAttr(srcrev_internal_call) l.341 [bb.fetch] at Ox9cd658c&gt;]" value="False">
                <AssAttr fromlineno="341" tolineno="341" lineno="341" attrname="srcrev_internal_call" expr="bb.fetch">
                  <Getattr fromlineno="341" tolineno="341" lineno="341" attrname="fetch" expr="bb">
                    <Name fromlineno="341" tolineno="341" lineno="341" name="bb"/>
                  </Getattr>
                </AssAttr>
                <Const fromlineno="341" tolineno="341" lineno="341" type="bool">False</Const>
              </Assign>
            </TryFinally>
            <Discard fromlineno="344" tolineno="344" lineno="344">
              <CallFunc fromlineno="344" tolineno="344" lineno="344" func="Getattr(delVar)">
                <Getattr fromlineno="344" tolineno="344" lineno="344" attrname="delVar" expr="bb.data">
                  <Getattr fromlineno="344" tolineno="344" lineno="344" attrname="data" expr="bb">
                    <Name fromlineno="344" tolineno="344" lineno="344" name="bb"/>
                  </Getattr>
                </Getattr>
                <Const fromlineno="344" tolineno="344" lineno="344" type="str">'ISHOULDNEVEREXIST'</Const>
                <Name fromlineno="344" tolineno="344" lineno="344" name="d"/>
              </CallFunc>
            </Discard>
          </If>
          <Assign fromlineno="345" tolineno="345" lineno="345" targets="[&lt;AssAttr(md5) l.345 [bb.fetch] at Ox9cd670c&gt;]" value="(self.localpath) + ('.md5')">
            <AssAttr fromlineno="345" tolineno="345" lineno="345" attrname="md5" expr="self">
              <Name fromlineno="345" tolineno="345" lineno="345" name="self"/>
            </AssAttr>
            <BinOp fromlineno="345" tolineno="345" lineno="345" op="+" left="self.localpath" right="'.md5'">
              <Getattr fromlineno="345" tolineno="345" lineno="345" attrname="localpath" expr="self">
                <Name fromlineno="345" tolineno="345" lineno="345" name="self"/>
              </Getattr>
              <Const fromlineno="345" tolineno="345" lineno="345" type="str">'.md5'</Const>
            </BinOp>
          </Assign>
          <Assign fromlineno="346" tolineno="346" lineno="346" targets="[&lt;AssAttr(lockfile) l.346 [bb.fetch] at Ox9cd680c&gt;]" value="(self.localpath) + ('.lock')">
            <AssAttr fromlineno="346" tolineno="346" lineno="346" attrname="lockfile" expr="self">
              <Name fromlineno="346" tolineno="346" lineno="346" name="self"/>
            </AssAttr>
            <BinOp fromlineno="346" tolineno="346" lineno="346" op="+" left="self.localpath" right="'.lock'">
              <Getattr fromlineno="346" tolineno="346" lineno="346" attrname="localpath" expr="self">
                <Name fromlineno="346" tolineno="346" lineno="346" name="self"/>
              </Getattr>
              <Const fromlineno="346" tolineno="346" lineno="346" type="str">'.lock'</Const>
            </BinOp>
          </Assign>
        </Function>
      </Class>
      <Class fromlineno="349" tolineno="570" lineno="349">
        <Name fromlineno="349" tolineno="349" lineno="349" name="object"/>
        <Function fromlineno="352" tolineno="353" lineno="352">
          <Arguments fromlineno="352" tolineno="352" lineno="None" format_args="self, urls=[]">
            <AssName fromlineno="352" tolineno="352" lineno="352" name="self"/>
            <AssName fromlineno="352" tolineno="352" lineno="352" name="urls"/>
            <List fromlineno="352" tolineno="352" lineno="352"/>
          </Arguments>
          <Assign fromlineno="353" tolineno="353" lineno="353" targets="[&lt;AssAttr(urls) l.353 [bb.fetch] at Ox9cd6aec&gt;]" value="[]">
            <AssAttr fromlineno="353" tolineno="353" lineno="353" attrname="urls" expr="self">
              <Name fromlineno="353" tolineno="353" lineno="353" name="self"/>
            </AssAttr>
            <List fromlineno="353" tolineno="353" lineno="353"/>
          </Assign>
        </Function>
        <Function fromlineno="355" tolineno="359" lineno="355">
          <Arguments fromlineno="355" tolineno="355" lineno="None" format_args="self, url, urldata, d">
            <AssName fromlineno="355" tolineno="355" lineno="355" name="self"/>
            <AssName fromlineno="355" tolineno="355" lineno="355" name="url"/>
            <AssName fromlineno="355" tolineno="355" lineno="355" name="urldata"/>
            <AssName fromlineno="355" tolineno="355" lineno="355" name="d"/>
          </Arguments>
          <Return fromlineno="359" tolineno="359" lineno="359">
            <Const fromlineno="359" tolineno="359" lineno="359" type="int">0</Const>
          </Return>
        </Function>
        <Function fromlineno="361" tolineno="367" lineno="361">
          <Arguments fromlineno="361" tolineno="361" lineno="None" format_args="self, url, urldata, d">
            <AssName fromlineno="361" tolineno="361" lineno="361" name="self"/>
            <AssName fromlineno="361" tolineno="361" lineno="361" name="url"/>
            <AssName fromlineno="361" tolineno="361" lineno="361" name="urldata"/>
            <AssName fromlineno="361" tolineno="361" lineno="361" name="d"/>
          </Arguments>
          <Return fromlineno="367" tolineno="367" lineno="367">
            <Name fromlineno="367" tolineno="367" lineno="367" name="url"/>
          </Return>
        </Function>
        <Function fromlineno="369" tolineno="370" lineno="369">
          <Arguments fromlineno="369" tolineno="369" lineno="None" format_args="self, urls">
            <AssName fromlineno="369" tolineno="369" lineno="369" name="self"/>
            <AssName fromlineno="369" tolineno="369" lineno="369" name="urls"/>
          </Arguments>
          <Assign fromlineno="370" tolineno="370" lineno="370" targets="[&lt;AssAttr(__urls) l.370 [bb.fetch] at Ox9cdb08c&gt;]" value="urls">
            <AssAttr fromlineno="370" tolineno="370" lineno="370" attrname="__urls" expr="self">
              <Name fromlineno="370" tolineno="370" lineno="370" name="self"/>
            </AssAttr>
            <Name fromlineno="370" tolineno="370" lineno="370" name="urls"/>
          </Assign>
        </Function>
        <Function fromlineno="372" tolineno="373" lineno="372">
          <Arguments fromlineno="372" tolineno="372" lineno="None" format_args="self">
            <AssName fromlineno="372" tolineno="372" lineno="372" name="self"/>
          </Arguments>
          <Return fromlineno="373" tolineno="373" lineno="373">
            <Getattr fromlineno="373" tolineno="373" lineno="373" attrname="__urls" expr="self">
              <Name fromlineno="373" tolineno="373" lineno="373" name="self"/>
            </Getattr>
          </Return>
        </Function>
        <Assign fromlineno="375" tolineno="375" lineno="375" targets="[&lt;AssName(urls) l.375 [bb.fetch] at Ox9cdb26c&gt;]" value="property(getUrls, setUrls, None, 'Urls property')">
          <AssName fromlineno="375" tolineno="375" lineno="375" name="urls"/>
          <CallFunc fromlineno="375" tolineno="375" lineno="375" func="Name(property)">
            <Name fromlineno="375" tolineno="375" lineno="375" name="property"/>
            <Name fromlineno="375" tolineno="375" lineno="375" name="getUrls"/>
            <Name fromlineno="375" tolineno="375" lineno="375" name="setUrls"/>
            <Const fromlineno="375" tolineno="375" lineno="375" type="NoneType">None</Const>
            <Const fromlineno="375" tolineno="375" lineno="375" type="str">'Urls property'</Const>
          </CallFunc>
        </Assign>
        <Function fromlineno="377" tolineno="381" lineno="377">
          <Arguments fromlineno="377" tolineno="377" lineno="None" format_args="self, url, urldata, d">
            <AssName fromlineno="377" tolineno="377" lineno="377" name="self"/>
            <AssName fromlineno="377" tolineno="377" lineno="377" name="url"/>
            <AssName fromlineno="377" tolineno="377" lineno="377" name="urldata"/>
            <AssName fromlineno="377" tolineno="377" lineno="377" name="d"/>
          </Arguments>
          <Return fromlineno="381" tolineno="381" lineno="381">
            <Const fromlineno="381" tolineno="381" lineno="381" type="bool">False</Const>
          </Return>
        </Function>
        <Function fromlineno="383" tolineno="387" lineno="383">
          <Arguments fromlineno="383" tolineno="383" lineno="None" format_args="self">
            <AssName fromlineno="383" tolineno="383" lineno="383" name="self"/>
          </Arguments>
          <Return fromlineno="387" tolineno="387" lineno="387">
            <Const fromlineno="387" tolineno="387" lineno="387" type="bool">False</Const>
          </Return>
        </Function>
        <Function fromlineno="389" tolineno="394" lineno="389">
          <Arguments fromlineno="389" tolineno="389" lineno="None" format_args="self, url, urldata, d">
            <AssName fromlineno="389" tolineno="389" lineno="389" name="self"/>
            <AssName fromlineno="389" tolineno="389" lineno="389" name="url"/>
            <AssName fromlineno="389" tolineno="389" lineno="389" name="urldata"/>
            <AssName fromlineno="389" tolineno="389" lineno="389" name="d"/>
          </Arguments>
          <Raise fromlineno="394" tolineno="394" lineno="394">
            <CallFunc fromlineno="394" tolineno="394" lineno="394" func="Name(NoMethodError)">
              <Name fromlineno="394" tolineno="394" lineno="394" name="NoMethodError"/>
              <Const fromlineno="394" tolineno="394" lineno="394" type="str">'Missing implementation for url'</Const>
            </CallFunc>
          </Raise>
        </Function>
        <Function fromlineno="396" tolineno="402" lineno="396">
          <Arguments fromlineno="396" tolineno="396" lineno="None" format_args="self, url, urldata, d">
            <AssName fromlineno="396" tolineno="396" lineno="396" name="self"/>
            <AssName fromlineno="396" tolineno="396" lineno="396" name="url"/>
            <AssName fromlineno="396" tolineno="396" lineno="396" name="urldata"/>
            <AssName fromlineno="396" tolineno="396" lineno="396" name="d"/>
          </Arguments>
          <Discard fromlineno="401" tolineno="401" lineno="401">
            <CallFunc fromlineno="401" tolineno="401" lineno="401" func="Getattr(note)">
              <Getattr fromlineno="401" tolineno="401" lineno="401" attrname="note" expr="bb.msg">
                <Getattr fromlineno="401" tolineno="401" lineno="401" attrname="msg" expr="bb">
                  <Name fromlineno="401" tolineno="401" lineno="401" name="bb"/>
                </Getattr>
              </Getattr>
              <Const fromlineno="401" tolineno="401" lineno="401" type="int">1</Const>
              <Getattr fromlineno="401" tolineno="401" lineno="401" attrname="Fetcher" expr="bb.msg.domain">
                <Getattr fromlineno="401" tolineno="401" lineno="401" attrname="domain" expr="bb.msg">
                  <Getattr fromlineno="401" tolineno="401" lineno="401" attrname="msg" expr="bb">
                    <Name fromlineno="401" tolineno="401" lineno="401" name="bb"/>
                  </Getattr>
                </Getattr>
              </Getattr>
              <BinOp fromlineno="401" tolineno="401" lineno="401" op="%" left="'URL %s could not be checked for status since no method exists.'" right="url">
                <Const fromlineno="401" tolineno="401" lineno="401" type="str">'URL %s could not be checked for status since no method exists.'</Const>
                <Name fromlineno="401" tolineno="401" lineno="401" name="url"/>
              </BinOp>
            </CallFunc>
          </Discard>
          <Return fromlineno="402" tolineno="402" lineno="402">
            <Const fromlineno="402" tolineno="402" lineno="402" type="bool">True</Const>
          </Return>
        </Function>
        <Function fromlineno="404" tolineno="418" lineno="404">
          <Arguments fromlineno="404" tolineno="404" lineno="None" format_args="urldata, d">
            <AssName fromlineno="404" tolineno="404" lineno="404" name="urldata"/>
            <AssName fromlineno="404" tolineno="404" lineno="404" name="d"/>
          </Arguments>
          <If fromlineno="410" tolineno="411" lineno="410">
            <Compare fromlineno="410" tolineno="410" lineno="410" op="('in', &lt;Getattr(parm) l.410 [bb.fetch] at Ox9cdbdac&gt;)">
              <Const fromlineno="410" tolineno="410" lineno="410" type="str">'srcdate'</Const>
              <Getattr fromlineno="410" tolineno="410" lineno="410" attrname="parm" expr="urldata">
                <Name fromlineno="410" tolineno="410" lineno="410" name="urldata"/>
              </Getattr>
            </Compare>
            <Return fromlineno="411" tolineno="411" lineno="411">
              <Subscript fromlineno="411" tolineno="411" lineno="411">
                <Getattr fromlineno="411" tolineno="411" lineno="411" attrname="parm" expr="urldata">
                  <Name fromlineno="411" tolineno="411" lineno="411" name="urldata"/>
                </Getattr>
                <Index fromlineno="411" tolineno="411" lineno="None">
                  <Const fromlineno="411" tolineno="411" lineno="411" type="str">'srcdate'</Const>
                </Index>
              </Subscript>
            </Return>
          </If>
          <Assign fromlineno="413" tolineno="413" lineno="413" targets="[&lt;AssName(pn) l.413 [bb.fetch] at Ox9cdbf2c&gt;]" value="data.getVar('PN', d, 1)">
            <AssName fromlineno="413" tolineno="413" lineno="413" name="pn"/>
            <CallFunc fromlineno="413" tolineno="413" lineno="413" func="Getattr(getVar)">
              <Getattr fromlineno="413" tolineno="413" lineno="413" attrname="getVar" expr="data">
                <Name fromlineno="413" tolineno="413" lineno="413" name="data"/>
              </Getattr>
              <Const fromlineno="413" tolineno="413" lineno="413" type="str">'PN'</Const>
              <Name fromlineno="413" tolineno="413" lineno="413" name="d"/>
              <Const fromlineno="413" tolineno="413" lineno="413" type="int">1</Const>
            </CallFunc>
          </Assign>
          <If fromlineno="415" tolineno="416" lineno="415">
            <Name fromlineno="415" tolineno="415" lineno="415" name="pn"/>
            <Return fromlineno="416" tolineno="416" lineno="416">
              <BoolOp fromlineno="416" tolineno="416" lineno="416" op="or" values="data.getVar(('SRCDATE_%s') % (pn), d, 1),data.getVar(('CVSDATE_%s') % (pn), d, 1),data.getVar('SRCDATE', d, 1),data.getVar('CVSDATE', d, 1),data.getVar('DATE', d, 1),">
                <CallFunc fromlineno="416" tolineno="416" lineno="416" func="Getattr(getVar)">
                  <Getattr fromlineno="416" tolineno="416" lineno="416" attrname="getVar" expr="data">
                    <Name fromlineno="416" tolineno="416" lineno="416" name="data"/>
                  </Getattr>
                  <BinOp fromlineno="416" tolineno="416" lineno="416" op="%" left="'SRCDATE_%s'" right="pn">
                    <Const fromlineno="416" tolineno="416" lineno="416" type="str">'SRCDATE_%s'</Const>
                    <Name fromlineno="416" tolineno="416" lineno="416" name="pn"/>
                  </BinOp>
                  <Name fromlineno="416" tolineno="416" lineno="416" name="d"/>
                  <Const fromlineno="416" tolineno="416" lineno="416" type="int">1</Const>
                </CallFunc>
                <CallFunc fromlineno="416" tolineno="416" lineno="416" func="Getattr(getVar)">
                  <Getattr fromlineno="416" tolineno="416" lineno="416" attrname="getVar" expr="data">
                    <Name fromlineno="416" tolineno="416" lineno="416" name="data"/>
                  </Getattr>
                  <BinOp fromlineno="416" tolineno="416" lineno="416" op="%" left="'CVSDATE_%s'" right="pn">
                    <Const fromlineno="416" tolineno="416" lineno="416" type="str">'CVSDATE_%s'</Const>
                    <Name fromlineno="416" tolineno="416" lineno="416" name="pn"/>
                  </BinOp>
                  <Name fromlineno="416" tolineno="416" lineno="416" name="d"/>
                  <Const fromlineno="416" tolineno="416" lineno="416" type="int">1</Const>
                </CallFunc>
                <CallFunc fromlineno="416" tolineno="416" lineno="416" func="Getattr(getVar)">
                  <Getattr fromlineno="416" tolineno="416" lineno="416" attrname="getVar" expr="data">
                    <Name fromlineno="416" tolineno="416" lineno="416" name="data"/>
                  </Getattr>
                  <Const fromlineno="416" tolineno="416" lineno="416" type="str">'SRCDATE'</Const>
                  <Name fromlineno="416" tolineno="416" lineno="416" name="d"/>
                  <Const fromlineno="416" tolineno="416" lineno="416" type="int">1</Const>
                </CallFunc>
                <CallFunc fromlineno="416" tolineno="416" lineno="416" func="Getattr(getVar)">
                  <Getattr fromlineno="416" tolineno="416" lineno="416" attrname="getVar" expr="data">
                    <Name fromlineno="416" tolineno="416" lineno="416" name="data"/>
                  </Getattr>
                  <Const fromlineno="416" tolineno="416" lineno="416" type="str">'CVSDATE'</Const>
                  <Name fromlineno="416" tolineno="416" lineno="416" name="d"/>
                  <Const fromlineno="416" tolineno="416" lineno="416" type="int">1</Const>
                </CallFunc>
                <CallFunc fromlineno="416" tolineno="416" lineno="416" func="Getattr(getVar)">
                  <Getattr fromlineno="416" tolineno="416" lineno="416" attrname="getVar" expr="data">
                    <Name fromlineno="416" tolineno="416" lineno="416" name="data"/>
                  </Getattr>
                  <Const fromlineno="416" tolineno="416" lineno="416" type="str">'DATE'</Const>
                  <Name fromlineno="416" tolineno="416" lineno="416" name="d"/>
                  <Const fromlineno="416" tolineno="416" lineno="416" type="int">1</Const>
                </CallFunc>
              </BoolOp>
            </Return>
          </If>
          <Return fromlineno="418" tolineno="418" lineno="418">
            <BoolOp fromlineno="418" tolineno="418" lineno="418" op="or" values="data.getVar('SRCDATE', d, 1),data.getVar('CVSDATE', d, 1),data.getVar('DATE', d, 1),">
              <CallFunc fromlineno="418" tolineno="418" lineno="418" func="Getattr(getVar)">
                <Getattr fromlineno="418" tolineno="418" lineno="418" attrname="getVar" expr="data">
                  <Name fromlineno="418" tolineno="418" lineno="418" name="data"/>
                </Getattr>
                <Const fromlineno="418" tolineno="418" lineno="418" type="str">'SRCDATE'</Const>
                <Name fromlineno="418" tolineno="418" lineno="418" name="d"/>
                <Const fromlineno="418" tolineno="418" lineno="418" type="int">1</Const>
              </CallFunc>
              <CallFunc fromlineno="418" tolineno="418" lineno="418" func="Getattr(getVar)">
                <Getattr fromlineno="418" tolineno="418" lineno="418" attrname="getVar" expr="data">
                  <Name fromlineno="418" tolineno="418" lineno="418" name="data"/>
                </Getattr>
                <Const fromlineno="418" tolineno="418" lineno="418" type="str">'CVSDATE'</Const>
                <Name fromlineno="418" tolineno="418" lineno="418" name="d"/>
                <Const fromlineno="418" tolineno="418" lineno="418" type="int">1</Const>
              </CallFunc>
              <CallFunc fromlineno="418" tolineno="418" lineno="418" func="Getattr(getVar)">
                <Getattr fromlineno="418" tolineno="418" lineno="418" attrname="getVar" expr="data">
                  <Name fromlineno="418" tolineno="418" lineno="418" name="data"/>
                </Getattr>
                <Const fromlineno="418" tolineno="418" lineno="418" type="str">'DATE'</Const>
                <Name fromlineno="418" tolineno="418" lineno="418" name="d"/>
                <Const fromlineno="418" tolineno="418" lineno="418" type="int">1</Const>
              </CallFunc>
            </BoolOp>
          </Return>
        </Function>
        <Assign fromlineno="419" tolineno="419" lineno="419" targets="[&lt;AssName(getSRCDate) l.419 [bb.fetch] at Ox9ce194c&gt;]" value="staticmethod(getSRCDate)">
          <AssName fromlineno="419" tolineno="419" lineno="419" name="getSRCDate"/>
          <CallFunc fromlineno="419" tolineno="419" lineno="419" func="Name(staticmethod)">
            <Name fromlineno="419" tolineno="419" lineno="419" name="staticmethod"/>
            <Name fromlineno="419" tolineno="419" lineno="419" name="getSRCDate"/>
          </CallFunc>
        </Assign>
        <Function fromlineno="421" tolineno="447" lineno="421">
          <Arguments fromlineno="421" tolineno="421" lineno="None" format_args="ud, d">
            <AssName fromlineno="421" tolineno="421" lineno="421" name="ud"/>
            <AssName fromlineno="421" tolineno="421" lineno="421" name="d"/>
          </Arguments>
          <If fromlineno="429" tolineno="430" lineno="429">
            <Compare fromlineno="429" tolineno="429" lineno="429" op="('in', &lt;Getattr(parm) l.429 [bb.fetch] at Ox9ce1bcc&gt;)">
              <Const fromlineno="429" tolineno="429" lineno="429" type="str">'rev'</Const>
              <Getattr fromlineno="429" tolineno="429" lineno="429" attrname="parm" expr="ud">
                <Name fromlineno="429" tolineno="429" lineno="429" name="ud"/>
              </Getattr>
            </Compare>
            <Return fromlineno="430" tolineno="430" lineno="430">
              <Subscript fromlineno="430" tolineno="430" lineno="430">
                <Getattr fromlineno="430" tolineno="430" lineno="430" attrname="parm" expr="ud">
                  <Name fromlineno="430" tolineno="430" lineno="430" name="ud"/>
                </Getattr>
                <Index fromlineno="430" tolineno="430" lineno="None">
                  <Const fromlineno="430" tolineno="430" lineno="430" type="str">'rev'</Const>
                </Index>
              </Subscript>
            </Return>
          </If>
          <If fromlineno="432" tolineno="433" lineno="432">
            <Compare fromlineno="432" tolineno="432" lineno="432" op="('in', &lt;Getattr(parm) l.432 [bb.fetch] at Ox9ce1dac&gt;)">
              <Const fromlineno="432" tolineno="432" lineno="432" type="str">'tag'</Const>
              <Getattr fromlineno="432" tolineno="432" lineno="432" attrname="parm" expr="ud">
                <Name fromlineno="432" tolineno="432" lineno="432" name="ud"/>
              </Getattr>
            </Compare>
            <Return fromlineno="433" tolineno="433" lineno="433">
              <Subscript fromlineno="433" tolineno="433" lineno="433">
                <Getattr fromlineno="433" tolineno="433" lineno="433" attrname="parm" expr="ud">
                  <Name fromlineno="433" tolineno="433" lineno="433" name="ud"/>
                </Getattr>
                <Index fromlineno="433" tolineno="433" lineno="None">
                  <Const fromlineno="433" tolineno="433" lineno="433" type="str">'tag'</Const>
                </Index>
              </Subscript>
            </Return>
          </If>
          <Assign fromlineno="435" tolineno="435" lineno="435" targets="[&lt;AssName(rev) l.435 [bb.fetch] at Ox9ce1f2c&gt;]" value="None">
            <AssName fromlineno="435" tolineno="435" lineno="435" name="rev"/>
            <Const fromlineno="435" tolineno="435" lineno="435" type="NoneType">None</Const>
          </Assign>
          <If fromlineno="436" tolineno="438" lineno="436">
            <Compare fromlineno="436" tolineno="436" lineno="436" op="('in', &lt;Getattr(parm) l.436 [bb.fetch] at Ox9ce504c&gt;)">
              <Const fromlineno="436" tolineno="436" lineno="436" type="str">'name'</Const>
              <Getattr fromlineno="436" tolineno="436" lineno="436" attrname="parm" expr="ud">
                <Name fromlineno="436" tolineno="436" lineno="436" name="ud"/>
              </Getattr>
            </Compare>
            <Assign fromlineno="437" tolineno="437" lineno="437" targets="[&lt;AssName(pn) l.437 [bb.fetch] at Ox9ce510c&gt;]" value="data.getVar('PN', d, 1)">
              <AssName fromlineno="437" tolineno="437" lineno="437" name="pn"/>
              <CallFunc fromlineno="437" tolineno="437" lineno="437" func="Getattr(getVar)">
                <Getattr fromlineno="437" tolineno="437" lineno="437" attrname="getVar" expr="data">
                  <Name fromlineno="437" tolineno="437" lineno="437" name="data"/>
                </Getattr>
                <Const fromlineno="437" tolineno="437" lineno="437" type="str">'PN'</Const>
                <Name fromlineno="437" tolineno="437" lineno="437" name="d"/>
                <Const fromlineno="437" tolineno="437" lineno="437" type="int">1</Const>
              </CallFunc>
            </Assign>
            <Assign fromlineno="438" tolineno="438" lineno="438" targets="[&lt;AssName(rev) l.438 [bb.fetch] at Ox9ce526c&gt;]" value="data.getVar(((('SRCREV_pn-') + (pn)) + ('_')) + (ud.parm['name']), d, 1)">
              <AssName fromlineno="438" tolineno="438" lineno="438" name="rev"/>
              <CallFunc fromlineno="438" tolineno="438" lineno="438" func="Getattr(getVar)">
                <Getattr fromlineno="438" tolineno="438" lineno="438" attrname="getVar" expr="data">
                  <Name fromlineno="438" tolineno="438" lineno="438" name="data"/>
                </Getattr>
                <BinOp fromlineno="438" tolineno="438" lineno="438" op="+" left="(('SRCREV_pn-') + (pn)) + ('_')" right="ud.parm['name']">
                  <BinOp fromlineno="438" tolineno="438" lineno="438" op="+" left="('SRCREV_pn-') + (pn)" right="'_'">
                    <BinOp fromlineno="438" tolineno="438" lineno="438" op="+" left="'SRCREV_pn-'" right="pn">
                      <Const fromlineno="438" tolineno="438" lineno="438" type="str">'SRCREV_pn-'</Const>
                      <Name fromlineno="438" tolineno="438" lineno="438" name="pn"/>
                    </BinOp>
                    <Const fromlineno="438" tolineno="438" lineno="438" type="str">'_'</Const>
                  </BinOp>
                  <Subscript fromlineno="438" tolineno="438" lineno="438">
                    <Getattr fromlineno="438" tolineno="438" lineno="438" attrname="parm" expr="ud">
                      <Name fromlineno="438" tolineno="438" lineno="438" name="ud"/>
                    </Getattr>
                    <Index fromlineno="438" tolineno="438" lineno="None">
                      <Const fromlineno="438" tolineno="438" lineno="438" type="str">'name'</Const>
                    </Index>
                  </Subscript>
                </BinOp>
                <Name fromlineno="438" tolineno="438" lineno="438" name="d"/>
                <Const fromlineno="438" tolineno="438" lineno="438" type="int">1</Const>
              </CallFunc>
            </Assign>
          </If>
          <If fromlineno="439" tolineno="440" lineno="439">
            <UnaryOp fromlineno="439" tolineno="439" lineno="439">
              <Name fromlineno="439" tolineno="439" lineno="439" name="rev"/>
            </UnaryOp>
            <Assign fromlineno="440" tolineno="440" lineno="440" targets="[&lt;AssName(rev) l.440 [bb.fetch] at Ox9ce558c&gt;]" value="data.getVar('SRCREV', d, 1)">
              <AssName fromlineno="440" tolineno="440" lineno="440" name="rev"/>
              <CallFunc fromlineno="440" tolineno="440" lineno="440" func="Getattr(getVar)">
                <Getattr fromlineno="440" tolineno="440" lineno="440" attrname="getVar" expr="data">
                  <Name fromlineno="440" tolineno="440" lineno="440" name="data"/>
                </Getattr>
                <Const fromlineno="440" tolineno="440" lineno="440" type="str">'SRCREV'</Const>
                <Name fromlineno="440" tolineno="440" lineno="440" name="d"/>
                <Const fromlineno="440" tolineno="440" lineno="440" type="int">1</Const>
              </CallFunc>
            </Assign>
          </If>
          <If fromlineno="441" tolineno="442" lineno="441">
            <Compare fromlineno="441" tolineno="441" lineno="441" op="('==', &lt;Const(str) l.441 [bb.fetch] at Ox9ce572c&gt;)">
              <Name fromlineno="441" tolineno="441" lineno="441" name="rev"/>
              <Const fromlineno="441" tolineno="441" lineno="441" type="str">'INVALID'</Const>
            </Compare>
            <Raise fromlineno="442" tolineno="442" lineno="442">
              <CallFunc fromlineno="442" tolineno="442" lineno="442" func="Name(InvalidSRCREV)">
                <Name fromlineno="442" tolineno="442" lineno="442" name="InvalidSRCREV"/>
                <Const fromlineno="442" tolineno="442" lineno="442" type="str">'Please set SRCREV to a valid value'</Const>
              </CallFunc>
            </Raise>
          </If>
          <If fromlineno="443" tolineno="444" lineno="443">
            <UnaryOp fromlineno="443" tolineno="443" lineno="443">
              <Name fromlineno="443" tolineno="443" lineno="443" name="rev"/>
            </UnaryOp>
            <Return fromlineno="444" tolineno="444" lineno="444">
              <Const fromlineno="444" tolineno="444" lineno="444" type="bool">False</Const>
            </Return>
          </If>
          <If fromlineno="445" tolineno="446" lineno="445">
            <Compare fromlineno="445" tolineno="445" lineno="445" op="('is', &lt;Const(str) l.445 [bb.fetch] at Ox9ce59ac&gt;)">
              <Name fromlineno="445" tolineno="445" lineno="445" name="rev"/>
              <Const fromlineno="445" tolineno="445" lineno="445" type="str">'SRCREVINACTION'</Const>
            </Compare>
            <Return fromlineno="446" tolineno="446" lineno="446">
              <Const fromlineno="446" tolineno="446" lineno="446" type="bool">True</Const>
            </Return>
          </If>
          <Return fromlineno="447" tolineno="447" lineno="447">
            <Name fromlineno="447" tolineno="447" lineno="447" name="rev"/>
          </Return>
        </Function>
        <Assign fromlineno="449" tolineno="449" lineno="449" targets="[&lt;AssName(srcrev_internal_helper) l.449 [bb.fetch] at Ox9ce5aac&gt;]" value="staticmethod(srcrev_internal_helper)">
          <AssName fromlineno="449" tolineno="449" lineno="449" name="srcrev_internal_helper"/>
          <CallFunc fromlineno="449" tolineno="449" lineno="449" func="Name(staticmethod)">
            <Name fromlineno="449" tolineno="449" lineno="449" name="staticmethod"/>
            <Name fromlineno="449" tolineno="449" lineno="449" name="srcrev_internal_helper"/>
          </CallFunc>
        </Assign>
        <Function fromlineno="451" tolineno="491" lineno="451">
          <Arguments fromlineno="451" tolineno="451" lineno="None" format_args="d, tarfn">
            <AssName fromlineno="451" tolineno="451" lineno="451" name="d"/>
            <AssName fromlineno="451" tolineno="451" lineno="451" name="tarfn"/>
          </Arguments>
          <Assign fromlineno="461" tolineno="461" lineno="461" targets="[&lt;AssName(tarpath) l.461 [bb.fetch] at Ox9ce5ccc&gt;]" value="os.path.join(data.getVar('DL_DIR', d, 1), tarfn)">
            <AssName fromlineno="461" tolineno="461" lineno="461" name="tarpath"/>
            <CallFunc fromlineno="461" tolineno="461" lineno="461" func="Getattr(join)">
              <Getattr fromlineno="461" tolineno="461" lineno="461" attrname="join" expr="os.path">
                <Getattr fromlineno="461" tolineno="461" lineno="461" attrname="path" expr="os">
                  <Name fromlineno="461" tolineno="461" lineno="461" name="os"/>
                </Getattr>
              </Getattr>
              <CallFunc fromlineno="461" tolineno="461" lineno="461" func="Getattr(getVar)">
                <Getattr fromlineno="461" tolineno="461" lineno="461" attrname="getVar" expr="data">
                  <Name fromlineno="461" tolineno="461" lineno="461" name="data"/>
                </Getattr>
                <Const fromlineno="461" tolineno="461" lineno="461" type="str">'DL_DIR'</Const>
                <Name fromlineno="461" tolineno="461" lineno="461" name="d"/>
                <Const fromlineno="461" tolineno="461" lineno="461" type="int">1</Const>
              </CallFunc>
              <Name fromlineno="461" tolineno="461" lineno="461" name="tarfn"/>
            </CallFunc>
          </Assign>
          <If fromlineno="462" tolineno="464" lineno="462">
            <CallFunc fromlineno="462" tolineno="462" lineno="462" func="Getattr(access)">
              <Getattr fromlineno="462" tolineno="462" lineno="462" attrname="access" expr="os">
                <Name fromlineno="462" tolineno="462" lineno="462" name="os"/>
              </Getattr>
              <Name fromlineno="462" tolineno="462" lineno="462" name="tarpath"/>
              <Getattr fromlineno="462" tolineno="462" lineno="462" attrname="R_OK" expr="os">
                <Name fromlineno="462" tolineno="462" lineno="462" name="os"/>
              </Getattr>
            </CallFunc>
            <Discard fromlineno="463" tolineno="463" lineno="463">
              <CallFunc fromlineno="463" tolineno="463" lineno="463" func="Getattr(debug)">
                <Getattr fromlineno="463" tolineno="463" lineno="463" attrname="debug" expr="bb.msg">
                  <Getattr fromlineno="463" tolineno="463" lineno="463" attrname="msg" expr="bb">
                    <Name fromlineno="463" tolineno="463" lineno="463" name="bb"/>
                  </Getattr>
                </Getattr>
                <Const fromlineno="463" tolineno="463" lineno="463" type="int">1</Const>
                <Getattr fromlineno="463" tolineno="463" lineno="463" attrname="Fetcher" expr="bb.msg.domain">
                  <Getattr fromlineno="463" tolineno="463" lineno="463" attrname="domain" expr="bb.msg">
                    <Getattr fromlineno="463" tolineno="463" lineno="463" attrname="msg" expr="bb">
                      <Name fromlineno="463" tolineno="463" lineno="463" name="bb"/>
                    </Getattr>
                  </Getattr>
                </Getattr>
                <BinOp fromlineno="463" tolineno="463" lineno="463" op="%" left="'%s already exists, skipping checkout.'" right="tarfn">
                  <Const fromlineno="463" tolineno="463" lineno="463" type="str">'%s already exists, skipping checkout.'</Const>
                  <Name fromlineno="463" tolineno="463" lineno="463" name="tarfn"/>
                </BinOp>
              </CallFunc>
            </Discard>
            <Return fromlineno="464" tolineno="464" lineno="464">
              <Const fromlineno="464" tolineno="464" lineno="464" type="bool">True</Const>
            </Return>
          </If>
          <Assign fromlineno="466" tolineno="466" lineno="466" targets="[&lt;AssName(pn) l.466 [bb.fetch] at Ox9ce824c&gt;]" value="data.getVar('PN', d, True)">
            <AssName fromlineno="466" tolineno="466" lineno="466" name="pn"/>
            <CallFunc fromlineno="466" tolineno="466" lineno="466" func="Getattr(getVar)">
              <Getattr fromlineno="466" tolineno="466" lineno="466" attrname="getVar" expr="data">
                <Name fromlineno="466" tolineno="466" lineno="466" name="data"/>
              </Getattr>
              <Const fromlineno="466" tolineno="466" lineno="466" type="str">'PN'</Const>
              <Name fromlineno="466" tolineno="466" lineno="466" name="d"/>
              <Const fromlineno="466" tolineno="466" lineno="466" type="bool">True</Const>
            </CallFunc>
          </Assign>
          <Assign fromlineno="467" tolineno="467" lineno="467" targets="[&lt;AssName(src_tarball_stash) l.467 [bb.fetch] at Ox9ce83ac&gt;]" value="None">
            <AssName fromlineno="467" tolineno="467" lineno="467" name="src_tarball_stash"/>
            <Const fromlineno="467" tolineno="467" lineno="467" type="NoneType">None</Const>
          </Assign>
          <If fromlineno="468" tolineno="469" lineno="468">
            <Name fromlineno="468" tolineno="468" lineno="468" name="pn"/>
            <Assign fromlineno="469" tolineno="469" lineno="469" targets="[&lt;AssName(src_tarball_stash) l.469 [bb.fetch] at Ox9ce84cc&gt;]" value="(data.getVar(('SRC_TARBALL_STASH_%s') % (pn), d, True)) or (data.getVar(('CVS_TARBALL_STASH_%s') % (pn), d, True)) or (data.getVar('SRC_TARBALL_STASH', d, True)) or (data.getVar('CVS_TARBALL_STASH', d, True)) or ('').split()">
              <AssName fromlineno="469" tolineno="469" lineno="469" name="src_tarball_stash"/>
              <CallFunc fromlineno="469" tolineno="469" lineno="469" func="Getattr(split)">
                <Getattr fromlineno="469" tolineno="469" lineno="469" attrname="split" expr="(data.getVar(('SRC_TARBALL_STASH_%s') % (pn), d, True)) or (data.getVar(('CVS_TARBALL_STASH_%s') % (pn), d, True)) or (data.getVar('SRC_TARBALL_STASH', d, True)) or (data.getVar('CVS_TARBALL_STASH', d, True)) or ('')">
                  <BoolOp fromlineno="469" tolineno="469" lineno="469" op="or" values="data.getVar(('SRC_TARBALL_STASH_%s') % (pn), d, True),data.getVar(('CVS_TARBALL_STASH_%s') % (pn), d, True),data.getVar('SRC_TARBALL_STASH', d, True),data.getVar('CVS_TARBALL_STASH', d, True),'',">
                    <CallFunc fromlineno="469" tolineno="469" lineno="469" func="Getattr(getVar)">
                      <Getattr fromlineno="469" tolineno="469" lineno="469" attrname="getVar" expr="data">
                        <Name fromlineno="469" tolineno="469" lineno="469" name="data"/>
                      </Getattr>
                      <BinOp fromlineno="469" tolineno="469" lineno="469" op="%" left="'SRC_TARBALL_STASH_%s'" right="pn">
                        <Const fromlineno="469" tolineno="469" lineno="469" type="str">'SRC_TARBALL_STASH_%s'</Const>
                        <Name fromlineno="469" tolineno="469" lineno="469" name="pn"/>
                      </BinOp>
                      <Name fromlineno="469" tolineno="469" lineno="469" name="d"/>
                      <Const fromlineno="469" tolineno="469" lineno="469" type="bool">True</Const>
                    </CallFunc>
                    <CallFunc fromlineno="469" tolineno="469" lineno="469" func="Getattr(getVar)">
                      <Getattr fromlineno="469" tolineno="469" lineno="469" attrname="getVar" expr="data">
                        <Name fromlineno="469" tolineno="469" lineno="469" name="data"/>
                      </Getattr>
                      <BinOp fromlineno="469" tolineno="469" lineno="469" op="%" left="'CVS_TARBALL_STASH_%s'" right="pn">
                        <Const fromlineno="469" tolineno="469" lineno="469" type="str">'CVS_TARBALL_STASH_%s'</Const>
                        <Name fromlineno="469" tolineno="469" lineno="469" name="pn"/>
                      </BinOp>
                      <Name fromlineno="469" tolineno="469" lineno="469" name="d"/>
                      <Const fromlineno="469" tolineno="469" lineno="469" type="bool">True</Const>
                    </CallFunc>
                    <CallFunc fromlineno="469" tolineno="469" lineno="469" func="Getattr(getVar)">
                      <Getattr fromlineno="469" tolineno="469" lineno="469" attrname="getVar" expr="data">
                        <Name fromlineno="469" tolineno="469" lineno="469" name="data"/>
                      </Getattr>
                      <Const fromlineno="469" tolineno="469" lineno="469" type="str">'SRC_TARBALL_STASH'</Const>
                      <Name fromlineno="469" tolineno="469" lineno="469" name="d"/>
                      <Const fromlineno="469" tolineno="469" lineno="469" type="bool">True</Const>
                    </CallFunc>
                    <CallFunc fromlineno="469" tolineno="469" lineno="469" func="Getattr(getVar)">
                      <Getattr fromlineno="469" tolineno="469" lineno="469" attrname="getVar" expr="data">
                        <Name fromlineno="469" tolineno="469" lineno="469" name="data"/>
                      </Getattr>
                      <Const fromlineno="469" tolineno="469" lineno="469" type="str">'CVS_TARBALL_STASH'</Const>
                      <Name fromlineno="469" tolineno="469" lineno="469" name="d"/>
                      <Const fromlineno="469" tolineno="469" lineno="469" type="bool">True</Const>
                    </CallFunc>
                    <Const fromlineno="469" tolineno="469" lineno="469" type="str">''</Const>
                  </BoolOp>
                </Getattr>
              </CallFunc>
            </Assign>
          </If>
          <Assign fromlineno="471" tolineno="471" lineno="471" targets="[&lt;AssName(ld) l.471 [bb.fetch] at Ox9ce89ec&gt;]" value="d.createCopy()">
            <AssName fromlineno="471" tolineno="471" lineno="471" name="ld"/>
            <CallFunc fromlineno="471" tolineno="471" lineno="471" func="Getattr(createCopy)">
              <Getattr fromlineno="471" tolineno="471" lineno="471" attrname="createCopy" expr="d">
                <Name fromlineno="471" tolineno="471" lineno="471" name="d"/>
              </Getattr>
            </CallFunc>
          </Assign>
          <For fromlineno="472" tolineno="490" lineno="472">
            <AssName fromlineno="472" tolineno="472" lineno="472" name="stash"/>
            <Name fromlineno="472" tolineno="472" lineno="472" name="src_tarball_stash"/>
            <Assign fromlineno="473" tolineno="473" lineno="473" targets="[&lt;AssName(url) l.473 [bb.fetch] at Ox9ce8bac&gt;]" value="(stash) + (tarfn)">
              <AssName fromlineno="473" tolineno="473" lineno="473" name="url"/>
              <BinOp fromlineno="473" tolineno="473" lineno="473" op="+" left="stash" right="tarfn">
                <Name fromlineno="473" tolineno="473" lineno="473" name="stash"/>
                <Name fromlineno="473" tolineno="473" lineno="473" name="tarfn"/>
              </BinOp>
            </Assign>
            <TryExcept fromlineno="474" tolineno="478" lineno="474">
              <Assign fromlineno="475" tolineno="475" lineno="475" targets="[&lt;AssName(ud) l.475 [bb.fetch] at Ox9ce8cec&gt;]" value="FetchData(url, ld)">
                <AssName fromlineno="475" tolineno="475" lineno="475" name="ud"/>
                <CallFunc fromlineno="475" tolineno="475" lineno="475" func="Name(FetchData)">
                  <Name fromlineno="475" tolineno="475" lineno="475" name="FetchData"/>
                  <Name fromlineno="475" tolineno="475" lineno="475" name="url"/>
                  <Name fromlineno="475" tolineno="475" lineno="475" name="ld"/>
                </CallFunc>
              </Assign>
              <ExceptHandler fromlineno="476" tolineno="478" lineno="476">
                <Getattr fromlineno="476" tolineno="476" lineno="476" attrname="NoMethodError" expr="bb.fetch">
                  <Getattr fromlineno="476" tolineno="476" lineno="476" attrname="fetch" expr="bb">
                    <Name fromlineno="476" tolineno="476" lineno="476" name="bb"/>
                  </Getattr>
                </Getattr>
                <Discard fromlineno="477" tolineno="477" lineno="477">
                  <CallFunc fromlineno="477" tolineno="477" lineno="477" func="Getattr(debug)">
                    <Getattr fromlineno="477" tolineno="477" lineno="477" attrname="debug" expr="bb.msg">
                      <Getattr fromlineno="477" tolineno="477" lineno="477" attrname="msg" expr="bb">
                        <Name fromlineno="477" tolineno="477" lineno="477" name="bb"/>
                      </Getattr>
                    </Getattr>
                    <Const fromlineno="477" tolineno="477" lineno="477" type="int">1</Const>
                    <Getattr fromlineno="477" tolineno="477" lineno="477" attrname="Fetcher" expr="bb.msg.domain">
                      <Getattr fromlineno="477" tolineno="477" lineno="477" attrname="domain" expr="bb.msg">
                        <Getattr fromlineno="477" tolineno="477" lineno="477" attrname="msg" expr="bb">
                          <Name fromlineno="477" tolineno="477" lineno="477" name="bb"/>
                        </Getattr>
                      </Getattr>
                    </Getattr>
                    <BinOp fromlineno="477" tolineno="477" lineno="477" op="%" left="'No method for %s'" right="url">
                      <Const fromlineno="477" tolineno="477" lineno="477" type="str">'No method for %s'</Const>
                      <Name fromlineno="477" tolineno="477" lineno="477" name="url"/>
                    </BinOp>
                  </CallFunc>
                </Discard>
                <Continue fromlineno="478" tolineno="478" lineno="478"/>
              </ExceptHandler>
            </TryExcept>
            <Discard fromlineno="480" tolineno="480" lineno="480">
              <CallFunc fromlineno="480" tolineno="480" lineno="480" func="Getattr(setup_localpath)">
                <Getattr fromlineno="480" tolineno="480" lineno="480" attrname="setup_localpath" expr="ud">
                  <Name fromlineno="480" tolineno="480" lineno="480" name="ud"/>
                </Getattr>
                <Name fromlineno="480" tolineno="480" lineno="480" name="ld"/>
              </CallFunc>
            </Discard>
            <TryExcept fromlineno="482" tolineno="490" lineno="482">
              <Discard fromlineno="483" tolineno="483" lineno="483">
                <CallFunc fromlineno="483" tolineno="483" lineno="483" func="Getattr(go)">
                  <Getattr fromlineno="483" tolineno="483" lineno="483" attrname="go" expr="ud.method">
                    <Getattr fromlineno="483" tolineno="483" lineno="483" attrname="method" expr="ud">
                      <Name fromlineno="483" tolineno="483" lineno="483" name="ud"/>
                    </Getattr>
                  </Getattr>
                  <Name fromlineno="483" tolineno="483" lineno="483" name="url"/>
                  <Name fromlineno="483" tolineno="483" lineno="483" name="ud"/>
                  <Name fromlineno="483" tolineno="483" lineno="483" name="ld"/>
                </CallFunc>
              </Discard>
              <Return fromlineno="484" tolineno="484" lineno="484">
                <Const fromlineno="484" tolineno="484" lineno="484" type="bool">True</Const>
              </Return>
              <ExceptHandler fromlineno="485" tolineno="490" lineno="485">
                <Tuple fromlineno="485" tolineno="487" lineno="485">
                  <Getattr fromlineno="485" tolineno="485" lineno="485" attrname="MissingParameterError" expr="bb.fetch">
                    <Getattr fromlineno="485" tolineno="485" lineno="485" attrname="fetch" expr="bb">
                      <Name fromlineno="485" tolineno="485" lineno="485" name="bb"/>
                    </Getattr>
                  </Getattr>
                  <Getattr fromlineno="486" tolineno="486" lineno="486" attrname="FetchError" expr="bb.fetch">
                    <Getattr fromlineno="486" tolineno="486" lineno="486" attrname="fetch" expr="bb">
                      <Name fromlineno="486" tolineno="486" lineno="486" name="bb"/>
                    </Getattr>
                  </Getattr>
                  <Getattr fromlineno="487" tolineno="487" lineno="487" attrname="MD5SumError" expr="bb.fetch">
                    <Getattr fromlineno="487" tolineno="487" lineno="487" attrname="fetch" expr="bb">
                      <Name fromlineno="487" tolineno="487" lineno="487" name="bb"/>
                    </Getattr>
                  </Getattr>
                </Tuple>
                <Import fromlineno="488" tolineno="488" lineno="488">
                  <ImportName name="sys"/>
                </Import>
                <Assign fromlineno="489" tolineno="489" lineno="489" targets="[&lt;Tuple(tuple) l.489 [bb.fetch] at Ox9e0658c&gt;]" value="sys.exc_info()">
                  <Tuple fromlineno="489" tolineno="489" lineno="489">
                    <AssName fromlineno="489" tolineno="489" lineno="489" name="type"/>
                    <AssName fromlineno="489" tolineno="489" lineno="489" name="value"/>
                    <AssName fromlineno="489" tolineno="489" lineno="489" name="traceback"/>
                  </Tuple>
                  <CallFunc fromlineno="489" tolineno="489" lineno="489" func="Getattr(exc_info)">
                    <Getattr fromlineno="489" tolineno="489" lineno="489" attrname="exc_info" expr="sys">
                      <Name fromlineno="489" tolineno="489" lineno="489" name="sys"/>
                    </Getattr>
                  </CallFunc>
                </Assign>
                <Discard fromlineno="490" tolineno="490" lineno="490">
                  <CallFunc fromlineno="490" tolineno="490" lineno="490" func="Getattr(debug)">
                    <Getattr fromlineno="490" tolineno="490" lineno="490" attrname="debug" expr="bb.msg">
                      <Getattr fromlineno="490" tolineno="490" lineno="490" attrname="msg" expr="bb">
                        <Name fromlineno="490" tolineno="490" lineno="490" name="bb"/>
                      </Getattr>
                    </Getattr>
                    <Const fromlineno="490" tolineno="490" lineno="490" type="int">2</Const>
                    <Getattr fromlineno="490" tolineno="490" lineno="490" attrname="Fetcher" expr="bb.msg.domain">
                      <Getattr fromlineno="490" tolineno="490" lineno="490" attrname="domain" expr="bb.msg">
                        <Getattr fromlineno="490" tolineno="490" lineno="490" attrname="msg" expr="bb">
                          <Name fromlineno="490" tolineno="490" lineno="490" name="bb"/>
                        </Getattr>
                      </Getattr>
                    </Getattr>
                    <BinOp fromlineno="490" tolineno="490" lineno="490" op="%" left="'Tarball stash fetch failure: %s'" right="value">
                      <Const fromlineno="490" tolineno="490" lineno="490" type="str">'Tarball stash fetch failure: %s'</Const>
                      <Name fromlineno="490" tolineno="490" lineno="490" name="value"/>
                    </BinOp>
                  </CallFunc>
                </Discard>
              </ExceptHandler>
            </TryExcept>
          </For>
          <Return fromlineno="491" tolineno="491" lineno="491">
            <Const fromlineno="491" tolineno="491" lineno="491" type="bool">False</Const>
          </Return>
        </Function>
        <Assign fromlineno="492" tolineno="492" lineno="492" targets="[&lt;AssName(try_mirror) l.492 [bb.fetch] at Ox9e0692c&gt;]" value="staticmethod(try_mirror)">
          <AssName fromlineno="492" tolineno="492" lineno="492" name="try_mirror"/>
          <CallFunc fromlineno="492" tolineno="492" lineno="492" func="Name(staticmethod)">
            <Name fromlineno="492" tolineno="492" lineno="492" name="staticmethod"/>
            <Name fromlineno="492" tolineno="492" lineno="492" name="try_mirror"/>
          </CallFunc>
        </Assign>
        <Function fromlineno="494" tolineno="504" lineno="494">
          <Arguments fromlineno="494" tolineno="494" lineno="None" format_args="ud, got_sum">
            <AssName fromlineno="494" tolineno="494" lineno="494" name="ud"/>
            <AssName fromlineno="494" tolineno="494" lineno="494" name="got_sum"/>
          </Arguments>
          <Assign fromlineno="498" tolineno="498" lineno="498" targets="[&lt;AssName(wanted_sum) l.498 [bb.fetch] at Ox9e06b4c&gt;]" value="None">
            <AssName fromlineno="498" tolineno="498" lineno="498" name="wanted_sum"/>
            <Const fromlineno="498" tolineno="498" lineno="498" type="NoneType">None</Const>
          </Assign>
          <If fromlineno="499" tolineno="500" lineno="499">
            <Compare fromlineno="499" tolineno="499" lineno="499" op="('in', &lt;Getattr(parm) l.499 [bb.fetch] at Ox9e06c4c&gt;)">
              <Const fromlineno="499" tolineno="499" lineno="499" type="str">'md5sum'</Const>
              <Getattr fromlineno="499" tolineno="499" lineno="499" attrname="parm" expr="ud">
                <Name fromlineno="499" tolineno="499" lineno="499" name="ud"/>
              </Getattr>
            </Compare>
            <Assign fromlineno="500" tolineno="500" lineno="500" targets="[&lt;AssName(wanted_sum) l.500 [bb.fetch] at Ox9e06d0c&gt;]" value="ud.parm['md5sum']">
              <AssName fromlineno="500" tolineno="500" lineno="500" name="wanted_sum"/>
              <Subscript fromlineno="500" tolineno="500" lineno="500">
                <Getattr fromlineno="500" tolineno="500" lineno="500" attrname="parm" expr="ud">
                  <Name fromlineno="500" tolineno="500" lineno="500" name="ud"/>
                </Getattr>
                <Index fromlineno="500" tolineno="500" lineno="None">
                  <Const fromlineno="500" tolineno="500" lineno="500" type="str">'md5sum'</Const>
                </Index>
              </Subscript>
            </Assign>
          </If>
          <If fromlineno="501" tolineno="502" lineno="501">
            <UnaryOp fromlineno="501" tolineno="501" lineno="501">
              <Name fromlineno="501" tolineno="501" lineno="501" name="wanted_sum"/>
            </UnaryOp>
            <Return fromlineno="502" tolineno="502" lineno="502">
              <Const fromlineno="502" tolineno="502" lineno="502" type="bool">True</Const>
            </Return>
          </If>
          <Return fromlineno="504" tolineno="504" lineno="504">
            <Compare fromlineno="504" tolineno="504" lineno="504" op="('==', &lt;Name(got_sum) l.504 [bb.fetch] at Ox9e06f4c&gt;)">
              <Name fromlineno="504" tolineno="504" lineno="504" name="wanted_sum"/>
              <Name fromlineno="504" tolineno="504" lineno="504" name="got_sum"/>
            </Compare>
          </Return>
        </Function>
        <Assign fromlineno="505" tolineno="505" lineno="505" targets="[&lt;AssName(verify_md5sum) l.505 [bb.fetch] at Ox9e06f8c&gt;]" value="staticmethod(verify_md5sum)">
          <AssName fromlineno="505" tolineno="505" lineno="505" name="verify_md5sum"/>
          <CallFunc fromlineno="505" tolineno="505" lineno="505" func="Name(staticmethod)">
            <Name fromlineno="505" tolineno="505" lineno="505" name="staticmethod"/>
            <Name fromlineno="505" tolineno="505" lineno="505" name="verify_md5sum"/>
          </CallFunc>
        </Assign>
        <Function fromlineno="507" tolineno="515" lineno="507">
          <Arguments fromlineno="507" tolineno="507" lineno="None" format_args="url, ud, d">
            <AssName fromlineno="507" tolineno="507" lineno="507" name="url"/>
            <AssName fromlineno="507" tolineno="507" lineno="507" name="ud"/>
            <AssName fromlineno="507" tolineno="507" lineno="507" name="d"/>
          </Arguments>
          <Assign fromlineno="508" tolineno="508" lineno="508" targets="[&lt;AssName(md5data) l.508 [bb.fetch] at Ox9e0924c&gt;]" value="bb.utils.md5_file(ud.localpath)">
            <AssName fromlineno="508" tolineno="508" lineno="508" name="md5data"/>
            <CallFunc fromlineno="508" tolineno="508" lineno="508" func="Getattr(md5_file)">
              <Getattr fromlineno="508" tolineno="508" lineno="508" attrname="md5_file" expr="bb.utils">
                <Getattr fromlineno="508" tolineno="508" lineno="508" attrname="utils" expr="bb">
                  <Name fromlineno="508" tolineno="508" lineno="508" name="bb"/>
                </Getattr>
              </Getattr>
              <Getattr fromlineno="508" tolineno="508" lineno="508" attrname="localpath" expr="ud">
                <Name fromlineno="508" tolineno="508" lineno="508" name="ud"/>
              </Getattr>
            </CallFunc>
          </Assign>
          <If fromlineno="510" tolineno="511" lineno="510">
            <UnaryOp fromlineno="510" tolineno="510" lineno="510">
              <CallFunc fromlineno="510" tolineno="510" lineno="510" func="Getattr(verify_md5sum)">
                <Getattr fromlineno="510" tolineno="510" lineno="510" attrname="verify_md5sum" expr="Fetch">
                  <Name fromlineno="510" tolineno="510" lineno="510" name="Fetch"/>
                </Getattr>
                <Name fromlineno="510" tolineno="510" lineno="510" name="ud"/>
                <Name fromlineno="510" tolineno="510" lineno="510" name="md5data"/>
              </CallFunc>
            </UnaryOp>
            <Raise fromlineno="511" tolineno="511" lineno="511">
              <CallFunc fromlineno="511" tolineno="511" lineno="511" func="Name(MD5SumError)">
                <Name fromlineno="511" tolineno="511" lineno="511" name="MD5SumError"/>
                <Name fromlineno="511" tolineno="511" lineno="511" name="url"/>
              </CallFunc>
            </Raise>
          </If>
          <Assign fromlineno="513" tolineno="513" lineno="513" targets="[&lt;AssName(md5out) l.513 [bb.fetch] at Ox9e0958c&gt;]" value="file(ud.md5, 'w')">
            <AssName fromlineno="513" tolineno="513" lineno="513" name="md5out"/>
            <CallFunc fromlineno="513" tolineno="513" lineno="513" func="Name(file)">
              <Name fromlineno="513" tolineno="513" lineno="513" name="file"/>
              <Getattr fromlineno="513" tolineno="513" lineno="513" attrname="md5" expr="ud">
                <Name fromlineno="513" tolineno="513" lineno="513" name="ud"/>
              </Getattr>
              <Const fromlineno="513" tolineno="513" lineno="513" type="str">'w'</Const>
            </CallFunc>
          </Assign>
          <Discard fromlineno="514" tolineno="514" lineno="514">
            <CallFunc fromlineno="514" tolineno="514" lineno="514" func="Getattr(write)">
              <Getattr fromlineno="514" tolineno="514" lineno="514" attrname="write" expr="md5out">
                <Name fromlineno="514" tolineno="514" lineno="514" name="md5out"/>
              </Getattr>
              <Name fromlineno="514" tolineno="514" lineno="514" name="md5data"/>
            </CallFunc>
          </Discard>
          <Discard fromlineno="515" tolineno="515" lineno="515">
            <CallFunc fromlineno="515" tolineno="515" lineno="515" func="Getattr(close)">
              <Getattr fromlineno="515" tolineno="515" lineno="515" attrname="close" expr="md5out">
                <Name fromlineno="515" tolineno="515" lineno="515" name="md5out"/>
              </Getattr>
            </CallFunc>
          </Discard>
        </Function>
        <Assign fromlineno="516" tolineno="516" lineno="516" targets="[&lt;AssName(write_md5sum) l.516 [bb.fetch] at Ox9e0980c&gt;]" value="staticmethod(write_md5sum)">
          <AssName fromlineno="516" tolineno="516" lineno="516" name="write_md5sum"/>
          <CallFunc fromlineno="516" tolineno="516" lineno="516" func="Name(staticmethod)">
            <Name fromlineno="516" tolineno="516" lineno="516" name="staticmethod"/>
            <Name fromlineno="516" tolineno="516" lineno="516" name="write_md5sum"/>
          </CallFunc>
        </Assign>
        <Function fromlineno="518" tolineno="533" lineno="518">
          <Arguments fromlineno="518" tolineno="518" lineno="None" format_args="self, url, ud, d">
            <AssName fromlineno="518" tolineno="518" lineno="518" name="self"/>
            <AssName fromlineno="518" tolineno="518" lineno="518" name="url"/>
            <AssName fromlineno="518" tolineno="518" lineno="518" name="ud"/>
            <AssName fromlineno="518" tolineno="518" lineno="518" name="d"/>
          </Arguments>
          <If fromlineno="522" tolineno="523" lineno="522">
            <UnaryOp fromlineno="522" tolineno="522" lineno="522">
              <CallFunc fromlineno="522" tolineno="522" lineno="522" func="Name(hasattr)">
                <Name fromlineno="522" tolineno="522" lineno="522" name="hasattr"/>
                <Name fromlineno="522" tolineno="522" lineno="522" name="self"/>
                <Const fromlineno="522" tolineno="522" lineno="522" type="str">'_latest_revision'</Const>
              </CallFunc>
            </UnaryOp>
            <Raise fromlineno="523" tolineno="523" lineno="523">
              <Name fromlineno="523" tolineno="523" lineno="523" name="ParameterError"/>
            </Raise>
          </If>
          <Assign fromlineno="525" tolineno="525" lineno="525" targets="[&lt;AssName(pd) l.525 [bb.fetch] at Ox9e09c0c&gt;]" value="persist_data.PersistData(d)">
            <AssName fromlineno="525" tolineno="525" lineno="525" name="pd"/>
            <CallFunc fromlineno="525" tolineno="525" lineno="525" func="Getattr(PersistData)">
              <Getattr fromlineno="525" tolineno="525" lineno="525" attrname="PersistData" expr="persist_data">
                <Name fromlineno="525" tolineno="525" lineno="525" name="persist_data"/>
              </Getattr>
              <Name fromlineno="525" tolineno="525" lineno="525" name="d"/>
            </CallFunc>
          </Assign>
          <Assign fromlineno="526" tolineno="526" lineno="526" targets="[&lt;AssName(key) l.526 [bb.fetch] at Ox9e09d2c&gt;]" value="self.generate_revision_key(url, ud, d)">
            <AssName fromlineno="526" tolineno="526" lineno="526" name="key"/>
            <CallFunc fromlineno="526" tolineno="526" lineno="526" func="Getattr(generate_revision_key)">
              <Getattr fromlineno="526" tolineno="526" lineno="526" attrname="generate_revision_key" expr="self">
                <Name fromlineno="526" tolineno="526" lineno="526" name="self"/>
              </Getattr>
              <Name fromlineno="526" tolineno="526" lineno="526" name="url"/>
              <Name fromlineno="526" tolineno="526" lineno="526" name="ud"/>
              <Name fromlineno="526" tolineno="526" lineno="526" name="d"/>
            </CallFunc>
          </Assign>
          <Assign fromlineno="527" tolineno="527" lineno="527" targets="[&lt;AssName(rev) l.527 [bb.fetch] at Ox9e09e8c&gt;]" value="pd.getValue('BB_URI_HEADREVS', key)">
            <AssName fromlineno="527" tolineno="527" lineno="527" name="rev"/>
            <CallFunc fromlineno="527" tolineno="527" lineno="527" func="Getattr(getValue)">
              <Getattr fromlineno="527" tolineno="527" lineno="527" attrname="getValue" expr="pd">
                <Name fromlineno="527" tolineno="527" lineno="527" name="pd"/>
              </Getattr>
              <Const fromlineno="527" tolineno="527" lineno="527" type="str">'BB_URI_HEADREVS'</Const>
              <Name fromlineno="527" tolineno="527" lineno="527" name="key"/>
            </CallFunc>
          </Assign>
          <If fromlineno="528" tolineno="529" lineno="528">
            <Compare fromlineno="528" tolineno="528" lineno="528" op="('!=', &lt;Const(NoneType) l.528 [bb.fetch] at Ox9e0d04c&gt;)">
              <Name fromlineno="528" tolineno="528" lineno="528" name="rev"/>
              <Const fromlineno="528" tolineno="528" lineno="528" type="NoneType">None</Const>
            </Compare>
            <Return fromlineno="529" tolineno="529" lineno="529">
              <CallFunc fromlineno="529" tolineno="529" lineno="529" func="Name(str)">
                <Name fromlineno="529" tolineno="529" lineno="529" name="str"/>
                <Name fromlineno="529" tolineno="529" lineno="529" name="rev"/>
              </CallFunc>
            </Return>
          </If>
          <Assign fromlineno="531" tolineno="531" lineno="531" targets="[&lt;AssName(rev) l.531 [bb.fetch] at Ox9e0d18c&gt;]" value="self._latest_revision(url, ud, d)">
            <AssName fromlineno="531" tolineno="531" lineno="531" name="rev"/>
            <CallFunc fromlineno="531" tolineno="531" lineno="531" func="Getattr(_latest_revision)">
              <Getattr fromlineno="531" tolineno="531" lineno="531" attrname="_latest_revision" expr="self">
                <Name fromlineno="531" tolineno="531" lineno="531" name="self"/>
              </Getattr>
              <Name fromlineno="531" tolineno="531" lineno="531" name="url"/>
              <Name fromlineno="531" tolineno="531" lineno="531" name="ud"/>
              <Name fromlineno="531" tolineno="531" lineno="531" name="d"/>
            </CallFunc>
          </Assign>
          <Discard fromlineno="532" tolineno="532" lineno="532">
            <CallFunc fromlineno="532" tolineno="532" lineno="532" func="Getattr(setValue)">
              <Getattr fromlineno="532" tolineno="532" lineno="532" attrname="setValue" expr="pd">
                <Name fromlineno="532" tolineno="532" lineno="532" name="pd"/>
              </Getattr>
              <Const fromlineno="532" tolineno="532" lineno="532" type="str">'BB_URI_HEADREVS'</Const>
              <Name fromlineno="532" tolineno="532" lineno="532" name="key"/>
              <Name fromlineno="532" tolineno="532" lineno="532" name="rev"/>
            </CallFunc>
          </Discard>
          <Return fromlineno="533" tolineno="533" lineno="533">
            <Name fromlineno="533" tolineno="533" lineno="533" name="rev"/>
          </Return>
        </Function>
        <Function fromlineno="535" tolineno="566" lineno="535">
          <Arguments fromlineno="535" tolineno="535" lineno="None" format_args="self, url, ud, d">
            <AssName fromlineno="535" tolineno="535" lineno="535" name="self"/>
            <AssName fromlineno="535" tolineno="535" lineno="535" name="url"/>
            <AssName fromlineno="535" tolineno="535" lineno="535" name="ud"/>
            <AssName fromlineno="535" tolineno="535" lineno="535" name="d"/>
          </Arguments>
          <Assign fromlineno="539" tolineno="539" lineno="539" targets="[&lt;AssName(has_want_sortable) l.539 [bb.fetch] at Ox9e0d58c&gt;]" value="hasattr(self, '_want_sortable_revision')">
            <AssName fromlineno="539" tolineno="539" lineno="539" name="has_want_sortable"/>
            <CallFunc fromlineno="539" tolineno="539" lineno="539" func="Name(hasattr)">
              <Name fromlineno="539" tolineno="539" lineno="539" name="hasattr"/>
              <Name fromlineno="539" tolineno="539" lineno="539" name="self"/>
              <Const fromlineno="539" tolineno="539" lineno="539" type="str">'_want_sortable_revision'</Const>
            </CallFunc>
          </Assign>
          <Assign fromlineno="540" tolineno="540" lineno="540" targets="[&lt;AssName(has_sortable) l.540 [bb.fetch] at Ox9e0d6ac&gt;]" value="hasattr(self, '_sortable_revision')">
            <AssName fromlineno="540" tolineno="540" lineno="540" name="has_sortable"/>
            <CallFunc fromlineno="540" tolineno="540" lineno="540" func="Name(hasattr)">
              <Name fromlineno="540" tolineno="540" lineno="540" name="hasattr"/>
              <Name fromlineno="540" tolineno="540" lineno="540" name="self"/>
              <Const fromlineno="540" tolineno="540" lineno="540" type="str">'_sortable_revision'</Const>
            </CallFunc>
          </Assign>
          <If fromlineno="542" tolineno="545" lineno="542">
            <BoolOp fromlineno="542" tolineno="542" lineno="542" op="and" values="not has_want_sortable,has_sortable,">
              <UnaryOp fromlineno="542" tolineno="542" lineno="542">
                <Name fromlineno="542" tolineno="542" lineno="542" name="has_want_sortable"/>
              </UnaryOp>
              <Name fromlineno="542" tolineno="542" lineno="542" name="has_sortable"/>
            </BoolOp>
            <Return fromlineno="543" tolineno="543" lineno="543">
              <CallFunc fromlineno="543" tolineno="543" lineno="543" func="Getattr(_sortable_revision)">
                <Getattr fromlineno="543" tolineno="543" lineno="543" attrname="_sortable_revision" expr="self">
                  <Name fromlineno="543" tolineno="543" lineno="543" name="self"/>
                </Getattr>
                <Name fromlineno="543" tolineno="543" lineno="543" name="url"/>
                <Name fromlineno="543" tolineno="543" lineno="543" name="ud"/>
                <Name fromlineno="543" tolineno="543" lineno="543" name="d"/>
              </CallFunc>
            </Return>
            <If fromlineno="544" tolineno="545" lineno="544">
              <BoolOp fromlineno="544" tolineno="544" lineno="544" op="and" values="has_want_sortable,self._want_sortable_revision(url, ud, d),has_sortable,">
                <Name fromlineno="544" tolineno="544" lineno="544" name="has_want_sortable"/>
                <CallFunc fromlineno="544" tolineno="544" lineno="544" func="Getattr(_want_sortable_revision)">
                  <Getattr fromlineno="544" tolineno="544" lineno="544" attrname="_want_sortable_revision" expr="self">
                    <Name fromlineno="544" tolineno="544" lineno="544" name="self"/>
                  </Getattr>
                  <Name fromlineno="544" tolineno="544" lineno="544" name="url"/>
                  <Name fromlineno="544" tolineno="544" lineno="544" name="ud"/>
                  <Name fromlineno="544" tolineno="544" lineno="544" name="d"/>
                </CallFunc>
                <Name fromlineno="544" tolineno="544" lineno="544" name="has_sortable"/>
              </BoolOp>
              <Return fromlineno="545" tolineno="545" lineno="545">
                <CallFunc fromlineno="545" tolineno="545" lineno="545" func="Getattr(_sortable_revision)">
                  <Getattr fromlineno="545" tolineno="545" lineno="545" attrname="_sortable_revision" expr="self">
                    <Name fromlineno="545" tolineno="545" lineno="545" name="self"/>
                  </Getattr>
                  <Name fromlineno="545" tolineno="545" lineno="545" name="url"/>
                  <Name fromlineno="545" tolineno="545" lineno="545" name="ud"/>
                  <Name fromlineno="545" tolineno="545" lineno="545" name="d"/>
                </CallFunc>
              </Return>
            </If>
          </If>
          <Assign fromlineno="548" tolineno="548" lineno="548" targets="[&lt;AssName(pd) l.548 [bb.fetch] at Ox9e0dc8c&gt;]" value="persist_data.PersistData(d)">
            <AssName fromlineno="548" tolineno="548" lineno="548" name="pd"/>
            <CallFunc fromlineno="548" tolineno="548" lineno="548" func="Getattr(PersistData)">
              <Getattr fromlineno="548" tolineno="548" lineno="548" attrname="PersistData" expr="persist_data">
                <Name fromlineno="548" tolineno="548" lineno="548" name="persist_data"/>
              </Getattr>
              <Name fromlineno="548" tolineno="548" lineno="548" name="d"/>
            </CallFunc>
          </Assign>
          <Assign fromlineno="549" tolineno="549" lineno="549" targets="[&lt;AssName(key) l.549 [bb.fetch] at Ox9e0ddac&gt;]" value="self.generate_revision_key(url, ud, d)">
            <AssName fromlineno="549" tolineno="549" lineno="549" name="key"/>
            <CallFunc fromlineno="549" tolineno="549" lineno="549" func="Getattr(generate_revision_key)">
              <Getattr fromlineno="549" tolineno="549" lineno="549" attrname="generate_revision_key" expr="self">
                <Name fromlineno="549" tolineno="549" lineno="549" name="self"/>
              </Getattr>
              <Name fromlineno="549" tolineno="549" lineno="549" name="url"/>
              <Name fromlineno="549" tolineno="549" lineno="549" name="ud"/>
              <Name fromlineno="549" tolineno="549" lineno="549" name="d"/>
            </CallFunc>
          </Assign>
          <Assign fromlineno="551" tolineno="551" lineno="551" targets="[&lt;AssName(latest_rev) l.551 [bb.fetch] at Ox9e0df0c&gt;]" value="self._build_revision(url, ud, d)">
            <AssName fromlineno="551" tolineno="551" lineno="551" name="latest_rev"/>
            <CallFunc fromlineno="551" tolineno="551" lineno="551" func="Getattr(_build_revision)">
              <Getattr fromlineno="551" tolineno="551" lineno="551" attrname="_build_revision" expr="self">
                <Name fromlineno="551" tolineno="551" lineno="551" name="self"/>
              </Getattr>
              <Name fromlineno="551" tolineno="551" lineno="551" name="url"/>
              <Name fromlineno="551" tolineno="551" lineno="551" name="ud"/>
              <Name fromlineno="551" tolineno="551" lineno="551" name="d"/>
            </CallFunc>
          </Assign>
          <Assign fromlineno="552" tolineno="552" lineno="552" targets="[&lt;AssName(last_rev) l.552 [bb.fetch] at Ox9e1208c&gt;]" value="pd.getValue('BB_URI_LOCALCOUNT', (key) + ('_rev'))">
            <AssName fromlineno="552" tolineno="552" lineno="552" name="last_rev"/>
            <CallFunc fromlineno="552" tolineno="552" lineno="552" func="Getattr(getValue)">
              <Getattr fromlineno="552" tolineno="552" lineno="552" attrname="getValue" expr="pd">
                <Name fromlineno="552" tolineno="552" lineno="552" name="pd"/>
              </Getattr>
              <Const fromlineno="552" tolineno="552" lineno="552" type="str">'BB_URI_LOCALCOUNT'</Const>
              <BinOp fromlineno="552" tolineno="552" lineno="552" op="+" left="key" right="'_rev'">
                <Name fromlineno="552" tolineno="552" lineno="552" name="key"/>
                <Const fromlineno="552" tolineno="552" lineno="552" type="str">'_rev'</Const>
              </BinOp>
            </CallFunc>
          </Assign>
          <Assign fromlineno="553" tolineno="553" lineno="553" targets="[&lt;AssName(count) l.553 [bb.fetch] at Ox9e1220c&gt;]" value="pd.getValue('BB_URI_LOCALCOUNT', (key) + ('_count'))">
            <AssName fromlineno="553" tolineno="553" lineno="553" name="count"/>
            <CallFunc fromlineno="553" tolineno="553" lineno="553" func="Getattr(getValue)">
              <Getattr fromlineno="553" tolineno="553" lineno="553" attrname="getValue" expr="pd">
                <Name fromlineno="553" tolineno="553" lineno="553" name="pd"/>
              </Getattr>
              <Const fromlineno="553" tolineno="553" lineno="553" type="str">'BB_URI_LOCALCOUNT'</Const>
              <BinOp fromlineno="553" tolineno="553" lineno="553" op="+" left="key" right="'_count'">
                <Name fromlineno="553" tolineno="553" lineno="553" name="key"/>
                <Const fromlineno="553" tolineno="553" lineno="553" type="str">'_count'</Const>
              </BinOp>
            </CallFunc>
          </Assign>
          <If fromlineno="555" tolineno="556" lineno="555">
            <Compare fromlineno="555" tolineno="555" lineno="555" op="('==', &lt;Name(latest_rev) l.555 [bb.fetch] at Ox9e123ec&gt;)">
              <Name fromlineno="555" tolineno="555" lineno="555" name="last_rev"/>
              <Name fromlineno="555" tolineno="555" lineno="555" name="latest_rev"/>
            </Compare>
            <Return fromlineno="556" tolineno="556" lineno="556">
              <CallFunc fromlineno="556" tolineno="556" lineno="556" func="Name(str)">
                <Name fromlineno="556" tolineno="556" lineno="556" name="str"/>
                <BinOp fromlineno="556" tolineno="556" lineno="556" op="+" left="(count) + ('+')" right="latest_rev">
                  <BinOp fromlineno="556" tolineno="556" lineno="556" op="+" left="count" right="'+'">
                    <Name fromlineno="556" tolineno="556" lineno="556" name="count"/>
                    <Const fromlineno="556" tolineno="556" lineno="556" type="str">'+'</Const>
                  </BinOp>
                  <Name fromlineno="556" tolineno="556" lineno="556" name="latest_rev"/>
                </BinOp>
              </CallFunc>
            </Return>
          </If>
          <If fromlineno="558" tolineno="561" lineno="558">
            <Compare fromlineno="558" tolineno="558" lineno="558" op="('is', &lt;Const(NoneType) l.558 [bb.fetch] at Ox9e1260c&gt;)">
              <Name fromlineno="558" tolineno="558" lineno="558" name="count"/>
              <Const fromlineno="558" tolineno="558" lineno="558" type="NoneType">None</Const>
            </Compare>
            <Assign fromlineno="559" tolineno="559" lineno="559" targets="[&lt;AssName(count) l.559 [bb.fetch] at Ox9e126ac&gt;]" value="'0'">
              <AssName fromlineno="559" tolineno="559" lineno="559" name="count"/>
              <Const fromlineno="559" tolineno="559" lineno="559" type="str">'0'</Const>
            </Assign>
            <Assign fromlineno="561" tolineno="561" lineno="561" targets="[&lt;AssName(count) l.561 [bb.fetch] at Ox9e1274c&gt;]" value="str((int(count)) + (1))">
              <AssName fromlineno="561" tolineno="561" lineno="561" name="count"/>
              <CallFunc fromlineno="561" tolineno="561" lineno="561" func="Name(str)">
                <Name fromlineno="561" tolineno="561" lineno="561" name="str"/>
                <BinOp fromlineno="561" tolineno="561" lineno="561" op="+" left="int(count)" right="1">
                  <CallFunc fromlineno="561" tolineno="561" lineno="561" func="Name(int)">
                    <Name fromlineno="561" tolineno="561" lineno="561" name="int"/>
                    <Name fromlineno="561" tolineno="561" lineno="561" name="count"/>
                  </CallFunc>
                  <Const fromlineno="561" tolineno="561" lineno="561" type="int">1</Const>
                </BinOp>
              </CallFunc>
            </Assign>
          </If>
          <Discard fromlineno="563" tolineno="563" lineno="563">
            <CallFunc fromlineno="563" tolineno="563" lineno="563" func="Getattr(setValue)">
              <Getattr fromlineno="563" tolineno="563" lineno="563" attrname="setValue" expr="pd">
                <Name fromlineno="563" tolineno="563" lineno="563" name="pd"/>
              </Getattr>
              <Const fromlineno="563" tolineno="563" lineno="563" type="str">'BB_URI_LOCALCOUNT'</Const>
              <BinOp fromlineno="563" tolineno="563" lineno="563" op="+" left="key" right="'_rev'">
                <Name fromlineno="563" tolineno="563" lineno="563" name="key"/>
                <Const fromlineno="563" tolineno="563" lineno="563" type="str">'_rev'</Const>
              </BinOp>
              <Name fromlineno="563" tolineno="563" lineno="563" name="latest_rev"/>
            </CallFunc>
          </Discard>
          <Discard fromlineno="564" tolineno="564" lineno="564">
            <CallFunc fromlineno="564" tolineno="564" lineno="564" func="Getattr(setValue)">
              <Getattr fromlineno="564" tolineno="564" lineno="564" attrname="setValue" expr="pd">
                <Name fromlineno="564" tolineno="564" lineno="564" name="pd"/>
              </Getattr>
              <Const fromlineno="564" tolineno="564" lineno="564" type="str">'BB_URI_LOCALCOUNT'</Const>
              <BinOp fromlineno="564" tolineno="564" lineno="564" op="+" left="key" right="'_count'">
                <Name fromlineno="564" tolineno="564" lineno="564" name="key"/>
                <Const fromlineno="564" tolineno="564" lineno="564" type="str">'_count'</Const>
              </BinOp>
              <Name fromlineno="564" tolineno="564" lineno="564" name="count"/>
            </CallFunc>
          </Discard>
          <Return fromlineno="566" tolineno="566" lineno="566">
            <CallFunc fromlineno="566" tolineno="566" lineno="566" func="Name(str)">
              <Name fromlineno="566" tolineno="566" lineno="566" name="str"/>
              <BinOp fromlineno="566" tolineno="566" lineno="566" op="+" left="(count) + ('+')" right="latest_rev">
                <BinOp fromlineno="566" tolineno="566" lineno="566" op="+" left="count" right="'+'">
                  <Name fromlineno="566" tolineno="566" lineno="566" name="count"/>
                  <Const fromlineno="566" tolineno="566" lineno="566" type="str">'+'</Const>
                </BinOp>
                <Name fromlineno="566" tolineno="566" lineno="566" name="latest_rev"/>
              </BinOp>
            </CallFunc>
          </Return>
        </Function>
        <Function fromlineno="568" tolineno="570" lineno="568">
          <Arguments fromlineno="568" tolineno="568" lineno="None" format_args="self, url, ud, d">
            <AssName fromlineno="568" tolineno="568" lineno="568" name="self"/>
            <AssName fromlineno="568" tolineno="568" lineno="568" name="url"/>
            <AssName fromlineno="568" tolineno="568" lineno="568" name="ud"/>
            <AssName fromlineno="568" tolineno="568" lineno="568" name="d"/>
          </Arguments>
          <Assign fromlineno="569" tolineno="569" lineno="569" targets="[&lt;AssName(key) l.569 [bb.fetch] at Ox9e12e0c&gt;]" value="self._revision_key(url, ud, d)">
            <AssName fromlineno="569" tolineno="569" lineno="569" name="key"/>
            <CallFunc fromlineno="569" tolineno="569" lineno="569" func="Getattr(_revision_key)">
              <Getattr fromlineno="569" tolineno="569" lineno="569" attrname="_revision_key" expr="self">
                <Name fromlineno="569" tolineno="569" lineno="569" name="self"/>
              </Getattr>
              <Name fromlineno="569" tolineno="569" lineno="569" name="url"/>
              <Name fromlineno="569" tolineno="569" lineno="569" name="ud"/>
              <Name fromlineno="569" tolineno="569" lineno="569" name="d"/>
            </CallFunc>
          </Assign>
          <Return fromlineno="570" tolineno="570" lineno="570">
            <BinOp fromlineno="570" tolineno="570" lineno="570" op="%" left="'%s-%s'" right="(key, (bb.data.getVar('PN', d, True)) or (''))">
              <Const fromlineno="570" tolineno="570" lineno="570" type="str">'%s-%s'</Const>
              <Tuple fromlineno="570" tolineno="570" lineno="570">
                <Name fromlineno="570" tolineno="570" lineno="570" name="key"/>
                <BoolOp fromlineno="570" tolineno="570" lineno="570" op="or" values="bb.data.getVar('PN', d, True),'',">
                  <CallFunc fromlineno="570" tolineno="570" lineno="570" func="Getattr(getVar)">
                    <Getattr fromlineno="570" tolineno="570" lineno="570" attrname="getVar" expr="bb.data">
                      <Getattr fromlineno="570" tolineno="570" lineno="570" attrname="data" expr="bb">
                        <Name fromlineno="570" tolineno="570" lineno="570" name="bb"/>
                      </Getattr>
                    </Getattr>
                    <Const fromlineno="570" tolineno="570" lineno="570" type="str">'PN'</Const>
                    <Name fromlineno="570" tolineno="570" lineno="570" name="d"/>
                    <Const fromlineno="570" tolineno="570" lineno="570" type="bool">True</Const>
                  </CallFunc>
                  <Const fromlineno="570" tolineno="570" lineno="570" type="str">''</Const>
                </BoolOp>
              </Tuple>
            </BinOp>
          </Return>
        </Function>
      </Class>
      <Import fromlineno="572" tolineno="572" lineno="572">
        <ImportName name="cvs"/>
      </Import>
      <Import fromlineno="573" tolineno="573" lineno="573">
        <ImportName name="git"/>
      </Import>
      <Import fromlineno="574" tolineno="574" lineno="574">
        <ImportName name="local"/>
      </Import>
      <Import fromlineno="575" tolineno="575" lineno="575">
        <ImportName name="svn"/>
      </Import>
      <Import fromlineno="576" tolineno="576" lineno="576">
        <ImportName name="wget"/>
      </Import>
      <Import fromlineno="577" tolineno="577" lineno="577">
        <ImportName name="svk"/>
      </Import>
      <Import fromlineno="578" tolineno="578" lineno="578">
        <ImportName name="ssh"/>
      </Import>
      <Import fromlineno="579" tolineno="579" lineno="579">
        <ImportName name="perforce"/>
      </Import>
      <Import fromlineno="580" tolineno="580" lineno="580">
        <ImportName name="bzr"/>
      </Import>
      <Import fromlineno="581" tolineno="581" lineno="581">
        <ImportName name="hg"/>
      </Import>
      <Import fromlineno="582" tolineno="582" lineno="582">
        <ImportName name="osc"/>
      </Import>
      <Discard fromlineno="584" tolineno="584" lineno="584">
        <CallFunc fromlineno="584" tolineno="584" lineno="584" func="Getattr(append)">
          <Getattr fromlineno="584" tolineno="584" lineno="584" attrname="append" expr="methods">
            <Name fromlineno="584" tolineno="584" lineno="584" name="methods"/>
          </Getattr>
          <CallFunc fromlineno="584" tolineno="584" lineno="584" func="Getattr(Local)">
            <Getattr fromlineno="584" tolineno="584" lineno="584" attrname="Local" expr="local">
              <Name fromlineno="584" tolineno="584" lineno="584" name="local"/>
            </Getattr>
          </CallFunc>
        </CallFunc>
      </Discard>
      <Discard fromlineno="585" tolineno="585" lineno="585">
        <CallFunc fromlineno="585" tolineno="585" lineno="585" func="Getattr(append)">
          <Getattr fromlineno="585" tolineno="585" lineno="585" attrname="append" expr="methods">
            <Name fromlineno="585" tolineno="585" lineno="585" name="methods"/>
          </Getattr>
          <CallFunc fromlineno="585" tolineno="585" lineno="585" func="Getattr(Wget)">
            <Getattr fromlineno="585" tolineno="585" lineno="585" attrname="Wget" expr="wget">
              <Name fromlineno="585" tolineno="585" lineno="585" name="wget"/>
            </Getattr>
          </CallFunc>
        </CallFunc>
      </Discard>
      <Discard fromlineno="586" tolineno="586" lineno="586">
        <CallFunc fromlineno="586" tolineno="586" lineno="586" func="Getattr(append)">
          <Getattr fromlineno="586" tolineno="586" lineno="586" attrname="append" expr="methods">
            <Name fromlineno="586" tolineno="586" lineno="586" name="methods"/>
          </Getattr>
          <CallFunc fromlineno="586" tolineno="586" lineno="586" func="Getattr(Svn)">
            <Getattr fromlineno="586" tolineno="586" lineno="586" attrname="Svn" expr="svn">
              <Name fromlineno="586" tolineno="586" lineno="586" name="svn"/>
            </Getattr>
          </CallFunc>
        </CallFunc>
      </Discard>
      <Discard fromlineno="587" tolineno="587" lineno="587">
        <CallFunc fromlineno="587" tolineno="587" lineno="587" func="Getattr(append)">
          <Getattr fromlineno="587" tolineno="587" lineno="587" attrname="append" expr="methods">
            <Name fromlineno="587" tolineno="587" lineno="587" name="methods"/>
          </Getattr>
          <CallFunc fromlineno="587" tolineno="587" lineno="587" func="Getattr(Git)">
            <Getattr fromlineno="587" tolineno="587" lineno="587" attrname="Git" expr="git">
              <Name fromlineno="587" tolineno="587" lineno="587" name="git"/>
            </Getattr>
          </CallFunc>
        </CallFunc>
      </Discard>
      <Discard fromlineno="588" tolineno="588" lineno="588">
        <CallFunc fromlineno="588" tolineno="588" lineno="588" func="Getattr(append)">
          <Getattr fromlineno="588" tolineno="588" lineno="588" attrname="append" expr="methods">
            <Name fromlineno="588" tolineno="588" lineno="588" name="methods"/>
          </Getattr>
          <CallFunc fromlineno="588" tolineno="588" lineno="588" func="Getattr(Cvs)">
            <Getattr fromlineno="588" tolineno="588" lineno="588" attrname="Cvs" expr="cvs">
              <Name fromlineno="588" tolineno="588" lineno="588" name="cvs"/>
            </Getattr>
          </CallFunc>
        </CallFunc>
      </Discard>
      <Discard fromlineno="589" tolineno="589" lineno="589">
        <CallFunc fromlineno="589" tolineno="589" lineno="589" func="Getattr(append)">
          <Getattr fromlineno="589" tolineno="589" lineno="589" attrname="append" expr="methods">
            <Name fromlineno="589" tolineno="589" lineno="589" name="methods"/>
          </Getattr>
          <CallFunc fromlineno="589" tolineno="589" lineno="589" func="Getattr(Svk)">
            <Getattr fromlineno="589" tolineno="589" lineno="589" attrname="Svk" expr="svk">
              <Name fromlineno="589" tolineno="589" lineno="589" name="svk"/>
            </Getattr>
          </CallFunc>
        </CallFunc>
      </Discard>
      <Discard fromlineno="590" tolineno="590" lineno="590">
        <CallFunc fromlineno="590" tolineno="590" lineno="590" func="Getattr(append)">
          <Getattr fromlineno="590" tolineno="590" lineno="590" attrname="append" expr="methods">
            <Name fromlineno="590" tolineno="590" lineno="590" name="methods"/>
          </Getattr>
          <CallFunc fromlineno="590" tolineno="590" lineno="590" func="Getattr(SSH)">
            <Getattr fromlineno="590" tolineno="590" lineno="590" attrname="SSH" expr="ssh">
              <Name fromlineno="590" tolineno="590" lineno="590" name="ssh"/>
            </Getattr>
          </CallFunc>
        </CallFunc>
      </Discard>
      <Discard fromlineno="591" tolineno="591" lineno="591">
        <CallFunc fromlineno="591" tolineno="591" lineno="591" func="Getattr(append)">
          <Getattr fromlineno="591" tolineno="591" lineno="591" attrname="append" expr="methods">
            <Name fromlineno="591" tolineno="591" lineno="591" name="methods"/>
          </Getattr>
          <CallFunc fromlineno="591" tolineno="591" lineno="591" func="Getattr(Perforce)">
            <Getattr fromlineno="591" tolineno="591" lineno="591" attrname="Perforce" expr="perforce">
              <Name fromlineno="591" tolineno="591" lineno="591" name="perforce"/>
            </Getattr>
          </CallFunc>
        </CallFunc>
      </Discard>
      <Discard fromlineno="592" tolineno="592" lineno="592">
        <CallFunc fromlineno="592" tolineno="592" lineno="592" func="Getattr(append)">
          <Getattr fromlineno="592" tolineno="592" lineno="592" attrname="append" expr="methods">
            <Name fromlineno="592" tolineno="592" lineno="592" name="methods"/>
          </Getattr>
          <CallFunc fromlineno="592" tolineno="592" lineno="592" func="Getattr(Bzr)">
            <Getattr fromlineno="592" tolineno="592" lineno="592" attrname="Bzr" expr="bzr">
              <Name fromlineno="592" tolineno="592" lineno="592" name="bzr"/>
            </Getattr>
          </CallFunc>
        </CallFunc>
      </Discard>
      <Discard fromlineno="593" tolineno="593" lineno="593">
        <CallFunc fromlineno="593" tolineno="593" lineno="593" func="Getattr(append)">
          <Getattr fromlineno="593" tolineno="593" lineno="593" attrname="append" expr="methods">
            <Name fromlineno="593" tolineno="593" lineno="593" name="methods"/>
          </Getattr>
          <CallFunc fromlineno="593" tolineno="593" lineno="593" func="Getattr(Hg)">
            <Getattr fromlineno="593" tolineno="593" lineno="593" attrname="Hg" expr="hg">
              <Name fromlineno="593" tolineno="593" lineno="593" name="hg"/>
            </Getattr>
          </CallFunc>
        </CallFunc>
      </Discard>
      <Discard fromlineno="594" tolineno="594" lineno="594">
        <CallFunc fromlineno="594" tolineno="594" lineno="594" func="Getattr(append)">
          <Getattr fromlineno="594" tolineno="594" lineno="594" attrname="append" expr="methods">
            <Name fromlineno="594" tolineno="594" lineno="594" name="methods"/>
          </Getattr>
          <CallFunc fromlineno="594" tolineno="594" lineno="594" func="Getattr(Osc)">
            <Getattr fromlineno="594" tolineno="594" lineno="594" attrname="Osc" expr="osc">
              <Name fromlineno="594" tolineno="594" lineno="594" name="osc"/>
            </Getattr>
          </CallFunc>
        </CallFunc>
      </Discard>
    </Module>
    <Module fromlineno="0" tolineno="120" lineno="0" name="bb.fetch.ssh">
      <Import fromlineno="39" tolineno="39" lineno="39">
        <ImportName name="re"/>
        <ImportName name="os"/>
      </Import>
      <Import fromlineno="40" tolineno="40" lineno="40">
        <ImportName name="bb"/>
      </Import>
      <From fromlineno="41" tolineno="41" lineno="41" modname="bb">
        <ImportName name="data"/>
      </From>
      <From fromlineno="42" tolineno="42" lineno="42" modname="bb.fetch">
        <ImportName name="Fetch"/>
      </From>
      <From fromlineno="43" tolineno="43" lineno="43" modname="bb.fetch">
        <ImportName name="FetchError"/>
      </From>
      <From fromlineno="44" tolineno="44" lineno="44" modname="bb.fetch">
        <ImportName name="MissingParameterError"/>
      </From>
      <Assign fromlineno="47" tolineno="64" lineno="47" targets="[&lt;AssName(__pattern__) l.47 [bb.fetch.ssh] at Ox9ae0f4c&gt;]" value="re.compile(&quot;\n \\s*                 # Skip leading whitespace\n ssh://              # scheme\n (                   # Optional username/password block\n  (?P&lt;user&gt;\\S+)      # username\n  (:(?P&lt;pass&gt;\\S+))?  # colon followed by the password (optional)\n )?\n (?P&lt;cparam&gt;(;[^;]+)*)?  # connection parameters block (optional)\n @\n (?P&lt;host&gt;\\S+?)          # non-greedy match of the host\n (:(?P&lt;port&gt;[0-9]+))?    # colon followed by the port (optional)\n /\n (?P&lt;path&gt;[^;]+)         # path on the remote system, may be absolute or relative,\n                         # and may include the use of '~' to reference the remote home\n                         # directory\n (?P&lt;sparam&gt;(;[^;]+)*)?  # parameters block (optional)\n $\n&quot;, re.VERBOSE)">
        <AssName fromlineno="47" tolineno="47" lineno="47" name="__pattern__"/>
        <CallFunc fromlineno="47" tolineno="64" lineno="47" func="Getattr(compile)">
          <Getattr fromlineno="47" tolineno="47" lineno="47" attrname="compile" expr="re">
            <Name fromlineno="47" tolineno="47" lineno="47" name="re"/>
          </Getattr>
          <Const fromlineno="64" tolineno="64" lineno="64" type="str">"\n \\s*                 # Skip leading whitespace\n ssh://              # scheme\n (                   # Optional username/password block\n  (?P&lt;user&gt;\\S+)      # username\n  (:(?P&lt;pass&gt;\\S+))?  # colon followed by the password (optional)\n )?\n (?P&lt;cparam&gt;(;[^;]+)*)?  # connection parameters block (optional)\n @\n (?P&lt;host&gt;\\S+?)          # non-greedy match of the host\n (:(?P&lt;port&gt;[0-9]+))?    # colon followed by the port (optional)\n /\n (?P&lt;path&gt;[^;]+)         # path on the remote system, may be absolute or relative,\n                         # and may include the use of '~' to reference the remote home\n                         # directory\n (?P&lt;sparam&gt;(;[^;]+)*)?  # parameters block (optional)\n $\n"</Const>
          <Getattr fromlineno="64" tolineno="64" lineno="64" attrname="VERBOSE" expr="re">
            <Name fromlineno="64" tolineno="64" lineno="64" name="re"/>
          </Getattr>
        </CallFunc>
      </Assign>
      <Class fromlineno="66" tolineno="120" lineno="66">
        <Name fromlineno="66" tolineno="66" lineno="66" name="Fetch"/>
        <Function fromlineno="69" tolineno="70" lineno="69">
          <Arguments fromlineno="69" tolineno="69" lineno="None" format_args="self, url, urldata, d">
            <AssName fromlineno="69" tolineno="69" lineno="69" name="self"/>
            <AssName fromlineno="69" tolineno="69" lineno="69" name="url"/>
            <AssName fromlineno="69" tolineno="69" lineno="69" name="urldata"/>
            <AssName fromlineno="69" tolineno="69" lineno="69" name="d"/>
          </Arguments>
          <Return fromlineno="70" tolineno="70" lineno="70">
            <Compare fromlineno="70" tolineno="70" lineno="70" op="('!=', &lt;Const(NoneType) l.70 [bb.fetch.ssh] at Ox9a3d2cc&gt;)">
              <CallFunc fromlineno="70" tolineno="70" lineno="70" func="Getattr(match)">
                <Getattr fromlineno="70" tolineno="70" lineno="70" attrname="match" expr="__pattern__">
                  <Name fromlineno="70" tolineno="70" lineno="70" name="__pattern__"/>
                </Getattr>
                <Name fromlineno="70" tolineno="70" lineno="70" name="url"/>
              </CallFunc>
              <Const fromlineno="70" tolineno="70" lineno="70" type="NoneType">None</Const>
            </Compare>
          </Return>
        </Function>
        <Function fromlineno="72" tolineno="77" lineno="72">
          <Arguments fromlineno="72" tolineno="72" lineno="None" format_args="self, url, urldata, d">
            <AssName fromlineno="72" tolineno="72" lineno="72" name="self"/>
            <AssName fromlineno="72" tolineno="72" lineno="72" name="url"/>
            <AssName fromlineno="72" tolineno="72" lineno="72" name="urldata"/>
            <AssName fromlineno="72" tolineno="72" lineno="72" name="d"/>
          </Arguments>
          <Assign fromlineno="73" tolineno="73" lineno="73" targets="[&lt;AssName(m) l.73 [bb.fetch.ssh] at Ox9a3d1ac&gt;]" value="__pattern__.match(url)">
            <AssName fromlineno="73" tolineno="73" lineno="73" name="m"/>
            <CallFunc fromlineno="73" tolineno="73" lineno="73" func="Getattr(match)">
              <Getattr fromlineno="73" tolineno="73" lineno="73" attrname="match" expr="__pattern__">
                <Name fromlineno="73" tolineno="73" lineno="73" name="__pattern__"/>
              </Getattr>
              <Name fromlineno="73" tolineno="73" lineno="73" name="url"/>
            </CallFunc>
          </Assign>
          <Assign fromlineno="74" tolineno="74" lineno="74" targets="[&lt;AssName(path) l.74 [bb.fetch.ssh] at Ox9a3d04c&gt;]" value="m.group('path')">
            <AssName fromlineno="74" tolineno="74" lineno="74" name="path"/>
            <CallFunc fromlineno="74" tolineno="74" lineno="74" func="Getattr(group)">
              <Getattr fromlineno="74" tolineno="74" lineno="74" attrname="group" expr="m">
                <Name fromlineno="74" tolineno="74" lineno="74" name="m"/>
              </Getattr>
              <Const fromlineno="74" tolineno="74" lineno="74" type="str">'path'</Const>
            </CallFunc>
          </Assign>
          <Assign fromlineno="75" tolineno="75" lineno="75" targets="[&lt;AssName(host) l.75 [bb.fetch.ssh] at Ox9a3da8c&gt;]" value="m.group('host')">
            <AssName fromlineno="75" tolineno="75" lineno="75" name="host"/>
            <CallFunc fromlineno="75" tolineno="75" lineno="75" func="Getattr(group)">
              <Getattr fromlineno="75" tolineno="75" lineno="75" attrname="group" expr="m">
                <Name fromlineno="75" tolineno="75" lineno="75" name="m"/>
              </Getattr>
              <Const fromlineno="75" tolineno="75" lineno="75" type="str">'host'</Const>
            </CallFunc>
          </Assign>
          <Assign fromlineno="76" tolineno="76" lineno="76" targets="[&lt;AssName(lpath) l.76 [bb.fetch.ssh] at Ox9a3de4c&gt;]" value="os.path.join(data.getVar('DL_DIR', d, True), host, os.path.basename(path))">
            <AssName fromlineno="76" tolineno="76" lineno="76" name="lpath"/>
            <CallFunc fromlineno="76" tolineno="76" lineno="76" func="Getattr(join)">
              <Getattr fromlineno="76" tolineno="76" lineno="76" attrname="join" expr="os.path">
                <Getattr fromlineno="76" tolineno="76" lineno="76" attrname="path" expr="os">
                  <Name fromlineno="76" tolineno="76" lineno="76" name="os"/>
                </Getattr>
              </Getattr>
              <CallFunc fromlineno="76" tolineno="76" lineno="76" func="Getattr(getVar)">
                <Getattr fromlineno="76" tolineno="76" lineno="76" attrname="getVar" expr="data">
                  <Name fromlineno="76" tolineno="76" lineno="76" name="data"/>
                </Getattr>
                <Const fromlineno="76" tolineno="76" lineno="76" type="str">'DL_DIR'</Const>
                <Name fromlineno="76" tolineno="76" lineno="76" name="d"/>
                <Const fromlineno="76" tolineno="76" lineno="76" type="bool">True</Const>
              </CallFunc>
              <Name fromlineno="76" tolineno="76" lineno="76" name="host"/>
              <CallFunc fromlineno="76" tolineno="76" lineno="76" func="Getattr(basename)">
                <Getattr fromlineno="76" tolineno="76" lineno="76" attrname="basename" expr="os.path">
                  <Getattr fromlineno="76" tolineno="76" lineno="76" attrname="path" expr="os">
                    <Name fromlineno="76" tolineno="76" lineno="76" name="os"/>
                  </Getattr>
                </Getattr>
                <Name fromlineno="76" tolineno="76" lineno="76" name="path"/>
              </CallFunc>
            </CallFunc>
          </Assign>
          <Return fromlineno="77" tolineno="77" lineno="77">
            <Name fromlineno="77" tolineno="77" lineno="77" name="lpath"/>
          </Return>
        </Function>
        <Function fromlineno="79" tolineno="120" lineno="79">
          <Arguments fromlineno="79" tolineno="79" lineno="None" format_args="self, url, urldata, d">
            <AssName fromlineno="79" tolineno="79" lineno="79" name="self"/>
            <AssName fromlineno="79" tolineno="79" lineno="79" name="url"/>
            <AssName fromlineno="79" tolineno="79" lineno="79" name="urldata"/>
            <AssName fromlineno="79" tolineno="79" lineno="79" name="d"/>
          </Arguments>
          <Assign fromlineno="80" tolineno="80" lineno="80" targets="[&lt;AssName(dldir) l.80 [bb.fetch.ssh] at Ox9a3dccc&gt;]" value="data.getVar('DL_DIR', d, 1)">
            <AssName fromlineno="80" tolineno="80" lineno="80" name="dldir"/>
            <CallFunc fromlineno="80" tolineno="80" lineno="80" func="Getattr(getVar)">
              <Getattr fromlineno="80" tolineno="80" lineno="80" attrname="getVar" expr="data">
                <Name fromlineno="80" tolineno="80" lineno="80" name="data"/>
              </Getattr>
              <Const fromlineno="80" tolineno="80" lineno="80" type="str">'DL_DIR'</Const>
              <Name fromlineno="80" tolineno="80" lineno="80" name="d"/>
              <Const fromlineno="80" tolineno="80" lineno="80" type="int">1</Const>
            </CallFunc>
          </Assign>
          <Assign fromlineno="82" tolineno="82" lineno="82" targets="[&lt;AssName(m) l.82 [bb.fetch.ssh] at Ox9ce9e2c&gt;]" value="__pattern__.match(url)">
            <AssName fromlineno="82" tolineno="82" lineno="82" name="m"/>
            <CallFunc fromlineno="82" tolineno="82" lineno="82" func="Getattr(match)">
              <Getattr fromlineno="82" tolineno="82" lineno="82" attrname="match" expr="__pattern__">
                <Name fromlineno="82" tolineno="82" lineno="82" name="__pattern__"/>
              </Getattr>
              <Name fromlineno="82" tolineno="82" lineno="82" name="url"/>
            </CallFunc>
          </Assign>
          <Assign fromlineno="83" tolineno="83" lineno="83" targets="[&lt;AssName(path) l.83 [bb.fetch.ssh] at Ox9ce94ec&gt;]" value="m.group('path')">
            <AssName fromlineno="83" tolineno="83" lineno="83" name="path"/>
            <CallFunc fromlineno="83" tolineno="83" lineno="83" func="Getattr(group)">
              <Getattr fromlineno="83" tolineno="83" lineno="83" attrname="group" expr="m">
                <Name fromlineno="83" tolineno="83" lineno="83" name="m"/>
              </Getattr>
              <Const fromlineno="83" tolineno="83" lineno="83" type="str">'path'</Const>
            </CallFunc>
          </Assign>
          <Assign fromlineno="84" tolineno="84" lineno="84" targets="[&lt;AssName(host) l.84 [bb.fetch.ssh] at Ox9a421cc&gt;]" value="m.group('host')">
            <AssName fromlineno="84" tolineno="84" lineno="84" name="host"/>
            <CallFunc fromlineno="84" tolineno="84" lineno="84" func="Getattr(group)">
              <Getattr fromlineno="84" tolineno="84" lineno="84" attrname="group" expr="m">
                <Name fromlineno="84" tolineno="84" lineno="84" name="m"/>
              </Getattr>
              <Const fromlineno="84" tolineno="84" lineno="84" type="str">'host'</Const>
            </CallFunc>
          </Assign>
          <Assign fromlineno="85" tolineno="85" lineno="85" targets="[&lt;AssName(port) l.85 [bb.fetch.ssh] at Ox9a4252c&gt;]" value="m.group('port')">
            <AssName fromlineno="85" tolineno="85" lineno="85" name="port"/>
            <CallFunc fromlineno="85" tolineno="85" lineno="85" func="Getattr(group)">
              <Getattr fromlineno="85" tolineno="85" lineno="85" attrname="group" expr="m">
                <Name fromlineno="85" tolineno="85" lineno="85" name="m"/>
              </Getattr>
              <Const fromlineno="85" tolineno="85" lineno="85" type="str">'port'</Const>
            </CallFunc>
          </Assign>
          <Assign fromlineno="86" tolineno="86" lineno="86" targets="[&lt;AssName(user) l.86 [bb.fetch.ssh] at Ox9a427cc&gt;]" value="m.group('user')">
            <AssName fromlineno="86" tolineno="86" lineno="86" name="user"/>
            <CallFunc fromlineno="86" tolineno="86" lineno="86" func="Getattr(group)">
              <Getattr fromlineno="86" tolineno="86" lineno="86" attrname="group" expr="m">
                <Name fromlineno="86" tolineno="86" lineno="86" name="m"/>
              </Getattr>
              <Const fromlineno="86" tolineno="86" lineno="86" type="str">'user'</Const>
            </CallFunc>
          </Assign>
          <Assign fromlineno="87" tolineno="87" lineno="87" targets="[&lt;AssName(password) l.87 [bb.fetch.ssh] at Ox9a426ac&gt;]" value="m.group('pass')">
            <AssName fromlineno="87" tolineno="87" lineno="87" name="password"/>
            <CallFunc fromlineno="87" tolineno="87" lineno="87" func="Getattr(group)">
              <Getattr fromlineno="87" tolineno="87" lineno="87" attrname="group" expr="m">
                <Name fromlineno="87" tolineno="87" lineno="87" name="m"/>
              </Getattr>
              <Const fromlineno="87" tolineno="87" lineno="87" type="str">'pass'</Const>
            </CallFunc>
          </Assign>
          <Assign fromlineno="89" tolineno="89" lineno="89" targets="[&lt;AssName(ldir) l.89 [bb.fetch.ssh] at Ox9a4236c&gt;]" value="os.path.join(dldir, host)">
            <AssName fromlineno="89" tolineno="89" lineno="89" name="ldir"/>
            <CallFunc fromlineno="89" tolineno="89" lineno="89" func="Getattr(join)">
              <Getattr fromlineno="89" tolineno="89" lineno="89" attrname="join" expr="os.path">
                <Getattr fromlineno="89" tolineno="89" lineno="89" attrname="path" expr="os">
                  <Name fromlineno="89" tolineno="89" lineno="89" name="os"/>
                </Getattr>
              </Getattr>
              <Name fromlineno="89" tolineno="89" lineno="89" name="dldir"/>
              <Name fromlineno="89" tolineno="89" lineno="89" name="host"/>
            </CallFunc>
          </Assign>
          <Assign fromlineno="90" tolineno="90" lineno="90" targets="[&lt;AssName(lpath) l.90 [bb.fetch.ssh] at Ox9a4246c&gt;]" value="os.path.join(ldir, os.path.basename(path))">
            <AssName fromlineno="90" tolineno="90" lineno="90" name="lpath"/>
            <CallFunc fromlineno="90" tolineno="90" lineno="90" func="Getattr(join)">
              <Getattr fromlineno="90" tolineno="90" lineno="90" attrname="join" expr="os.path">
                <Getattr fromlineno="90" tolineno="90" lineno="90" attrname="path" expr="os">
                  <Name fromlineno="90" tolineno="90" lineno="90" name="os"/>
                </Getattr>
              </Getattr>
              <Name fromlineno="90" tolineno="90" lineno="90" name="ldir"/>
              <CallFunc fromlineno="90" tolineno="90" lineno="90" func="Getattr(basename)">
                <Getattr fromlineno="90" tolineno="90" lineno="90" attrname="basename" expr="os.path">
                  <Getattr fromlineno="90" tolineno="90" lineno="90" attrname="path" expr="os">
                    <Name fromlineno="90" tolineno="90" lineno="90" name="os"/>
                  </Getattr>
                </Getattr>
                <Name fromlineno="90" tolineno="90" lineno="90" name="path"/>
              </CallFunc>
            </CallFunc>
          </Assign>
          <If fromlineno="92" tolineno="93" lineno="92">
            <UnaryOp fromlineno="92" tolineno="92" lineno="92">
              <CallFunc fromlineno="92" tolineno="92" lineno="92" func="Getattr(exists)">
                <Getattr fromlineno="92" tolineno="92" lineno="92" attrname="exists" expr="os.path">
                  <Getattr fromlineno="92" tolineno="92" lineno="92" attrname="path" expr="os">
                    <Name fromlineno="92" tolineno="92" lineno="92" name="os"/>
                  </Getattr>
                </Getattr>
                <Name fromlineno="92" tolineno="92" lineno="92" name="ldir"/>
              </CallFunc>
            </UnaryOp>
            <Discard fromlineno="93" tolineno="93" lineno="93">
              <CallFunc fromlineno="93" tolineno="93" lineno="93" func="Getattr(makedirs)">
                <Getattr fromlineno="93" tolineno="93" lineno="93" attrname="makedirs" expr="os">
                  <Name fromlineno="93" tolineno="93" lineno="93" name="os"/>
                </Getattr>
                <Name fromlineno="93" tolineno="93" lineno="93" name="ldir"/>
              </CallFunc>
            </Discard>
          </If>
          <If fromlineno="95" tolineno="98" lineno="95">
            <Name fromlineno="95" tolineno="95" lineno="95" name="port"/>
            <Assign fromlineno="96" tolineno="96" lineno="96" targets="[&lt;AssName(port) l.96 [bb.fetch.ssh] at Ox9a42cac&gt;]" value="('-P %s') % (port)">
              <AssName fromlineno="96" tolineno="96" lineno="96" name="port"/>
              <BinOp fromlineno="96" tolineno="96" lineno="96" op="%" left="'-P %s'" right="port">
                <Const fromlineno="96" tolineno="96" lineno="96" type="str">'-P %s'</Const>
                <Name fromlineno="96" tolineno="96" lineno="96" name="port"/>
              </BinOp>
            </Assign>
            <Assign fromlineno="98" tolineno="98" lineno="98" targets="[&lt;AssName(port) l.98 [bb.fetch.ssh] at Ox9a42bcc&gt;]" value="''">
              <AssName fromlineno="98" tolineno="98" lineno="98" name="port"/>
              <Const fromlineno="98" tolineno="98" lineno="98" type="str">''</Const>
            </Assign>
          </If>
          <If fromlineno="100" tolineno="106" lineno="100">
            <Name fromlineno="100" tolineno="100" lineno="100" name="user"/>
            <Assign fromlineno="101" tolineno="101" lineno="101" targets="[&lt;AssName(fr) l.101 [bb.fetch.ssh] at Ox9a42f0c&gt;]" value="user">
              <AssName fromlineno="101" tolineno="101" lineno="101" name="fr"/>
              <Name fromlineno="101" tolineno="101" lineno="101" name="user"/>
            </Assign>
            <If fromlineno="102" tolineno="103" lineno="102">
              <Name fromlineno="102" tolineno="102" lineno="102" name="password"/>
              <AugAssign fromlineno="103" tolineno="103" lineno="103" target="fr" value="(':%s') % (password)">
                <AssName fromlineno="103" tolineno="103" lineno="103" name="fr"/>
                <BinOp fromlineno="103" tolineno="103" lineno="103" op="%" left="':%s'" right="password">
                  <Const fromlineno="103" tolineno="103" lineno="103" type="str">':%s'</Const>
                  <Name fromlineno="103" tolineno="103" lineno="103" name="password"/>
                </BinOp>
              </AugAssign>
            </If>
            <AugAssign fromlineno="104" tolineno="104" lineno="104" target="fr" value="('@%s') % (host)">
              <AssName fromlineno="104" tolineno="104" lineno="104" name="fr"/>
              <BinOp fromlineno="104" tolineno="104" lineno="104" op="%" left="'@%s'" right="host">
                <Const fromlineno="104" tolineno="104" lineno="104" type="str">'@%s'</Const>
                <Name fromlineno="104" tolineno="104" lineno="104" name="host"/>
              </BinOp>
            </AugAssign>
            <Assign fromlineno="106" tolineno="106" lineno="106" targets="[&lt;AssName(fr) l.106 [bb.fetch.ssh] at Ox9c0720c&gt;]" value="host">
              <AssName fromlineno="106" tolineno="106" lineno="106" name="fr"/>
              <Name fromlineno="106" tolineno="106" lineno="106" name="host"/>
            </Assign>
          </If>
          <AugAssign fromlineno="107" tolineno="107" lineno="107" target="fr" value="(':%s') % (path)">
            <AssName fromlineno="107" tolineno="107" lineno="107" name="fr"/>
            <BinOp fromlineno="107" tolineno="107" lineno="107" op="%" left="':%s'" right="path">
              <Const fromlineno="107" tolineno="107" lineno="107" type="str">':%s'</Const>
              <Name fromlineno="107" tolineno="107" lineno="107" name="path"/>
            </BinOp>
          </AugAssign>
          <Import fromlineno="110" tolineno="110" lineno="110">
            <ImportName name="commands"/>
          </Import>
          <Assign fromlineno="111" tolineno="114" lineno="111" targets="[&lt;AssName(cmd) l.111 [bb.fetch.ssh] at Ox9af02ac&gt;]" value="('scp -B -r %s %s %s/') % ((port, commands.mkarg(fr), commands.mkarg(ldir)))">
            <AssName fromlineno="111" tolineno="111" lineno="111" name="cmd"/>
            <BinOp fromlineno="111" tolineno="114" lineno="111" op="%" left="'scp -B -r %s %s %s/'" right="(port, commands.mkarg(fr), commands.mkarg(ldir))">
              <Const fromlineno="111" tolineno="111" lineno="111" type="str">'scp -B -r %s %s %s/'</Const>
              <Tuple fromlineno="112" tolineno="114" lineno="112">
                <Name fromlineno="112" tolineno="112" lineno="112" name="port"/>
                <CallFunc fromlineno="113" tolineno="113" lineno="113" func="Getattr(mkarg)">
                  <Getattr fromlineno="113" tolineno="113" lineno="113" attrname="mkarg" expr="commands">
                    <Name fromlineno="113" tolineno="113" lineno="113" name="commands"/>
                  </Getattr>
                  <Name fromlineno="113" tolineno="113" lineno="113" name="fr"/>
                </CallFunc>
                <CallFunc fromlineno="114" tolineno="114" lineno="114" func="Getattr(mkarg)">
                  <Getattr fromlineno="114" tolineno="114" lineno="114" attrname="mkarg" expr="commands">
                    <Name fromlineno="114" tolineno="114" lineno="114" name="commands"/>
                  </Getattr>
                  <Name fromlineno="114" tolineno="114" lineno="114" name="ldir"/>
                </CallFunc>
              </Tuple>
            </BinOp>
          </Assign>
          <Assign fromlineno="117" tolineno="117" lineno="117" targets="[&lt;Tuple(tuple) l.117 [bb.fetch.ssh] at Ox9af008c&gt;]" value="commands.getstatusoutput(cmd)">
            <Tuple fromlineno="117" tolineno="117" lineno="117">
              <AssName fromlineno="117" tolineno="117" lineno="117" name="exitstatus"/>
              <AssName fromlineno="117" tolineno="117" lineno="117" name="output"/>
            </Tuple>
            <CallFunc fromlineno="117" tolineno="117" lineno="117" func="Getattr(getstatusoutput)">
              <Getattr fromlineno="117" tolineno="117" lineno="117" attrname="getstatusoutput" expr="commands">
                <Name fromlineno="117" tolineno="117" lineno="117" name="commands"/>
              </Getattr>
              <Name fromlineno="117" tolineno="117" lineno="117" name="cmd"/>
            </CallFunc>
          </Assign>
          <If fromlineno="118" tolineno="120" lineno="118">
            <Compare fromlineno="118" tolineno="118" lineno="118" op="('!=', &lt;Const(int) l.118 [bb.fetch.ssh] at Ox9af07cc&gt;)">
              <Name fromlineno="118" tolineno="118" lineno="118" name="exitstatus"/>
              <Const fromlineno="118" tolineno="118" lineno="118" type="int">0</Const>
            </Compare>
            <Print fromlineno="119" tolineno="119" lineno="119">
              <Name fromlineno="119" tolineno="119" lineno="119" name="output"/>
            </Print>
            <Raise fromlineno="120" tolineno="120" lineno="120">
              <CallFunc fromlineno="120" tolineno="120" lineno="120" func="Name(FetchError)">
                <Name fromlineno="120" tolineno="120" lineno="120" name="FetchError"/>
                <BinOp fromlineno="120" tolineno="120" lineno="120" op="%" left="'Unable to fetch %s'" right="url">
                  <Const fromlineno="120" tolineno="120" lineno="120" type="str">'Unable to fetch %s'</Const>
                  <Name fromlineno="120" tolineno="120" lineno="120" name="url"/>
                </BinOp>
              </CallFunc>
            </Raise>
          </If>
        </Function>
      </Class>
    </Module>
    <Module fromlineno="0" tolineno="213" lineno="0" name="bb.fetch.perforce">
      <Import fromlineno="28" tolineno="28" lineno="28">
        <ImportName name="os"/>
        <ImportName name="re"/>
      </Import>
      <Import fromlineno="29" tolineno="29" lineno="29">
        <ImportName name="bb"/>
      </Import>
      <From fromlineno="30" tolineno="30" lineno="30" modname="bb">
        <ImportName name="data"/>
      </From>
      <From fromlineno="31" tolineno="31" lineno="31" modname="bb.fetch">
        <ImportName name="Fetch"/>
      </From>
      <From fromlineno="32" tolineno="32" lineno="32" modname="bb.fetch">
        <ImportName name="FetchError"/>
      </From>
      <From fromlineno="33" tolineno="33" lineno="33" modname="bb.fetch">
        <ImportName name="MissingParameterError"/>
      </From>
      <Class fromlineno="35" tolineno="213" lineno="35">
        <Name fromlineno="35" tolineno="35" lineno="35" name="Fetch"/>
        <Function fromlineno="36" tolineno="37" lineno="36">
          <Arguments fromlineno="36" tolineno="36" lineno="None" format_args="self, url, ud, d">
            <AssName fromlineno="36" tolineno="36" lineno="36" name="self"/>
            <AssName fromlineno="36" tolineno="36" lineno="36" name="url"/>
            <AssName fromlineno="36" tolineno="36" lineno="36" name="ud"/>
            <AssName fromlineno="36" tolineno="36" lineno="36" name="d"/>
          </Arguments>
          <Return fromlineno="37" tolineno="37" lineno="37">
            <Compare fromlineno="37" tolineno="37" lineno="37" op="('in', &lt;List(list) l.37 [bb.fetch.perforce] at Ox9c3c14c&gt;)">
              <Getattr fromlineno="37" tolineno="37" lineno="37" attrname="type" expr="ud">
                <Name fromlineno="37" tolineno="37" lineno="37" name="ud"/>
              </Getattr>
              <List fromlineno="37" tolineno="37" lineno="37">
                <Const fromlineno="37" tolineno="37" lineno="37" type="str">'p4'</Const>
              </List>
            </Compare>
          </Return>
        </Function>
        <Function fromlineno="39" tolineno="66" lineno="39">
          <Arguments fromlineno="39" tolineno="39" lineno="None" format_args="url, d">
            <AssName fromlineno="39" tolineno="39" lineno="39" name="url"/>
            <AssName fromlineno="39" tolineno="39" lineno="39" name="d"/>
          </Arguments>
          <Assign fromlineno="40" tolineno="40" lineno="40" targets="[&lt;AssName(parm) l.40 [bb.fetch.perforce] at Ox9c3c2ec&gt;]" value="{}">
            <AssName fromlineno="40" tolineno="40" lineno="40" name="parm"/>
            <Dict fromlineno="40" tolineno="40" lineno="40"/>
          </Assign>
          <Assign fromlineno="41" tolineno="41" lineno="41" targets="[&lt;AssName(path) l.41 [bb.fetch.perforce] at Ox9c3c3cc&gt;]" value="url.split('://')[1]">
            <AssName fromlineno="41" tolineno="41" lineno="41" name="path"/>
            <Subscript fromlineno="41" tolineno="41" lineno="41">
              <CallFunc fromlineno="41" tolineno="41" lineno="41" func="Getattr(split)">
                <Getattr fromlineno="41" tolineno="41" lineno="41" attrname="split" expr="url">
                  <Name fromlineno="41" tolineno="41" lineno="41" name="url"/>
                </Getattr>
                <Const fromlineno="41" tolineno="41" lineno="41" type="str">'://'</Const>
              </CallFunc>
              <Index fromlineno="41" tolineno="41" lineno="None">
                <Const fromlineno="41" tolineno="41" lineno="41" type="int">1</Const>
              </Index>
            </Subscript>
          </Assign>
          <Assign fromlineno="42" tolineno="42" lineno="42" targets="[&lt;AssName(delim) l.42 [bb.fetch.perforce] at Ox9c3ce2c&gt;]" value="path.find('@')">
            <AssName fromlineno="42" tolineno="42" lineno="42" name="delim"/>
            <CallFunc fromlineno="42" tolineno="42" lineno="42" func="Getattr(find)">
              <Getattr fromlineno="42" tolineno="42" lineno="42" attrname="find" expr="path">
                <Name fromlineno="42" tolineno="42" lineno="42" name="path"/>
              </Getattr>
              <Const fromlineno="42" tolineno="42" lineno="42" type="str">'@'</Const>
            </CallFunc>
          </Assign>
          <If fromlineno="43" tolineno="49" lineno="43">
            <Compare fromlineno="43" tolineno="43" lineno="43" op="('!=', &lt;Const(int) l.43 [bb.fetch.perforce] at Ox9c3cdac&gt;)">
              <Name fromlineno="43" tolineno="43" lineno="43" name="delim"/>
              <Const fromlineno="43" tolineno="43" lineno="43" type="int">-1</Const>
            </Compare>
            <Assign fromlineno="44" tolineno="44" lineno="44" targets="[&lt;Tuple(tuple) l.44 [bb.fetch.perforce] at Ox9c3ce4c&gt;]" value="path.split('@')[0].split(':')">
              <Tuple fromlineno="44" tolineno="44" lineno="44">
                <AssName fromlineno="44" tolineno="44" lineno="44" name="user"/>
                <AssName fromlineno="44" tolineno="44" lineno="44" name="pswd"/>
                <AssName fromlineno="44" tolineno="44" lineno="44" name="host"/>
                <AssName fromlineno="44" tolineno="44" lineno="44" name="port"/>
              </Tuple>
              <CallFunc fromlineno="44" tolineno="44" lineno="44" func="Getattr(split)">
                <Getattr fromlineno="44" tolineno="44" lineno="44" attrname="split" expr="path.split('@')[0]">
                  <Subscript fromlineno="44" tolineno="44" lineno="44">
                    <CallFunc fromlineno="44" tolineno="44" lineno="44" func="Getattr(split)">
                      <Getattr fromlineno="44" tolineno="44" lineno="44" attrname="split" expr="path">
                        <Name fromlineno="44" tolineno="44" lineno="44" name="path"/>
                      </Getattr>
                      <Const fromlineno="44" tolineno="44" lineno="44" type="str">'@'</Const>
                    </CallFunc>
                    <Index fromlineno="44" tolineno="44" lineno="None">
                      <Const fromlineno="44" tolineno="44" lineno="44" type="int">0</Const>
                    </Index>
                  </Subscript>
                </Getattr>
                <Const fromlineno="44" tolineno="44" lineno="44" type="str">':'</Const>
              </CallFunc>
            </Assign>
            <Assign fromlineno="45" tolineno="45" lineno="45" targets="[&lt;AssName(path) l.45 [bb.fetch.perforce] at Ox9c3c7ac&gt;]" value="path.split('@')[1]">
              <AssName fromlineno="45" tolineno="45" lineno="45" name="path"/>
              <Subscript fromlineno="45" tolineno="45" lineno="45">
                <CallFunc fromlineno="45" tolineno="45" lineno="45" func="Getattr(split)">
                  <Getattr fromlineno="45" tolineno="45" lineno="45" attrname="split" expr="path">
                    <Name fromlineno="45" tolineno="45" lineno="45" name="path"/>
                  </Getattr>
                  <Const fromlineno="45" tolineno="45" lineno="45" type="str">'@'</Const>
                </CallFunc>
                <Index fromlineno="45" tolineno="45" lineno="None">
                  <Const fromlineno="45" tolineno="45" lineno="45" type="int">1</Const>
                </Index>
              </Subscript>
            </Assign>
            <Assign fromlineno="47" tolineno="47" lineno="47" targets="[&lt;Tuple(tuple) l.47 [bb.fetch.perforce] at Ox9c3ca0c&gt;]" value="data.getVar('P4PORT', d).split(':')">
              <Tuple fromlineno="47" tolineno="47" lineno="47">
                <AssName fromlineno="47" tolineno="47" lineno="47" name="host"/>
                <AssName fromlineno="47" tolineno="47" lineno="47" name="port"/>
              </Tuple>
              <CallFunc fromlineno="47" tolineno="47" lineno="47" func="Getattr(split)">
                <Getattr fromlineno="47" tolineno="47" lineno="47" attrname="split" expr="data.getVar('P4PORT', d)">
                  <CallFunc fromlineno="47" tolineno="47" lineno="47" func="Getattr(getVar)">
                    <Getattr fromlineno="47" tolineno="47" lineno="47" attrname="getVar" expr="data">
                      <Name fromlineno="47" tolineno="47" lineno="47" name="data"/>
                    </Getattr>
                    <Const fromlineno="47" tolineno="47" lineno="47" type="str">'P4PORT'</Const>
                    <Name fromlineno="47" tolineno="47" lineno="47" name="d"/>
                  </CallFunc>
                </Getattr>
                <Const fromlineno="47" tolineno="47" lineno="47" type="str">':'</Const>
              </CallFunc>
            </Assign>
            <Assign fromlineno="48" tolineno="48" lineno="48" targets="[&lt;AssName(user) l.48 [bb.fetch.perforce] at Ox9c3c6cc&gt;]" value="''">
              <AssName fromlineno="48" tolineno="48" lineno="48" name="user"/>
              <Const fromlineno="48" tolineno="48" lineno="48" type="str">''</Const>
            </Assign>
            <Assign fromlineno="49" tolineno="49" lineno="49" targets="[&lt;AssName(pswd) l.49 [bb.fetch.perforce] at Ox9ce1a4c&gt;]" value="''">
              <AssName fromlineno="49" tolineno="49" lineno="49" name="pswd"/>
              <Const fromlineno="49" tolineno="49" lineno="49" type="str">''</Const>
            </Assign>
          </If>
          <If fromlineno="51" tolineno="61" lineno="51">
            <Compare fromlineno="51" tolineno="51" lineno="51" op="('!=', &lt;Const(int) l.51 [bb.fetch.perforce] at Ox9b9508c&gt;)">
              <CallFunc fromlineno="51" tolineno="51" lineno="51" func="Getattr(find)">
                <Getattr fromlineno="51" tolineno="51" lineno="51" attrname="find" expr="path">
                  <Name fromlineno="51" tolineno="51" lineno="51" name="path"/>
                </Getattr>
                <Const fromlineno="51" tolineno="51" lineno="51" type="str">';'</Const>
              </CallFunc>
              <Const fromlineno="51" tolineno="51" lineno="51" type="int">-1</Const>
            </Compare>
            <Assign fromlineno="52" tolineno="52" lineno="52" targets="[&lt;AssName(keys) l.52 [bb.fetch.perforce] at Ox9b9532c&gt;]" value="[]">
              <AssName fromlineno="52" tolineno="52" lineno="52" name="keys"/>
              <List fromlineno="52" tolineno="52" lineno="52"/>
            </Assign>
            <Assign fromlineno="53" tolineno="53" lineno="53" targets="[&lt;AssName(values) l.53 [bb.fetch.perforce] at Ox9b9530c&gt;]" value="[]">
              <AssName fromlineno="53" tolineno="53" lineno="53" name="values"/>
              <List fromlineno="53" tolineno="53" lineno="53"/>
            </Assign>
            <Assign fromlineno="54" tolineno="54" lineno="54" targets="[&lt;AssName(plist) l.54 [bb.fetch.perforce] at Ox9b9554c&gt;]" value="path.split(';')">
              <AssName fromlineno="54" tolineno="54" lineno="54" name="plist"/>
              <CallFunc fromlineno="54" tolineno="54" lineno="54" func="Getattr(split)">
                <Getattr fromlineno="54" tolineno="54" lineno="54" attrname="split" expr="path">
                  <Name fromlineno="54" tolineno="54" lineno="54" name="path"/>
                </Getattr>
                <Const fromlineno="54" tolineno="54" lineno="54" type="str">';'</Const>
              </CallFunc>
            </Assign>
            <For fromlineno="55" tolineno="59" lineno="55">
              <AssName fromlineno="55" tolineno="55" lineno="55" name="item"/>
              <Name fromlineno="55" tolineno="55" lineno="55" name="plist"/>
              <If fromlineno="56" tolineno="59" lineno="56">
                <CallFunc fromlineno="56" tolineno="56" lineno="56" func="Getattr(count)">
                  <Getattr fromlineno="56" tolineno="56" lineno="56" attrname="count" expr="item">
                    <Name fromlineno="56" tolineno="56" lineno="56" name="item"/>
                  </Getattr>
                  <Const fromlineno="56" tolineno="56" lineno="56" type="str">'='</Const>
                </CallFunc>
                <Assign fromlineno="57" tolineno="57" lineno="57" targets="[&lt;Tuple(tuple) l.57 [bb.fetch.perforce] at Ox9b9576c&gt;]" value="item.split('=')">
                  <Tuple fromlineno="57" tolineno="57" lineno="57">
                    <AssName fromlineno="57" tolineno="57" lineno="57" name="key"/>
                    <AssName fromlineno="57" tolineno="57" lineno="57" name="value"/>
                  </Tuple>
                  <CallFunc fromlineno="57" tolineno="57" lineno="57" func="Getattr(split)">
                    <Getattr fromlineno="57" tolineno="57" lineno="57" attrname="split" expr="item">
                      <Name fromlineno="57" tolineno="57" lineno="57" name="item"/>
                    </Getattr>
                    <Const fromlineno="57" tolineno="57" lineno="57" type="str">'='</Const>
                  </CallFunc>
                </Assign>
                <Discard fromlineno="58" tolineno="58" lineno="58">
                  <CallFunc fromlineno="58" tolineno="58" lineno="58" func="Getattr(append)">
                    <Getattr fromlineno="58" tolineno="58" lineno="58" attrname="append" expr="keys">
                      <Name fromlineno="58" tolineno="58" lineno="58" name="keys"/>
                    </Getattr>
                    <Name fromlineno="58" tolineno="58" lineno="58" name="key"/>
                  </CallFunc>
                </Discard>
                <Discard fromlineno="59" tolineno="59" lineno="59">
                  <CallFunc fromlineno="59" tolineno="59" lineno="59" func="Getattr(append)">
                    <Getattr fromlineno="59" tolineno="59" lineno="59" attrname="append" expr="values">
                      <Name fromlineno="59" tolineno="59" lineno="59" name="values"/>
                    </Getattr>
                    <Name fromlineno="59" tolineno="59" lineno="59" name="value"/>
                  </CallFunc>
                </Discard>
              </If>
            </For>
            <Assign fromlineno="61" tolineno="61" lineno="61" targets="[&lt;AssName(parm) l.61 [bb.fetch.perforce] at Ox9b959cc&gt;]" value="dict(zip(keys, values))">
              <AssName fromlineno="61" tolineno="61" lineno="61" name="parm"/>
              <CallFunc fromlineno="61" tolineno="61" lineno="61" func="Name(dict)">
                <Name fromlineno="61" tolineno="61" lineno="61" name="dict"/>
                <CallFunc fromlineno="61" tolineno="61" lineno="61" func="Name(zip)">
                  <Name fromlineno="61" tolineno="61" lineno="61" name="zip"/>
                  <Name fromlineno="61" tolineno="61" lineno="61" name="keys"/>
                  <Name fromlineno="61" tolineno="61" lineno="61" name="values"/>
                </CallFunc>
              </CallFunc>
            </Assign>
          </If>
          <Assign fromlineno="62" tolineno="62" lineno="62" targets="[&lt;AssName(path) l.62 [bb.fetch.perforce] at Ox9b95c2c&gt;]" value="('//') + (path.split(';')[0])">
            <AssName fromlineno="62" tolineno="62" lineno="62" name="path"/>
            <BinOp fromlineno="62" tolineno="62" lineno="62" op="+" left="'//'" right="path.split(';')[0]">
              <Const fromlineno="62" tolineno="62" lineno="62" type="str">'//'</Const>
              <Subscript fromlineno="62" tolineno="62" lineno="62">
                <CallFunc fromlineno="62" tolineno="62" lineno="62" func="Getattr(split)">
                  <Getattr fromlineno="62" tolineno="62" lineno="62" attrname="split" expr="path">
                    <Name fromlineno="62" tolineno="62" lineno="62" name="path"/>
                  </Getattr>
                  <Const fromlineno="62" tolineno="62" lineno="62" type="str">';'</Const>
                </CallFunc>
                <Index fromlineno="62" tolineno="62" lineno="None">
                  <Const fromlineno="62" tolineno="62" lineno="62" type="int">0</Const>
                </Index>
              </Subscript>
            </BinOp>
          </Assign>
          <AugAssign fromlineno="63" tolineno="63" lineno="63" target="host" value="(':%s') % (port)">
            <AssName fromlineno="63" tolineno="63" lineno="63" name="host"/>
            <BinOp fromlineno="63" tolineno="63" lineno="63" op="%" left="':%s'" right="port">
              <Const fromlineno="63" tolineno="63" lineno="63" type="str">':%s'</Const>
              <Name fromlineno="63" tolineno="63" lineno="63" name="port"/>
            </BinOp>
          </AugAssign>
          <Assign fromlineno="64" tolineno="64" lineno="64" targets="[&lt;Subscript() l.64 [bb.fetch.perforce] at Ox9b95f4c&gt;]" value="Perforce.getcset(d, path, host, user, pswd, parm)">
            <Subscript fromlineno="64" tolineno="64" lineno="64">
              <Name fromlineno="64" tolineno="64" lineno="64" name="parm"/>
              <Index fromlineno="64" tolineno="64" lineno="None">
                <Const fromlineno="64" tolineno="64" lineno="64" type="str">'cset'</Const>
              </Index>
            </Subscript>
            <CallFunc fromlineno="64" tolineno="64" lineno="64" func="Getattr(getcset)">
              <Getattr fromlineno="64" tolineno="64" lineno="64" attrname="getcset" expr="Perforce">
                <Name fromlineno="64" tolineno="64" lineno="64" name="Perforce"/>
              </Getattr>
              <Name fromlineno="64" tolineno="64" lineno="64" name="d"/>
              <Name fromlineno="64" tolineno="64" lineno="64" name="path"/>
              <Name fromlineno="64" tolineno="64" lineno="64" name="host"/>
              <Name fromlineno="64" tolineno="64" lineno="64" name="user"/>
              <Name fromlineno="64" tolineno="64" lineno="64" name="pswd"/>
              <Name fromlineno="64" tolineno="64" lineno="64" name="parm"/>
            </CallFunc>
          </Assign>
          <Return fromlineno="66" tolineno="66" lineno="66">
            <Tuple fromlineno="66" tolineno="66" lineno="66">
              <Name fromlineno="66" tolineno="66" lineno="66" name="host"/>
              <Name fromlineno="66" tolineno="66" lineno="66" name="path"/>
              <Name fromlineno="66" tolineno="66" lineno="66" name="user"/>
              <Name fromlineno="66" tolineno="66" lineno="66" name="pswd"/>
              <Name fromlineno="66" tolineno="66" lineno="66" name="parm"/>
            </Tuple>
          </Return>
        </Function>
        <Assign fromlineno="67" tolineno="67" lineno="67" targets="[&lt;AssName(doparse) l.67 [bb.fetch.perforce] at Ox9b6b90c&gt;]" value="staticmethod(doparse)">
          <AssName fromlineno="67" tolineno="67" lineno="67" name="doparse"/>
          <CallFunc fromlineno="67" tolineno="67" lineno="67" func="Name(staticmethod)">
            <Name fromlineno="67" tolineno="67" lineno="67" name="staticmethod"/>
            <Name fromlineno="67" tolineno="67" lineno="67" name="doparse"/>
          </CallFunc>
        </Assign>
        <Function fromlineno="69" tolineno="96" lineno="69">
          <Arguments fromlineno="69" tolineno="69" lineno="None" format_args="d, depot, host, user, pswd, parm">
            <AssName fromlineno="69" tolineno="69" lineno="69" name="d"/>
            <AssName fromlineno="69" tolineno="69" lineno="69" name="depot"/>
            <AssName fromlineno="69" tolineno="69" lineno="69" name="host"/>
            <AssName fromlineno="69" tolineno="69" lineno="69" name="user"/>
            <AssName fromlineno="69" tolineno="69" lineno="69" name="pswd"/>
            <AssName fromlineno="69" tolineno="69" lineno="69" name="parm"/>
          </Arguments>
          <Assign fromlineno="70" tolineno="70" lineno="70" targets="[&lt;AssName(p4opt) l.70 [bb.fetch.perforce] at Ox9b6baec&gt;]" value="''">
            <AssName fromlineno="70" tolineno="70" lineno="70" name="p4opt"/>
            <Const fromlineno="70" tolineno="70" lineno="70" type="str">''</Const>
          </Assign>
          <If fromlineno="71" tolineno="72" lineno="71">
            <Compare fromlineno="71" tolineno="71" lineno="71" op="('in', &lt;Name(parm) l.71 [bb.fetch.perforce] at Ox9b6bdec&gt;)">
              <Const fromlineno="71" tolineno="71" lineno="71" type="str">'cset'</Const>
              <Name fromlineno="71" tolineno="71" lineno="71" name="parm"/>
            </Compare>
            <Return fromlineno="72" tolineno="72" lineno="72">
              <Subscript fromlineno="72" tolineno="72" lineno="72">
                <Name fromlineno="72" tolineno="72" lineno="72" name="parm"/>
                <Index fromlineno="72" tolineno="72" lineno="None">
                  <Const fromlineno="72" tolineno="72" lineno="72" type="str">'cset'</Const>
                </Index>
              </Subscript>
            </Return>
          </If>
          <If fromlineno="73" tolineno="74" lineno="73">
            <Name fromlineno="73" tolineno="73" lineno="73" name="user"/>
            <AugAssign fromlineno="74" tolineno="74" lineno="74" target="p4opt" value="(' -u %s') % (user)">
              <AssName fromlineno="74" tolineno="74" lineno="74" name="p4opt"/>
              <BinOp fromlineno="74" tolineno="74" lineno="74" op="%" left="' -u %s'" right="user">
                <Const fromlineno="74" tolineno="74" lineno="74" type="str">' -u %s'</Const>
                <Name fromlineno="74" tolineno="74" lineno="74" name="user"/>
              </BinOp>
            </AugAssign>
          </If>
          <If fromlineno="75" tolineno="76" lineno="75">
            <Name fromlineno="75" tolineno="75" lineno="75" name="pswd"/>
            <AugAssign fromlineno="76" tolineno="76" lineno="76" target="p4opt" value="(' -P %s') % (pswd)">
              <AssName fromlineno="76" tolineno="76" lineno="76" name="p4opt"/>
              <BinOp fromlineno="76" tolineno="76" lineno="76" op="%" left="' -P %s'" right="pswd">
                <Const fromlineno="76" tolineno="76" lineno="76" type="str">' -P %s'</Const>
                <Name fromlineno="76" tolineno="76" lineno="76" name="pswd"/>
              </BinOp>
            </AugAssign>
          </If>
          <If fromlineno="77" tolineno="78" lineno="77">
            <Name fromlineno="77" tolineno="77" lineno="77" name="host"/>
            <AugAssign fromlineno="78" tolineno="78" lineno="78" target="p4opt" value="(' -p %s') % (host)">
              <AssName fromlineno="78" tolineno="78" lineno="78" name="p4opt"/>
              <BinOp fromlineno="78" tolineno="78" lineno="78" op="%" left="' -p %s'" right="host">
                <Const fromlineno="78" tolineno="78" lineno="78" type="str">' -p %s'</Const>
                <Name fromlineno="78" tolineno="78" lineno="78" name="host"/>
              </BinOp>
            </AugAssign>
          </If>
          <Assign fromlineno="80" tolineno="80" lineno="80" targets="[&lt;AssName(p4date) l.80 [bb.fetch.perforce] at Ox9b6b3ac&gt;]" value="data.getVar('P4DATE', d, 1)">
            <AssName fromlineno="80" tolineno="80" lineno="80" name="p4date"/>
            <CallFunc fromlineno="80" tolineno="80" lineno="80" func="Getattr(getVar)">
              <Getattr fromlineno="80" tolineno="80" lineno="80" attrname="getVar" expr="data">
                <Name fromlineno="80" tolineno="80" lineno="80" name="data"/>
              </Getattr>
              <Const fromlineno="80" tolineno="80" lineno="80" type="str">'P4DATE'</Const>
              <Name fromlineno="80" tolineno="80" lineno="80" name="d"/>
              <Const fromlineno="80" tolineno="80" lineno="80" type="int">1</Const>
            </CallFunc>
          </Assign>
          <If fromlineno="81" tolineno="86" lineno="81">
            <Compare fromlineno="81" tolineno="81" lineno="81" op="('in', &lt;Name(parm) l.81 [bb.fetch.perforce] at Ox9b6b60c&gt;)">
              <Const fromlineno="81" tolineno="81" lineno="81" type="str">'revision'</Const>
              <Name fromlineno="81" tolineno="81" lineno="81" name="parm"/>
            </Compare>
            <AugAssign fromlineno="82" tolineno="82" lineno="82" target="depot" value="('#%s') % (parm['revision'])">
              <AssName fromlineno="82" tolineno="82" lineno="82" name="depot"/>
              <BinOp fromlineno="82" tolineno="82" lineno="82" op="%" left="'#%s'" right="parm['revision']">
                <Const fromlineno="82" tolineno="82" lineno="82" type="str">'#%s'</Const>
                <Subscript fromlineno="82" tolineno="82" lineno="82">
                  <Name fromlineno="82" tolineno="82" lineno="82" name="parm"/>
                  <Index fromlineno="82" tolineno="82" lineno="None">
                    <Const fromlineno="82" tolineno="82" lineno="82" type="str">'revision'</Const>
                  </Index>
                </Subscript>
              </BinOp>
            </AugAssign>
            <If fromlineno="83" tolineno="86" lineno="83">
              <Compare fromlineno="83" tolineno="83" lineno="83" op="('in', &lt;Name(parm) l.83 [bb.fetch.perforce] at Ox9b6bf6c&gt;)">
                <Const fromlineno="83" tolineno="83" lineno="83" type="str">'label'</Const>
                <Name fromlineno="83" tolineno="83" lineno="83" name="parm"/>
              </Compare>
              <AugAssign fromlineno="84" tolineno="84" lineno="84" target="depot" value="('@%s') % (parm['label'])">
                <AssName fromlineno="84" tolineno="84" lineno="84" name="depot"/>
                <BinOp fromlineno="84" tolineno="84" lineno="84" op="%" left="'@%s'" right="parm['label']">
                  <Const fromlineno="84" tolineno="84" lineno="84" type="str">'@%s'</Const>
                  <Subscript fromlineno="84" tolineno="84" lineno="84">
                    <Name fromlineno="84" tolineno="84" lineno="84" name="parm"/>
                    <Index fromlineno="84" tolineno="84" lineno="None">
                      <Const fromlineno="84" tolineno="84" lineno="84" type="str">'label'</Const>
                    </Index>
                  </Subscript>
                </BinOp>
              </AugAssign>
              <If fromlineno="85" tolineno="86" lineno="85">
                <Name fromlineno="85" tolineno="85" lineno="85" name="p4date"/>
                <AugAssign fromlineno="86" tolineno="86" lineno="86" target="depot" value="('@%s') % (p4date)">
                  <AssName fromlineno="86" tolineno="86" lineno="86" name="depot"/>
                  <BinOp fromlineno="86" tolineno="86" lineno="86" op="%" left="'@%s'" right="p4date">
                    <Const fromlineno="86" tolineno="86" lineno="86" type="str">'@%s'</Const>
                    <Name fromlineno="86" tolineno="86" lineno="86" name="p4date"/>
                  </BinOp>
                </AugAssign>
              </If>
            </If>
          </If>
          <Assign fromlineno="88" tolineno="88" lineno="88" targets="[&lt;AssName(p4cmd) l.88 [bb.fetch.perforce] at Ox9b6bf4c&gt;]" value="data.getVar('FETCHCOMMAND_p4', d, 1)">
            <AssName fromlineno="88" tolineno="88" lineno="88" name="p4cmd"/>
            <CallFunc fromlineno="88" tolineno="88" lineno="88" func="Getattr(getVar)">
              <Getattr fromlineno="88" tolineno="88" lineno="88" attrname="getVar" expr="data">
                <Name fromlineno="88" tolineno="88" lineno="88" name="data"/>
              </Getattr>
              <Const fromlineno="88" tolineno="88" lineno="88" type="str">'FETCHCOMMAND_p4'</Const>
              <Name fromlineno="88" tolineno="88" lineno="88" name="d"/>
              <Const fromlineno="88" tolineno="88" lineno="88" type="int">1</Const>
            </CallFunc>
          </Assign>
          <Discard fromlineno="89" tolineno="89" lineno="89">
            <CallFunc fromlineno="89" tolineno="89" lineno="89" func="Getattr(debug)">
              <Getattr fromlineno="89" tolineno="89" lineno="89" attrname="debug" expr="bb.msg">
                <Getattr fromlineno="89" tolineno="89" lineno="89" attrname="msg" expr="bb">
                  <Name fromlineno="89" tolineno="89" lineno="89" name="bb"/>
                </Getattr>
              </Getattr>
              <Const fromlineno="89" tolineno="89" lineno="89" type="int">1</Const>
              <Getattr fromlineno="89" tolineno="89" lineno="89" attrname="Fetcher" expr="bb.msg.domain">
                <Getattr fromlineno="89" tolineno="89" lineno="89" attrname="domain" expr="bb.msg">
                  <Getattr fromlineno="89" tolineno="89" lineno="89" attrname="msg" expr="bb">
                    <Name fromlineno="89" tolineno="89" lineno="89" name="bb"/>
                  </Getattr>
                </Getattr>
              </Getattr>
              <BinOp fromlineno="89" tolineno="89" lineno="89" op="%" left="'Running %s%s changes -m 1 %s'" right="(p4cmd, p4opt, depot)">
                <Const fromlineno="89" tolineno="89" lineno="89" type="str">'Running %s%s changes -m 1 %s'</Const>
                <Tuple fromlineno="89" tolineno="89" lineno="89">
                  <Name fromlineno="89" tolineno="89" lineno="89" name="p4cmd"/>
                  <Name fromlineno="89" tolineno="89" lineno="89" name="p4opt"/>
                  <Name fromlineno="89" tolineno="89" lineno="89" name="depot"/>
                </Tuple>
              </BinOp>
            </CallFunc>
          </Discard>
          <Assign fromlineno="90" tolineno="90" lineno="90" targets="[&lt;AssName(p4file) l.90 [bb.fetch.perforce] at Ox9b6e5cc&gt;]" value="os.popen(('%s%s changes -m 1 %s') % ((p4cmd, p4opt, depot)))">
            <AssName fromlineno="90" tolineno="90" lineno="90" name="p4file"/>
            <CallFunc fromlineno="90" tolineno="90" lineno="90" func="Getattr(popen)">
              <Getattr fromlineno="90" tolineno="90" lineno="90" attrname="popen" expr="os">
                <Name fromlineno="90" tolineno="90" lineno="90" name="os"/>
              </Getattr>
              <BinOp fromlineno="90" tolineno="90" lineno="90" op="%" left="'%s%s changes -m 1 %s'" right="(p4cmd, p4opt, depot)">
                <Const fromlineno="90" tolineno="90" lineno="90" type="str">'%s%s changes -m 1 %s'</Const>
                <Tuple fromlineno="90" tolineno="90" lineno="90">
                  <Name fromlineno="90" tolineno="90" lineno="90" name="p4cmd"/>
                  <Name fromlineno="90" tolineno="90" lineno="90" name="p4opt"/>
                  <Name fromlineno="90" tolineno="90" lineno="90" name="depot"/>
                </Tuple>
              </BinOp>
            </CallFunc>
          </Assign>
          <Assign fromlineno="91" tolineno="91" lineno="91" targets="[&lt;AssName(cset) l.91 [bb.fetch.perforce] at Ox9b6e78c&gt;]" value="p4file.readline().strip()">
            <AssName fromlineno="91" tolineno="91" lineno="91" name="cset"/>
            <CallFunc fromlineno="91" tolineno="91" lineno="91" func="Getattr(strip)">
              <Getattr fromlineno="91" tolineno="91" lineno="91" attrname="strip" expr="p4file.readline()">
                <CallFunc fromlineno="91" tolineno="91" lineno="91" func="Getattr(readline)">
                  <Getattr fromlineno="91" tolineno="91" lineno="91" attrname="readline" expr="p4file">
                    <Name fromlineno="91" tolineno="91" lineno="91" name="p4file"/>
                  </Getattr>
                </CallFunc>
              </Getattr>
            </CallFunc>
          </Assign>
          <Discard fromlineno="92" tolineno="92" lineno="92">
            <CallFunc fromlineno="92" tolineno="92" lineno="92" func="Getattr(debug)">
              <Getattr fromlineno="92" tolineno="92" lineno="92" attrname="debug" expr="bb.msg">
                <Getattr fromlineno="92" tolineno="92" lineno="92" attrname="msg" expr="bb">
                  <Name fromlineno="92" tolineno="92" lineno="92" name="bb"/>
                </Getattr>
              </Getattr>
              <Const fromlineno="92" tolineno="92" lineno="92" type="int">1</Const>
              <Getattr fromlineno="92" tolineno="92" lineno="92" attrname="Fetcher" expr="bb.msg.domain">
                <Getattr fromlineno="92" tolineno="92" lineno="92" attrname="domain" expr="bb.msg">
                  <Getattr fromlineno="92" tolineno="92" lineno="92" attrname="msg" expr="bb">
                    <Name fromlineno="92" tolineno="92" lineno="92" name="bb"/>
                  </Getattr>
                </Getattr>
              </Getattr>
              <BinOp fromlineno="92" tolineno="92" lineno="92" op="%" left="'READ %s'" right="cset">
                <Const fromlineno="92" tolineno="92" lineno="92" type="str">'READ %s'</Const>
                <Name fromlineno="92" tolineno="92" lineno="92" name="cset"/>
              </BinOp>
            </CallFunc>
          </Discard>
          <If fromlineno="93" tolineno="94" lineno="93">
            <UnaryOp fromlineno="93" tolineno="93" lineno="93">
              <Name fromlineno="93" tolineno="93" lineno="93" name="cset"/>
            </UnaryOp>
            <Return fromlineno="94" tolineno="94" lineno="94">
              <Const fromlineno="94" tolineno="94" lineno="94" type="int">-1</Const>
            </Return>
          </If>
          <Return fromlineno="96" tolineno="96" lineno="96">
            <Subscript fromlineno="96" tolineno="96" lineno="96">
              <CallFunc fromlineno="96" tolineno="96" lineno="96" func="Getattr(split)">
                <Getattr fromlineno="96" tolineno="96" lineno="96" attrname="split" expr="cset">
                  <Name fromlineno="96" tolineno="96" lineno="96" name="cset"/>
                </Getattr>
                <Const fromlineno="96" tolineno="96" lineno="96" type="str">' '</Const>
              </CallFunc>
              <Index fromlineno="96" tolineno="96" lineno="None">
                <Const fromlineno="96" tolineno="96" lineno="96" type="int">1</Const>
              </Index>
            </Subscript>
          </Return>
        </Function>
        <Assign fromlineno="97" tolineno="97" lineno="97" targets="[&lt;AssName(getcset) l.97 [bb.fetch.perforce] at Ox9b6ec8c&gt;]" value="staticmethod(getcset)">
          <AssName fromlineno="97" tolineno="97" lineno="97" name="getcset"/>
          <CallFunc fromlineno="97" tolineno="97" lineno="97" func="Name(staticmethod)">
            <Name fromlineno="97" tolineno="97" lineno="97" name="staticmethod"/>
            <Name fromlineno="97" tolineno="97" lineno="97" name="getcset"/>
          </CallFunc>
        </Assign>
        <Function fromlineno="99" tolineno="121" lineno="99">
          <Arguments fromlineno="99" tolineno="99" lineno="None" format_args="self, url, ud, d">
            <AssName fromlineno="99" tolineno="99" lineno="99" name="self"/>
            <AssName fromlineno="99" tolineno="99" lineno="99" name="url"/>
            <AssName fromlineno="99" tolineno="99" lineno="99" name="ud"/>
            <AssName fromlineno="99" tolineno="99" lineno="99" name="d"/>
          </Arguments>
          <Assign fromlineno="101" tolineno="101" lineno="101" targets="[&lt;Tuple(tuple) l.101 [bb.fetch.perforce] at Ox9b6e98c&gt;]" value="Perforce.doparse(url, d)">
            <Tuple fromlineno="101" tolineno="101" lineno="101">
              <AssName fromlineno="101" tolineno="101" lineno="101" name="host"/>
              <AssName fromlineno="101" tolineno="101" lineno="101" name="path"/>
              <AssName fromlineno="101" tolineno="101" lineno="101" name="user"/>
              <AssName fromlineno="101" tolineno="101" lineno="101" name="pswd"/>
              <AssName fromlineno="101" tolineno="101" lineno="101" name="parm"/>
            </Tuple>
            <CallFunc fromlineno="101" tolineno="101" lineno="101" func="Getattr(doparse)">
              <Getattr fromlineno="101" tolineno="101" lineno="101" attrname="doparse" expr="Perforce">
                <Name fromlineno="101" tolineno="101" lineno="101" name="Perforce"/>
              </Getattr>
              <Name fromlineno="101" tolineno="101" lineno="101" name="url"/>
              <Name fromlineno="101" tolineno="101" lineno="101" name="d"/>
            </CallFunc>
          </Assign>
          <If fromlineno="105" tolineno="107" lineno="105">
            <Compare fromlineno="105" tolineno="105" lineno="105" op="('in', &lt;Name(parm) l.105 [bb.fetch.perforce] at Ox9b7454c&gt;)">
              <Const fromlineno="105" tolineno="105" lineno="105" type="str">'label'</Const>
              <Name fromlineno="105" tolineno="105" lineno="105" name="parm"/>
            </Compare>
            <Assign fromlineno="106" tolineno="106" lineno="106" targets="[&lt;AssAttr(localfile) l.106 [bb.fetch.perforce] at Ox9b740ac&gt;]" value="('%s.tar.gz') % (parm['label'])">
              <AssAttr fromlineno="106" tolineno="106" lineno="106" attrname="localfile" expr="ud">
                <Name fromlineno="106" tolineno="106" lineno="106" name="ud"/>
              </AssAttr>
              <BinOp fromlineno="106" tolineno="106" lineno="106" op="%" left="'%s.tar.gz'" right="parm['label']">
                <Const fromlineno="106" tolineno="106" lineno="106" type="str">'%s.tar.gz'</Const>
                <Subscript fromlineno="106" tolineno="106" lineno="106">
                  <Name fromlineno="106" tolineno="106" lineno="106" name="parm"/>
                  <Index fromlineno="106" tolineno="106" lineno="None">
                    <Const fromlineno="106" tolineno="106" lineno="106" type="str">'label'</Const>
                  </Index>
                </Subscript>
              </BinOp>
            </Assign>
            <Return fromlineno="107" tolineno="107" lineno="107">
              <CallFunc fromlineno="107" tolineno="107" lineno="107" func="Getattr(join)">
                <Getattr fromlineno="107" tolineno="107" lineno="107" attrname="join" expr="os.path">
                  <Getattr fromlineno="107" tolineno="107" lineno="107" attrname="path" expr="os">
                    <Name fromlineno="107" tolineno="107" lineno="107" name="os"/>
                  </Getattr>
                </Getattr>
                <CallFunc fromlineno="107" tolineno="107" lineno="107" func="Getattr(getVar)">
                  <Getattr fromlineno="107" tolineno="107" lineno="107" attrname="getVar" expr="data">
                    <Name fromlineno="107" tolineno="107" lineno="107" name="data"/>
                  </Getattr>
                  <Const fromlineno="107" tolineno="107" lineno="107" type="str">'DL_DIR'</Const>
                  <Name fromlineno="107" tolineno="107" lineno="107" name="d"/>
                  <Const fromlineno="107" tolineno="107" lineno="107" type="int">1</Const>
                </CallFunc>
                <Getattr fromlineno="107" tolineno="107" lineno="107" attrname="localfile" expr="ud">
                  <Name fromlineno="107" tolineno="107" lineno="107" name="ud"/>
                </Getattr>
              </CallFunc>
            </Return>
          </If>
          <Assign fromlineno="109" tolineno="109" lineno="109" targets="[&lt;AssName(base) l.109 [bb.fetch.perforce] at Ox9b746ac&gt;]" value="path">
            <AssName fromlineno="109" tolineno="109" lineno="109" name="base"/>
            <Name fromlineno="109" tolineno="109" lineno="109" name="path"/>
          </Assign>
          <Assign fromlineno="110" tolineno="110" lineno="110" targets="[&lt;AssName(which) l.110 [bb.fetch.perforce] at Ox9b7460c&gt;]" value="path.find('/...')">
            <AssName fromlineno="110" tolineno="110" lineno="110" name="which"/>
            <CallFunc fromlineno="110" tolineno="110" lineno="110" func="Getattr(find)">
              <Getattr fromlineno="110" tolineno="110" lineno="110" attrname="find" expr="path">
                <Name fromlineno="110" tolineno="110" lineno="110" name="path"/>
              </Getattr>
              <Const fromlineno="110" tolineno="110" lineno="110" type="str">'/...'</Const>
            </CallFunc>
          </Assign>
          <If fromlineno="111" tolineno="112" lineno="111">
            <Compare fromlineno="111" tolineno="111" lineno="111" op="('!=', &lt;Const(int) l.111 [bb.fetch.perforce] at Ox9b743ec&gt;)">
              <Name fromlineno="111" tolineno="111" lineno="111" name="which"/>
              <Const fromlineno="111" tolineno="111" lineno="111" type="int">-1</Const>
            </Compare>
            <Assign fromlineno="112" tolineno="112" lineno="112" targets="[&lt;AssName(base) l.112 [bb.fetch.perforce] at Ox9b74b2c&gt;]" value="path[:which]">
              <AssName fromlineno="112" tolineno="112" lineno="112" name="base"/>
              <Subscript fromlineno="112" tolineno="112" lineno="112">
                <Name fromlineno="112" tolineno="112" lineno="112" name="path"/>
                <Slice fromlineno="112" tolineno="112" lineno="None">
                  <Name fromlineno="112" tolineno="112" lineno="112" name="which"/>
                </Slice>
              </Subscript>
            </Assign>
          </If>
          <If fromlineno="114" tolineno="115" lineno="114">
            <Compare fromlineno="114" tolineno="114" lineno="114" op="('==', &lt;Const(str) l.114 [bb.fetch.perforce] at Ox9b74b8c&gt;)">
              <Subscript fromlineno="114" tolineno="114" lineno="114">
                <Name fromlineno="114" tolineno="114" lineno="114" name="base"/>
                <Index fromlineno="114" tolineno="114" lineno="None">
                  <Const fromlineno="114" tolineno="114" lineno="114" type="int">0</Const>
                </Index>
              </Subscript>
              <Const fromlineno="114" tolineno="114" lineno="114" type="str">'/'</Const>
            </Compare>
            <Assign fromlineno="115" tolineno="115" lineno="115" targets="[&lt;AssName(base) l.115 [bb.fetch.perforce] at Ox9b74ccc&gt;]" value="base[1:]">
              <AssName fromlineno="115" tolineno="115" lineno="115" name="base"/>
              <Subscript fromlineno="115" tolineno="115" lineno="115">
                <Name fromlineno="115" tolineno="115" lineno="115" name="base"/>
                <Slice fromlineno="115" tolineno="115" lineno="None">
                  <Const fromlineno="115" tolineno="115" lineno="115" type="int">1</Const>
                </Slice>
              </Subscript>
            </Assign>
          </If>
          <Assign fromlineno="117" tolineno="117" lineno="117" targets="[&lt;AssName(cset) l.117 [bb.fetch.perforce] at Ox9b74cac&gt;]" value="Perforce.getcset(d, path, host, user, pswd, parm)">
            <AssName fromlineno="117" tolineno="117" lineno="117" name="cset"/>
            <CallFunc fromlineno="117" tolineno="117" lineno="117" func="Getattr(getcset)">
              <Getattr fromlineno="117" tolineno="117" lineno="117" attrname="getcset" expr="Perforce">
                <Name fromlineno="117" tolineno="117" lineno="117" name="Perforce"/>
              </Getattr>
              <Name fromlineno="117" tolineno="117" lineno="117" name="d"/>
              <Name fromlineno="117" tolineno="117" lineno="117" name="path"/>
              <Name fromlineno="117" tolineno="117" lineno="117" name="host"/>
              <Name fromlineno="117" tolineno="117" lineno="117" name="user"/>
              <Name fromlineno="117" tolineno="117" lineno="117" name="pswd"/>
              <Name fromlineno="117" tolineno="117" lineno="117" name="parm"/>
            </CallFunc>
          </Assign>
          <Assign fromlineno="119" tolineno="119" lineno="119" targets="[&lt;AssAttr(localfile) l.119 [bb.fetch.perforce] at Ox9b74d0c&gt;]" value="data.expand(('%s+%s+%s.tar.gz') % ((host, base.replace('/', '.'), cset)), d)">
            <AssAttr fromlineno="119" tolineno="119" lineno="119" attrname="localfile" expr="ud">
              <Name fromlineno="119" tolineno="119" lineno="119" name="ud"/>
            </AssAttr>
            <CallFunc fromlineno="119" tolineno="119" lineno="119" func="Getattr(expand)">
              <Getattr fromlineno="119" tolineno="119" lineno="119" attrname="expand" expr="data">
                <Name fromlineno="119" tolineno="119" lineno="119" name="data"/>
              </Getattr>
              <BinOp fromlineno="119" tolineno="119" lineno="119" op="%" left="'%s+%s+%s.tar.gz'" right="(host, base.replace('/', '.'), cset)">
                <Const fromlineno="119" tolineno="119" lineno="119" type="str">'%s+%s+%s.tar.gz'</Const>
                <Tuple fromlineno="119" tolineno="119" lineno="119">
                  <Name fromlineno="119" tolineno="119" lineno="119" name="host"/>
                  <CallFunc fromlineno="119" tolineno="119" lineno="119" func="Getattr(replace)">
                    <Getattr fromlineno="119" tolineno="119" lineno="119" attrname="replace" expr="base">
                      <Name fromlineno="119" tolineno="119" lineno="119" name="base"/>
                    </Getattr>
                    <Const fromlineno="119" tolineno="119" lineno="119" type="str">'/'</Const>
                    <Const fromlineno="119" tolineno="119" lineno="119" type="str">'.'</Const>
                  </CallFunc>
                  <Name fromlineno="119" tolineno="119" lineno="119" name="cset"/>
                </Tuple>
              </BinOp>
              <Name fromlineno="119" tolineno="119" lineno="119" name="d"/>
            </CallFunc>
          </Assign>
          <Return fromlineno="121" tolineno="121" lineno="121">
            <CallFunc fromlineno="121" tolineno="121" lineno="121" func="Getattr(join)">
              <Getattr fromlineno="121" tolineno="121" lineno="121" attrname="join" expr="os.path">
                <Getattr fromlineno="121" tolineno="121" lineno="121" attrname="path" expr="os">
                  <Name fromlineno="121" tolineno="121" lineno="121" name="os"/>
                </Getattr>
              </Getattr>
              <CallFunc fromlineno="121" tolineno="121" lineno="121" func="Getattr(getVar)">
                <Getattr fromlineno="121" tolineno="121" lineno="121" attrname="getVar" expr="data">
                  <Name fromlineno="121" tolineno="121" lineno="121" name="data"/>
                </Getattr>
                <Const fromlineno="121" tolineno="121" lineno="121" type="str">'DL_DIR'</Const>
                <Name fromlineno="121" tolineno="121" lineno="121" name="d"/>
                <Const fromlineno="121" tolineno="121" lineno="121" type="int">1</Const>
              </CallFunc>
              <Getattr fromlineno="121" tolineno="121" lineno="121" attrname="localfile" expr="ud">
                <Name fromlineno="121" tolineno="121" lineno="121" name="ud"/>
              </Getattr>
            </CallFunc>
          </Return>
        </Function>
        <Function fromlineno="123" tolineno="213" lineno="123">
          <Arguments fromlineno="123" tolineno="123" lineno="None" format_args="self, loc, ud, d">
            <AssName fromlineno="123" tolineno="123" lineno="123" name="self"/>
            <AssName fromlineno="123" tolineno="123" lineno="123" name="loc"/>
            <AssName fromlineno="123" tolineno="123" lineno="123" name="ud"/>
            <AssName fromlineno="123" tolineno="123" lineno="123" name="d"/>
          </Arguments>
          <If fromlineno="129" tolineno="131" lineno="129">
            <CallFunc fromlineno="129" tolineno="129" lineno="129" func="Getattr(try_mirror)">
              <Getattr fromlineno="129" tolineno="129" lineno="129" attrname="try_mirror" expr="Fetch">
                <Name fromlineno="129" tolineno="129" lineno="129" name="Fetch"/>
              </Getattr>
              <Name fromlineno="129" tolineno="129" lineno="129" name="d"/>
              <Getattr fromlineno="129" tolineno="129" lineno="129" attrname="localfile" expr="ud">
                <Name fromlineno="129" tolineno="129" lineno="129" name="ud"/>
              </Getattr>
            </CallFunc>
            <Discard fromlineno="130" tolineno="130" lineno="130">
              <CallFunc fromlineno="130" tolineno="130" lineno="130" func="Getattr(debug)">
                <Getattr fromlineno="130" tolineno="130" lineno="130" attrname="debug" expr="bb.msg">
                  <Getattr fromlineno="130" tolineno="130" lineno="130" attrname="msg" expr="bb">
                    <Name fromlineno="130" tolineno="130" lineno="130" name="bb"/>
                  </Getattr>
                </Getattr>
                <Const fromlineno="130" tolineno="130" lineno="130" type="int">1</Const>
                <Getattr fromlineno="130" tolineno="130" lineno="130" attrname="Fetcher" expr="bb.msg.domain">
                  <Getattr fromlineno="130" tolineno="130" lineno="130" attrname="domain" expr="bb.msg">
                    <Getattr fromlineno="130" tolineno="130" lineno="130" attrname="msg" expr="bb">
                      <Name fromlineno="130" tolineno="130" lineno="130" name="bb"/>
                    </Getattr>
                  </Getattr>
                </Getattr>
                <BinOp fromlineno="130" tolineno="130" lineno="130" op="%" left="'%s already exists or was mirrored, skipping perforce checkout.'" right="ud.localpath">
                  <Const fromlineno="130" tolineno="130" lineno="130" type="str">'%s already exists or was mirrored, skipping perforce checkout.'</Const>
                  <Getattr fromlineno="130" tolineno="130" lineno="130" attrname="localpath" expr="ud">
                    <Name fromlineno="130" tolineno="130" lineno="130" name="ud"/>
                  </Getattr>
                </BinOp>
              </CallFunc>
            </Discard>
            <Return fromlineno="131" tolineno="131" lineno="131"/>
          </If>
          <Assign fromlineno="133" tolineno="133" lineno="133" targets="[&lt;Tuple(tuple) l.133 [bb.fetch.perforce] at Ox9b779ec&gt;]" value="Perforce.doparse(loc, d)">
            <Tuple fromlineno="133" tolineno="133" lineno="133">
              <AssName fromlineno="133" tolineno="133" lineno="133" name="host"/>
              <AssName fromlineno="133" tolineno="133" lineno="133" name="depot"/>
              <AssName fromlineno="133" tolineno="133" lineno="133" name="user"/>
              <AssName fromlineno="133" tolineno="133" lineno="133" name="pswd"/>
              <AssName fromlineno="133" tolineno="133" lineno="133" name="parm"/>
            </Tuple>
            <CallFunc fromlineno="133" tolineno="133" lineno="133" func="Getattr(doparse)">
              <Getattr fromlineno="133" tolineno="133" lineno="133" attrname="doparse" expr="Perforce">
                <Name fromlineno="133" tolineno="133" lineno="133" name="Perforce"/>
              </Getattr>
              <Name fromlineno="133" tolineno="133" lineno="133" name="loc"/>
              <Name fromlineno="133" tolineno="133" lineno="133" name="d"/>
            </CallFunc>
          </Assign>
          <If fromlineno="135" tolineno="138" lineno="135">
            <Compare fromlineno="135" tolineno="135" lineno="135" op="('!=', &lt;Const(int) l.135 [bb.fetch.perforce] at Ox9b77ccc&gt;)">
              <CallFunc fromlineno="135" tolineno="135" lineno="135" func="Getattr(find)">
                <Getattr fromlineno="135" tolineno="135" lineno="135" attrname="find" expr="depot">
                  <Name fromlineno="135" tolineno="135" lineno="135" name="depot"/>
                </Getattr>
                <Const fromlineno="135" tolineno="135" lineno="135" type="str">'/...'</Const>
              </CallFunc>
              <Const fromlineno="135" tolineno="135" lineno="135" type="int">-1</Const>
            </Compare>
            <Assign fromlineno="136" tolineno="136" lineno="136" targets="[&lt;AssName(path) l.136 [bb.fetch.perforce] at Ox9b77e2c&gt;]" value="depot[:depot.find('/...')]">
              <AssName fromlineno="136" tolineno="136" lineno="136" name="path"/>
              <Subscript fromlineno="136" tolineno="136" lineno="136">
                <Name fromlineno="136" tolineno="136" lineno="136" name="depot"/>
                <Slice fromlineno="136" tolineno="136" lineno="None">
                  <CallFunc fromlineno="136" tolineno="136" lineno="136" func="Getattr(find)">
                    <Getattr fromlineno="136" tolineno="136" lineno="136" attrname="find" expr="depot">
                      <Name fromlineno="136" tolineno="136" lineno="136" name="depot"/>
                    </Getattr>
                    <Const fromlineno="136" tolineno="136" lineno="136" type="str">'/...'</Const>
                  </CallFunc>
                </Slice>
              </Subscript>
            </Assign>
            <Assign fromlineno="138" tolineno="138" lineno="138" targets="[&lt;AssName(path) l.138 [bb.fetch.perforce] at Ox9b77fec&gt;]" value="depot">
              <AssName fromlineno="138" tolineno="138" lineno="138" name="path"/>
              <Name fromlineno="138" tolineno="138" lineno="138" name="depot"/>
            </Assign>
          </If>
          <If fromlineno="140" tolineno="143" lineno="140">
            <Compare fromlineno="140" tolineno="140" lineno="140" op="('in', &lt;Name(parm) l.140 [bb.fetch.perforce] at Ox9b77b4c&gt;)">
              <Const fromlineno="140" tolineno="140" lineno="140" type="str">'module'</Const>
              <Name fromlineno="140" tolineno="140" lineno="140" name="parm"/>
            </Compare>
            <Assign fromlineno="141" tolineno="141" lineno="141" targets="[&lt;AssName(module) l.141 [bb.fetch.perforce] at Ox9b771cc&gt;]" value="parm['module']">
              <AssName fromlineno="141" tolineno="141" lineno="141" name="module"/>
              <Subscript fromlineno="141" tolineno="141" lineno="141">
                <Name fromlineno="141" tolineno="141" lineno="141" name="parm"/>
                <Index fromlineno="141" tolineno="141" lineno="None">
                  <Const fromlineno="141" tolineno="141" lineno="141" type="str">'module'</Const>
                </Index>
              </Subscript>
            </Assign>
            <Assign fromlineno="143" tolineno="143" lineno="143" targets="[&lt;AssName(module) l.143 [bb.fetch.perforce] at Ox9b772ac&gt;]" value="os.path.basename(path)">
              <AssName fromlineno="143" tolineno="143" lineno="143" name="module"/>
              <CallFunc fromlineno="143" tolineno="143" lineno="143" func="Getattr(basename)">
                <Getattr fromlineno="143" tolineno="143" lineno="143" attrname="basename" expr="os.path">
                  <Getattr fromlineno="143" tolineno="143" lineno="143" attrname="path" expr="os">
                    <Name fromlineno="143" tolineno="143" lineno="143" name="os"/>
                  </Getattr>
                </Getattr>
                <Name fromlineno="143" tolineno="143" lineno="143" name="path"/>
              </CallFunc>
            </Assign>
          </If>
          <Assign fromlineno="145" tolineno="145" lineno="145" targets="[&lt;AssName(localdata) l.145 [bb.fetch.perforce] at Ox9b8106c&gt;]" value="data.createCopy(d)">
            <AssName fromlineno="145" tolineno="145" lineno="145" name="localdata"/>
            <CallFunc fromlineno="145" tolineno="145" lineno="145" func="Getattr(createCopy)">
              <Getattr fromlineno="145" tolineno="145" lineno="145" attrname="createCopy" expr="data">
                <Name fromlineno="145" tolineno="145" lineno="145" name="data"/>
              </Getattr>
              <Name fromlineno="145" tolineno="145" lineno="145" name="d"/>
            </CallFunc>
          </Assign>
          <Discard fromlineno="146" tolineno="146" lineno="146">
            <CallFunc fromlineno="146" tolineno="146" lineno="146" func="Getattr(setVar)">
              <Getattr fromlineno="146" tolineno="146" lineno="146" attrname="setVar" expr="data">
                <Name fromlineno="146" tolineno="146" lineno="146" name="data"/>
              </Getattr>
              <Const fromlineno="146" tolineno="146" lineno="146" type="str">'OVERRIDES'</Const>
              <BinOp fromlineno="146" tolineno="146" lineno="146" op="%" left="'p4:%s'" right="data.getVar('OVERRIDES', localdata)">
                <Const fromlineno="146" tolineno="146" lineno="146" type="str">'p4:%s'</Const>
                <CallFunc fromlineno="146" tolineno="146" lineno="146" func="Getattr(getVar)">
                  <Getattr fromlineno="146" tolineno="146" lineno="146" attrname="getVar" expr="data">
                    <Name fromlineno="146" tolineno="146" lineno="146" name="data"/>
                  </Getattr>
                  <Const fromlineno="146" tolineno="146" lineno="146" type="str">'OVERRIDES'</Const>
                  <Name fromlineno="146" tolineno="146" lineno="146" name="localdata"/>
                </CallFunc>
              </BinOp>
              <Name fromlineno="146" tolineno="146" lineno="146" name="localdata"/>
            </CallFunc>
          </Discard>
          <Discard fromlineno="147" tolineno="147" lineno="147">
            <CallFunc fromlineno="147" tolineno="147" lineno="147" func="Getattr(update_data)">
              <Getattr fromlineno="147" tolineno="147" lineno="147" attrname="update_data" expr="data">
                <Name fromlineno="147" tolineno="147" lineno="147" name="data"/>
              </Getattr>
              <Name fromlineno="147" tolineno="147" lineno="147" name="localdata"/>
            </CallFunc>
          </Discard>
          <Assign fromlineno="150" tolineno="150" lineno="150" targets="[&lt;AssName(p4opt) l.150 [bb.fetch.perforce] at Ox9b814cc&gt;]" value="''">
            <AssName fromlineno="150" tolineno="150" lineno="150" name="p4opt"/>
            <Const fromlineno="150" tolineno="150" lineno="150" type="str">''</Const>
          </Assign>
          <If fromlineno="151" tolineno="152" lineno="151">
            <Name fromlineno="151" tolineno="151" lineno="151" name="user"/>
            <AugAssign fromlineno="152" tolineno="152" lineno="152" target="p4opt" value="(' -u %s') % (user)">
              <AssName fromlineno="152" tolineno="152" lineno="152" name="p4opt"/>
              <BinOp fromlineno="152" tolineno="152" lineno="152" op="%" left="' -u %s'" right="user">
                <Const fromlineno="152" tolineno="152" lineno="152" type="str">' -u %s'</Const>
                <Name fromlineno="152" tolineno="152" lineno="152" name="user"/>
              </BinOp>
            </AugAssign>
          </If>
          <If fromlineno="154" tolineno="155" lineno="154">
            <Name fromlineno="154" tolineno="154" lineno="154" name="pswd"/>
            <AugAssign fromlineno="155" tolineno="155" lineno="155" target="p4opt" value="(' -P %s') % (pswd)">
              <AssName fromlineno="155" tolineno="155" lineno="155" name="p4opt"/>
              <BinOp fromlineno="155" tolineno="155" lineno="155" op="%" left="' -P %s'" right="pswd">
                <Const fromlineno="155" tolineno="155" lineno="155" type="str">' -P %s'</Const>
                <Name fromlineno="155" tolineno="155" lineno="155" name="pswd"/>
              </BinOp>
            </AugAssign>
          </If>
          <If fromlineno="157" tolineno="158" lineno="157">
            <Name fromlineno="157" tolineno="157" lineno="157" name="host"/>
            <AugAssign fromlineno="158" tolineno="158" lineno="158" target="p4opt" value="(' -p %s') % (host)">
              <AssName fromlineno="158" tolineno="158" lineno="158" name="p4opt"/>
              <BinOp fromlineno="158" tolineno="158" lineno="158" op="%" left="' -p %s'" right="host">
                <Const fromlineno="158" tolineno="158" lineno="158" type="str">' -p %s'</Const>
                <Name fromlineno="158" tolineno="158" lineno="158" name="host"/>
              </BinOp>
            </AugAssign>
          </If>
          <Assign fromlineno="160" tolineno="160" lineno="160" targets="[&lt;AssName(p4cmd) l.160 [bb.fetch.perforce] at Ox9b81cac&gt;]" value="data.getVar('FETCHCOMMAND', localdata, 1)">
            <AssName fromlineno="160" tolineno="160" lineno="160" name="p4cmd"/>
            <CallFunc fromlineno="160" tolineno="160" lineno="160" func="Getattr(getVar)">
              <Getattr fromlineno="160" tolineno="160" lineno="160" attrname="getVar" expr="data">
                <Name fromlineno="160" tolineno="160" lineno="160" name="data"/>
              </Getattr>
              <Const fromlineno="160" tolineno="160" lineno="160" type="str">'FETCHCOMMAND'</Const>
              <Name fromlineno="160" tolineno="160" lineno="160" name="localdata"/>
              <Const fromlineno="160" tolineno="160" lineno="160" type="int">1</Const>
            </CallFunc>
          </Assign>
          <Discard fromlineno="163" tolineno="163" lineno="163">
            <CallFunc fromlineno="163" tolineno="163" lineno="163" func="Getattr(debug)">
              <Getattr fromlineno="163" tolineno="163" lineno="163" attrname="debug" expr="bb.msg">
                <Getattr fromlineno="163" tolineno="163" lineno="163" attrname="msg" expr="bb">
                  <Name fromlineno="163" tolineno="163" lineno="163" name="bb"/>
                </Getattr>
              </Getattr>
              <Const fromlineno="163" tolineno="163" lineno="163" type="int">2</Const>
              <Getattr fromlineno="163" tolineno="163" lineno="163" attrname="Fetcher" expr="bb.msg.domain">
                <Getattr fromlineno="163" tolineno="163" lineno="163" attrname="domain" expr="bb.msg">
                  <Getattr fromlineno="163" tolineno="163" lineno="163" attrname="msg" expr="bb">
                    <Name fromlineno="163" tolineno="163" lineno="163" name="bb"/>
                  </Getattr>
                </Getattr>
              </Getattr>
              <Const fromlineno="163" tolineno="163" lineno="163" type="str">'Fetch: creating temporary directory'</Const>
            </CallFunc>
          </Discard>
          <Discard fromlineno="164" tolineno="164" lineno="164">
            <CallFunc fromlineno="164" tolineno="164" lineno="164" func="Getattr(mkdirhier)">
              <Getattr fromlineno="164" tolineno="164" lineno="164" attrname="mkdirhier" expr="bb">
                <Name fromlineno="164" tolineno="164" lineno="164" name="bb"/>
              </Getattr>
              <CallFunc fromlineno="164" tolineno="164" lineno="164" func="Getattr(expand)">
                <Getattr fromlineno="164" tolineno="164" lineno="164" attrname="expand" expr="data">
                  <Name fromlineno="164" tolineno="164" lineno="164" name="data"/>
                </Getattr>
                <Const fromlineno="164" tolineno="164" lineno="164" type="str">'${WORKDIR}'</Const>
                <Name fromlineno="164" tolineno="164" lineno="164" name="localdata"/>
              </CallFunc>
            </CallFunc>
          </Discard>
          <Discard fromlineno="165" tolineno="165" lineno="165">
            <CallFunc fromlineno="165" tolineno="165" lineno="165" func="Getattr(setVar)">
              <Getattr fromlineno="165" tolineno="165" lineno="165" attrname="setVar" expr="data">
                <Name fromlineno="165" tolineno="165" lineno="165" name="data"/>
              </Getattr>
              <Const fromlineno="165" tolineno="165" lineno="165" type="str">'TMPBASE'</Const>
              <CallFunc fromlineno="165" tolineno="165" lineno="165" func="Getattr(expand)">
                <Getattr fromlineno="165" tolineno="165" lineno="165" attrname="expand" expr="data">
                  <Name fromlineno="165" tolineno="165" lineno="165" name="data"/>
                </Getattr>
                <Const fromlineno="165" tolineno="165" lineno="165" type="str">'${WORKDIR}/oep4.XXXXXX'</Const>
                <Name fromlineno="165" tolineno="165" lineno="165" name="localdata"/>
              </CallFunc>
              <Name fromlineno="165" tolineno="165" lineno="165" name="localdata"/>
            </CallFunc>
          </Discard>
          <Assign fromlineno="166" tolineno="166" lineno="166" targets="[&lt;AssName(tmppipe) l.166 [bb.fetch.perforce] at Ox9b81e2c&gt;]" value="os.popen((data.getVar('MKTEMPDIRCMD', localdata, 1)) or ('false'))">
            <AssName fromlineno="166" tolineno="166" lineno="166" name="tmppipe"/>
            <CallFunc fromlineno="166" tolineno="166" lineno="166" func="Getattr(popen)">
              <Getattr fromlineno="166" tolineno="166" lineno="166" attrname="popen" expr="os">
                <Name fromlineno="166" tolineno="166" lineno="166" name="os"/>
              </Getattr>
              <BoolOp fromlineno="166" tolineno="166" lineno="166" op="or" values="data.getVar('MKTEMPDIRCMD', localdata, 1),'false',">
                <CallFunc fromlineno="166" tolineno="166" lineno="166" func="Getattr(getVar)">
                  <Getattr fromlineno="166" tolineno="166" lineno="166" attrname="getVar" expr="data">
                    <Name fromlineno="166" tolineno="166" lineno="166" name="data"/>
                  </Getattr>
                  <Const fromlineno="166" tolineno="166" lineno="166" type="str">'MKTEMPDIRCMD'</Const>
                  <Name fromlineno="166" tolineno="166" lineno="166" name="localdata"/>
                  <Const fromlineno="166" tolineno="166" lineno="166" type="int">1</Const>
                </CallFunc>
                <Const fromlineno="166" tolineno="166" lineno="166" type="str">'false'</Const>
              </BoolOp>
            </CallFunc>
          </Assign>
          <Assign fromlineno="167" tolineno="167" lineno="167" targets="[&lt;AssName(tmpfile) l.167 [bb.fetch.perforce] at Ox9cc00ac&gt;]" value="tmppipe.readline().strip()">
            <AssName fromlineno="167" tolineno="167" lineno="167" name="tmpfile"/>
            <CallFunc fromlineno="167" tolineno="167" lineno="167" func="Getattr(strip)">
              <Getattr fromlineno="167" tolineno="167" lineno="167" attrname="strip" expr="tmppipe.readline()">
                <CallFunc fromlineno="167" tolineno="167" lineno="167" func="Getattr(readline)">
                  <Getattr fromlineno="167" tolineno="167" lineno="167" attrname="readline" expr="tmppipe">
                    <Name fromlineno="167" tolineno="167" lineno="167" name="tmppipe"/>
                  </Getattr>
                </CallFunc>
              </Getattr>
            </CallFunc>
          </Assign>
          <If fromlineno="168" tolineno="170" lineno="168">
            <UnaryOp fromlineno="168" tolineno="168" lineno="168">
              <Name fromlineno="168" tolineno="168" lineno="168" name="tmpfile"/>
            </UnaryOp>
            <Discard fromlineno="169" tolineno="169" lineno="169">
              <CallFunc fromlineno="169" tolineno="169" lineno="169" func="Getattr(error)">
                <Getattr fromlineno="169" tolineno="169" lineno="169" attrname="error" expr="bb">
                  <Name fromlineno="169" tolineno="169" lineno="169" name="bb"/>
                </Getattr>
                <Const fromlineno="169" tolineno="169" lineno="169" type="str">"Fetch: unable to create temporary directory.. make sure 'mktemp' is in the PATH."</Const>
              </CallFunc>
            </Discard>
            <Raise fromlineno="170" tolineno="170" lineno="170">
              <CallFunc fromlineno="170" tolineno="170" lineno="170" func="Name(FetchError)">
                <Name fromlineno="170" tolineno="170" lineno="170" name="FetchError"/>
                <Name fromlineno="170" tolineno="170" lineno="170" name="module"/>
              </CallFunc>
            </Raise>
          </If>
          <If fromlineno="172" tolineno="176" lineno="172">
            <Compare fromlineno="172" tolineno="172" lineno="172" op="('in', &lt;Name(parm) l.172 [bb.fetch.perforce] at Ox9cc044c&gt;)">
              <Const fromlineno="172" tolineno="172" lineno="172" type="str">'label'</Const>
              <Name fromlineno="172" tolineno="172" lineno="172" name="parm"/>
            </Compare>
            <Assign fromlineno="173" tolineno="173" lineno="173" targets="[&lt;AssName(depot) l.173 [bb.fetch.perforce] at Ox9cc068c&gt;]" value="('%s@%s') % ((depot, parm['label']))">
              <AssName fromlineno="173" tolineno="173" lineno="173" name="depot"/>
              <BinOp fromlineno="173" tolineno="173" lineno="173" op="%" left="'%s@%s'" right="(depot, parm['label'])">
                <Const fromlineno="173" tolineno="173" lineno="173" type="str">'%s@%s'</Const>
                <Tuple fromlineno="173" tolineno="173" lineno="173">
                  <Name fromlineno="173" tolineno="173" lineno="173" name="depot"/>
                  <Subscript fromlineno="173" tolineno="173" lineno="173">
                    <Name fromlineno="173" tolineno="173" lineno="173" name="parm"/>
                    <Index fromlineno="173" tolineno="173" lineno="None">
                      <Const fromlineno="173" tolineno="173" lineno="173" type="str">'label'</Const>
                    </Index>
                  </Subscript>
                </Tuple>
              </BinOp>
            </Assign>
            <Assign fromlineno="175" tolineno="175" lineno="175" targets="[&lt;AssName(cset) l.175 [bb.fetch.perforce] at Ox9cc06cc&gt;]" value="Perforce.getcset(d, depot, host, user, pswd, parm)">
              <AssName fromlineno="175" tolineno="175" lineno="175" name="cset"/>
              <CallFunc fromlineno="175" tolineno="175" lineno="175" func="Getattr(getcset)">
                <Getattr fromlineno="175" tolineno="175" lineno="175" attrname="getcset" expr="Perforce">
                  <Name fromlineno="175" tolineno="175" lineno="175" name="Perforce"/>
                </Getattr>
                <Name fromlineno="175" tolineno="175" lineno="175" name="d"/>
                <Name fromlineno="175" tolineno="175" lineno="175" name="depot"/>
                <Name fromlineno="175" tolineno="175" lineno="175" name="host"/>
                <Name fromlineno="175" tolineno="175" lineno="175" name="user"/>
                <Name fromlineno="175" tolineno="175" lineno="175" name="pswd"/>
                <Name fromlineno="175" tolineno="175" lineno="175" name="parm"/>
              </CallFunc>
            </Assign>
            <Assign fromlineno="176" tolineno="176" lineno="176" targets="[&lt;AssName(depot) l.176 [bb.fetch.perforce] at Ox9cc084c&gt;]" value="('%s@%s') % ((depot, cset))">
              <AssName fromlineno="176" tolineno="176" lineno="176" name="depot"/>
              <BinOp fromlineno="176" tolineno="176" lineno="176" op="%" left="'%s@%s'" right="(depot, cset)">
                <Const fromlineno="176" tolineno="176" lineno="176" type="str">'%s@%s'</Const>
                <Tuple fromlineno="176" tolineno="176" lineno="176">
                  <Name fromlineno="176" tolineno="176" lineno="176" name="depot"/>
                  <Name fromlineno="176" tolineno="176" lineno="176" name="cset"/>
                </Tuple>
              </BinOp>
            </Assign>
          </If>
          <Discard fromlineno="178" tolineno="178" lineno="178">
            <CallFunc fromlineno="178" tolineno="178" lineno="178" func="Getattr(chdir)">
              <Getattr fromlineno="178" tolineno="178" lineno="178" attrname="chdir" expr="os">
                <Name fromlineno="178" tolineno="178" lineno="178" name="os"/>
              </Getattr>
              <Name fromlineno="178" tolineno="178" lineno="178" name="tmpfile"/>
            </CallFunc>
          </Discard>
          <Discard fromlineno="179" tolineno="179" lineno="179">
            <CallFunc fromlineno="179" tolineno="179" lineno="179" func="Getattr(note)">
              <Getattr fromlineno="179" tolineno="179" lineno="179" attrname="note" expr="bb.msg">
                <Getattr fromlineno="179" tolineno="179" lineno="179" attrname="msg" expr="bb">
                  <Name fromlineno="179" tolineno="179" lineno="179" name="bb"/>
                </Getattr>
              </Getattr>
              <Const fromlineno="179" tolineno="179" lineno="179" type="int">1</Const>
              <Getattr fromlineno="179" tolineno="179" lineno="179" attrname="Fetcher" expr="bb.msg.domain">
                <Getattr fromlineno="179" tolineno="179" lineno="179" attrname="domain" expr="bb.msg">
                  <Getattr fromlineno="179" tolineno="179" lineno="179" attrname="msg" expr="bb">
                    <Name fromlineno="179" tolineno="179" lineno="179" name="bb"/>
                  </Getattr>
                </Getattr>
              </Getattr>
              <BinOp fromlineno="179" tolineno="179" lineno="179" op="+" left="'Fetch '" right="loc">
                <Const fromlineno="179" tolineno="179" lineno="179" type="str">'Fetch '</Const>
                <Name fromlineno="179" tolineno="179" lineno="179" name="loc"/>
              </BinOp>
            </CallFunc>
          </Discard>
          <Discard fromlineno="180" tolineno="180" lineno="180">
            <CallFunc fromlineno="180" tolineno="180" lineno="180" func="Getattr(note)">
              <Getattr fromlineno="180" tolineno="180" lineno="180" attrname="note" expr="bb.msg">
                <Getattr fromlineno="180" tolineno="180" lineno="180" attrname="msg" expr="bb">
                  <Name fromlineno="180" tolineno="180" lineno="180" name="bb"/>
                </Getattr>
              </Getattr>
              <Const fromlineno="180" tolineno="180" lineno="180" type="int">1</Const>
              <Getattr fromlineno="180" tolineno="180" lineno="180" attrname="Fetcher" expr="bb.msg.domain">
                <Getattr fromlineno="180" tolineno="180" lineno="180" attrname="domain" expr="bb.msg">
                  <Getattr fromlineno="180" tolineno="180" lineno="180" attrname="msg" expr="bb">
                    <Name fromlineno="180" tolineno="180" lineno="180" name="bb"/>
                  </Getattr>
                </Getattr>
              </Getattr>
              <BinOp fromlineno="180" tolineno="180" lineno="180" op="%" left="'%s%s files %s'" right="(p4cmd, p4opt, depot)">
                <Const fromlineno="180" tolineno="180" lineno="180" type="str">'%s%s files %s'</Const>
                <Tuple fromlineno="180" tolineno="180" lineno="180">
                  <Name fromlineno="180" tolineno="180" lineno="180" name="p4cmd"/>
                  <Name fromlineno="180" tolineno="180" lineno="180" name="p4opt"/>
                  <Name fromlineno="180" tolineno="180" lineno="180" name="depot"/>
                </Tuple>
              </BinOp>
            </CallFunc>
          </Discard>
          <Assign fromlineno="181" tolineno="181" lineno="181" targets="[&lt;AssName(p4file) l.181 [bb.fetch.perforce] at Ox9cc0f2c&gt;]" value="os.popen(('%s%s files %s') % ((p4cmd, p4opt, depot)))">
            <AssName fromlineno="181" tolineno="181" lineno="181" name="p4file"/>
            <CallFunc fromlineno="181" tolineno="181" lineno="181" func="Getattr(popen)">
              <Getattr fromlineno="181" tolineno="181" lineno="181" attrname="popen" expr="os">
                <Name fromlineno="181" tolineno="181" lineno="181" name="os"/>
              </Getattr>
              <BinOp fromlineno="181" tolineno="181" lineno="181" op="%" left="'%s%s files %s'" right="(p4cmd, p4opt, depot)">
                <Const fromlineno="181" tolineno="181" lineno="181" type="str">'%s%s files %s'</Const>
                <Tuple fromlineno="181" tolineno="181" lineno="181">
                  <Name fromlineno="181" tolineno="181" lineno="181" name="p4cmd"/>
                  <Name fromlineno="181" tolineno="181" lineno="181" name="p4opt"/>
                  <Name fromlineno="181" tolineno="181" lineno="181" name="depot"/>
                </Tuple>
              </BinOp>
            </CallFunc>
          </Assign>
          <If fromlineno="183" tolineno="185" lineno="183">
            <UnaryOp fromlineno="183" tolineno="183" lineno="183">
              <Name fromlineno="183" tolineno="183" lineno="183" name="p4file"/>
            </UnaryOp>
            <Discard fromlineno="184" tolineno="184" lineno="184">
              <CallFunc fromlineno="184" tolineno="184" lineno="184" func="Getattr(error)">
                <Getattr fromlineno="184" tolineno="184" lineno="184" attrname="error" expr="bb">
                  <Name fromlineno="184" tolineno="184" lineno="184" name="bb"/>
                </Getattr>
                <BinOp fromlineno="184" tolineno="184" lineno="184" op="%" left="'Fetch: unable to get the P4 files from %s'" right="depot">
                  <Const fromlineno="184" tolineno="184" lineno="184" type="str">'Fetch: unable to get the P4 files from %s'</Const>
                  <Name fromlineno="184" tolineno="184" lineno="184" name="depot"/>
                </BinOp>
              </CallFunc>
            </Discard>
            <Raise fromlineno="185" tolineno="185" lineno="185">
              <CallFunc fromlineno="185" tolineno="185" lineno="185" func="Name(FetchError)">
                <Name fromlineno="185" tolineno="185" lineno="185" name="FetchError"/>
                <Name fromlineno="185" tolineno="185" lineno="185" name="module"/>
              </CallFunc>
            </Raise>
          </If>
          <Assign fromlineno="187" tolineno="187" lineno="187" targets="[&lt;AssName(count) l.187 [bb.fetch.perforce] at Ox9ccc20c&gt;]" value="0">
            <AssName fromlineno="187" tolineno="187" lineno="187" name="count"/>
            <Const fromlineno="187" tolineno="187" lineno="187" type="int">0</Const>
          </Assign>
          <For fromlineno="189" tolineno="199" lineno="189">
            <AssName fromlineno="189" tolineno="189" lineno="189" name="file"/>
            <Name fromlineno="189" tolineno="189" lineno="189" name="p4file"/>
            <Assign fromlineno="190" tolineno="190" lineno="190" targets="[&lt;AssName(list) l.190 [bb.fetch.perforce] at Ox9ccc48c&gt;]" value="file.split()">
              <AssName fromlineno="190" tolineno="190" lineno="190" name="list"/>
              <CallFunc fromlineno="190" tolineno="190" lineno="190" func="Getattr(split)">
                <Getattr fromlineno="190" tolineno="190" lineno="190" attrname="split" expr="file">
                  <Name fromlineno="190" tolineno="190" lineno="190" name="file"/>
                </Getattr>
              </CallFunc>
            </Assign>
            <If fromlineno="192" tolineno="193" lineno="192">
              <Compare fromlineno="192" tolineno="192" lineno="192" op="('==', &lt;Const(str) l.192 [bb.fetch.perforce] at Ox9ccc70c&gt;)">
                <Subscript fromlineno="192" tolineno="192" lineno="192">
                  <Name fromlineno="192" tolineno="192" lineno="192" name="list"/>
                  <Index fromlineno="192" tolineno="192" lineno="None">
                    <Const fromlineno="192" tolineno="192" lineno="192" type="int">2</Const>
                  </Index>
                </Subscript>
                <Const fromlineno="192" tolineno="192" lineno="192" type="str">'delete'</Const>
              </Compare>
              <Continue fromlineno="193" tolineno="193" lineno="193"/>
            </If>
            <Assign fromlineno="195" tolineno="195" lineno="195" targets="[&lt;AssName(dest) l.195 [bb.fetch.perforce] at Ox9ccc84c&gt;]" value="list[0][(len(path)) + (1):]">
              <AssName fromlineno="195" tolineno="195" lineno="195" name="dest"/>
              <Subscript fromlineno="195" tolineno="195" lineno="195">
                <Subscript fromlineno="195" tolineno="195" lineno="195">
                  <Name fromlineno="195" tolineno="195" lineno="195" name="list"/>
                  <Index fromlineno="195" tolineno="195" lineno="None">
                    <Const fromlineno="195" tolineno="195" lineno="195" type="int">0</Const>
                  </Index>
                </Subscript>
                <Slice fromlineno="195" tolineno="195" lineno="None">
                  <BinOp fromlineno="195" tolineno="195" lineno="195" op="+" left="len(path)" right="1">
                    <CallFunc fromlineno="195" tolineno="195" lineno="195" func="Name(len)">
                      <Name fromlineno="195" tolineno="195" lineno="195" name="len"/>
                      <Name fromlineno="195" tolineno="195" lineno="195" name="path"/>
                    </CallFunc>
                    <Const fromlineno="195" tolineno="195" lineno="195" type="int">1</Const>
                  </BinOp>
                </Slice>
              </Subscript>
            </Assign>
            <Assign fromlineno="196" tolineno="196" lineno="196" targets="[&lt;AssName(where) l.196 [bb.fetch.perforce] at Ox9cccb4c&gt;]" value="dest.find('#')">
              <AssName fromlineno="196" tolineno="196" lineno="196" name="where"/>
              <CallFunc fromlineno="196" tolineno="196" lineno="196" func="Getattr(find)">
                <Getattr fromlineno="196" tolineno="196" lineno="196" attrname="find" expr="dest">
                  <Name fromlineno="196" tolineno="196" lineno="196" name="dest"/>
                </Getattr>
                <Const fromlineno="196" tolineno="196" lineno="196" type="str">'#'</Const>
              </CallFunc>
            </Assign>
            <Discard fromlineno="198" tolineno="198" lineno="198">
              <CallFunc fromlineno="198" tolineno="198" lineno="198" func="Getattr(system)">
                <Getattr fromlineno="198" tolineno="198" lineno="198" attrname="system" expr="os">
                  <Name fromlineno="198" tolineno="198" lineno="198" name="os"/>
                </Getattr>
                <BinOp fromlineno="198" tolineno="198" lineno="198" op="%" left="'%s%s print -o %s/%s %s'" right="(p4cmd, p4opt, module, dest[:where], list[0])">
                  <Const fromlineno="198" tolineno="198" lineno="198" type="str">'%s%s print -o %s/%s %s'</Const>
                  <Tuple fromlineno="198" tolineno="198" lineno="198">
                    <Name fromlineno="198" tolineno="198" lineno="198" name="p4cmd"/>
                    <Name fromlineno="198" tolineno="198" lineno="198" name="p4opt"/>
                    <Name fromlineno="198" tolineno="198" lineno="198" name="module"/>
                    <Subscript fromlineno="198" tolineno="198" lineno="198">
                      <Name fromlineno="198" tolineno="198" lineno="198" name="dest"/>
                      <Slice fromlineno="198" tolineno="198" lineno="None">
                        <Name fromlineno="198" tolineno="198" lineno="198" name="where"/>
                      </Slice>
                    </Subscript>
                    <Subscript fromlineno="198" tolineno="198" lineno="198">
                      <Name fromlineno="198" tolineno="198" lineno="198" name="list"/>
                      <Index fromlineno="198" tolineno="198" lineno="None">
                        <Const fromlineno="198" tolineno="198" lineno="198" type="int">0</Const>
                      </Index>
                    </Subscript>
                  </Tuple>
                </BinOp>
              </CallFunc>
            </Discard>
            <Assign fromlineno="199" tolineno="199" lineno="199" targets="[&lt;AssName(count) l.199 [bb.fetch.perforce] at Ox9cd36cc&gt;]" value="(count) + (1)">
              <AssName fromlineno="199" tolineno="199" lineno="199" name="count"/>
              <BinOp fromlineno="199" tolineno="199" lineno="199" op="+" left="count" right="1">
                <Name fromlineno="199" tolineno="199" lineno="199" name="count"/>
                <Const fromlineno="199" tolineno="199" lineno="199" type="int">1</Const>
              </BinOp>
            </Assign>
          </For>
          <If fromlineno="201" tolineno="203" lineno="201">
            <Compare fromlineno="201" tolineno="201" lineno="201" op="('==', &lt;Const(int) l.201 [bb.fetch.perforce] at Ox9cd3b8c&gt;)">
              <Name fromlineno="201" tolineno="201" lineno="201" name="count"/>
              <Const fromlineno="201" tolineno="201" lineno="201" type="int">0</Const>
            </Compare>
            <Discard fromlineno="202" tolineno="202" lineno="202">
              <CallFunc fromlineno="202" tolineno="202" lineno="202" func="Getattr(error)">
                <Getattr fromlineno="202" tolineno="202" lineno="202" attrname="error" expr="bb">
                  <Name fromlineno="202" tolineno="202" lineno="202" name="bb"/>
                </Getattr>
                <Const fromlineno="202" tolineno="202" lineno="202" type="str">'Fetch:  No files gathered from the P4 fetch'</Const>
              </CallFunc>
            </Discard>
            <Raise fromlineno="203" tolineno="203" lineno="203">
              <CallFunc fromlineno="203" tolineno="203" lineno="203" func="Name(FetchError)">
                <Name fromlineno="203" tolineno="203" lineno="203" name="FetchError"/>
                <Name fromlineno="203" tolineno="203" lineno="203" name="module"/>
              </CallFunc>
            </Raise>
          </If>
          <Assign fromlineno="205" tolineno="205" lineno="205" targets="[&lt;AssName(myret) l.205 [bb.fetch.perforce] at Ox9cd320c&gt;]" value="os.system(('tar -czf %s %s') % ((ud.localpath, module)))">
            <AssName fromlineno="205" tolineno="205" lineno="205" name="myret"/>
            <CallFunc fromlineno="205" tolineno="205" lineno="205" func="Getattr(system)">
              <Getattr fromlineno="205" tolineno="205" lineno="205" attrname="system" expr="os">
                <Name fromlineno="205" tolineno="205" lineno="205" name="os"/>
              </Getattr>
              <BinOp fromlineno="205" tolineno="205" lineno="205" op="%" left="'tar -czf %s %s'" right="(ud.localpath, module)">
                <Const fromlineno="205" tolineno="205" lineno="205" type="str">'tar -czf %s %s'</Const>
                <Tuple fromlineno="205" tolineno="205" lineno="205">
                  <Getattr fromlineno="205" tolineno="205" lineno="205" attrname="localpath" expr="ud">
                    <Name fromlineno="205" tolineno="205" lineno="205" name="ud"/>
                  </Getattr>
                  <Name fromlineno="205" tolineno="205" lineno="205" name="module"/>
                </Tuple>
              </BinOp>
            </CallFunc>
          </Assign>
          <If fromlineno="206" tolineno="211" lineno="206">
            <Compare fromlineno="206" tolineno="206" lineno="206" op="('!=', &lt;Const(int) l.206 [bb.fetch.perforce] at Ox9e1d70c&gt;)">
              <Name fromlineno="206" tolineno="206" lineno="206" name="myret"/>
              <Const fromlineno="206" tolineno="206" lineno="206" type="int">0</Const>
            </Compare>
            <TryExcept fromlineno="207" tolineno="210" lineno="207">
              <Discard fromlineno="208" tolineno="208" lineno="208">
                <CallFunc fromlineno="208" tolineno="208" lineno="208" func="Getattr(unlink)">
                  <Getattr fromlineno="208" tolineno="208" lineno="208" attrname="unlink" expr="os">
                    <Name fromlineno="208" tolineno="208" lineno="208" name="os"/>
                  </Getattr>
                  <Getattr fromlineno="208" tolineno="208" lineno="208" attrname="localpath" expr="ud">
                    <Name fromlineno="208" tolineno="208" lineno="208" name="ud"/>
                  </Getattr>
                </CallFunc>
              </Discard>
              <ExceptHandler fromlineno="209" tolineno="210" lineno="209">
                <Name fromlineno="209" tolineno="209" lineno="209" name="OSError"/>
                <Pass fromlineno="210" tolineno="210" lineno="210"/>
              </ExceptHandler>
            </TryExcept>
            <Raise fromlineno="211" tolineno="211" lineno="211">
              <CallFunc fromlineno="211" tolineno="211" lineno="211" func="Name(FetchError)">
                <Name fromlineno="211" tolineno="211" lineno="211" name="FetchError"/>
                <Name fromlineno="211" tolineno="211" lineno="211" name="module"/>
              </CallFunc>
            </Raise>
          </If>
          <Discard fromlineno="213" tolineno="213" lineno="213">
            <CallFunc fromlineno="213" tolineno="213" lineno="213" func="Getattr(system)">
              <Getattr fromlineno="213" tolineno="213" lineno="213" attrname="system" expr="os">
                <Name fromlineno="213" tolineno="213" lineno="213" name="os"/>
              </Getattr>
              <BinOp fromlineno="213" tolineno="213" lineno="213" op="%" left="'rm -rf %s'" right="tmpfile">
                <Const fromlineno="213" tolineno="213" lineno="213" type="str">'rm -rf %s'</Const>
                <Name fromlineno="213" tolineno="213" lineno="213" name="tmpfile"/>
              </BinOp>
            </CallFunc>
          </Discard>
        </Function>
      </Class>
    </Module>
    <Module fromlineno="0" tolineno="155" lineno="0" name="bb.fetch.osc">
      <Import fromlineno="9" tolineno="9" lineno="9">
        <ImportName name="os"/>
      </Import>
      <Import fromlineno="10" tolineno="10" lineno="10">
        <ImportName name="sys"/>
      </Import>
      <Import fromlineno="11" tolineno="11" lineno="11">
        <ImportName name="bb"/>
      </Import>
      <From fromlineno="12" tolineno="12" lineno="12" modname="bb">
        <ImportName name="data"/>
      </From>
      <From fromlineno="13" tolineno="13" lineno="13" modname="bb.fetch">
        <ImportName name="Fetch"/>
      </From>
      <From fromlineno="14" tolineno="14" lineno="14" modname="bb.fetch">
        <ImportName name="FetchError"/>
      </From>
      <From fromlineno="15" tolineno="15" lineno="15" modname="bb.fetch">
        <ImportName name="MissingParameterError"/>
      </From>
      <From fromlineno="16" tolineno="16" lineno="16" modname="bb.fetch">
        <ImportName name="runfetchcmd"/>
      </From>
      <Class fromlineno="18" tolineno="155" lineno="18">
        <Name fromlineno="18" tolineno="18" lineno="18" name="Fetch"/>
        <Function fromlineno="22" tolineno="26" lineno="22">
          <Arguments fromlineno="22" tolineno="22" lineno="None" format_args="self, url, ud, d">
            <AssName fromlineno="22" tolineno="22" lineno="22" name="self"/>
            <AssName fromlineno="22" tolineno="22" lineno="22" name="url"/>
            <AssName fromlineno="22" tolineno="22" lineno="22" name="ud"/>
            <AssName fromlineno="22" tolineno="22" lineno="22" name="d"/>
          </Arguments>
          <Return fromlineno="26" tolineno="26" lineno="26">
            <Compare fromlineno="26" tolineno="26" lineno="26" op="('in', &lt;List(list) l.26 [bb.fetch.osc] at Ox9b881cc&gt;)">
              <Getattr fromlineno="26" tolineno="26" lineno="26" attrname="type" expr="ud">
                <Name fromlineno="26" tolineno="26" lineno="26" name="ud"/>
              </Getattr>
              <List fromlineno="26" tolineno="26" lineno="26">
                <Const fromlineno="26" tolineno="26" lineno="26" type="str">'osc'</Const>
              </List>
            </Compare>
          </Return>
        </Function>
        <Function fromlineno="28" tolineno="54" lineno="28">
          <Arguments fromlineno="28" tolineno="28" lineno="None" format_args="self, url, ud, d">
            <AssName fromlineno="28" tolineno="28" lineno="28" name="self"/>
            <AssName fromlineno="28" tolineno="28" lineno="28" name="url"/>
            <AssName fromlineno="28" tolineno="28" lineno="28" name="ud"/>
            <AssName fromlineno="28" tolineno="28" lineno="28" name="d"/>
          </Arguments>
          <If fromlineno="29" tolineno="30" lineno="29">
            <UnaryOp fromlineno="29" tolineno="29" lineno="29">
              <Compare fromlineno="29" tolineno="29" lineno="29" op="('in', &lt;Getattr(parm) l.29 [bb.fetch.osc] at Ox9b888cc&gt;)">
                <Const fromlineno="29" tolineno="29" lineno="29" type="str">'module'</Const>
                <Getattr fromlineno="29" tolineno="29" lineno="29" attrname="parm" expr="ud">
                  <Name fromlineno="29" tolineno="29" lineno="29" name="ud"/>
                </Getattr>
              </Compare>
            </UnaryOp>
            <Raise fromlineno="30" tolineno="30" lineno="30">
              <CallFunc fromlineno="30" tolineno="30" lineno="30" func="Name(MissingParameterError)">
                <Name fromlineno="30" tolineno="30" lineno="30" name="MissingParameterError"/>
                <Const fromlineno="30" tolineno="30" lineno="30" type="str">"osc method needs a 'module' parameter."</Const>
              </CallFunc>
            </Raise>
          </If>
          <Assign fromlineno="32" tolineno="32" lineno="32" targets="[&lt;AssAttr(module) l.32 [bb.fetch.osc] at Ox9b88e8c&gt;]" value="ud.parm['module']">
            <AssAttr fromlineno="32" tolineno="32" lineno="32" attrname="module" expr="ud">
              <Name fromlineno="32" tolineno="32" lineno="32" name="ud"/>
            </AssAttr>
            <Subscript fromlineno="32" tolineno="32" lineno="32">
              <Getattr fromlineno="32" tolineno="32" lineno="32" attrname="parm" expr="ud">
                <Name fromlineno="32" tolineno="32" lineno="32" name="ud"/>
              </Getattr>
              <Index fromlineno="32" tolineno="32" lineno="None">
                <Const fromlineno="32" tolineno="32" lineno="32" type="str">'module'</Const>
              </Index>
            </Subscript>
          </Assign>
          <Assign fromlineno="35" tolineno="35" lineno="35" targets="[&lt;AssName(relpath) l.35 [bb.fetch.osc] at Ox9b88b6c&gt;]" value="ud.path">
            <AssName fromlineno="35" tolineno="35" lineno="35" name="relpath"/>
            <Getattr fromlineno="35" tolineno="35" lineno="35" attrname="path" expr="ud">
              <Name fromlineno="35" tolineno="35" lineno="35" name="ud"/>
            </Getattr>
          </Assign>
          <If fromlineno="36" tolineno="38" lineno="36">
            <CallFunc fromlineno="36" tolineno="36" lineno="36" func="Getattr(startswith)">
              <Getattr fromlineno="36" tolineno="36" lineno="36" attrname="startswith" expr="relpath">
                <Name fromlineno="36" tolineno="36" lineno="36" name="relpath"/>
              </Getattr>
              <Const fromlineno="36" tolineno="36" lineno="36" type="str">'/'</Const>
            </CallFunc>
            <Assign fromlineno="38" tolineno="38" lineno="38" targets="[&lt;AssName(relpath) l.38 [bb.fetch.osc] at Ox9b88f2c&gt;]" value="relpath[1:]">
              <AssName fromlineno="38" tolineno="38" lineno="38" name="relpath"/>
              <Subscript fromlineno="38" tolineno="38" lineno="38">
                <Name fromlineno="38" tolineno="38" lineno="38" name="relpath"/>
                <Slice fromlineno="38" tolineno="38" lineno="None">
                  <Const fromlineno="38" tolineno="38" lineno="38" type="int">1</Const>
                </Slice>
              </Subscript>
            </Assign>
          </If>
          <Assign fromlineno="39" tolineno="39" lineno="39" targets="[&lt;AssAttr(pkgdir) l.39 [bb.fetch.osc] at Ox9b8d5cc&gt;]" value="os.path.join(data.expand('${OSCDIR}', d), ud.host)">
            <AssAttr fromlineno="39" tolineno="39" lineno="39" attrname="pkgdir" expr="ud">
              <Name fromlineno="39" tolineno="39" lineno="39" name="ud"/>
            </AssAttr>
            <CallFunc fromlineno="39" tolineno="39" lineno="39" func="Getattr(join)">
              <Getattr fromlineno="39" tolineno="39" lineno="39" attrname="join" expr="os.path">
                <Getattr fromlineno="39" tolineno="39" lineno="39" attrname="path" expr="os">
                  <Name fromlineno="39" tolineno="39" lineno="39" name="os"/>
                </Getattr>
              </Getattr>
              <CallFunc fromlineno="39" tolineno="39" lineno="39" func="Getattr(expand)">
                <Getattr fromlineno="39" tolineno="39" lineno="39" attrname="expand" expr="data">
                  <Name fromlineno="39" tolineno="39" lineno="39" name="data"/>
                </Getattr>
                <Const fromlineno="39" tolineno="39" lineno="39" type="str">'${OSCDIR}'</Const>
                <Name fromlineno="39" tolineno="39" lineno="39" name="d"/>
              </CallFunc>
              <Getattr fromlineno="39" tolineno="39" lineno="39" attrname="host" expr="ud">
                <Name fromlineno="39" tolineno="39" lineno="39" name="ud"/>
              </Getattr>
            </CallFunc>
          </Assign>
          <Assign fromlineno="40" tolineno="40" lineno="40" targets="[&lt;AssAttr(moddir) l.40 [bb.fetch.osc] at Ox9b8d06c&gt;]" value="os.path.join(ud.pkgdir, relpath, ud.module)">
            <AssAttr fromlineno="40" tolineno="40" lineno="40" attrname="moddir" expr="ud">
              <Name fromlineno="40" tolineno="40" lineno="40" name="ud"/>
            </AssAttr>
            <CallFunc fromlineno="40" tolineno="40" lineno="40" func="Getattr(join)">
              <Getattr fromlineno="40" tolineno="40" lineno="40" attrname="join" expr="os.path">
                <Getattr fromlineno="40" tolineno="40" lineno="40" attrname="path" expr="os">
                  <Name fromlineno="40" tolineno="40" lineno="40" name="os"/>
                </Getattr>
              </Getattr>
              <Getattr fromlineno="40" tolineno="40" lineno="40" attrname="pkgdir" expr="ud">
                <Name fromlineno="40" tolineno="40" lineno="40" name="ud"/>
              </Getattr>
              <Name fromlineno="40" tolineno="40" lineno="40" name="relpath"/>
              <Getattr fromlineno="40" tolineno="40" lineno="40" attrname="module" expr="ud">
                <Name fromlineno="40" tolineno="40" lineno="40" name="ud"/>
              </Getattr>
            </CallFunc>
          </Assign>
          <If fromlineno="42" tolineno="50" lineno="42">
            <Compare fromlineno="42" tolineno="42" lineno="42" op="('in', &lt;Getattr(parm) l.42 [bb.fetch.osc] at Ox9b8d44c&gt;)">
              <Const fromlineno="42" tolineno="42" lineno="42" type="str">'rev'</Const>
              <Getattr fromlineno="42" tolineno="42" lineno="42" attrname="parm" expr="ud">
                <Name fromlineno="42" tolineno="42" lineno="42" name="ud"/>
              </Getattr>
            </Compare>
            <Assign fromlineno="43" tolineno="43" lineno="43" targets="[&lt;AssAttr(revision) l.43 [bb.fetch.osc] at Ox9b8d52c&gt;]" value="ud.parm['rev']">
              <AssAttr fromlineno="43" tolineno="43" lineno="43" attrname="revision" expr="ud">
                <Name fromlineno="43" tolineno="43" lineno="43" name="ud"/>
              </AssAttr>
              <Subscript fromlineno="43" tolineno="43" lineno="43">
                <Getattr fromlineno="43" tolineno="43" lineno="43" attrname="parm" expr="ud">
                  <Name fromlineno="43" tolineno="43" lineno="43" name="ud"/>
                </Getattr>
                <Index fromlineno="43" tolineno="43" lineno="None">
                  <Const fromlineno="43" tolineno="43" lineno="43" type="str">'rev'</Const>
                </Index>
              </Subscript>
            </Assign>
            <Assign fromlineno="45" tolineno="45" lineno="45" targets="[&lt;AssName(pv) l.45 [bb.fetch.osc] at Ox9b8d8ac&gt;]" value="data.getVar('PV', d, 0)">
              <AssName fromlineno="45" tolineno="45" lineno="45" name="pv"/>
              <CallFunc fromlineno="45" tolineno="45" lineno="45" func="Getattr(getVar)">
                <Getattr fromlineno="45" tolineno="45" lineno="45" attrname="getVar" expr="data">
                  <Name fromlineno="45" tolineno="45" lineno="45" name="data"/>
                </Getattr>
                <Const fromlineno="45" tolineno="45" lineno="45" type="str">'PV'</Const>
                <Name fromlineno="45" tolineno="45" lineno="45" name="d"/>
                <Const fromlineno="45" tolineno="45" lineno="45" type="int">0</Const>
              </CallFunc>
            </Assign>
            <Assign fromlineno="46" tolineno="46" lineno="46" targets="[&lt;AssName(rev) l.46 [bb.fetch.osc] at Ox9b8d6cc&gt;]" value="Fetch.srcrev_internal_helper(ud, d)">
              <AssName fromlineno="46" tolineno="46" lineno="46" name="rev"/>
              <CallFunc fromlineno="46" tolineno="46" lineno="46" func="Getattr(srcrev_internal_helper)">
                <Getattr fromlineno="46" tolineno="46" lineno="46" attrname="srcrev_internal_helper" expr="Fetch">
                  <Name fromlineno="46" tolineno="46" lineno="46" name="Fetch"/>
                </Getattr>
                <Name fromlineno="46" tolineno="46" lineno="46" name="ud"/>
                <Name fromlineno="46" tolineno="46" lineno="46" name="d"/>
              </CallFunc>
            </Assign>
            <If fromlineno="47" tolineno="50" lineno="47">
              <BoolOp fromlineno="47" tolineno="47" lineno="47" op="and" values="rev,rev != True,">
                <Name fromlineno="47" tolineno="47" lineno="47" name="rev"/>
                <Compare fromlineno="47" tolineno="47" lineno="47" op="('!=', &lt;Const(bool) l.47 [bb.fetch.osc] at Ox9b8ddec&gt;)">
                  <Name fromlineno="47" tolineno="47" lineno="47" name="rev"/>
                  <Const fromlineno="47" tolineno="47" lineno="47" type="bool">True</Const>
                </Compare>
              </BoolOp>
              <Assign fromlineno="48" tolineno="48" lineno="48" targets="[&lt;AssAttr(revision) l.48 [bb.fetch.osc] at Ox9b8de8c&gt;]" value="rev">
                <AssAttr fromlineno="48" tolineno="48" lineno="48" attrname="revision" expr="ud">
                  <Name fromlineno="48" tolineno="48" lineno="48" name="ud"/>
                </AssAttr>
                <Name fromlineno="48" tolineno="48" lineno="48" name="rev"/>
              </Assign>
              <Assign fromlineno="50" tolineno="50" lineno="50" targets="[&lt;AssAttr(revision) l.50 [bb.fetch.osc] at Ox9b8df6c&gt;]" value="''">
                <AssAttr fromlineno="50" tolineno="50" lineno="50" attrname="revision" expr="ud">
                  <Name fromlineno="50" tolineno="50" lineno="50" name="ud"/>
                </AssAttr>
                <Const fromlineno="50" tolineno="50" lineno="50" type="str">''</Const>
              </Assign>
            </If>
          </If>
          <Assign fromlineno="52" tolineno="52" lineno="52" targets="[&lt;AssAttr(localfile) l.52 [bb.fetch.osc] at Ox9b8dfcc&gt;]" value="data.expand(('%s_%s_%s.tar.gz') % ((ud.module.replace('/', '.'), ud.path.replace('/', '.'), ud.revision)), d)">
            <AssAttr fromlineno="52" tolineno="52" lineno="52" attrname="localfile" expr="ud">
              <Name fromlineno="52" tolineno="52" lineno="52" name="ud"/>
            </AssAttr>
            <CallFunc fromlineno="52" tolineno="52" lineno="52" func="Getattr(expand)">
              <Getattr fromlineno="52" tolineno="52" lineno="52" attrname="expand" expr="data">
                <Name fromlineno="52" tolineno="52" lineno="52" name="data"/>
              </Getattr>
              <BinOp fromlineno="52" tolineno="52" lineno="52" op="%" left="'%s_%s_%s.tar.gz'" right="(ud.module.replace('/', '.'), ud.path.replace('/', '.'), ud.revision)">
                <Const fromlineno="52" tolineno="52" lineno="52" type="str">'%s_%s_%s.tar.gz'</Const>
                <Tuple fromlineno="52" tolineno="52" lineno="52">
                  <CallFunc fromlineno="52" tolineno="52" lineno="52" func="Getattr(replace)">
                    <Getattr fromlineno="52" tolineno="52" lineno="52" attrname="replace" expr="ud.module">
                      <Getattr fromlineno="52" tolineno="52" lineno="52" attrname="module" expr="ud">
                        <Name fromlineno="52" tolineno="52" lineno="52" name="ud"/>
                      </Getattr>
                    </Getattr>
                    <Const fromlineno="52" tolineno="52" lineno="52" type="str">'/'</Const>
                    <Const fromlineno="52" tolineno="52" lineno="52" type="str">'.'</Const>
                  </CallFunc>
                  <CallFunc fromlineno="52" tolineno="52" lineno="52" func="Getattr(replace)">
                    <Getattr fromlineno="52" tolineno="52" lineno="52" attrname="replace" expr="ud.path">
                      <Getattr fromlineno="52" tolineno="52" lineno="52" attrname="path" expr="ud">
                        <Name fromlineno="52" tolineno="52" lineno="52" name="ud"/>
                      </Getattr>
                    </Getattr>
                    <Const fromlineno="52" tolineno="52" lineno="52" type="str">'/'</Const>
                    <Const fromlineno="52" tolineno="52" lineno="52" type="str">'.'</Const>
                  </CallFunc>
                  <Getattr fromlineno="52" tolineno="52" lineno="52" attrname="revision" expr="ud">
                    <Name fromlineno="52" tolineno="52" lineno="52" name="ud"/>
                  </Getattr>
                </Tuple>
              </BinOp>
              <Name fromlineno="52" tolineno="52" lineno="52" name="d"/>
            </CallFunc>
          </Assign>
          <Return fromlineno="54" tolineno="54" lineno="54">
            <CallFunc fromlineno="54" tolineno="54" lineno="54" func="Getattr(join)">
              <Getattr fromlineno="54" tolineno="54" lineno="54" attrname="join" expr="os.path">
                <Getattr fromlineno="54" tolineno="54" lineno="54" attrname="path" expr="os">
                  <Name fromlineno="54" tolineno="54" lineno="54" name="os"/>
                </Getattr>
              </Getattr>
              <CallFunc fromlineno="54" tolineno="54" lineno="54" func="Getattr(getVar)">
                <Getattr fromlineno="54" tolineno="54" lineno="54" attrname="getVar" expr="data">
                  <Name fromlineno="54" tolineno="54" lineno="54" name="data"/>
                </Getattr>
                <Const fromlineno="54" tolineno="54" lineno="54" type="str">'DL_DIR'</Const>
                <Name fromlineno="54" tolineno="54" lineno="54" name="d"/>
                <Const fromlineno="54" tolineno="54" lineno="54" type="bool">True</Const>
              </CallFunc>
              <Getattr fromlineno="54" tolineno="54" lineno="54" attrname="localfile" expr="ud">
                <Name fromlineno="54" tolineno="54" lineno="54" name="ud"/>
              </Getattr>
            </CallFunc>
          </Return>
        </Function>
        <Function fromlineno="56" tolineno="87" lineno="56">
          <Arguments fromlineno="56" tolineno="56" lineno="None" format_args="self, ud, d, command">
            <AssName fromlineno="56" tolineno="56" lineno="56" name="self"/>
            <AssName fromlineno="56" tolineno="56" lineno="56" name="ud"/>
            <AssName fromlineno="56" tolineno="56" lineno="56" name="d"/>
            <AssName fromlineno="56" tolineno="56" lineno="56" name="command"/>
          </Arguments>
          <Assign fromlineno="62" tolineno="62" lineno="62" targets="[&lt;AssName(basecmd) l.62 [bb.fetch.osc] at Ox9b964ec&gt;]" value="data.expand('${FETCHCMD_osc}', d)">
            <AssName fromlineno="62" tolineno="62" lineno="62" name="basecmd"/>
            <CallFunc fromlineno="62" tolineno="62" lineno="62" func="Getattr(expand)">
              <Getattr fromlineno="62" tolineno="62" lineno="62" attrname="expand" expr="data">
                <Name fromlineno="62" tolineno="62" lineno="62" name="data"/>
              </Getattr>
              <Const fromlineno="62" tolineno="62" lineno="62" type="str">'${FETCHCMD_osc}'</Const>
              <Name fromlineno="62" tolineno="62" lineno="62" name="d"/>
            </CallFunc>
          </Assign>
          <Assign fromlineno="64" tolineno="64" lineno="64" targets="[&lt;AssName(proto) l.64 [bb.fetch.osc] at Ox9c3712c&gt;]" value="'ocs'">
            <AssName fromlineno="64" tolineno="64" lineno="64" name="proto"/>
            <Const fromlineno="64" tolineno="64" lineno="64" type="str">'ocs'</Const>
          </Assign>
          <If fromlineno="65" tolineno="66" lineno="65">
            <Compare fromlineno="65" tolineno="65" lineno="65" op="('in', &lt;Getattr(parm) l.65 [bb.fetch.osc] at Ox9c372ac&gt;)">
              <Const fromlineno="65" tolineno="65" lineno="65" type="str">'proto'</Const>
              <Getattr fromlineno="65" tolineno="65" lineno="65" attrname="parm" expr="ud">
                <Name fromlineno="65" tolineno="65" lineno="65" name="ud"/>
              </Getattr>
            </Compare>
            <Assign fromlineno="66" tolineno="66" lineno="66" targets="[&lt;AssName(proto) l.66 [bb.fetch.osc] at Ox9c375ac&gt;]" value="ud.parm['proto']">
              <AssName fromlineno="66" tolineno="66" lineno="66" name="proto"/>
              <Subscript fromlineno="66" tolineno="66" lineno="66">
                <Getattr fromlineno="66" tolineno="66" lineno="66" attrname="parm" expr="ud">
                  <Name fromlineno="66" tolineno="66" lineno="66" name="ud"/>
                </Getattr>
                <Index fromlineno="66" tolineno="66" lineno="None">
                  <Const fromlineno="66" tolineno="66" lineno="66" type="str">'proto'</Const>
                </Index>
              </Subscript>
            </Assign>
          </If>
          <Assign fromlineno="68" tolineno="68" lineno="68" targets="[&lt;AssName(options) l.68 [bb.fetch.osc] at Ox9c3750c&gt;]" value="[]">
            <AssName fromlineno="68" tolineno="68" lineno="68" name="options"/>
            <List fromlineno="68" tolineno="68" lineno="68"/>
          </Assign>
          <Assign fromlineno="70" tolineno="70" lineno="70" targets="[&lt;AssName(config) l.70 [bb.fetch.osc] at Ox9c3730c&gt;]" value="('-c %s') % (self.generate_config(ud, d))">
            <AssName fromlineno="70" tolineno="70" lineno="70" name="config"/>
            <BinOp fromlineno="70" tolineno="70" lineno="70" op="%" left="'-c %s'" right="self.generate_config(ud, d)">
              <Const fromlineno="70" tolineno="70" lineno="70" type="str">'-c %s'</Const>
              <CallFunc fromlineno="70" tolineno="70" lineno="70" func="Getattr(generate_config)">
                <Getattr fromlineno="70" tolineno="70" lineno="70" attrname="generate_config" expr="self">
                  <Name fromlineno="70" tolineno="70" lineno="70" name="self"/>
                </Getattr>
                <Name fromlineno="70" tolineno="70" lineno="70" name="ud"/>
                <Name fromlineno="70" tolineno="70" lineno="70" name="d"/>
              </CallFunc>
            </BinOp>
          </Assign>
          <If fromlineno="72" tolineno="73" lineno="72">
            <Getattr fromlineno="72" tolineno="72" lineno="72" attrname="revision" expr="ud">
              <Name fromlineno="72" tolineno="72" lineno="72" name="ud"/>
            </Getattr>
            <Discard fromlineno="73" tolineno="73" lineno="73">
              <CallFunc fromlineno="73" tolineno="73" lineno="73" func="Getattr(append)">
                <Getattr fromlineno="73" tolineno="73" lineno="73" attrname="append" expr="options">
                  <Name fromlineno="73" tolineno="73" lineno="73" name="options"/>
                </Getattr>
                <BinOp fromlineno="73" tolineno="73" lineno="73" op="%" left="'-r %s'" right="ud.revision">
                  <Const fromlineno="73" tolineno="73" lineno="73" type="str">'-r %s'</Const>
                  <Getattr fromlineno="73" tolineno="73" lineno="73" attrname="revision" expr="ud">
                    <Name fromlineno="73" tolineno="73" lineno="73" name="ud"/>
                  </Getattr>
                </BinOp>
              </CallFunc>
            </Discard>
          </If>
          <Assign fromlineno="75" tolineno="75" lineno="75" targets="[&lt;AssName(coroot) l.75 [bb.fetch.osc] at Ox9e1dc0c&gt;]" value="ud.path">
            <AssName fromlineno="75" tolineno="75" lineno="75" name="coroot"/>
            <Getattr fromlineno="75" tolineno="75" lineno="75" attrname="path" expr="ud">
              <Name fromlineno="75" tolineno="75" lineno="75" name="ud"/>
            </Getattr>
          </Assign>
          <If fromlineno="76" tolineno="78" lineno="76">
            <CallFunc fromlineno="76" tolineno="76" lineno="76" func="Getattr(startswith)">
              <Getattr fromlineno="76" tolineno="76" lineno="76" attrname="startswith" expr="coroot">
                <Name fromlineno="76" tolineno="76" lineno="76" name="coroot"/>
              </Getattr>
              <Const fromlineno="76" tolineno="76" lineno="76" type="str">'/'</Const>
            </CallFunc>
            <Assign fromlineno="78" tolineno="78" lineno="78" targets="[&lt;AssName(coroot) l.78 [bb.fetch.osc] at Ox9e1ddcc&gt;]" value="coroot[1:]">
              <AssName fromlineno="78" tolineno="78" lineno="78" name="coroot"/>
              <Subscript fromlineno="78" tolineno="78" lineno="78">
                <Name fromlineno="78" tolineno="78" lineno="78" name="coroot"/>
                <Slice fromlineno="78" tolineno="78" lineno="None">
                  <Const fromlineno="78" tolineno="78" lineno="78" type="int">1</Const>
                </Slice>
              </Subscript>
            </Assign>
          </If>
          <If fromlineno="80" tolineno="85" lineno="80">
            <Compare fromlineno="80" tolineno="80" lineno="80" op="('is', &lt;Const(str) l.80 [bb.fetch.osc] at Ox9e1df0c&gt;)">
              <Name fromlineno="80" tolineno="80" lineno="80" name="command"/>
              <Const fromlineno="80" tolineno="80" lineno="80" type="str">'fetch'</Const>
            </Compare>
            <Assign fromlineno="81" tolineno="81" lineno="81" targets="[&lt;AssName(osccmd) l.81 [bb.fetch.osc] at Ox9e1dfac&gt;]" value="('%s %s co %s/%s %s') % ((basecmd, config, coroot, ud.module, ' '.join(options)))">
              <AssName fromlineno="81" tolineno="81" lineno="81" name="osccmd"/>
              <BinOp fromlineno="81" tolineno="81" lineno="81" op="%" left="'%s %s co %s/%s %s'" right="(basecmd, config, coroot, ud.module, ' '.join(options))">
                <Const fromlineno="81" tolineno="81" lineno="81" type="str">'%s %s co %s/%s %s'</Const>
                <Tuple fromlineno="81" tolineno="81" lineno="81">
                  <Name fromlineno="81" tolineno="81" lineno="81" name="basecmd"/>
                  <Name fromlineno="81" tolineno="81" lineno="81" name="config"/>
                  <Name fromlineno="81" tolineno="81" lineno="81" name="coroot"/>
                  <Getattr fromlineno="81" tolineno="81" lineno="81" attrname="module" expr="ud">
                    <Name fromlineno="81" tolineno="81" lineno="81" name="ud"/>
                  </Getattr>
                  <CallFunc fromlineno="81" tolineno="81" lineno="81" func="Getattr(join)">
                    <Getattr fromlineno="81" tolineno="81" lineno="81" attrname="join" expr="' '">
                      <Const fromlineno="81" tolineno="81" lineno="81" type="str">' '</Const>
                    </Getattr>
                    <Name fromlineno="81" tolineno="81" lineno="81" name="options"/>
                  </CallFunc>
                </Tuple>
              </BinOp>
            </Assign>
            <If fromlineno="82" tolineno="85" lineno="82">
              <Compare fromlineno="82" tolineno="82" lineno="82" op="('is', &lt;Const(str) l.82 [bb.fetch.osc] at Ox9e022ac&gt;)">
                <Name fromlineno="82" tolineno="82" lineno="82" name="command"/>
                <Const fromlineno="82" tolineno="82" lineno="82" type="str">'update'</Const>
              </Compare>
              <Assign fromlineno="83" tolineno="83" lineno="83" targets="[&lt;AssName(osccmd) l.83 [bb.fetch.osc] at Ox9e0234c&gt;]" value="('%s %s up %s') % ((basecmd, config, ' '.join(options)))">
                <AssName fromlineno="83" tolineno="83" lineno="83" name="osccmd"/>
                <BinOp fromlineno="83" tolineno="83" lineno="83" op="%" left="'%s %s up %s'" right="(basecmd, config, ' '.join(options))">
                  <Const fromlineno="83" tolineno="83" lineno="83" type="str">'%s %s up %s'</Const>
                  <Tuple fromlineno="83" tolineno="83" lineno="83">
                    <Name fromlineno="83" tolineno="83" lineno="83" name="basecmd"/>
                    <Name fromlineno="83" tolineno="83" lineno="83" name="config"/>
                    <CallFunc fromlineno="83" tolineno="83" lineno="83" func="Getattr(join)">
                      <Getattr fromlineno="83" tolineno="83" lineno="83" attrname="join" expr="' '">
                        <Const fromlineno="83" tolineno="83" lineno="83" type="str">' '</Const>
                      </Getattr>
                      <Name fromlineno="83" tolineno="83" lineno="83" name="options"/>
                    </CallFunc>
                  </Tuple>
                </BinOp>
              </Assign>
              <Raise fromlineno="85" tolineno="85" lineno="85">
                <CallFunc fromlineno="85" tolineno="85" lineno="85" func="Name(FetchError)">
                  <Name fromlineno="85" tolineno="85" lineno="85" name="FetchError"/>
                  <BinOp fromlineno="85" tolineno="85" lineno="85" op="%" left="'Invalid osc command %s'" right="command">
                    <Const fromlineno="85" tolineno="85" lineno="85" type="str">'Invalid osc command %s'</Const>
                    <Name fromlineno="85" tolineno="85" lineno="85" name="command"/>
                  </BinOp>
                </CallFunc>
              </Raise>
            </If>
          </If>
          <Return fromlineno="87" tolineno="87" lineno="87">
            <Name fromlineno="87" tolineno="87" lineno="87" name="osccmd"/>
          </Return>
        </Function>
        <Function fromlineno="89" tolineno="127" lineno="89">
          <Arguments fromlineno="89" tolineno="89" lineno="None" format_args="self, loc, ud, d">
            <AssName fromlineno="89" tolineno="89" lineno="89" name="self"/>
            <AssName fromlineno="89" tolineno="89" lineno="89" name="loc"/>
            <AssName fromlineno="89" tolineno="89" lineno="89" name="ud"/>
            <AssName fromlineno="89" tolineno="89" lineno="89" name="d"/>
          </Arguments>
          <If fromlineno="95" tolineno="97" lineno="95">
            <CallFunc fromlineno="95" tolineno="95" lineno="95" func="Getattr(try_mirror)">
              <Getattr fromlineno="95" tolineno="95" lineno="95" attrname="try_mirror" expr="Fetch">
                <Name fromlineno="95" tolineno="95" lineno="95" name="Fetch"/>
              </Getattr>
              <Name fromlineno="95" tolineno="95" lineno="95" name="d"/>
              <Getattr fromlineno="95" tolineno="95" lineno="95" attrname="localfile" expr="ud">
                <Name fromlineno="95" tolineno="95" lineno="95" name="ud"/>
              </Getattr>
            </CallFunc>
            <Discard fromlineno="96" tolineno="96" lineno="96">
              <CallFunc fromlineno="96" tolineno="96" lineno="96" func="Getattr(debug)">
                <Getattr fromlineno="96" tolineno="96" lineno="96" attrname="debug" expr="bb.msg">
                  <Getattr fromlineno="96" tolineno="96" lineno="96" attrname="msg" expr="bb">
                    <Name fromlineno="96" tolineno="96" lineno="96" name="bb"/>
                  </Getattr>
                </Getattr>
                <Const fromlineno="96" tolineno="96" lineno="96" type="int">1</Const>
                <Getattr fromlineno="96" tolineno="96" lineno="96" attrname="Fetcher" expr="bb.msg.domain">
                  <Getattr fromlineno="96" tolineno="96" lineno="96" attrname="domain" expr="bb.msg">
                    <Getattr fromlineno="96" tolineno="96" lineno="96" attrname="msg" expr="bb">
                      <Name fromlineno="96" tolineno="96" lineno="96" name="bb"/>
                    </Getattr>
                  </Getattr>
                </Getattr>
                <BinOp fromlineno="96" tolineno="96" lineno="96" op="%" left="'%s already exists or was mirrored, skipping osc checkout.'" right="ud.localpath">
                  <Const fromlineno="96" tolineno="96" lineno="96" type="str">'%s already exists or was mirrored, skipping osc checkout.'</Const>
                  <Getattr fromlineno="96" tolineno="96" lineno="96" attrname="localpath" expr="ud">
                    <Name fromlineno="96" tolineno="96" lineno="96" name="ud"/>
                  </Getattr>
                </BinOp>
              </CallFunc>
            </Discard>
            <Return fromlineno="97" tolineno="97" lineno="97"/>
          </If>
          <Discard fromlineno="99" tolineno="99" lineno="99">
            <CallFunc fromlineno="99" tolineno="99" lineno="99" func="Getattr(debug)">
              <Getattr fromlineno="99" tolineno="99" lineno="99" attrname="debug" expr="bb.msg">
                <Getattr fromlineno="99" tolineno="99" lineno="99" attrname="msg" expr="bb">
                  <Name fromlineno="99" tolineno="99" lineno="99" name="bb"/>
                </Getattr>
              </Getattr>
              <Const fromlineno="99" tolineno="99" lineno="99" type="int">2</Const>
              <Getattr fromlineno="99" tolineno="99" lineno="99" attrname="Fetcher" expr="bb.msg.domain">
                <Getattr fromlineno="99" tolineno="99" lineno="99" attrname="domain" expr="bb.msg">
                  <Getattr fromlineno="99" tolineno="99" lineno="99" attrname="msg" expr="bb">
                    <Name fromlineno="99" tolineno="99" lineno="99" name="bb"/>
                  </Getattr>
                </Getattr>
              </Getattr>
              <BinOp fromlineno="99" tolineno="99" lineno="99" op="+" left="(&quot;Fetch: checking for module directory '&quot;) + (ud.moddir)" right="&quot;'&quot;">
                <BinOp fromlineno="99" tolineno="99" lineno="99" op="+" left="&quot;Fetch: checking for module directory '&quot;" right="ud.moddir">
                  <Const fromlineno="99" tolineno="99" lineno="99" type="str">"Fetch: checking for module directory '"</Const>
                  <Getattr fromlineno="99" tolineno="99" lineno="99" attrname="moddir" expr="ud">
                    <Name fromlineno="99" tolineno="99" lineno="99" name="ud"/>
                  </Getattr>
                </BinOp>
                <Const fromlineno="99" tolineno="99" lineno="99" type="str">"'"</Const>
              </BinOp>
            </CallFunc>
          </Discard>
          <If fromlineno="101" tolineno="115" lineno="101">
            <CallFunc fromlineno="101" tolineno="101" lineno="101" func="Getattr(access)">
              <Getattr fromlineno="101" tolineno="101" lineno="101" attrname="access" expr="os">
                <Name fromlineno="101" tolineno="101" lineno="101" name="os"/>
              </Getattr>
              <CallFunc fromlineno="101" tolineno="101" lineno="101" func="Getattr(join)">
                <Getattr fromlineno="101" tolineno="101" lineno="101" attrname="join" expr="os.path">
                  <Getattr fromlineno="101" tolineno="101" lineno="101" attrname="path" expr="os">
                    <Name fromlineno="101" tolineno="101" lineno="101" name="os"/>
                  </Getattr>
                </Getattr>
                <CallFunc fromlineno="101" tolineno="101" lineno="101" func="Getattr(expand)">
                  <Getattr fromlineno="101" tolineno="101" lineno="101" attrname="expand" expr="data">
                    <Name fromlineno="101" tolineno="101" lineno="101" name="data"/>
                  </Getattr>
                  <Const fromlineno="101" tolineno="101" lineno="101" type="str">'${OSCDIR}'</Const>
                  <Name fromlineno="101" tolineno="101" lineno="101" name="d"/>
                </CallFunc>
                <Getattr fromlineno="101" tolineno="101" lineno="101" attrname="path" expr="ud">
                  <Name fromlineno="101" tolineno="101" lineno="101" name="ud"/>
                </Getattr>
                <Getattr fromlineno="101" tolineno="101" lineno="101" attrname="module" expr="ud">
                  <Name fromlineno="101" tolineno="101" lineno="101" name="ud"/>
                </Getattr>
              </CallFunc>
              <Getattr fromlineno="101" tolineno="101" lineno="101" attrname="R_OK" expr="os">
                <Name fromlineno="101" tolineno="101" lineno="101" name="os"/>
              </Getattr>
            </CallFunc>
            <Assign fromlineno="102" tolineno="102" lineno="102" targets="[&lt;AssName(oscupdatecmd) l.102 [bb.fetch.osc] at Ox9e02fcc&gt;]" value="self._buildosccommand(ud, d, 'update')">
              <AssName fromlineno="102" tolineno="102" lineno="102" name="oscupdatecmd"/>
              <CallFunc fromlineno="102" tolineno="102" lineno="102" func="Getattr(_buildosccommand)">
                <Getattr fromlineno="102" tolineno="102" lineno="102" attrname="_buildosccommand" expr="self">
                  <Name fromlineno="102" tolineno="102" lineno="102" name="self"/>
                </Getattr>
                <Name fromlineno="102" tolineno="102" lineno="102" name="ud"/>
                <Name fromlineno="102" tolineno="102" lineno="102" name="d"/>
                <Const fromlineno="102" tolineno="102" lineno="102" type="str">'update'</Const>
              </CallFunc>
            </Assign>
            <Discard fromlineno="103" tolineno="103" lineno="103">
              <CallFunc fromlineno="103" tolineno="103" lineno="103" func="Getattr(note)">
                <Getattr fromlineno="103" tolineno="103" lineno="103" attrname="note" expr="bb.msg">
                  <Getattr fromlineno="103" tolineno="103" lineno="103" attrname="msg" expr="bb">
                    <Name fromlineno="103" tolineno="103" lineno="103" name="bb"/>
                  </Getattr>
                </Getattr>
                <Const fromlineno="103" tolineno="103" lineno="103" type="int">1</Const>
                <Getattr fromlineno="103" tolineno="103" lineno="103" attrname="Fetcher" expr="bb.msg.domain">
                  <Getattr fromlineno="103" tolineno="103" lineno="103" attrname="domain" expr="bb.msg">
                    <Getattr fromlineno="103" tolineno="103" lineno="103" attrname="msg" expr="bb">
                      <Name fromlineno="103" tolineno="103" lineno="103" name="bb"/>
                    </Getattr>
                  </Getattr>
                </Getattr>
                <BinOp fromlineno="103" tolineno="103" lineno="103" op="+" left="'Update '" right="loc">
                  <Const fromlineno="103" tolineno="103" lineno="103" type="str">'Update '</Const>
                  <Name fromlineno="103" tolineno="103" lineno="103" name="loc"/>
                </BinOp>
              </CallFunc>
            </Discard>
            <Discard fromlineno="105" tolineno="105" lineno="105">
              <CallFunc fromlineno="105" tolineno="105" lineno="105" func="Getattr(chdir)">
                <Getattr fromlineno="105" tolineno="105" lineno="105" attrname="chdir" expr="os">
                  <Name fromlineno="105" tolineno="105" lineno="105" name="os"/>
                </Getattr>
                <Getattr fromlineno="105" tolineno="105" lineno="105" attrname="moddir" expr="ud">
                  <Name fromlineno="105" tolineno="105" lineno="105" name="ud"/>
                </Getattr>
              </CallFunc>
            </Discard>
            <Discard fromlineno="106" tolineno="106" lineno="106">
              <CallFunc fromlineno="106" tolineno="106" lineno="106" func="Getattr(debug)">
                <Getattr fromlineno="106" tolineno="106" lineno="106" attrname="debug" expr="bb.msg">
                  <Getattr fromlineno="106" tolineno="106" lineno="106" attrname="msg" expr="bb">
                    <Name fromlineno="106" tolineno="106" lineno="106" name="bb"/>
                  </Getattr>
                </Getattr>
                <Const fromlineno="106" tolineno="106" lineno="106" type="int">1</Const>
                <Getattr fromlineno="106" tolineno="106" lineno="106" attrname="Fetcher" expr="bb.msg.domain">
                  <Getattr fromlineno="106" tolineno="106" lineno="106" attrname="domain" expr="bb.msg">
                    <Getattr fromlineno="106" tolineno="106" lineno="106" attrname="msg" expr="bb">
                      <Name fromlineno="106" tolineno="106" lineno="106" name="bb"/>
                    </Getattr>
                  </Getattr>
                </Getattr>
                <BinOp fromlineno="106" tolineno="106" lineno="106" op="%" left="'Running %s'" right="oscupdatecmd">
                  <Const fromlineno="106" tolineno="106" lineno="106" type="str">'Running %s'</Const>
                  <Name fromlineno="106" tolineno="106" lineno="106" name="oscupdatecmd"/>
                </BinOp>
              </CallFunc>
            </Discard>
            <Discard fromlineno="107" tolineno="107" lineno="107">
              <CallFunc fromlineno="107" tolineno="107" lineno="107" func="Name(runfetchcmd)">
                <Name fromlineno="107" tolineno="107" lineno="107" name="runfetchcmd"/>
                <Name fromlineno="107" tolineno="107" lineno="107" name="oscupdatecmd"/>
                <Name fromlineno="107" tolineno="107" lineno="107" name="d"/>
              </CallFunc>
            </Discard>
            <Assign fromlineno="109" tolineno="109" lineno="109" targets="[&lt;AssName(oscfetchcmd) l.109 [bb.fetch.osc] at Ox9e2368c&gt;]" value="self._buildosccommand(ud, d, 'fetch')">
              <AssName fromlineno="109" tolineno="109" lineno="109" name="oscfetchcmd"/>
              <CallFunc fromlineno="109" tolineno="109" lineno="109" func="Getattr(_buildosccommand)">
                <Getattr fromlineno="109" tolineno="109" lineno="109" attrname="_buildosccommand" expr="self">
                  <Name fromlineno="109" tolineno="109" lineno="109" name="self"/>
                </Getattr>
                <Name fromlineno="109" tolineno="109" lineno="109" name="ud"/>
                <Name fromlineno="109" tolineno="109" lineno="109" name="d"/>
                <Const fromlineno="109" tolineno="109" lineno="109" type="str">'fetch'</Const>
              </CallFunc>
            </Assign>
            <Discard fromlineno="110" tolineno="110" lineno="110">
              <CallFunc fromlineno="110" tolineno="110" lineno="110" func="Getattr(note)">
                <Getattr fromlineno="110" tolineno="110" lineno="110" attrname="note" expr="bb.msg">
                  <Getattr fromlineno="110" tolineno="110" lineno="110" attrname="msg" expr="bb">
                    <Name fromlineno="110" tolineno="110" lineno="110" name="bb"/>
                  </Getattr>
                </Getattr>
                <Const fromlineno="110" tolineno="110" lineno="110" type="int">1</Const>
                <Getattr fromlineno="110" tolineno="110" lineno="110" attrname="Fetcher" expr="bb.msg.domain">
                  <Getattr fromlineno="110" tolineno="110" lineno="110" attrname="domain" expr="bb.msg">
                    <Getattr fromlineno="110" tolineno="110" lineno="110" attrname="msg" expr="bb">
                      <Name fromlineno="110" tolineno="110" lineno="110" name="bb"/>
                    </Getattr>
                  </Getattr>
                </Getattr>
                <BinOp fromlineno="110" tolineno="110" lineno="110" op="+" left="'Fetch '" right="loc">
                  <Const fromlineno="110" tolineno="110" lineno="110" type="str">'Fetch '</Const>
                  <Name fromlineno="110" tolineno="110" lineno="110" name="loc"/>
                </BinOp>
              </CallFunc>
            </Discard>
            <Discard fromlineno="112" tolineno="112" lineno="112">
              <CallFunc fromlineno="112" tolineno="112" lineno="112" func="Getattr(mkdirhier)">
                <Getattr fromlineno="112" tolineno="112" lineno="112" attrname="mkdirhier" expr="bb">
                  <Name fromlineno="112" tolineno="112" lineno="112" name="bb"/>
                </Getattr>
                <Getattr fromlineno="112" tolineno="112" lineno="112" attrname="pkgdir" expr="ud">
                  <Name fromlineno="112" tolineno="112" lineno="112" name="ud"/>
                </Getattr>
              </CallFunc>
            </Discard>
            <Discard fromlineno="113" tolineno="113" lineno="113">
              <CallFunc fromlineno="113" tolineno="113" lineno="113" func="Getattr(chdir)">
                <Getattr fromlineno="113" tolineno="113" lineno="113" attrname="chdir" expr="os">
                  <Name fromlineno="113" tolineno="113" lineno="113" name="os"/>
                </Getattr>
                <Getattr fromlineno="113" tolineno="113" lineno="113" attrname="pkgdir" expr="ud">
                  <Name fromlineno="113" tolineno="113" lineno="113" name="ud"/>
                </Getattr>
              </CallFunc>
            </Discard>
            <Discard fromlineno="114" tolineno="114" lineno="114">
              <CallFunc fromlineno="114" tolineno="114" lineno="114" func="Getattr(debug)">
                <Getattr fromlineno="114" tolineno="114" lineno="114" attrname="debug" expr="bb.msg">
                  <Getattr fromlineno="114" tolineno="114" lineno="114" attrname="msg" expr="bb">
                    <Name fromlineno="114" tolineno="114" lineno="114" name="bb"/>
                  </Getattr>
                </Getattr>
                <Const fromlineno="114" tolineno="114" lineno="114" type="int">1</Const>
                <Getattr fromlineno="114" tolineno="114" lineno="114" attrname="Fetcher" expr="bb.msg.domain">
                  <Getattr fromlineno="114" tolineno="114" lineno="114" attrname="domain" expr="bb.msg">
                    <Getattr fromlineno="114" tolineno="114" lineno="114" attrname="msg" expr="bb">
                      <Name fromlineno="114" tolineno="114" lineno="114" name="bb"/>
                    </Getattr>
                  </Getattr>
                </Getattr>
                <BinOp fromlineno="114" tolineno="114" lineno="114" op="%" left="'Running %s'" right="oscfetchcmd">
                  <Const fromlineno="114" tolineno="114" lineno="114" type="str">'Running %s'</Const>
                  <Name fromlineno="114" tolineno="114" lineno="114" name="oscfetchcmd"/>
                </BinOp>
              </CallFunc>
            </Discard>
            <Discard fromlineno="115" tolineno="115" lineno="115">
              <CallFunc fromlineno="115" tolineno="115" lineno="115" func="Name(runfetchcmd)">
                <Name fromlineno="115" tolineno="115" lineno="115" name="runfetchcmd"/>
                <Name fromlineno="115" tolineno="115" lineno="115" name="oscfetchcmd"/>
                <Name fromlineno="115" tolineno="115" lineno="115" name="d"/>
              </CallFunc>
            </Discard>
          </If>
          <Discard fromlineno="117" tolineno="117" lineno="117">
            <CallFunc fromlineno="117" tolineno="117" lineno="117" func="Getattr(chdir)">
              <Getattr fromlineno="117" tolineno="117" lineno="117" attrname="chdir" expr="os">
                <Name fromlineno="117" tolineno="117" lineno="117" name="os"/>
              </Getattr>
              <CallFunc fromlineno="117" tolineno="117" lineno="117" func="Getattr(join)">
                <Getattr fromlineno="117" tolineno="117" lineno="117" attrname="join" expr="os.path">
                  <Getattr fromlineno="117" tolineno="117" lineno="117" attrname="path" expr="os">
                    <Name fromlineno="117" tolineno="117" lineno="117" name="os"/>
                  </Getattr>
                </Getattr>
                <BinOp fromlineno="117" tolineno="117" lineno="117" op="+" left="ud.pkgdir" right="ud.path">
                  <Getattr fromlineno="117" tolineno="117" lineno="117" attrname="pkgdir" expr="ud">
                    <Name fromlineno="117" tolineno="117" lineno="117" name="ud"/>
                  </Getattr>
                  <Getattr fromlineno="117" tolineno="117" lineno="117" attrname="path" expr="ud">
                    <Name fromlineno="117" tolineno="117" lineno="117" name="ud"/>
                  </Getattr>
                </BinOp>
              </CallFunc>
            </CallFunc>
          </Discard>
          <TryExcept fromlineno="119" tolineno="127" lineno="119">
            <Discard fromlineno="120" tolineno="120" lineno="120">
              <CallFunc fromlineno="120" tolineno="120" lineno="120" func="Name(runfetchcmd)">
                <Name fromlineno="120" tolineno="120" lineno="120" name="runfetchcmd"/>
                <BinOp fromlineno="120" tolineno="120" lineno="120" op="%" left="'tar -czf %s %s'" right="(ud.localpath, ud.module)">
                  <Const fromlineno="120" tolineno="120" lineno="120" type="str">'tar -czf %s %s'</Const>
                  <Tuple fromlineno="120" tolineno="120" lineno="120">
                    <Getattr fromlineno="120" tolineno="120" lineno="120" attrname="localpath" expr="ud">
                      <Name fromlineno="120" tolineno="120" lineno="120" name="ud"/>
                    </Getattr>
                    <Getattr fromlineno="120" tolineno="120" lineno="120" attrname="module" expr="ud">
                      <Name fromlineno="120" tolineno="120" lineno="120" name="ud"/>
                    </Getattr>
                  </Tuple>
                </BinOp>
                <Name fromlineno="120" tolineno="120" lineno="120" name="d"/>
              </CallFunc>
            </Discard>
            <ExceptHandler fromlineno="121" tolineno="127" lineno="121">
              <Assign fromlineno="122" tolineno="122" lineno="122" targets="[&lt;Tuple(tuple) l.122 [bb.fetch.osc] at Ox9e2724c&gt;]" value="sys.exc_info()">
                <Tuple fromlineno="122" tolineno="122" lineno="122">
                  <AssName fromlineno="122" tolineno="122" lineno="122" name="t"/>
                  <AssName fromlineno="122" tolineno="122" lineno="122" name="v"/>
                  <AssName fromlineno="122" tolineno="122" lineno="122" name="tb"/>
                </Tuple>
                <CallFunc fromlineno="122" tolineno="122" lineno="122" func="Getattr(exc_info)">
                  <Getattr fromlineno="122" tolineno="122" lineno="122" attrname="exc_info" expr="sys">
                    <Name fromlineno="122" tolineno="122" lineno="122" name="sys"/>
                  </Getattr>
                </CallFunc>
              </Assign>
              <TryExcept fromlineno="123" tolineno="126" lineno="123">
                <Discard fromlineno="124" tolineno="124" lineno="124">
                  <CallFunc fromlineno="124" tolineno="124" lineno="124" func="Getattr(unlink)">
                    <Getattr fromlineno="124" tolineno="124" lineno="124" attrname="unlink" expr="os">
                      <Name fromlineno="124" tolineno="124" lineno="124" name="os"/>
                    </Getattr>
                    <Getattr fromlineno="124" tolineno="124" lineno="124" attrname="localpath" expr="ud">
                      <Name fromlineno="124" tolineno="124" lineno="124" name="ud"/>
                    </Getattr>
                  </CallFunc>
                </Discard>
                <ExceptHandler fromlineno="125" tolineno="126" lineno="125">
                  <Name fromlineno="125" tolineno="125" lineno="125" name="OSError"/>
                  <Pass fromlineno="126" tolineno="126" lineno="126"/>
                </ExceptHandler>
              </TryExcept>
              <Raise fromlineno="127" tolineno="127" lineno="127">
                <Name fromlineno="127" tolineno="127" lineno="127" name="t"/>
                <Name fromlineno="127" tolineno="127" lineno="127" name="v"/>
                <Name fromlineno="127" tolineno="127" lineno="127" name="tb"/>
              </Raise>
            </ExceptHandler>
          </TryExcept>
        </Function>
        <Function fromlineno="129" tolineno="130" lineno="129">
          <Arguments fromlineno="129" tolineno="129" lineno="None" format_args="self">
            <AssName fromlineno="129" tolineno="129" lineno="129" name="self"/>
          </Arguments>
          <Return fromlineno="130" tolineno="130" lineno="130">
            <Const fromlineno="130" tolineno="130" lineno="130" type="bool">False</Const>
          </Return>
        </Function>
        <Function fromlineno="132" tolineno="155" lineno="132">
          <Arguments fromlineno="132" tolineno="132" lineno="None" format_args="self, ud, d">
            <AssName fromlineno="132" tolineno="132" lineno="132" name="self"/>
            <AssName fromlineno="132" tolineno="132" lineno="132" name="ud"/>
            <AssName fromlineno="132" tolineno="132" lineno="132" name="d"/>
          </Arguments>
          <Assign fromlineno="137" tolineno="137" lineno="137" targets="[&lt;AssName(config_path) l.137 [bb.fetch.osc] at Ox9e278cc&gt;]" value="('%s/oscrc') % (data.expand('${OSCDIR}', d))">
            <AssName fromlineno="137" tolineno="137" lineno="137" name="config_path"/>
            <BinOp fromlineno="137" tolineno="137" lineno="137" op="%" left="'%s/oscrc'" right="data.expand('${OSCDIR}', d)">
              <Const fromlineno="137" tolineno="137" lineno="137" type="str">'%s/oscrc'</Const>
              <CallFunc fromlineno="137" tolineno="137" lineno="137" func="Getattr(expand)">
                <Getattr fromlineno="137" tolineno="137" lineno="137" attrname="expand" expr="data">
                  <Name fromlineno="137" tolineno="137" lineno="137" name="data"/>
                </Getattr>
                <Const fromlineno="137" tolineno="137" lineno="137" type="str">'${OSCDIR}'</Const>
                <Name fromlineno="137" tolineno="137" lineno="137" name="d"/>
              </CallFunc>
            </BinOp>
          </Assign>
          <If fromlineno="138" tolineno="139" lineno="138">
            <CallFunc fromlineno="138" tolineno="138" lineno="138" func="Getattr(exists)">
              <Getattr fromlineno="138" tolineno="138" lineno="138" attrname="exists" expr="os.path">
                <Getattr fromlineno="138" tolineno="138" lineno="138" attrname="path" expr="os">
                  <Name fromlineno="138" tolineno="138" lineno="138" name="os"/>
                </Getattr>
              </Getattr>
              <Name fromlineno="138" tolineno="138" lineno="138" name="config_path"/>
            </CallFunc>
            <Discard fromlineno="139" tolineno="139" lineno="139">
              <CallFunc fromlineno="139" tolineno="139" lineno="139" func="Getattr(remove)">
                <Getattr fromlineno="139" tolineno="139" lineno="139" attrname="remove" expr="os">
                  <Name fromlineno="139" tolineno="139" lineno="139" name="os"/>
                </Getattr>
                <Name fromlineno="139" tolineno="139" lineno="139" name="config_path"/>
              </CallFunc>
            </Discard>
          </If>
          <Assign fromlineno="141" tolineno="141" lineno="141" targets="[&lt;AssName(f) l.141 [bb.fetch.osc] at Ox9e27c2c&gt;]" value="open(config_path, 'w')">
            <AssName fromlineno="141" tolineno="141" lineno="141" name="f"/>
            <CallFunc fromlineno="141" tolineno="141" lineno="141" func="Name(open)">
              <Name fromlineno="141" tolineno="141" lineno="141" name="open"/>
              <Name fromlineno="141" tolineno="141" lineno="141" name="config_path"/>
              <Const fromlineno="141" tolineno="141" lineno="141" type="str">'w'</Const>
            </CallFunc>
          </Assign>
          <Discard fromlineno="142" tolineno="142" lineno="142">
            <CallFunc fromlineno="142" tolineno="142" lineno="142" func="Getattr(write)">
              <Getattr fromlineno="142" tolineno="142" lineno="142" attrname="write" expr="f">
                <Name fromlineno="142" tolineno="142" lineno="142" name="f"/>
              </Getattr>
              <Const fromlineno="142" tolineno="142" lineno="142" type="str">'[general]\n'</Const>
            </CallFunc>
          </Discard>
          <Discard fromlineno="143" tolineno="143" lineno="143">
            <CallFunc fromlineno="143" tolineno="143" lineno="143" func="Getattr(write)">
              <Getattr fromlineno="143" tolineno="143" lineno="143" attrname="write" expr="f">
                <Name fromlineno="143" tolineno="143" lineno="143" name="f"/>
              </Getattr>
              <BinOp fromlineno="143" tolineno="143" lineno="143" op="%" left="'apisrv = %s\n'" right="ud.host">
                <Const fromlineno="143" tolineno="143" lineno="143" type="str">'apisrv = %s\n'</Const>
                <Getattr fromlineno="143" tolineno="143" lineno="143" attrname="host" expr="ud">
                  <Name fromlineno="143" tolineno="143" lineno="143" name="ud"/>
                </Getattr>
              </BinOp>
            </CallFunc>
          </Discard>
          <Discard fromlineno="144" tolineno="144" lineno="144">
            <CallFunc fromlineno="144" tolineno="144" lineno="144" func="Getattr(write)">
              <Getattr fromlineno="144" tolineno="144" lineno="144" attrname="write" expr="f">
                <Name fromlineno="144" tolineno="144" lineno="144" name="f"/>
              </Getattr>
              <Const fromlineno="144" tolineno="144" lineno="144" type="str">'scheme = http\n'</Const>
            </CallFunc>
          </Discard>
          <Discard fromlineno="145" tolineno="145" lineno="145">
            <CallFunc fromlineno="145" tolineno="145" lineno="145" func="Getattr(write)">
              <Getattr fromlineno="145" tolineno="145" lineno="145" attrname="write" expr="f">
                <Name fromlineno="145" tolineno="145" lineno="145" name="f"/>
              </Getattr>
              <Const fromlineno="145" tolineno="145" lineno="145" type="str">'su-wrapper = su -c\n'</Const>
            </CallFunc>
          </Discard>
          <Discard fromlineno="146" tolineno="146" lineno="146">
            <CallFunc fromlineno="146" tolineno="146" lineno="146" func="Getattr(write)">
              <Getattr fromlineno="146" tolineno="146" lineno="146" attrname="write" expr="f">
                <Name fromlineno="146" tolineno="146" lineno="146" name="f"/>
              </Getattr>
              <BinOp fromlineno="146" tolineno="146" lineno="146" op="%" left="'build-root = %s\n'" right="data.expand('${WORKDIR}', d)">
                <Const fromlineno="146" tolineno="146" lineno="146" type="str">'build-root = %s\n'</Const>
                <CallFunc fromlineno="146" tolineno="146" lineno="146" func="Getattr(expand)">
                  <Getattr fromlineno="146" tolineno="146" lineno="146" attrname="expand" expr="data">
                    <Name fromlineno="146" tolineno="146" lineno="146" name="data"/>
                  </Getattr>
                  <Const fromlineno="146" tolineno="146" lineno="146" type="str">'${WORKDIR}'</Const>
                  <Name fromlineno="146" tolineno="146" lineno="146" name="d"/>
                </CallFunc>
              </BinOp>
            </CallFunc>
          </Discard>
          <Discard fromlineno="147" tolineno="147" lineno="147">
            <CallFunc fromlineno="147" tolineno="147" lineno="147" func="Getattr(write)">
              <Getattr fromlineno="147" tolineno="147" lineno="147" attrname="write" expr="f">
                <Name fromlineno="147" tolineno="147" lineno="147" name="f"/>
              </Getattr>
              <Const fromlineno="147" tolineno="147" lineno="147" type="str">'urllist = http://moblin-obs.jf.intel.com:8888/build/%(project)s/%(repository)s/%(buildarch)s/:full/%(name)s.rpm\n'</Const>
            </CallFunc>
          </Discard>
          <Discard fromlineno="148" tolineno="148" lineno="148">
            <CallFunc fromlineno="148" tolineno="148" lineno="148" func="Getattr(write)">
              <Getattr fromlineno="148" tolineno="148" lineno="148" attrname="write" expr="f">
                <Name fromlineno="148" tolineno="148" lineno="148" name="f"/>
              </Getattr>
              <Const fromlineno="148" tolineno="148" lineno="148" type="str">'extra-pkgs = gzip\n'</Const>
            </CallFunc>
          </Discard>
          <Discard fromlineno="149" tolineno="149" lineno="149">
            <CallFunc fromlineno="149" tolineno="149" lineno="149" func="Getattr(write)">
              <Getattr fromlineno="149" tolineno="149" lineno="149" attrname="write" expr="f">
                <Name fromlineno="149" tolineno="149" lineno="149" name="f"/>
              </Getattr>
              <Const fromlineno="149" tolineno="149" lineno="149" type="str">'\n'</Const>
            </CallFunc>
          </Discard>
          <Discard fromlineno="150" tolineno="150" lineno="150">
            <CallFunc fromlineno="150" tolineno="150" lineno="150" func="Getattr(write)">
              <Getattr fromlineno="150" tolineno="150" lineno="150" attrname="write" expr="f">
                <Name fromlineno="150" tolineno="150" lineno="150" name="f"/>
              </Getattr>
              <BinOp fromlineno="150" tolineno="150" lineno="150" op="%" left="'[%s]\n'" right="ud.host">
                <Const fromlineno="150" tolineno="150" lineno="150" type="str">'[%s]\n'</Const>
                <Getattr fromlineno="150" tolineno="150" lineno="150" attrname="host" expr="ud">
                  <Name fromlineno="150" tolineno="150" lineno="150" name="ud"/>
                </Getattr>
              </BinOp>
            </CallFunc>
          </Discard>
          <Discard fromlineno="151" tolineno="151" lineno="151">
            <CallFunc fromlineno="151" tolineno="151" lineno="151" func="Getattr(write)">
              <Getattr fromlineno="151" tolineno="151" lineno="151" attrname="write" expr="f">
                <Name fromlineno="151" tolineno="151" lineno="151" name="f"/>
              </Getattr>
              <BinOp fromlineno="151" tolineno="151" lineno="151" op="%" left="'user = %s\n'" right="ud.parm['user']">
                <Const fromlineno="151" tolineno="151" lineno="151" type="str">'user = %s\n'</Const>
                <Subscript fromlineno="151" tolineno="151" lineno="151">
                  <Getattr fromlineno="151" tolineno="151" lineno="151" attrname="parm" expr="ud">
                    <Name fromlineno="151" tolineno="151" lineno="151" name="ud"/>
                  </Getattr>
                  <Index fromlineno="151" tolineno="151" lineno="None">
                    <Const fromlineno="151" tolineno="151" lineno="151" type="str">'user'</Const>
                  </Index>
                </Subscript>
              </BinOp>
            </CallFunc>
          </Discard>
          <Discard fromlineno="152" tolineno="152" lineno="152">
            <CallFunc fromlineno="152" tolineno="152" lineno="152" func="Getattr(write)">
              <Getattr fromlineno="152" tolineno="152" lineno="152" attrname="write" expr="f">
                <Name fromlineno="152" tolineno="152" lineno="152" name="f"/>
              </Getattr>
              <BinOp fromlineno="152" tolineno="152" lineno="152" op="%" left="'pass = %s\n'" right="ud.parm['pswd']">
                <Const fromlineno="152" tolineno="152" lineno="152" type="str">'pass = %s\n'</Const>
                <Subscript fromlineno="152" tolineno="152" lineno="152">
                  <Getattr fromlineno="152" tolineno="152" lineno="152" attrname="parm" expr="ud">
                    <Name fromlineno="152" tolineno="152" lineno="152" name="ud"/>
                  </Getattr>
                  <Index fromlineno="152" tolineno="152" lineno="None">
                    <Const fromlineno="152" tolineno="152" lineno="152" type="str">'pswd'</Const>
                  </Index>
                </Subscript>
              </BinOp>
            </CallFunc>
          </Discard>
          <Discard fromlineno="153" tolineno="153" lineno="153">
            <CallFunc fromlineno="153" tolineno="153" lineno="153" func="Getattr(close)">
              <Getattr fromlineno="153" tolineno="153" lineno="153" attrname="close" expr="f">
                <Name fromlineno="153" tolineno="153" lineno="153" name="f"/>
              </Getattr>
            </CallFunc>
          </Discard>
          <Return fromlineno="155" tolineno="155" lineno="155">
            <Name fromlineno="155" tolineno="155" lineno="155" name="config_path"/>
          </Return>
        </Function>
      </Class>
    </Module>
    <Module fromlineno="0" tolineno="109" lineno="0" name="bb.fetch.svk">
      <Import fromlineno="28" tolineno="28" lineno="28">
        <ImportName name="os"/>
        <ImportName name="re"/>
      </Import>
      <Import fromlineno="29" tolineno="29" lineno="29">
        <ImportName name="bb"/>
      </Import>
      <From fromlineno="30" tolineno="30" lineno="30" modname="bb">
        <ImportName name="data"/>
      </From>
      <From fromlineno="31" tolineno="31" lineno="31" modname="bb.fetch">
        <ImportName name="Fetch"/>
      </From>
      <From fromlineno="32" tolineno="32" lineno="32" modname="bb.fetch">
        <ImportName name="FetchError"/>
      </From>
      <From fromlineno="33" tolineno="33" lineno="33" modname="bb.fetch">
        <ImportName name="MissingParameterError"/>
      </From>
      <Class fromlineno="35" tolineno="109" lineno="35">
        <Name fromlineno="35" tolineno="35" lineno="35" name="Fetch"/>
        <Function fromlineno="37" tolineno="41" lineno="37">
          <Arguments fromlineno="37" tolineno="37" lineno="None" format_args="self, url, ud, d">
            <AssName fromlineno="37" tolineno="37" lineno="37" name="self"/>
            <AssName fromlineno="37" tolineno="37" lineno="37" name="url"/>
            <AssName fromlineno="37" tolineno="37" lineno="37" name="ud"/>
            <AssName fromlineno="37" tolineno="37" lineno="37" name="d"/>
          </Arguments>
          <Return fromlineno="41" tolineno="41" lineno="41">
            <Compare fromlineno="41" tolineno="41" lineno="41" op="('in', &lt;List(list) l.41 [bb.fetch.svk] at Ox9b73fec&gt;)">
              <Getattr fromlineno="41" tolineno="41" lineno="41" attrname="type" expr="ud">
                <Name fromlineno="41" tolineno="41" lineno="41" name="ud"/>
              </Getattr>
              <List fromlineno="41" tolineno="41" lineno="41">
                <Const fromlineno="41" tolineno="41" lineno="41" type="str">'svk'</Const>
              </List>
            </Compare>
          </Return>
        </Function>
        <Function fromlineno="43" tolineno="55" lineno="43">
          <Arguments fromlineno="43" tolineno="43" lineno="None" format_args="self, url, ud, d">
            <AssName fromlineno="43" tolineno="43" lineno="43" name="self"/>
            <AssName fromlineno="43" tolineno="43" lineno="43" name="url"/>
            <AssName fromlineno="43" tolineno="43" lineno="43" name="ud"/>
            <AssName fromlineno="43" tolineno="43" lineno="43" name="d"/>
          </Arguments>
          <If fromlineno="44" tolineno="47" lineno="44">
            <UnaryOp fromlineno="44" tolineno="44" lineno="44">
              <Compare fromlineno="44" tolineno="44" lineno="44" op="('in', &lt;Getattr(parm) l.44 [bb.fetch.svk] at Ox9b73b6c&gt;)">
                <Const fromlineno="44" tolineno="44" lineno="44" type="str">'module'</Const>
                <Getattr fromlineno="44" tolineno="44" lineno="44" attrname="parm" expr="ud">
                  <Name fromlineno="44" tolineno="44" lineno="44" name="ud"/>
                </Getattr>
              </Compare>
            </UnaryOp>
            <Raise fromlineno="45" tolineno="45" lineno="45">
              <CallFunc fromlineno="45" tolineno="45" lineno="45" func="Name(MissingParameterError)">
                <Name fromlineno="45" tolineno="45" lineno="45" name="MissingParameterError"/>
                <Const fromlineno="45" tolineno="45" lineno="45" type="str">"svk method needs a 'module' parameter"</Const>
              </CallFunc>
            </Raise>
            <Assign fromlineno="47" tolineno="47" lineno="47" targets="[&lt;AssAttr(module) l.47 [bb.fetch.svk] at Ox9b733cc&gt;]" value="ud.parm['module']">
              <AssAttr fromlineno="47" tolineno="47" lineno="47" attrname="module" expr="ud">
                <Name fromlineno="47" tolineno="47" lineno="47" name="ud"/>
              </AssAttr>
              <Subscript fromlineno="47" tolineno="47" lineno="47">
                <Getattr fromlineno="47" tolineno="47" lineno="47" attrname="parm" expr="ud">
                  <Name fromlineno="47" tolineno="47" lineno="47" name="ud"/>
                </Getattr>
                <Index fromlineno="47" tolineno="47" lineno="None">
                  <Const fromlineno="47" tolineno="47" lineno="47" type="str">'module'</Const>
                </Index>
              </Subscript>
            </Assign>
          </If>
          <Assign fromlineno="49" tolineno="49" lineno="49" targets="[&lt;AssAttr(revision) l.49 [bb.fetch.svk] at Ox9b730cc&gt;]" value="''">
            <AssAttr fromlineno="49" tolineno="49" lineno="49" attrname="revision" expr="ud">
              <Name fromlineno="49" tolineno="49" lineno="49" name="ud"/>
            </AssAttr>
            <Const fromlineno="49" tolineno="49" lineno="49" type="str">''</Const>
          </Assign>
          <If fromlineno="50" tolineno="51" lineno="50">
            <Compare fromlineno="50" tolineno="50" lineno="50" op="('in', &lt;Getattr(parm) l.50 [bb.fetch.svk] at Ox9b732cc&gt;)">
              <Const fromlineno="50" tolineno="50" lineno="50" type="str">'rev'</Const>
              <Getattr fromlineno="50" tolineno="50" lineno="50" attrname="parm" expr="ud">
                <Name fromlineno="50" tolineno="50" lineno="50" name="ud"/>
              </Getattr>
            </Compare>
            <Assign fromlineno="51" tolineno="51" lineno="51" targets="[&lt;AssAttr(revision) l.51 [bb.fetch.svk] at Ox9b734ec&gt;]" value="ud.parm['rev']">
              <AssAttr fromlineno="51" tolineno="51" lineno="51" attrname="revision" expr="ud">
                <Name fromlineno="51" tolineno="51" lineno="51" name="ud"/>
              </AssAttr>
              <Subscript fromlineno="51" tolineno="51" lineno="51">
                <Getattr fromlineno="51" tolineno="51" lineno="51" attrname="parm" expr="ud">
                  <Name fromlineno="51" tolineno="51" lineno="51" name="ud"/>
                </Getattr>
                <Index fromlineno="51" tolineno="51" lineno="None">
                  <Const fromlineno="51" tolineno="51" lineno="51" type="str">'rev'</Const>
                </Index>
              </Subscript>
            </Assign>
          </If>
          <Assign fromlineno="53" tolineno="53" lineno="53" targets="[&lt;AssAttr(localfile) l.53 [bb.fetch.svk] at Ox9b7360c&gt;]" value="data.expand(('%s_%s_%s_%s_%s.tar.gz') % ((ud.module.replace('/', '.'), ud.host, ud.path.replace('/', '.'), ud.revision, ud.date)), d)">
            <AssAttr fromlineno="53" tolineno="53" lineno="53" attrname="localfile" expr="ud">
              <Name fromlineno="53" tolineno="53" lineno="53" name="ud"/>
            </AssAttr>
            <CallFunc fromlineno="53" tolineno="53" lineno="53" func="Getattr(expand)">
              <Getattr fromlineno="53" tolineno="53" lineno="53" attrname="expand" expr="data">
                <Name fromlineno="53" tolineno="53" lineno="53" name="data"/>
              </Getattr>
              <BinOp fromlineno="53" tolineno="53" lineno="53" op="%" left="'%s_%s_%s_%s_%s.tar.gz'" right="(ud.module.replace('/', '.'), ud.host, ud.path.replace('/', '.'), ud.revision, ud.date)">
                <Const fromlineno="53" tolineno="53" lineno="53" type="str">'%s_%s_%s_%s_%s.tar.gz'</Const>
                <Tuple fromlineno="53" tolineno="53" lineno="53">
                  <CallFunc fromlineno="53" tolineno="53" lineno="53" func="Getattr(replace)">
                    <Getattr fromlineno="53" tolineno="53" lineno="53" attrname="replace" expr="ud.module">
                      <Getattr fromlineno="53" tolineno="53" lineno="53" attrname="module" expr="ud">
                        <Name fromlineno="53" tolineno="53" lineno="53" name="ud"/>
                      </Getattr>
                    </Getattr>
                    <Const fromlineno="53" tolineno="53" lineno="53" type="str">'/'</Const>
                    <Const fromlineno="53" tolineno="53" lineno="53" type="str">'.'</Const>
                  </CallFunc>
                  <Getattr fromlineno="53" tolineno="53" lineno="53" attrname="host" expr="ud">
                    <Name fromlineno="53" tolineno="53" lineno="53" name="ud"/>
                  </Getattr>
                  <CallFunc fromlineno="53" tolineno="53" lineno="53" func="Getattr(replace)">
                    <Getattr fromlineno="53" tolineno="53" lineno="53" attrname="replace" expr="ud.path">
                      <Getattr fromlineno="53" tolineno="53" lineno="53" attrname="path" expr="ud">
                        <Name fromlineno="53" tolineno="53" lineno="53" name="ud"/>
                      </Getattr>
                    </Getattr>
                    <Const fromlineno="53" tolineno="53" lineno="53" type="str">'/'</Const>
                    <Const fromlineno="53" tolineno="53" lineno="53" type="str">'.'</Const>
                  </CallFunc>
                  <Getattr fromlineno="53" tolineno="53" lineno="53" attrname="revision" expr="ud">
                    <Name fromlineno="53" tolineno="53" lineno="53" name="ud"/>
                  </Getattr>
                  <Getattr fromlineno="53" tolineno="53" lineno="53" attrname="date" expr="ud">
                    <Name fromlineno="53" tolineno="53" lineno="53" name="ud"/>
                  </Getattr>
                </Tuple>
              </BinOp>
              <Name fromlineno="53" tolineno="53" lineno="53" name="d"/>
            </CallFunc>
          </Assign>
          <Return fromlineno="55" tolineno="55" lineno="55">
            <CallFunc fromlineno="55" tolineno="55" lineno="55" func="Getattr(join)">
              <Getattr fromlineno="55" tolineno="55" lineno="55" attrname="join" expr="os.path">
                <Getattr fromlineno="55" tolineno="55" lineno="55" attrname="path" expr="os">
                  <Name fromlineno="55" tolineno="55" lineno="55" name="os"/>
                </Getattr>
              </Getattr>
              <CallFunc fromlineno="55" tolineno="55" lineno="55" func="Getattr(getVar)">
                <Getattr fromlineno="55" tolineno="55" lineno="55" attrname="getVar" expr="data">
                  <Name fromlineno="55" tolineno="55" lineno="55" name="data"/>
                </Getattr>
                <Const fromlineno="55" tolineno="55" lineno="55" type="str">'DL_DIR'</Const>
                <Name fromlineno="55" tolineno="55" lineno="55" name="d"/>
                <Const fromlineno="55" tolineno="55" lineno="55" type="bool">True</Const>
              </CallFunc>
              <Getattr fromlineno="55" tolineno="55" lineno="55" attrname="localfile" expr="ud">
                <Name fromlineno="55" tolineno="55" lineno="55" name="ud"/>
              </Getattr>
            </CallFunc>
          </Return>
        </Function>
        <Function fromlineno="57" tolineno="60" lineno="57">
          <Arguments fromlineno="57" tolineno="57" lineno="None" format_args="self, url, ud, d">
            <AssName fromlineno="57" tolineno="57" lineno="57" name="self"/>
            <AssName fromlineno="57" tolineno="57" lineno="57" name="url"/>
            <AssName fromlineno="57" tolineno="57" lineno="57" name="ud"/>
            <AssName fromlineno="57" tolineno="57" lineno="57" name="d"/>
          </Arguments>
          <If fromlineno="58" tolineno="59" lineno="58">
            <Compare fromlineno="58" tolineno="58" lineno="58" op="('==', &lt;Const(str) l.58 [bb.fetch.svk] at Ox9b7cc4c&gt;)">
              <Getattr fromlineno="58" tolineno="58" lineno="58" attrname="date" expr="ud">
                <Name fromlineno="58" tolineno="58" lineno="58" name="ud"/>
              </Getattr>
              <Const fromlineno="58" tolineno="58" lineno="58" type="str">'now'</Const>
            </Compare>
            <Return fromlineno="59" tolineno="59" lineno="59">
              <Const fromlineno="59" tolineno="59" lineno="59" type="bool">True</Const>
            </Return>
          </If>
          <Return fromlineno="60" tolineno="60" lineno="60">
            <Const fromlineno="60" tolineno="60" lineno="60" type="bool">False</Const>
          </Return>
        </Function>
        <Function fromlineno="62" tolineno="109" lineno="62">
          <Arguments fromlineno="62" tolineno="62" lineno="None" format_args="self, loc, ud, d">
            <AssName fromlineno="62" tolineno="62" lineno="62" name="self"/>
            <AssName fromlineno="62" tolineno="62" lineno="62" name="loc"/>
            <AssName fromlineno="62" tolineno="62" lineno="62" name="ud"/>
            <AssName fromlineno="62" tolineno="62" lineno="62" name="d"/>
          </Arguments>
          <If fromlineno="65" tolineno="66" lineno="65">
            <BoolOp fromlineno="65" tolineno="65" lineno="65" op="and" values="not self.forcefetch(loc, ud, d),Fetch.try_mirror(d, ud.localfile),">
              <UnaryOp fromlineno="65" tolineno="65" lineno="65">
                <CallFunc fromlineno="65" tolineno="65" lineno="65" func="Getattr(forcefetch)">
                  <Getattr fromlineno="65" tolineno="65" lineno="65" attrname="forcefetch" expr="self">
                    <Name fromlineno="65" tolineno="65" lineno="65" name="self"/>
                  </Getattr>
                  <Name fromlineno="65" tolineno="65" lineno="65" name="loc"/>
                  <Name fromlineno="65" tolineno="65" lineno="65" name="ud"/>
                  <Name fromlineno="65" tolineno="65" lineno="65" name="d"/>
                </CallFunc>
              </UnaryOp>
              <CallFunc fromlineno="65" tolineno="65" lineno="65" func="Getattr(try_mirror)">
                <Getattr fromlineno="65" tolineno="65" lineno="65" attrname="try_mirror" expr="Fetch">
                  <Name fromlineno="65" tolineno="65" lineno="65" name="Fetch"/>
                </Getattr>
                <Name fromlineno="65" tolineno="65" lineno="65" name="d"/>
                <Getattr fromlineno="65" tolineno="65" lineno="65" attrname="localfile" expr="ud">
                  <Name fromlineno="65" tolineno="65" lineno="65" name="ud"/>
                </Getattr>
              </CallFunc>
            </BoolOp>
            <Return fromlineno="66" tolineno="66" lineno="66"/>
          </If>
          <Assign fromlineno="68" tolineno="68" lineno="68" targets="[&lt;AssName(svkroot) l.68 [bb.fetch.svk] at Ox9b801ac&gt;]" value="(ud.host) + (ud.path)">
            <AssName fromlineno="68" tolineno="68" lineno="68" name="svkroot"/>
            <BinOp fromlineno="68" tolineno="68" lineno="68" op="+" left="ud.host" right="ud.path">
              <Getattr fromlineno="68" tolineno="68" lineno="68" attrname="host" expr="ud">
                <Name fromlineno="68" tolineno="68" lineno="68" name="ud"/>
              </Getattr>
              <Getattr fromlineno="68" tolineno="68" lineno="68" attrname="path" expr="ud">
                <Name fromlineno="68" tolineno="68" lineno="68" name="ud"/>
              </Getattr>
            </BinOp>
          </Assign>
          <Assign fromlineno="70" tolineno="70" lineno="70" targets="[&lt;AssName(svkcmd) l.70 [bb.fetch.svk] at Ox9b802cc&gt;]" value="('svk co -r {%s} %s/%s') % ((ud.date, svkroot, ud.module))">
            <AssName fromlineno="70" tolineno="70" lineno="70" name="svkcmd"/>
            <BinOp fromlineno="70" tolineno="70" lineno="70" op="%" left="'svk co -r {%s} %s/%s'" right="(ud.date, svkroot, ud.module)">
              <Const fromlineno="70" tolineno="70" lineno="70" type="str">'svk co -r {%s} %s/%s'</Const>
              <Tuple fromlineno="70" tolineno="70" lineno="70">
                <Getattr fromlineno="70" tolineno="70" lineno="70" attrname="date" expr="ud">
                  <Name fromlineno="70" tolineno="70" lineno="70" name="ud"/>
                </Getattr>
                <Name fromlineno="70" tolineno="70" lineno="70" name="svkroot"/>
                <Getattr fromlineno="70" tolineno="70" lineno="70" attrname="module" expr="ud">
                  <Name fromlineno="70" tolineno="70" lineno="70" name="ud"/>
                </Getattr>
              </Tuple>
            </BinOp>
          </Assign>
          <If fromlineno="72" tolineno="73" lineno="72">
            <Getattr fromlineno="72" tolineno="72" lineno="72" attrname="revision" expr="ud">
              <Name fromlineno="72" tolineno="72" lineno="72" name="ud"/>
            </Getattr>
            <Assign fromlineno="73" tolineno="73" lineno="73" targets="[&lt;AssName(svkcmd) l.73 [bb.fetch.svk] at Ox9b8068c&gt;]" value="('svk co -r %s %s/%s') % ((ud.revision, svkroot, ud.module))">
              <AssName fromlineno="73" tolineno="73" lineno="73" name="svkcmd"/>
              <BinOp fromlineno="73" tolineno="73" lineno="73" op="%" left="'svk co -r %s %s/%s'" right="(ud.revision, svkroot, ud.module)">
                <Const fromlineno="73" tolineno="73" lineno="73" type="str">'svk co -r %s %s/%s'</Const>
                <Tuple fromlineno="73" tolineno="73" lineno="73">
                  <Getattr fromlineno="73" tolineno="73" lineno="73" attrname="revision" expr="ud">
                    <Name fromlineno="73" tolineno="73" lineno="73" name="ud"/>
                  </Getattr>
                  <Name fromlineno="73" tolineno="73" lineno="73" name="svkroot"/>
                  <Getattr fromlineno="73" tolineno="73" lineno="73" attrname="module" expr="ud">
                    <Name fromlineno="73" tolineno="73" lineno="73" name="ud"/>
                  </Getattr>
                </Tuple>
              </BinOp>
            </Assign>
          </If>
          <Assign fromlineno="76" tolineno="76" lineno="76" targets="[&lt;AssName(localdata) l.76 [bb.fetch.svk] at Ox9b8094c&gt;]" value="data.createCopy(d)">
            <AssName fromlineno="76" tolineno="76" lineno="76" name="localdata"/>
            <CallFunc fromlineno="76" tolineno="76" lineno="76" func="Getattr(createCopy)">
              <Getattr fromlineno="76" tolineno="76" lineno="76" attrname="createCopy" expr="data">
                <Name fromlineno="76" tolineno="76" lineno="76" name="data"/>
              </Getattr>
              <Name fromlineno="76" tolineno="76" lineno="76" name="d"/>
            </CallFunc>
          </Assign>
          <Discard fromlineno="77" tolineno="77" lineno="77">
            <CallFunc fromlineno="77" tolineno="77" lineno="77" func="Getattr(update_data)">
              <Getattr fromlineno="77" tolineno="77" lineno="77" attrname="update_data" expr="data">
                <Name fromlineno="77" tolineno="77" lineno="77" name="data"/>
              </Getattr>
              <Name fromlineno="77" tolineno="77" lineno="77" name="localdata"/>
            </CallFunc>
          </Discard>
          <Discard fromlineno="78" tolineno="78" lineno="78">
            <CallFunc fromlineno="78" tolineno="78" lineno="78" func="Getattr(debug)">
              <Getattr fromlineno="78" tolineno="78" lineno="78" attrname="debug" expr="bb.msg">
                <Getattr fromlineno="78" tolineno="78" lineno="78" attrname="msg" expr="bb">
                  <Name fromlineno="78" tolineno="78" lineno="78" name="bb"/>
                </Getattr>
              </Getattr>
              <Const fromlineno="78" tolineno="78" lineno="78" type="int">2</Const>
              <Getattr fromlineno="78" tolineno="78" lineno="78" attrname="Fetcher" expr="bb.msg.domain">
                <Getattr fromlineno="78" tolineno="78" lineno="78" attrname="domain" expr="bb.msg">
                  <Getattr fromlineno="78" tolineno="78" lineno="78" attrname="msg" expr="bb">
                    <Name fromlineno="78" tolineno="78" lineno="78" name="bb"/>
                  </Getattr>
                </Getattr>
              </Getattr>
              <Const fromlineno="78" tolineno="78" lineno="78" type="str">'Fetch: creating temporary directory'</Const>
            </CallFunc>
          </Discard>
          <Discard fromlineno="79" tolineno="79" lineno="79">
            <CallFunc fromlineno="79" tolineno="79" lineno="79" func="Getattr(mkdirhier)">
              <Getattr fromlineno="79" tolineno="79" lineno="79" attrname="mkdirhier" expr="bb">
                <Name fromlineno="79" tolineno="79" lineno="79" name="bb"/>
              </Getattr>
              <CallFunc fromlineno="79" tolineno="79" lineno="79" func="Getattr(expand)">
                <Getattr fromlineno="79" tolineno="79" lineno="79" attrname="expand" expr="data">
                  <Name fromlineno="79" tolineno="79" lineno="79" name="data"/>
                </Getattr>
                <Const fromlineno="79" tolineno="79" lineno="79" type="str">'${WORKDIR}'</Const>
                <Name fromlineno="79" tolineno="79" lineno="79" name="localdata"/>
              </CallFunc>
            </CallFunc>
          </Discard>
          <Discard fromlineno="80" tolineno="80" lineno="80">
            <CallFunc fromlineno="80" tolineno="80" lineno="80" func="Getattr(setVar)">
              <Getattr fromlineno="80" tolineno="80" lineno="80" attrname="setVar" expr="data">
                <Name fromlineno="80" tolineno="80" lineno="80" name="data"/>
              </Getattr>
              <Const fromlineno="80" tolineno="80" lineno="80" type="str">'TMPBASE'</Const>
              <CallFunc fromlineno="80" tolineno="80" lineno="80" func="Getattr(expand)">
                <Getattr fromlineno="80" tolineno="80" lineno="80" attrname="expand" expr="data">
                  <Name fromlineno="80" tolineno="80" lineno="80" name="data"/>
                </Getattr>
                <Const fromlineno="80" tolineno="80" lineno="80" type="str">'${WORKDIR}/oesvk.XXXXXX'</Const>
                <Name fromlineno="80" tolineno="80" lineno="80" name="localdata"/>
              </CallFunc>
              <Name fromlineno="80" tolineno="80" lineno="80" name="localdata"/>
            </CallFunc>
          </Discard>
          <Assign fromlineno="81" tolineno="81" lineno="81" targets="[&lt;AssName(tmppipe) l.81 [bb.fetch.svk] at Ox9e2cacc&gt;]" value="os.popen((data.getVar('MKTEMPDIRCMD', localdata, 1)) or ('false'))">
            <AssName fromlineno="81" tolineno="81" lineno="81" name="tmppipe"/>
            <CallFunc fromlineno="81" tolineno="81" lineno="81" func="Getattr(popen)">
              <Getattr fromlineno="81" tolineno="81" lineno="81" attrname="popen" expr="os">
                <Name fromlineno="81" tolineno="81" lineno="81" name="os"/>
              </Getattr>
              <BoolOp fromlineno="81" tolineno="81" lineno="81" op="or" values="data.getVar('MKTEMPDIRCMD', localdata, 1),'false',">
                <CallFunc fromlineno="81" tolineno="81" lineno="81" func="Getattr(getVar)">
                  <Getattr fromlineno="81" tolineno="81" lineno="81" attrname="getVar" expr="data">
                    <Name fromlineno="81" tolineno="81" lineno="81" name="data"/>
                  </Getattr>
                  <Const fromlineno="81" tolineno="81" lineno="81" type="str">'MKTEMPDIRCMD'</Const>
                  <Name fromlineno="81" tolineno="81" lineno="81" name="localdata"/>
                  <Const fromlineno="81" tolineno="81" lineno="81" type="int">1</Const>
                </CallFunc>
                <Const fromlineno="81" tolineno="81" lineno="81" type="str">'false'</Const>
              </BoolOp>
            </CallFunc>
          </Assign>
          <Assign fromlineno="82" tolineno="82" lineno="82" targets="[&lt;AssName(tmpfile) l.82 [bb.fetch.svk] at Ox9e2cd0c&gt;]" value="tmppipe.readline().strip()">
            <AssName fromlineno="82" tolineno="82" lineno="82" name="tmpfile"/>
            <CallFunc fromlineno="82" tolineno="82" lineno="82" func="Getattr(strip)">
              <Getattr fromlineno="82" tolineno="82" lineno="82" attrname="strip" expr="tmppipe.readline()">
                <CallFunc fromlineno="82" tolineno="82" lineno="82" func="Getattr(readline)">
                  <Getattr fromlineno="82" tolineno="82" lineno="82" attrname="readline" expr="tmppipe">
                    <Name fromlineno="82" tolineno="82" lineno="82" name="tmppipe"/>
                  </Getattr>
                </CallFunc>
              </Getattr>
            </CallFunc>
          </Assign>
          <If fromlineno="83" tolineno="85" lineno="83">
            <UnaryOp fromlineno="83" tolineno="83" lineno="83">
              <Name fromlineno="83" tolineno="83" lineno="83" name="tmpfile"/>
            </UnaryOp>
            <Discard fromlineno="84" tolineno="84" lineno="84">
              <CallFunc fromlineno="84" tolineno="84" lineno="84" func="Getattr(error)">
                <Getattr fromlineno="84" tolineno="84" lineno="84" attrname="error" expr="bb.msg">
                  <Getattr fromlineno="84" tolineno="84" lineno="84" attrname="msg" expr="bb">
                    <Name fromlineno="84" tolineno="84" lineno="84" name="bb"/>
                  </Getattr>
                </Getattr>
                <Getattr fromlineno="84" tolineno="84" lineno="84" attrname="Fetcher" expr="bb.msg.domain">
                  <Getattr fromlineno="84" tolineno="84" lineno="84" attrname="domain" expr="bb.msg">
                    <Getattr fromlineno="84" tolineno="84" lineno="84" attrname="msg" expr="bb">
                      <Name fromlineno="84" tolineno="84" lineno="84" name="bb"/>
                    </Getattr>
                  </Getattr>
                </Getattr>
                <Const fromlineno="84" tolineno="84" lineno="84" type="str">"Fetch: unable to create temporary directory.. make sure 'mktemp' is in the PATH."</Const>
              </CallFunc>
            </Discard>
            <Raise fromlineno="85" tolineno="85" lineno="85">
              <CallFunc fromlineno="85" tolineno="85" lineno="85" func="Name(FetchError)">
                <Name fromlineno="85" tolineno="85" lineno="85" name="FetchError"/>
                <Getattr fromlineno="85" tolineno="85" lineno="85" attrname="module" expr="ud">
                  <Name fromlineno="85" tolineno="85" lineno="85" name="ud"/>
                </Getattr>
              </CallFunc>
            </Raise>
          </If>
          <Discard fromlineno="88" tolineno="88" lineno="88">
            <CallFunc fromlineno="88" tolineno="88" lineno="88" func="Getattr(chdir)">
              <Getattr fromlineno="88" tolineno="88" lineno="88" attrname="chdir" expr="os">
                <Name fromlineno="88" tolineno="88" lineno="88" name="os"/>
              </Getattr>
              <Name fromlineno="88" tolineno="88" lineno="88" name="tmpfile"/>
            </CallFunc>
          </Discard>
          <Discard fromlineno="89" tolineno="89" lineno="89">
            <CallFunc fromlineno="89" tolineno="89" lineno="89" func="Getattr(note)">
              <Getattr fromlineno="89" tolineno="89" lineno="89" attrname="note" expr="bb.msg">
                <Getattr fromlineno="89" tolineno="89" lineno="89" attrname="msg" expr="bb">
                  <Name fromlineno="89" tolineno="89" lineno="89" name="bb"/>
                </Getattr>
              </Getattr>
              <Const fromlineno="89" tolineno="89" lineno="89" type="int">1</Const>
              <Getattr fromlineno="89" tolineno="89" lineno="89" attrname="Fetcher" expr="bb.msg.domain">
                <Getattr fromlineno="89" tolineno="89" lineno="89" attrname="domain" expr="bb.msg">
                  <Getattr fromlineno="89" tolineno="89" lineno="89" attrname="msg" expr="bb">
                    <Name fromlineno="89" tolineno="89" lineno="89" name="bb"/>
                  </Getattr>
                </Getattr>
              </Getattr>
              <BinOp fromlineno="89" tolineno="89" lineno="89" op="+" left="'Fetch '" right="loc">
                <Const fromlineno="89" tolineno="89" lineno="89" type="str">'Fetch '</Const>
                <Name fromlineno="89" tolineno="89" lineno="89" name="loc"/>
              </BinOp>
            </CallFunc>
          </Discard>
          <Discard fromlineno="90" tolineno="90" lineno="90">
            <CallFunc fromlineno="90" tolineno="90" lineno="90" func="Getattr(debug)">
              <Getattr fromlineno="90" tolineno="90" lineno="90" attrname="debug" expr="bb.msg">
                <Getattr fromlineno="90" tolineno="90" lineno="90" attrname="msg" expr="bb">
                  <Name fromlineno="90" tolineno="90" lineno="90" name="bb"/>
                </Getattr>
              </Getattr>
              <Const fromlineno="90" tolineno="90" lineno="90" type="int">1</Const>
              <Getattr fromlineno="90" tolineno="90" lineno="90" attrname="Fetcher" expr="bb.msg.domain">
                <Getattr fromlineno="90" tolineno="90" lineno="90" attrname="domain" expr="bb.msg">
                  <Getattr fromlineno="90" tolineno="90" lineno="90" attrname="msg" expr="bb">
                    <Name fromlineno="90" tolineno="90" lineno="90" name="bb"/>
                  </Getattr>
                </Getattr>
              </Getattr>
              <BinOp fromlineno="90" tolineno="90" lineno="90" op="%" left="'Running %s'" right="svkcmd">
                <Const fromlineno="90" tolineno="90" lineno="90" type="str">'Running %s'</Const>
                <Name fromlineno="90" tolineno="90" lineno="90" name="svkcmd"/>
              </BinOp>
            </CallFunc>
          </Discard>
          <Assign fromlineno="91" tolineno="91" lineno="91" targets="[&lt;AssName(myret) l.91 [bb.fetch.svk] at Ox9e3058c&gt;]" value="os.system(svkcmd)">
            <AssName fromlineno="91" tolineno="91" lineno="91" name="myret"/>
            <CallFunc fromlineno="91" tolineno="91" lineno="91" func="Getattr(system)">
              <Getattr fromlineno="91" tolineno="91" lineno="91" attrname="system" expr="os">
                <Name fromlineno="91" tolineno="91" lineno="91" name="os"/>
              </Getattr>
              <Name fromlineno="91" tolineno="91" lineno="91" name="svkcmd"/>
            </CallFunc>
          </Assign>
          <If fromlineno="92" tolineno="97" lineno="92">
            <Compare fromlineno="92" tolineno="92" lineno="92" op="('!=', &lt;Const(int) l.92 [bb.fetch.svk] at Ox9e3070c&gt;)">
              <Name fromlineno="92" tolineno="92" lineno="92" name="myret"/>
              <Const fromlineno="92" tolineno="92" lineno="92" type="int">0</Const>
            </Compare>
            <TryExcept fromlineno="93" tolineno="96" lineno="93">
              <Discard fromlineno="94" tolineno="94" lineno="94">
                <CallFunc fromlineno="94" tolineno="94" lineno="94" func="Getattr(rmdir)">
                  <Getattr fromlineno="94" tolineno="94" lineno="94" attrname="rmdir" expr="os">
                    <Name fromlineno="94" tolineno="94" lineno="94" name="os"/>
                  </Getattr>
                  <Name fromlineno="94" tolineno="94" lineno="94" name="tmpfile"/>
                </CallFunc>
              </Discard>
              <ExceptHandler fromlineno="95" tolineno="96" lineno="95">
                <Name fromlineno="95" tolineno="95" lineno="95" name="OSError"/>
                <Pass fromlineno="96" tolineno="96" lineno="96"/>
              </ExceptHandler>
            </TryExcept>
            <Raise fromlineno="97" tolineno="97" lineno="97">
              <CallFunc fromlineno="97" tolineno="97" lineno="97" func="Name(FetchError)">
                <Name fromlineno="97" tolineno="97" lineno="97" name="FetchError"/>
                <Getattr fromlineno="97" tolineno="97" lineno="97" attrname="module" expr="ud">
                  <Name fromlineno="97" tolineno="97" lineno="97" name="ud"/>
                </Getattr>
              </CallFunc>
            </Raise>
          </If>
          <Discard fromlineno="99" tolineno="99" lineno="99">
            <CallFunc fromlineno="99" tolineno="99" lineno="99" func="Getattr(chdir)">
              <Getattr fromlineno="99" tolineno="99" lineno="99" attrname="chdir" expr="os">
                <Name fromlineno="99" tolineno="99" lineno="99" name="os"/>
              </Getattr>
              <CallFunc fromlineno="99" tolineno="99" lineno="99" func="Getattr(join)">
                <Getattr fromlineno="99" tolineno="99" lineno="99" attrname="join" expr="os.path">
                  <Getattr fromlineno="99" tolineno="99" lineno="99" attrname="path" expr="os">
                    <Name fromlineno="99" tolineno="99" lineno="99" name="os"/>
                  </Getattr>
                </Getattr>
                <Name fromlineno="99" tolineno="99" lineno="99" name="tmpfile"/>
                <CallFunc fromlineno="99" tolineno="99" lineno="99" func="Getattr(dirname)">
                  <Getattr fromlineno="99" tolineno="99" lineno="99" attrname="dirname" expr="os.path">
                    <Getattr fromlineno="99" tolineno="99" lineno="99" attrname="path" expr="os">
                      <Name fromlineno="99" tolineno="99" lineno="99" name="os"/>
                    </Getattr>
                  </Getattr>
                  <Getattr fromlineno="99" tolineno="99" lineno="99" attrname="module" expr="ud">
                    <Name fromlineno="99" tolineno="99" lineno="99" name="ud"/>
                  </Getattr>
                </CallFunc>
              </CallFunc>
            </CallFunc>
          </Discard>
          <Assign fromlineno="101" tolineno="101" lineno="101" targets="[&lt;AssName(myret) l.101 [bb.fetch.svk] at Ox9e30c6c&gt;]" value="os.system(('tar -czf %s %s') % ((ud.localpath, os.path.basename(ud.module))))">
            <AssName fromlineno="101" tolineno="101" lineno="101" name="myret"/>
            <CallFunc fromlineno="101" tolineno="101" lineno="101" func="Getattr(system)">
              <Getattr fromlineno="101" tolineno="101" lineno="101" attrname="system" expr="os">
                <Name fromlineno="101" tolineno="101" lineno="101" name="os"/>
              </Getattr>
              <BinOp fromlineno="101" tolineno="101" lineno="101" op="%" left="'tar -czf %s %s'" right="(ud.localpath, os.path.basename(ud.module))">
                <Const fromlineno="101" tolineno="101" lineno="101" type="str">'tar -czf %s %s'</Const>
                <Tuple fromlineno="101" tolineno="101" lineno="101">
                  <Getattr fromlineno="101" tolineno="101" lineno="101" attrname="localpath" expr="ud">
                    <Name fromlineno="101" tolineno="101" lineno="101" name="ud"/>
                  </Getattr>
                  <CallFunc fromlineno="101" tolineno="101" lineno="101" func="Getattr(basename)">
                    <Getattr fromlineno="101" tolineno="101" lineno="101" attrname="basename" expr="os.path">
                      <Getattr fromlineno="101" tolineno="101" lineno="101" attrname="path" expr="os">
                        <Name fromlineno="101" tolineno="101" lineno="101" name="os"/>
                      </Getattr>
                    </Getattr>
                    <Getattr fromlineno="101" tolineno="101" lineno="101" attrname="module" expr="ud">
                      <Name fromlineno="101" tolineno="101" lineno="101" name="ud"/>
                    </Getattr>
                  </CallFunc>
                </Tuple>
              </BinOp>
            </CallFunc>
          </Assign>
          <If fromlineno="102" tolineno="107" lineno="102">
            <Compare fromlineno="102" tolineno="102" lineno="102" op="('!=', &lt;Const(int) l.102 [bb.fetch.svk] at Ox9e30f4c&gt;)">
              <Name fromlineno="102" tolineno="102" lineno="102" name="myret"/>
              <Const fromlineno="102" tolineno="102" lineno="102" type="int">0</Const>
            </Compare>
            <TryExcept fromlineno="103" tolineno="106" lineno="103">
              <Discard fromlineno="104" tolineno="104" lineno="104">
                <CallFunc fromlineno="104" tolineno="104" lineno="104" func="Getattr(unlink)">
                  <Getattr fromlineno="104" tolineno="104" lineno="104" attrname="unlink" expr="os">
                    <Name fromlineno="104" tolineno="104" lineno="104" name="os"/>
                  </Getattr>
                  <Getattr fromlineno="104" tolineno="104" lineno="104" attrname="localpath" expr="ud">
                    <Name fromlineno="104" tolineno="104" lineno="104" name="ud"/>
                  </Getattr>
                </CallFunc>
              </Discard>
              <ExceptHandler fromlineno="105" tolineno="106" lineno="105">
                <Name fromlineno="105" tolineno="105" lineno="105" name="OSError"/>
                <Pass fromlineno="106" tolineno="106" lineno="106"/>
              </ExceptHandler>
            </TryExcept>
            <Raise fromlineno="107" tolineno="107" lineno="107">
              <CallFunc fromlineno="107" tolineno="107" lineno="107" func="Name(FetchError)">
                <Name fromlineno="107" tolineno="107" lineno="107" name="FetchError"/>
                <Getattr fromlineno="107" tolineno="107" lineno="107" attrname="module" expr="ud">
                  <Name fromlineno="107" tolineno="107" lineno="107" name="ud"/>
                </Getattr>
              </CallFunc>
            </Raise>
          </If>
          <Discard fromlineno="109" tolineno="109" lineno="109">
            <CallFunc fromlineno="109" tolineno="109" lineno="109" func="Getattr(system)">
              <Getattr fromlineno="109" tolineno="109" lineno="109" attrname="system" expr="os">
                <Name fromlineno="109" tolineno="109" lineno="109" name="os"/>
              </Getattr>
              <BinOp fromlineno="109" tolineno="109" lineno="109" op="%" left="'rm -rf %s'" right="tmpfile">
                <Const fromlineno="109" tolineno="109" lineno="109" type="str">'rm -rf %s'</Const>
                <Name fromlineno="109" tolineno="109" lineno="109" name="tmpfile"/>
              </BinOp>
            </CallFunc>
          </Discard>
        </Function>
      </Class>
    </Module>
    <Module fromlineno="0" tolineno="187" lineno="0" name="bb.fetch.git">
      <Import fromlineno="23" tolineno="23" lineno="23">
        <ImportName name="os"/>
        <ImportName name="re"/>
      </Import>
      <Import fromlineno="24" tolineno="24" lineno="24">
        <ImportName name="bb"/>
      </Import>
      <From fromlineno="25" tolineno="25" lineno="25" modname="bb">
        <ImportName name="data"/>
      </From>
      <From fromlineno="26" tolineno="26" lineno="26" modname="bb.fetch">
        <ImportName name="Fetch"/>
      </From>
      <From fromlineno="27" tolineno="27" lineno="27" modname="bb.fetch">
        <ImportName name="FetchError"/>
      </From>
      <From fromlineno="28" tolineno="28" lineno="28" modname="bb.fetch">
        <ImportName name="runfetchcmd"/>
      </From>
      <Class fromlineno="30" tolineno="187" lineno="30">
        <Name fromlineno="30" tolineno="30" lineno="30" name="Fetch"/>
        <Function fromlineno="32" tolineno="36" lineno="32">
          <Arguments fromlineno="32" tolineno="32" lineno="None" format_args="self, url, ud, d">
            <AssName fromlineno="32" tolineno="32" lineno="32" name="self"/>
            <AssName fromlineno="32" tolineno="32" lineno="32" name="url"/>
            <AssName fromlineno="32" tolineno="32" lineno="32" name="ud"/>
            <AssName fromlineno="32" tolineno="32" lineno="32" name="d"/>
          </Arguments>
          <Return fromlineno="36" tolineno="36" lineno="36">
            <Compare fromlineno="36" tolineno="36" lineno="36" op="('in', &lt;List(list) l.36 [bb.fetch.git] at Ox9ee2d0c&gt;)">
              <Getattr fromlineno="36" tolineno="36" lineno="36" attrname="type" expr="ud">
                <Name fromlineno="36" tolineno="36" lineno="36" name="ud"/>
              </Getattr>
              <List fromlineno="36" tolineno="36" lineno="36">
                <Const fromlineno="36" tolineno="36" lineno="36" type="str">'git'</Const>
              </List>
            </Compare>
          </Return>
        </Function>
        <Function fromlineno="38" tolineno="60" lineno="38">
          <Arguments fromlineno="38" tolineno="38" lineno="None" format_args="self, url, ud, d">
            <AssName fromlineno="38" tolineno="38" lineno="38" name="self"/>
            <AssName fromlineno="38" tolineno="38" lineno="38" name="url"/>
            <AssName fromlineno="38" tolineno="38" lineno="38" name="ud"/>
            <AssName fromlineno="38" tolineno="38" lineno="38" name="d"/>
          </Arguments>
          <If fromlineno="40" tolineno="45" lineno="40">
            <Compare fromlineno="40" tolineno="40" lineno="40" op="('in', &lt;Getattr(parm) l.40 [bb.fetch.git] at Ox9ee2fcc&gt;)">
              <Const fromlineno="40" tolineno="40" lineno="40" type="str">'protocol'</Const>
              <Getattr fromlineno="40" tolineno="40" lineno="40" attrname="parm" expr="ud">
                <Name fromlineno="40" tolineno="40" lineno="40" name="ud"/>
              </Getattr>
            </Compare>
            <Assign fromlineno="41" tolineno="41" lineno="41" targets="[&lt;AssAttr(proto) l.41 [bb.fetch.git] at Ox9ee60ac&gt;]" value="ud.parm['protocol']">
              <AssAttr fromlineno="41" tolineno="41" lineno="41" attrname="proto" expr="ud">
                <Name fromlineno="41" tolineno="41" lineno="41" name="ud"/>
              </AssAttr>
              <Subscript fromlineno="41" tolineno="41" lineno="41">
                <Getattr fromlineno="41" tolineno="41" lineno="41" attrname="parm" expr="ud">
                  <Name fromlineno="41" tolineno="41" lineno="41" name="ud"/>
                </Getattr>
                <Index fromlineno="41" tolineno="41" lineno="None">
                  <Const fromlineno="41" tolineno="41" lineno="41" type="str">'protocol'</Const>
                </Index>
              </Subscript>
            </Assign>
            <If fromlineno="42" tolineno="45" lineno="42">
              <UnaryOp fromlineno="42" tolineno="42" lineno="42">
                <Getattr fromlineno="42" tolineno="42" lineno="42" attrname="host" expr="ud">
                  <Name fromlineno="42" tolineno="42" lineno="42" name="ud"/>
                </Getattr>
              </UnaryOp>
              <Assign fromlineno="43" tolineno="43" lineno="43" targets="[&lt;AssAttr(proto) l.43 [bb.fetch.git] at Ox9ee62cc&gt;]" value="'file'">
                <AssAttr fromlineno="43" tolineno="43" lineno="43" attrname="proto" expr="ud">
                  <Name fromlineno="43" tolineno="43" lineno="43" name="ud"/>
                </AssAttr>
                <Const fromlineno="43" tolineno="43" lineno="43" type="str">'file'</Const>
              </Assign>
              <Assign fromlineno="45" tolineno="45" lineno="45" targets="[&lt;AssAttr(proto) l.45 [bb.fetch.git] at Ox9ee638c&gt;]" value="'rsync'">
                <AssAttr fromlineno="45" tolineno="45" lineno="45" attrname="proto" expr="ud">
                  <Name fromlineno="45" tolineno="45" lineno="45" name="ud"/>
                </AssAttr>
                <Const fromlineno="45" tolineno="45" lineno="45" type="str">'rsync'</Const>
              </Assign>
            </If>
          </If>
          <Assign fromlineno="47" tolineno="47" lineno="47" targets="[&lt;AssAttr(branch) l.47 [bb.fetch.git] at Ox9ee63cc&gt;]" value="ud.parm.get('branch', 'master')">
            <AssAttr fromlineno="47" tolineno="47" lineno="47" attrname="branch" expr="ud">
              <Name fromlineno="47" tolineno="47" lineno="47" name="ud"/>
            </AssAttr>
            <CallFunc fromlineno="47" tolineno="47" lineno="47" func="Getattr(get)">
              <Getattr fromlineno="47" tolineno="47" lineno="47" attrname="get" expr="ud.parm">
                <Getattr fromlineno="47" tolineno="47" lineno="47" attrname="parm" expr="ud">
                  <Name fromlineno="47" tolineno="47" lineno="47" name="ud"/>
                </Getattr>
              </Getattr>
              <Const fromlineno="47" tolineno="47" lineno="47" type="str">'branch'</Const>
              <Const fromlineno="47" tolineno="47" lineno="47" type="str">'master'</Const>
            </CallFunc>
          </Assign>
          <Assign fromlineno="49" tolineno="49" lineno="49" targets="[&lt;AssName(tag) l.49 [bb.fetch.git] at Ox9ee652c&gt;]" value="Fetch.srcrev_internal_helper(ud, d)">
            <AssName fromlineno="49" tolineno="49" lineno="49" name="tag"/>
            <CallFunc fromlineno="49" tolineno="49" lineno="49" func="Getattr(srcrev_internal_helper)">
              <Getattr fromlineno="49" tolineno="49" lineno="49" attrname="srcrev_internal_helper" expr="Fetch">
                <Name fromlineno="49" tolineno="49" lineno="49" name="Fetch"/>
              </Getattr>
              <Name fromlineno="49" tolineno="49" lineno="49" name="ud"/>
              <Name fromlineno="49" tolineno="49" lineno="49" name="d"/>
            </CallFunc>
          </Assign>
          <If fromlineno="50" tolineno="53" lineno="50">
            <Compare fromlineno="50" tolineno="50" lineno="50" op="('is', &lt;Const(bool) l.50 [bb.fetch.git] at Ox9ee66cc&gt;)">
              <Name fromlineno="50" tolineno="50" lineno="50" name="tag"/>
              <Const fromlineno="50" tolineno="50" lineno="50" type="bool">True</Const>
            </Compare>
            <Assign fromlineno="51" tolineno="51" lineno="51" targets="[&lt;AssAttr(tag) l.51 [bb.fetch.git] at Ox9ee676c&gt;]" value="self.latest_revision(url, ud, d)">
              <AssAttr fromlineno="51" tolineno="51" lineno="51" attrname="tag" expr="ud">
                <Name fromlineno="51" tolineno="51" lineno="51" name="ud"/>
              </AssAttr>
              <CallFunc fromlineno="51" tolineno="51" lineno="51" func="Getattr(latest_revision)">
                <Getattr fromlineno="51" tolineno="51" lineno="51" attrname="latest_revision" expr="self">
                  <Name fromlineno="51" tolineno="51" lineno="51" name="self"/>
                </Getattr>
                <Name fromlineno="51" tolineno="51" lineno="51" name="url"/>
                <Name fromlineno="51" tolineno="51" lineno="51" name="ud"/>
                <Name fromlineno="51" tolineno="51" lineno="51" name="d"/>
              </CallFunc>
            </Assign>
            <If fromlineno="52" tolineno="53" lineno="52">
              <Name fromlineno="52" tolineno="52" lineno="52" name="tag"/>
              <Assign fromlineno="53" tolineno="53" lineno="53" targets="[&lt;AssAttr(tag) l.53 [bb.fetch.git] at Ox9ee698c&gt;]" value="tag">
                <AssAttr fromlineno="53" tolineno="53" lineno="53" attrname="tag" expr="ud">
                  <Name fromlineno="53" tolineno="53" lineno="53" name="ud"/>
                </AssAttr>
                <Name fromlineno="53" tolineno="53" lineno="53" name="tag"/>
              </Assign>
            </If>
          </If>
          <If fromlineno="55" tolineno="56" lineno="55">
            <BoolOp fromlineno="55" tolineno="55" lineno="55" op="or" values="not ud.tag,ud.tag == 'master',">
              <UnaryOp fromlineno="55" tolineno="55" lineno="55">
                <Getattr fromlineno="55" tolineno="55" lineno="55" attrname="tag" expr="ud">
                  <Name fromlineno="55" tolineno="55" lineno="55" name="ud"/>
                </Getattr>
              </UnaryOp>
              <Compare fromlineno="55" tolineno="55" lineno="55" op="('==', &lt;Const(str) l.55 [bb.fetch.git] at Ox9ee6b2c&gt;)">
                <Getattr fromlineno="55" tolineno="55" lineno="55" attrname="tag" expr="ud">
                  <Name fromlineno="55" tolineno="55" lineno="55" name="ud"/>
                </Getattr>
                <Const fromlineno="55" tolineno="55" lineno="55" type="str">'master'</Const>
              </Compare>
            </BoolOp>
            <Assign fromlineno="56" tolineno="56" lineno="56" targets="[&lt;AssAttr(tag) l.56 [bb.fetch.git] at Ox9ee6bac&gt;]" value="self.latest_revision(url, ud, d)">
              <AssAttr fromlineno="56" tolineno="56" lineno="56" attrname="tag" expr="ud">
                <Name fromlineno="56" tolineno="56" lineno="56" name="ud"/>
              </AssAttr>
              <CallFunc fromlineno="56" tolineno="56" lineno="56" func="Getattr(latest_revision)">
                <Getattr fromlineno="56" tolineno="56" lineno="56" attrname="latest_revision" expr="self">
                  <Name fromlineno="56" tolineno="56" lineno="56" name="self"/>
                </Getattr>
                <Name fromlineno="56" tolineno="56" lineno="56" name="url"/>
                <Name fromlineno="56" tolineno="56" lineno="56" name="ud"/>
                <Name fromlineno="56" tolineno="56" lineno="56" name="d"/>
              </CallFunc>
            </Assign>
          </If>
          <Assign fromlineno="58" tolineno="58" lineno="58" targets="[&lt;AssAttr(localfile) l.58 [bb.fetch.git] at Ox9ee6d0c&gt;]" value="data.expand(('git_%s%s_%s.tar.gz') % ((ud.host, ud.path.replace('/', '.'), ud.tag)), d)">
            <AssAttr fromlineno="58" tolineno="58" lineno="58" attrname="localfile" expr="ud">
              <Name fromlineno="58" tolineno="58" lineno="58" name="ud"/>
            </AssAttr>
            <CallFunc fromlineno="58" tolineno="58" lineno="58" func="Getattr(expand)">
              <Getattr fromlineno="58" tolineno="58" lineno="58" attrname="expand" expr="data">
                <Name fromlineno="58" tolineno="58" lineno="58" name="data"/>
              </Getattr>
              <BinOp fromlineno="58" tolineno="58" lineno="58" op="%" left="'git_%s%s_%s.tar.gz'" right="(ud.host, ud.path.replace('/', '.'), ud.tag)">
                <Const fromlineno="58" tolineno="58" lineno="58" type="str">'git_%s%s_%s.tar.gz'</Const>
                <Tuple fromlineno="58" tolineno="58" lineno="58">
                  <Getattr fromlineno="58" tolineno="58" lineno="58" attrname="host" expr="ud">
                    <Name fromlineno="58" tolineno="58" lineno="58" name="ud"/>
                  </Getattr>
                  <CallFunc fromlineno="58" tolineno="58" lineno="58" func="Getattr(replace)">
                    <Getattr fromlineno="58" tolineno="58" lineno="58" attrname="replace" expr="ud.path">
                      <Getattr fromlineno="58" tolineno="58" lineno="58" attrname="path" expr="ud">
                        <Name fromlineno="58" tolineno="58" lineno="58" name="ud"/>
                      </Getattr>
                    </Getattr>
                    <Const fromlineno="58" tolineno="58" lineno="58" type="str">'/'</Const>
                    <Const fromlineno="58" tolineno="58" lineno="58" type="str">'.'</Const>
                  </CallFunc>
                  <Getattr fromlineno="58" tolineno="58" lineno="58" attrname="tag" expr="ud">
                    <Name fromlineno="58" tolineno="58" lineno="58" name="ud"/>
                  </Getattr>
                </Tuple>
              </BinOp>
              <Name fromlineno="58" tolineno="58" lineno="58" name="d"/>
            </CallFunc>
          </Assign>
          <Return fromlineno="60" tolineno="60" lineno="60">
            <CallFunc fromlineno="60" tolineno="60" lineno="60" func="Getattr(join)">
              <Getattr fromlineno="60" tolineno="60" lineno="60" attrname="join" expr="os.path">
                <Getattr fromlineno="60" tolineno="60" lineno="60" attrname="path" expr="os">
                  <Name fromlineno="60" tolineno="60" lineno="60" name="os"/>
                </Getattr>
              </Getattr>
              <CallFunc fromlineno="60" tolineno="60" lineno="60" func="Getattr(getVar)">
                <Getattr fromlineno="60" tolineno="60" lineno="60" attrname="getVar" expr="data">
                  <Name fromlineno="60" tolineno="60" lineno="60" name="data"/>
                </Getattr>
                <Const fromlineno="60" tolineno="60" lineno="60" type="str">'DL_DIR'</Const>
                <Name fromlineno="60" tolineno="60" lineno="60" name="d"/>
                <Const fromlineno="60" tolineno="60" lineno="60" type="bool">True</Const>
              </CallFunc>
              <Getattr fromlineno="60" tolineno="60" lineno="60" attrname="localfile" expr="ud">
                <Name fromlineno="60" tolineno="60" lineno="60" name="ud"/>
              </Getattr>
            </CallFunc>
          </Return>
        </Function>
        <Function fromlineno="62" tolineno="119" lineno="62">
          <Arguments fromlineno="62" tolineno="62" lineno="None" format_args="self, loc, ud, d">
            <AssName fromlineno="62" tolineno="62" lineno="62" name="self"/>
            <AssName fromlineno="62" tolineno="62" lineno="62" name="loc"/>
            <AssName fromlineno="62" tolineno="62" lineno="62" name="ud"/>
            <AssName fromlineno="62" tolineno="62" lineno="62" name="d"/>
          </Arguments>
          <If fromlineno="65" tolineno="67" lineno="65">
            <CallFunc fromlineno="65" tolineno="65" lineno="65" func="Getattr(try_mirror)">
              <Getattr fromlineno="65" tolineno="65" lineno="65" attrname="try_mirror" expr="Fetch">
                <Name fromlineno="65" tolineno="65" lineno="65" name="Fetch"/>
              </Getattr>
              <Name fromlineno="65" tolineno="65" lineno="65" name="d"/>
              <Getattr fromlineno="65" tolineno="65" lineno="65" attrname="localfile" expr="ud">
                <Name fromlineno="65" tolineno="65" lineno="65" name="ud"/>
              </Getattr>
            </CallFunc>
            <Discard fromlineno="66" tolineno="66" lineno="66">
              <CallFunc fromlineno="66" tolineno="66" lineno="66" func="Getattr(debug)">
                <Getattr fromlineno="66" tolineno="66" lineno="66" attrname="debug" expr="bb.msg">
                  <Getattr fromlineno="66" tolineno="66" lineno="66" attrname="msg" expr="bb">
                    <Name fromlineno="66" tolineno="66" lineno="66" name="bb"/>
                  </Getattr>
                </Getattr>
                <Const fromlineno="66" tolineno="66" lineno="66" type="int">1</Const>
                <Getattr fromlineno="66" tolineno="66" lineno="66" attrname="Fetcher" expr="bb.msg.domain">
                  <Getattr fromlineno="66" tolineno="66" lineno="66" attrname="domain" expr="bb.msg">
                    <Getattr fromlineno="66" tolineno="66" lineno="66" attrname="msg" expr="bb">
                      <Name fromlineno="66" tolineno="66" lineno="66" name="bb"/>
                    </Getattr>
                  </Getattr>
                </Getattr>
                <BinOp fromlineno="66" tolineno="66" lineno="66" op="%" left="'%s already exists (or was stashed). Skipping git checkout.'" right="ud.localpath">
                  <Const fromlineno="66" tolineno="66" lineno="66" type="str">'%s already exists (or was stashed). Skipping git checkout.'</Const>
                  <Getattr fromlineno="66" tolineno="66" lineno="66" attrname="localpath" expr="ud">
                    <Name fromlineno="66" tolineno="66" lineno="66" name="ud"/>
                  </Getattr>
                </BinOp>
              </CallFunc>
            </Discard>
            <Return fromlineno="67" tolineno="67" lineno="67"/>
          </If>
          <If fromlineno="69" tolineno="72" lineno="69">
            <Getattr fromlineno="69" tolineno="69" lineno="69" attrname="user" expr="ud">
              <Name fromlineno="69" tolineno="69" lineno="69" name="ud"/>
            </Getattr>
            <Assign fromlineno="70" tolineno="70" lineno="70" targets="[&lt;AssName(username) l.70 [bb.fetch.git] at Ox9eec76c&gt;]" value="(ud.user) + ('@')">
              <AssName fromlineno="70" tolineno="70" lineno="70" name="username"/>
              <BinOp fromlineno="70" tolineno="70" lineno="70" op="+" left="ud.user" right="'@'">
                <Getattr fromlineno="70" tolineno="70" lineno="70" attrname="user" expr="ud">
                  <Name fromlineno="70" tolineno="70" lineno="70" name="ud"/>
                </Getattr>
                <Const fromlineno="70" tolineno="70" lineno="70" type="str">'@'</Const>
              </BinOp>
            </Assign>
            <Assign fromlineno="72" tolineno="72" lineno="72" targets="[&lt;AssName(username) l.72 [bb.fetch.git] at Ox9eec88c&gt;]" value="''">
              <AssName fromlineno="72" tolineno="72" lineno="72" name="username"/>
              <Const fromlineno="72" tolineno="72" lineno="72" type="str">''</Const>
            </Assign>
          </If>
          <Assign fromlineno="74" tolineno="74" lineno="74" targets="[&lt;AssName(gitsrcname) l.74 [bb.fetch.git] at Ox9eec8ec&gt;]" value="('%s%s') % ((ud.host, ud.path.replace('/', '.')))">
            <AssName fromlineno="74" tolineno="74" lineno="74" name="gitsrcname"/>
            <BinOp fromlineno="74" tolineno="74" lineno="74" op="%" left="'%s%s'" right="(ud.host, ud.path.replace('/', '.'))">
              <Const fromlineno="74" tolineno="74" lineno="74" type="str">'%s%s'</Const>
              <Tuple fromlineno="74" tolineno="74" lineno="74">
                <Getattr fromlineno="74" tolineno="74" lineno="74" attrname="host" expr="ud">
                  <Name fromlineno="74" tolineno="74" lineno="74" name="ud"/>
                </Getattr>
                <CallFunc fromlineno="74" tolineno="74" lineno="74" func="Getattr(replace)">
                  <Getattr fromlineno="74" tolineno="74" lineno="74" attrname="replace" expr="ud.path">
                    <Getattr fromlineno="74" tolineno="74" lineno="74" attrname="path" expr="ud">
                      <Name fromlineno="74" tolineno="74" lineno="74" name="ud"/>
                    </Getattr>
                  </Getattr>
                  <Const fromlineno="74" tolineno="74" lineno="74" type="str">'/'</Const>
                  <Const fromlineno="74" tolineno="74" lineno="74" type="str">'.'</Const>
                </CallFunc>
              </Tuple>
            </BinOp>
          </Assign>
          <Assign fromlineno="76" tolineno="76" lineno="76" targets="[&lt;AssName(repofilename) l.76 [bb.fetch.git] at Ox9eecb0c&gt;]" value="('git_%s.tar.gz') % (gitsrcname)">
            <AssName fromlineno="76" tolineno="76" lineno="76" name="repofilename"/>
            <BinOp fromlineno="76" tolineno="76" lineno="76" op="%" left="'git_%s.tar.gz'" right="gitsrcname">
              <Const fromlineno="76" tolineno="76" lineno="76" type="str">'git_%s.tar.gz'</Const>
              <Name fromlineno="76" tolineno="76" lineno="76" name="gitsrcname"/>
            </BinOp>
          </Assign>
          <Assign fromlineno="77" tolineno="77" lineno="77" targets="[&lt;AssName(repofile) l.77 [bb.fetch.git] at Ox9eecbec&gt;]" value="os.path.join(data.getVar('DL_DIR', d, 1), repofilename)">
            <AssName fromlineno="77" tolineno="77" lineno="77" name="repofile"/>
            <CallFunc fromlineno="77" tolineno="77" lineno="77" func="Getattr(join)">
              <Getattr fromlineno="77" tolineno="77" lineno="77" attrname="join" expr="os.path">
                <Getattr fromlineno="77" tolineno="77" lineno="77" attrname="path" expr="os">
                  <Name fromlineno="77" tolineno="77" lineno="77" name="os"/>
                </Getattr>
              </Getattr>
              <CallFunc fromlineno="77" tolineno="77" lineno="77" func="Getattr(getVar)">
                <Getattr fromlineno="77" tolineno="77" lineno="77" attrname="getVar" expr="data">
                  <Name fromlineno="77" tolineno="77" lineno="77" name="data"/>
                </Getattr>
                <Const fromlineno="77" tolineno="77" lineno="77" type="str">'DL_DIR'</Const>
                <Name fromlineno="77" tolineno="77" lineno="77" name="d"/>
                <Const fromlineno="77" tolineno="77" lineno="77" type="int">1</Const>
              </CallFunc>
              <Name fromlineno="77" tolineno="77" lineno="77" name="repofilename"/>
            </CallFunc>
          </Assign>
          <Assign fromlineno="78" tolineno="78" lineno="78" targets="[&lt;AssName(repodir) l.78 [bb.fetch.git] at Ox9eece0c&gt;]" value="os.path.join(data.expand('${GITDIR}', d), gitsrcname)">
            <AssName fromlineno="78" tolineno="78" lineno="78" name="repodir"/>
            <CallFunc fromlineno="78" tolineno="78" lineno="78" func="Getattr(join)">
              <Getattr fromlineno="78" tolineno="78" lineno="78" attrname="join" expr="os.path">
                <Getattr fromlineno="78" tolineno="78" lineno="78" attrname="path" expr="os">
                  <Name fromlineno="78" tolineno="78" lineno="78" name="os"/>
                </Getattr>
              </Getattr>
              <CallFunc fromlineno="78" tolineno="78" lineno="78" func="Getattr(expand)">
                <Getattr fromlineno="78" tolineno="78" lineno="78" attrname="expand" expr="data">
                  <Name fromlineno="78" tolineno="78" lineno="78" name="data"/>
                </Getattr>
                <Const fromlineno="78" tolineno="78" lineno="78" type="str">'${GITDIR}'</Const>
                <Name fromlineno="78" tolineno="78" lineno="78" name="d"/>
              </CallFunc>
              <Name fromlineno="78" tolineno="78" lineno="78" name="gitsrcname"/>
            </CallFunc>
          </Assign>
          <Assign fromlineno="80" tolineno="80" lineno="80" targets="[&lt;AssName(coname) l.80 [bb.fetch.git] at Ox9ef002c&gt;]" value="('%s') % (ud.tag)">
            <AssName fromlineno="80" tolineno="80" lineno="80" name="coname"/>
            <BinOp fromlineno="80" tolineno="80" lineno="80" op="%" left="'%s'" right="ud.tag">
              <Const fromlineno="80" tolineno="80" lineno="80" type="str">'%s'</Const>
              <Getattr fromlineno="80" tolineno="80" lineno="80" attrname="tag" expr="ud">
                <Name fromlineno="80" tolineno="80" lineno="80" name="ud"/>
              </Getattr>
            </BinOp>
          </Assign>
          <Assign fromlineno="81" tolineno="81" lineno="81" targets="[&lt;AssName(codir) l.81 [bb.fetch.git] at Ox9ef012c&gt;]" value="os.path.join(repodir, coname)">
            <AssName fromlineno="81" tolineno="81" lineno="81" name="codir"/>
            <CallFunc fromlineno="81" tolineno="81" lineno="81" func="Getattr(join)">
              <Getattr fromlineno="81" tolineno="81" lineno="81" attrname="join" expr="os.path">
                <Getattr fromlineno="81" tolineno="81" lineno="81" attrname="path" expr="os">
                  <Name fromlineno="81" tolineno="81" lineno="81" name="os"/>
                </Getattr>
              </Getattr>
              <Name fromlineno="81" tolineno="81" lineno="81" name="repodir"/>
              <Name fromlineno="81" tolineno="81" lineno="81" name="coname"/>
            </CallFunc>
          </Assign>
          <If fromlineno="83" tolineno="89" lineno="83">
            <UnaryOp fromlineno="83" tolineno="83" lineno="83">
              <CallFunc fromlineno="83" tolineno="83" lineno="83" func="Getattr(exists)">
                <Getattr fromlineno="83" tolineno="83" lineno="83" attrname="exists" expr="os.path">
                  <Getattr fromlineno="83" tolineno="83" lineno="83" attrname="path" expr="os">
                    <Name fromlineno="83" tolineno="83" lineno="83" name="os"/>
                  </Getattr>
                </Getattr>
                <Name fromlineno="83" tolineno="83" lineno="83" name="repodir"/>
              </CallFunc>
            </UnaryOp>
            <If fromlineno="84" tolineno="89" lineno="84">
              <CallFunc fromlineno="84" tolineno="84" lineno="84" func="Getattr(try_mirror)">
                <Getattr fromlineno="84" tolineno="84" lineno="84" attrname="try_mirror" expr="Fetch">
                  <Name fromlineno="84" tolineno="84" lineno="84" name="Fetch"/>
                </Getattr>
                <Name fromlineno="84" tolineno="84" lineno="84" name="d"/>
                <Name fromlineno="84" tolineno="84" lineno="84" name="repofilename"/>
              </CallFunc>
              <Discard fromlineno="85" tolineno="85" lineno="85">
                <CallFunc fromlineno="85" tolineno="85" lineno="85" func="Getattr(mkdirhier)">
                  <Getattr fromlineno="85" tolineno="85" lineno="85" attrname="mkdirhier" expr="bb">
                    <Name fromlineno="85" tolineno="85" lineno="85" name="bb"/>
                  </Getattr>
                  <Name fromlineno="85" tolineno="85" lineno="85" name="repodir"/>
                </CallFunc>
              </Discard>
              <Discard fromlineno="86" tolineno="86" lineno="86">
                <CallFunc fromlineno="86" tolineno="86" lineno="86" func="Getattr(chdir)">
                  <Getattr fromlineno="86" tolineno="86" lineno="86" attrname="chdir" expr="os">
                    <Name fromlineno="86" tolineno="86" lineno="86" name="os"/>
                  </Getattr>
                  <Name fromlineno="86" tolineno="86" lineno="86" name="repodir"/>
                </CallFunc>
              </Discard>
              <Discard fromlineno="87" tolineno="87" lineno="87">
                <CallFunc fromlineno="87" tolineno="87" lineno="87" func="Name(runfetchcmd)">
                  <Name fromlineno="87" tolineno="87" lineno="87" name="runfetchcmd"/>
                  <BinOp fromlineno="87" tolineno="87" lineno="87" op="%" left="'tar -xzf %s'" right="repofile">
                    <Const fromlineno="87" tolineno="87" lineno="87" type="str">'tar -xzf %s'</Const>
                    <Name fromlineno="87" tolineno="87" lineno="87" name="repofile"/>
                  </BinOp>
                  <Name fromlineno="87" tolineno="87" lineno="87" name="d"/>
                </CallFunc>
              </Discard>
              <Discard fromlineno="89" tolineno="89" lineno="89">
                <CallFunc fromlineno="89" tolineno="89" lineno="89" func="Name(runfetchcmd)">
                  <Name fromlineno="89" tolineno="89" lineno="89" name="runfetchcmd"/>
                  <BinOp fromlineno="89" tolineno="89" lineno="89" op="%" left="'git clone -n %s://%s%s%s %s'" right="(ud.proto, username, ud.host, ud.path, repodir)">
                    <Const fromlineno="89" tolineno="89" lineno="89" type="str">'git clone -n %s://%s%s%s %s'</Const>
                    <Tuple fromlineno="89" tolineno="89" lineno="89">
                      <Getattr fromlineno="89" tolineno="89" lineno="89" attrname="proto" expr="ud">
                        <Name fromlineno="89" tolineno="89" lineno="89" name="ud"/>
                      </Getattr>
                      <Name fromlineno="89" tolineno="89" lineno="89" name="username"/>
                      <Getattr fromlineno="89" tolineno="89" lineno="89" attrname="host" expr="ud">
                        <Name fromlineno="89" tolineno="89" lineno="89" name="ud"/>
                      </Getattr>
                      <Getattr fromlineno="89" tolineno="89" lineno="89" attrname="path" expr="ud">
                        <Name fromlineno="89" tolineno="89" lineno="89" name="ud"/>
                      </Getattr>
                      <Name fromlineno="89" tolineno="89" lineno="89" name="repodir"/>
                    </Tuple>
                  </BinOp>
                  <Name fromlineno="89" tolineno="89" lineno="89" name="d"/>
                </CallFunc>
              </Discard>
            </If>
          </If>
          <Discard fromlineno="91" tolineno="91" lineno="91">
            <CallFunc fromlineno="91" tolineno="91" lineno="91" func="Getattr(chdir)">
              <Getattr fromlineno="91" tolineno="91" lineno="91" attrname="chdir" expr="os">
                <Name fromlineno="91" tolineno="91" lineno="91" name="os"/>
              </Getattr>
              <Name fromlineno="91" tolineno="91" lineno="91" name="repodir"/>
            </CallFunc>
          </Discard>
          <If fromlineno="93" tolineno="98" lineno="93">
            <UnaryOp fromlineno="93" tolineno="93" lineno="93">
              <CallFunc fromlineno="93" tolineno="93" lineno="93" func="Getattr(_contains_ref)">
                <Getattr fromlineno="93" tolineno="93" lineno="93" attrname="_contains_ref" expr="self">
                  <Name fromlineno="93" tolineno="93" lineno="93" name="self"/>
                </Getattr>
                <Getattr fromlineno="93" tolineno="93" lineno="93" attrname="tag" expr="ud">
                  <Name fromlineno="93" tolineno="93" lineno="93" name="ud"/>
                </Getattr>
                <Name fromlineno="93" tolineno="93" lineno="93" name="d"/>
              </CallFunc>
            </UnaryOp>
            <Discard fromlineno="94" tolineno="94" lineno="94">
              <CallFunc fromlineno="94" tolineno="94" lineno="94" func="Name(runfetchcmd)">
                <Name fromlineno="94" tolineno="94" lineno="94" name="runfetchcmd"/>
                <Const fromlineno="94" tolineno="94" lineno="94" type="str">'rm * -Rf'</Const>
                <Name fromlineno="94" tolineno="94" lineno="94" name="d"/>
              </CallFunc>
            </Discard>
            <Discard fromlineno="95" tolineno="95" lineno="95">
              <CallFunc fromlineno="95" tolineno="95" lineno="95" func="Name(runfetchcmd)">
                <Name fromlineno="95" tolineno="95" lineno="95" name="runfetchcmd"/>
                <BinOp fromlineno="95" tolineno="95" lineno="95" op="%" left="'git fetch %s://%s%s%s %s'" right="(ud.proto, username, ud.host, ud.path, ud.branch)">
                  <Const fromlineno="95" tolineno="95" lineno="95" type="str">'git fetch %s://%s%s%s %s'</Const>
                  <Tuple fromlineno="95" tolineno="95" lineno="95">
                    <Getattr fromlineno="95" tolineno="95" lineno="95" attrname="proto" expr="ud">
                      <Name fromlineno="95" tolineno="95" lineno="95" name="ud"/>
                    </Getattr>
                    <Name fromlineno="95" tolineno="95" lineno="95" name="username"/>
                    <Getattr fromlineno="95" tolineno="95" lineno="95" attrname="host" expr="ud">
                      <Name fromlineno="95" tolineno="95" lineno="95" name="ud"/>
                    </Getattr>
                    <Getattr fromlineno="95" tolineno="95" lineno="95" attrname="path" expr="ud">
                      <Name fromlineno="95" tolineno="95" lineno="95" name="ud"/>
                    </Getattr>
                    <Getattr fromlineno="95" tolineno="95" lineno="95" attrname="branch" expr="ud">
                      <Name fromlineno="95" tolineno="95" lineno="95" name="ud"/>
                    </Getattr>
                  </Tuple>
                </BinOp>
                <Name fromlineno="95" tolineno="95" lineno="95" name="d"/>
              </CallFunc>
            </Discard>
            <Discard fromlineno="96" tolineno="96" lineno="96">
              <CallFunc fromlineno="96" tolineno="96" lineno="96" func="Name(runfetchcmd)">
                <Name fromlineno="96" tolineno="96" lineno="96" name="runfetchcmd"/>
                <BinOp fromlineno="96" tolineno="96" lineno="96" op="%" left="'git fetch --tags %s://%s%s%s'" right="(ud.proto, username, ud.host, ud.path)">
                  <Const fromlineno="96" tolineno="96" lineno="96" type="str">'git fetch --tags %s://%s%s%s'</Const>
                  <Tuple fromlineno="96" tolineno="96" lineno="96">
                    <Getattr fromlineno="96" tolineno="96" lineno="96" attrname="proto" expr="ud">
                      <Name fromlineno="96" tolineno="96" lineno="96" name="ud"/>
                    </Getattr>
                    <Name fromlineno="96" tolineno="96" lineno="96" name="username"/>
                    <Getattr fromlineno="96" tolineno="96" lineno="96" attrname="host" expr="ud">
                      <Name fromlineno="96" tolineno="96" lineno="96" name="ud"/>
                    </Getattr>
                    <Getattr fromlineno="96" tolineno="96" lineno="96" attrname="path" expr="ud">
                      <Name fromlineno="96" tolineno="96" lineno="96" name="ud"/>
                    </Getattr>
                  </Tuple>
                </BinOp>
                <Name fromlineno="96" tolineno="96" lineno="96" name="d"/>
              </CallFunc>
            </Discard>
            <Discard fromlineno="97" tolineno="97" lineno="97">
              <CallFunc fromlineno="97" tolineno="97" lineno="97" func="Name(runfetchcmd)">
                <Name fromlineno="97" tolineno="97" lineno="97" name="runfetchcmd"/>
                <Const fromlineno="97" tolineno="97" lineno="97" type="str">'git prune-packed'</Const>
                <Name fromlineno="97" tolineno="97" lineno="97" name="d"/>
              </CallFunc>
            </Discard>
            <Discard fromlineno="98" tolineno="98" lineno="98">
              <CallFunc fromlineno="98" tolineno="98" lineno="98" func="Name(runfetchcmd)">
                <Name fromlineno="98" tolineno="98" lineno="98" name="runfetchcmd"/>
                <Const fromlineno="98" tolineno="98" lineno="98" type="str">'git pack-redundant --all | xargs -r rm'</Const>
                <Name fromlineno="98" tolineno="98" lineno="98" name="d"/>
              </CallFunc>
            </Discard>
          </If>
          <Discard fromlineno="100" tolineno="100" lineno="100">
            <CallFunc fromlineno="100" tolineno="100" lineno="100" func="Getattr(chdir)">
              <Getattr fromlineno="100" tolineno="100" lineno="100" attrname="chdir" expr="os">
                <Name fromlineno="100" tolineno="100" lineno="100" name="os"/>
              </Getattr>
              <Name fromlineno="100" tolineno="100" lineno="100" name="repodir"/>
            </CallFunc>
          </Discard>
          <Assign fromlineno="101" tolineno="101" lineno="101" targets="[&lt;AssName(mirror_tarballs) l.101 [bb.fetch.git] at Ox9ef630c&gt;]" value="data.getVar('BB_GENERATE_MIRROR_TARBALLS', d, True)">
            <AssName fromlineno="101" tolineno="101" lineno="101" name="mirror_tarballs"/>
            <CallFunc fromlineno="101" tolineno="101" lineno="101" func="Getattr(getVar)">
              <Getattr fromlineno="101" tolineno="101" lineno="101" attrname="getVar" expr="data">
                <Name fromlineno="101" tolineno="101" lineno="101" name="data"/>
              </Getattr>
              <Const fromlineno="101" tolineno="101" lineno="101" type="str">'BB_GENERATE_MIRROR_TARBALLS'</Const>
              <Name fromlineno="101" tolineno="101" lineno="101" name="d"/>
              <Const fromlineno="101" tolineno="101" lineno="101" type="bool">True</Const>
            </CallFunc>
          </Assign>
          <If fromlineno="102" tolineno="104" lineno="102">
            <Compare fromlineno="102" tolineno="102" lineno="102" op="('!=', &lt;Const(str) l.102 [bb.fetch.git] at Ox9ef64cc&gt;)">
              <Name fromlineno="102" tolineno="102" lineno="102" name="mirror_tarballs"/>
              <Const fromlineno="102" tolineno="102" lineno="102" type="str">'0'</Const>
            </Compare>
            <Discard fromlineno="103" tolineno="103" lineno="103">
              <CallFunc fromlineno="103" tolineno="103" lineno="103" func="Getattr(note)">
                <Getattr fromlineno="103" tolineno="103" lineno="103" attrname="note" expr="bb.msg">
                  <Getattr fromlineno="103" tolineno="103" lineno="103" attrname="msg" expr="bb">
                    <Name fromlineno="103" tolineno="103" lineno="103" name="bb"/>
                  </Getattr>
                </Getattr>
                <Const fromlineno="103" tolineno="103" lineno="103" type="int">1</Const>
                <Getattr fromlineno="103" tolineno="103" lineno="103" attrname="Fetcher" expr="bb.msg.domain">
                  <Getattr fromlineno="103" tolineno="103" lineno="103" attrname="domain" expr="bb.msg">
                    <Getattr fromlineno="103" tolineno="103" lineno="103" attrname="msg" expr="bb">
                      <Name fromlineno="103" tolineno="103" lineno="103" name="bb"/>
                    </Getattr>
                  </Getattr>
                </Getattr>
                <Const fromlineno="103" tolineno="103" lineno="103" type="str">'Creating tarball of git repository'</Const>
              </CallFunc>
            </Discard>
            <Discard fromlineno="104" tolineno="104" lineno="104">
              <CallFunc fromlineno="104" tolineno="104" lineno="104" func="Name(runfetchcmd)">
                <Name fromlineno="104" tolineno="104" lineno="104" name="runfetchcmd"/>
                <BinOp fromlineno="104" tolineno="104" lineno="104" op="%" left="'tar -czf %s %s'" right="(repofile, os.path.join('.', '.git', '*'))">
                  <Const fromlineno="104" tolineno="104" lineno="104" type="str">'tar -czf %s %s'</Const>
                  <Tuple fromlineno="104" tolineno="104" lineno="104">
                    <Name fromlineno="104" tolineno="104" lineno="104" name="repofile"/>
                    <CallFunc fromlineno="104" tolineno="104" lineno="104" func="Getattr(join)">
                      <Getattr fromlineno="104" tolineno="104" lineno="104" attrname="join" expr="os.path">
                        <Getattr fromlineno="104" tolineno="104" lineno="104" attrname="path" expr="os">
                          <Name fromlineno="104" tolineno="104" lineno="104" name="os"/>
                        </Getattr>
                      </Getattr>
                      <Const fromlineno="104" tolineno="104" lineno="104" type="str">'.'</Const>
                      <Const fromlineno="104" tolineno="104" lineno="104" type="str">'.git'</Const>
                      <Const fromlineno="104" tolineno="104" lineno="104" type="str">'*'</Const>
                    </CallFunc>
                  </Tuple>
                </BinOp>
                <Name fromlineno="104" tolineno="104" lineno="104" name="d"/>
              </CallFunc>
            </Discard>
          </If>
          <If fromlineno="106" tolineno="107" lineno="106">
            <CallFunc fromlineno="106" tolineno="106" lineno="106" func="Getattr(exists)">
              <Getattr fromlineno="106" tolineno="106" lineno="106" attrname="exists" expr="os.path">
                <Getattr fromlineno="106" tolineno="106" lineno="106" attrname="path" expr="os">
                  <Name fromlineno="106" tolineno="106" lineno="106" name="os"/>
                </Getattr>
              </Getattr>
              <Name fromlineno="106" tolineno="106" lineno="106" name="codir"/>
            </CallFunc>
            <Discard fromlineno="107" tolineno="107" lineno="107">
              <CallFunc fromlineno="107" tolineno="107" lineno="107" func="Getattr(prunedir)">
                <Getattr fromlineno="107" tolineno="107" lineno="107" attrname="prunedir" expr="bb.utils">
                  <Getattr fromlineno="107" tolineno="107" lineno="107" attrname="utils" expr="bb">
                    <Name fromlineno="107" tolineno="107" lineno="107" name="bb"/>
                  </Getattr>
                </Getattr>
                <Name fromlineno="107" tolineno="107" lineno="107" name="codir"/>
              </CallFunc>
            </Discard>
          </If>
          <Discard fromlineno="109" tolineno="109" lineno="109">
            <CallFunc fromlineno="109" tolineno="109" lineno="109" func="Getattr(mkdirhier)">
              <Getattr fromlineno="109" tolineno="109" lineno="109" attrname="mkdirhier" expr="bb">
                <Name fromlineno="109" tolineno="109" lineno="109" name="bb"/>
              </Getattr>
              <Name fromlineno="109" tolineno="109" lineno="109" name="codir"/>
            </CallFunc>
          </Discard>
          <Discard fromlineno="110" tolineno="110" lineno="110">
            <CallFunc fromlineno="110" tolineno="110" lineno="110" func="Getattr(chdir)">
              <Getattr fromlineno="110" tolineno="110" lineno="110" attrname="chdir" expr="os">
                <Name fromlineno="110" tolineno="110" lineno="110" name="os"/>
              </Getattr>
              <Name fromlineno="110" tolineno="110" lineno="110" name="repodir"/>
            </CallFunc>
          </Discard>
          <Discard fromlineno="111" tolineno="111" lineno="111">
            <CallFunc fromlineno="111" tolineno="111" lineno="111" func="Name(runfetchcmd)">
              <Name fromlineno="111" tolineno="111" lineno="111" name="runfetchcmd"/>
              <BinOp fromlineno="111" tolineno="111" lineno="111" op="%" left="'git read-tree %s'" right="ud.tag">
                <Const fromlineno="111" tolineno="111" lineno="111" type="str">'git read-tree %s'</Const>
                <Getattr fromlineno="111" tolineno="111" lineno="111" attrname="tag" expr="ud">
                  <Name fromlineno="111" tolineno="111" lineno="111" name="ud"/>
                </Getattr>
              </BinOp>
              <Name fromlineno="111" tolineno="111" lineno="111" name="d"/>
            </CallFunc>
          </Discard>
          <Discard fromlineno="112" tolineno="112" lineno="112">
            <CallFunc fromlineno="112" tolineno="112" lineno="112" func="Name(runfetchcmd)">
              <Name fromlineno="112" tolineno="112" lineno="112" name="runfetchcmd"/>
              <BinOp fromlineno="112" tolineno="112" lineno="112" op="%" left="'git checkout-index -q -f --prefix=%s -a'" right="os.path.join(codir, 'git', '')">
                <Const fromlineno="112" tolineno="112" lineno="112" type="str">'git checkout-index -q -f --prefix=%s -a'</Const>
                <CallFunc fromlineno="112" tolineno="112" lineno="112" func="Getattr(join)">
                  <Getattr fromlineno="112" tolineno="112" lineno="112" attrname="join" expr="os.path">
                    <Getattr fromlineno="112" tolineno="112" lineno="112" attrname="path" expr="os">
                      <Name fromlineno="112" tolineno="112" lineno="112" name="os"/>
                    </Getattr>
                  </Getattr>
                  <Name fromlineno="112" tolineno="112" lineno="112" name="codir"/>
                  <Const fromlineno="112" tolineno="112" lineno="112" type="str">'git'</Const>
                  <Const fromlineno="112" tolineno="112" lineno="112" type="str">''</Const>
                </CallFunc>
              </BinOp>
              <Name fromlineno="112" tolineno="112" lineno="112" name="d"/>
            </CallFunc>
          </Discard>
          <Discard fromlineno="114" tolineno="114" lineno="114">
            <CallFunc fromlineno="114" tolineno="114" lineno="114" func="Getattr(chdir)">
              <Getattr fromlineno="114" tolineno="114" lineno="114" attrname="chdir" expr="os">
                <Name fromlineno="114" tolineno="114" lineno="114" name="os"/>
              </Getattr>
              <Name fromlineno="114" tolineno="114" lineno="114" name="codir"/>
            </CallFunc>
          </Discard>
          <Discard fromlineno="115" tolineno="115" lineno="115">
            <CallFunc fromlineno="115" tolineno="115" lineno="115" func="Getattr(note)">
              <Getattr fromlineno="115" tolineno="115" lineno="115" attrname="note" expr="bb.msg">
                <Getattr fromlineno="115" tolineno="115" lineno="115" attrname="msg" expr="bb">
                  <Name fromlineno="115" tolineno="115" lineno="115" name="bb"/>
                </Getattr>
              </Getattr>
              <Const fromlineno="115" tolineno="115" lineno="115" type="int">1</Const>
              <Getattr fromlineno="115" tolineno="115" lineno="115" attrname="Fetcher" expr="bb.msg.domain">
                <Getattr fromlineno="115" tolineno="115" lineno="115" attrname="domain" expr="bb.msg">
                  <Getattr fromlineno="115" tolineno="115" lineno="115" attrname="msg" expr="bb">
                    <Name fromlineno="115" tolineno="115" lineno="115" name="bb"/>
                  </Getattr>
                </Getattr>
              </Getattr>
              <Const fromlineno="115" tolineno="115" lineno="115" type="str">'Creating tarball of git checkout'</Const>
            </CallFunc>
          </Discard>
          <Discard fromlineno="116" tolineno="116" lineno="116">
            <CallFunc fromlineno="116" tolineno="116" lineno="116" func="Name(runfetchcmd)">
              <Name fromlineno="116" tolineno="116" lineno="116" name="runfetchcmd"/>
              <BinOp fromlineno="116" tolineno="116" lineno="116" op="%" left="'tar -czf %s %s'" right="(ud.localpath, os.path.join('.', '*'))">
                <Const fromlineno="116" tolineno="116" lineno="116" type="str">'tar -czf %s %s'</Const>
                <Tuple fromlineno="116" tolineno="116" lineno="116">
                  <Getattr fromlineno="116" tolineno="116" lineno="116" attrname="localpath" expr="ud">
                    <Name fromlineno="116" tolineno="116" lineno="116" name="ud"/>
                  </Getattr>
                  <CallFunc fromlineno="116" tolineno="116" lineno="116" func="Getattr(join)">
                    <Getattr fromlineno="116" tolineno="116" lineno="116" attrname="join" expr="os.path">
                      <Getattr fromlineno="116" tolineno="116" lineno="116" attrname="path" expr="os">
                        <Name fromlineno="116" tolineno="116" lineno="116" name="os"/>
                      </Getattr>
                    </Getattr>
                    <Const fromlineno="116" tolineno="116" lineno="116" type="str">'.'</Const>
                    <Const fromlineno="116" tolineno="116" lineno="116" type="str">'*'</Const>
                  </CallFunc>
                </Tuple>
              </BinOp>
              <Name fromlineno="116" tolineno="116" lineno="116" name="d"/>
            </CallFunc>
          </Discard>
          <Discard fromlineno="118" tolineno="118" lineno="118">
            <CallFunc fromlineno="118" tolineno="118" lineno="118" func="Getattr(chdir)">
              <Getattr fromlineno="118" tolineno="118" lineno="118" attrname="chdir" expr="os">
                <Name fromlineno="118" tolineno="118" lineno="118" name="os"/>
              </Getattr>
              <Name fromlineno="118" tolineno="118" lineno="118" name="repodir"/>
            </CallFunc>
          </Discard>
          <Discard fromlineno="119" tolineno="119" lineno="119">
            <CallFunc fromlineno="119" tolineno="119" lineno="119" func="Getattr(prunedir)">
              <Getattr fromlineno="119" tolineno="119" lineno="119" attrname="prunedir" expr="bb.utils">
                <Getattr fromlineno="119" tolineno="119" lineno="119" attrname="utils" expr="bb">
                  <Name fromlineno="119" tolineno="119" lineno="119" name="bb"/>
                </Getattr>
              </Getattr>
              <Name fromlineno="119" tolineno="119" lineno="119" name="codir"/>
            </CallFunc>
          </Discard>
        </Function>
        <Function fromlineno="121" tolineno="122" lineno="121">
          <Arguments fromlineno="121" tolineno="121" lineno="None" format_args="self">
            <AssName fromlineno="121" tolineno="121" lineno="121" name="self"/>
          </Arguments>
          <Return fromlineno="122" tolineno="122" lineno="122">
            <Const fromlineno="122" tolineno="122" lineno="122" type="bool">True</Const>
          </Return>
        </Function>
        <Function fromlineno="124" tolineno="126" lineno="124">
          <Arguments fromlineno="124" tolineno="124" lineno="None" format_args="self, tag, d">
            <AssName fromlineno="124" tolineno="124" lineno="124" name="self"/>
            <AssName fromlineno="124" tolineno="124" lineno="124" name="tag"/>
            <AssName fromlineno="124" tolineno="124" lineno="124" name="d"/>
          </Arguments>
          <Assign fromlineno="125" tolineno="125" lineno="125" targets="[&lt;AssName(output) l.125 [bb.fetch.git] at Ox9efa8ac&gt;]" value="runfetchcmd(('git log --pretty=oneline -n 1 %s -- 2&gt; /dev/null | wc -l') % (tag), d, quiet=True)">
            <AssName fromlineno="125" tolineno="125" lineno="125" name="output"/>
            <CallFunc fromlineno="125" tolineno="125" lineno="125" func="Name(runfetchcmd)">
              <Name fromlineno="125" tolineno="125" lineno="125" name="runfetchcmd"/>
              <BinOp fromlineno="125" tolineno="125" lineno="125" op="%" left="'git log --pretty=oneline -n 1 %s -- 2&gt; /dev/null | wc -l'" right="tag">
                <Const fromlineno="125" tolineno="125" lineno="125" type="str">'git log --pretty=oneline -n 1 %s -- 2&gt; /dev/null | wc -l'</Const>
                <Name fromlineno="125" tolineno="125" lineno="125" name="tag"/>
              </BinOp>
              <Name fromlineno="125" tolineno="125" lineno="125" name="d"/>
              <Keyword fromlineno="125" tolineno="125" lineno="None">
                <Const fromlineno="125" tolineno="125" lineno="125" type="bool">True</Const>
              </Keyword>
            </CallFunc>
          </Assign>
          <Return fromlineno="126" tolineno="126" lineno="126">
            <Compare fromlineno="126" tolineno="126" lineno="126" op="('!=', &lt;Const(str) l.126 [bb.fetch.git] at Ox9efab6c&gt;)">
              <Subscript fromlineno="126" tolineno="126" lineno="126">
                <CallFunc fromlineno="126" tolineno="126" lineno="126" func="Getattr(split)">
                  <Getattr fromlineno="126" tolineno="126" lineno="126" attrname="split" expr="output">
                    <Name fromlineno="126" tolineno="126" lineno="126" name="output"/>
                  </Getattr>
                </CallFunc>
                <Index fromlineno="126" tolineno="126" lineno="None">
                  <Const fromlineno="126" tolineno="126" lineno="126" type="int">0</Const>
                </Index>
              </Subscript>
              <Const fromlineno="126" tolineno="126" lineno="126" type="str">'0'</Const>
            </Compare>
          </Return>
        </Function>
        <Function fromlineno="128" tolineno="132" lineno="128">
          <Arguments fromlineno="128" tolineno="128" lineno="None" format_args="self, url, ud, d">
            <AssName fromlineno="128" tolineno="128" lineno="128" name="self"/>
            <AssName fromlineno="128" tolineno="128" lineno="128" name="url"/>
            <AssName fromlineno="128" tolineno="128" lineno="128" name="ud"/>
            <AssName fromlineno="128" tolineno="128" lineno="128" name="d"/>
          </Arguments>
          <Return fromlineno="132" tolineno="132" lineno="132">
            <BinOp fromlineno="132" tolineno="132" lineno="132" op="+" left="('git:') + (ud.host)" right="ud.path.replace('/', '.')">
              <BinOp fromlineno="132" tolineno="132" lineno="132" op="+" left="'git:'" right="ud.host">
                <Const fromlineno="132" tolineno="132" lineno="132" type="str">'git:'</Const>
                <Getattr fromlineno="132" tolineno="132" lineno="132" attrname="host" expr="ud">
                  <Name fromlineno="132" tolineno="132" lineno="132" name="ud"/>
                </Getattr>
              </BinOp>
              <CallFunc fromlineno="132" tolineno="132" lineno="132" func="Getattr(replace)">
                <Getattr fromlineno="132" tolineno="132" lineno="132" attrname="replace" expr="ud.path">
                  <Getattr fromlineno="132" tolineno="132" lineno="132" attrname="path" expr="ud">
                    <Name fromlineno="132" tolineno="132" lineno="132" name="ud"/>
                  </Getattr>
                </Getattr>
                <Const fromlineno="132" tolineno="132" lineno="132" type="str">'/'</Const>
                <Const fromlineno="132" tolineno="132" lineno="132" type="str">'.'</Const>
              </CallFunc>
            </BinOp>
          </Return>
        </Function>
        <Function fromlineno="134" tolineno="144" lineno="134">
          <Arguments fromlineno="134" tolineno="134" lineno="None" format_args="self, url, ud, d">
            <AssName fromlineno="134" tolineno="134" lineno="134" name="self"/>
            <AssName fromlineno="134" tolineno="134" lineno="134" name="url"/>
            <AssName fromlineno="134" tolineno="134" lineno="134" name="ud"/>
            <AssName fromlineno="134" tolineno="134" lineno="134" name="d"/>
          </Arguments>
          <If fromlineno="138" tolineno="141" lineno="138">
            <Getattr fromlineno="138" tolineno="138" lineno="138" attrname="user" expr="ud">
              <Name fromlineno="138" tolineno="138" lineno="138" name="ud"/>
            </Getattr>
            <Assign fromlineno="139" tolineno="139" lineno="139" targets="[&lt;AssName(username) l.139 [bb.fetch.git] at Ox9eff12c&gt;]" value="(ud.user) + ('@')">
              <AssName fromlineno="139" tolineno="139" lineno="139" name="username"/>
              <BinOp fromlineno="139" tolineno="139" lineno="139" op="+" left="ud.user" right="'@'">
                <Getattr fromlineno="139" tolineno="139" lineno="139" attrname="user" expr="ud">
                  <Name fromlineno="139" tolineno="139" lineno="139" name="ud"/>
                </Getattr>
                <Const fromlineno="139" tolineno="139" lineno="139" type="str">'@'</Const>
              </BinOp>
            </Assign>
            <Assign fromlineno="141" tolineno="141" lineno="141" targets="[&lt;AssName(username) l.141 [bb.fetch.git] at Ox9eff24c&gt;]" value="''">
              <AssName fromlineno="141" tolineno="141" lineno="141" name="username"/>
              <Const fromlineno="141" tolineno="141" lineno="141" type="str">''</Const>
            </Assign>
          </If>
          <Assign fromlineno="143" tolineno="143" lineno="143" targets="[&lt;AssName(output) l.143 [bb.fetch.git] at Ox9eff2ac&gt;]" value="runfetchcmd(('git ls-remote %s://%s%s%s %s') % ((ud.proto, username, ud.host, ud.path, ud.branch)), d, True)">
            <AssName fromlineno="143" tolineno="143" lineno="143" name="output"/>
            <CallFunc fromlineno="143" tolineno="143" lineno="143" func="Name(runfetchcmd)">
              <Name fromlineno="143" tolineno="143" lineno="143" name="runfetchcmd"/>
              <BinOp fromlineno="143" tolineno="143" lineno="143" op="%" left="'git ls-remote %s://%s%s%s %s'" right="(ud.proto, username, ud.host, ud.path, ud.branch)">
                <Const fromlineno="143" tolineno="143" lineno="143" type="str">'git ls-remote %s://%s%s%s %s'</Const>
                <Tuple fromlineno="143" tolineno="143" lineno="143">
                  <Getattr fromlineno="143" tolineno="143" lineno="143" attrname="proto" expr="ud">
                    <Name fromlineno="143" tolineno="143" lineno="143" name="ud"/>
                  </Getattr>
                  <Name fromlineno="143" tolineno="143" lineno="143" name="username"/>
                  <Getattr fromlineno="143" tolineno="143" lineno="143" attrname="host" expr="ud">
                    <Name fromlineno="143" tolineno="143" lineno="143" name="ud"/>
                  </Getattr>
                  <Getattr fromlineno="143" tolineno="143" lineno="143" attrname="path" expr="ud">
                    <Name fromlineno="143" tolineno="143" lineno="143" name="ud"/>
                  </Getattr>
                  <Getattr fromlineno="143" tolineno="143" lineno="143" attrname="branch" expr="ud">
                    <Name fromlineno="143" tolineno="143" lineno="143" name="ud"/>
                  </Getattr>
                </Tuple>
              </BinOp>
              <Name fromlineno="143" tolineno="143" lineno="143" name="d"/>
              <Const fromlineno="143" tolineno="143" lineno="143" type="bool">True</Const>
            </CallFunc>
          </Assign>
          <Return fromlineno="144" tolineno="144" lineno="144">
            <Subscript fromlineno="144" tolineno="144" lineno="144">
              <CallFunc fromlineno="144" tolineno="144" lineno="144" func="Getattr(split)">
                <Getattr fromlineno="144" tolineno="144" lineno="144" attrname="split" expr="output">
                  <Name fromlineno="144" tolineno="144" lineno="144" name="output"/>
                </Getattr>
              </CallFunc>
              <Index fromlineno="144" tolineno="144" lineno="None">
                <Const fromlineno="144" tolineno="144" lineno="144" type="int">0</Const>
              </Index>
            </Subscript>
          </Return>
        </Function>
        <Function fromlineno="146" tolineno="147" lineno="146">
          <Arguments fromlineno="146" tolineno="146" lineno="None" format_args="self, url, ud, d">
            <AssName fromlineno="146" tolineno="146" lineno="146" name="self"/>
            <AssName fromlineno="146" tolineno="146" lineno="146" name="url"/>
            <AssName fromlineno="146" tolineno="146" lineno="146" name="ud"/>
            <AssName fromlineno="146" tolineno="146" lineno="146" name="d"/>
          </Arguments>
          <Return fromlineno="147" tolineno="147" lineno="147">
            <Getattr fromlineno="147" tolineno="147" lineno="147" attrname="tag" expr="ud">
              <Name fromlineno="147" tolineno="147" lineno="147" name="ud"/>
            </Getattr>
          </Return>
        </Function>
        <Function fromlineno="149" tolineno="150" lineno="149">
          <Arguments fromlineno="149" tolineno="149" lineno="None" format_args="self, url, ud, d">
            <AssName fromlineno="149" tolineno="149" lineno="149" name="self"/>
            <AssName fromlineno="149" tolineno="149" lineno="149" name="url"/>
            <AssName fromlineno="149" tolineno="149" lineno="149" name="ud"/>
            <AssName fromlineno="149" tolineno="149" lineno="149" name="d"/>
          </Arguments>
          <Return fromlineno="150" tolineno="150" lineno="150">
            <BoolOp fromlineno="150" tolineno="150" lineno="150" op="or" values="bb.data.getVar('BB_GIT_CLONE_FOR_SRCREV', d, True),False,">
              <CallFunc fromlineno="150" tolineno="150" lineno="150" func="Getattr(getVar)">
                <Getattr fromlineno="150" tolineno="150" lineno="150" attrname="getVar" expr="bb.data">
                  <Getattr fromlineno="150" tolineno="150" lineno="150" attrname="data" expr="bb">
                    <Name fromlineno="150" tolineno="150" lineno="150" name="bb"/>
                  </Getattr>
                </Getattr>
                <Const fromlineno="150" tolineno="150" lineno="150" type="str">'BB_GIT_CLONE_FOR_SRCREV'</Const>
                <Name fromlineno="150" tolineno="150" lineno="150" name="d"/>
                <Const fromlineno="150" tolineno="150" lineno="150" type="bool">True</Const>
              </CallFunc>
              <Const fromlineno="150" tolineno="150" lineno="150" type="bool">False</Const>
            </BoolOp>
          </Return>
        </Function>
        <Function fromlineno="152" tolineno="187" lineno="152">
          <Arguments fromlineno="152" tolineno="152" lineno="None" format_args="self, url, ud, d">
            <AssName fromlineno="152" tolineno="152" lineno="152" name="self"/>
            <AssName fromlineno="152" tolineno="152" lineno="152" name="url"/>
            <AssName fromlineno="152" tolineno="152" lineno="152" name="ud"/>
            <AssName fromlineno="152" tolineno="152" lineno="152" name="d"/>
          </Arguments>
          <Assign fromlineno="158" tolineno="158" lineno="158" targets="[&lt;AssName(gitsrcname) l.158 [bb.fetch.git] at Ox9effd4c&gt;]" value="('%s%s') % ((ud.host, ud.path.replace('/', '.')))">
            <AssName fromlineno="158" tolineno="158" lineno="158" name="gitsrcname"/>
            <BinOp fromlineno="158" tolineno="158" lineno="158" op="%" left="'%s%s'" right="(ud.host, ud.path.replace('/', '.'))">
              <Const fromlineno="158" tolineno="158" lineno="158" type="str">'%s%s'</Const>
              <Tuple fromlineno="158" tolineno="158" lineno="158">
                <Getattr fromlineno="158" tolineno="158" lineno="158" attrname="host" expr="ud">
                  <Name fromlineno="158" tolineno="158" lineno="158" name="ud"/>
                </Getattr>
                <CallFunc fromlineno="158" tolineno="158" lineno="158" func="Getattr(replace)">
                  <Getattr fromlineno="158" tolineno="158" lineno="158" attrname="replace" expr="ud.path">
                    <Getattr fromlineno="158" tolineno="158" lineno="158" attrname="path" expr="ud">
                      <Name fromlineno="158" tolineno="158" lineno="158" name="ud"/>
                    </Getattr>
                  </Getattr>
                  <Const fromlineno="158" tolineno="158" lineno="158" type="str">'/'</Const>
                  <Const fromlineno="158" tolineno="158" lineno="158" type="str">'.'</Const>
                </CallFunc>
              </Tuple>
            </BinOp>
          </Assign>
          <Assign fromlineno="159" tolineno="159" lineno="159" targets="[&lt;AssName(repodir) l.159 [bb.fetch.git] at Ox9efff6c&gt;]" value="os.path.join(data.expand('${GITDIR}', d), gitsrcname)">
            <AssName fromlineno="159" tolineno="159" lineno="159" name="repodir"/>
            <CallFunc fromlineno="159" tolineno="159" lineno="159" func="Getattr(join)">
              <Getattr fromlineno="159" tolineno="159" lineno="159" attrname="join" expr="os.path">
                <Getattr fromlineno="159" tolineno="159" lineno="159" attrname="path" expr="os">
                  <Name fromlineno="159" tolineno="159" lineno="159" name="os"/>
                </Getattr>
              </Getattr>
              <CallFunc fromlineno="159" tolineno="159" lineno="159" func="Getattr(expand)">
                <Getattr fromlineno="159" tolineno="159" lineno="159" attrname="expand" expr="data">
                  <Name fromlineno="159" tolineno="159" lineno="159" name="data"/>
                </Getattr>
                <Const fromlineno="159" tolineno="159" lineno="159" type="str">'${GITDIR}'</Const>
                <Name fromlineno="159" tolineno="159" lineno="159" name="d"/>
              </CallFunc>
              <Name fromlineno="159" tolineno="159" lineno="159" name="gitsrcname"/>
            </CallFunc>
          </Assign>
          <Assign fromlineno="161" tolineno="161" lineno="161" targets="[&lt;AssName(key) l.161 [bb.fetch.git] at Ox9f0218c&gt;]" value="('GIT_CACHED_REVISION-%s-%s') % ((gitsrcname, ud.tag))">
            <AssName fromlineno="161" tolineno="161" lineno="161" name="key"/>
            <BinOp fromlineno="161" tolineno="161" lineno="161" op="%" left="'GIT_CACHED_REVISION-%s-%s'" right="(gitsrcname, ud.tag)">
              <Const fromlineno="161" tolineno="161" lineno="161" type="str">'GIT_CACHED_REVISION-%s-%s'</Const>
              <Tuple fromlineno="161" tolineno="161" lineno="161">
                <Name fromlineno="161" tolineno="161" lineno="161" name="gitsrcname"/>
                <Getattr fromlineno="161" tolineno="161" lineno="161" attrname="tag" expr="ud">
                  <Name fromlineno="161" tolineno="161" lineno="161" name="ud"/>
                </Getattr>
              </Tuple>
            </BinOp>
          </Assign>
          <If fromlineno="162" tolineno="163" lineno="162">
            <CallFunc fromlineno="162" tolineno="162" lineno="162" func="Getattr(getVar)">
              <Getattr fromlineno="162" tolineno="162" lineno="162" attrname="getVar" expr="bb.data">
                <Getattr fromlineno="162" tolineno="162" lineno="162" attrname="data" expr="bb">
                  <Name fromlineno="162" tolineno="162" lineno="162" name="bb"/>
                </Getattr>
              </Getattr>
              <Name fromlineno="162" tolineno="162" lineno="162" name="key"/>
              <Name fromlineno="162" tolineno="162" lineno="162" name="d"/>
            </CallFunc>
            <Return fromlineno="163" tolineno="163" lineno="163">
              <CallFunc fromlineno="163" tolineno="163" lineno="163" func="Getattr(getVar)">
                <Getattr fromlineno="163" tolineno="163" lineno="163" attrname="getVar" expr="bb.data">
                  <Getattr fromlineno="163" tolineno="163" lineno="163" attrname="data" expr="bb">
                    <Name fromlineno="163" tolineno="163" lineno="163" name="bb"/>
                  </Getattr>
                </Getattr>
                <Name fromlineno="163" tolineno="163" lineno="163" name="key"/>
                <Name fromlineno="163" tolineno="163" lineno="163" name="d"/>
              </CallFunc>
            </Return>
          </If>
          <If fromlineno="167" tolineno="169" lineno="167">
            <Compare fromlineno="167" tolineno="167" lineno="167" op="('==', &lt;Const(str) l.167 [bb.fetch.git] at Ox9f025ac&gt;)">
              <Getattr fromlineno="167" tolineno="167" lineno="167" attrname="tag" expr="ud">
                <Name fromlineno="167" tolineno="167" lineno="167" name="ud"/>
              </Getattr>
              <Const fromlineno="167" tolineno="167" lineno="167" type="str">'1'</Const>
            </Compare>
            <Discard fromlineno="168" tolineno="168" lineno="168">
              <CallFunc fromlineno="168" tolineno="168" lineno="168" func="Getattr(error)">
                <Getattr fromlineno="168" tolineno="168" lineno="168" attrname="error" expr="bb.msg">
                  <Getattr fromlineno="168" tolineno="168" lineno="168" attrname="msg" expr="bb">
                    <Name fromlineno="168" tolineno="168" lineno="168" name="bb"/>
                  </Getattr>
                </Getattr>
                <Const fromlineno="168" tolineno="168" lineno="168" type="int">1</Const>
                <Getattr fromlineno="168" tolineno="168" lineno="168" attrname="Fetcher" expr="bb.msg.domain">
                  <Getattr fromlineno="168" tolineno="168" lineno="168" attrname="domain" expr="bb.msg">
                    <Getattr fromlineno="168" tolineno="168" lineno="168" attrname="msg" expr="bb">
                      <Name fromlineno="168" tolineno="168" lineno="168" name="bb"/>
                    </Getattr>
                  </Getattr>
                </Getattr>
                <BinOp fromlineno="168" tolineno="168" lineno="168" op="%" left="&quot;SRCREV is '1'. This indicates a configuration error of %s&quot;" right="url">
                  <Const fromlineno="168" tolineno="168" lineno="168" type="str">"SRCREV is '1'. This indicates a configuration error of %s"</Const>
                  <Name fromlineno="168" tolineno="168" lineno="168" name="url"/>
                </BinOp>
              </CallFunc>
            </Discard>
            <Return fromlineno="169" tolineno="169" lineno="169">
              <Const fromlineno="169" tolineno="169" lineno="169" type="str">'0+1'</Const>
            </Return>
          </If>
          <Assign fromlineno="171" tolineno="171" lineno="171" targets="[&lt;AssName(cwd) l.171 [bb.fetch.git] at Ox9f0284c&gt;]" value="os.getcwd()">
            <AssName fromlineno="171" tolineno="171" lineno="171" name="cwd"/>
            <CallFunc fromlineno="171" tolineno="171" lineno="171" func="Getattr(getcwd)">
              <Getattr fromlineno="171" tolineno="171" lineno="171" attrname="getcwd" expr="os">
                <Name fromlineno="171" tolineno="171" lineno="171" name="os"/>
              </Getattr>
            </CallFunc>
          </Assign>
          <If fromlineno="174" tolineno="176" lineno="174">
            <UnaryOp fromlineno="174" tolineno="174" lineno="174">
              <CallFunc fromlineno="174" tolineno="174" lineno="174" func="Getattr(exists)">
                <Getattr fromlineno="174" tolineno="174" lineno="174" attrname="exists" expr="os.path">
                  <Getattr fromlineno="174" tolineno="174" lineno="174" attrname="path" expr="os">
                    <Name fromlineno="174" tolineno="174" lineno="174" name="os"/>
                  </Getattr>
                </Getattr>
                <Name fromlineno="174" tolineno="174" lineno="174" name="repodir"/>
              </CallFunc>
            </UnaryOp>
            <Print fromlineno="175" tolineno="175" lineno="175">
              <Const fromlineno="175" tolineno="175" lineno="175" type="str">'no repo'</Const>
            </Print>
            <Discard fromlineno="176" tolineno="176" lineno="176">
              <CallFunc fromlineno="176" tolineno="176" lineno="176" func="Getattr(go)">
                <Getattr fromlineno="176" tolineno="176" lineno="176" attrname="go" expr="self">
                  <Name fromlineno="176" tolineno="176" lineno="176" name="self"/>
                </Getattr>
                <Const fromlineno="176" tolineno="176" lineno="176" type="NoneType">None</Const>
                <Name fromlineno="176" tolineno="176" lineno="176" name="ud"/>
                <Name fromlineno="176" tolineno="176" lineno="176" name="d"/>
              </CallFunc>
            </Discard>
          </If>
          <Discard fromlineno="178" tolineno="178" lineno="178">
            <CallFunc fromlineno="178" tolineno="178" lineno="178" func="Getattr(chdir)">
              <Getattr fromlineno="178" tolineno="178" lineno="178" attrname="chdir" expr="os">
                <Name fromlineno="178" tolineno="178" lineno="178" name="os"/>
              </Getattr>
              <Name fromlineno="178" tolineno="178" lineno="178" name="repodir"/>
            </CallFunc>
          </Discard>
          <If fromlineno="179" tolineno="180" lineno="179">
            <UnaryOp fromlineno="179" tolineno="179" lineno="179">
              <CallFunc fromlineno="179" tolineno="179" lineno="179" func="Getattr(_contains_ref)">
                <Getattr fromlineno="179" tolineno="179" lineno="179" attrname="_contains_ref" expr="self">
                  <Name fromlineno="179" tolineno="179" lineno="179" name="self"/>
                </Getattr>
                <Getattr fromlineno="179" tolineno="179" lineno="179" attrname="tag" expr="ud">
                  <Name fromlineno="179" tolineno="179" lineno="179" name="ud"/>
                </Getattr>
                <Name fromlineno="179" tolineno="179" lineno="179" name="d"/>
              </CallFunc>
            </UnaryOp>
            <Discard fromlineno="180" tolineno="180" lineno="180">
              <CallFunc fromlineno="180" tolineno="180" lineno="180" func="Getattr(go)">
                <Getattr fromlineno="180" tolineno="180" lineno="180" attrname="go" expr="self">
                  <Name fromlineno="180" tolineno="180" lineno="180" name="self"/>
                </Getattr>
                <Const fromlineno="180" tolineno="180" lineno="180" type="NoneType">None</Const>
                <Name fromlineno="180" tolineno="180" lineno="180" name="ud"/>
                <Name fromlineno="180" tolineno="180" lineno="180" name="d"/>
              </CallFunc>
            </Discard>
          </If>
          <Assign fromlineno="182" tolineno="182" lineno="182" targets="[&lt;AssName(output) l.182 [bb.fetch.git] at Ox9f02f0c&gt;]" value="runfetchcmd(('git rev-list %s -- 2&gt; /dev/null | wc -l') % (ud.tag), d, quiet=True)">
            <AssName fromlineno="182" tolineno="182" lineno="182" name="output"/>
            <CallFunc fromlineno="182" tolineno="182" lineno="182" func="Name(runfetchcmd)">
              <Name fromlineno="182" tolineno="182" lineno="182" name="runfetchcmd"/>
              <BinOp fromlineno="182" tolineno="182" lineno="182" op="%" left="'git rev-list %s -- 2&gt; /dev/null | wc -l'" right="ud.tag">
                <Const fromlineno="182" tolineno="182" lineno="182" type="str">'git rev-list %s -- 2&gt; /dev/null | wc -l'</Const>
                <Getattr fromlineno="182" tolineno="182" lineno="182" attrname="tag" expr="ud">
                  <Name fromlineno="182" tolineno="182" lineno="182" name="ud"/>
                </Getattr>
              </BinOp>
              <Name fromlineno="182" tolineno="182" lineno="182" name="d"/>
              <Keyword fromlineno="182" tolineno="182" lineno="None">
                <Const fromlineno="182" tolineno="182" lineno="182" type="bool">True</Const>
              </Keyword>
            </CallFunc>
          </Assign>
          <Discard fromlineno="183" tolineno="183" lineno="183">
            <CallFunc fromlineno="183" tolineno="183" lineno="183" func="Getattr(chdir)">
              <Getattr fromlineno="183" tolineno="183" lineno="183" attrname="chdir" expr="os">
                <Name fromlineno="183" tolineno="183" lineno="183" name="os"/>
              </Getattr>
              <Name fromlineno="183" tolineno="183" lineno="183" name="cwd"/>
            </CallFunc>
          </Discard>
          <Assign fromlineno="185" tolineno="185" lineno="185" targets="[&lt;AssName(sortable_revision) l.185 [bb.fetch.git] at Ox9f071ac&gt;]" value="('%s+%s') % ((output.split()[0], ud.tag))">
            <AssName fromlineno="185" tolineno="185" lineno="185" name="sortable_revision"/>
            <BinOp fromlineno="185" tolineno="185" lineno="185" op="%" left="'%s+%s'" right="(output.split()[0], ud.tag)">
              <Const fromlineno="185" tolineno="185" lineno="185" type="str">'%s+%s'</Const>
              <Tuple fromlineno="185" tolineno="185" lineno="185">
                <Subscript fromlineno="185" tolineno="185" lineno="185">
                  <CallFunc fromlineno="185" tolineno="185" lineno="185" func="Getattr(split)">
                    <Getattr fromlineno="185" tolineno="185" lineno="185" attrname="split" expr="output">
                      <Name fromlineno="185" tolineno="185" lineno="185" name="output"/>
                    </Getattr>
                  </CallFunc>
                  <Index fromlineno="185" tolineno="185" lineno="None">
                    <Const fromlineno="185" tolineno="185" lineno="185" type="int">0</Const>
                  </Index>
                </Subscript>
                <Getattr fromlineno="185" tolineno="185" lineno="185" attrname="tag" expr="ud">
                  <Name fromlineno="185" tolineno="185" lineno="185" name="ud"/>
                </Getattr>
              </Tuple>
            </BinOp>
          </Assign>
          <Discard fromlineno="186" tolineno="186" lineno="186">
            <CallFunc fromlineno="186" tolineno="186" lineno="186" func="Getattr(setVar)">
              <Getattr fromlineno="186" tolineno="186" lineno="186" attrname="setVar" expr="bb.data">
                <Getattr fromlineno="186" tolineno="186" lineno="186" attrname="data" expr="bb">
                  <Name fromlineno="186" tolineno="186" lineno="186" name="bb"/>
                </Getattr>
              </Getattr>
              <Name fromlineno="186" tolineno="186" lineno="186" name="key"/>
              <Name fromlineno="186" tolineno="186" lineno="186" name="sortable_revision"/>
              <Name fromlineno="186" tolineno="186" lineno="186" name="d"/>
            </CallFunc>
          </Discard>
          <Return fromlineno="187" tolineno="187" lineno="187">
            <Name fromlineno="187" tolineno="187" lineno="187" name="sortable_revision"/>
          </Return>
        </Function>
      </Class>
    </Module>
    <Module fromlineno="0" tolineno="72" lineno="0" name="bb.fetch.local">
      <Import fromlineno="28" tolineno="28" lineno="28">
        <ImportName name="os"/>
        <ImportName name="re"/>
      </Import>
      <Import fromlineno="29" tolineno="29" lineno="29">
        <ImportName name="bb"/>
      </Import>
      <From fromlineno="30" tolineno="30" lineno="30" modname="bb">
        <ImportName name="data"/>
      </From>
      <From fromlineno="31" tolineno="31" lineno="31" modname="bb.fetch">
        <ImportName name="Fetch"/>
      </From>
      <Class fromlineno="33" tolineno="72" lineno="33">
        <Name fromlineno="33" tolineno="33" lineno="33" name="Fetch"/>
        <Function fromlineno="34" tolineno="38" lineno="34">
          <Arguments fromlineno="34" tolineno="34" lineno="None" format_args="self, url, urldata, d">
            <AssName fromlineno="34" tolineno="34" lineno="34" name="self"/>
            <AssName fromlineno="34" tolineno="34" lineno="34" name="url"/>
            <AssName fromlineno="34" tolineno="34" lineno="34" name="urldata"/>
            <AssName fromlineno="34" tolineno="34" lineno="34" name="d"/>
          </Arguments>
          <Return fromlineno="38" tolineno="38" lineno="38">
            <Compare fromlineno="38" tolineno="38" lineno="38" op="('in', &lt;List(list) l.38 [bb.fetch.local] at Ox951b92c&gt;)">
              <Getattr fromlineno="38" tolineno="38" lineno="38" attrname="type" expr="urldata">
                <Name fromlineno="38" tolineno="38" lineno="38" name="urldata"/>
              </Getattr>
              <List fromlineno="38" tolineno="38" lineno="38">
                <Const fromlineno="38" tolineno="38" lineno="38" type="str">'file'</Const>
                <Const fromlineno="38" tolineno="38" lineno="38" type="str">'patch'</Const>
              </List>
            </Compare>
          </Return>
        </Function>
        <Function fromlineno="40" tolineno="56" lineno="40">
          <Arguments fromlineno="40" tolineno="40" lineno="None" format_args="self, url, urldata, d">
            <AssName fromlineno="40" tolineno="40" lineno="40" name="self"/>
            <AssName fromlineno="40" tolineno="40" lineno="40" name="url"/>
            <AssName fromlineno="40" tolineno="40" lineno="40" name="urldata"/>
            <AssName fromlineno="40" tolineno="40" lineno="40" name="d"/>
          </Arguments>
          <Assign fromlineno="44" tolineno="44" lineno="44" targets="[&lt;AssName(path) l.44 [bb.fetch.local] at Ox951b82c&gt;]" value="url.split('://')[1]">
            <AssName fromlineno="44" tolineno="44" lineno="44" name="path"/>
            <Subscript fromlineno="44" tolineno="44" lineno="44">
              <CallFunc fromlineno="44" tolineno="44" lineno="44" func="Getattr(split)">
                <Getattr fromlineno="44" tolineno="44" lineno="44" attrname="split" expr="url">
                  <Name fromlineno="44" tolineno="44" lineno="44" name="url"/>
                </Getattr>
                <Const fromlineno="44" tolineno="44" lineno="44" type="str">'://'</Const>
              </CallFunc>
              <Index fromlineno="44" tolineno="44" lineno="None">
                <Const fromlineno="44" tolineno="44" lineno="44" type="int">1</Const>
              </Index>
            </Subscript>
          </Assign>
          <Assign fromlineno="45" tolineno="45" lineno="45" targets="[&lt;AssName(path) l.45 [bb.fetch.local] at Ox951bbec&gt;]" value="path.split(';')[0]">
            <AssName fromlineno="45" tolineno="45" lineno="45" name="path"/>
            <Subscript fromlineno="45" tolineno="45" lineno="45">
              <CallFunc fromlineno="45" tolineno="45" lineno="45" func="Getattr(split)">
                <Getattr fromlineno="45" tolineno="45" lineno="45" attrname="split" expr="path">
                  <Name fromlineno="45" tolineno="45" lineno="45" name="path"/>
                </Getattr>
                <Const fromlineno="45" tolineno="45" lineno="45" type="str">';'</Const>
              </CallFunc>
              <Index fromlineno="45" tolineno="45" lineno="None">
                <Const fromlineno="45" tolineno="45" lineno="45" type="int">0</Const>
              </Index>
            </Subscript>
          </Assign>
          <Assign fromlineno="46" tolineno="46" lineno="46" targets="[&lt;AssName(newpath) l.46 [bb.fetch.local] at Ox951b4ec&gt;]" value="path">
            <AssName fromlineno="46" tolineno="46" lineno="46" name="newpath"/>
            <Name fromlineno="46" tolineno="46" lineno="46" name="path"/>
          </Assign>
          <If fromlineno="47" tolineno="54" lineno="47">
            <Compare fromlineno="47" tolineno="47" lineno="47" op="('!=', &lt;Const(str) l.47 [bb.fetch.local] at Ox951b94c&gt;)">
              <Subscript fromlineno="47" tolineno="47" lineno="47">
                <Name fromlineno="47" tolineno="47" lineno="47" name="path"/>
                <Index fromlineno="47" tolineno="47" lineno="None">
                  <Const fromlineno="47" tolineno="47" lineno="47" type="int">0</Const>
                </Index>
              </Subscript>
              <Const fromlineno="47" tolineno="47" lineno="47" type="str">'/'</Const>
            </Compare>
            <Assign fromlineno="48" tolineno="48" lineno="48" targets="[&lt;AssName(filespath) l.48 [bb.fetch.local] at Ox951b3cc&gt;]" value="data.getVar('FILESPATH', d, 1)">
              <AssName fromlineno="48" tolineno="48" lineno="48" name="filespath"/>
              <CallFunc fromlineno="48" tolineno="48" lineno="48" func="Getattr(getVar)">
                <Getattr fromlineno="48" tolineno="48" lineno="48" attrname="getVar" expr="data">
                  <Name fromlineno="48" tolineno="48" lineno="48" name="data"/>
                </Getattr>
                <Const fromlineno="48" tolineno="48" lineno="48" type="str">'FILESPATH'</Const>
                <Name fromlineno="48" tolineno="48" lineno="48" name="d"/>
                <Const fromlineno="48" tolineno="48" lineno="48" type="int">1</Const>
              </CallFunc>
            </Assign>
            <If fromlineno="49" tolineno="50" lineno="49">
              <Name fromlineno="49" tolineno="49" lineno="49" name="filespath"/>
              <Assign fromlineno="50" tolineno="50" lineno="50" targets="[&lt;AssName(newpath) l.50 [bb.fetch.local] at Ox9af05ac&gt;]" value="bb.which(filespath, path)">
                <AssName fromlineno="50" tolineno="50" lineno="50" name="newpath"/>
                <CallFunc fromlineno="50" tolineno="50" lineno="50" func="Getattr(which)">
                  <Getattr fromlineno="50" tolineno="50" lineno="50" attrname="which" expr="bb">
                    <Name fromlineno="50" tolineno="50" lineno="50" name="bb"/>
                  </Getattr>
                  <Name fromlineno="50" tolineno="50" lineno="50" name="filespath"/>
                  <Name fromlineno="50" tolineno="50" lineno="50" name="path"/>
                </CallFunc>
              </Assign>
            </If>
            <If fromlineno="51" tolineno="54" lineno="51">
              <UnaryOp fromlineno="51" tolineno="51" lineno="51">
                <Name fromlineno="51" tolineno="51" lineno="51" name="newpath"/>
              </UnaryOp>
              <Assign fromlineno="52" tolineno="52" lineno="52" targets="[&lt;AssName(filesdir) l.52 [bb.fetch.local] at Ox9af0acc&gt;]" value="data.getVar('FILESDIR', d, 1)">
                <AssName fromlineno="52" tolineno="52" lineno="52" name="filesdir"/>
                <CallFunc fromlineno="52" tolineno="52" lineno="52" func="Getattr(getVar)">
                  <Getattr fromlineno="52" tolineno="52" lineno="52" attrname="getVar" expr="data">
                    <Name fromlineno="52" tolineno="52" lineno="52" name="data"/>
                  </Getattr>
                  <Const fromlineno="52" tolineno="52" lineno="52" type="str">'FILESDIR'</Const>
                  <Name fromlineno="52" tolineno="52" lineno="52" name="d"/>
                  <Const fromlineno="52" tolineno="52" lineno="52" type="int">1</Const>
                </CallFunc>
              </Assign>
              <If fromlineno="53" tolineno="54" lineno="53">
                <Name fromlineno="53" tolineno="53" lineno="53" name="filesdir"/>
                <Assign fromlineno="54" tolineno="54" lineno="54" targets="[&lt;AssName(newpath) l.54 [bb.fetch.local] at Ox9af0dac&gt;]" value="os.path.join(filesdir, path)">
                  <AssName fromlineno="54" tolineno="54" lineno="54" name="newpath"/>
                  <CallFunc fromlineno="54" tolineno="54" lineno="54" func="Getattr(join)">
                    <Getattr fromlineno="54" tolineno="54" lineno="54" attrname="join" expr="os.path">
                      <Getattr fromlineno="54" tolineno="54" lineno="54" attrname="path" expr="os">
                        <Name fromlineno="54" tolineno="54" lineno="54" name="os"/>
                      </Getattr>
                    </Getattr>
                    <Name fromlineno="54" tolineno="54" lineno="54" name="filesdir"/>
                    <Name fromlineno="54" tolineno="54" lineno="54" name="path"/>
                  </CallFunc>
                </Assign>
              </If>
            </If>
          </If>
          <Return fromlineno="56" tolineno="56" lineno="56">
            <Name fromlineno="56" tolineno="56" lineno="56" name="newpath"/>
          </Return>
        </Function>
        <Function fromlineno="58" tolineno="61" lineno="58">
          <Arguments fromlineno="58" tolineno="58" lineno="None" format_args="self, url, urldata, d">
            <AssName fromlineno="58" tolineno="58" lineno="58" name="self"/>
            <AssName fromlineno="58" tolineno="58" lineno="58" name="url"/>
            <AssName fromlineno="58" tolineno="58" lineno="58" name="urldata"/>
            <AssName fromlineno="58" tolineno="58" lineno="58" name="d"/>
          </Arguments>
          <Return fromlineno="61" tolineno="61" lineno="61">
            <Const fromlineno="61" tolineno="61" lineno="61" type="int">1</Const>
          </Return>
        </Function>
        <Function fromlineno="63" tolineno="72" lineno="63">
          <Arguments fromlineno="63" tolineno="63" lineno="None" format_args="self, url, urldata, d">
            <AssName fromlineno="63" tolineno="63" lineno="63" name="self"/>
            <AssName fromlineno="63" tolineno="63" lineno="63" name="url"/>
            <AssName fromlineno="63" tolineno="63" lineno="63" name="urldata"/>
            <AssName fromlineno="63" tolineno="63" lineno="63" name="d"/>
          </Arguments>
          <If fromlineno="67" tolineno="68" lineno="67">
            <Compare fromlineno="67" tolineno="67" lineno="67" op="('!=', &lt;Const(int) l.67 [bb.fetch.local] at Ox922cdac&gt;)">
              <CallFunc fromlineno="67" tolineno="67" lineno="67" func="Getattr(find)">
                <Getattr fromlineno="67" tolineno="67" lineno="67" attrname="find" expr="urldata.localpath">
                  <Getattr fromlineno="67" tolineno="67" lineno="67" attrname="localpath" expr="urldata">
                    <Name fromlineno="67" tolineno="67" lineno="67" name="urldata"/>
                  </Getattr>
                </Getattr>
                <Const fromlineno="67" tolineno="67" lineno="67" type="str">'*'</Const>
              </CallFunc>
              <Const fromlineno="67" tolineno="67" lineno="67" type="int">-1</Const>
            </Compare>
            <Discard fromlineno="68" tolineno="68" lineno="68">
              <CallFunc fromlineno="68" tolineno="68" lineno="68" func="Getattr(note)">
                <Getattr fromlineno="68" tolineno="68" lineno="68" attrname="note" expr="bb.msg">
                  <Getattr fromlineno="68" tolineno="68" lineno="68" attrname="msg" expr="bb">
                    <Name fromlineno="68" tolineno="68" lineno="68" name="bb"/>
                  </Getattr>
                </Getattr>
                <Const fromlineno="68" tolineno="68" lineno="68" type="int">1</Const>
                <Getattr fromlineno="68" tolineno="68" lineno="68" attrname="Fetcher" expr="bb.msg.domain">
                  <Getattr fromlineno="68" tolineno="68" lineno="68" attrname="domain" expr="bb.msg">
                    <Getattr fromlineno="68" tolineno="68" lineno="68" attrname="msg" expr="bb">
                      <Name fromlineno="68" tolineno="68" lineno="68" name="bb"/>
                    </Getattr>
                  </Getattr>
                </Getattr>
                <BinOp fromlineno="68" tolineno="68" lineno="68" op="%" left="'URL %s looks like a glob and was therefore not checked.'" right="url">
                  <Const fromlineno="68" tolineno="68" lineno="68" type="str">'URL %s looks like a glob and was therefore not checked.'</Const>
                  <Name fromlineno="68" tolineno="68" lineno="68" name="url"/>
                </BinOp>
              </CallFunc>
            </Discard>
          </If>
          <Return fromlineno="69" tolineno="69" lineno="69">
            <Const fromlineno="69" tolineno="69" lineno="69" type="bool">True</Const>
          </Return>
          <If fromlineno="70" tolineno="71" lineno="70">
            <CallFunc fromlineno="70" tolineno="70" lineno="70" func="Getattr(exists)">
              <Getattr fromlineno="70" tolineno="70" lineno="70" attrname="exists" expr="os.path">
                <Getattr fromlineno="70" tolineno="70" lineno="70" attrname="path" expr="os">
                  <Name fromlineno="70" tolineno="70" lineno="70" name="os"/>
                </Getattr>
              </Getattr>
              <Getattr fromlineno="70" tolineno="70" lineno="70" attrname="localpath" expr="urldata">
                <Name fromlineno="70" tolineno="70" lineno="70" name="urldata"/>
              </Getattr>
            </CallFunc>
            <Return fromlineno="71" tolineno="71" lineno="71">
              <Const fromlineno="71" tolineno="71" lineno="71" type="bool">True</Const>
            </Return>
          </If>
          <Return fromlineno="72" tolineno="72" lineno="72">
            <Const fromlineno="72" tolineno="72" lineno="72" type="bool">False</Const>
          </Return>
        </Function>
      </Class>
    </Module>
    <Module fromlineno="0" tolineno="150" lineno="0" name="bb.fetch.hg">
      <Import fromlineno="27" tolineno="27" lineno="27">
        <ImportName name="os"/>
        <ImportName name="re"/>
      </Import>
      <Import fromlineno="28" tolineno="28" lineno="28">
        <ImportName name="sys"/>
      </Import>
      <Import fromlineno="29" tolineno="29" lineno="29">
        <ImportName name="bb"/>
      </Import>
      <From fromlineno="30" tolineno="30" lineno="30" modname="bb">
        <ImportName name="data"/>
      </From>
      <From fromlineno="31" tolineno="31" lineno="31" modname="bb.fetch">
        <ImportName name="Fetch"/>
      </From>
      <From fromlineno="32" tolineno="32" lineno="32" modname="bb.fetch">
        <ImportName name="FetchError"/>
      </From>
      <From fromlineno="33" tolineno="33" lineno="33" modname="bb.fetch">
        <ImportName name="MissingParameterError"/>
      </From>
      <From fromlineno="34" tolineno="34" lineno="34" modname="bb.fetch">
        <ImportName name="runfetchcmd"/>
      </From>
      <Class fromlineno="36" tolineno="150" lineno="36">
        <Name fromlineno="36" tolineno="36" lineno="36" name="Fetch"/>
        <Function fromlineno="38" tolineno="42" lineno="38">
          <Arguments fromlineno="38" tolineno="38" lineno="None" format_args="self, url, ud, d">
            <AssName fromlineno="38" tolineno="38" lineno="38" name="self"/>
            <AssName fromlineno="38" tolineno="38" lineno="38" name="url"/>
            <AssName fromlineno="38" tolineno="38" lineno="38" name="ud"/>
            <AssName fromlineno="38" tolineno="38" lineno="38" name="d"/>
          </Arguments>
          <Return fromlineno="42" tolineno="42" lineno="42">
            <Compare fromlineno="42" tolineno="42" lineno="42" op="('in', &lt;List(list) l.42 [bb.fetch.hg] at Ox9ee260c&gt;)">
              <Getattr fromlineno="42" tolineno="42" lineno="42" attrname="type" expr="ud">
                <Name fromlineno="42" tolineno="42" lineno="42" name="ud"/>
              </Getattr>
              <List fromlineno="42" tolineno="42" lineno="42">
                <Const fromlineno="42" tolineno="42" lineno="42" type="str">'hg'</Const>
              </List>
            </Compare>
          </Return>
        </Function>
        <Function fromlineno="44" tolineno="63" lineno="44">
          <Arguments fromlineno="44" tolineno="44" lineno="None" format_args="self, url, ud, d">
            <AssName fromlineno="44" tolineno="44" lineno="44" name="self"/>
            <AssName fromlineno="44" tolineno="44" lineno="44" name="url"/>
            <AssName fromlineno="44" tolineno="44" lineno="44" name="ud"/>
            <AssName fromlineno="44" tolineno="44" lineno="44" name="d"/>
          </Arguments>
          <If fromlineno="45" tolineno="46" lineno="45">
            <UnaryOp fromlineno="45" tolineno="45" lineno="45">
              <Compare fromlineno="45" tolineno="45" lineno="45" op="('in', &lt;Getattr(parm) l.45 [bb.fetch.hg] at Ox9f0784c&gt;)">
                <Const fromlineno="45" tolineno="45" lineno="45" type="str">'module'</Const>
                <Getattr fromlineno="45" tolineno="45" lineno="45" attrname="parm" expr="ud">
                  <Name fromlineno="45" tolineno="45" lineno="45" name="ud"/>
                </Getattr>
              </Compare>
            </UnaryOp>
            <Raise fromlineno="46" tolineno="46" lineno="46">
              <CallFunc fromlineno="46" tolineno="46" lineno="46" func="Name(MissingParameterError)">
                <Name fromlineno="46" tolineno="46" lineno="46" name="MissingParameterError"/>
                <Const fromlineno="46" tolineno="46" lineno="46" type="str">"hg method needs a 'module' parameter"</Const>
              </CallFunc>
            </Raise>
          </If>
          <Assign fromlineno="48" tolineno="48" lineno="48" targets="[&lt;AssAttr(module) l.48 [bb.fetch.hg] at Ox9f079ac&gt;]" value="ud.parm['module']">
            <AssAttr fromlineno="48" tolineno="48" lineno="48" attrname="module" expr="ud">
              <Name fromlineno="48" tolineno="48" lineno="48" name="ud"/>
            </AssAttr>
            <Subscript fromlineno="48" tolineno="48" lineno="48">
              <Getattr fromlineno="48" tolineno="48" lineno="48" attrname="parm" expr="ud">
                <Name fromlineno="48" tolineno="48" lineno="48" name="ud"/>
              </Getattr>
              <Index fromlineno="48" tolineno="48" lineno="None">
                <Const fromlineno="48" tolineno="48" lineno="48" type="str">'module'</Const>
              </Index>
            </Subscript>
          </Assign>
          <Assign fromlineno="51" tolineno="51" lineno="51" targets="[&lt;AssName(relpath) l.51 [bb.fetch.hg] at Ox9f07acc&gt;]" value="ud.path">
            <AssName fromlineno="51" tolineno="51" lineno="51" name="relpath"/>
            <Getattr fromlineno="51" tolineno="51" lineno="51" attrname="path" expr="ud">
              <Name fromlineno="51" tolineno="51" lineno="51" name="ud"/>
            </Getattr>
          </Assign>
          <If fromlineno="52" tolineno="54" lineno="52">
            <CallFunc fromlineno="52" tolineno="52" lineno="52" func="Getattr(startswith)">
              <Getattr fromlineno="52" tolineno="52" lineno="52" attrname="startswith" expr="relpath">
                <Name fromlineno="52" tolineno="52" lineno="52" name="relpath"/>
              </Getattr>
              <Const fromlineno="52" tolineno="52" lineno="52" type="str">'/'</Const>
            </CallFunc>
            <Assign fromlineno="54" tolineno="54" lineno="54" targets="[&lt;AssName(relpath) l.54 [bb.fetch.hg] at Ox9f07c8c&gt;]" value="relpath[1:]">
              <AssName fromlineno="54" tolineno="54" lineno="54" name="relpath"/>
              <Subscript fromlineno="54" tolineno="54" lineno="54">
                <Name fromlineno="54" tolineno="54" lineno="54" name="relpath"/>
                <Slice fromlineno="54" tolineno="54" lineno="None">
                  <Const fromlineno="54" tolineno="54" lineno="54" type="int">1</Const>
                </Slice>
              </Subscript>
            </Assign>
          </If>
          <Assign fromlineno="55" tolineno="55" lineno="55" targets="[&lt;AssAttr(pkgdir) l.55 [bb.fetch.hg] at Ox9f07d6c&gt;]" value="os.path.join(data.expand('${HGDIR}', d), ud.host, relpath)">
            <AssAttr fromlineno="55" tolineno="55" lineno="55" attrname="pkgdir" expr="ud">
              <Name fromlineno="55" tolineno="55" lineno="55" name="ud"/>
            </AssAttr>
            <CallFunc fromlineno="55" tolineno="55" lineno="55" func="Getattr(join)">
              <Getattr fromlineno="55" tolineno="55" lineno="55" attrname="join" expr="os.path">
                <Getattr fromlineno="55" tolineno="55" lineno="55" attrname="path" expr="os">
                  <Name fromlineno="55" tolineno="55" lineno="55" name="os"/>
                </Getattr>
              </Getattr>
              <CallFunc fromlineno="55" tolineno="55" lineno="55" func="Getattr(expand)">
                <Getattr fromlineno="55" tolineno="55" lineno="55" attrname="expand" expr="data">
                  <Name fromlineno="55" tolineno="55" lineno="55" name="data"/>
                </Getattr>
                <Const fromlineno="55" tolineno="55" lineno="55" type="str">'${HGDIR}'</Const>
                <Name fromlineno="55" tolineno="55" lineno="55" name="d"/>
              </CallFunc>
              <Getattr fromlineno="55" tolineno="55" lineno="55" attrname="host" expr="ud">
                <Name fromlineno="55" tolineno="55" lineno="55" name="ud"/>
              </Getattr>
              <Name fromlineno="55" tolineno="55" lineno="55" name="relpath"/>
            </CallFunc>
          </Assign>
          <Assign fromlineno="56" tolineno="56" lineno="56" targets="[&lt;AssAttr(moddir) l.56 [bb.fetch.hg] at Ox9f07fac&gt;]" value="os.path.join(ud.pkgdir, ud.module)">
            <AssAttr fromlineno="56" tolineno="56" lineno="56" attrname="moddir" expr="ud">
              <Name fromlineno="56" tolineno="56" lineno="56" name="ud"/>
            </AssAttr>
            <CallFunc fromlineno="56" tolineno="56" lineno="56" func="Getattr(join)">
              <Getattr fromlineno="56" tolineno="56" lineno="56" attrname="join" expr="os.path">
                <Getattr fromlineno="56" tolineno="56" lineno="56" attrname="path" expr="os">
                  <Name fromlineno="56" tolineno="56" lineno="56" name="os"/>
                </Getattr>
              </Getattr>
              <Getattr fromlineno="56" tolineno="56" lineno="56" attrname="pkgdir" expr="ud">
                <Name fromlineno="56" tolineno="56" lineno="56" name="ud"/>
              </Getattr>
              <Getattr fromlineno="56" tolineno="56" lineno="56" attrname="module" expr="ud">
                <Name fromlineno="56" tolineno="56" lineno="56" name="ud"/>
              </Getattr>
            </CallFunc>
          </Assign>
          <If fromlineno="58" tolineno="59" lineno="58">
            <Compare fromlineno="58" tolineno="58" lineno="58" op="('in', &lt;Getattr(parm) l.58 [bb.fetch.hg] at Ox9f0a1cc&gt;)">
              <Const fromlineno="58" tolineno="58" lineno="58" type="str">'rev'</Const>
              <Getattr fromlineno="58" tolineno="58" lineno="58" attrname="parm" expr="ud">
                <Name fromlineno="58" tolineno="58" lineno="58" name="ud"/>
              </Getattr>
            </Compare>
            <Assign fromlineno="59" tolineno="59" lineno="59" targets="[&lt;AssAttr(revision) l.59 [bb.fetch.hg] at Ox9f0a28c&gt;]" value="ud.parm['rev']">
              <AssAttr fromlineno="59" tolineno="59" lineno="59" attrname="revision" expr="ud">
                <Name fromlineno="59" tolineno="59" lineno="59" name="ud"/>
              </AssAttr>
              <Subscript fromlineno="59" tolineno="59" lineno="59">
                <Getattr fromlineno="59" tolineno="59" lineno="59" attrname="parm" expr="ud">
                  <Name fromlineno="59" tolineno="59" lineno="59" name="ud"/>
                </Getattr>
                <Index fromlineno="59" tolineno="59" lineno="None">
                  <Const fromlineno="59" tolineno="59" lineno="59" type="str">'rev'</Const>
                </Index>
              </Subscript>
            </Assign>
          </If>
          <Assign fromlineno="61" tolineno="61" lineno="61" targets="[&lt;AssAttr(localfile) l.61 [bb.fetch.hg] at Ox9f0a3ac&gt;]" value="data.expand(('%s_%s_%s_%s.tar.gz') % ((ud.module.replace('/', '.'), ud.host, ud.path.replace('/', '.'), ud.revision)), d)">
            <AssAttr fromlineno="61" tolineno="61" lineno="61" attrname="localfile" expr="ud">
              <Name fromlineno="61" tolineno="61" lineno="61" name="ud"/>
            </AssAttr>
            <CallFunc fromlineno="61" tolineno="61" lineno="61" func="Getattr(expand)">
              <Getattr fromlineno="61" tolineno="61" lineno="61" attrname="expand" expr="data">
                <Name fromlineno="61" tolineno="61" lineno="61" name="data"/>
              </Getattr>
              <BinOp fromlineno="61" tolineno="61" lineno="61" op="%" left="'%s_%s_%s_%s.tar.gz'" right="(ud.module.replace('/', '.'), ud.host, ud.path.replace('/', '.'), ud.revision)">
                <Const fromlineno="61" tolineno="61" lineno="61" type="str">'%s_%s_%s_%s.tar.gz'</Const>
                <Tuple fromlineno="61" tolineno="61" lineno="61">
                  <CallFunc fromlineno="61" tolineno="61" lineno="61" func="Getattr(replace)">
                    <Getattr fromlineno="61" tolineno="61" lineno="61" attrname="replace" expr="ud.module">
                      <Getattr fromlineno="61" tolineno="61" lineno="61" attrname="module" expr="ud">
                        <Name fromlineno="61" tolineno="61" lineno="61" name="ud"/>
                      </Getattr>
                    </Getattr>
                    <Const fromlineno="61" tolineno="61" lineno="61" type="str">'/'</Const>
                    <Const fromlineno="61" tolineno="61" lineno="61" type="str">'.'</Const>
                  </CallFunc>
                  <Getattr fromlineno="61" tolineno="61" lineno="61" attrname="host" expr="ud">
                    <Name fromlineno="61" tolineno="61" lineno="61" name="ud"/>
                  </Getattr>
                  <CallFunc fromlineno="61" tolineno="61" lineno="61" func="Getattr(replace)">
                    <Getattr fromlineno="61" tolineno="61" lineno="61" attrname="replace" expr="ud.path">
                      <Getattr fromlineno="61" tolineno="61" lineno="61" attrname="path" expr="ud">
                        <Name fromlineno="61" tolineno="61" lineno="61" name="ud"/>
                      </Getattr>
                    </Getattr>
                    <Const fromlineno="61" tolineno="61" lineno="61" type="str">'/'</Const>
                    <Const fromlineno="61" tolineno="61" lineno="61" type="str">'.'</Const>
                  </CallFunc>
                  <Getattr fromlineno="61" tolineno="61" lineno="61" attrname="revision" expr="ud">
                    <Name fromlineno="61" tolineno="61" lineno="61" name="ud"/>
                  </Getattr>
                </Tuple>
              </BinOp>
              <Name fromlineno="61" tolineno="61" lineno="61" name="d"/>
            </CallFunc>
          </Assign>
          <Return fromlineno="63" tolineno="63" lineno="63">
            <CallFunc fromlineno="63" tolineno="63" lineno="63" func="Getattr(join)">
              <Getattr fromlineno="63" tolineno="63" lineno="63" attrname="join" expr="os.path">
                <Getattr fromlineno="63" tolineno="63" lineno="63" attrname="path" expr="os">
                  <Name fromlineno="63" tolineno="63" lineno="63" name="os"/>
                </Getattr>
              </Getattr>
              <CallFunc fromlineno="63" tolineno="63" lineno="63" func="Getattr(getVar)">
                <Getattr fromlineno="63" tolineno="63" lineno="63" attrname="getVar" expr="data">
                  <Name fromlineno="63" tolineno="63" lineno="63" name="data"/>
                </Getattr>
                <Const fromlineno="63" tolineno="63" lineno="63" type="str">'DL_DIR'</Const>
                <Name fromlineno="63" tolineno="63" lineno="63" name="d"/>
                <Const fromlineno="63" tolineno="63" lineno="63" type="bool">True</Const>
              </CallFunc>
              <Getattr fromlineno="63" tolineno="63" lineno="63" attrname="localfile" expr="ud">
                <Name fromlineno="63" tolineno="63" lineno="63" name="ud"/>
              </Getattr>
            </CallFunc>
          </Return>
        </Function>
        <Function fromlineno="65" tolineno="106" lineno="65">
          <Arguments fromlineno="65" tolineno="65" lineno="None" format_args="self, ud, d, command">
            <AssName fromlineno="65" tolineno="65" lineno="65" name="self"/>
            <AssName fromlineno="65" tolineno="65" lineno="65" name="ud"/>
            <AssName fromlineno="65" tolineno="65" lineno="65" name="d"/>
            <AssName fromlineno="65" tolineno="65" lineno="65" name="command"/>
          </Arguments>
          <Assign fromlineno="71" tolineno="71" lineno="71" targets="[&lt;AssName(basecmd) l.71 [bb.fetch.hg] at Ox9f0aaec&gt;]" value="data.expand('${FETCHCMD_hg}', d)">
            <AssName fromlineno="71" tolineno="71" lineno="71" name="basecmd"/>
            <CallFunc fromlineno="71" tolineno="71" lineno="71" func="Getattr(expand)">
              <Getattr fromlineno="71" tolineno="71" lineno="71" attrname="expand" expr="data">
                <Name fromlineno="71" tolineno="71" lineno="71" name="data"/>
              </Getattr>
              <Const fromlineno="71" tolineno="71" lineno="71" type="str">'${FETCHCMD_hg}'</Const>
              <Name fromlineno="71" tolineno="71" lineno="71" name="d"/>
            </CallFunc>
          </Assign>
          <Assign fromlineno="73" tolineno="73" lineno="73" targets="[&lt;AssName(proto) l.73 [bb.fetch.hg] at Ox9f0ac2c&gt;]" value="'http'">
            <AssName fromlineno="73" tolineno="73" lineno="73" name="proto"/>
            <Const fromlineno="73" tolineno="73" lineno="73" type="str">'http'</Const>
          </Assign>
          <If fromlineno="74" tolineno="75" lineno="74">
            <Compare fromlineno="74" tolineno="74" lineno="74" op="('in', &lt;Getattr(parm) l.74 [bb.fetch.hg] at Ox9f0ad2c&gt;)">
              <Const fromlineno="74" tolineno="74" lineno="74" type="str">'proto'</Const>
              <Getattr fromlineno="74" tolineno="74" lineno="74" attrname="parm" expr="ud">
                <Name fromlineno="74" tolineno="74" lineno="74" name="ud"/>
              </Getattr>
            </Compare>
            <Assign fromlineno="75" tolineno="75" lineno="75" targets="[&lt;AssName(proto) l.75 [bb.fetch.hg] at Ox9f0adec&gt;]" value="ud.parm['proto']">
              <AssName fromlineno="75" tolineno="75" lineno="75" name="proto"/>
              <Subscript fromlineno="75" tolineno="75" lineno="75">
                <Getattr fromlineno="75" tolineno="75" lineno="75" attrname="parm" expr="ud">
                  <Name fromlineno="75" tolineno="75" lineno="75" name="ud"/>
                </Getattr>
                <Index fromlineno="75" tolineno="75" lineno="None">
                  <Const fromlineno="75" tolineno="75" lineno="75" type="str">'proto'</Const>
                </Index>
              </Subscript>
            </Assign>
          </If>
          <Assign fromlineno="77" tolineno="77" lineno="77" targets="[&lt;AssName(host) l.77 [bb.fetch.hg] at Ox9f0aeec&gt;]" value="ud.host">
            <AssName fromlineno="77" tolineno="77" lineno="77" name="host"/>
            <Getattr fromlineno="77" tolineno="77" lineno="77" attrname="host" expr="ud">
              <Name fromlineno="77" tolineno="77" lineno="77" name="ud"/>
            </Getattr>
          </Assign>
          <If fromlineno="78" tolineno="80" lineno="78">
            <Compare fromlineno="78" tolineno="78" lineno="78" op="('==', &lt;Const(str) l.78 [bb.fetch.hg] at Ox9f0e02c&gt;)">
              <Name fromlineno="78" tolineno="78" lineno="78" name="proto"/>
              <Const fromlineno="78" tolineno="78" lineno="78" type="str">'file'</Const>
            </Compare>
            <Assign fromlineno="79" tolineno="79" lineno="79" targets="[&lt;AssName(host) l.79 [bb.fetch.hg] at Ox9f0e0cc&gt;]" value="'/'">
              <AssName fromlineno="79" tolineno="79" lineno="79" name="host"/>
              <Const fromlineno="79" tolineno="79" lineno="79" type="str">'/'</Const>
            </Assign>
            <Assign fromlineno="80" tolineno="80" lineno="80" targets="[&lt;AssAttr(host) l.80 [bb.fetch.hg] at Ox9f0e14c&gt;]" value="'localhost'">
              <AssAttr fromlineno="80" tolineno="80" lineno="80" attrname="host" expr="ud">
                <Name fromlineno="80" tolineno="80" lineno="80" name="ud"/>
              </AssAttr>
              <Const fromlineno="80" tolineno="80" lineno="80" type="str">'localhost'</Const>
            </Assign>
          </If>
          <If fromlineno="82" tolineno="85" lineno="82">
            <UnaryOp fromlineno="82" tolineno="82" lineno="82">
              <Getattr fromlineno="82" tolineno="82" lineno="82" attrname="user" expr="ud">
                <Name fromlineno="82" tolineno="82" lineno="82" name="ud"/>
              </Getattr>
            </UnaryOp>
            <Assign fromlineno="83" tolineno="83" lineno="83" targets="[&lt;AssName(hgroot) l.83 [bb.fetch.hg] at Ox9f0e2ac&gt;]" value="(host) + (ud.path)">
              <AssName fromlineno="83" tolineno="83" lineno="83" name="hgroot"/>
              <BinOp fromlineno="83" tolineno="83" lineno="83" op="+" left="host" right="ud.path">
                <Name fromlineno="83" tolineno="83" lineno="83" name="host"/>
                <Getattr fromlineno="83" tolineno="83" lineno="83" attrname="path" expr="ud">
                  <Name fromlineno="83" tolineno="83" lineno="83" name="ud"/>
                </Getattr>
              </BinOp>
            </Assign>
            <Assign fromlineno="85" tolineno="85" lineno="85" targets="[&lt;AssName(hgroot) l.85 [bb.fetch.hg] at Ox9f0e3cc&gt;]" value="(((ud.user) + ('@')) + (host)) + (ud.path)">
              <AssName fromlineno="85" tolineno="85" lineno="85" name="hgroot"/>
              <BinOp fromlineno="85" tolineno="85" lineno="85" op="+" left="((ud.user) + ('@')) + (host)" right="ud.path">
                <BinOp fromlineno="85" tolineno="85" lineno="85" op="+" left="(ud.user) + ('@')" right="host">
                  <BinOp fromlineno="85" tolineno="85" lineno="85" op="+" left="ud.user" right="'@'">
                    <Getattr fromlineno="85" tolineno="85" lineno="85" attrname="user" expr="ud">
                      <Name fromlineno="85" tolineno="85" lineno="85" name="ud"/>
                    </Getattr>
                    <Const fromlineno="85" tolineno="85" lineno="85" type="str">'@'</Const>
                  </BinOp>
                  <Name fromlineno="85" tolineno="85" lineno="85" name="host"/>
                </BinOp>
                <Getattr fromlineno="85" tolineno="85" lineno="85" attrname="path" expr="ud">
                  <Name fromlineno="85" tolineno="85" lineno="85" name="ud"/>
                </Getattr>
              </BinOp>
            </Assign>
          </If>
          <If fromlineno="87" tolineno="88" lineno="87">
            <Compare fromlineno="87" tolineno="87" lineno="87" op="('is', &lt;Const(str) l.87 [bb.fetch.hg] at Ox9f0e58c&gt;)">
              <Name fromlineno="87" tolineno="87" lineno="87" name="command"/>
              <Const fromlineno="87" tolineno="87" lineno="87" type="str">'info'</Const>
            </Compare>
            <Return fromlineno="88" tolineno="88" lineno="88">
              <BinOp fromlineno="88" tolineno="88" lineno="88" op="%" left="'%s identify -i %s://%s/%s'" right="(basecmd, proto, hgroot, ud.module)">
                <Const fromlineno="88" tolineno="88" lineno="88" type="str">'%s identify -i %s://%s/%s'</Const>
                <Tuple fromlineno="88" tolineno="88" lineno="88">
                  <Name fromlineno="88" tolineno="88" lineno="88" name="basecmd"/>
                  <Name fromlineno="88" tolineno="88" lineno="88" name="proto"/>
                  <Name fromlineno="88" tolineno="88" lineno="88" name="hgroot"/>
                  <Getattr fromlineno="88" tolineno="88" lineno="88" attrname="module" expr="ud">
                    <Name fromlineno="88" tolineno="88" lineno="88" name="ud"/>
                  </Getattr>
                </Tuple>
              </BinOp>
            </Return>
          </If>
          <Assign fromlineno="90" tolineno="90" lineno="90" targets="[&lt;AssName(options) l.90 [bb.fetch.hg] at Ox9f0e76c&gt;]" value="[]">
            <AssName fromlineno="90" tolineno="90" lineno="90" name="options"/>
            <List fromlineno="90" tolineno="90" lineno="90"/>
          </Assign>
          <If fromlineno="91" tolineno="92" lineno="91">
            <Getattr fromlineno="91" tolineno="91" lineno="91" attrname="revision" expr="ud">
              <Name fromlineno="91" tolineno="91" lineno="91" name="ud"/>
            </Getattr>
            <Discard fromlineno="92" tolineno="92" lineno="92">
              <CallFunc fromlineno="92" tolineno="92" lineno="92" func="Getattr(append)">
                <Getattr fromlineno="92" tolineno="92" lineno="92" attrname="append" expr="options">
                  <Name fromlineno="92" tolineno="92" lineno="92" name="options"/>
                </Getattr>
                <BinOp fromlineno="92" tolineno="92" lineno="92" op="%" left="'-r %s'" right="ud.revision">
                  <Const fromlineno="92" tolineno="92" lineno="92" type="str">'-r %s'</Const>
                  <Getattr fromlineno="92" tolineno="92" lineno="92" attrname="revision" expr="ud">
                    <Name fromlineno="92" tolineno="92" lineno="92" name="ud"/>
                  </Getattr>
                </BinOp>
              </CallFunc>
            </Discard>
          </If>
          <If fromlineno="94" tolineno="104" lineno="94">
            <Compare fromlineno="94" tolineno="94" lineno="94" op="('is', &lt;Const(str) l.94 [bb.fetch.hg] at Ox9f0ea4c&gt;)">
              <Name fromlineno="94" tolineno="94" lineno="94" name="command"/>
              <Const fromlineno="94" tolineno="94" lineno="94" type="str">'fetch'</Const>
            </Compare>
            <Assign fromlineno="95" tolineno="95" lineno="95" targets="[&lt;AssName(cmd) l.95 [bb.fetch.hg] at Ox9f0eaec&gt;]" value="('%s clone %s %s://%s/%s %s') % ((basecmd, ' '.join(options), proto, hgroot, ud.module, ud.module))">
              <AssName fromlineno="95" tolineno="95" lineno="95" name="cmd"/>
              <BinOp fromlineno="95" tolineno="95" lineno="95" op="%" left="'%s clone %s %s://%s/%s %s'" right="(basecmd, ' '.join(options), proto, hgroot, ud.module, ud.module)">
                <Const fromlineno="95" tolineno="95" lineno="95" type="str">'%s clone %s %s://%s/%s %s'</Const>
                <Tuple fromlineno="95" tolineno="95" lineno="95">
                  <Name fromlineno="95" tolineno="95" lineno="95" name="basecmd"/>
                  <CallFunc fromlineno="95" tolineno="95" lineno="95" func="Getattr(join)">
                    <Getattr fromlineno="95" tolineno="95" lineno="95" attrname="join" expr="' '">
                      <Const fromlineno="95" tolineno="95" lineno="95" type="str">' '</Const>
                    </Getattr>
                    <Name fromlineno="95" tolineno="95" lineno="95" name="options"/>
                  </CallFunc>
                  <Name fromlineno="95" tolineno="95" lineno="95" name="proto"/>
                  <Name fromlineno="95" tolineno="95" lineno="95" name="hgroot"/>
                  <Getattr fromlineno="95" tolineno="95" lineno="95" attrname="module" expr="ud">
                    <Name fromlineno="95" tolineno="95" lineno="95" name="ud"/>
                  </Getattr>
                  <Getattr fromlineno="95" tolineno="95" lineno="95" attrname="module" expr="ud">
                    <Name fromlineno="95" tolineno="95" lineno="95" name="ud"/>
                  </Getattr>
                </Tuple>
              </BinOp>
            </Assign>
            <If fromlineno="96" tolineno="104" lineno="96">
              <Compare fromlineno="96" tolineno="96" lineno="96" op="('is', &lt;Const(str) l.96 [bb.fetch.hg] at Ox9f0ee0c&gt;)">
                <Name fromlineno="96" tolineno="96" lineno="96" name="command"/>
                <Const fromlineno="96" tolineno="96" lineno="96" type="str">'pull'</Const>
              </Compare>
              <Assign fromlineno="100" tolineno="100" lineno="100" targets="[&lt;AssName(cmd) l.100 [bb.fetch.hg] at Ox9f0eeac&gt;]" value="('%s pull') % (basecmd)">
                <AssName fromlineno="100" tolineno="100" lineno="100" name="cmd"/>
                <BinOp fromlineno="100" tolineno="100" lineno="100" op="%" left="'%s pull'" right="basecmd">
                  <Const fromlineno="100" tolineno="100" lineno="100" type="str">'%s pull'</Const>
                  <Name fromlineno="100" tolineno="100" lineno="100" name="basecmd"/>
                </BinOp>
              </Assign>
              <If fromlineno="101" tolineno="104" lineno="101">
                <Compare fromlineno="101" tolineno="101" lineno="101" op="('is', &lt;Const(str) l.101 [bb.fetch.hg] at Ox9f4a02c&gt;)">
                  <Name fromlineno="101" tolineno="101" lineno="101" name="command"/>
                  <Const fromlineno="101" tolineno="101" lineno="101" type="str">'update'</Const>
                </Compare>
                <Assign fromlineno="102" tolineno="102" lineno="102" targets="[&lt;AssName(cmd) l.102 [bb.fetch.hg] at Ox9f4a0cc&gt;]" value="('%s update -C %s') % ((basecmd, ' '.join(options)))">
                  <AssName fromlineno="102" tolineno="102" lineno="102" name="cmd"/>
                  <BinOp fromlineno="102" tolineno="102" lineno="102" op="%" left="'%s update -C %s'" right="(basecmd, ' '.join(options))">
                    <Const fromlineno="102" tolineno="102" lineno="102" type="str">'%s update -C %s'</Const>
                    <Tuple fromlineno="102" tolineno="102" lineno="102">
                      <Name fromlineno="102" tolineno="102" lineno="102" name="basecmd"/>
                      <CallFunc fromlineno="102" tolineno="102" lineno="102" func="Getattr(join)">
                        <Getattr fromlineno="102" tolineno="102" lineno="102" attrname="join" expr="' '">
                          <Const fromlineno="102" tolineno="102" lineno="102" type="str">' '</Const>
                        </Getattr>
                        <Name fromlineno="102" tolineno="102" lineno="102" name="options"/>
                      </CallFunc>
                    </Tuple>
                  </BinOp>
                </Assign>
                <Raise fromlineno="104" tolineno="104" lineno="104">
                  <CallFunc fromlineno="104" tolineno="104" lineno="104" func="Name(FetchError)">
                    <Name fromlineno="104" tolineno="104" lineno="104" name="FetchError"/>
                    <BinOp fromlineno="104" tolineno="104" lineno="104" op="%" left="'Invalid hg command %s'" right="command">
                      <Const fromlineno="104" tolineno="104" lineno="104" type="str">'Invalid hg command %s'</Const>
                      <Name fromlineno="104" tolineno="104" lineno="104" name="command"/>
                    </BinOp>
                  </CallFunc>
                </Raise>
              </If>
            </If>
          </If>
          <Return fromlineno="106" tolineno="106" lineno="106">
            <Name fromlineno="106" tolineno="106" lineno="106" name="cmd"/>
          </Return>
        </Function>
        <Function fromlineno="108" tolineno="150" lineno="108">
          <Arguments fromlineno="108" tolineno="108" lineno="None" format_args="self, loc, ud, d">
            <AssName fromlineno="108" tolineno="108" lineno="108" name="self"/>
            <AssName fromlineno="108" tolineno="108" lineno="108" name="loc"/>
            <AssName fromlineno="108" tolineno="108" lineno="108" name="ud"/>
            <AssName fromlineno="108" tolineno="108" lineno="108" name="d"/>
          </Arguments>
          <If fromlineno="112" tolineno="114" lineno="112">
            <CallFunc fromlineno="112" tolineno="112" lineno="112" func="Getattr(try_mirror)">
              <Getattr fromlineno="112" tolineno="112" lineno="112" attrname="try_mirror" expr="Fetch">
                <Name fromlineno="112" tolineno="112" lineno="112" name="Fetch"/>
              </Getattr>
              <Name fromlineno="112" tolineno="112" lineno="112" name="d"/>
              <Getattr fromlineno="112" tolineno="112" lineno="112" attrname="localfile" expr="ud">
                <Name fromlineno="112" tolineno="112" lineno="112" name="ud"/>
              </Getattr>
            </CallFunc>
            <Discard fromlineno="113" tolineno="113" lineno="113">
              <CallFunc fromlineno="113" tolineno="113" lineno="113" func="Getattr(debug)">
                <Getattr fromlineno="113" tolineno="113" lineno="113" attrname="debug" expr="bb.msg">
                  <Getattr fromlineno="113" tolineno="113" lineno="113" attrname="msg" expr="bb">
                    <Name fromlineno="113" tolineno="113" lineno="113" name="bb"/>
                  </Getattr>
                </Getattr>
                <Const fromlineno="113" tolineno="113" lineno="113" type="int">1</Const>
                <Getattr fromlineno="113" tolineno="113" lineno="113" attrname="Fetcher" expr="bb.msg.domain">
                  <Getattr fromlineno="113" tolineno="113" lineno="113" attrname="domain" expr="bb.msg">
                    <Getattr fromlineno="113" tolineno="113" lineno="113" attrname="msg" expr="bb">
                      <Name fromlineno="113" tolineno="113" lineno="113" name="bb"/>
                    </Getattr>
                  </Getattr>
                </Getattr>
                <BinOp fromlineno="113" tolineno="113" lineno="113" op="%" left="'%s already exists or was mirrored, skipping hg checkout.'" right="ud.localpath">
                  <Const fromlineno="113" tolineno="113" lineno="113" type="str">'%s already exists or was mirrored, skipping hg checkout.'</Const>
                  <Getattr fromlineno="113" tolineno="113" lineno="113" attrname="localpath" expr="ud">
                    <Name fromlineno="113" tolineno="113" lineno="113" name="ud"/>
                  </Getattr>
                </BinOp>
              </CallFunc>
            </Discard>
            <Return fromlineno="114" tolineno="114" lineno="114"/>
          </If>
          <Discard fromlineno="116" tolineno="116" lineno="116">
            <CallFunc fromlineno="116" tolineno="116" lineno="116" func="Getattr(debug)">
              <Getattr fromlineno="116" tolineno="116" lineno="116" attrname="debug" expr="bb.msg">
                <Getattr fromlineno="116" tolineno="116" lineno="116" attrname="msg" expr="bb">
                  <Name fromlineno="116" tolineno="116" lineno="116" name="bb"/>
                </Getattr>
              </Getattr>
              <Const fromlineno="116" tolineno="116" lineno="116" type="int">2</Const>
              <Getattr fromlineno="116" tolineno="116" lineno="116" attrname="Fetcher" expr="bb.msg.domain">
                <Getattr fromlineno="116" tolineno="116" lineno="116" attrname="domain" expr="bb.msg">
                  <Getattr fromlineno="116" tolineno="116" lineno="116" attrname="msg" expr="bb">
                    <Name fromlineno="116" tolineno="116" lineno="116" name="bb"/>
                  </Getattr>
                </Getattr>
              </Getattr>
              <BinOp fromlineno="116" tolineno="116" lineno="116" op="+" left="(&quot;Fetch: checking for module directory '&quot;) + (ud.moddir)" right="&quot;'&quot;">
                <BinOp fromlineno="116" tolineno="116" lineno="116" op="+" left="&quot;Fetch: checking for module directory '&quot;" right="ud.moddir">
                  <Const fromlineno="116" tolineno="116" lineno="116" type="str">"Fetch: checking for module directory '"</Const>
                  <Getattr fromlineno="116" tolineno="116" lineno="116" attrname="moddir" expr="ud">
                    <Name fromlineno="116" tolineno="116" lineno="116" name="ud"/>
                  </Getattr>
                </BinOp>
                <Const fromlineno="116" tolineno="116" lineno="116" type="str">"'"</Const>
              </BinOp>
            </CallFunc>
          </Discard>
          <If fromlineno="118" tolineno="133" lineno="118">
            <CallFunc fromlineno="118" tolineno="118" lineno="118" func="Getattr(access)">
              <Getattr fromlineno="118" tolineno="118" lineno="118" attrname="access" expr="os">
                <Name fromlineno="118" tolineno="118" lineno="118" name="os"/>
              </Getattr>
              <CallFunc fromlineno="118" tolineno="118" lineno="118" func="Getattr(join)">
                <Getattr fromlineno="118" tolineno="118" lineno="118" attrname="join" expr="os.path">
                  <Getattr fromlineno="118" tolineno="118" lineno="118" attrname="path" expr="os">
                    <Name fromlineno="118" tolineno="118" lineno="118" name="os"/>
                  </Getattr>
                </Getattr>
                <Getattr fromlineno="118" tolineno="118" lineno="118" attrname="moddir" expr="ud">
                  <Name fromlineno="118" tolineno="118" lineno="118" name="ud"/>
                </Getattr>
                <Const fromlineno="118" tolineno="118" lineno="118" type="str">'.hg'</Const>
              </CallFunc>
              <Getattr fromlineno="118" tolineno="118" lineno="118" attrname="R_OK" expr="os">
                <Name fromlineno="118" tolineno="118" lineno="118" name="os"/>
              </Getattr>
            </CallFunc>
            <Assign fromlineno="119" tolineno="119" lineno="119" targets="[&lt;AssName(updatecmd) l.119 [bb.fetch.hg] at Ox9f4ac0c&gt;]" value="self._buildhgcommand(ud, d, 'pull')">
              <AssName fromlineno="119" tolineno="119" lineno="119" name="updatecmd"/>
              <CallFunc fromlineno="119" tolineno="119" lineno="119" func="Getattr(_buildhgcommand)">
                <Getattr fromlineno="119" tolineno="119" lineno="119" attrname="_buildhgcommand" expr="self">
                  <Name fromlineno="119" tolineno="119" lineno="119" name="self"/>
                </Getattr>
                <Name fromlineno="119" tolineno="119" lineno="119" name="ud"/>
                <Name fromlineno="119" tolineno="119" lineno="119" name="d"/>
                <Const fromlineno="119" tolineno="119" lineno="119" type="str">'pull'</Const>
              </CallFunc>
            </Assign>
            <Discard fromlineno="120" tolineno="120" lineno="120">
              <CallFunc fromlineno="120" tolineno="120" lineno="120" func="Getattr(note)">
                <Getattr fromlineno="120" tolineno="120" lineno="120" attrname="note" expr="bb.msg">
                  <Getattr fromlineno="120" tolineno="120" lineno="120" attrname="msg" expr="bb">
                    <Name fromlineno="120" tolineno="120" lineno="120" name="bb"/>
                  </Getattr>
                </Getattr>
                <Const fromlineno="120" tolineno="120" lineno="120" type="int">1</Const>
                <Getattr fromlineno="120" tolineno="120" lineno="120" attrname="Fetcher" expr="bb.msg.domain">
                  <Getattr fromlineno="120" tolineno="120" lineno="120" attrname="domain" expr="bb.msg">
                    <Getattr fromlineno="120" tolineno="120" lineno="120" attrname="msg" expr="bb">
                      <Name fromlineno="120" tolineno="120" lineno="120" name="bb"/>
                    </Getattr>
                  </Getattr>
                </Getattr>
                <BinOp fromlineno="120" tolineno="120" lineno="120" op="+" left="'Update '" right="loc">
                  <Const fromlineno="120" tolineno="120" lineno="120" type="str">'Update '</Const>
                  <Name fromlineno="120" tolineno="120" lineno="120" name="loc"/>
                </BinOp>
              </CallFunc>
            </Discard>
            <Discard fromlineno="122" tolineno="122" lineno="122">
              <CallFunc fromlineno="122" tolineno="122" lineno="122" func="Getattr(chdir)">
                <Getattr fromlineno="122" tolineno="122" lineno="122" attrname="chdir" expr="os">
                  <Name fromlineno="122" tolineno="122" lineno="122" name="os"/>
                </Getattr>
                <Getattr fromlineno="122" tolineno="122" lineno="122" attrname="moddir" expr="ud">
                  <Name fromlineno="122" tolineno="122" lineno="122" name="ud"/>
                </Getattr>
              </CallFunc>
            </Discard>
            <Discard fromlineno="123" tolineno="123" lineno="123">
              <CallFunc fromlineno="123" tolineno="123" lineno="123" func="Getattr(debug)">
                <Getattr fromlineno="123" tolineno="123" lineno="123" attrname="debug" expr="bb.msg">
                  <Getattr fromlineno="123" tolineno="123" lineno="123" attrname="msg" expr="bb">
                    <Name fromlineno="123" tolineno="123" lineno="123" name="bb"/>
                  </Getattr>
                </Getattr>
                <Const fromlineno="123" tolineno="123" lineno="123" type="int">1</Const>
                <Getattr fromlineno="123" tolineno="123" lineno="123" attrname="Fetcher" expr="bb.msg.domain">
                  <Getattr fromlineno="123" tolineno="123" lineno="123" attrname="domain" expr="bb.msg">
                    <Getattr fromlineno="123" tolineno="123" lineno="123" attrname="msg" expr="bb">
                      <Name fromlineno="123" tolineno="123" lineno="123" name="bb"/>
                    </Getattr>
                  </Getattr>
                </Getattr>
                <BinOp fromlineno="123" tolineno="123" lineno="123" op="%" left="'Running %s'" right="updatecmd">
                  <Const fromlineno="123" tolineno="123" lineno="123" type="str">'Running %s'</Const>
                  <Name fromlineno="123" tolineno="123" lineno="123" name="updatecmd"/>
                </BinOp>
              </CallFunc>
            </Discard>
            <Discard fromlineno="124" tolineno="124" lineno="124">
              <CallFunc fromlineno="124" tolineno="124" lineno="124" func="Name(runfetchcmd)">
                <Name fromlineno="124" tolineno="124" lineno="124" name="runfetchcmd"/>
                <Name fromlineno="124" tolineno="124" lineno="124" name="updatecmd"/>
                <Name fromlineno="124" tolineno="124" lineno="124" name="d"/>
              </CallFunc>
            </Discard>
            <Assign fromlineno="127" tolineno="127" lineno="127" targets="[&lt;AssName(fetchcmd) l.127 [bb.fetch.hg] at Ox9f4f2cc&gt;]" value="self._buildhgcommand(ud, d, 'fetch')">
              <AssName fromlineno="127" tolineno="127" lineno="127" name="fetchcmd"/>
              <CallFunc fromlineno="127" tolineno="127" lineno="127" func="Getattr(_buildhgcommand)">
                <Getattr fromlineno="127" tolineno="127" lineno="127" attrname="_buildhgcommand" expr="self">
                  <Name fromlineno="127" tolineno="127" lineno="127" name="self"/>
                </Getattr>
                <Name fromlineno="127" tolineno="127" lineno="127" name="ud"/>
                <Name fromlineno="127" tolineno="127" lineno="127" name="d"/>
                <Const fromlineno="127" tolineno="127" lineno="127" type="str">'fetch'</Const>
              </CallFunc>
            </Assign>
            <Discard fromlineno="128" tolineno="128" lineno="128">
              <CallFunc fromlineno="128" tolineno="128" lineno="128" func="Getattr(note)">
                <Getattr fromlineno="128" tolineno="128" lineno="128" attrname="note" expr="bb.msg">
                  <Getattr fromlineno="128" tolineno="128" lineno="128" attrname="msg" expr="bb">
                    <Name fromlineno="128" tolineno="128" lineno="128" name="bb"/>
                  </Getattr>
                </Getattr>
                <Const fromlineno="128" tolineno="128" lineno="128" type="int">1</Const>
                <Getattr fromlineno="128" tolineno="128" lineno="128" attrname="Fetcher" expr="bb.msg.domain">
                  <Getattr fromlineno="128" tolineno="128" lineno="128" attrname="domain" expr="bb.msg">
                    <Getattr fromlineno="128" tolineno="128" lineno="128" attrname="msg" expr="bb">
                      <Name fromlineno="128" tolineno="128" lineno="128" name="bb"/>
                    </Getattr>
                  </Getattr>
                </Getattr>
                <BinOp fromlineno="128" tolineno="128" lineno="128" op="+" left="'Fetch '" right="loc">
                  <Const fromlineno="128" tolineno="128" lineno="128" type="str">'Fetch '</Const>
                  <Name fromlineno="128" tolineno="128" lineno="128" name="loc"/>
                </BinOp>
              </CallFunc>
            </Discard>
            <Discard fromlineno="130" tolineno="130" lineno="130">
              <CallFunc fromlineno="130" tolineno="130" lineno="130" func="Getattr(mkdirhier)">
                <Getattr fromlineno="130" tolineno="130" lineno="130" attrname="mkdirhier" expr="bb">
                  <Name fromlineno="130" tolineno="130" lineno="130" name="bb"/>
                </Getattr>
                <Getattr fromlineno="130" tolineno="130" lineno="130" attrname="pkgdir" expr="ud">
                  <Name fromlineno="130" tolineno="130" lineno="130" name="ud"/>
                </Getattr>
              </CallFunc>
            </Discard>
            <Discard fromlineno="131" tolineno="131" lineno="131">
              <CallFunc fromlineno="131" tolineno="131" lineno="131" func="Getattr(chdir)">
                <Getattr fromlineno="131" tolineno="131" lineno="131" attrname="chdir" expr="os">
                  <Name fromlineno="131" tolineno="131" lineno="131" name="os"/>
                </Getattr>
                <Getattr fromlineno="131" tolineno="131" lineno="131" attrname="pkgdir" expr="ud">
                  <Name fromlineno="131" tolineno="131" lineno="131" name="ud"/>
                </Getattr>
              </CallFunc>
            </Discard>
            <Discard fromlineno="132" tolineno="132" lineno="132">
              <CallFunc fromlineno="132" tolineno="132" lineno="132" func="Getattr(debug)">
                <Getattr fromlineno="132" tolineno="132" lineno="132" attrname="debug" expr="bb.msg">
                  <Getattr fromlineno="132" tolineno="132" lineno="132" attrname="msg" expr="bb">
                    <Name fromlineno="132" tolineno="132" lineno="132" name="bb"/>
                  </Getattr>
                </Getattr>
                <Const fromlineno="132" tolineno="132" lineno="132" type="int">1</Const>
                <Getattr fromlineno="132" tolineno="132" lineno="132" attrname="Fetcher" expr="bb.msg.domain">
                  <Getattr fromlineno="132" tolineno="132" lineno="132" attrname="domain" expr="bb.msg">
                    <Getattr fromlineno="132" tolineno="132" lineno="132" attrname="msg" expr="bb">
                      <Name fromlineno="132" tolineno="132" lineno="132" name="bb"/>
                    </Getattr>
                  </Getattr>
                </Getattr>
                <BinOp fromlineno="132" tolineno="132" lineno="132" op="%" left="'Running %s'" right="fetchcmd">
                  <Const fromlineno="132" tolineno="132" lineno="132" type="str">'Running %s'</Const>
                  <Name fromlineno="132" tolineno="132" lineno="132" name="fetchcmd"/>
                </BinOp>
              </CallFunc>
            </Discard>
            <Discard fromlineno="133" tolineno="133" lineno="133">
              <CallFunc fromlineno="133" tolineno="133" lineno="133" func="Name(runfetchcmd)">
                <Name fromlineno="133" tolineno="133" lineno="133" name="runfetchcmd"/>
                <Name fromlineno="133" tolineno="133" lineno="133" name="fetchcmd"/>
                <Name fromlineno="133" tolineno="133" lineno="133" name="d"/>
              </CallFunc>
            </Discard>
          </If>
          <Assign fromlineno="137" tolineno="137" lineno="137" targets="[&lt;AssName(updatecmd) l.137 [bb.fetch.hg] at Ox9f4fa0c&gt;]" value="self._buildhgcommand(ud, d, 'update')">
            <AssName fromlineno="137" tolineno="137" lineno="137" name="updatecmd"/>
            <CallFunc fromlineno="137" tolineno="137" lineno="137" func="Getattr(_buildhgcommand)">
              <Getattr fromlineno="137" tolineno="137" lineno="137" attrname="_buildhgcommand" expr="self">
                <Name fromlineno="137" tolineno="137" lineno="137" name="self"/>
              </Getattr>
              <Name fromlineno="137" tolineno="137" lineno="137" name="ud"/>
              <Name fromlineno="137" tolineno="137" lineno="137" name="d"/>
              <Const fromlineno="137" tolineno="137" lineno="137" type="str">'update'</Const>
            </CallFunc>
          </Assign>
          <Discard fromlineno="138" tolineno="138" lineno="138">
            <CallFunc fromlineno="138" tolineno="138" lineno="138" func="Getattr(debug)">
              <Getattr fromlineno="138" tolineno="138" lineno="138" attrname="debug" expr="bb.msg">
                <Getattr fromlineno="138" tolineno="138" lineno="138" attrname="msg" expr="bb">
                  <Name fromlineno="138" tolineno="138" lineno="138" name="bb"/>
                </Getattr>
              </Getattr>
              <Const fromlineno="138" tolineno="138" lineno="138" type="int">1</Const>
              <Getattr fromlineno="138" tolineno="138" lineno="138" attrname="Fetcher" expr="bb.msg.domain">
                <Getattr fromlineno="138" tolineno="138" lineno="138" attrname="domain" expr="bb.msg">
                  <Getattr fromlineno="138" tolineno="138" lineno="138" attrname="msg" expr="bb">
                    <Name fromlineno="138" tolineno="138" lineno="138" name="bb"/>
                  </Getattr>
                </Getattr>
              </Getattr>
              <BinOp fromlineno="138" tolineno="138" lineno="138" op="%" left="'Running %s'" right="updatecmd">
                <Const fromlineno="138" tolineno="138" lineno="138" type="str">'Running %s'</Const>
                <Name fromlineno="138" tolineno="138" lineno="138" name="updatecmd"/>
              </BinOp>
            </CallFunc>
          </Discard>
          <Discard fromlineno="139" tolineno="139" lineno="139">
            <CallFunc fromlineno="139" tolineno="139" lineno="139" func="Name(runfetchcmd)">
              <Name fromlineno="139" tolineno="139" lineno="139" name="runfetchcmd"/>
              <Name fromlineno="139" tolineno="139" lineno="139" name="updatecmd"/>
              <Name fromlineno="139" tolineno="139" lineno="139" name="d"/>
            </CallFunc>
          </Discard>
          <Discard fromlineno="141" tolineno="141" lineno="141">
            <CallFunc fromlineno="141" tolineno="141" lineno="141" func="Getattr(chdir)">
              <Getattr fromlineno="141" tolineno="141" lineno="141" attrname="chdir" expr="os">
                <Name fromlineno="141" tolineno="141" lineno="141" name="os"/>
              </Getattr>
              <Getattr fromlineno="141" tolineno="141" lineno="141" attrname="pkgdir" expr="ud">
                <Name fromlineno="141" tolineno="141" lineno="141" name="ud"/>
              </Getattr>
            </CallFunc>
          </Discard>
          <TryExcept fromlineno="142" tolineno="150" lineno="142">
            <Discard fromlineno="143" tolineno="143" lineno="143">
              <CallFunc fromlineno="143" tolineno="143" lineno="143" func="Name(runfetchcmd)">
                <Name fromlineno="143" tolineno="143" lineno="143" name="runfetchcmd"/>
                <BinOp fromlineno="143" tolineno="143" lineno="143" op="%" left="'tar -czf %s %s'" right="(ud.localpath, ud.module)">
                  <Const fromlineno="143" tolineno="143" lineno="143" type="str">'tar -czf %s %s'</Const>
                  <Tuple fromlineno="143" tolineno="143" lineno="143">
                    <Getattr fromlineno="143" tolineno="143" lineno="143" attrname="localpath" expr="ud">
                      <Name fromlineno="143" tolineno="143" lineno="143" name="ud"/>
                    </Getattr>
                    <Getattr fromlineno="143" tolineno="143" lineno="143" attrname="module" expr="ud">
                      <Name fromlineno="143" tolineno="143" lineno="143" name="ud"/>
                    </Getattr>
                  </Tuple>
                </BinOp>
                <Name fromlineno="143" tolineno="143" lineno="143" name="d"/>
              </CallFunc>
            </Discard>
            <ExceptHandler fromlineno="144" tolineno="150" lineno="144">
              <Assign fromlineno="145" tolineno="145" lineno="145" targets="[&lt;Tuple(tuple) l.145 [bb.fetch.hg] at Ox9f5414c&gt;]" value="sys.exc_info()">
                <Tuple fromlineno="145" tolineno="145" lineno="145">
                  <AssName fromlineno="145" tolineno="145" lineno="145" name="t"/>
                  <AssName fromlineno="145" tolineno="145" lineno="145" name="v"/>
                  <AssName fromlineno="145" tolineno="145" lineno="145" name="tb"/>
                </Tuple>
                <CallFunc fromlineno="145" tolineno="145" lineno="145" func="Getattr(exc_info)">
                  <Getattr fromlineno="145" tolineno="145" lineno="145" attrname="exc_info" expr="sys">
                    <Name fromlineno="145" tolineno="145" lineno="145" name="sys"/>
                  </Getattr>
                </CallFunc>
              </Assign>
              <TryExcept fromlineno="146" tolineno="149" lineno="146">
                <Discard fromlineno="147" tolineno="147" lineno="147">
                  <CallFunc fromlineno="147" tolineno="147" lineno="147" func="Getattr(unlink)">
                    <Getattr fromlineno="147" tolineno="147" lineno="147" attrname="unlink" expr="os">
                      <Name fromlineno="147" tolineno="147" lineno="147" name="os"/>
                    </Getattr>
                    <Getattr fromlineno="147" tolineno="147" lineno="147" attrname="localpath" expr="ud">
                      <Name fromlineno="147" tolineno="147" lineno="147" name="ud"/>
                    </Getattr>
                  </CallFunc>
                </Discard>
                <ExceptHandler fromlineno="148" tolineno="149" lineno="148">
                  <Name fromlineno="148" tolineno="148" lineno="148" name="OSError"/>
                  <Pass fromlineno="149" tolineno="149" lineno="149"/>
                </ExceptHandler>
              </TryExcept>
              <Raise fromlineno="150" tolineno="150" lineno="150">
                <Name fromlineno="150" tolineno="150" lineno="150" name="t"/>
                <Name fromlineno="150" tolineno="150" lineno="150" name="v"/>
                <Name fromlineno="150" tolineno="150" lineno="150" name="tb"/>
              </Raise>
            </ExceptHandler>
          </TryExcept>
        </Function>
      </Class>
    </Module>
    <Module fromlineno="0" tolineno="182" lineno="0" name="bb.fetch.cvs">
      <Import fromlineno="29" tolineno="29" lineno="29">
        <ImportName name="os"/>
        <ImportName name="re"/>
      </Import>
      <Import fromlineno="30" tolineno="30" lineno="30">
        <ImportName name="bb"/>
      </Import>
      <From fromlineno="31" tolineno="31" lineno="31" modname="bb">
        <ImportName name="data"/>
      </From>
      <From fromlineno="32" tolineno="32" lineno="32" modname="bb.fetch">
        <ImportName name="Fetch"/>
      </From>
      <From fromlineno="33" tolineno="33" lineno="33" modname="bb.fetch">
        <ImportName name="FetchError"/>
      </From>
      <From fromlineno="34" tolineno="34" lineno="34" modname="bb.fetch">
        <ImportName name="MissingParameterError"/>
      </From>
      <Class fromlineno="36" tolineno="182" lineno="36">
        <Name fromlineno="36" tolineno="36" lineno="36" name="Fetch"/>
        <Function fromlineno="40" tolineno="44" lineno="40">
          <Arguments fromlineno="40" tolineno="40" lineno="None" format_args="self, url, ud, d">
            <AssName fromlineno="40" tolineno="40" lineno="40" name="self"/>
            <AssName fromlineno="40" tolineno="40" lineno="40" name="url"/>
            <AssName fromlineno="40" tolineno="40" lineno="40" name="ud"/>
            <AssName fromlineno="40" tolineno="40" lineno="40" name="d"/>
          </Arguments>
          <Return fromlineno="44" tolineno="44" lineno="44">
            <Compare fromlineno="44" tolineno="44" lineno="44" op="('in', &lt;List(list) l.44 [bb.fetch.cvs] at Ox9f5e18c&gt;)">
              <Getattr fromlineno="44" tolineno="44" lineno="44" attrname="type" expr="ud">
                <Name fromlineno="44" tolineno="44" lineno="44" name="ud"/>
              </Getattr>
              <List fromlineno="44" tolineno="44" lineno="44">
                <Const fromlineno="44" tolineno="44" lineno="44" type="str">'cvs'</Const>
                <Const fromlineno="44" tolineno="44" lineno="44" type="str">'pserver'</Const>
              </List>
            </Compare>
          </Return>
        </Function>
        <Function fromlineno="46" tolineno="71" lineno="46">
          <Arguments fromlineno="46" tolineno="46" lineno="None" format_args="self, url, ud, d">
            <AssName fromlineno="46" tolineno="46" lineno="46" name="self"/>
            <AssName fromlineno="46" tolineno="46" lineno="46" name="url"/>
            <AssName fromlineno="46" tolineno="46" lineno="46" name="ud"/>
            <AssName fromlineno="46" tolineno="46" lineno="46" name="d"/>
          </Arguments>
          <If fromlineno="47" tolineno="48" lineno="47">
            <UnaryOp fromlineno="47" tolineno="47" lineno="47">
              <Compare fromlineno="47" tolineno="47" lineno="47" op="('in', &lt;Getattr(parm) l.47 [bb.fetch.cvs] at Ox9f5e48c&gt;)">
                <Const fromlineno="47" tolineno="47" lineno="47" type="str">'module'</Const>
                <Getattr fromlineno="47" tolineno="47" lineno="47" attrname="parm" expr="ud">
                  <Name fromlineno="47" tolineno="47" lineno="47" name="ud"/>
                </Getattr>
              </Compare>
            </UnaryOp>
            <Raise fromlineno="48" tolineno="48" lineno="48">
              <CallFunc fromlineno="48" tolineno="48" lineno="48" func="Name(MissingParameterError)">
                <Name fromlineno="48" tolineno="48" lineno="48" name="MissingParameterError"/>
                <Const fromlineno="48" tolineno="48" lineno="48" type="str">"cvs method needs a 'module' parameter"</Const>
              </CallFunc>
            </Raise>
          </If>
          <Assign fromlineno="49" tolineno="49" lineno="49" targets="[&lt;AssAttr(module) l.49 [bb.fetch.cvs] at Ox9f5e5ec&gt;]" value="ud.parm['module']">
            <AssAttr fromlineno="49" tolineno="49" lineno="49" attrname="module" expr="ud">
              <Name fromlineno="49" tolineno="49" lineno="49" name="ud"/>
            </AssAttr>
            <Subscript fromlineno="49" tolineno="49" lineno="49">
              <Getattr fromlineno="49" tolineno="49" lineno="49" attrname="parm" expr="ud">
                <Name fromlineno="49" tolineno="49" lineno="49" name="ud"/>
              </Getattr>
              <Index fromlineno="49" tolineno="49" lineno="None">
                <Const fromlineno="49" tolineno="49" lineno="49" type="str">'module'</Const>
              </Index>
            </Subscript>
          </Assign>
          <Assign fromlineno="51" tolineno="51" lineno="51" targets="[&lt;AssAttr(tag) l.51 [bb.fetch.cvs] at Ox9f5e70c&gt;]" value="''">
            <AssAttr fromlineno="51" tolineno="51" lineno="51" attrname="tag" expr="ud">
              <Name fromlineno="51" tolineno="51" lineno="51" name="ud"/>
            </AssAttr>
            <Const fromlineno="51" tolineno="51" lineno="51" type="str">''</Const>
          </Assign>
          <If fromlineno="52" tolineno="53" lineno="52">
            <Compare fromlineno="52" tolineno="52" lineno="52" op="('in', &lt;Getattr(parm) l.52 [bb.fetch.cvs] at Ox9f5e80c&gt;)">
              <Const fromlineno="52" tolineno="52" lineno="52" type="str">'tag'</Const>
              <Getattr fromlineno="52" tolineno="52" lineno="52" attrname="parm" expr="ud">
                <Name fromlineno="52" tolineno="52" lineno="52" name="ud"/>
              </Getattr>
            </Compare>
            <Assign fromlineno="53" tolineno="53" lineno="53" targets="[&lt;AssAttr(tag) l.53 [bb.fetch.cvs] at Ox9f5e8cc&gt;]" value="ud.parm['tag']">
              <AssAttr fromlineno="53" tolineno="53" lineno="53" attrname="tag" expr="ud">
                <Name fromlineno="53" tolineno="53" lineno="53" name="ud"/>
              </AssAttr>
              <Subscript fromlineno="53" tolineno="53" lineno="53">
                <Getattr fromlineno="53" tolineno="53" lineno="53" attrname="parm" expr="ud">
                  <Name fromlineno="53" tolineno="53" lineno="53" name="ud"/>
                </Getattr>
                <Index fromlineno="53" tolineno="53" lineno="None">
                  <Const fromlineno="53" tolineno="53" lineno="53" type="str">'tag'</Const>
                </Index>
              </Subscript>
            </Assign>
          </If>
          <If fromlineno="56" tolineno="59" lineno="56">
            <Compare fromlineno="56" tolineno="56" lineno="56" op="('in', &lt;Getattr(parm) l.56 [bb.fetch.cvs] at Ox9f5ea4c&gt;)">
              <Const fromlineno="56" tolineno="56" lineno="56" type="str">'date'</Const>
              <Getattr fromlineno="56" tolineno="56" lineno="56" attrname="parm" expr="ud">
                <Name fromlineno="56" tolineno="56" lineno="56" name="ud"/>
              </Getattr>
            </Compare>
            <Assign fromlineno="57" tolineno="57" lineno="57" targets="[&lt;AssAttr(date) l.57 [bb.fetch.cvs] at Ox9f5eb0c&gt;]" value="ud.parm['date']">
              <AssAttr fromlineno="57" tolineno="57" lineno="57" attrname="date" expr="ud">
                <Name fromlineno="57" tolineno="57" lineno="57" name="ud"/>
              </AssAttr>
              <Subscript fromlineno="57" tolineno="57" lineno="57">
                <Getattr fromlineno="57" tolineno="57" lineno="57" attrname="parm" expr="ud">
                  <Name fromlineno="57" tolineno="57" lineno="57" name="ud"/>
                </Getattr>
                <Index fromlineno="57" tolineno="57" lineno="None">
                  <Const fromlineno="57" tolineno="57" lineno="57" type="str">'date'</Const>
                </Index>
              </Subscript>
            </Assign>
            <If fromlineno="58" tolineno="59" lineno="58">
              <Getattr fromlineno="58" tolineno="58" lineno="58" attrname="tag" expr="ud">
                <Name fromlineno="58" tolineno="58" lineno="58" name="ud"/>
              </Getattr>
              <Assign fromlineno="59" tolineno="59" lineno="59" targets="[&lt;AssAttr(date) l.59 [bb.fetch.cvs] at Ox9f5ed0c&gt;]" value="''">
                <AssAttr fromlineno="59" tolineno="59" lineno="59" attrname="date" expr="ud">
                  <Name fromlineno="59" tolineno="59" lineno="59" name="ud"/>
                </AssAttr>
                <Const fromlineno="59" tolineno="59" lineno="59" type="str">''</Const>
              </Assign>
            </If>
          </If>
          <Assign fromlineno="61" tolineno="61" lineno="61" targets="[&lt;AssName(norecurse) l.61 [bb.fetch.cvs] at Ox9f5ed6c&gt;]" value="''">
            <AssName fromlineno="61" tolineno="61" lineno="61" name="norecurse"/>
            <Const fromlineno="61" tolineno="61" lineno="61" type="str">''</Const>
          </Assign>
          <If fromlineno="62" tolineno="63" lineno="62">
            <Compare fromlineno="62" tolineno="62" lineno="62" op="('in', &lt;Getattr(parm) l.62 [bb.fetch.cvs] at Ox9f5ee6c&gt;)">
              <Const fromlineno="62" tolineno="62" lineno="62" type="str">'norecurse'</Const>
              <Getattr fromlineno="62" tolineno="62" lineno="62" attrname="parm" expr="ud">
                <Name fromlineno="62" tolineno="62" lineno="62" name="ud"/>
              </Getattr>
            </Compare>
            <Assign fromlineno="63" tolineno="63" lineno="63" targets="[&lt;AssName(norecurse) l.63 [bb.fetch.cvs] at Ox9f5ef2c&gt;]" value="'_norecurse'">
              <AssName fromlineno="63" tolineno="63" lineno="63" name="norecurse"/>
              <Const fromlineno="63" tolineno="63" lineno="63" type="str">'_norecurse'</Const>
            </Assign>
          </If>
          <Assign fromlineno="65" tolineno="65" lineno="65" targets="[&lt;AssName(fullpath) l.65 [bb.fetch.cvs] at Ox9f5efac&gt;]" value="''">
            <AssName fromlineno="65" tolineno="65" lineno="65" name="fullpath"/>
            <Const fromlineno="65" tolineno="65" lineno="65" type="str">''</Const>
          </Assign>
          <If fromlineno="66" tolineno="67" lineno="66">
            <Compare fromlineno="66" tolineno="66" lineno="66" op="('in', &lt;Getattr(parm) l.66 [bb.fetch.cvs] at Ox9f620cc&gt;)">
              <Const fromlineno="66" tolineno="66" lineno="66" type="str">'fullpath'</Const>
              <Getattr fromlineno="66" tolineno="66" lineno="66" attrname="parm" expr="ud">
                <Name fromlineno="66" tolineno="66" lineno="66" name="ud"/>
              </Getattr>
            </Compare>
            <Assign fromlineno="67" tolineno="67" lineno="67" targets="[&lt;AssName(fullpath) l.67 [bb.fetch.cvs] at Ox9f6218c&gt;]" value="'_fullpath'">
              <AssName fromlineno="67" tolineno="67" lineno="67" name="fullpath"/>
              <Const fromlineno="67" tolineno="67" lineno="67" type="str">'_fullpath'</Const>
            </Assign>
          </If>
          <Assign fromlineno="69" tolineno="69" lineno="69" targets="[&lt;AssAttr(localfile) l.69 [bb.fetch.cvs] at Ox9f6220c&gt;]" value="data.expand(('%s_%s_%s_%s%s%s.tar.gz') % ((ud.module.replace('/', '.'), ud.host, ud.tag, ud.date, norecurse, fullpath)), d)">
            <AssAttr fromlineno="69" tolineno="69" lineno="69" attrname="localfile" expr="ud">
              <Name fromlineno="69" tolineno="69" lineno="69" name="ud"/>
            </AssAttr>
            <CallFunc fromlineno="69" tolineno="69" lineno="69" func="Getattr(expand)">
              <Getattr fromlineno="69" tolineno="69" lineno="69" attrname="expand" expr="data">
                <Name fromlineno="69" tolineno="69" lineno="69" name="data"/>
              </Getattr>
              <BinOp fromlineno="69" tolineno="69" lineno="69" op="%" left="'%s_%s_%s_%s%s%s.tar.gz'" right="(ud.module.replace('/', '.'), ud.host, ud.tag, ud.date, norecurse, fullpath)">
                <Const fromlineno="69" tolineno="69" lineno="69" type="str">'%s_%s_%s_%s%s%s.tar.gz'</Const>
                <Tuple fromlineno="69" tolineno="69" lineno="69">
                  <CallFunc fromlineno="69" tolineno="69" lineno="69" func="Getattr(replace)">
                    <Getattr fromlineno="69" tolineno="69" lineno="69" attrname="replace" expr="ud.module">
                      <Getattr fromlineno="69" tolineno="69" lineno="69" attrname="module" expr="ud">
                        <Name fromlineno="69" tolineno="69" lineno="69" name="ud"/>
                      </Getattr>
                    </Getattr>
                    <Const fromlineno="69" tolineno="69" lineno="69" type="str">'/'</Const>
                    <Const fromlineno="69" tolineno="69" lineno="69" type="str">'.'</Const>
                  </CallFunc>
                  <Getattr fromlineno="69" tolineno="69" lineno="69" attrname="host" expr="ud">
                    <Name fromlineno="69" tolineno="69" lineno="69" name="ud"/>
                  </Getattr>
                  <Getattr fromlineno="69" tolineno="69" lineno="69" attrname="tag" expr="ud">
                    <Name fromlineno="69" tolineno="69" lineno="69" name="ud"/>
                  </Getattr>
                  <Getattr fromlineno="69" tolineno="69" lineno="69" attrname="date" expr="ud">
                    <Name fromlineno="69" tolineno="69" lineno="69" name="ud"/>
                  </Getattr>
                  <Name fromlineno="69" tolineno="69" lineno="69" name="norecurse"/>
                  <Name fromlineno="69" tolineno="69" lineno="69" name="fullpath"/>
                </Tuple>
              </BinOp>
              <Name fromlineno="69" tolineno="69" lineno="69" name="d"/>
            </CallFunc>
          </Assign>
          <Return fromlineno="71" tolineno="71" lineno="71">
            <CallFunc fromlineno="71" tolineno="71" lineno="71" func="Getattr(join)">
              <Getattr fromlineno="71" tolineno="71" lineno="71" attrname="join" expr="os.path">
                <Getattr fromlineno="71" tolineno="71" lineno="71" attrname="path" expr="os">
                  <Name fromlineno="71" tolineno="71" lineno="71" name="os"/>
                </Getattr>
              </Getattr>
              <CallFunc fromlineno="71" tolineno="71" lineno="71" func="Getattr(getVar)">
                <Getattr fromlineno="71" tolineno="71" lineno="71" attrname="getVar" expr="data">
                  <Name fromlineno="71" tolineno="71" lineno="71" name="data"/>
                </Getattr>
                <Const fromlineno="71" tolineno="71" lineno="71" type="str">'DL_DIR'</Const>
                <Name fromlineno="71" tolineno="71" lineno="71" name="d"/>
                <Const fromlineno="71" tolineno="71" lineno="71" type="bool">True</Const>
              </CallFunc>
              <Getattr fromlineno="71" tolineno="71" lineno="71" attrname="localfile" expr="ud">
                <Name fromlineno="71" tolineno="71" lineno="71" name="ud"/>
              </Getattr>
            </CallFunc>
          </Return>
        </Function>
        <Function fromlineno="73" tolineno="76" lineno="73">
          <Arguments fromlineno="73" tolineno="73" lineno="None" format_args="self, url, ud, d">
            <AssName fromlineno="73" tolineno="73" lineno="73" name="self"/>
            <AssName fromlineno="73" tolineno="73" lineno="73" name="url"/>
            <AssName fromlineno="73" tolineno="73" lineno="73" name="ud"/>
            <AssName fromlineno="73" tolineno="73" lineno="73" name="d"/>
          </Arguments>
          <If fromlineno="74" tolineno="75" lineno="74">
            <Compare fromlineno="74" tolineno="74" lineno="74" op="('==', &lt;Const(str) l.74 [bb.fetch.cvs] at Ox9f629ac&gt;)">
              <Getattr fromlineno="74" tolineno="74" lineno="74" attrname="date" expr="ud">
                <Name fromlineno="74" tolineno="74" lineno="74" name="ud"/>
              </Getattr>
              <Const fromlineno="74" tolineno="74" lineno="74" type="str">'now'</Const>
            </Compare>
            <Return fromlineno="75" tolineno="75" lineno="75">
              <Const fromlineno="75" tolineno="75" lineno="75" type="bool">True</Const>
            </Return>
          </If>
          <Return fromlineno="76" tolineno="76" lineno="76">
            <Const fromlineno="76" tolineno="76" lineno="76" type="bool">False</Const>
          </Return>
        </Function>
        <Function fromlineno="78" tolineno="182" lineno="78">
          <Arguments fromlineno="78" tolineno="78" lineno="None" format_args="self, loc, ud, d">
            <AssName fromlineno="78" tolineno="78" lineno="78" name="self"/>
            <AssName fromlineno="78" tolineno="78" lineno="78" name="loc"/>
            <AssName fromlineno="78" tolineno="78" lineno="78" name="ud"/>
            <AssName fromlineno="78" tolineno="78" lineno="78" name="d"/>
          </Arguments>
          <If fromlineno="81" tolineno="83" lineno="81">
            <BoolOp fromlineno="81" tolineno="81" lineno="81" op="and" values="not self.forcefetch(loc, ud, d),Fetch.try_mirror(d, ud.localfile),">
              <UnaryOp fromlineno="81" tolineno="81" lineno="81">
                <CallFunc fromlineno="81" tolineno="81" lineno="81" func="Getattr(forcefetch)">
                  <Getattr fromlineno="81" tolineno="81" lineno="81" attrname="forcefetch" expr="self">
                    <Name fromlineno="81" tolineno="81" lineno="81" name="self"/>
                  </Getattr>
                  <Name fromlineno="81" tolineno="81" lineno="81" name="loc"/>
                  <Name fromlineno="81" tolineno="81" lineno="81" name="ud"/>
                  <Name fromlineno="81" tolineno="81" lineno="81" name="d"/>
                </CallFunc>
              </UnaryOp>
              <CallFunc fromlineno="81" tolineno="81" lineno="81" func="Getattr(try_mirror)">
                <Getattr fromlineno="81" tolineno="81" lineno="81" attrname="try_mirror" expr="Fetch">
                  <Name fromlineno="81" tolineno="81" lineno="81" name="Fetch"/>
                </Getattr>
                <Name fromlineno="81" tolineno="81" lineno="81" name="d"/>
                <Getattr fromlineno="81" tolineno="81" lineno="81" attrname="localfile" expr="ud">
                  <Name fromlineno="81" tolineno="81" lineno="81" name="ud"/>
                </Getattr>
              </CallFunc>
            </BoolOp>
            <Discard fromlineno="82" tolineno="82" lineno="82">
              <CallFunc fromlineno="82" tolineno="82" lineno="82" func="Getattr(debug)">
                <Getattr fromlineno="82" tolineno="82" lineno="82" attrname="debug" expr="bb.msg">
                  <Getattr fromlineno="82" tolineno="82" lineno="82" attrname="msg" expr="bb">
                    <Name fromlineno="82" tolineno="82" lineno="82" name="bb"/>
                  </Getattr>
                </Getattr>
                <Const fromlineno="82" tolineno="82" lineno="82" type="int">1</Const>
                <Getattr fromlineno="82" tolineno="82" lineno="82" attrname="Fetcher" expr="bb.msg.domain">
                  <Getattr fromlineno="82" tolineno="82" lineno="82" attrname="domain" expr="bb.msg">
                    <Getattr fromlineno="82" tolineno="82" lineno="82" attrname="msg" expr="bb">
                      <Name fromlineno="82" tolineno="82" lineno="82" name="bb"/>
                    </Getattr>
                  </Getattr>
                </Getattr>
                <BinOp fromlineno="82" tolineno="82" lineno="82" op="%" left="'%s already exists or was mirrored, skipping cvs checkout.'" right="ud.localpath">
                  <Const fromlineno="82" tolineno="82" lineno="82" type="str">'%s already exists or was mirrored, skipping cvs checkout.'</Const>
                  <Getattr fromlineno="82" tolineno="82" lineno="82" attrname="localpath" expr="ud">
                    <Name fromlineno="82" tolineno="82" lineno="82" name="ud"/>
                  </Getattr>
                </BinOp>
              </CallFunc>
            </Discard>
            <Return fromlineno="83" tolineno="83" lineno="83"/>
          </If>
          <Assign fromlineno="85" tolineno="85" lineno="85" targets="[&lt;AssName(method) l.85 [bb.fetch.cvs] at Ox9f6712c&gt;]" value="'pserver'">
            <AssName fromlineno="85" tolineno="85" lineno="85" name="method"/>
            <Const fromlineno="85" tolineno="85" lineno="85" type="str">'pserver'</Const>
          </Assign>
          <If fromlineno="86" tolineno="87" lineno="86">
            <Compare fromlineno="86" tolineno="86" lineno="86" op="('in', &lt;Getattr(parm) l.86 [bb.fetch.cvs] at Ox9f6722c&gt;)">
              <Const fromlineno="86" tolineno="86" lineno="86" type="str">'method'</Const>
              <Getattr fromlineno="86" tolineno="86" lineno="86" attrname="parm" expr="ud">
                <Name fromlineno="86" tolineno="86" lineno="86" name="ud"/>
              </Getattr>
            </Compare>
            <Assign fromlineno="87" tolineno="87" lineno="87" targets="[&lt;AssName(method) l.87 [bb.fetch.cvs] at Ox9f672ec&gt;]" value="ud.parm['method']">
              <AssName fromlineno="87" tolineno="87" lineno="87" name="method"/>
              <Subscript fromlineno="87" tolineno="87" lineno="87">
                <Getattr fromlineno="87" tolineno="87" lineno="87" attrname="parm" expr="ud">
                  <Name fromlineno="87" tolineno="87" lineno="87" name="ud"/>
                </Getattr>
                <Index fromlineno="87" tolineno="87" lineno="None">
                  <Const fromlineno="87" tolineno="87" lineno="87" type="str">'method'</Const>
                </Index>
              </Subscript>
            </Assign>
          </If>
          <Assign fromlineno="89" tolineno="89" lineno="89" targets="[&lt;AssName(localdir) l.89 [bb.fetch.cvs] at Ox9f673ec&gt;]" value="ud.module">
            <AssName fromlineno="89" tolineno="89" lineno="89" name="localdir"/>
            <Getattr fromlineno="89" tolineno="89" lineno="89" attrname="module" expr="ud">
              <Name fromlineno="89" tolineno="89" lineno="89" name="ud"/>
            </Getattr>
          </Assign>
          <If fromlineno="90" tolineno="91" lineno="90">
            <Compare fromlineno="90" tolineno="90" lineno="90" op="('in', &lt;Getattr(parm) l.90 [bb.fetch.cvs] at Ox9f6750c&gt;)">
              <Const fromlineno="90" tolineno="90" lineno="90" type="str">'localdir'</Const>
              <Getattr fromlineno="90" tolineno="90" lineno="90" attrname="parm" expr="ud">
                <Name fromlineno="90" tolineno="90" lineno="90" name="ud"/>
              </Getattr>
            </Compare>
            <Assign fromlineno="91" tolineno="91" lineno="91" targets="[&lt;AssName(localdir) l.91 [bb.fetch.cvs] at Ox9f675cc&gt;]" value="ud.parm['localdir']">
              <AssName fromlineno="91" tolineno="91" lineno="91" name="localdir"/>
              <Subscript fromlineno="91" tolineno="91" lineno="91">
                <Getattr fromlineno="91" tolineno="91" lineno="91" attrname="parm" expr="ud">
                  <Name fromlineno="91" tolineno="91" lineno="91" name="ud"/>
                </Getattr>
                <Index fromlineno="91" tolineno="91" lineno="None">
                  <Const fromlineno="91" tolineno="91" lineno="91" type="str">'localdir'</Const>
                </Index>
              </Subscript>
            </Assign>
          </If>
          <Assign fromlineno="93" tolineno="93" lineno="93" targets="[&lt;AssName(cvs_port) l.93 [bb.fetch.cvs] at Ox9f676cc&gt;]" value="''">
            <AssName fromlineno="93" tolineno="93" lineno="93" name="cvs_port"/>
            <Const fromlineno="93" tolineno="93" lineno="93" type="str">''</Const>
          </Assign>
          <If fromlineno="94" tolineno="95" lineno="94">
            <Compare fromlineno="94" tolineno="94" lineno="94" op="('in', &lt;Getattr(parm) l.94 [bb.fetch.cvs] at Ox9f677cc&gt;)">
              <Const fromlineno="94" tolineno="94" lineno="94" type="str">'port'</Const>
              <Getattr fromlineno="94" tolineno="94" lineno="94" attrname="parm" expr="ud">
                <Name fromlineno="94" tolineno="94" lineno="94" name="ud"/>
              </Getattr>
            </Compare>
            <Assign fromlineno="95" tolineno="95" lineno="95" targets="[&lt;AssName(cvs_port) l.95 [bb.fetch.cvs] at Ox9f6788c&gt;]" value="ud.parm['port']">
              <AssName fromlineno="95" tolineno="95" lineno="95" name="cvs_port"/>
              <Subscript fromlineno="95" tolineno="95" lineno="95">
                <Getattr fromlineno="95" tolineno="95" lineno="95" attrname="parm" expr="ud">
                  <Name fromlineno="95" tolineno="95" lineno="95" name="ud"/>
                </Getattr>
                <Index fromlineno="95" tolineno="95" lineno="None">
                  <Const fromlineno="95" tolineno="95" lineno="95" type="str">'port'</Const>
                </Index>
              </Subscript>
            </Assign>
          </If>
          <Assign fromlineno="97" tolineno="97" lineno="97" targets="[&lt;AssName(cvs_rsh) l.97 [bb.fetch.cvs] at Ox9f6798c&gt;]" value="None">
            <AssName fromlineno="97" tolineno="97" lineno="97" name="cvs_rsh"/>
            <Const fromlineno="97" tolineno="97" lineno="97" type="NoneType">None</Const>
          </Assign>
          <If fromlineno="98" tolineno="100" lineno="98">
            <Compare fromlineno="98" tolineno="98" lineno="98" op="('==', &lt;Const(str) l.98 [bb.fetch.cvs] at Ox9f67a8c&gt;)">
              <Name fromlineno="98" tolineno="98" lineno="98" name="method"/>
              <Const fromlineno="98" tolineno="98" lineno="98" type="str">'ext'</Const>
            </Compare>
            <If fromlineno="99" tolineno="100" lineno="99">
              <Compare fromlineno="99" tolineno="99" lineno="99" op="('in', &lt;Getattr(parm) l.99 [bb.fetch.cvs] at Ox9f67bac&gt;)">
                <Const fromlineno="99" tolineno="99" lineno="99" type="str">'rsh'</Const>
                <Getattr fromlineno="99" tolineno="99" lineno="99" attrname="parm" expr="ud">
                  <Name fromlineno="99" tolineno="99" lineno="99" name="ud"/>
                </Getattr>
              </Compare>
              <Assign fromlineno="100" tolineno="100" lineno="100" targets="[&lt;AssName(cvs_rsh) l.100 [bb.fetch.cvs] at Ox9f67c6c&gt;]" value="ud.parm['rsh']">
                <AssName fromlineno="100" tolineno="100" lineno="100" name="cvs_rsh"/>
                <Subscript fromlineno="100" tolineno="100" lineno="100">
                  <Getattr fromlineno="100" tolineno="100" lineno="100" attrname="parm" expr="ud">
                    <Name fromlineno="100" tolineno="100" lineno="100" name="ud"/>
                  </Getattr>
                  <Index fromlineno="100" tolineno="100" lineno="None">
                    <Const fromlineno="100" tolineno="100" lineno="100" type="str">'rsh'</Const>
                  </Index>
                </Subscript>
              </Assign>
            </If>
          </If>
          <If fromlineno="102" tolineno="115" lineno="102">
            <Compare fromlineno="102" tolineno="102" lineno="102" op="('==', &lt;Const(str) l.102 [bb.fetch.cvs] at Ox9f67dac&gt;)">
              <Name fromlineno="102" tolineno="102" lineno="102" name="method"/>
              <Const fromlineno="102" tolineno="102" lineno="102" type="str">'dir'</Const>
            </Compare>
            <Assign fromlineno="103" tolineno="103" lineno="103" targets="[&lt;AssName(cvsroot) l.103 [bb.fetch.cvs] at Ox9f67e4c&gt;]" value="ud.path">
              <AssName fromlineno="103" tolineno="103" lineno="103" name="cvsroot"/>
              <Getattr fromlineno="103" tolineno="103" lineno="103" attrname="path" expr="ud">
                <Name fromlineno="103" tolineno="103" lineno="103" name="ud"/>
              </Getattr>
            </Assign>
            <Assign fromlineno="105" tolineno="105" lineno="105" targets="[&lt;AssName(cvsroot) l.105 [bb.fetch.cvs] at Ox9f67f2c&gt;]" value="(':') + (method)">
              <AssName fromlineno="105" tolineno="105" lineno="105" name="cvsroot"/>
              <BinOp fromlineno="105" tolineno="105" lineno="105" op="+" left="':'" right="method">
                <Const fromlineno="105" tolineno="105" lineno="105" type="str">':'</Const>
                <Name fromlineno="105" tolineno="105" lineno="105" name="method"/>
              </BinOp>
            </Assign>
            <Assign fromlineno="106" tolineno="106" lineno="106" targets="[&lt;AssName(cvsproxyhost) l.106 [bb.fetch.cvs] at Ox9f67fec&gt;]" value="data.getVar('CVS_PROXY_HOST', d, True)">
              <AssName fromlineno="106" tolineno="106" lineno="106" name="cvsproxyhost"/>
              <CallFunc fromlineno="106" tolineno="106" lineno="106" func="Getattr(getVar)">
                <Getattr fromlineno="106" tolineno="106" lineno="106" attrname="getVar" expr="data">
                  <Name fromlineno="106" tolineno="106" lineno="106" name="data"/>
                </Getattr>
                <Const fromlineno="106" tolineno="106" lineno="106" type="str">'CVS_PROXY_HOST'</Const>
                <Name fromlineno="106" tolineno="106" lineno="106" name="d"/>
                <Const fromlineno="106" tolineno="106" lineno="106" type="bool">True</Const>
              </CallFunc>
            </Assign>
            <If fromlineno="107" tolineno="108" lineno="107">
              <Name fromlineno="107" tolineno="107" lineno="107" name="cvsproxyhost"/>
              <AugAssign fromlineno="108" tolineno="108" lineno="108" target="cvsroot" value="(';proxy=') + (cvsproxyhost)">
                <AssName fromlineno="108" tolineno="108" lineno="108" name="cvsroot"/>
                <BinOp fromlineno="108" tolineno="108" lineno="108" op="+" left="';proxy='" right="cvsproxyhost">
                  <Const fromlineno="108" tolineno="108" lineno="108" type="str">';proxy='</Const>
                  <Name fromlineno="108" tolineno="108" lineno="108" name="cvsproxyhost"/>
                </BinOp>
              </AugAssign>
            </If>
            <Assign fromlineno="109" tolineno="109" lineno="109" targets="[&lt;AssName(cvsproxyport) l.109 [bb.fetch.cvs] at Ox9f6a2cc&gt;]" value="data.getVar('CVS_PROXY_PORT', d, True)">
              <AssName fromlineno="109" tolineno="109" lineno="109" name="cvsproxyport"/>
              <CallFunc fromlineno="109" tolineno="109" lineno="109" func="Getattr(getVar)">
                <Getattr fromlineno="109" tolineno="109" lineno="109" attrname="getVar" expr="data">
                  <Name fromlineno="109" tolineno="109" lineno="109" name="data"/>
                </Getattr>
                <Const fromlineno="109" tolineno="109" lineno="109" type="str">'CVS_PROXY_PORT'</Const>
                <Name fromlineno="109" tolineno="109" lineno="109" name="d"/>
                <Const fromlineno="109" tolineno="109" lineno="109" type="bool">True</Const>
              </CallFunc>
            </Assign>
            <If fromlineno="110" tolineno="111" lineno="110">
              <Name fromlineno="110" tolineno="110" lineno="110" name="cvsproxyport"/>
              <AugAssign fromlineno="111" tolineno="111" lineno="111" target="cvsroot" value="(';proxyport=') + (cvsproxyport)">
                <AssName fromlineno="111" tolineno="111" lineno="111" name="cvsroot"/>
                <BinOp fromlineno="111" tolineno="111" lineno="111" op="+" left="';proxyport='" right="cvsproxyport">
                  <Const fromlineno="111" tolineno="111" lineno="111" type="str">';proxyport='</Const>
                  <Name fromlineno="111" tolineno="111" lineno="111" name="cvsproxyport"/>
                </BinOp>
              </AugAssign>
            </If>
            <AugAssign fromlineno="112" tolineno="112" lineno="112" target="cvsroot" value="(':') + (ud.user)">
              <AssName fromlineno="112" tolineno="112" lineno="112" name="cvsroot"/>
              <BinOp fromlineno="112" tolineno="112" lineno="112" op="+" left="':'" right="ud.user">
                <Const fromlineno="112" tolineno="112" lineno="112" type="str">':'</Const>
                <Getattr fromlineno="112" tolineno="112" lineno="112" attrname="user" expr="ud">
                  <Name fromlineno="112" tolineno="112" lineno="112" name="ud"/>
                </Getattr>
              </BinOp>
            </AugAssign>
            <If fromlineno="113" tolineno="114" lineno="113">
              <Getattr fromlineno="113" tolineno="113" lineno="113" attrname="pswd" expr="ud">
                <Name fromlineno="113" tolineno="113" lineno="113" name="ud"/>
              </Getattr>
              <AugAssign fromlineno="114" tolineno="114" lineno="114" target="cvsroot" value="(':') + (ud.pswd)">
                <AssName fromlineno="114" tolineno="114" lineno="114" name="cvsroot"/>
                <BinOp fromlineno="114" tolineno="114" lineno="114" op="+" left="':'" right="ud.pswd">
                  <Const fromlineno="114" tolineno="114" lineno="114" type="str">':'</Const>
                  <Getattr fromlineno="114" tolineno="114" lineno="114" attrname="pswd" expr="ud">
                    <Name fromlineno="114" tolineno="114" lineno="114" name="ud"/>
                  </Getattr>
                </BinOp>
              </AugAssign>
            </If>
            <AugAssign fromlineno="115" tolineno="115" lineno="115" target="cvsroot" value="(((('@') + (ud.host)) + (':')) + (cvs_port)) + (ud.path)">
              <AssName fromlineno="115" tolineno="115" lineno="115" name="cvsroot"/>
              <BinOp fromlineno="115" tolineno="115" lineno="115" op="+" left="((('@') + (ud.host)) + (':')) + (cvs_port)" right="ud.path">
                <BinOp fromlineno="115" tolineno="115" lineno="115" op="+" left="(('@') + (ud.host)) + (':')" right="cvs_port">
                  <BinOp fromlineno="115" tolineno="115" lineno="115" op="+" left="('@') + (ud.host)" right="':'">
                    <BinOp fromlineno="115" tolineno="115" lineno="115" op="+" left="'@'" right="ud.host">
                      <Const fromlineno="115" tolineno="115" lineno="115" type="str">'@'</Const>
                      <Getattr fromlineno="115" tolineno="115" lineno="115" attrname="host" expr="ud">
                        <Name fromlineno="115" tolineno="115" lineno="115" name="ud"/>
                      </Getattr>
                    </BinOp>
                    <Const fromlineno="115" tolineno="115" lineno="115" type="str">':'</Const>
                  </BinOp>
                  <Name fromlineno="115" tolineno="115" lineno="115" name="cvs_port"/>
                </BinOp>
                <Getattr fromlineno="115" tolineno="115" lineno="115" attrname="path" expr="ud">
                  <Name fromlineno="115" tolineno="115" lineno="115" name="ud"/>
                </Getattr>
              </BinOp>
            </AugAssign>
          </If>
          <Assign fromlineno="117" tolineno="117" lineno="117" targets="[&lt;AssName(options) l.117 [bb.fetch.cvs] at Ox9f6a94c&gt;]" value="[]">
            <AssName fromlineno="117" tolineno="117" lineno="117" name="options"/>
            <List fromlineno="117" tolineno="117" lineno="117"/>
          </Assign>
          <If fromlineno="118" tolineno="119" lineno="118">
            <Compare fromlineno="118" tolineno="118" lineno="118" op="('in', &lt;Getattr(parm) l.118 [bb.fetch.cvs] at Ox9f6aa6c&gt;)">
              <Const fromlineno="118" tolineno="118" lineno="118" type="str">'norecurse'</Const>
              <Getattr fromlineno="118" tolineno="118" lineno="118" attrname="parm" expr="ud">
                <Name fromlineno="118" tolineno="118" lineno="118" name="ud"/>
              </Getattr>
            </Compare>
            <Discard fromlineno="119" tolineno="119" lineno="119">
              <CallFunc fromlineno="119" tolineno="119" lineno="119" func="Getattr(append)">
                <Getattr fromlineno="119" tolineno="119" lineno="119" attrname="append" expr="options">
                  <Name fromlineno="119" tolineno="119" lineno="119" name="options"/>
                </Getattr>
                <Const fromlineno="119" tolineno="119" lineno="119" type="str">'-l'</Const>
              </CallFunc>
            </Discard>
          </If>
          <If fromlineno="120" tolineno="125" lineno="120">
            <Getattr fromlineno="120" tolineno="120" lineno="120" attrname="date" expr="ud">
              <Name fromlineno="120" tolineno="120" lineno="120" name="ud"/>
            </Getattr>
            <If fromlineno="122" tolineno="125" lineno="122">
              <Compare fromlineno="122" tolineno="122" lineno="122" op="('==', &lt;Const(int) l.122 [bb.fetch.cvs] at Ox9f6ad8c&gt;)">
                <CallFunc fromlineno="122" tolineno="122" lineno="122" func="Name(len)">
                  <Name fromlineno="122" tolineno="122" lineno="122" name="len"/>
                  <Getattr fromlineno="122" tolineno="122" lineno="122" attrname="date" expr="ud">
                    <Name fromlineno="122" tolineno="122" lineno="122" name="ud"/>
                  </Getattr>
                </CallFunc>
                <Const fromlineno="122" tolineno="122" lineno="122" type="int">12</Const>
              </Compare>
              <Discard fromlineno="123" tolineno="123" lineno="123">
                <CallFunc fromlineno="123" tolineno="123" lineno="123" func="Getattr(append)">
                  <Getattr fromlineno="123" tolineno="123" lineno="123" attrname="append" expr="options">
                    <Name fromlineno="123" tolineno="123" lineno="123" name="options"/>
                  </Getattr>
                  <BinOp fromlineno="123" tolineno="123" lineno="123" op="%" left="'-D &quot;%s %s:%s UTC&quot;'" right="(ud.date[0:8], ud.date[8:10], ud.date[10:12])">
                    <Const fromlineno="123" tolineno="123" lineno="123" type="str">'-D "%s %s:%s UTC"'</Const>
                    <Tuple fromlineno="123" tolineno="123" lineno="123">
                      <Subscript fromlineno="123" tolineno="123" lineno="123">
                        <Getattr fromlineno="123" tolineno="123" lineno="123" attrname="date" expr="ud">
                          <Name fromlineno="123" tolineno="123" lineno="123" name="ud"/>
                        </Getattr>
                        <Slice fromlineno="123" tolineno="123" lineno="None">
                          <Const fromlineno="123" tolineno="123" lineno="123" type="int">0</Const>
                          <Const fromlineno="123" tolineno="123" lineno="123" type="int">8</Const>
                        </Slice>
                      </Subscript>
                      <Subscript fromlineno="123" tolineno="123" lineno="123">
                        <Getattr fromlineno="123" tolineno="123" lineno="123" attrname="date" expr="ud">
                          <Name fromlineno="123" tolineno="123" lineno="123" name="ud"/>
                        </Getattr>
                        <Slice fromlineno="123" tolineno="123" lineno="None">
                          <Const fromlineno="123" tolineno="123" lineno="123" type="int">8</Const>
                          <Const fromlineno="123" tolineno="123" lineno="123" type="int">10</Const>
                        </Slice>
                      </Subscript>
                      <Subscript fromlineno="123" tolineno="123" lineno="123">
                        <Getattr fromlineno="123" tolineno="123" lineno="123" attrname="date" expr="ud">
                          <Name fromlineno="123" tolineno="123" lineno="123" name="ud"/>
                        </Getattr>
                        <Slice fromlineno="123" tolineno="123" lineno="None">
                          <Const fromlineno="123" tolineno="123" lineno="123" type="int">10</Const>
                          <Const fromlineno="123" tolineno="123" lineno="123" type="int">12</Const>
                        </Slice>
                      </Subscript>
                    </Tuple>
                  </BinOp>
                </CallFunc>
              </Discard>
              <Discard fromlineno="125" tolineno="125" lineno="125">
                <CallFunc fromlineno="125" tolineno="125" lineno="125" func="Getattr(append)">
                  <Getattr fromlineno="125" tolineno="125" lineno="125" attrname="append" expr="options">
                    <Name fromlineno="125" tolineno="125" lineno="125" name="options"/>
                  </Getattr>
                  <BinOp fromlineno="125" tolineno="125" lineno="125" op="%" left="'-D &quot;%s UTC&quot;'" right="ud.date">
                    <Const fromlineno="125" tolineno="125" lineno="125" type="str">'-D "%s UTC"'</Const>
                    <Getattr fromlineno="125" tolineno="125" lineno="125" attrname="date" expr="ud">
                      <Name fromlineno="125" tolineno="125" lineno="125" name="ud"/>
                    </Getattr>
                  </BinOp>
                </CallFunc>
              </Discard>
            </If>
          </If>
          <If fromlineno="126" tolineno="127" lineno="126">
            <Getattr fromlineno="126" tolineno="126" lineno="126" attrname="tag" expr="ud">
              <Name fromlineno="126" tolineno="126" lineno="126" name="ud"/>
            </Getattr>
            <Discard fromlineno="127" tolineno="127" lineno="127">
              <CallFunc fromlineno="127" tolineno="127" lineno="127" func="Getattr(append)">
                <Getattr fromlineno="127" tolineno="127" lineno="127" attrname="append" expr="options">
                  <Name fromlineno="127" tolineno="127" lineno="127" name="options"/>
                </Getattr>
                <BinOp fromlineno="127" tolineno="127" lineno="127" op="%" left="'-r %s'" right="ud.tag">
                  <Const fromlineno="127" tolineno="127" lineno="127" type="str">'-r %s'</Const>
                  <Getattr fromlineno="127" tolineno="127" lineno="127" attrname="tag" expr="ud">
                    <Name fromlineno="127" tolineno="127" lineno="127" name="ud"/>
                  </Getattr>
                </BinOp>
              </CallFunc>
            </Discard>
          </If>
          <Assign fromlineno="129" tolineno="129" lineno="129" targets="[&lt;AssName(localdata) l.129 [bb.fetch.cvs] at Ox9f7046c&gt;]" value="data.createCopy(d)">
            <AssName fromlineno="129" tolineno="129" lineno="129" name="localdata"/>
            <CallFunc fromlineno="129" tolineno="129" lineno="129" func="Getattr(createCopy)">
              <Getattr fromlineno="129" tolineno="129" lineno="129" attrname="createCopy" expr="data">
                <Name fromlineno="129" tolineno="129" lineno="129" name="data"/>
              </Getattr>
              <Name fromlineno="129" tolineno="129" lineno="129" name="d"/>
            </CallFunc>
          </Assign>
          <Discard fromlineno="130" tolineno="130" lineno="130">
            <CallFunc fromlineno="130" tolineno="130" lineno="130" func="Getattr(setVar)">
              <Getattr fromlineno="130" tolineno="130" lineno="130" attrname="setVar" expr="data">
                <Name fromlineno="130" tolineno="130" lineno="130" name="data"/>
              </Getattr>
              <Const fromlineno="130" tolineno="130" lineno="130" type="str">'OVERRIDES'</Const>
              <BinOp fromlineno="130" tolineno="130" lineno="130" op="%" left="'cvs:%s'" right="data.getVar('OVERRIDES', localdata)">
                <Const fromlineno="130" tolineno="130" lineno="130" type="str">'cvs:%s'</Const>
                <CallFunc fromlineno="130" tolineno="130" lineno="130" func="Getattr(getVar)">
                  <Getattr fromlineno="130" tolineno="130" lineno="130" attrname="getVar" expr="data">
                    <Name fromlineno="130" tolineno="130" lineno="130" name="data"/>
                  </Getattr>
                  <Const fromlineno="130" tolineno="130" lineno="130" type="str">'OVERRIDES'</Const>
                  <Name fromlineno="130" tolineno="130" lineno="130" name="localdata"/>
                </CallFunc>
              </BinOp>
              <Name fromlineno="130" tolineno="130" lineno="130" name="localdata"/>
            </CallFunc>
          </Discard>
          <Discard fromlineno="131" tolineno="131" lineno="131">
            <CallFunc fromlineno="131" tolineno="131" lineno="131" func="Getattr(update_data)">
              <Getattr fromlineno="131" tolineno="131" lineno="131" attrname="update_data" expr="data">
                <Name fromlineno="131" tolineno="131" lineno="131" name="data"/>
              </Getattr>
              <Name fromlineno="131" tolineno="131" lineno="131" name="localdata"/>
            </CallFunc>
          </Discard>
          <Discard fromlineno="133" tolineno="133" lineno="133">
            <CallFunc fromlineno="133" tolineno="133" lineno="133" func="Getattr(setVar)">
              <Getattr fromlineno="133" tolineno="133" lineno="133" attrname="setVar" expr="data">
                <Name fromlineno="133" tolineno="133" lineno="133" name="data"/>
              </Getattr>
              <Const fromlineno="133" tolineno="133" lineno="133" type="str">'CVSROOT'</Const>
              <Name fromlineno="133" tolineno="133" lineno="133" name="cvsroot"/>
              <Name fromlineno="133" tolineno="133" lineno="133" name="localdata"/>
            </CallFunc>
          </Discard>
          <Discard fromlineno="134" tolineno="134" lineno="134">
            <CallFunc fromlineno="134" tolineno="134" lineno="134" func="Getattr(setVar)">
              <Getattr fromlineno="134" tolineno="134" lineno="134" attrname="setVar" expr="data">
                <Name fromlineno="134" tolineno="134" lineno="134" name="data"/>
              </Getattr>
              <Const fromlineno="134" tolineno="134" lineno="134" type="str">'CVSCOOPTS'</Const>
              <CallFunc fromlineno="134" tolineno="134" lineno="134" func="Getattr(join)">
                <Getattr fromlineno="134" tolineno="134" lineno="134" attrname="join" expr="' '">
                  <Const fromlineno="134" tolineno="134" lineno="134" type="str">' '</Const>
                </Getattr>
                <Name fromlineno="134" tolineno="134" lineno="134" name="options"/>
              </CallFunc>
              <Name fromlineno="134" tolineno="134" lineno="134" name="localdata"/>
            </CallFunc>
          </Discard>
          <Discard fromlineno="135" tolineno="135" lineno="135">
            <CallFunc fromlineno="135" tolineno="135" lineno="135" func="Getattr(setVar)">
              <Getattr fromlineno="135" tolineno="135" lineno="135" attrname="setVar" expr="data">
                <Name fromlineno="135" tolineno="135" lineno="135" name="data"/>
              </Getattr>
              <Const fromlineno="135" tolineno="135" lineno="135" type="str">'CVSMODULE'</Const>
              <Getattr fromlineno="135" tolineno="135" lineno="135" attrname="module" expr="ud">
                <Name fromlineno="135" tolineno="135" lineno="135" name="ud"/>
              </Getattr>
              <Name fromlineno="135" tolineno="135" lineno="135" name="localdata"/>
            </CallFunc>
          </Discard>
          <Assign fromlineno="136" tolineno="136" lineno="136" targets="[&lt;AssName(cvscmd) l.136 [bb.fetch.cvs] at Ox9f70bcc&gt;]" value="data.getVar('FETCHCOMMAND', localdata, 1)">
            <AssName fromlineno="136" tolineno="136" lineno="136" name="cvscmd"/>
            <CallFunc fromlineno="136" tolineno="136" lineno="136" func="Getattr(getVar)">
              <Getattr fromlineno="136" tolineno="136" lineno="136" attrname="getVar" expr="data">
                <Name fromlineno="136" tolineno="136" lineno="136" name="data"/>
              </Getattr>
              <Const fromlineno="136" tolineno="136" lineno="136" type="str">'FETCHCOMMAND'</Const>
              <Name fromlineno="136" tolineno="136" lineno="136" name="localdata"/>
              <Const fromlineno="136" tolineno="136" lineno="136" type="int">1</Const>
            </CallFunc>
          </Assign>
          <Assign fromlineno="137" tolineno="137" lineno="137" targets="[&lt;AssName(cvsupdatecmd) l.137 [bb.fetch.cvs] at Ox9f70d2c&gt;]" value="data.getVar('UPDATECOMMAND', localdata, 1)">
            <AssName fromlineno="137" tolineno="137" lineno="137" name="cvsupdatecmd"/>
            <CallFunc fromlineno="137" tolineno="137" lineno="137" func="Getattr(getVar)">
              <Getattr fromlineno="137" tolineno="137" lineno="137" attrname="getVar" expr="data">
                <Name fromlineno="137" tolineno="137" lineno="137" name="data"/>
              </Getattr>
              <Const fromlineno="137" tolineno="137" lineno="137" type="str">'UPDATECOMMAND'</Const>
              <Name fromlineno="137" tolineno="137" lineno="137" name="localdata"/>
              <Const fromlineno="137" tolineno="137" lineno="137" type="int">1</Const>
            </CallFunc>
          </Assign>
          <If fromlineno="139" tolineno="141" lineno="139">
            <Name fromlineno="139" tolineno="139" lineno="139" name="cvs_rsh"/>
            <Assign fromlineno="140" tolineno="140" lineno="140" targets="[&lt;AssName(cvscmd) l.140 [bb.fetch.cvs] at Ox9f70f0c&gt;]" value="('CVS_RSH=&quot;%s&quot; %s') % ((cvs_rsh, cvscmd))">
              <AssName fromlineno="140" tolineno="140" lineno="140" name="cvscmd"/>
              <BinOp fromlineno="140" tolineno="140" lineno="140" op="%" left="'CVS_RSH=&quot;%s&quot; %s'" right="(cvs_rsh, cvscmd)">
                <Const fromlineno="140" tolineno="140" lineno="140" type="str">'CVS_RSH="%s" %s'</Const>
                <Tuple fromlineno="140" tolineno="140" lineno="140">
                  <Name fromlineno="140" tolineno="140" lineno="140" name="cvs_rsh"/>
                  <Name fromlineno="140" tolineno="140" lineno="140" name="cvscmd"/>
                </Tuple>
              </BinOp>
            </Assign>
            <Assign fromlineno="141" tolineno="141" lineno="141" targets="[&lt;AssName(cvsupdatecmd) l.141 [bb.fetch.cvs] at Ox9f7404c&gt;]" value="('CVS_RSH=&quot;%s&quot; %s') % ((cvs_rsh, cvsupdatecmd))">
              <AssName fromlineno="141" tolineno="141" lineno="141" name="cvsupdatecmd"/>
              <BinOp fromlineno="141" tolineno="141" lineno="141" op="%" left="'CVS_RSH=&quot;%s&quot; %s'" right="(cvs_rsh, cvsupdatecmd)">
                <Const fromlineno="141" tolineno="141" lineno="141" type="str">'CVS_RSH="%s" %s'</Const>
                <Tuple fromlineno="141" tolineno="141" lineno="141">
                  <Name fromlineno="141" tolineno="141" lineno="141" name="cvs_rsh"/>
                  <Name fromlineno="141" tolineno="141" lineno="141" name="cvsupdatecmd"/>
                </Tuple>
              </BinOp>
            </Assign>
          </If>
          <Discard fromlineno="144" tolineno="144" lineno="144">
            <CallFunc fromlineno="144" tolineno="144" lineno="144" func="Getattr(debug)">
              <Getattr fromlineno="144" tolineno="144" lineno="144" attrname="debug" expr="bb.msg">
                <Getattr fromlineno="144" tolineno="144" lineno="144" attrname="msg" expr="bb">
                  <Name fromlineno="144" tolineno="144" lineno="144" name="bb"/>
                </Getattr>
              </Getattr>
              <Const fromlineno="144" tolineno="144" lineno="144" type="int">2</Const>
              <Getattr fromlineno="144" tolineno="144" lineno="144" attrname="Fetcher" expr="bb.msg.domain">
                <Getattr fromlineno="144" tolineno="144" lineno="144" attrname="domain" expr="bb.msg">
                  <Getattr fromlineno="144" tolineno="144" lineno="144" attrname="msg" expr="bb">
                    <Name fromlineno="144" tolineno="144" lineno="144" name="bb"/>
                  </Getattr>
                </Getattr>
              </Getattr>
              <Const fromlineno="144" tolineno="144" lineno="144" type="str">'Fetch: checking for module directory'</Const>
            </CallFunc>
          </Discard>
          <Assign fromlineno="145" tolineno="145" lineno="145" targets="[&lt;AssName(pkg) l.145 [bb.fetch.cvs] at Ox9f742ec&gt;]" value="data.expand('${PN}', d)">
            <AssName fromlineno="145" tolineno="145" lineno="145" name="pkg"/>
            <CallFunc fromlineno="145" tolineno="145" lineno="145" func="Getattr(expand)">
              <Getattr fromlineno="145" tolineno="145" lineno="145" attrname="expand" expr="data">
                <Name fromlineno="145" tolineno="145" lineno="145" name="data"/>
              </Getattr>
              <Const fromlineno="145" tolineno="145" lineno="145" type="str">'${PN}'</Const>
              <Name fromlineno="145" tolineno="145" lineno="145" name="d"/>
            </CallFunc>
          </Assign>
          <Assign fromlineno="146" tolineno="146" lineno="146" targets="[&lt;AssName(pkgdir) l.146 [bb.fetch.cvs] at Ox9f7442c&gt;]" value="os.path.join(data.expand('${CVSDIR}', localdata), pkg)">
            <AssName fromlineno="146" tolineno="146" lineno="146" name="pkgdir"/>
            <CallFunc fromlineno="146" tolineno="146" lineno="146" func="Getattr(join)">
              <Getattr fromlineno="146" tolineno="146" lineno="146" attrname="join" expr="os.path">
                <Getattr fromlineno="146" tolineno="146" lineno="146" attrname="path" expr="os">
                  <Name fromlineno="146" tolineno="146" lineno="146" name="os"/>
                </Getattr>
              </Getattr>
              <CallFunc fromlineno="146" tolineno="146" lineno="146" func="Getattr(expand)">
                <Getattr fromlineno="146" tolineno="146" lineno="146" attrname="expand" expr="data">
                  <Name fromlineno="146" tolineno="146" lineno="146" name="data"/>
                </Getattr>
                <Const fromlineno="146" tolineno="146" lineno="146" type="str">'${CVSDIR}'</Const>
                <Name fromlineno="146" tolineno="146" lineno="146" name="localdata"/>
              </CallFunc>
              <Name fromlineno="146" tolineno="146" lineno="146" name="pkg"/>
            </CallFunc>
          </Assign>
          <Assign fromlineno="147" tolineno="147" lineno="147" targets="[&lt;AssName(moddir) l.147 [bb.fetch.cvs] at Ox9f7462c&gt;]" value="os.path.join(pkgdir, localdir)">
            <AssName fromlineno="147" tolineno="147" lineno="147" name="moddir"/>
            <CallFunc fromlineno="147" tolineno="147" lineno="147" func="Getattr(join)">
              <Getattr fromlineno="147" tolineno="147" lineno="147" attrname="join" expr="os.path">
                <Getattr fromlineno="147" tolineno="147" lineno="147" attrname="path" expr="os">
                  <Name fromlineno="147" tolineno="147" lineno="147" name="os"/>
                </Getattr>
              </Getattr>
              <Name fromlineno="147" tolineno="147" lineno="147" name="pkgdir"/>
              <Name fromlineno="147" tolineno="147" lineno="147" name="localdir"/>
            </CallFunc>
          </Assign>
          <If fromlineno="148" tolineno="159" lineno="148">
            <CallFunc fromlineno="148" tolineno="148" lineno="148" func="Getattr(access)">
              <Getattr fromlineno="148" tolineno="148" lineno="148" attrname="access" expr="os">
                <Name fromlineno="148" tolineno="148" lineno="148" name="os"/>
              </Getattr>
              <CallFunc fromlineno="148" tolineno="148" lineno="148" func="Getattr(join)">
                <Getattr fromlineno="148" tolineno="148" lineno="148" attrname="join" expr="os.path">
                  <Getattr fromlineno="148" tolineno="148" lineno="148" attrname="path" expr="os">
                    <Name fromlineno="148" tolineno="148" lineno="148" name="os"/>
                  </Getattr>
                </Getattr>
                <Name fromlineno="148" tolineno="148" lineno="148" name="moddir"/>
                <Const fromlineno="148" tolineno="148" lineno="148" type="str">'CVS'</Const>
              </CallFunc>
              <Getattr fromlineno="148" tolineno="148" lineno="148" attrname="R_OK" expr="os">
                <Name fromlineno="148" tolineno="148" lineno="148" name="os"/>
              </Getattr>
            </CallFunc>
            <Discard fromlineno="149" tolineno="149" lineno="149">
              <CallFunc fromlineno="149" tolineno="149" lineno="149" func="Getattr(note)">
                <Getattr fromlineno="149" tolineno="149" lineno="149" attrname="note" expr="bb.msg">
                  <Getattr fromlineno="149" tolineno="149" lineno="149" attrname="msg" expr="bb">
                    <Name fromlineno="149" tolineno="149" lineno="149" name="bb"/>
                  </Getattr>
                </Getattr>
                <Const fromlineno="149" tolineno="149" lineno="149" type="int">1</Const>
                <Getattr fromlineno="149" tolineno="149" lineno="149" attrname="Fetcher" expr="bb.msg.domain">
                  <Getattr fromlineno="149" tolineno="149" lineno="149" attrname="domain" expr="bb.msg">
                    <Getattr fromlineno="149" tolineno="149" lineno="149" attrname="msg" expr="bb">
                      <Name fromlineno="149" tolineno="149" lineno="149" name="bb"/>
                    </Getattr>
                  </Getattr>
                </Getattr>
                <BinOp fromlineno="149" tolineno="149" lineno="149" op="+" left="'Update '" right="loc">
                  <Const fromlineno="149" tolineno="149" lineno="149" type="str">'Update '</Const>
                  <Name fromlineno="149" tolineno="149" lineno="149" name="loc"/>
                </BinOp>
              </CallFunc>
            </Discard>
            <Discard fromlineno="151" tolineno="151" lineno="151">
              <CallFunc fromlineno="151" tolineno="151" lineno="151" func="Getattr(chdir)">
                <Getattr fromlineno="151" tolineno="151" lineno="151" attrname="chdir" expr="os">
                  <Name fromlineno="151" tolineno="151" lineno="151" name="os"/>
                </Getattr>
                <Name fromlineno="151" tolineno="151" lineno="151" name="moddir"/>
              </CallFunc>
            </Discard>
            <Assign fromlineno="152" tolineno="152" lineno="152" targets="[&lt;AssName(myret) l.152 [bb.fetch.cvs] at Ox9f74c0c&gt;]" value="os.system(cvsupdatecmd)">
              <AssName fromlineno="152" tolineno="152" lineno="152" name="myret"/>
              <CallFunc fromlineno="152" tolineno="152" lineno="152" func="Getattr(system)">
                <Getattr fromlineno="152" tolineno="152" lineno="152" attrname="system" expr="os">
                  <Name fromlineno="152" tolineno="152" lineno="152" name="os"/>
                </Getattr>
                <Name fromlineno="152" tolineno="152" lineno="152" name="cvsupdatecmd"/>
              </CallFunc>
            </Assign>
            <Discard fromlineno="154" tolineno="154" lineno="154">
              <CallFunc fromlineno="154" tolineno="154" lineno="154" func="Getattr(note)">
                <Getattr fromlineno="154" tolineno="154" lineno="154" attrname="note" expr="bb.msg">
                  <Getattr fromlineno="154" tolineno="154" lineno="154" attrname="msg" expr="bb">
                    <Name fromlineno="154" tolineno="154" lineno="154" name="bb"/>
                  </Getattr>
                </Getattr>
                <Const fromlineno="154" tolineno="154" lineno="154" type="int">1</Const>
                <Getattr fromlineno="154" tolineno="154" lineno="154" attrname="Fetcher" expr="bb.msg.domain">
                  <Getattr fromlineno="154" tolineno="154" lineno="154" attrname="domain" expr="bb.msg">
                    <Getattr fromlineno="154" tolineno="154" lineno="154" attrname="msg" expr="bb">
                      <Name fromlineno="154" tolineno="154" lineno="154" name="bb"/>
                    </Getattr>
                  </Getattr>
                </Getattr>
                <BinOp fromlineno="154" tolineno="154" lineno="154" op="+" left="'Fetch '" right="loc">
                  <Const fromlineno="154" tolineno="154" lineno="154" type="str">'Fetch '</Const>
                  <Name fromlineno="154" tolineno="154" lineno="154" name="loc"/>
                </BinOp>
              </CallFunc>
            </Discard>
            <Discard fromlineno="156" tolineno="156" lineno="156">
              <CallFunc fromlineno="156" tolineno="156" lineno="156" func="Getattr(mkdirhier)">
                <Getattr fromlineno="156" tolineno="156" lineno="156" attrname="mkdirhier" expr="bb">
                  <Name fromlineno="156" tolineno="156" lineno="156" name="bb"/>
                </Getattr>
                <Name fromlineno="156" tolineno="156" lineno="156" name="pkgdir"/>
              </CallFunc>
            </Discard>
            <Discard fromlineno="157" tolineno="157" lineno="157">
              <CallFunc fromlineno="157" tolineno="157" lineno="157" func="Getattr(chdir)">
                <Getattr fromlineno="157" tolineno="157" lineno="157" attrname="chdir" expr="os">
                  <Name fromlineno="157" tolineno="157" lineno="157" name="os"/>
                </Getattr>
                <Name fromlineno="157" tolineno="157" lineno="157" name="pkgdir"/>
              </CallFunc>
            </Discard>
            <Discard fromlineno="158" tolineno="158" lineno="158">
              <CallFunc fromlineno="158" tolineno="158" lineno="158" func="Getattr(debug)">
                <Getattr fromlineno="158" tolineno="158" lineno="158" attrname="debug" expr="bb.msg">
                  <Getattr fromlineno="158" tolineno="158" lineno="158" attrname="msg" expr="bb">
                    <Name fromlineno="158" tolineno="158" lineno="158" name="bb"/>
                  </Getattr>
                </Getattr>
                <Const fromlineno="158" tolineno="158" lineno="158" type="int">1</Const>
                <Getattr fromlineno="158" tolineno="158" lineno="158" attrname="Fetcher" expr="bb.msg.domain">
                  <Getattr fromlineno="158" tolineno="158" lineno="158" attrname="domain" expr="bb.msg">
                    <Getattr fromlineno="158" tolineno="158" lineno="158" attrname="msg" expr="bb">
                      <Name fromlineno="158" tolineno="158" lineno="158" name="bb"/>
                    </Getattr>
                  </Getattr>
                </Getattr>
                <BinOp fromlineno="158" tolineno="158" lineno="158" op="%" left="'Running %s'" right="cvscmd">
                  <Const fromlineno="158" tolineno="158" lineno="158" type="str">'Running %s'</Const>
                  <Name fromlineno="158" tolineno="158" lineno="158" name="cvscmd"/>
                </BinOp>
              </CallFunc>
            </Discard>
            <Assign fromlineno="159" tolineno="159" lineno="159" targets="[&lt;AssName(myret) l.159 [bb.fetch.cvs] at Ox9f7926c&gt;]" value="os.system(cvscmd)">
              <AssName fromlineno="159" tolineno="159" lineno="159" name="myret"/>
              <CallFunc fromlineno="159" tolineno="159" lineno="159" func="Getattr(system)">
                <Getattr fromlineno="159" tolineno="159" lineno="159" attrname="system" expr="os">
                  <Name fromlineno="159" tolineno="159" lineno="159" name="os"/>
                </Getattr>
                <Name fromlineno="159" tolineno="159" lineno="159" name="cvscmd"/>
              </CallFunc>
            </Assign>
          </If>
          <If fromlineno="161" tolineno="166" lineno="161">
            <BoolOp fromlineno="161" tolineno="161" lineno="161" op="or" values="myret != 0,not os.access(moddir, os.R_OK),">
              <Compare fromlineno="161" tolineno="161" lineno="161" op="('!=', &lt;Const(int) l.161 [bb.fetch.cvs] at Ox9f7940c&gt;)">
                <Name fromlineno="161" tolineno="161" lineno="161" name="myret"/>
                <Const fromlineno="161" tolineno="161" lineno="161" type="int">0</Const>
              </Compare>
              <UnaryOp fromlineno="161" tolineno="161" lineno="161">
                <CallFunc fromlineno="161" tolineno="161" lineno="161" func="Getattr(access)">
                  <Getattr fromlineno="161" tolineno="161" lineno="161" attrname="access" expr="os">
                    <Name fromlineno="161" tolineno="161" lineno="161" name="os"/>
                  </Getattr>
                  <Name fromlineno="161" tolineno="161" lineno="161" name="moddir"/>
                  <Getattr fromlineno="161" tolineno="161" lineno="161" attrname="R_OK" expr="os">
                    <Name fromlineno="161" tolineno="161" lineno="161" name="os"/>
                  </Getattr>
                </CallFunc>
              </UnaryOp>
            </BoolOp>
            <TryExcept fromlineno="162" tolineno="165" lineno="162">
              <Discard fromlineno="163" tolineno="163" lineno="163">
                <CallFunc fromlineno="163" tolineno="163" lineno="163" func="Getattr(rmdir)">
                  <Getattr fromlineno="163" tolineno="163" lineno="163" attrname="rmdir" expr="os">
                    <Name fromlineno="163" tolineno="163" lineno="163" name="os"/>
                  </Getattr>
                  <Name fromlineno="163" tolineno="163" lineno="163" name="moddir"/>
                </CallFunc>
              </Discard>
              <ExceptHandler fromlineno="164" tolineno="165" lineno="164">
                <Name fromlineno="164" tolineno="164" lineno="164" name="OSError"/>
                <Pass fromlineno="165" tolineno="165" lineno="165"/>
              </ExceptHandler>
            </TryExcept>
            <Raise fromlineno="166" tolineno="166" lineno="166">
              <CallFunc fromlineno="166" tolineno="166" lineno="166" func="Name(FetchError)">
                <Name fromlineno="166" tolineno="166" lineno="166" name="FetchError"/>
                <Getattr fromlineno="166" tolineno="166" lineno="166" attrname="module" expr="ud">
                  <Name fromlineno="166" tolineno="166" lineno="166" name="ud"/>
                </Getattr>
              </CallFunc>
            </Raise>
          </If>
          <If fromlineno="169" tolineno="175" lineno="169">
            <Compare fromlineno="169" tolineno="169" lineno="169" op="('in', &lt;Getattr(parm) l.169 [bb.fetch.cvs] at Ox9f7986c&gt;)">
              <Const fromlineno="169" tolineno="169" lineno="169" type="str">'fullpath'</Const>
              <Getattr fromlineno="169" tolineno="169" lineno="169" attrname="parm" expr="ud">
                <Name fromlineno="169" tolineno="169" lineno="169" name="ud"/>
              </Getattr>
            </Compare>
            <Discard fromlineno="170" tolineno="170" lineno="170">
              <CallFunc fromlineno="170" tolineno="170" lineno="170" func="Getattr(chdir)">
                <Getattr fromlineno="170" tolineno="170" lineno="170" attrname="chdir" expr="os">
                  <Name fromlineno="170" tolineno="170" lineno="170" name="os"/>
                </Getattr>
                <Name fromlineno="170" tolineno="170" lineno="170" name="pkgdir"/>
              </CallFunc>
            </Discard>
            <Assign fromlineno="171" tolineno="171" lineno="171" targets="[&lt;AssName(myret) l.171 [bb.fetch.cvs] at Ox9f799ec&gt;]" value="os.system(('tar -czf %s %s') % ((ud.localpath, localdir)))">
              <AssName fromlineno="171" tolineno="171" lineno="171" name="myret"/>
              <CallFunc fromlineno="171" tolineno="171" lineno="171" func="Getattr(system)">
                <Getattr fromlineno="171" tolineno="171" lineno="171" attrname="system" expr="os">
                  <Name fromlineno="171" tolineno="171" lineno="171" name="os"/>
                </Getattr>
                <BinOp fromlineno="171" tolineno="171" lineno="171" op="%" left="'tar -czf %s %s'" right="(ud.localpath, localdir)">
                  <Const fromlineno="171" tolineno="171" lineno="171" type="str">'tar -czf %s %s'</Const>
                  <Tuple fromlineno="171" tolineno="171" lineno="171">
                    <Getattr fromlineno="171" tolineno="171" lineno="171" attrname="localpath" expr="ud">
                      <Name fromlineno="171" tolineno="171" lineno="171" name="ud"/>
                    </Getattr>
                    <Name fromlineno="171" tolineno="171" lineno="171" name="localdir"/>
                  </Tuple>
                </BinOp>
              </CallFunc>
            </Assign>
            <Discard fromlineno="173" tolineno="173" lineno="173">
              <CallFunc fromlineno="173" tolineno="173" lineno="173" func="Getattr(chdir)">
                <Getattr fromlineno="173" tolineno="173" lineno="173" attrname="chdir" expr="os">
                  <Name fromlineno="173" tolineno="173" lineno="173" name="os"/>
                </Getattr>
                <Name fromlineno="173" tolineno="173" lineno="173" name="moddir"/>
              </CallFunc>
            </Discard>
            <Discard fromlineno="174" tolineno="174" lineno="174">
              <CallFunc fromlineno="174" tolineno="174" lineno="174" func="Getattr(chdir)">
                <Getattr fromlineno="174" tolineno="174" lineno="174" attrname="chdir" expr="os">
                  <Name fromlineno="174" tolineno="174" lineno="174" name="os"/>
                </Getattr>
                <Const fromlineno="174" tolineno="174" lineno="174" type="str">'..'</Const>
              </CallFunc>
            </Discard>
            <Assign fromlineno="175" tolineno="175" lineno="175" targets="[&lt;AssName(myret) l.175 [bb.fetch.cvs] at Ox9f79d4c&gt;]" value="os.system(('tar -czf %s %s') % ((ud.localpath, os.path.basename(moddir))))">
              <AssName fromlineno="175" tolineno="175" lineno="175" name="myret"/>
              <CallFunc fromlineno="175" tolineno="175" lineno="175" func="Getattr(system)">
                <Getattr fromlineno="175" tolineno="175" lineno="175" attrname="system" expr="os">
                  <Name fromlineno="175" tolineno="175" lineno="175" name="os"/>
                </Getattr>
                <BinOp fromlineno="175" tolineno="175" lineno="175" op="%" left="'tar -czf %s %s'" right="(ud.localpath, os.path.basename(moddir))">
                  <Const fromlineno="175" tolineno="175" lineno="175" type="str">'tar -czf %s %s'</Const>
                  <Tuple fromlineno="175" tolineno="175" lineno="175">
                    <Getattr fromlineno="175" tolineno="175" lineno="175" attrname="localpath" expr="ud">
                      <Name fromlineno="175" tolineno="175" lineno="175" name="ud"/>
                    </Getattr>
                    <CallFunc fromlineno="175" tolineno="175" lineno="175" func="Getattr(basename)">
                      <Getattr fromlineno="175" tolineno="175" lineno="175" attrname="basename" expr="os.path">
                        <Getattr fromlineno="175" tolineno="175" lineno="175" attrname="path" expr="os">
                          <Name fromlineno="175" tolineno="175" lineno="175" name="os"/>
                        </Getattr>
                      </Getattr>
                      <Name fromlineno="175" tolineno="175" lineno="175" name="moddir"/>
                    </CallFunc>
                  </Tuple>
                </BinOp>
              </CallFunc>
            </Assign>
          </If>
          <If fromlineno="177" tolineno="182" lineno="177">
            <Compare fromlineno="177" tolineno="177" lineno="177" op="('!=', &lt;Const(int) l.177 [bb.fetch.cvs] at Ox9f79fec&gt;)">
              <Name fromlineno="177" tolineno="177" lineno="177" name="myret"/>
              <Const fromlineno="177" tolineno="177" lineno="177" type="int">0</Const>
            </Compare>
            <TryExcept fromlineno="178" tolineno="181" lineno="178">
              <Discard fromlineno="179" tolineno="179" lineno="179">
                <CallFunc fromlineno="179" tolineno="179" lineno="179" func="Getattr(unlink)">
                  <Getattr fromlineno="179" tolineno="179" lineno="179" attrname="unlink" expr="os">
                    <Name fromlineno="179" tolineno="179" lineno="179" name="os"/>
                  </Getattr>
                  <Getattr fromlineno="179" tolineno="179" lineno="179" attrname="localpath" expr="ud">
                    <Name fromlineno="179" tolineno="179" lineno="179" name="ud"/>
                  </Getattr>
                </CallFunc>
              </Discard>
              <ExceptHandler fromlineno="180" tolineno="181" lineno="180">
                <Name fromlineno="180" tolineno="180" lineno="180" name="OSError"/>
                <Pass fromlineno="181" tolineno="181" lineno="181"/>
              </ExceptHandler>
            </TryExcept>
            <Raise fromlineno="182" tolineno="182" lineno="182">
              <CallFunc fromlineno="182" tolineno="182" lineno="182" func="Name(FetchError)">
                <Name fromlineno="182" tolineno="182" lineno="182" name="FetchError"/>
                <Getattr fromlineno="182" tolineno="182" lineno="182" attrname="module" expr="ud">
                  <Name fromlineno="182" tolineno="182" lineno="182" name="ud"/>
                </Getattr>
              </CallFunc>
            </Raise>
          </If>
        </Function>
      </Class>
    </Module>
    <Module fromlineno="0" tolineno="153" lineno="0" name="bb.fetch.bzr">
      <Import fromlineno="26" tolineno="26" lineno="26">
        <ImportName name="os"/>
      </Import>
      <Import fromlineno="27" tolineno="27" lineno="27">
        <ImportName name="sys"/>
      </Import>
      <Import fromlineno="28" tolineno="28" lineno="28">
        <ImportName name="bb"/>
      </Import>
      <From fromlineno="29" tolineno="29" lineno="29" modname="bb">
        <ImportName name="data"/>
      </From>
      <From fromlineno="30" tolineno="30" lineno="30" modname="bb.fetch">
        <ImportName name="Fetch"/>
      </From>
      <From fromlineno="31" tolineno="31" lineno="31" modname="bb.fetch">
        <ImportName name="FetchError"/>
      </From>
      <From fromlineno="32" tolineno="32" lineno="32" modname="bb.fetch">
        <ImportName name="MissingParameterError"/>
      </From>
      <From fromlineno="33" tolineno="33" lineno="33" modname="bb.fetch">
        <ImportName name="runfetchcmd"/>
      </From>
      <Class fromlineno="35" tolineno="153" lineno="35">
        <Name fromlineno="35" tolineno="35" lineno="35" name="Fetch"/>
        <Function fromlineno="36" tolineno="37" lineno="36">
          <Arguments fromlineno="36" tolineno="36" lineno="None" format_args="self, url, ud, d">
            <AssName fromlineno="36" tolineno="36" lineno="36" name="self"/>
            <AssName fromlineno="36" tolineno="36" lineno="36" name="url"/>
            <AssName fromlineno="36" tolineno="36" lineno="36" name="ud"/>
            <AssName fromlineno="36" tolineno="36" lineno="36" name="d"/>
          </Arguments>
          <Return fromlineno="37" tolineno="37" lineno="37">
            <Compare fromlineno="37" tolineno="37" lineno="37" op="('in', &lt;List(list) l.37 [bb.fetch.bzr] at Ox9f566cc&gt;)">
              <Getattr fromlineno="37" tolineno="37" lineno="37" attrname="type" expr="ud">
                <Name fromlineno="37" tolineno="37" lineno="37" name="ud"/>
              </Getattr>
              <List fromlineno="37" tolineno="37" lineno="37">
                <Const fromlineno="37" tolineno="37" lineno="37" type="str">'bzr'</Const>
              </List>
            </Compare>
          </Return>
        </Function>
        <Function fromlineno="39" tolineno="59" lineno="39">
          <Arguments fromlineno="39" tolineno="39" lineno="None" format_args="self, url, ud, d">
            <AssName fromlineno="39" tolineno="39" lineno="39" name="self"/>
            <AssName fromlineno="39" tolineno="39" lineno="39" name="url"/>
            <AssName fromlineno="39" tolineno="39" lineno="39" name="ud"/>
            <AssName fromlineno="39" tolineno="39" lineno="39" name="d"/>
          </Arguments>
          <Assign fromlineno="42" tolineno="42" lineno="42" targets="[&lt;AssName(relpath) l.42 [bb.fetch.bzr] at Ox9f560cc&gt;]" value="ud.path">
            <AssName fromlineno="42" tolineno="42" lineno="42" name="relpath"/>
            <Getattr fromlineno="42" tolineno="42" lineno="42" attrname="path" expr="ud">
              <Name fromlineno="42" tolineno="42" lineno="42" name="ud"/>
            </Getattr>
          </Assign>
          <If fromlineno="43" tolineno="45" lineno="43">
            <CallFunc fromlineno="43" tolineno="43" lineno="43" func="Getattr(startswith)">
              <Getattr fromlineno="43" tolineno="43" lineno="43" attrname="startswith" expr="relpath">
                <Name fromlineno="43" tolineno="43" lineno="43" name="relpath"/>
              </Getattr>
              <Const fromlineno="43" tolineno="43" lineno="43" type="str">'/'</Const>
            </CallFunc>
            <Assign fromlineno="45" tolineno="45" lineno="45" targets="[&lt;AssName(relpath) l.45 [bb.fetch.bzr] at Ox9f56bcc&gt;]" value="relpath[1:]">
              <AssName fromlineno="45" tolineno="45" lineno="45" name="relpath"/>
              <Subscript fromlineno="45" tolineno="45" lineno="45">
                <Name fromlineno="45" tolineno="45" lineno="45" name="relpath"/>
                <Slice fromlineno="45" tolineno="45" lineno="None">
                  <Const fromlineno="45" tolineno="45" lineno="45" type="int">1</Const>
                </Slice>
              </Subscript>
            </Assign>
          </If>
          <Assign fromlineno="46" tolineno="46" lineno="46" targets="[&lt;AssAttr(pkgdir) l.46 [bb.fetch.bzr] at Ox9f56dac&gt;]" value="os.path.join(data.expand('${BZRDIR}', d), ud.host, relpath)">
            <AssAttr fromlineno="46" tolineno="46" lineno="46" attrname="pkgdir" expr="ud">
              <Name fromlineno="46" tolineno="46" lineno="46" name="ud"/>
            </AssAttr>
            <CallFunc fromlineno="46" tolineno="46" lineno="46" func="Getattr(join)">
              <Getattr fromlineno="46" tolineno="46" lineno="46" attrname="join" expr="os.path">
                <Getattr fromlineno="46" tolineno="46" lineno="46" attrname="path" expr="os">
                  <Name fromlineno="46" tolineno="46" lineno="46" name="os"/>
                </Getattr>
              </Getattr>
              <CallFunc fromlineno="46" tolineno="46" lineno="46" func="Getattr(expand)">
                <Getattr fromlineno="46" tolineno="46" lineno="46" attrname="expand" expr="data">
                  <Name fromlineno="46" tolineno="46" lineno="46" name="data"/>
                </Getattr>
                <Const fromlineno="46" tolineno="46" lineno="46" type="str">'${BZRDIR}'</Const>
                <Name fromlineno="46" tolineno="46" lineno="46" name="d"/>
              </CallFunc>
              <Getattr fromlineno="46" tolineno="46" lineno="46" attrname="host" expr="ud">
                <Name fromlineno="46" tolineno="46" lineno="46" name="ud"/>
              </Getattr>
              <Name fromlineno="46" tolineno="46" lineno="46" name="relpath"/>
            </CallFunc>
          </Assign>
          <Assign fromlineno="48" tolineno="48" lineno="48" targets="[&lt;AssName(revision) l.48 [bb.fetch.bzr] at Ox9f56fcc&gt;]" value="Fetch.srcrev_internal_helper(ud, d)">
            <AssName fromlineno="48" tolineno="48" lineno="48" name="revision"/>
            <CallFunc fromlineno="48" tolineno="48" lineno="48" func="Getattr(srcrev_internal_helper)">
              <Getattr fromlineno="48" tolineno="48" lineno="48" attrname="srcrev_internal_helper" expr="Fetch">
                <Name fromlineno="48" tolineno="48" lineno="48" name="Fetch"/>
              </Getattr>
              <Name fromlineno="48" tolineno="48" lineno="48" name="ud"/>
              <Name fromlineno="48" tolineno="48" lineno="48" name="d"/>
            </CallFunc>
          </Assign>
          <If fromlineno="49" tolineno="52" lineno="49">
            <Compare fromlineno="49" tolineno="49" lineno="49" op="('is', &lt;Const(bool) l.49 [bb.fetch.bzr] at Ox9f5a28c&gt;)">
              <Name fromlineno="49" tolineno="49" lineno="49" name="revision"/>
              <Const fromlineno="49" tolineno="49" lineno="49" type="bool">True</Const>
            </Compare>
            <Assign fromlineno="50" tolineno="50" lineno="50" targets="[&lt;AssAttr(revision) l.50 [bb.fetch.bzr] at Ox9f5a36c&gt;]" value="self.latest_revision(url, ud, d)">
              <AssAttr fromlineno="50" tolineno="50" lineno="50" attrname="revision" expr="ud">
                <Name fromlineno="50" tolineno="50" lineno="50" name="ud"/>
              </AssAttr>
              <CallFunc fromlineno="50" tolineno="50" lineno="50" func="Getattr(latest_revision)">
                <Getattr fromlineno="50" tolineno="50" lineno="50" attrname="latest_revision" expr="self">
                  <Name fromlineno="50" tolineno="50" lineno="50" name="self"/>
                </Getattr>
                <Name fromlineno="50" tolineno="50" lineno="50" name="url"/>
                <Name fromlineno="50" tolineno="50" lineno="50" name="ud"/>
                <Name fromlineno="50" tolineno="50" lineno="50" name="d"/>
              </CallFunc>
            </Assign>
            <If fromlineno="51" tolineno="52" lineno="51">
              <Name fromlineno="51" tolineno="51" lineno="51" name="revision"/>
              <Assign fromlineno="52" tolineno="52" lineno="52" targets="[&lt;AssAttr(revision) l.52 [bb.fetch.bzr] at Ox9f5a66c&gt;]" value="revision">
                <AssAttr fromlineno="52" tolineno="52" lineno="52" attrname="revision" expr="ud">
                  <Name fromlineno="52" tolineno="52" lineno="52" name="ud"/>
                </AssAttr>
                <Name fromlineno="52" tolineno="52" lineno="52" name="revision"/>
              </Assign>
            </If>
          </If>
          <If fromlineno="54" tolineno="55" lineno="54">
            <UnaryOp fromlineno="54" tolineno="54" lineno="54">
              <Getattr fromlineno="54" tolineno="54" lineno="54" attrname="revision" expr="ud">
                <Name fromlineno="54" tolineno="54" lineno="54" name="ud"/>
              </Getattr>
            </UnaryOp>
            <Assign fromlineno="55" tolineno="55" lineno="55" targets="[&lt;AssAttr(revision) l.55 [bb.fetch.bzr] at Ox9f5a18c&gt;]" value="self.latest_revision(url, ud, d)">
              <AssAttr fromlineno="55" tolineno="55" lineno="55" attrname="revision" expr="ud">
                <Name fromlineno="55" tolineno="55" lineno="55" name="ud"/>
              </AssAttr>
              <CallFunc fromlineno="55" tolineno="55" lineno="55" func="Getattr(latest_revision)">
                <Getattr fromlineno="55" tolineno="55" lineno="55" attrname="latest_revision" expr="self">
                  <Name fromlineno="55" tolineno="55" lineno="55" name="self"/>
                </Getattr>
                <Name fromlineno="55" tolineno="55" lineno="55" name="url"/>
                <Name fromlineno="55" tolineno="55" lineno="55" name="ud"/>
                <Name fromlineno="55" tolineno="55" lineno="55" name="d"/>
              </CallFunc>
            </Assign>
          </If>
          <Assign fromlineno="57" tolineno="57" lineno="57" targets="[&lt;AssAttr(localfile) l.57 [bb.fetch.bzr] at Ox9f5a80c&gt;]" value="data.expand(('bzr_%s_%s_%s.tar.gz') % ((ud.host, ud.path.replace('/', '.'), ud.revision)), d)">
            <AssAttr fromlineno="57" tolineno="57" lineno="57" attrname="localfile" expr="ud">
              <Name fromlineno="57" tolineno="57" lineno="57" name="ud"/>
            </AssAttr>
            <CallFunc fromlineno="57" tolineno="57" lineno="57" func="Getattr(expand)">
              <Getattr fromlineno="57" tolineno="57" lineno="57" attrname="expand" expr="data">
                <Name fromlineno="57" tolineno="57" lineno="57" name="data"/>
              </Getattr>
              <BinOp fromlineno="57" tolineno="57" lineno="57" op="%" left="'bzr_%s_%s_%s.tar.gz'" right="(ud.host, ud.path.replace('/', '.'), ud.revision)">
                <Const fromlineno="57" tolineno="57" lineno="57" type="str">'bzr_%s_%s_%s.tar.gz'</Const>
                <Tuple fromlineno="57" tolineno="57" lineno="57">
                  <Getattr fromlineno="57" tolineno="57" lineno="57" attrname="host" expr="ud">
                    <Name fromlineno="57" tolineno="57" lineno="57" name="ud"/>
                  </Getattr>
                  <CallFunc fromlineno="57" tolineno="57" lineno="57" func="Getattr(replace)">
                    <Getattr fromlineno="57" tolineno="57" lineno="57" attrname="replace" expr="ud.path">
                      <Getattr fromlineno="57" tolineno="57" lineno="57" attrname="path" expr="ud">
                        <Name fromlineno="57" tolineno="57" lineno="57" name="ud"/>
                      </Getattr>
                    </Getattr>
                    <Const fromlineno="57" tolineno="57" lineno="57" type="str">'/'</Const>
                    <Const fromlineno="57" tolineno="57" lineno="57" type="str">'.'</Const>
                  </CallFunc>
                  <Getattr fromlineno="57" tolineno="57" lineno="57" attrname="revision" expr="ud">
                    <Name fromlineno="57" tolineno="57" lineno="57" name="ud"/>
                  </Getattr>
                </Tuple>
              </BinOp>
              <Name fromlineno="57" tolineno="57" lineno="57" name="d"/>
            </CallFunc>
          </Assign>
          <Return fromlineno="59" tolineno="59" lineno="59">
            <CallFunc fromlineno="59" tolineno="59" lineno="59" func="Getattr(join)">
              <Getattr fromlineno="59" tolineno="59" lineno="59" attrname="join" expr="os.path">
                <Getattr fromlineno="59" tolineno="59" lineno="59" attrname="path" expr="os">
                  <Name fromlineno="59" tolineno="59" lineno="59" name="os"/>
                </Getattr>
              </Getattr>
              <CallFunc fromlineno="59" tolineno="59" lineno="59" func="Getattr(getVar)">
                <Getattr fromlineno="59" tolineno="59" lineno="59" attrname="getVar" expr="data">
                  <Name fromlineno="59" tolineno="59" lineno="59" name="data"/>
                </Getattr>
                <Const fromlineno="59" tolineno="59" lineno="59" type="str">'DL_DIR'</Const>
                <Name fromlineno="59" tolineno="59" lineno="59" name="d"/>
                <Const fromlineno="59" tolineno="59" lineno="59" type="bool">True</Const>
              </CallFunc>
              <Getattr fromlineno="59" tolineno="59" lineno="59" attrname="localfile" expr="ud">
                <Name fromlineno="59" tolineno="59" lineno="59" name="ud"/>
              </Getattr>
            </CallFunc>
          </Return>
        </Function>
        <Function fromlineno="61" tolineno="90" lineno="61">
          <Arguments fromlineno="61" tolineno="61" lineno="None" format_args="self, ud, d, command">
            <AssName fromlineno="61" tolineno="61" lineno="61" name="self"/>
            <AssName fromlineno="61" tolineno="61" lineno="61" name="ud"/>
            <AssName fromlineno="61" tolineno="61" lineno="61" name="d"/>
            <AssName fromlineno="61" tolineno="61" lineno="61" name="command"/>
          </Arguments>
          <Assign fromlineno="67" tolineno="67" lineno="67" targets="[&lt;AssName(basecmd) l.67 [bb.fetch.bzr] at Ox9f7d52c&gt;]" value="data.expand('${FETCHCMD_bzr}', d)">
            <AssName fromlineno="67" tolineno="67" lineno="67" name="basecmd"/>
            <CallFunc fromlineno="67" tolineno="67" lineno="67" func="Getattr(expand)">
              <Getattr fromlineno="67" tolineno="67" lineno="67" attrname="expand" expr="data">
                <Name fromlineno="67" tolineno="67" lineno="67" name="data"/>
              </Getattr>
              <Const fromlineno="67" tolineno="67" lineno="67" type="str">'${FETCHCMD_bzr}'</Const>
              <Name fromlineno="67" tolineno="67" lineno="67" name="d"/>
            </CallFunc>
          </Assign>
          <Assign fromlineno="69" tolineno="69" lineno="69" targets="[&lt;AssName(proto) l.69 [bb.fetch.bzr] at Ox9f7d66c&gt;]" value="'http'">
            <AssName fromlineno="69" tolineno="69" lineno="69" name="proto"/>
            <Const fromlineno="69" tolineno="69" lineno="69" type="str">'http'</Const>
          </Assign>
          <If fromlineno="70" tolineno="71" lineno="70">
            <Compare fromlineno="70" tolineno="70" lineno="70" op="('in', &lt;Getattr(parm) l.70 [bb.fetch.bzr] at Ox9f7d76c&gt;)">
              <Const fromlineno="70" tolineno="70" lineno="70" type="str">'proto'</Const>
              <Getattr fromlineno="70" tolineno="70" lineno="70" attrname="parm" expr="ud">
                <Name fromlineno="70" tolineno="70" lineno="70" name="ud"/>
              </Getattr>
            </Compare>
            <Assign fromlineno="71" tolineno="71" lineno="71" targets="[&lt;AssName(proto) l.71 [bb.fetch.bzr] at Ox9f7d82c&gt;]" value="ud.parm['proto']">
              <AssName fromlineno="71" tolineno="71" lineno="71" name="proto"/>
              <Subscript fromlineno="71" tolineno="71" lineno="71">
                <Getattr fromlineno="71" tolineno="71" lineno="71" attrname="parm" expr="ud">
                  <Name fromlineno="71" tolineno="71" lineno="71" name="ud"/>
                </Getattr>
                <Index fromlineno="71" tolineno="71" lineno="None">
                  <Const fromlineno="71" tolineno="71" lineno="71" type="str">'proto'</Const>
                </Index>
              </Subscript>
            </Assign>
          </If>
          <Assign fromlineno="73" tolineno="73" lineno="73" targets="[&lt;AssName(bzrroot) l.73 [bb.fetch.bzr] at Ox9f7d92c&gt;]" value="(ud.host) + (ud.path)">
            <AssName fromlineno="73" tolineno="73" lineno="73" name="bzrroot"/>
            <BinOp fromlineno="73" tolineno="73" lineno="73" op="+" left="ud.host" right="ud.path">
              <Getattr fromlineno="73" tolineno="73" lineno="73" attrname="host" expr="ud">
                <Name fromlineno="73" tolineno="73" lineno="73" name="ud"/>
              </Getattr>
              <Getattr fromlineno="73" tolineno="73" lineno="73" attrname="path" expr="ud">
                <Name fromlineno="73" tolineno="73" lineno="73" name="ud"/>
              </Getattr>
            </BinOp>
          </Assign>
          <Assign fromlineno="75" tolineno="75" lineno="75" targets="[&lt;AssName(options) l.75 [bb.fetch.bzr] at Ox9f7da4c&gt;]" value="[]">
            <AssName fromlineno="75" tolineno="75" lineno="75" name="options"/>
            <List fromlineno="75" tolineno="75" lineno="75"/>
          </Assign>
          <If fromlineno="77" tolineno="88" lineno="77">
            <Compare fromlineno="77" tolineno="77" lineno="77" op="('is', &lt;Const(str) l.77 [bb.fetch.bzr] at Ox9f7db6c&gt;)">
              <Name fromlineno="77" tolineno="77" lineno="77" name="command"/>
              <Const fromlineno="77" tolineno="77" lineno="77" type="str">'revno'</Const>
            </Compare>
            <Assign fromlineno="78" tolineno="78" lineno="78" targets="[&lt;AssName(bzrcmd) l.78 [bb.fetch.bzr] at Ox9f7dc0c&gt;]" value="('%s revno %s %s://%s') % ((basecmd, ' '.join(options), proto, bzrroot))">
              <AssName fromlineno="78" tolineno="78" lineno="78" name="bzrcmd"/>
              <BinOp fromlineno="78" tolineno="78" lineno="78" op="%" left="'%s revno %s %s://%s'" right="(basecmd, ' '.join(options), proto, bzrroot)">
                <Const fromlineno="78" tolineno="78" lineno="78" type="str">'%s revno %s %s://%s'</Const>
                <Tuple fromlineno="78" tolineno="78" lineno="78">
                  <Name fromlineno="78" tolineno="78" lineno="78" name="basecmd"/>
                  <CallFunc fromlineno="78" tolineno="78" lineno="78" func="Getattr(join)">
                    <Getattr fromlineno="78" tolineno="78" lineno="78" attrname="join" expr="' '">
                      <Const fromlineno="78" tolineno="78" lineno="78" type="str">' '</Const>
                    </Getattr>
                    <Name fromlineno="78" tolineno="78" lineno="78" name="options"/>
                  </CallFunc>
                  <Name fromlineno="78" tolineno="78" lineno="78" name="proto"/>
                  <Name fromlineno="78" tolineno="78" lineno="78" name="bzrroot"/>
                </Tuple>
              </BinOp>
            </Assign>
            <If fromlineno="80" tolineno="81" lineno="80">
              <Getattr fromlineno="80" tolineno="80" lineno="80" attrname="revision" expr="ud">
                <Name fromlineno="80" tolineno="80" lineno="80" name="ud"/>
              </Getattr>
              <Discard fromlineno="81" tolineno="81" lineno="81">
                <CallFunc fromlineno="81" tolineno="81" lineno="81" func="Getattr(append)">
                  <Getattr fromlineno="81" tolineno="81" lineno="81" attrname="append" expr="options">
                    <Name fromlineno="81" tolineno="81" lineno="81" name="options"/>
                  </Getattr>
                  <BinOp fromlineno="81" tolineno="81" lineno="81" op="%" left="'-r %s'" right="ud.revision">
                    <Const fromlineno="81" tolineno="81" lineno="81" type="str">'-r %s'</Const>
                    <Getattr fromlineno="81" tolineno="81" lineno="81" attrname="revision" expr="ud">
                      <Name fromlineno="81" tolineno="81" lineno="81" name="ud"/>
                    </Getattr>
                  </BinOp>
                </CallFunc>
              </Discard>
            </If>
            <If fromlineno="83" tolineno="88" lineno="83">
              <Compare fromlineno="83" tolineno="83" lineno="83" op="('is', &lt;Const(str) l.83 [bb.fetch.bzr] at Ox9f8008c&gt;)">
                <Name fromlineno="83" tolineno="83" lineno="83" name="command"/>
                <Const fromlineno="83" tolineno="83" lineno="83" type="str">'fetch'</Const>
              </Compare>
              <Assign fromlineno="84" tolineno="84" lineno="84" targets="[&lt;AssName(bzrcmd) l.84 [bb.fetch.bzr] at Ox9f8012c&gt;]" value="('%s co %s %s://%s') % ((basecmd, ' '.join(options), proto, bzrroot))">
                <AssName fromlineno="84" tolineno="84" lineno="84" name="bzrcmd"/>
                <BinOp fromlineno="84" tolineno="84" lineno="84" op="%" left="'%s co %s %s://%s'" right="(basecmd, ' '.join(options), proto, bzrroot)">
                  <Const fromlineno="84" tolineno="84" lineno="84" type="str">'%s co %s %s://%s'</Const>
                  <Tuple fromlineno="84" tolineno="84" lineno="84">
                    <Name fromlineno="84" tolineno="84" lineno="84" name="basecmd"/>
                    <CallFunc fromlineno="84" tolineno="84" lineno="84" func="Getattr(join)">
                      <Getattr fromlineno="84" tolineno="84" lineno="84" attrname="join" expr="' '">
                        <Const fromlineno="84" tolineno="84" lineno="84" type="str">' '</Const>
                      </Getattr>
                      <Name fromlineno="84" tolineno="84" lineno="84" name="options"/>
                    </CallFunc>
                    <Name fromlineno="84" tolineno="84" lineno="84" name="proto"/>
                    <Name fromlineno="84" tolineno="84" lineno="84" name="bzrroot"/>
                  </Tuple>
                </BinOp>
              </Assign>
              <If fromlineno="85" tolineno="88" lineno="85">
                <Compare fromlineno="85" tolineno="85" lineno="85" op="('is', &lt;Const(str) l.85 [bb.fetch.bzr] at Ox9f803ac&gt;)">
                  <Name fromlineno="85" tolineno="85" lineno="85" name="command"/>
                  <Const fromlineno="85" tolineno="85" lineno="85" type="str">'update'</Const>
                </Compare>
                <Assign fromlineno="86" tolineno="86" lineno="86" targets="[&lt;AssName(bzrcmd) l.86 [bb.fetch.bzr] at Ox9f8044c&gt;]" value="('%s pull %s --overwrite') % ((basecmd, ' '.join(options)))">
                  <AssName fromlineno="86" tolineno="86" lineno="86" name="bzrcmd"/>
                  <BinOp fromlineno="86" tolineno="86" lineno="86" op="%" left="'%s pull %s --overwrite'" right="(basecmd, ' '.join(options))">
                    <Const fromlineno="86" tolineno="86" lineno="86" type="str">'%s pull %s --overwrite'</Const>
                    <Tuple fromlineno="86" tolineno="86" lineno="86">
                      <Name fromlineno="86" tolineno="86" lineno="86" name="basecmd"/>
                      <CallFunc fromlineno="86" tolineno="86" lineno="86" func="Getattr(join)">
                        <Getattr fromlineno="86" tolineno="86" lineno="86" attrname="join" expr="' '">
                          <Const fromlineno="86" tolineno="86" lineno="86" type="str">' '</Const>
                        </Getattr>
                        <Name fromlineno="86" tolineno="86" lineno="86" name="options"/>
                      </CallFunc>
                    </Tuple>
                  </BinOp>
                </Assign>
                <Raise fromlineno="88" tolineno="88" lineno="88">
                  <CallFunc fromlineno="88" tolineno="88" lineno="88" func="Name(FetchError)">
                    <Name fromlineno="88" tolineno="88" lineno="88" name="FetchError"/>
                    <BinOp fromlineno="88" tolineno="88" lineno="88" op="%" left="'Invalid bzr command %s'" right="command">
                      <Const fromlineno="88" tolineno="88" lineno="88" type="str">'Invalid bzr command %s'</Const>
                      <Name fromlineno="88" tolineno="88" lineno="88" name="command"/>
                    </BinOp>
                  </CallFunc>
                </Raise>
              </If>
            </If>
          </If>
          <Return fromlineno="90" tolineno="90" lineno="90">
            <Name fromlineno="90" tolineno="90" lineno="90" name="bzrcmd"/>
          </Return>
        </Function>
        <Function fromlineno="92" tolineno="124" lineno="92">
          <Arguments fromlineno="92" tolineno="92" lineno="None" format_args="self, loc, ud, d">
            <AssName fromlineno="92" tolineno="92" lineno="92" name="self"/>
            <AssName fromlineno="92" tolineno="92" lineno="92" name="loc"/>
            <AssName fromlineno="92" tolineno="92" lineno="92" name="ud"/>
            <AssName fromlineno="92" tolineno="92" lineno="92" name="d"/>
          </Arguments>
          <If fromlineno="96" tolineno="98" lineno="96">
            <CallFunc fromlineno="96" tolineno="96" lineno="96" func="Getattr(try_mirror)">
              <Getattr fromlineno="96" tolineno="96" lineno="96" attrname="try_mirror" expr="Fetch">
                <Name fromlineno="96" tolineno="96" lineno="96" name="Fetch"/>
              </Getattr>
              <Name fromlineno="96" tolineno="96" lineno="96" name="d"/>
              <Getattr fromlineno="96" tolineno="96" lineno="96" attrname="localfile" expr="ud">
                <Name fromlineno="96" tolineno="96" lineno="96" name="ud"/>
              </Getattr>
            </CallFunc>
            <Discard fromlineno="97" tolineno="97" lineno="97">
              <CallFunc fromlineno="97" tolineno="97" lineno="97" func="Getattr(debug)">
                <Getattr fromlineno="97" tolineno="97" lineno="97" attrname="debug" expr="bb.msg">
                  <Getattr fromlineno="97" tolineno="97" lineno="97" attrname="msg" expr="bb">
                    <Name fromlineno="97" tolineno="97" lineno="97" name="bb"/>
                  </Getattr>
                </Getattr>
                <Const fromlineno="97" tolineno="97" lineno="97" type="int">1</Const>
                <Getattr fromlineno="97" tolineno="97" lineno="97" attrname="Fetcher" expr="bb.msg.domain">
                  <Getattr fromlineno="97" tolineno="97" lineno="97" attrname="domain" expr="bb.msg">
                    <Getattr fromlineno="97" tolineno="97" lineno="97" attrname="msg" expr="bb">
                      <Name fromlineno="97" tolineno="97" lineno="97" name="bb"/>
                    </Getattr>
                  </Getattr>
                </Getattr>
                <BinOp fromlineno="97" tolineno="97" lineno="97" op="%" left="'%s already exists or was mirrored, skipping bzr checkout.'" right="ud.localpath">
                  <Const fromlineno="97" tolineno="97" lineno="97" type="str">'%s already exists or was mirrored, skipping bzr checkout.'</Const>
                  <Getattr fromlineno="97" tolineno="97" lineno="97" attrname="localpath" expr="ud">
                    <Name fromlineno="97" tolineno="97" lineno="97" name="ud"/>
                  </Getattr>
                </BinOp>
              </CallFunc>
            </Discard>
            <Return fromlineno="98" tolineno="98" lineno="98"/>
          </If>
          <If fromlineno="100" tolineno="112" lineno="100">
            <CallFunc fromlineno="100" tolineno="100" lineno="100" func="Getattr(access)">
              <Getattr fromlineno="100" tolineno="100" lineno="100" attrname="access" expr="os">
                <Name fromlineno="100" tolineno="100" lineno="100" name="os"/>
              </Getattr>
              <CallFunc fromlineno="100" tolineno="100" lineno="100" func="Getattr(join)">
                <Getattr fromlineno="100" tolineno="100" lineno="100" attrname="join" expr="os.path">
                  <Getattr fromlineno="100" tolineno="100" lineno="100" attrname="path" expr="os">
                    <Name fromlineno="100" tolineno="100" lineno="100" name="os"/>
                  </Getattr>
                </Getattr>
                <Getattr fromlineno="100" tolineno="100" lineno="100" attrname="pkgdir" expr="ud">
                  <Name fromlineno="100" tolineno="100" lineno="100" name="ud"/>
                </Getattr>
                <CallFunc fromlineno="100" tolineno="100" lineno="100" func="Getattr(basename)">
                  <Getattr fromlineno="100" tolineno="100" lineno="100" attrname="basename" expr="os.path">
                    <Getattr fromlineno="100" tolineno="100" lineno="100" attrname="path" expr="os">
                      <Name fromlineno="100" tolineno="100" lineno="100" name="os"/>
                    </Getattr>
                  </Getattr>
                  <Getattr fromlineno="100" tolineno="100" lineno="100" attrname="pkgdir" expr="ud">
                    <Name fromlineno="100" tolineno="100" lineno="100" name="ud"/>
                  </Getattr>
                </CallFunc>
                <Const fromlineno="100" tolineno="100" lineno="100" type="str">'.bzr'</Const>
              </CallFunc>
              <Getattr fromlineno="100" tolineno="100" lineno="100" attrname="R_OK" expr="os">
                <Name fromlineno="100" tolineno="100" lineno="100" name="os"/>
              </Getattr>
            </CallFunc>
            <Assign fromlineno="101" tolineno="101" lineno="101" targets="[&lt;AssName(bzrcmd) l.101 [bb.fetch.bzr] at Ox9f80e4c&gt;]" value="self._buildbzrcommand(ud, d, 'update')">
              <AssName fromlineno="101" tolineno="101" lineno="101" name="bzrcmd"/>
              <CallFunc fromlineno="101" tolineno="101" lineno="101" func="Getattr(_buildbzrcommand)">
                <Getattr fromlineno="101" tolineno="101" lineno="101" attrname="_buildbzrcommand" expr="self">
                  <Name fromlineno="101" tolineno="101" lineno="101" name="self"/>
                </Getattr>
                <Name fromlineno="101" tolineno="101" lineno="101" name="ud"/>
                <Name fromlineno="101" tolineno="101" lineno="101" name="d"/>
                <Const fromlineno="101" tolineno="101" lineno="101" type="str">'update'</Const>
              </CallFunc>
            </Assign>
            <Discard fromlineno="102" tolineno="102" lineno="102">
              <CallFunc fromlineno="102" tolineno="102" lineno="102" func="Getattr(debug)">
                <Getattr fromlineno="102" tolineno="102" lineno="102" attrname="debug" expr="bb.msg">
                  <Getattr fromlineno="102" tolineno="102" lineno="102" attrname="msg" expr="bb">
                    <Name fromlineno="102" tolineno="102" lineno="102" name="bb"/>
                  </Getattr>
                </Getattr>
                <Const fromlineno="102" tolineno="102" lineno="102" type="int">1</Const>
                <Getattr fromlineno="102" tolineno="102" lineno="102" attrname="Fetcher" expr="bb.msg.domain">
                  <Getattr fromlineno="102" tolineno="102" lineno="102" attrname="domain" expr="bb.msg">
                    <Getattr fromlineno="102" tolineno="102" lineno="102" attrname="msg" expr="bb">
                      <Name fromlineno="102" tolineno="102" lineno="102" name="bb"/>
                    </Getattr>
                  </Getattr>
                </Getattr>
                <BinOp fromlineno="102" tolineno="102" lineno="102" op="%" left="'BZR Update %s'" right="loc">
                  <Const fromlineno="102" tolineno="102" lineno="102" type="str">'BZR Update %s'</Const>
                  <Name fromlineno="102" tolineno="102" lineno="102" name="loc"/>
                </BinOp>
              </CallFunc>
            </Discard>
            <Discard fromlineno="103" tolineno="103" lineno="103">
              <CallFunc fromlineno="103" tolineno="103" lineno="103" func="Getattr(chdir)">
                <Getattr fromlineno="103" tolineno="103" lineno="103" attrname="chdir" expr="os">
                  <Name fromlineno="103" tolineno="103" lineno="103" name="os"/>
                </Getattr>
                <CallFunc fromlineno="103" tolineno="103" lineno="103" func="Getattr(join)">
                  <Getattr fromlineno="103" tolineno="103" lineno="103" attrname="join" expr="os.path">
                    <Getattr fromlineno="103" tolineno="103" lineno="103" attrname="path" expr="os">
                      <Name fromlineno="103" tolineno="103" lineno="103" name="os"/>
                    </Getattr>
                  </Getattr>
                  <Getattr fromlineno="103" tolineno="103" lineno="103" attrname="pkgdir" expr="ud">
                    <Name fromlineno="103" tolineno="103" lineno="103" name="ud"/>
                  </Getattr>
                  <CallFunc fromlineno="103" tolineno="103" lineno="103" func="Getattr(basename)">
                    <Getattr fromlineno="103" tolineno="103" lineno="103" attrname="basename" expr="os.path">
                      <Getattr fromlineno="103" tolineno="103" lineno="103" attrname="path" expr="os">
                        <Name fromlineno="103" tolineno="103" lineno="103" name="os"/>
                      </Getattr>
                    </Getattr>
                    <Getattr fromlineno="103" tolineno="103" lineno="103" attrname="path" expr="ud">
                      <Name fromlineno="103" tolineno="103" lineno="103" name="ud"/>
                    </Getattr>
                  </CallFunc>
                </CallFunc>
              </CallFunc>
            </Discard>
            <Discard fromlineno="104" tolineno="104" lineno="104">
              <CallFunc fromlineno="104" tolineno="104" lineno="104" func="Name(runfetchcmd)">
                <Name fromlineno="104" tolineno="104" lineno="104" name="runfetchcmd"/>
                <Name fromlineno="104" tolineno="104" lineno="104" name="bzrcmd"/>
                <Name fromlineno="104" tolineno="104" lineno="104" name="d"/>
              </CallFunc>
            </Discard>
            <Discard fromlineno="106" tolineno="106" lineno="106">
              <CallFunc fromlineno="106" tolineno="106" lineno="106" func="Getattr(system)">
                <Getattr fromlineno="106" tolineno="106" lineno="106" attrname="system" expr="os">
                  <Name fromlineno="106" tolineno="106" lineno="106" name="os"/>
                </Getattr>
                <BinOp fromlineno="106" tolineno="106" lineno="106" op="%" left="'rm -rf %s'" right="os.path.join(ud.pkgdir, os.path.basename(ud.pkgdir))">
                  <Const fromlineno="106" tolineno="106" lineno="106" type="str">'rm -rf %s'</Const>
                  <CallFunc fromlineno="106" tolineno="106" lineno="106" func="Getattr(join)">
                    <Getattr fromlineno="106" tolineno="106" lineno="106" attrname="join" expr="os.path">
                      <Getattr fromlineno="106" tolineno="106" lineno="106" attrname="path" expr="os">
                        <Name fromlineno="106" tolineno="106" lineno="106" name="os"/>
                      </Getattr>
                    </Getattr>
                    <Getattr fromlineno="106" tolineno="106" lineno="106" attrname="pkgdir" expr="ud">
                      <Name fromlineno="106" tolineno="106" lineno="106" name="ud"/>
                    </Getattr>
                    <CallFunc fromlineno="106" tolineno="106" lineno="106" func="Getattr(basename)">
                      <Getattr fromlineno="106" tolineno="106" lineno="106" attrname="basename" expr="os.path">
                        <Getattr fromlineno="106" tolineno="106" lineno="106" attrname="path" expr="os">
                          <Name fromlineno="106" tolineno="106" lineno="106" name="os"/>
                        </Getattr>
                      </Getattr>
                      <Getattr fromlineno="106" tolineno="106" lineno="106" attrname="pkgdir" expr="ud">
                        <Name fromlineno="106" tolineno="106" lineno="106" name="ud"/>
                      </Getattr>
                    </CallFunc>
                  </CallFunc>
                </BinOp>
              </CallFunc>
            </Discard>
            <Assign fromlineno="107" tolineno="107" lineno="107" targets="[&lt;AssName(bzrcmd) l.107 [bb.fetch.bzr] at Ox9f8476c&gt;]" value="self._buildbzrcommand(ud, d, 'fetch')">
              <AssName fromlineno="107" tolineno="107" lineno="107" name="bzrcmd"/>
              <CallFunc fromlineno="107" tolineno="107" lineno="107" func="Getattr(_buildbzrcommand)">
                <Getattr fromlineno="107" tolineno="107" lineno="107" attrname="_buildbzrcommand" expr="self">
                  <Name fromlineno="107" tolineno="107" lineno="107" name="self"/>
                </Getattr>
                <Name fromlineno="107" tolineno="107" lineno="107" name="ud"/>
                <Name fromlineno="107" tolineno="107" lineno="107" name="d"/>
                <Const fromlineno="107" tolineno="107" lineno="107" type="str">'fetch'</Const>
              </CallFunc>
            </Assign>
            <Discard fromlineno="108" tolineno="108" lineno="108">
              <CallFunc fromlineno="108" tolineno="108" lineno="108" func="Getattr(debug)">
                <Getattr fromlineno="108" tolineno="108" lineno="108" attrname="debug" expr="bb.msg">
                  <Getattr fromlineno="108" tolineno="108" lineno="108" attrname="msg" expr="bb">
                    <Name fromlineno="108" tolineno="108" lineno="108" name="bb"/>
                  </Getattr>
                </Getattr>
                <Const fromlineno="108" tolineno="108" lineno="108" type="int">1</Const>
                <Getattr fromlineno="108" tolineno="108" lineno="108" attrname="Fetcher" expr="bb.msg.domain">
                  <Getattr fromlineno="108" tolineno="108" lineno="108" attrname="domain" expr="bb.msg">
                    <Getattr fromlineno="108" tolineno="108" lineno="108" attrname="msg" expr="bb">
                      <Name fromlineno="108" tolineno="108" lineno="108" name="bb"/>
                    </Getattr>
                  </Getattr>
                </Getattr>
                <BinOp fromlineno="108" tolineno="108" lineno="108" op="%" left="'BZR Checkout %s'" right="loc">
                  <Const fromlineno="108" tolineno="108" lineno="108" type="str">'BZR Checkout %s'</Const>
                  <Name fromlineno="108" tolineno="108" lineno="108" name="loc"/>
                </BinOp>
              </CallFunc>
            </Discard>
            <Discard fromlineno="109" tolineno="109" lineno="109">
              <CallFunc fromlineno="109" tolineno="109" lineno="109" func="Getattr(mkdirhier)">
                <Getattr fromlineno="109" tolineno="109" lineno="109" attrname="mkdirhier" expr="bb">
                  <Name fromlineno="109" tolineno="109" lineno="109" name="bb"/>
                </Getattr>
                <Getattr fromlineno="109" tolineno="109" lineno="109" attrname="pkgdir" expr="ud">
                  <Name fromlineno="109" tolineno="109" lineno="109" name="ud"/>
                </Getattr>
              </CallFunc>
            </Discard>
            <Discard fromlineno="110" tolineno="110" lineno="110">
              <CallFunc fromlineno="110" tolineno="110" lineno="110" func="Getattr(chdir)">
                <Getattr fromlineno="110" tolineno="110" lineno="110" attrname="chdir" expr="os">
                  <Name fromlineno="110" tolineno="110" lineno="110" name="os"/>
                </Getattr>
                <Getattr fromlineno="110" tolineno="110" lineno="110" attrname="pkgdir" expr="ud">
                  <Name fromlineno="110" tolineno="110" lineno="110" name="ud"/>
                </Getattr>
              </CallFunc>
            </Discard>
            <Discard fromlineno="111" tolineno="111" lineno="111">
              <CallFunc fromlineno="111" tolineno="111" lineno="111" func="Getattr(debug)">
                <Getattr fromlineno="111" tolineno="111" lineno="111" attrname="debug" expr="bb.msg">
                  <Getattr fromlineno="111" tolineno="111" lineno="111" attrname="msg" expr="bb">
                    <Name fromlineno="111" tolineno="111" lineno="111" name="bb"/>
                  </Getattr>
                </Getattr>
                <Const fromlineno="111" tolineno="111" lineno="111" type="int">1</Const>
                <Getattr fromlineno="111" tolineno="111" lineno="111" attrname="Fetcher" expr="bb.msg.domain">
                  <Getattr fromlineno="111" tolineno="111" lineno="111" attrname="domain" expr="bb.msg">
                    <Getattr fromlineno="111" tolineno="111" lineno="111" attrname="msg" expr="bb">
                      <Name fromlineno="111" tolineno="111" lineno="111" name="bb"/>
                    </Getattr>
                  </Getattr>
                </Getattr>
                <BinOp fromlineno="111" tolineno="111" lineno="111" op="%" left="'Running %s'" right="bzrcmd">
                  <Const fromlineno="111" tolineno="111" lineno="111" type="str">'Running %s'</Const>
                  <Name fromlineno="111" tolineno="111" lineno="111" name="bzrcmd"/>
                </BinOp>
              </CallFunc>
            </Discard>
            <Discard fromlineno="112" tolineno="112" lineno="112">
              <CallFunc fromlineno="112" tolineno="112" lineno="112" func="Name(runfetchcmd)">
                <Name fromlineno="112" tolineno="112" lineno="112" name="runfetchcmd"/>
                <Name fromlineno="112" tolineno="112" lineno="112" name="bzrcmd"/>
                <Name fromlineno="112" tolineno="112" lineno="112" name="d"/>
              </CallFunc>
            </Discard>
          </If>
          <Discard fromlineno="114" tolineno="114" lineno="114">
            <CallFunc fromlineno="114" tolineno="114" lineno="114" func="Getattr(chdir)">
              <Getattr fromlineno="114" tolineno="114" lineno="114" attrname="chdir" expr="os">
                <Name fromlineno="114" tolineno="114" lineno="114" name="os"/>
              </Getattr>
              <Getattr fromlineno="114" tolineno="114" lineno="114" attrname="pkgdir" expr="ud">
                <Name fromlineno="114" tolineno="114" lineno="114" name="ud"/>
              </Getattr>
            </CallFunc>
          </Discard>
          <TryExcept fromlineno="116" tolineno="124" lineno="116">
            <Discard fromlineno="117" tolineno="117" lineno="117">
              <CallFunc fromlineno="117" tolineno="117" lineno="117" func="Name(runfetchcmd)">
                <Name fromlineno="117" tolineno="117" lineno="117" name="runfetchcmd"/>
                <BinOp fromlineno="117" tolineno="117" lineno="117" op="%" left="'tar -czf %s %s'" right="(ud.localpath, os.path.basename(ud.pkgdir))">
                  <Const fromlineno="117" tolineno="117" lineno="117" type="str">'tar -czf %s %s'</Const>
                  <Tuple fromlineno="117" tolineno="117" lineno="117">
                    <Getattr fromlineno="117" tolineno="117" lineno="117" attrname="localpath" expr="ud">
                      <Name fromlineno="117" tolineno="117" lineno="117" name="ud"/>
                    </Getattr>
                    <CallFunc fromlineno="117" tolineno="117" lineno="117" func="Getattr(basename)">
                      <Getattr fromlineno="117" tolineno="117" lineno="117" attrname="basename" expr="os.path">
                        <Getattr fromlineno="117" tolineno="117" lineno="117" attrname="path" expr="os">
                          <Name fromlineno="117" tolineno="117" lineno="117" name="os"/>
                        </Getattr>
                      </Getattr>
                      <Getattr fromlineno="117" tolineno="117" lineno="117" attrname="pkgdir" expr="ud">
                        <Name fromlineno="117" tolineno="117" lineno="117" name="ud"/>
                      </Getattr>
                    </CallFunc>
                  </Tuple>
                </BinOp>
                <Name fromlineno="117" tolineno="117" lineno="117" name="d"/>
              </CallFunc>
            </Discard>
            <ExceptHandler fromlineno="118" tolineno="124" lineno="118">
              <Assign fromlineno="119" tolineno="119" lineno="119" targets="[&lt;Tuple(tuple) l.119 [bb.fetch.bzr] at Ox9fcb2ac&gt;]" value="sys.exc_info()">
                <Tuple fromlineno="119" tolineno="119" lineno="119">
                  <AssName fromlineno="119" tolineno="119" lineno="119" name="t"/>
                  <AssName fromlineno="119" tolineno="119" lineno="119" name="v"/>
                  <AssName fromlineno="119" tolineno="119" lineno="119" name="tb"/>
                </Tuple>
                <CallFunc fromlineno="119" tolineno="119" lineno="119" func="Getattr(exc_info)">
                  <Getattr fromlineno="119" tolineno="119" lineno="119" attrname="exc_info" expr="sys">
                    <Name fromlineno="119" tolineno="119" lineno="119" name="sys"/>
                  </Getattr>
                </CallFunc>
              </Assign>
              <TryExcept fromlineno="120" tolineno="123" lineno="120">
                <Discard fromlineno="121" tolineno="121" lineno="121">
                  <CallFunc fromlineno="121" tolineno="121" lineno="121" func="Getattr(unlink)">
                    <Getattr fromlineno="121" tolineno="121" lineno="121" attrname="unlink" expr="os">
                      <Name fromlineno="121" tolineno="121" lineno="121" name="os"/>
                    </Getattr>
                    <Getattr fromlineno="121" tolineno="121" lineno="121" attrname="localpath" expr="ud">
                      <Name fromlineno="121" tolineno="121" lineno="121" name="ud"/>
                    </Getattr>
                  </CallFunc>
                </Discard>
                <ExceptHandler fromlineno="122" tolineno="123" lineno="122">
                  <Name fromlineno="122" tolineno="122" lineno="122" name="OSError"/>
                  <Pass fromlineno="123" tolineno="123" lineno="123"/>
                </ExceptHandler>
              </TryExcept>
              <Raise fromlineno="124" tolineno="124" lineno="124">
                <Name fromlineno="124" tolineno="124" lineno="124" name="t"/>
                <Name fromlineno="124" tolineno="124" lineno="124" name="v"/>
                <Name fromlineno="124" tolineno="124" lineno="124" name="tb"/>
              </Raise>
            </ExceptHandler>
          </TryExcept>
        </Function>
        <Function fromlineno="126" tolineno="127" lineno="126">
          <Arguments fromlineno="126" tolineno="126" lineno="None" format_args="self">
            <AssName fromlineno="126" tolineno="126" lineno="126" name="self"/>
          </Arguments>
          <Return fromlineno="127" tolineno="127" lineno="127">
            <Const fromlineno="127" tolineno="127" lineno="127" type="bool">True</Const>
          </Return>
        </Function>
        <Function fromlineno="129" tolineno="133" lineno="129">
          <Arguments fromlineno="129" tolineno="129" lineno="None" format_args="self, url, ud, d">
            <AssName fromlineno="129" tolineno="129" lineno="129" name="self"/>
            <AssName fromlineno="129" tolineno="129" lineno="129" name="url"/>
            <AssName fromlineno="129" tolineno="129" lineno="129" name="ud"/>
            <AssName fromlineno="129" tolineno="129" lineno="129" name="d"/>
          </Arguments>
          <Return fromlineno="133" tolineno="133" lineno="133">
            <BinOp fromlineno="133" tolineno="133" lineno="133" op="+" left="'bzr:'" right="ud.pkgdir">
              <Const fromlineno="133" tolineno="133" lineno="133" type="str">'bzr:'</Const>
              <Getattr fromlineno="133" tolineno="133" lineno="133" attrname="pkgdir" expr="ud">
                <Name fromlineno="133" tolineno="133" lineno="133" name="ud"/>
              </Getattr>
            </BinOp>
          </Return>
        </Function>
        <Function fromlineno="135" tolineno="143" lineno="135">
          <Arguments fromlineno="135" tolineno="135" lineno="None" format_args="self, url, ud, d">
            <AssName fromlineno="135" tolineno="135" lineno="135" name="self"/>
            <AssName fromlineno="135" tolineno="135" lineno="135" name="url"/>
            <AssName fromlineno="135" tolineno="135" lineno="135" name="ud"/>
            <AssName fromlineno="135" tolineno="135" lineno="135" name="d"/>
          </Arguments>
          <Discard fromlineno="139" tolineno="139" lineno="139">
            <CallFunc fromlineno="139" tolineno="139" lineno="139" func="Getattr(debug)">
              <Getattr fromlineno="139" tolineno="139" lineno="139" attrname="debug" expr="bb.msg">
                <Getattr fromlineno="139" tolineno="139" lineno="139" attrname="msg" expr="bb">
                  <Name fromlineno="139" tolineno="139" lineno="139" name="bb"/>
                </Getattr>
              </Getattr>
              <Const fromlineno="139" tolineno="139" lineno="139" type="int">2</Const>
              <Getattr fromlineno="139" tolineno="139" lineno="139" attrname="Fetcher" expr="bb.msg.domain">
                <Getattr fromlineno="139" tolineno="139" lineno="139" attrname="domain" expr="bb.msg">
                  <Getattr fromlineno="139" tolineno="139" lineno="139" attrname="msg" expr="bb">
                    <Name fromlineno="139" tolineno="139" lineno="139" name="bb"/>
                  </Getattr>
                </Getattr>
              </Getattr>
              <BinOp fromlineno="139" tolineno="139" lineno="139" op="%" left="'BZR fetcher hitting network for %s'" right="url">
                <Const fromlineno="139" tolineno="139" lineno="139" type="str">'BZR fetcher hitting network for %s'</Const>
                <Name fromlineno="139" tolineno="139" lineno="139" name="url"/>
              </BinOp>
            </CallFunc>
          </Discard>
          <Assign fromlineno="141" tolineno="141" lineno="141" targets="[&lt;AssName(output) l.141 [bb.fetch.bzr] at Ox9fcbd4c&gt;]" value="runfetchcmd(self._buildbzrcommand(ud, d, 'revno'), d, True)">
            <AssName fromlineno="141" tolineno="141" lineno="141" name="output"/>
            <CallFunc fromlineno="141" tolineno="141" lineno="141" func="Name(runfetchcmd)">
              <Name fromlineno="141" tolineno="141" lineno="141" name="runfetchcmd"/>
              <CallFunc fromlineno="141" tolineno="141" lineno="141" func="Getattr(_buildbzrcommand)">
                <Getattr fromlineno="141" tolineno="141" lineno="141" attrname="_buildbzrcommand" expr="self">
                  <Name fromlineno="141" tolineno="141" lineno="141" name="self"/>
                </Getattr>
                <Name fromlineno="141" tolineno="141" lineno="141" name="ud"/>
                <Name fromlineno="141" tolineno="141" lineno="141" name="d"/>
                <Const fromlineno="141" tolineno="141" lineno="141" type="str">'revno'</Const>
              </CallFunc>
              <Name fromlineno="141" tolineno="141" lineno="141" name="d"/>
              <Const fromlineno="141" tolineno="141" lineno="141" type="bool">True</Const>
            </CallFunc>
          </Assign>
          <Return fromlineno="143" tolineno="143" lineno="143">
            <CallFunc fromlineno="143" tolineno="143" lineno="143" func="Getattr(strip)">
              <Getattr fromlineno="143" tolineno="143" lineno="143" attrname="strip" expr="output">
                <Name fromlineno="143" tolineno="143" lineno="143" name="output"/>
              </Getattr>
            </CallFunc>
          </Return>
        </Function>
        <Function fromlineno="145" tolineno="150" lineno="145">
          <Arguments fromlineno="145" tolineno="145" lineno="None" format_args="self, url, ud, d">
            <AssName fromlineno="145" tolineno="145" lineno="145" name="self"/>
            <AssName fromlineno="145" tolineno="145" lineno="145" name="url"/>
            <AssName fromlineno="145" tolineno="145" lineno="145" name="ud"/>
            <AssName fromlineno="145" tolineno="145" lineno="145" name="d"/>
          </Arguments>
          <Return fromlineno="150" tolineno="150" lineno="150">
            <CallFunc fromlineno="150" tolineno="150" lineno="150" func="Getattr(_build_revision)">
              <Getattr fromlineno="150" tolineno="150" lineno="150" attrname="_build_revision" expr="self">
                <Name fromlineno="150" tolineno="150" lineno="150" name="self"/>
              </Getattr>
              <Name fromlineno="150" tolineno="150" lineno="150" name="url"/>
              <Name fromlineno="150" tolineno="150" lineno="150" name="ud"/>
              <Name fromlineno="150" tolineno="150" lineno="150" name="d"/>
            </CallFunc>
          </Return>
        </Function>
        <Function fromlineno="152" tolineno="153" lineno="152">
          <Arguments fromlineno="152" tolineno="152" lineno="None" format_args="self, url, ud, d">
            <AssName fromlineno="152" tolineno="152" lineno="152" name="self"/>
            <AssName fromlineno="152" tolineno="152" lineno="152" name="url"/>
            <AssName fromlineno="152" tolineno="152" lineno="152" name="ud"/>
            <AssName fromlineno="152" tolineno="152" lineno="152" name="d"/>
          </Arguments>
          <Return fromlineno="153" tolineno="153" lineno="153">
            <Getattr fromlineno="153" tolineno="153" lineno="153" attrname="revision" expr="ud">
              <Name fromlineno="153" tolineno="153" lineno="153" name="ud"/>
            </Getattr>
          </Return>
        </Function>
      </Class>
    </Module>
    <Module fromlineno="0" tolineno="130" lineno="0" name="bb.fetch.wget">
      <Import fromlineno="28" tolineno="28" lineno="28">
        <ImportName name="os"/>
        <ImportName name="re"/>
      </Import>
      <Import fromlineno="29" tolineno="29" lineno="29">
        <ImportName name="bb"/>
      </Import>
      <From fromlineno="30" tolineno="30" lineno="30" modname="bb">
        <ImportName name="data"/>
      </From>
      <From fromlineno="31" tolineno="31" lineno="31" modname="bb.fetch">
        <ImportName name="Fetch"/>
      </From>
      <From fromlineno="32" tolineno="32" lineno="32" modname="bb.fetch">
        <ImportName name="FetchError"/>
      </From>
      <From fromlineno="33" tolineno="33" lineno="33" modname="bb.fetch">
        <ImportName name="uri_replace"/>
      </From>
      <Class fromlineno="35" tolineno="130" lineno="35">
        <Name fromlineno="35" tolineno="35" lineno="35" name="Fetch"/>
        <Function fromlineno="37" tolineno="41" lineno="37">
          <Arguments fromlineno="37" tolineno="37" lineno="None" format_args="self, url, ud, d">
            <AssName fromlineno="37" tolineno="37" lineno="37" name="self"/>
            <AssName fromlineno="37" tolineno="37" lineno="37" name="url"/>
            <AssName fromlineno="37" tolineno="37" lineno="37" name="ud"/>
            <AssName fromlineno="37" tolineno="37" lineno="37" name="d"/>
          </Arguments>
          <Return fromlineno="41" tolineno="41" lineno="41">
            <Compare fromlineno="41" tolineno="41" lineno="41" op="('in', &lt;List(list) l.41 [bb.fetch.wget] at Ox9fcfa8c&gt;)">
              <Getattr fromlineno="41" tolineno="41" lineno="41" attrname="type" expr="ud">
                <Name fromlineno="41" tolineno="41" lineno="41" name="ud"/>
              </Getattr>
              <List fromlineno="41" tolineno="41" lineno="41">
                <Const fromlineno="41" tolineno="41" lineno="41" type="str">'http'</Const>
                <Const fromlineno="41" tolineno="41" lineno="41" type="str">'https'</Const>
                <Const fromlineno="41" tolineno="41" lineno="41" type="str">'ftp'</Const>
              </List>
            </Compare>
          </Return>
        </Function>
        <Function fromlineno="43" tolineno="49" lineno="43">
          <Arguments fromlineno="43" tolineno="43" lineno="None" format_args="self, url, ud, d">
            <AssName fromlineno="43" tolineno="43" lineno="43" name="self"/>
            <AssName fromlineno="43" tolineno="43" lineno="43" name="url"/>
            <AssName fromlineno="43" tolineno="43" lineno="43" name="ud"/>
            <AssName fromlineno="43" tolineno="43" lineno="43" name="d"/>
          </Arguments>
          <Assign fromlineno="45" tolineno="45" lineno="45" targets="[&lt;AssName(url) l.45 [bb.fetch.wget] at Ox9fcfd2c&gt;]" value="bb.encodeurl([ud.type, ud.host, ud.path, ud.user, ud.pswd, {}])">
            <AssName fromlineno="45" tolineno="45" lineno="45" name="url"/>
            <CallFunc fromlineno="45" tolineno="45" lineno="45" func="Getattr(encodeurl)">
              <Getattr fromlineno="45" tolineno="45" lineno="45" attrname="encodeurl" expr="bb">
                <Name fromlineno="45" tolineno="45" lineno="45" name="bb"/>
              </Getattr>
              <List fromlineno="45" tolineno="45" lineno="45">
                <Getattr fromlineno="45" tolineno="45" lineno="45" attrname="type" expr="ud">
                  <Name fromlineno="45" tolineno="45" lineno="45" name="ud"/>
                </Getattr>
                <Getattr fromlineno="45" tolineno="45" lineno="45" attrname="host" expr="ud">
                  <Name fromlineno="45" tolineno="45" lineno="45" name="ud"/>
                </Getattr>
                <Getattr fromlineno="45" tolineno="45" lineno="45" attrname="path" expr="ud">
                  <Name fromlineno="45" tolineno="45" lineno="45" name="ud"/>
                </Getattr>
                <Getattr fromlineno="45" tolineno="45" lineno="45" attrname="user" expr="ud">
                  <Name fromlineno="45" tolineno="45" lineno="45" name="ud"/>
                </Getattr>
                <Getattr fromlineno="45" tolineno="45" lineno="45" attrname="pswd" expr="ud">
                  <Name fromlineno="45" tolineno="45" lineno="45" name="ud"/>
                </Getattr>
                <Dict fromlineno="45" tolineno="45" lineno="45"/>
              </List>
            </CallFunc>
          </Assign>
          <Assign fromlineno="46" tolineno="46" lineno="46" targets="[&lt;AssAttr(basename) l.46 [bb.fetch.wget] at Ox9fcffcc&gt;]" value="os.path.basename(ud.path)">
            <AssAttr fromlineno="46" tolineno="46" lineno="46" attrname="basename" expr="ud">
              <Name fromlineno="46" tolineno="46" lineno="46" name="ud"/>
            </AssAttr>
            <CallFunc fromlineno="46" tolineno="46" lineno="46" func="Getattr(basename)">
              <Getattr fromlineno="46" tolineno="46" lineno="46" attrname="basename" expr="os.path">
                <Getattr fromlineno="46" tolineno="46" lineno="46" attrname="path" expr="os">
                  <Name fromlineno="46" tolineno="46" lineno="46" name="os"/>
                </Getattr>
              </Getattr>
              <Getattr fromlineno="46" tolineno="46" lineno="46" attrname="path" expr="ud">
                <Name fromlineno="46" tolineno="46" lineno="46" name="ud"/>
              </Getattr>
            </CallFunc>
          </Assign>
          <Assign fromlineno="47" tolineno="47" lineno="47" targets="[&lt;AssAttr(localfile) l.47 [bb.fetch.wget] at Ox9fd114c&gt;]" value="data.expand(os.path.basename(url), d)">
            <AssAttr fromlineno="47" tolineno="47" lineno="47" attrname="localfile" expr="ud">
              <Name fromlineno="47" tolineno="47" lineno="47" name="ud"/>
            </AssAttr>
            <CallFunc fromlineno="47" tolineno="47" lineno="47" func="Getattr(expand)">
              <Getattr fromlineno="47" tolineno="47" lineno="47" attrname="expand" expr="data">
                <Name fromlineno="47" tolineno="47" lineno="47" name="data"/>
              </Getattr>
              <CallFunc fromlineno="47" tolineno="47" lineno="47" func="Getattr(basename)">
                <Getattr fromlineno="47" tolineno="47" lineno="47" attrname="basename" expr="os.path">
                  <Getattr fromlineno="47" tolineno="47" lineno="47" attrname="path" expr="os">
                    <Name fromlineno="47" tolineno="47" lineno="47" name="os"/>
                  </Getattr>
                </Getattr>
                <Name fromlineno="47" tolineno="47" lineno="47" name="url"/>
              </CallFunc>
              <Name fromlineno="47" tolineno="47" lineno="47" name="d"/>
            </CallFunc>
          </Assign>
          <Return fromlineno="49" tolineno="49" lineno="49">
            <CallFunc fromlineno="49" tolineno="49" lineno="49" func="Getattr(join)">
              <Getattr fromlineno="49" tolineno="49" lineno="49" attrname="join" expr="os.path">
                <Getattr fromlineno="49" tolineno="49" lineno="49" attrname="path" expr="os">
                  <Name fromlineno="49" tolineno="49" lineno="49" name="os"/>
                </Getattr>
              </Getattr>
              <CallFunc fromlineno="49" tolineno="49" lineno="49" func="Getattr(getVar)">
                <Getattr fromlineno="49" tolineno="49" lineno="49" attrname="getVar" expr="data">
                  <Name fromlineno="49" tolineno="49" lineno="49" name="data"/>
                </Getattr>
                <Const fromlineno="49" tolineno="49" lineno="49" type="str">'DL_DIR'</Const>
                <Name fromlineno="49" tolineno="49" lineno="49" name="d"/>
                <Const fromlineno="49" tolineno="49" lineno="49" type="bool">True</Const>
              </CallFunc>
              <Getattr fromlineno="49" tolineno="49" lineno="49" attrname="localfile" expr="ud">
                <Name fromlineno="49" tolineno="49" lineno="49" name="ud"/>
              </Getattr>
            </CallFunc>
          </Return>
        </Function>
        <Function fromlineno="51" tolineno="126" lineno="51">
          <Arguments fromlineno="51" tolineno="51" lineno="None" format_args="self, uri, ud, d, checkonly=False">
            <AssName fromlineno="51" tolineno="51" lineno="51" name="self"/>
            <AssName fromlineno="51" tolineno="51" lineno="51" name="uri"/>
            <AssName fromlineno="51" tolineno="51" lineno="51" name="ud"/>
            <AssName fromlineno="51" tolineno="51" lineno="51" name="d"/>
            <AssName fromlineno="51" tolineno="51" lineno="51" name="checkonly"/>
            <Const fromlineno="51" tolineno="51" lineno="51" type="bool">False</Const>
          </Arguments>
          <Function fromlineno="54" tolineno="102" lineno="54">
            <Arguments fromlineno="54" tolineno="54" lineno="None" format_args="uri, ud, d">
              <AssName fromlineno="54" tolineno="54" lineno="54" name="uri"/>
              <AssName fromlineno="54" tolineno="54" lineno="54" name="ud"/>
              <AssName fromlineno="54" tolineno="54" lineno="54" name="d"/>
            </Arguments>
            <If fromlineno="55" tolineno="61" lineno="55">
              <Name fromlineno="55" tolineno="55" lineno="55" name="checkonly"/>
              <Assign fromlineno="56" tolineno="56" lineno="56" targets="[&lt;AssName(fetchcmd) l.56 [bb.fetch.wget] at Ox9fd190c&gt;]" value="data.getVar('CHECKCOMMAND', d, 1)">
                <AssName fromlineno="56" tolineno="56" lineno="56" name="fetchcmd"/>
                <CallFunc fromlineno="56" tolineno="56" lineno="56" func="Getattr(getVar)">
                  <Getattr fromlineno="56" tolineno="56" lineno="56" attrname="getVar" expr="data">
                    <Name fromlineno="56" tolineno="56" lineno="56" name="data"/>
                  </Getattr>
                  <Const fromlineno="56" tolineno="56" lineno="56" type="str">'CHECKCOMMAND'</Const>
                  <Name fromlineno="56" tolineno="56" lineno="56" name="d"/>
                  <Const fromlineno="56" tolineno="56" lineno="56" type="int">1</Const>
                </CallFunc>
              </Assign>
              <If fromlineno="57" tolineno="61" lineno="57">
                <CallFunc fromlineno="57" tolineno="57" lineno="57" func="Getattr(exists)">
                  <Getattr fromlineno="57" tolineno="57" lineno="57" attrname="exists" expr="os.path">
                    <Getattr fromlineno="57" tolineno="57" lineno="57" attrname="path" expr="os">
                      <Name fromlineno="57" tolineno="57" lineno="57" name="os"/>
                    </Getattr>
                  </Getattr>
                  <Getattr fromlineno="57" tolineno="57" lineno="57" attrname="localpath" expr="ud">
                    <Name fromlineno="57" tolineno="57" lineno="57" name="ud"/>
                  </Getattr>
                </CallFunc>
                <Assign fromlineno="59" tolineno="59" lineno="59" targets="[&lt;AssName(fetchcmd) l.59 [bb.fetch.wget] at Ox9fd1bec&gt;]" value="data.getVar('RESUMECOMMAND', d, 1)">
                  <AssName fromlineno="59" tolineno="59" lineno="59" name="fetchcmd"/>
                  <CallFunc fromlineno="59" tolineno="59" lineno="59" func="Getattr(getVar)">
                    <Getattr fromlineno="59" tolineno="59" lineno="59" attrname="getVar" expr="data">
                      <Name fromlineno="59" tolineno="59" lineno="59" name="data"/>
                    </Getattr>
                    <Const fromlineno="59" tolineno="59" lineno="59" type="str">'RESUMECOMMAND'</Const>
                    <Name fromlineno="59" tolineno="59" lineno="59" name="d"/>
                    <Const fromlineno="59" tolineno="59" lineno="59" type="int">1</Const>
                  </CallFunc>
                </Assign>
                <Assign fromlineno="61" tolineno="61" lineno="61" targets="[&lt;AssName(fetchcmd) l.61 [bb.fetch.wget] at Ox9fd1d4c&gt;]" value="data.getVar('FETCHCOMMAND', d, 1)">
                  <AssName fromlineno="61" tolineno="61" lineno="61" name="fetchcmd"/>
                  <CallFunc fromlineno="61" tolineno="61" lineno="61" func="Getattr(getVar)">
                    <Getattr fromlineno="61" tolineno="61" lineno="61" attrname="getVar" expr="data">
                      <Name fromlineno="61" tolineno="61" lineno="61" name="data"/>
                    </Getattr>
                    <Const fromlineno="61" tolineno="61" lineno="61" type="str">'FETCHCOMMAND'</Const>
                    <Name fromlineno="61" tolineno="61" lineno="61" name="d"/>
                    <Const fromlineno="61" tolineno="61" lineno="61" type="int">1</Const>
                  </CallFunc>
                </Assign>
              </If>
            </If>
            <Assign fromlineno="63" tolineno="63" lineno="63" targets="[&lt;AssName(uri) l.63 [bb.fetch.wget] at Ox9fd1dcc&gt;]" value="uri.split(';')[0]">
              <AssName fromlineno="63" tolineno="63" lineno="63" name="uri"/>
              <Subscript fromlineno="63" tolineno="63" lineno="63">
                <CallFunc fromlineno="63" tolineno="63" lineno="63" func="Getattr(split)">
                  <Getattr fromlineno="63" tolineno="63" lineno="63" attrname="split" expr="uri">
                    <Name fromlineno="63" tolineno="63" lineno="63" name="uri"/>
                  </Getattr>
                  <Const fromlineno="63" tolineno="63" lineno="63" type="str">';'</Const>
                </CallFunc>
                <Index fromlineno="63" tolineno="63" lineno="None">
                  <Const fromlineno="63" tolineno="63" lineno="63" type="int">0</Const>
                </Index>
              </Subscript>
            </Assign>
            <Assign fromlineno="64" tolineno="64" lineno="64" targets="[&lt;AssName(uri_decoded) l.64 [bb.fetch.wget] at Ox9fd1f8c&gt;]" value="list(bb.decodeurl(uri))">
              <AssName fromlineno="64" tolineno="64" lineno="64" name="uri_decoded"/>
              <CallFunc fromlineno="64" tolineno="64" lineno="64" func="Name(list)">
                <Name fromlineno="64" tolineno="64" lineno="64" name="list"/>
                <CallFunc fromlineno="64" tolineno="64" lineno="64" func="Getattr(decodeurl)">
                  <Getattr fromlineno="64" tolineno="64" lineno="64" attrname="decodeurl" expr="bb">
                    <Name fromlineno="64" tolineno="64" lineno="64" name="bb"/>
                  </Getattr>
                  <Name fromlineno="64" tolineno="64" lineno="64" name="uri"/>
                </CallFunc>
              </CallFunc>
            </Assign>
            <Assign fromlineno="65" tolineno="65" lineno="65" targets="[&lt;AssName(uri_type) l.65 [bb.fetch.wget] at Ox9fd612c&gt;]" value="uri_decoded[0]">
              <AssName fromlineno="65" tolineno="65" lineno="65" name="uri_type"/>
              <Subscript fromlineno="65" tolineno="65" lineno="65">
                <Name fromlineno="65" tolineno="65" lineno="65" name="uri_decoded"/>
                <Index fromlineno="65" tolineno="65" lineno="None">
                  <Const fromlineno="65" tolineno="65" lineno="65" type="int">0</Const>
                </Index>
              </Subscript>
            </Assign>
            <Assign fromlineno="66" tolineno="66" lineno="66" targets="[&lt;AssName(uri_host) l.66 [bb.fetch.wget] at Ox9fd622c&gt;]" value="uri_decoded[1]">
              <AssName fromlineno="66" tolineno="66" lineno="66" name="uri_host"/>
              <Subscript fromlineno="66" tolineno="66" lineno="66">
                <Name fromlineno="66" tolineno="66" lineno="66" name="uri_decoded"/>
                <Index fromlineno="66" tolineno="66" lineno="None">
                  <Const fromlineno="66" tolineno="66" lineno="66" type="int">1</Const>
                </Index>
              </Subscript>
            </Assign>
            <Discard fromlineno="68" tolineno="68" lineno="68">
              <CallFunc fromlineno="68" tolineno="68" lineno="68" func="Getattr(note)">
                <Getattr fromlineno="68" tolineno="68" lineno="68" attrname="note" expr="bb.msg">
                  <Getattr fromlineno="68" tolineno="68" lineno="68" attrname="msg" expr="bb">
                    <Name fromlineno="68" tolineno="68" lineno="68" name="bb"/>
                  </Getattr>
                </Getattr>
                <Const fromlineno="68" tolineno="68" lineno="68" type="int">1</Const>
                <Getattr fromlineno="68" tolineno="68" lineno="68" attrname="Fetcher" expr="bb.msg.domain">
                  <Getattr fromlineno="68" tolineno="68" lineno="68" attrname="domain" expr="bb.msg">
                    <Getattr fromlineno="68" tolineno="68" lineno="68" attrname="msg" expr="bb">
                      <Name fromlineno="68" tolineno="68" lineno="68" name="bb"/>
                    </Getattr>
                  </Getattr>
                </Getattr>
                <BinOp fromlineno="68" tolineno="68" lineno="68" op="+" left="'fetch '" right="uri">
                  <Const fromlineno="68" tolineno="68" lineno="68" type="str">'fetch '</Const>
                  <Name fromlineno="68" tolineno="68" lineno="68" name="uri"/>
                </BinOp>
              </CallFunc>
            </Discard>
            <Assign fromlineno="69" tolineno="69" lineno="69" targets="[&lt;AssName(fetchcmd) l.69 [bb.fetch.wget] at Ox9fd64ec&gt;]" value="fetchcmd.replace('${URI}', uri.split(';')[0])">
              <AssName fromlineno="69" tolineno="69" lineno="69" name="fetchcmd"/>
              <CallFunc fromlineno="69" tolineno="69" lineno="69" func="Getattr(replace)">
                <Getattr fromlineno="69" tolineno="69" lineno="69" attrname="replace" expr="fetchcmd">
                  <Name fromlineno="69" tolineno="69" lineno="69" name="fetchcmd"/>
                </Getattr>
                <Const fromlineno="69" tolineno="69" lineno="69" type="str">'${URI}'</Const>
                <Subscript fromlineno="69" tolineno="69" lineno="69">
                  <CallFunc fromlineno="69" tolineno="69" lineno="69" func="Getattr(split)">
                    <Getattr fromlineno="69" tolineno="69" lineno="69" attrname="split" expr="uri">
                      <Name fromlineno="69" tolineno="69" lineno="69" name="uri"/>
                    </Getattr>
                    <Const fromlineno="69" tolineno="69" lineno="69" type="str">';'</Const>
                  </CallFunc>
                  <Index fromlineno="69" tolineno="69" lineno="None">
                    <Const fromlineno="69" tolineno="69" lineno="69" type="int">0</Const>
                  </Index>
                </Subscript>
              </CallFunc>
            </Assign>
            <Assign fromlineno="70" tolineno="70" lineno="70" targets="[&lt;AssName(fetchcmd) l.70 [bb.fetch.wget] at Ox9fd66ec&gt;]" value="fetchcmd.replace('${FILE}', ud.basename)">
              <AssName fromlineno="70" tolineno="70" lineno="70" name="fetchcmd"/>
              <CallFunc fromlineno="70" tolineno="70" lineno="70" func="Getattr(replace)">
                <Getattr fromlineno="70" tolineno="70" lineno="70" attrname="replace" expr="fetchcmd">
                  <Name fromlineno="70" tolineno="70" lineno="70" name="fetchcmd"/>
                </Getattr>
                <Const fromlineno="70" tolineno="70" lineno="70" type="str">'${FILE}'</Const>
                <Getattr fromlineno="70" tolineno="70" lineno="70" attrname="basename" expr="ud">
                  <Name fromlineno="70" tolineno="70" lineno="70" name="ud"/>
                </Getattr>
              </CallFunc>
            </Assign>
            <Assign fromlineno="71" tolineno="71" lineno="71" targets="[&lt;AssName(httpproxy) l.71 [bb.fetch.wget] at Ox9fd682c&gt;]" value="None">
              <AssName fromlineno="71" tolineno="71" lineno="71" name="httpproxy"/>
              <Const fromlineno="71" tolineno="71" lineno="71" type="NoneType">None</Const>
            </Assign>
            <Assign fromlineno="72" tolineno="72" lineno="72" targets="[&lt;AssName(ftpproxy) l.72 [bb.fetch.wget] at Ox9fd68cc&gt;]" value="None">
              <AssName fromlineno="72" tolineno="72" lineno="72" name="ftpproxy"/>
              <Const fromlineno="72" tolineno="72" lineno="72" type="NoneType">None</Const>
            </Assign>
            <If fromlineno="73" tolineno="79" lineno="73">
              <Compare fromlineno="73" tolineno="73" lineno="73" op="('==', &lt;Const(str) l.73 [bb.fetch.wget] at Ox9fd69cc&gt;)">
                <Name fromlineno="73" tolineno="73" lineno="73" name="uri_type"/>
                <Const fromlineno="73" tolineno="73" lineno="73" type="str">'http'</Const>
              </Compare>
              <Assign fromlineno="74" tolineno="74" lineno="74" targets="[&lt;AssName(httpproxy) l.74 [bb.fetch.wget] at Ox9fd6a6c&gt;]" value="data.getVar('HTTP_PROXY', d, True)">
                <AssName fromlineno="74" tolineno="74" lineno="74" name="httpproxy"/>
                <CallFunc fromlineno="74" tolineno="74" lineno="74" func="Getattr(getVar)">
                  <Getattr fromlineno="74" tolineno="74" lineno="74" attrname="getVar" expr="data">
                    <Name fromlineno="74" tolineno="74" lineno="74" name="data"/>
                  </Getattr>
                  <Const fromlineno="74" tolineno="74" lineno="74" type="str">'HTTP_PROXY'</Const>
                  <Name fromlineno="74" tolineno="74" lineno="74" name="d"/>
                  <Const fromlineno="74" tolineno="74" lineno="74" type="bool">True</Const>
                </CallFunc>
              </Assign>
              <Assign fromlineno="75" tolineno="75" lineno="75" targets="[&lt;AssName(httpproxy_ignore) l.75 [bb.fetch.wget] at Ox9fd6bac&gt;]" value="(data.getVar('HTTP_PROXY_IGNORE', d, True)) or ('').split()">
                <AssName fromlineno="75" tolineno="75" lineno="75" name="httpproxy_ignore"/>
                <CallFunc fromlineno="75" tolineno="75" lineno="75" func="Getattr(split)">
                  <Getattr fromlineno="75" tolineno="75" lineno="75" attrname="split" expr="(data.getVar('HTTP_PROXY_IGNORE', d, True)) or ('')">
                    <BoolOp fromlineno="75" tolineno="75" lineno="75" op="or" values="data.getVar('HTTP_PROXY_IGNORE', d, True),'',">
                      <CallFunc fromlineno="75" tolineno="75" lineno="75" func="Getattr(getVar)">
                        <Getattr fromlineno="75" tolineno="75" lineno="75" attrname="getVar" expr="data">
                          <Name fromlineno="75" tolineno="75" lineno="75" name="data"/>
                        </Getattr>
                        <Const fromlineno="75" tolineno="75" lineno="75" type="str">'HTTP_PROXY_IGNORE'</Const>
                        <Name fromlineno="75" tolineno="75" lineno="75" name="d"/>
                        <Const fromlineno="75" tolineno="75" lineno="75" type="bool">True</Const>
                      </CallFunc>
                      <Const fromlineno="75" tolineno="75" lineno="75" type="str">''</Const>
                    </BoolOp>
                  </Getattr>
                </CallFunc>
              </Assign>
              <For fromlineno="76" tolineno="79" lineno="76">
                <AssName fromlineno="76" tolineno="76" lineno="76" name="p"/>
                <Name fromlineno="76" tolineno="76" lineno="76" name="httpproxy_ignore"/>
                <If fromlineno="77" tolineno="79" lineno="77">
                  <CallFunc fromlineno="77" tolineno="77" lineno="77" func="Getattr(endswith)">
                    <Getattr fromlineno="77" tolineno="77" lineno="77" attrname="endswith" expr="uri_host">
                      <Name fromlineno="77" tolineno="77" lineno="77" name="uri_host"/>
                    </Getattr>
                    <Name fromlineno="77" tolineno="77" lineno="77" name="p"/>
                  </CallFunc>
                  <Assign fromlineno="78" tolineno="78" lineno="78" targets="[&lt;AssName(httpproxy) l.78 [bb.fetch.wget] at Ox9fd6fac&gt;]" value="None">
                    <AssName fromlineno="78" tolineno="78" lineno="78" name="httpproxy"/>
                    <Const fromlineno="78" tolineno="78" lineno="78" type="NoneType">None</Const>
                  </Assign>
                  <Break fromlineno="79" tolineno="79" lineno="79"/>
                </If>
              </For>
            </If>
            <If fromlineno="80" tolineno="86" lineno="80">
              <Compare fromlineno="80" tolineno="80" lineno="80" op="('==', &lt;Const(str) l.80 [bb.fetch.wget] at Ox9fda0ac&gt;)">
                <Name fromlineno="80" tolineno="80" lineno="80" name="uri_type"/>
                <Const fromlineno="80" tolineno="80" lineno="80" type="str">'ftp'</Const>
              </Compare>
              <Assign fromlineno="81" tolineno="81" lineno="81" targets="[&lt;AssName(ftpproxy) l.81 [bb.fetch.wget] at Ox9fda14c&gt;]" value="data.getVar('FTP_PROXY', d, True)">
                <AssName fromlineno="81" tolineno="81" lineno="81" name="ftpproxy"/>
                <CallFunc fromlineno="81" tolineno="81" lineno="81" func="Getattr(getVar)">
                  <Getattr fromlineno="81" tolineno="81" lineno="81" attrname="getVar" expr="data">
                    <Name fromlineno="81" tolineno="81" lineno="81" name="data"/>
                  </Getattr>
                  <Const fromlineno="81" tolineno="81" lineno="81" type="str">'FTP_PROXY'</Const>
                  <Name fromlineno="81" tolineno="81" lineno="81" name="d"/>
                  <Const fromlineno="81" tolineno="81" lineno="81" type="bool">True</Const>
                </CallFunc>
              </Assign>
              <Assign fromlineno="82" tolineno="82" lineno="82" targets="[&lt;AssName(ftpproxy_ignore) l.82 [bb.fetch.wget] at Ox9fda28c&gt;]" value="(data.getVar('HTTP_PROXY_IGNORE', d, True)) or ('').split()">
                <AssName fromlineno="82" tolineno="82" lineno="82" name="ftpproxy_ignore"/>
                <CallFunc fromlineno="82" tolineno="82" lineno="82" func="Getattr(split)">
                  <Getattr fromlineno="82" tolineno="82" lineno="82" attrname="split" expr="(data.getVar('HTTP_PROXY_IGNORE', d, True)) or ('')">
                    <BoolOp fromlineno="82" tolineno="82" lineno="82" op="or" values="data.getVar('HTTP_PROXY_IGNORE', d, True),'',">
                      <CallFunc fromlineno="82" tolineno="82" lineno="82" func="Getattr(getVar)">
                        <Getattr fromlineno="82" tolineno="82" lineno="82" attrname="getVar" expr="data">
                          <Name fromlineno="82" tolineno="82" lineno="82" name="data"/>
                        </Getattr>
                        <Const fromlineno="82" tolineno="82" lineno="82" type="str">'HTTP_PROXY_IGNORE'</Const>
                        <Name fromlineno="82" tolineno="82" lineno="82" name="d"/>
                        <Const fromlineno="82" tolineno="82" lineno="82" type="bool">True</Const>
                      </CallFunc>
                      <Const fromlineno="82" tolineno="82" lineno="82" type="str">''</Const>
                    </BoolOp>
                  </Getattr>
                </CallFunc>
              </Assign>
              <For fromlineno="83" tolineno="86" lineno="83">
                <AssName fromlineno="83" tolineno="83" lineno="83" name="p"/>
                <Name fromlineno="83" tolineno="83" lineno="83" name="ftpproxy_ignore"/>
                <If fromlineno="84" tolineno="86" lineno="84">
                  <CallFunc fromlineno="84" tolineno="84" lineno="84" func="Getattr(endswith)">
                    <Getattr fromlineno="84" tolineno="84" lineno="84" attrname="endswith" expr="uri_host">
                      <Name fromlineno="84" tolineno="84" lineno="84" name="uri_host"/>
                    </Getattr>
                    <Name fromlineno="84" tolineno="84" lineno="84" name="p"/>
                  </CallFunc>
                  <Assign fromlineno="85" tolineno="85" lineno="85" targets="[&lt;AssName(ftpproxy) l.85 [bb.fetch.wget] at Ox9fda66c&gt;]" value="None">
                    <AssName fromlineno="85" tolineno="85" lineno="85" name="ftpproxy"/>
                    <Const fromlineno="85" tolineno="85" lineno="85" type="NoneType">None</Const>
                  </Assign>
                  <Break fromlineno="86" tolineno="86" lineno="86"/>
                </If>
              </For>
            </If>
            <If fromlineno="87" tolineno="88" lineno="87">
              <Name fromlineno="87" tolineno="87" lineno="87" name="httpproxy"/>
              <Assign fromlineno="88" tolineno="88" lineno="88" targets="[&lt;AssName(fetchcmd) l.88 [bb.fetch.wget] at Ox9fda76c&gt;]" value="((('http_proxy=') + (httpproxy)) + (' ')) + (fetchcmd)">
                <AssName fromlineno="88" tolineno="88" lineno="88" name="fetchcmd"/>
                <BinOp fromlineno="88" tolineno="88" lineno="88" op="+" left="(('http_proxy=') + (httpproxy)) + (' ')" right="fetchcmd">
                  <BinOp fromlineno="88" tolineno="88" lineno="88" op="+" left="('http_proxy=') + (httpproxy)" right="' '">
                    <BinOp fromlineno="88" tolineno="88" lineno="88" op="+" left="'http_proxy='" right="httpproxy">
                      <Const fromlineno="88" tolineno="88" lineno="88" type="str">'http_proxy='</Const>
                      <Name fromlineno="88" tolineno="88" lineno="88" name="httpproxy"/>
                    </BinOp>
                    <Const fromlineno="88" tolineno="88" lineno="88" type="str">' '</Const>
                  </BinOp>
                  <Name fromlineno="88" tolineno="88" lineno="88" name="fetchcmd"/>
                </BinOp>
              </Assign>
            </If>
            <If fromlineno="89" tolineno="90" lineno="89">
              <Name fromlineno="89" tolineno="89" lineno="89" name="ftpproxy"/>
              <Assign fromlineno="90" tolineno="90" lineno="90" targets="[&lt;AssName(fetchcmd) l.90 [bb.fetch.wget] at Ox9fda92c&gt;]" value="((('ftp_proxy=') + (ftpproxy)) + (' ')) + (fetchcmd)">
                <AssName fromlineno="90" tolineno="90" lineno="90" name="fetchcmd"/>
                <BinOp fromlineno="90" tolineno="90" lineno="90" op="+" left="(('ftp_proxy=') + (ftpproxy)) + (' ')" right="fetchcmd">
                  <BinOp fromlineno="90" tolineno="90" lineno="90" op="+" left="('ftp_proxy=') + (ftpproxy)" right="' '">
                    <BinOp fromlineno="90" tolineno="90" lineno="90" op="+" left="'ftp_proxy='" right="ftpproxy">
                      <Const fromlineno="90" tolineno="90" lineno="90" type="str">'ftp_proxy='</Const>
                      <Name fromlineno="90" tolineno="90" lineno="90" name="ftpproxy"/>
                    </BinOp>
                    <Const fromlineno="90" tolineno="90" lineno="90" type="str">' '</Const>
                  </BinOp>
                  <Name fromlineno="90" tolineno="90" lineno="90" name="fetchcmd"/>
                </BinOp>
              </Assign>
            </If>
            <Discard fromlineno="91" tolineno="91" lineno="91">
              <CallFunc fromlineno="91" tolineno="91" lineno="91" func="Getattr(debug)">
                <Getattr fromlineno="91" tolineno="91" lineno="91" attrname="debug" expr="bb.msg">
                  <Getattr fromlineno="91" tolineno="91" lineno="91" attrname="msg" expr="bb">
                    <Name fromlineno="91" tolineno="91" lineno="91" name="bb"/>
                  </Getattr>
                </Getattr>
                <Const fromlineno="91" tolineno="91" lineno="91" type="int">2</Const>
                <Getattr fromlineno="91" tolineno="91" lineno="91" attrname="Fetcher" expr="bb.msg.domain">
                  <Getattr fromlineno="91" tolineno="91" lineno="91" attrname="domain" expr="bb.msg">
                    <Getattr fromlineno="91" tolineno="91" lineno="91" attrname="msg" expr="bb">
                      <Name fromlineno="91" tolineno="91" lineno="91" name="bb"/>
                    </Getattr>
                  </Getattr>
                </Getattr>
                <BinOp fromlineno="91" tolineno="91" lineno="91" op="+" left="'executing '" right="fetchcmd">
                  <Const fromlineno="91" tolineno="91" lineno="91" type="str">'executing '</Const>
                  <Name fromlineno="91" tolineno="91" lineno="91" name="fetchcmd"/>
                </BinOp>
              </CallFunc>
            </Discard>
            <Assign fromlineno="92" tolineno="92" lineno="92" targets="[&lt;AssName(ret) l.92 [bb.fetch.wget] at Ox9fdac2c&gt;]" value="os.system(fetchcmd)">
              <AssName fromlineno="92" tolineno="92" lineno="92" name="ret"/>
              <CallFunc fromlineno="92" tolineno="92" lineno="92" func="Getattr(system)">
                <Getattr fromlineno="92" tolineno="92" lineno="92" attrname="system" expr="os">
                  <Name fromlineno="92" tolineno="92" lineno="92" name="os"/>
                </Getattr>
                <Name fromlineno="92" tolineno="92" lineno="92" name="fetchcmd"/>
              </CallFunc>
            </Assign>
            <If fromlineno="93" tolineno="94" lineno="93">
              <Compare fromlineno="93" tolineno="93" lineno="93" op="('!=', &lt;Const(int) l.93 [bb.fetch.wget] at Ox9fdadac&gt;)">
                <Name fromlineno="93" tolineno="93" lineno="93" name="ret"/>
                <Const fromlineno="93" tolineno="93" lineno="93" type="int">0</Const>
              </Compare>
              <Return fromlineno="94" tolineno="94" lineno="94">
                <Const fromlineno="94" tolineno="94" lineno="94" type="bool">False</Const>
              </Return>
            </If>
            <If fromlineno="98" tolineno="100" lineno="98">
              <UnaryOp fromlineno="98" tolineno="98" lineno="98">
                <CallFunc fromlineno="98" tolineno="98" lineno="98" func="Getattr(exists)">
                  <Getattr fromlineno="98" tolineno="98" lineno="98" attrname="exists" expr="os.path">
                    <Getattr fromlineno="98" tolineno="98" lineno="98" attrname="path" expr="os">
                      <Name fromlineno="98" tolineno="98" lineno="98" name="os"/>
                    </Getattr>
                  </Getattr>
                  <Getattr fromlineno="98" tolineno="98" lineno="98" attrname="localpath" expr="ud">
                    <Name fromlineno="98" tolineno="98" lineno="98" name="ud"/>
                  </Getattr>
                </CallFunc>
              </UnaryOp>
              <Discard fromlineno="99" tolineno="99" lineno="99">
                <CallFunc fromlineno="99" tolineno="99" lineno="99" func="Getattr(debug)">
                  <Getattr fromlineno="99" tolineno="99" lineno="99" attrname="debug" expr="bb.msg">
                    <Getattr fromlineno="99" tolineno="99" lineno="99" attrname="msg" expr="bb">
                      <Name fromlineno="99" tolineno="99" lineno="99" name="bb"/>
                    </Getattr>
                  </Getattr>
                  <Const fromlineno="99" tolineno="99" lineno="99" type="int">2</Const>
                  <Getattr fromlineno="99" tolineno="99" lineno="99" attrname="Fetcher" expr="bb.msg.domain">
                    <Getattr fromlineno="99" tolineno="99" lineno="99" attrname="domain" expr="bb.msg">
                      <Getattr fromlineno="99" tolineno="99" lineno="99" attrname="msg" expr="bb">
                        <Name fromlineno="99" tolineno="99" lineno="99" name="bb"/>
                      </Getattr>
                    </Getattr>
                  </Getattr>
                  <BinOp fromlineno="99" tolineno="99" lineno="99" op="%" left="&quot;The fetch command for %s returned success but %s doesn't exist?...&quot;" right="(uri, ud.localpath)">
                    <Const fromlineno="99" tolineno="99" lineno="99" type="str">"The fetch command for %s returned success but %s doesn't exist?..."</Const>
                    <Tuple fromlineno="99" tolineno="99" lineno="99">
                      <Name fromlineno="99" tolineno="99" lineno="99" name="uri"/>
                      <Getattr fromlineno="99" tolineno="99" lineno="99" attrname="localpath" expr="ud">
                        <Name fromlineno="99" tolineno="99" lineno="99" name="ud"/>
                      </Getattr>
                    </Tuple>
                  </BinOp>
                </CallFunc>
              </Discard>
              <Return fromlineno="100" tolineno="100" lineno="100">
                <Const fromlineno="100" tolineno="100" lineno="100" type="bool">False</Const>
              </Return>
            </If>
            <Return fromlineno="102" tolineno="102" lineno="102">
              <Const fromlineno="102" tolineno="102" lineno="102" type="bool">True</Const>
            </Return>
          </Function>
          <Assign fromlineno="104" tolineno="104" lineno="104" targets="[&lt;AssName(localdata) l.104 [bb.fetch.wget] at Ox9fde2ac&gt;]" value="data.createCopy(d)">
            <AssName fromlineno="104" tolineno="104" lineno="104" name="localdata"/>
            <CallFunc fromlineno="104" tolineno="104" lineno="104" func="Getattr(createCopy)">
              <Getattr fromlineno="104" tolineno="104" lineno="104" attrname="createCopy" expr="data">
                <Name fromlineno="104" tolineno="104" lineno="104" name="data"/>
              </Getattr>
              <Name fromlineno="104" tolineno="104" lineno="104" name="d"/>
            </CallFunc>
          </Assign>
          <Discard fromlineno="105" tolineno="105" lineno="105">
            <CallFunc fromlineno="105" tolineno="105" lineno="105" func="Getattr(setVar)">
              <Getattr fromlineno="105" tolineno="105" lineno="105" attrname="setVar" expr="data">
                <Name fromlineno="105" tolineno="105" lineno="105" name="data"/>
              </Getattr>
              <Const fromlineno="105" tolineno="105" lineno="105" type="str">'OVERRIDES'</Const>
              <BinOp fromlineno="105" tolineno="105" lineno="105" op="+" left="'wget:'" right="data.getVar('OVERRIDES', localdata)">
                <Const fromlineno="105" tolineno="105" lineno="105" type="str">'wget:'</Const>
                <CallFunc fromlineno="105" tolineno="105" lineno="105" func="Getattr(getVar)">
                  <Getattr fromlineno="105" tolineno="105" lineno="105" attrname="getVar" expr="data">
                    <Name fromlineno="105" tolineno="105" lineno="105" name="data"/>
                  </Getattr>
                  <Const fromlineno="105" tolineno="105" lineno="105" type="str">'OVERRIDES'</Const>
                  <Name fromlineno="105" tolineno="105" lineno="105" name="localdata"/>
                </CallFunc>
              </BinOp>
              <Name fromlineno="105" tolineno="105" lineno="105" name="localdata"/>
            </CallFunc>
          </Discard>
          <Discard fromlineno="106" tolineno="106" lineno="106">
            <CallFunc fromlineno="106" tolineno="106" lineno="106" func="Getattr(update_data)">
              <Getattr fromlineno="106" tolineno="106" lineno="106" attrname="update_data" expr="data">
                <Name fromlineno="106" tolineno="106" lineno="106" name="data"/>
              </Getattr>
              <Name fromlineno="106" tolineno="106" lineno="106" name="localdata"/>
            </CallFunc>
          </Discard>
          <Assign fromlineno="108" tolineno="108" lineno="108" targets="[&lt;AssName(premirrors) l.108 [bb.fetch.wget] at Ox9fde66c&gt;]" value="[i.split() for i in (data.getVar('PREMIRRORS', localdata, 1)) or ('').split('\n') if i]">
            <AssName fromlineno="108" tolineno="108" lineno="108" name="premirrors"/>
            <ListComp fromlineno="108" tolineno="108" lineno="108">
              <CallFunc fromlineno="108" tolineno="108" lineno="108" func="Getattr(split)">
                <Getattr fromlineno="108" tolineno="108" lineno="108" attrname="split" expr="i">
                  <Name fromlineno="108" tolineno="108" lineno="108" name="i"/>
                </Getattr>
              </CallFunc>
              <Comprehension fromlineno="108" tolineno="108" lineno="None">
                <AssName fromlineno="108" tolineno="108" lineno="108" name="i"/>
                <CallFunc fromlineno="108" tolineno="108" lineno="108" func="Getattr(split)">
                  <Getattr fromlineno="108" tolineno="108" lineno="108" attrname="split" expr="(data.getVar('PREMIRRORS', localdata, 1)) or ('')">
                    <BoolOp fromlineno="108" tolineno="108" lineno="108" op="or" values="data.getVar('PREMIRRORS', localdata, 1),'',">
                      <CallFunc fromlineno="108" tolineno="108" lineno="108" func="Getattr(getVar)">
                        <Getattr fromlineno="108" tolineno="108" lineno="108" attrname="getVar" expr="data">
                          <Name fromlineno="108" tolineno="108" lineno="108" name="data"/>
                        </Getattr>
                        <Const fromlineno="108" tolineno="108" lineno="108" type="str">'PREMIRRORS'</Const>
                        <Name fromlineno="108" tolineno="108" lineno="108" name="localdata"/>
                        <Const fromlineno="108" tolineno="108" lineno="108" type="int">1</Const>
                      </CallFunc>
                      <Const fromlineno="108" tolineno="108" lineno="108" type="str">''</Const>
                    </BoolOp>
                  </Getattr>
                  <Const fromlineno="108" tolineno="108" lineno="108" type="str">'\n'</Const>
                </CallFunc>
                <Name fromlineno="108" tolineno="108" lineno="108" name="i"/>
              </Comprehension>
            </ListComp>
          </Assign>
          <For fromlineno="109" tolineno="113" lineno="109">
            <Tuple fromlineno="109" tolineno="109" lineno="109">
              <AssName fromlineno="109" tolineno="109" lineno="109" name="find"/>
              <AssName fromlineno="109" tolineno="109" lineno="109" name="replace"/>
            </Tuple>
            <Name fromlineno="109" tolineno="109" lineno="109" name="premirrors"/>
            <Assign fromlineno="110" tolineno="110" lineno="110" targets="[&lt;AssName(newuri) l.110 [bb.fetch.wget] at Ox9fdeb4c&gt;]" value="uri_replace(uri, find, replace, d)">
              <AssName fromlineno="110" tolineno="110" lineno="110" name="newuri"/>
              <CallFunc fromlineno="110" tolineno="110" lineno="110" func="Name(uri_replace)">
                <Name fromlineno="110" tolineno="110" lineno="110" name="uri_replace"/>
                <Name fromlineno="110" tolineno="110" lineno="110" name="uri"/>
                <Name fromlineno="110" tolineno="110" lineno="110" name="find"/>
                <Name fromlineno="110" tolineno="110" lineno="110" name="replace"/>
                <Name fromlineno="110" tolineno="110" lineno="110" name="d"/>
              </CallFunc>
            </Assign>
            <If fromlineno="111" tolineno="113" lineno="111">
              <Compare fromlineno="111" tolineno="111" lineno="111" op="('!=', &lt;Name(uri) l.111 [bb.fetch.wget] at Ox9fded0c&gt;)">
                <Name fromlineno="111" tolineno="111" lineno="111" name="newuri"/>
                <Name fromlineno="111" tolineno="111" lineno="111" name="uri"/>
              </Compare>
              <If fromlineno="112" tolineno="113" lineno="112">
                <CallFunc fromlineno="112" tolineno="112" lineno="112" func="Name(fetch_uri)">
                  <Name fromlineno="112" tolineno="112" lineno="112" name="fetch_uri"/>
                  <Name fromlineno="112" tolineno="112" lineno="112" name="newuri"/>
                  <Name fromlineno="112" tolineno="112" lineno="112" name="ud"/>
                  <Name fromlineno="112" tolineno="112" lineno="112" name="localdata"/>
                </CallFunc>
                <Return fromlineno="113" tolineno="113" lineno="113">
                  <Const fromlineno="113" tolineno="113" lineno="113" type="bool">True</Const>
                </Return>
              </If>
            </If>
          </For>
          <If fromlineno="115" tolineno="116" lineno="115">
            <CallFunc fromlineno="115" tolineno="115" lineno="115" func="Name(fetch_uri)">
              <Name fromlineno="115" tolineno="115" lineno="115" name="fetch_uri"/>
              <Name fromlineno="115" tolineno="115" lineno="115" name="uri"/>
              <Name fromlineno="115" tolineno="115" lineno="115" name="ud"/>
              <Name fromlineno="115" tolineno="115" lineno="115" name="localdata"/>
            </CallFunc>
            <Return fromlineno="116" tolineno="116" lineno="116">
              <Const fromlineno="116" tolineno="116" lineno="116" type="bool">True</Const>
            </Return>
          </If>
          <Assign fromlineno="119" tolineno="119" lineno="119" targets="[&lt;AssName(mirrors) l.119 [bb.fetch.wget] at Ox9fe208c&gt;]" value="[i.split() for i in (data.getVar('MIRRORS', localdata, 1)) or ('').split('\n') if i]">
            <AssName fromlineno="119" tolineno="119" lineno="119" name="mirrors"/>
            <ListComp fromlineno="119" tolineno="119" lineno="119">
              <CallFunc fromlineno="119" tolineno="119" lineno="119" func="Getattr(split)">
                <Getattr fromlineno="119" tolineno="119" lineno="119" attrname="split" expr="i">
                  <Name fromlineno="119" tolineno="119" lineno="119" name="i"/>
                </Getattr>
              </CallFunc>
              <Comprehension fromlineno="119" tolineno="119" lineno="None">
                <AssName fromlineno="119" tolineno="119" lineno="119" name="i"/>
                <CallFunc fromlineno="119" tolineno="119" lineno="119" func="Getattr(split)">
                  <Getattr fromlineno="119" tolineno="119" lineno="119" attrname="split" expr="(data.getVar('MIRRORS', localdata, 1)) or ('')">
                    <BoolOp fromlineno="119" tolineno="119" lineno="119" op="or" values="data.getVar('MIRRORS', localdata, 1),'',">
                      <CallFunc fromlineno="119" tolineno="119" lineno="119" func="Getattr(getVar)">
                        <Getattr fromlineno="119" tolineno="119" lineno="119" attrname="getVar" expr="data">
                          <Name fromlineno="119" tolineno="119" lineno="119" name="data"/>
                        </Getattr>
                        <Const fromlineno="119" tolineno="119" lineno="119" type="str">'MIRRORS'</Const>
                        <Name fromlineno="119" tolineno="119" lineno="119" name="localdata"/>
                        <Const fromlineno="119" tolineno="119" lineno="119" type="int">1</Const>
                      </CallFunc>
                      <Const fromlineno="119" tolineno="119" lineno="119" type="str">''</Const>
                    </BoolOp>
                  </Getattr>
                  <Const fromlineno="119" tolineno="119" lineno="119" type="str">'\n'</Const>
                </CallFunc>
                <Name fromlineno="119" tolineno="119" lineno="119" name="i"/>
              </Comprehension>
            </ListComp>
          </Assign>
          <For fromlineno="120" tolineno="124" lineno="120">
            <Tuple fromlineno="120" tolineno="120" lineno="120">
              <AssName fromlineno="120" tolineno="120" lineno="120" name="find"/>
              <AssName fromlineno="120" tolineno="120" lineno="120" name="replace"/>
            </Tuple>
            <Name fromlineno="120" tolineno="120" lineno="120" name="mirrors"/>
            <Assign fromlineno="121" tolineno="121" lineno="121" targets="[&lt;AssName(newuri) l.121 [bb.fetch.wget] at Ox9fe250c&gt;]" value="uri_replace(uri, find, replace, d)">
              <AssName fromlineno="121" tolineno="121" lineno="121" name="newuri"/>
              <CallFunc fromlineno="121" tolineno="121" lineno="121" func="Name(uri_replace)">
                <Name fromlineno="121" tolineno="121" lineno="121" name="uri_replace"/>
                <Name fromlineno="121" tolineno="121" lineno="121" name="uri"/>
                <Name fromlineno="121" tolineno="121" lineno="121" name="find"/>
                <Name fromlineno="121" tolineno="121" lineno="121" name="replace"/>
                <Name fromlineno="121" tolineno="121" lineno="121" name="d"/>
              </CallFunc>
            </Assign>
            <If fromlineno="122" tolineno="124" lineno="122">
              <Compare fromlineno="122" tolineno="122" lineno="122" op="('!=', &lt;Name(uri) l.122 [bb.fetch.wget] at Ox9fe26ac&gt;)">
                <Name fromlineno="122" tolineno="122" lineno="122" name="newuri"/>
                <Name fromlineno="122" tolineno="122" lineno="122" name="uri"/>
              </Compare>
              <If fromlineno="123" tolineno="124" lineno="123">
                <CallFunc fromlineno="123" tolineno="123" lineno="123" func="Name(fetch_uri)">
                  <Name fromlineno="123" tolineno="123" lineno="123" name="fetch_uri"/>
                  <Name fromlineno="123" tolineno="123" lineno="123" name="newuri"/>
                  <Name fromlineno="123" tolineno="123" lineno="123" name="ud"/>
                  <Name fromlineno="123" tolineno="123" lineno="123" name="localdata"/>
                </CallFunc>
                <Return fromlineno="124" tolineno="124" lineno="124">
                  <Const fromlineno="124" tolineno="124" lineno="124" type="bool">True</Const>
                </Return>
              </If>
            </If>
          </For>
          <Raise fromlineno="126" tolineno="126" lineno="126">
            <CallFunc fromlineno="126" tolineno="126" lineno="126" func="Name(FetchError)">
              <Name fromlineno="126" tolineno="126" lineno="126" name="FetchError"/>
              <Name fromlineno="126" tolineno="126" lineno="126" name="uri"/>
            </CallFunc>
          </Raise>
        </Function>
        <Function fromlineno="129" tolineno="130" lineno="129">
          <Arguments fromlineno="129" tolineno="129" lineno="None" format_args="self, uri, ud, d">
            <AssName fromlineno="129" tolineno="129" lineno="129" name="self"/>
            <AssName fromlineno="129" tolineno="129" lineno="129" name="uri"/>
            <AssName fromlineno="129" tolineno="129" lineno="129" name="ud"/>
            <AssName fromlineno="129" tolineno="129" lineno="129" name="d"/>
          </Arguments>
          <Return fromlineno="130" tolineno="130" lineno="130">
            <CallFunc fromlineno="130" tolineno="130" lineno="130" func="Getattr(go)">
              <Getattr fromlineno="130" tolineno="130" lineno="130" attrname="go" expr="self">
                <Name fromlineno="130" tolineno="130" lineno="130" name="self"/>
              </Getattr>
              <Name fromlineno="130" tolineno="130" lineno="130" name="uri"/>
              <Name fromlineno="130" tolineno="130" lineno="130" name="ud"/>
              <Name fromlineno="130" tolineno="130" lineno="130" name="d"/>
              <Const fromlineno="130" tolineno="130" lineno="130" type="bool">True</Const>
            </CallFunc>
          </Return>
        </Function>
      </Class>
    </Module>
    <Module fromlineno="0" tolineno="206" lineno="0" name="bb.fetch.svn">
      <Import fromlineno="26" tolineno="26" lineno="26">
        <ImportName name="os"/>
        <ImportName name="re"/>
      </Import>
      <Import fromlineno="27" tolineno="27" lineno="27">
        <ImportName name="sys"/>
      </Import>
      <Import fromlineno="28" tolineno="28" lineno="28">
        <ImportName name="bb"/>
      </Import>
      <From fromlineno="29" tolineno="29" lineno="29" modname="bb">
        <ImportName name="data"/>
      </From>
      <From fromlineno="30" tolineno="30" lineno="30" modname="bb.fetch">
        <ImportName name="Fetch"/>
      </From>
      <From fromlineno="31" tolineno="31" lineno="31" modname="bb.fetch">
        <ImportName name="FetchError"/>
      </From>
      <From fromlineno="32" tolineno="32" lineno="32" modname="bb.fetch">
        <ImportName name="MissingParameterError"/>
      </From>
      <From fromlineno="33" tolineno="33" lineno="33" modname="bb.fetch">
        <ImportName name="runfetchcmd"/>
      </From>
      <Class fromlineno="35" tolineno="206" lineno="35">
        <Name fromlineno="35" tolineno="35" lineno="35" name="Fetch"/>
        <Function fromlineno="37" tolineno="41" lineno="37">
          <Arguments fromlineno="37" tolineno="37" lineno="None" format_args="self, url, ud, d">
            <AssName fromlineno="37" tolineno="37" lineno="37" name="self"/>
            <AssName fromlineno="37" tolineno="37" lineno="37" name="url"/>
            <AssName fromlineno="37" tolineno="37" lineno="37" name="ud"/>
            <AssName fromlineno="37" tolineno="37" lineno="37" name="d"/>
          </Arguments>
          <Return fromlineno="41" tolineno="41" lineno="41">
            <Compare fromlineno="41" tolineno="41" lineno="41" op="('in', &lt;List(list) l.41 [bb.fetch.svn] at Ox9fee9cc&gt;)">
              <Getattr fromlineno="41" tolineno="41" lineno="41" attrname="type" expr="ud">
                <Name fromlineno="41" tolineno="41" lineno="41" name="ud"/>
              </Getattr>
              <List fromlineno="41" tolineno="41" lineno="41">
                <Const fromlineno="41" tolineno="41" lineno="41" type="str">'svn'</Const>
              </List>
            </Compare>
          </Return>
        </Function>
        <Function fromlineno="43" tolineno="85" lineno="43">
          <Arguments fromlineno="43" tolineno="43" lineno="None" format_args="self, url, ud, d">
            <AssName fromlineno="43" tolineno="43" lineno="43" name="self"/>
            <AssName fromlineno="43" tolineno="43" lineno="43" name="url"/>
            <AssName fromlineno="43" tolineno="43" lineno="43" name="ud"/>
            <AssName fromlineno="43" tolineno="43" lineno="43" name="d"/>
          </Arguments>
          <If fromlineno="44" tolineno="45" lineno="44">
            <UnaryOp fromlineno="44" tolineno="44" lineno="44">
              <Compare fromlineno="44" tolineno="44" lineno="44" op="('in', &lt;Getattr(parm) l.44 [bb.fetch.svn] at Ox9feecac&gt;)">
                <Const fromlineno="44" tolineno="44" lineno="44" type="str">'module'</Const>
                <Getattr fromlineno="44" tolineno="44" lineno="44" attrname="parm" expr="ud">
                  <Name fromlineno="44" tolineno="44" lineno="44" name="ud"/>
                </Getattr>
              </Compare>
            </UnaryOp>
            <Raise fromlineno="45" tolineno="45" lineno="45">
              <CallFunc fromlineno="45" tolineno="45" lineno="45" func="Name(MissingParameterError)">
                <Name fromlineno="45" tolineno="45" lineno="45" name="MissingParameterError"/>
                <Const fromlineno="45" tolineno="45" lineno="45" type="str">"svn method needs a 'module' parameter"</Const>
              </CallFunc>
            </Raise>
          </If>
          <Assign fromlineno="47" tolineno="47" lineno="47" targets="[&lt;AssAttr(module) l.47 [bb.fetch.svn] at Ox9feee0c&gt;]" value="ud.parm['module']">
            <AssAttr fromlineno="47" tolineno="47" lineno="47" attrname="module" expr="ud">
              <Name fromlineno="47" tolineno="47" lineno="47" name="ud"/>
            </AssAttr>
            <Subscript fromlineno="47" tolineno="47" lineno="47">
              <Getattr fromlineno="47" tolineno="47" lineno="47" attrname="parm" expr="ud">
                <Name fromlineno="47" tolineno="47" lineno="47" name="ud"/>
              </Getattr>
              <Index fromlineno="47" tolineno="47" lineno="None">
                <Const fromlineno="47" tolineno="47" lineno="47" type="str">'module'</Const>
              </Index>
            </Subscript>
          </Assign>
          <Assign fromlineno="50" tolineno="50" lineno="50" targets="[&lt;AssName(relpath) l.50 [bb.fetch.svn] at Ox9feef2c&gt;]" value="ud.path">
            <AssName fromlineno="50" tolineno="50" lineno="50" name="relpath"/>
            <Getattr fromlineno="50" tolineno="50" lineno="50" attrname="path" expr="ud">
              <Name fromlineno="50" tolineno="50" lineno="50" name="ud"/>
            </Getattr>
          </Assign>
          <If fromlineno="51" tolineno="53" lineno="51">
            <CallFunc fromlineno="51" tolineno="51" lineno="51" func="Getattr(startswith)">
              <Getattr fromlineno="51" tolineno="51" lineno="51" attrname="startswith" expr="relpath">
                <Name fromlineno="51" tolineno="51" lineno="51" name="relpath"/>
              </Getattr>
              <Const fromlineno="51" tolineno="51" lineno="51" type="str">'/'</Const>
            </CallFunc>
            <Assign fromlineno="53" tolineno="53" lineno="53" targets="[&lt;AssName(relpath) l.53 [bb.fetch.svn] at Ox9ff210c&gt;]" value="relpath[1:]">
              <AssName fromlineno="53" tolineno="53" lineno="53" name="relpath"/>
              <Subscript fromlineno="53" tolineno="53" lineno="53">
                <Name fromlineno="53" tolineno="53" lineno="53" name="relpath"/>
                <Slice fromlineno="53" tolineno="53" lineno="None">
                  <Const fromlineno="53" tolineno="53" lineno="53" type="int">1</Const>
                </Slice>
              </Subscript>
            </Assign>
          </If>
          <Assign fromlineno="54" tolineno="54" lineno="54" targets="[&lt;AssAttr(pkgdir) l.54 [bb.fetch.svn] at Ox9ff21ec&gt;]" value="os.path.join(data.expand('${SVNDIR}', d), ud.host, relpath)">
            <AssAttr fromlineno="54" tolineno="54" lineno="54" attrname="pkgdir" expr="ud">
              <Name fromlineno="54" tolineno="54" lineno="54" name="ud"/>
            </AssAttr>
            <CallFunc fromlineno="54" tolineno="54" lineno="54" func="Getattr(join)">
              <Getattr fromlineno="54" tolineno="54" lineno="54" attrname="join" expr="os.path">
                <Getattr fromlineno="54" tolineno="54" lineno="54" attrname="path" expr="os">
                  <Name fromlineno="54" tolineno="54" lineno="54" name="os"/>
                </Getattr>
              </Getattr>
              <CallFunc fromlineno="54" tolineno="54" lineno="54" func="Getattr(expand)">
                <Getattr fromlineno="54" tolineno="54" lineno="54" attrname="expand" expr="data">
                  <Name fromlineno="54" tolineno="54" lineno="54" name="data"/>
                </Getattr>
                <Const fromlineno="54" tolineno="54" lineno="54" type="str">'${SVNDIR}'</Const>
                <Name fromlineno="54" tolineno="54" lineno="54" name="d"/>
              </CallFunc>
              <Getattr fromlineno="54" tolineno="54" lineno="54" attrname="host" expr="ud">
                <Name fromlineno="54" tolineno="54" lineno="54" name="ud"/>
              </Getattr>
              <Name fromlineno="54" tolineno="54" lineno="54" name="relpath"/>
            </CallFunc>
          </Assign>
          <Assign fromlineno="55" tolineno="55" lineno="55" targets="[&lt;AssAttr(moddir) l.55 [bb.fetch.svn] at Ox9ff242c&gt;]" value="os.path.join(ud.pkgdir, ud.module)">
            <AssAttr fromlineno="55" tolineno="55" lineno="55" attrname="moddir" expr="ud">
              <Name fromlineno="55" tolineno="55" lineno="55" name="ud"/>
            </AssAttr>
            <CallFunc fromlineno="55" tolineno="55" lineno="55" func="Getattr(join)">
              <Getattr fromlineno="55" tolineno="55" lineno="55" attrname="join" expr="os.path">
                <Getattr fromlineno="55" tolineno="55" lineno="55" attrname="path" expr="os">
                  <Name fromlineno="55" tolineno="55" lineno="55" name="os"/>
                </Getattr>
              </Getattr>
              <Getattr fromlineno="55" tolineno="55" lineno="55" attrname="pkgdir" expr="ud">
                <Name fromlineno="55" tolineno="55" lineno="55" name="ud"/>
              </Getattr>
              <Getattr fromlineno="55" tolineno="55" lineno="55" attrname="module" expr="ud">
                <Name fromlineno="55" tolineno="55" lineno="55" name="ud"/>
              </Getattr>
            </CallFunc>
          </Assign>
          <If fromlineno="57" tolineno="81" lineno="57">
            <Compare fromlineno="57" tolineno="57" lineno="57" op="('in', &lt;Getattr(parm) l.57 [bb.fetch.svn] at Ox9ff262c&gt;)">
              <Const fromlineno="57" tolineno="57" lineno="57" type="str">'rev'</Const>
              <Getattr fromlineno="57" tolineno="57" lineno="57" attrname="parm" expr="ud">
                <Name fromlineno="57" tolineno="57" lineno="57" name="ud"/>
              </Getattr>
            </Compare>
            <Assign fromlineno="58" tolineno="58" lineno="58" targets="[&lt;AssAttr(date) l.58 [bb.fetch.svn] at Ox9ff26ec&gt;]" value="''">
              <AssAttr fromlineno="58" tolineno="58" lineno="58" attrname="date" expr="ud">
                <Name fromlineno="58" tolineno="58" lineno="58" name="ud"/>
              </AssAttr>
              <Const fromlineno="58" tolineno="58" lineno="58" type="str">''</Const>
            </Assign>
            <Assign fromlineno="59" tolineno="59" lineno="59" targets="[&lt;AssAttr(revision) l.59 [bb.fetch.svn] at Ox9ff278c&gt;]" value="ud.parm['rev']">
              <AssAttr fromlineno="59" tolineno="59" lineno="59" attrname="revision" expr="ud">
                <Name fromlineno="59" tolineno="59" lineno="59" name="ud"/>
              </AssAttr>
              <Subscript fromlineno="59" tolineno="59" lineno="59">
                <Getattr fromlineno="59" tolineno="59" lineno="59" attrname="parm" expr="ud">
                  <Name fromlineno="59" tolineno="59" lineno="59" name="ud"/>
                </Getattr>
                <Index fromlineno="59" tolineno="59" lineno="None">
                  <Const fromlineno="59" tolineno="59" lineno="59" type="str">'rev'</Const>
                </Index>
              </Subscript>
            </Assign>
            <If fromlineno="60" tolineno="81" lineno="60">
              <Compare fromlineno="60" tolineno="60" lineno="60" op="('in', &lt;Getattr(date) l.60 [bb.fetch.svn] at Ox9ff294c&gt;)">
                <Const fromlineno="60" tolineno="60" lineno="60" type="str">'date'</Const>
                <Getattr fromlineno="60" tolineno="60" lineno="60" attrname="date" expr="ud">
                  <Name fromlineno="60" tolineno="60" lineno="60" name="ud"/>
                </Getattr>
              </Compare>
              <Assign fromlineno="61" tolineno="61" lineno="61" targets="[&lt;AssAttr(date) l.61 [bb.fetch.svn] at Ox9ff2a0c&gt;]" value="ud.parm['date']">
                <AssAttr fromlineno="61" tolineno="61" lineno="61" attrname="date" expr="ud">
                  <Name fromlineno="61" tolineno="61" lineno="61" name="ud"/>
                </AssAttr>
                <Subscript fromlineno="61" tolineno="61" lineno="61">
                  <Getattr fromlineno="61" tolineno="61" lineno="61" attrname="parm" expr="ud">
                    <Name fromlineno="61" tolineno="61" lineno="61" name="ud"/>
                  </Getattr>
                  <Index fromlineno="61" tolineno="61" lineno="None">
                    <Const fromlineno="61" tolineno="61" lineno="61" type="str">'date'</Const>
                  </Index>
                </Subscript>
              </Assign>
              <Assign fromlineno="62" tolineno="62" lineno="62" targets="[&lt;AssAttr(revision) l.62 [bb.fetch.svn] at Ox9ff2b2c&gt;]" value="''">
                <AssAttr fromlineno="62" tolineno="62" lineno="62" attrname="revision" expr="ud">
                  <Name fromlineno="62" tolineno="62" lineno="62" name="ud"/>
                </AssAttr>
                <Const fromlineno="62" tolineno="62" lineno="62" type="str">''</Const>
              </Assign>
              <Assign fromlineno="69" tolineno="69" lineno="69" targets="[&lt;AssName(pv) l.69 [bb.fetch.svn] at Ox9ff2bec&gt;]" value="data.getVar('PV', d, 0)">
                <AssName fromlineno="69" tolineno="69" lineno="69" name="pv"/>
                <CallFunc fromlineno="69" tolineno="69" lineno="69" func="Getattr(getVar)">
                  <Getattr fromlineno="69" tolineno="69" lineno="69" attrname="getVar" expr="data">
                    <Name fromlineno="69" tolineno="69" lineno="69" name="data"/>
                  </Getattr>
                  <Const fromlineno="69" tolineno="69" lineno="69" type="str">'PV'</Const>
                  <Name fromlineno="69" tolineno="69" lineno="69" name="d"/>
                  <Const fromlineno="69" tolineno="69" lineno="69" type="int">0</Const>
                </CallFunc>
              </Assign>
              <If fromlineno="70" tolineno="81" lineno="70">
                <Compare fromlineno="70" tolineno="70" lineno="70" op="('in', &lt;Name(pv) l.70 [bb.fetch.svn] at Ox9ff2dcc&gt;)">
                  <Const fromlineno="70" tolineno="70" lineno="70" type="str">'DATE'</Const>
                  <Name fromlineno="70" tolineno="70" lineno="70" name="pv"/>
                </Compare>
                <Assign fromlineno="71" tolineno="71" lineno="71" targets="[&lt;AssAttr(revision) l.71 [bb.fetch.svn] at Ox9ff2e6c&gt;]" value="''">
                  <AssAttr fromlineno="71" tolineno="71" lineno="71" attrname="revision" expr="ud">
                    <Name fromlineno="71" tolineno="71" lineno="71" name="ud"/>
                  </AssAttr>
                  <Const fromlineno="71" tolineno="71" lineno="71" type="str">''</Const>
                </Assign>
                <Assign fromlineno="73" tolineno="73" lineno="73" targets="[&lt;AssName(rev) l.73 [bb.fetch.svn] at Ox9ff2f2c&gt;]" value="Fetch.srcrev_internal_helper(ud, d)">
                  <AssName fromlineno="73" tolineno="73" lineno="73" name="rev"/>
                  <CallFunc fromlineno="73" tolineno="73" lineno="73" func="Getattr(srcrev_internal_helper)">
                    <Getattr fromlineno="73" tolineno="73" lineno="73" attrname="srcrev_internal_helper" expr="Fetch">
                      <Name fromlineno="73" tolineno="73" lineno="73" name="Fetch"/>
                    </Getattr>
                    <Name fromlineno="73" tolineno="73" lineno="73" name="ud"/>
                    <Name fromlineno="73" tolineno="73" lineno="73" name="d"/>
                  </CallFunc>
                </Assign>
                <If fromlineno="74" tolineno="81" lineno="74">
                  <Compare fromlineno="74" tolineno="74" lineno="74" op="('is', &lt;Const(bool) l.74 [bb.fetch.svn] at Ox9ff610c&gt;)">
                    <Name fromlineno="74" tolineno="74" lineno="74" name="rev"/>
                    <Const fromlineno="74" tolineno="74" lineno="74" type="bool">True</Const>
                  </Compare>
                  <Assign fromlineno="75" tolineno="75" lineno="75" targets="[&lt;AssAttr(revision) l.75 [bb.fetch.svn] at Ox9ff61ac&gt;]" value="self.latest_revision(url, ud, d)">
                    <AssAttr fromlineno="75" tolineno="75" lineno="75" attrname="revision" expr="ud">
                      <Name fromlineno="75" tolineno="75" lineno="75" name="ud"/>
                    </AssAttr>
                    <CallFunc fromlineno="75" tolineno="75" lineno="75" func="Getattr(latest_revision)">
                      <Getattr fromlineno="75" tolineno="75" lineno="75" attrname="latest_revision" expr="self">
                        <Name fromlineno="75" tolineno="75" lineno="75" name="self"/>
                      </Getattr>
                      <Name fromlineno="75" tolineno="75" lineno="75" name="url"/>
                      <Name fromlineno="75" tolineno="75" lineno="75" name="ud"/>
                      <Name fromlineno="75" tolineno="75" lineno="75" name="d"/>
                    </CallFunc>
                  </Assign>
                  <Assign fromlineno="76" tolineno="76" lineno="76" targets="[&lt;AssAttr(date) l.76 [bb.fetch.svn] at Ox9ff630c&gt;]" value="''">
                    <AssAttr fromlineno="76" tolineno="76" lineno="76" attrname="date" expr="ud">
                      <Name fromlineno="76" tolineno="76" lineno="76" name="ud"/>
                    </AssAttr>
                    <Const fromlineno="76" tolineno="76" lineno="76" type="str">''</Const>
                  </Assign>
                  <If fromlineno="77" tolineno="81" lineno="77">
                    <Name fromlineno="77" tolineno="77" lineno="77" name="rev"/>
                    <Assign fromlineno="78" tolineno="78" lineno="78" targets="[&lt;AssAttr(revision) l.78 [bb.fetch.svn] at Ox9ff646c&gt;]" value="rev">
                      <AssAttr fromlineno="78" tolineno="78" lineno="78" attrname="revision" expr="ud">
                        <Name fromlineno="78" tolineno="78" lineno="78" name="ud"/>
                      </AssAttr>
                      <Name fromlineno="78" tolineno="78" lineno="78" name="rev"/>
                    </Assign>
                    <Assign fromlineno="79" tolineno="79" lineno="79" targets="[&lt;AssAttr(date) l.79 [bb.fetch.svn] at Ox9ff650c&gt;]" value="''">
                      <AssAttr fromlineno="79" tolineno="79" lineno="79" attrname="date" expr="ud">
                        <Name fromlineno="79" tolineno="79" lineno="79" name="ud"/>
                      </AssAttr>
                      <Const fromlineno="79" tolineno="79" lineno="79" type="str">''</Const>
                    </Assign>
                    <Assign fromlineno="81" tolineno="81" lineno="81" targets="[&lt;AssAttr(revision) l.81 [bb.fetch.svn] at Ox9ff65cc&gt;]" value="''">
                      <AssAttr fromlineno="81" tolineno="81" lineno="81" attrname="revision" expr="ud">
                        <Name fromlineno="81" tolineno="81" lineno="81" name="ud"/>
                      </AssAttr>
                      <Const fromlineno="81" tolineno="81" lineno="81" type="str">''</Const>
                    </Assign>
                  </If>
                </If>
              </If>
            </If>
          </If>
          <Assign fromlineno="83" tolineno="83" lineno="83" targets="[&lt;AssAttr(localfile) l.83 [bb.fetch.svn] at Ox9ff2b6c&gt;]" value="data.expand(('%s_%s_%s_%s_%s.tar.gz') % ((ud.module.replace('/', '.'), ud.host, ud.path.replace('/', '.'), ud.revision, ud.date)), d)">
            <AssAttr fromlineno="83" tolineno="83" lineno="83" attrname="localfile" expr="ud">
              <Name fromlineno="83" tolineno="83" lineno="83" name="ud"/>
            </AssAttr>
            <CallFunc fromlineno="83" tolineno="83" lineno="83" func="Getattr(expand)">
              <Getattr fromlineno="83" tolineno="83" lineno="83" attrname="expand" expr="data">
                <Name fromlineno="83" tolineno="83" lineno="83" name="data"/>
              </Getattr>
              <BinOp fromlineno="83" tolineno="83" lineno="83" op="%" left="'%s_%s_%s_%s_%s.tar.gz'" right="(ud.module.replace('/', '.'), ud.host, ud.path.replace('/', '.'), ud.revision, ud.date)">
                <Const fromlineno="83" tolineno="83" lineno="83" type="str">'%s_%s_%s_%s_%s.tar.gz'</Const>
                <Tuple fromlineno="83" tolineno="83" lineno="83">
                  <CallFunc fromlineno="83" tolineno="83" lineno="83" func="Getattr(replace)">
                    <Getattr fromlineno="83" tolineno="83" lineno="83" attrname="replace" expr="ud.module">
                      <Getattr fromlineno="83" tolineno="83" lineno="83" attrname="module" expr="ud">
                        <Name fromlineno="83" tolineno="83" lineno="83" name="ud"/>
                      </Getattr>
                    </Getattr>
                    <Const fromlineno="83" tolineno="83" lineno="83" type="str">'/'</Const>
                    <Const fromlineno="83" tolineno="83" lineno="83" type="str">'.'</Const>
                  </CallFunc>
                  <Getattr fromlineno="83" tolineno="83" lineno="83" attrname="host" expr="ud">
                    <Name fromlineno="83" tolineno="83" lineno="83" name="ud"/>
                  </Getattr>
                  <CallFunc fromlineno="83" tolineno="83" lineno="83" func="Getattr(replace)">
                    <Getattr fromlineno="83" tolineno="83" lineno="83" attrname="replace" expr="ud.path">
                      <Getattr fromlineno="83" tolineno="83" lineno="83" attrname="path" expr="ud">
                        <Name fromlineno="83" tolineno="83" lineno="83" name="ud"/>
                      </Getattr>
                    </Getattr>
                    <Const fromlineno="83" tolineno="83" lineno="83" type="str">'/'</Const>
                    <Const fromlineno="83" tolineno="83" lineno="83" type="str">'.'</Const>
                  </CallFunc>
                  <Getattr fromlineno="83" tolineno="83" lineno="83" attrname="revision" expr="ud">
                    <Name fromlineno="83" tolineno="83" lineno="83" name="ud"/>
                  </Getattr>
                  <Getattr fromlineno="83" tolineno="83" lineno="83" attrname="date" expr="ud">
                    <Name fromlineno="83" tolineno="83" lineno="83" name="ud"/>
                  </Getattr>
                </Tuple>
              </BinOp>
              <Name fromlineno="83" tolineno="83" lineno="83" name="d"/>
            </CallFunc>
          </Assign>
          <Return fromlineno="85" tolineno="85" lineno="85">
            <CallFunc fromlineno="85" tolineno="85" lineno="85" func="Getattr(join)">
              <Getattr fromlineno="85" tolineno="85" lineno="85" attrname="join" expr="os.path">
                <Getattr fromlineno="85" tolineno="85" lineno="85" attrname="path" expr="os">
                  <Name fromlineno="85" tolineno="85" lineno="85" name="os"/>
                </Getattr>
              </Getattr>
              <CallFunc fromlineno="85" tolineno="85" lineno="85" func="Getattr(getVar)">
                <Getattr fromlineno="85" tolineno="85" lineno="85" attrname="getVar" expr="data">
                  <Name fromlineno="85" tolineno="85" lineno="85" name="data"/>
                </Getattr>
                <Const fromlineno="85" tolineno="85" lineno="85" type="str">'DL_DIR'</Const>
                <Name fromlineno="85" tolineno="85" lineno="85" name="d"/>
                <Const fromlineno="85" tolineno="85" lineno="85" type="bool">True</Const>
              </CallFunc>
              <Getattr fromlineno="85" tolineno="85" lineno="85" attrname="localfile" expr="ud">
                <Name fromlineno="85" tolineno="85" lineno="85" name="ud"/>
              </Getattr>
            </CallFunc>
          </Return>
        </Function>
        <Function fromlineno="87" tolineno="134" lineno="87">
          <Arguments fromlineno="87" tolineno="87" lineno="None" format_args="self, ud, d, command">
            <AssName fromlineno="87" tolineno="87" lineno="87" name="self"/>
            <AssName fromlineno="87" tolineno="87" lineno="87" name="ud"/>
            <AssName fromlineno="87" tolineno="87" lineno="87" name="d"/>
            <AssName fromlineno="87" tolineno="87" lineno="87" name="command"/>
          </Arguments>
          <Assign fromlineno="93" tolineno="93" lineno="93" targets="[&lt;AssName(basecmd) l.93 [bb.fetch.svn] at Ox9ff6ccc&gt;]" value="data.expand('${FETCHCMD_svn}', d)">
            <AssName fromlineno="93" tolineno="93" lineno="93" name="basecmd"/>
            <CallFunc fromlineno="93" tolineno="93" lineno="93" func="Getattr(expand)">
              <Getattr fromlineno="93" tolineno="93" lineno="93" attrname="expand" expr="data">
                <Name fromlineno="93" tolineno="93" lineno="93" name="data"/>
              </Getattr>
              <Const fromlineno="93" tolineno="93" lineno="93" type="str">'${FETCHCMD_svn}'</Const>
              <Name fromlineno="93" tolineno="93" lineno="93" name="d"/>
            </CallFunc>
          </Assign>
          <Assign fromlineno="95" tolineno="95" lineno="95" targets="[&lt;AssName(proto) l.95 [bb.fetch.svn] at Ox9ff6e0c&gt;]" value="'svn'">
            <AssName fromlineno="95" tolineno="95" lineno="95" name="proto"/>
            <Const fromlineno="95" tolineno="95" lineno="95" type="str">'svn'</Const>
          </Assign>
          <If fromlineno="96" tolineno="97" lineno="96">
            <Compare fromlineno="96" tolineno="96" lineno="96" op="('in', &lt;Getattr(parm) l.96 [bb.fetch.svn] at Ox9ff6f0c&gt;)">
              <Const fromlineno="96" tolineno="96" lineno="96" type="str">'proto'</Const>
              <Getattr fromlineno="96" tolineno="96" lineno="96" attrname="parm" expr="ud">
                <Name fromlineno="96" tolineno="96" lineno="96" name="ud"/>
              </Getattr>
            </Compare>
            <Assign fromlineno="97" tolineno="97" lineno="97" targets="[&lt;AssName(proto) l.97 [bb.fetch.svn] at Ox9ff6fcc&gt;]" value="ud.parm['proto']">
              <AssName fromlineno="97" tolineno="97" lineno="97" name="proto"/>
              <Subscript fromlineno="97" tolineno="97" lineno="97">
                <Getattr fromlineno="97" tolineno="97" lineno="97" attrname="parm" expr="ud">
                  <Name fromlineno="97" tolineno="97" lineno="97" name="ud"/>
                </Getattr>
                <Index fromlineno="97" tolineno="97" lineno="None">
                  <Const fromlineno="97" tolineno="97" lineno="97" type="str">'proto'</Const>
                </Index>
              </Subscript>
            </Assign>
          </If>
          <Assign fromlineno="99" tolineno="99" lineno="99" targets="[&lt;AssName(svn_rsh) l.99 [bb.fetch.svn] at Ox9ffa0ec&gt;]" value="None">
            <AssName fromlineno="99" tolineno="99" lineno="99" name="svn_rsh"/>
            <Const fromlineno="99" tolineno="99" lineno="99" type="NoneType">None</Const>
          </Assign>
          <If fromlineno="100" tolineno="101" lineno="100">
            <BoolOp fromlineno="100" tolineno="100" lineno="100" op="and" values="proto == 'svn+ssh','rsh' in ud.parm,">
              <Compare fromlineno="100" tolineno="100" lineno="100" op="('==', &lt;Const(str) l.100 [bb.fetch.svn] at Ox9ffa24c&gt;)">
                <Name fromlineno="100" tolineno="100" lineno="100" name="proto"/>
                <Const fromlineno="100" tolineno="100" lineno="100" type="str">'svn+ssh'</Const>
              </Compare>
              <Compare fromlineno="100" tolineno="100" lineno="100" op="('in', &lt;Getattr(parm) l.100 [bb.fetch.svn] at Ox9ffa2ec&gt;)">
                <Const fromlineno="100" tolineno="100" lineno="100" type="str">'rsh'</Const>
                <Getattr fromlineno="100" tolineno="100" lineno="100" attrname="parm" expr="ud">
                  <Name fromlineno="100" tolineno="100" lineno="100" name="ud"/>
                </Getattr>
              </Compare>
            </BoolOp>
            <Assign fromlineno="101" tolineno="101" lineno="101" targets="[&lt;AssName(svn_rsh) l.101 [bb.fetch.svn] at Ox9ffa38c&gt;]" value="ud.parm['rsh']">
              <AssName fromlineno="101" tolineno="101" lineno="101" name="svn_rsh"/>
              <Subscript fromlineno="101" tolineno="101" lineno="101">
                <Getattr fromlineno="101" tolineno="101" lineno="101" attrname="parm" expr="ud">
                  <Name fromlineno="101" tolineno="101" lineno="101" name="ud"/>
                </Getattr>
                <Index fromlineno="101" tolineno="101" lineno="None">
                  <Const fromlineno="101" tolineno="101" lineno="101" type="str">'rsh'</Const>
                </Index>
              </Subscript>
            </Assign>
          </If>
          <Assign fromlineno="103" tolineno="103" lineno="103" targets="[&lt;AssName(svnroot) l.103 [bb.fetch.svn] at Ox9ffa48c&gt;]" value="(ud.host) + (ud.path)">
            <AssName fromlineno="103" tolineno="103" lineno="103" name="svnroot"/>
            <BinOp fromlineno="103" tolineno="103" lineno="103" op="+" left="ud.host" right="ud.path">
              <Getattr fromlineno="103" tolineno="103" lineno="103" attrname="host" expr="ud">
                <Name fromlineno="103" tolineno="103" lineno="103" name="ud"/>
              </Getattr>
              <Getattr fromlineno="103" tolineno="103" lineno="103" attrname="path" expr="ud">
                <Name fromlineno="103" tolineno="103" lineno="103" name="ud"/>
              </Getattr>
            </BinOp>
          </Assign>
          <Assign fromlineno="106" tolineno="106" lineno="106" targets="[&lt;AssName(options) l.106 [bb.fetch.svn] at Ox9ffa5ac&gt;]" value="[]">
            <AssName fromlineno="106" tolineno="106" lineno="106" name="options"/>
            <List fromlineno="106" tolineno="106" lineno="106"/>
          </Assign>
          <If fromlineno="108" tolineno="109" lineno="108">
            <Getattr fromlineno="108" tolineno="108" lineno="108" attrname="user" expr="ud">
              <Name fromlineno="108" tolineno="108" lineno="108" name="ud"/>
            </Getattr>
            <Discard fromlineno="109" tolineno="109" lineno="109">
              <CallFunc fromlineno="109" tolineno="109" lineno="109" func="Getattr(append)">
                <Getattr fromlineno="109" tolineno="109" lineno="109" attrname="append" expr="options">
                  <Name fromlineno="109" tolineno="109" lineno="109" name="options"/>
                </Getattr>
                <BinOp fromlineno="109" tolineno="109" lineno="109" op="%" left="'--username %s'" right="ud.user">
                  <Const fromlineno="109" tolineno="109" lineno="109" type="str">'--username %s'</Const>
                  <Getattr fromlineno="109" tolineno="109" lineno="109" attrname="user" expr="ud">
                    <Name fromlineno="109" tolineno="109" lineno="109" name="ud"/>
                  </Getattr>
                </BinOp>
              </CallFunc>
            </Discard>
          </If>
          <If fromlineno="111" tolineno="112" lineno="111">
            <Getattr fromlineno="111" tolineno="111" lineno="111" attrname="pswd" expr="ud">
              <Name fromlineno="111" tolineno="111" lineno="111" name="ud"/>
            </Getattr>
            <Discard fromlineno="112" tolineno="112" lineno="112">
              <CallFunc fromlineno="112" tolineno="112" lineno="112" func="Getattr(append)">
                <Getattr fromlineno="112" tolineno="112" lineno="112" attrname="append" expr="options">
                  <Name fromlineno="112" tolineno="112" lineno="112" name="options"/>
                </Getattr>
                <BinOp fromlineno="112" tolineno="112" lineno="112" op="%" left="'--password %s'" right="ud.pswd">
                  <Const fromlineno="112" tolineno="112" lineno="112" type="str">'--password %s'</Const>
                  <Getattr fromlineno="112" tolineno="112" lineno="112" attrname="pswd" expr="ud">
                    <Name fromlineno="112" tolineno="112" lineno="112" name="ud"/>
                  </Getattr>
                </BinOp>
              </CallFunc>
            </Discard>
          </If>
          <If fromlineno="114" tolineno="129" lineno="114">
            <Compare fromlineno="114" tolineno="114" lineno="114" op="('is', &lt;Const(str) l.114 [bb.fetch.svn] at Ox9ffaa4c&gt;)">
              <Name fromlineno="114" tolineno="114" lineno="114" name="command"/>
              <Const fromlineno="114" tolineno="114" lineno="114" type="str">'info'</Const>
            </Compare>
            <Assign fromlineno="115" tolineno="115" lineno="115" targets="[&lt;AssName(svncmd) l.115 [bb.fetch.svn] at Ox9ffaaec&gt;]" value="('%s info %s %s://%s/%s/') % ((basecmd, ' '.join(options), proto, svnroot, ud.module))">
              <AssName fromlineno="115" tolineno="115" lineno="115" name="svncmd"/>
              <BinOp fromlineno="115" tolineno="115" lineno="115" op="%" left="'%s info %s %s://%s/%s/'" right="(basecmd, ' '.join(options), proto, svnroot, ud.module)">
                <Const fromlineno="115" tolineno="115" lineno="115" type="str">'%s info %s %s://%s/%s/'</Const>
                <Tuple fromlineno="115" tolineno="115" lineno="115">
                  <Name fromlineno="115" tolineno="115" lineno="115" name="basecmd"/>
                  <CallFunc fromlineno="115" tolineno="115" lineno="115" func="Getattr(join)">
                    <Getattr fromlineno="115" tolineno="115" lineno="115" attrname="join" expr="' '">
                      <Const fromlineno="115" tolineno="115" lineno="115" type="str">' '</Const>
                    </Getattr>
                    <Name fromlineno="115" tolineno="115" lineno="115" name="options"/>
                  </CallFunc>
                  <Name fromlineno="115" tolineno="115" lineno="115" name="proto"/>
                  <Name fromlineno="115" tolineno="115" lineno="115" name="svnroot"/>
                  <Getattr fromlineno="115" tolineno="115" lineno="115" attrname="module" expr="ud">
                    <Name fromlineno="115" tolineno="115" lineno="115" name="ud"/>
                  </Getattr>
                </Tuple>
              </BinOp>
            </Assign>
            <Assign fromlineno="117" tolineno="117" lineno="117" targets="[&lt;AssName(suffix) l.117 [bb.fetch.svn] at Ox9ffad4c&gt;]" value="''">
              <AssName fromlineno="117" tolineno="117" lineno="117" name="suffix"/>
              <Const fromlineno="117" tolineno="117" lineno="117" type="str">''</Const>
            </Assign>
            <If fromlineno="118" tolineno="122" lineno="118">
              <Getattr fromlineno="118" tolineno="118" lineno="118" attrname="revision" expr="ud">
                <Name fromlineno="118" tolineno="118" lineno="118" name="ud"/>
              </Getattr>
              <Discard fromlineno="119" tolineno="119" lineno="119">
                <CallFunc fromlineno="119" tolineno="119" lineno="119" func="Getattr(append)">
                  <Getattr fromlineno="119" tolineno="119" lineno="119" attrname="append" expr="options">
                    <Name fromlineno="119" tolineno="119" lineno="119" name="options"/>
                  </Getattr>
                  <BinOp fromlineno="119" tolineno="119" lineno="119" op="%" left="'-r %s'" right="ud.revision">
                    <Const fromlineno="119" tolineno="119" lineno="119" type="str">'-r %s'</Const>
                    <Getattr fromlineno="119" tolineno="119" lineno="119" attrname="revision" expr="ud">
                      <Name fromlineno="119" tolineno="119" lineno="119" name="ud"/>
                    </Getattr>
                  </BinOp>
                </CallFunc>
              </Discard>
              <Assign fromlineno="120" tolineno="120" lineno="120" targets="[&lt;AssName(suffix) l.120 [bb.fetch.svn] at Ox9ffafcc&gt;]" value="('@%s') % (ud.revision)">
                <AssName fromlineno="120" tolineno="120" lineno="120" name="suffix"/>
                <BinOp fromlineno="120" tolineno="120" lineno="120" op="%" left="'@%s'" right="ud.revision">
                  <Const fromlineno="120" tolineno="120" lineno="120" type="str">'@%s'</Const>
                  <Getattr fromlineno="120" tolineno="120" lineno="120" attrname="revision" expr="ud">
                    <Name fromlineno="120" tolineno="120" lineno="120" name="ud"/>
                  </Getattr>
                </BinOp>
              </Assign>
              <If fromlineno="121" tolineno="122" lineno="121">
                <Getattr fromlineno="121" tolineno="121" lineno="121" attrname="date" expr="ud">
                  <Name fromlineno="121" tolineno="121" lineno="121" name="ud"/>
                </Getattr>
                <Discard fromlineno="122" tolineno="122" lineno="122">
                  <CallFunc fromlineno="122" tolineno="122" lineno="122" func="Getattr(append)">
                    <Getattr fromlineno="122" tolineno="122" lineno="122" attrname="append" expr="options">
                      <Name fromlineno="122" tolineno="122" lineno="122" name="options"/>
                    </Getattr>
                    <BinOp fromlineno="122" tolineno="122" lineno="122" op="%" left="'-r {%s}'" right="ud.date">
                      <Const fromlineno="122" tolineno="122" lineno="122" type="str">'-r {%s}'</Const>
                      <Getattr fromlineno="122" tolineno="122" lineno="122" attrname="date" expr="ud">
                        <Name fromlineno="122" tolineno="122" lineno="122" name="ud"/>
                      </Getattr>
                    </BinOp>
                  </CallFunc>
                </Discard>
              </If>
            </If>
            <If fromlineno="124" tolineno="129" lineno="124">
              <Compare fromlineno="124" tolineno="124" lineno="124" op="('is', &lt;Const(str) l.124 [bb.fetch.svn] at Ox9fff2ec&gt;)">
                <Name fromlineno="124" tolineno="124" lineno="124" name="command"/>
                <Const fromlineno="124" tolineno="124" lineno="124" type="str">'fetch'</Const>
              </Compare>
              <Assign fromlineno="125" tolineno="125" lineno="125" targets="[&lt;AssName(svncmd) l.125 [bb.fetch.svn] at Ox9fff38c&gt;]" value="('%s co %s %s://%s/%s%s %s') % ((basecmd, ' '.join(options), proto, svnroot, ud.module, suffix, ud.module))">
                <AssName fromlineno="125" tolineno="125" lineno="125" name="svncmd"/>
                <BinOp fromlineno="125" tolineno="125" lineno="125" op="%" left="'%s co %s %s://%s/%s%s %s'" right="(basecmd, ' '.join(options), proto, svnroot, ud.module, suffix, ud.module)">
                  <Const fromlineno="125" tolineno="125" lineno="125" type="str">'%s co %s %s://%s/%s%s %s'</Const>
                  <Tuple fromlineno="125" tolineno="125" lineno="125">
                    <Name fromlineno="125" tolineno="125" lineno="125" name="basecmd"/>
                    <CallFunc fromlineno="125" tolineno="125" lineno="125" func="Getattr(join)">
                      <Getattr fromlineno="125" tolineno="125" lineno="125" attrname="join" expr="' '">
                        <Const fromlineno="125" tolineno="125" lineno="125" type="str">' '</Const>
                      </Getattr>
                      <Name fromlineno="125" tolineno="125" lineno="125" name="options"/>
                    </CallFunc>
                    <Name fromlineno="125" tolineno="125" lineno="125" name="proto"/>
                    <Name fromlineno="125" tolineno="125" lineno="125" name="svnroot"/>
                    <Getattr fromlineno="125" tolineno="125" lineno="125" attrname="module" expr="ud">
                      <Name fromlineno="125" tolineno="125" lineno="125" name="ud"/>
                    </Getattr>
                    <Name fromlineno="125" tolineno="125" lineno="125" name="suffix"/>
                    <Getattr fromlineno="125" tolineno="125" lineno="125" attrname="module" expr="ud">
                      <Name fromlineno="125" tolineno="125" lineno="125" name="ud"/>
                    </Getattr>
                  </Tuple>
                </BinOp>
              </Assign>
              <If fromlineno="126" tolineno="129" lineno="126">
                <Compare fromlineno="126" tolineno="126" lineno="126" op="('is', &lt;Const(str) l.126 [bb.fetch.svn] at Ox9fff6ac&gt;)">
                  <Name fromlineno="126" tolineno="126" lineno="126" name="command"/>
                  <Const fromlineno="126" tolineno="126" lineno="126" type="str">'update'</Const>
                </Compare>
                <Assign fromlineno="127" tolineno="127" lineno="127" targets="[&lt;AssName(svncmd) l.127 [bb.fetch.svn] at Ox9fff74c&gt;]" value="('%s update %s') % ((basecmd, ' '.join(options)))">
                  <AssName fromlineno="127" tolineno="127" lineno="127" name="svncmd"/>
                  <BinOp fromlineno="127" tolineno="127" lineno="127" op="%" left="'%s update %s'" right="(basecmd, ' '.join(options))">
                    <Const fromlineno="127" tolineno="127" lineno="127" type="str">'%s update %s'</Const>
                    <Tuple fromlineno="127" tolineno="127" lineno="127">
                      <Name fromlineno="127" tolineno="127" lineno="127" name="basecmd"/>
                      <CallFunc fromlineno="127" tolineno="127" lineno="127" func="Getattr(join)">
                        <Getattr fromlineno="127" tolineno="127" lineno="127" attrname="join" expr="' '">
                          <Const fromlineno="127" tolineno="127" lineno="127" type="str">' '</Const>
                        </Getattr>
                        <Name fromlineno="127" tolineno="127" lineno="127" name="options"/>
                      </CallFunc>
                    </Tuple>
                  </BinOp>
                </Assign>
                <Raise fromlineno="129" tolineno="129" lineno="129">
                  <CallFunc fromlineno="129" tolineno="129" lineno="129" func="Name(FetchError)">
                    <Name fromlineno="129" tolineno="129" lineno="129" name="FetchError"/>
                    <BinOp fromlineno="129" tolineno="129" lineno="129" op="%" left="'Invalid svn command %s'" right="command">
                      <Const fromlineno="129" tolineno="129" lineno="129" type="str">'Invalid svn command %s'</Const>
                      <Name fromlineno="129" tolineno="129" lineno="129" name="command"/>
                    </BinOp>
                  </CallFunc>
                </Raise>
              </If>
            </If>
          </If>
          <If fromlineno="131" tolineno="132" lineno="131">
            <Name fromlineno="131" tolineno="131" lineno="131" name="svn_rsh"/>
            <Assign fromlineno="132" tolineno="132" lineno="132" targets="[&lt;AssName(svncmd) l.132 [bb.fetch.svn] at Ox9fff9cc&gt;]" value="('svn_RSH=&quot;%s&quot; %s') % ((svn_rsh, svncmd))">
              <AssName fromlineno="132" tolineno="132" lineno="132" name="svncmd"/>
              <BinOp fromlineno="132" tolineno="132" lineno="132" op="%" left="'svn_RSH=&quot;%s&quot; %s'" right="(svn_rsh, svncmd)">
                <Const fromlineno="132" tolineno="132" lineno="132" type="str">'svn_RSH="%s" %s'</Const>
                <Tuple fromlineno="132" tolineno="132" lineno="132">
                  <Name fromlineno="132" tolineno="132" lineno="132" name="svn_rsh"/>
                  <Name fromlineno="132" tolineno="132" lineno="132" name="svncmd"/>
                </Tuple>
              </BinOp>
            </Assign>
          </If>
          <Return fromlineno="134" tolineno="134" lineno="134">
            <Name fromlineno="134" tolineno="134" lineno="134" name="svncmd"/>
          </Return>
        </Function>
        <Function fromlineno="136" tolineno="172" lineno="136">
          <Arguments fromlineno="136" tolineno="136" lineno="None" format_args="self, loc, ud, d">
            <AssName fromlineno="136" tolineno="136" lineno="136" name="self"/>
            <AssName fromlineno="136" tolineno="136" lineno="136" name="loc"/>
            <AssName fromlineno="136" tolineno="136" lineno="136" name="ud"/>
            <AssName fromlineno="136" tolineno="136" lineno="136" name="d"/>
          </Arguments>
          <If fromlineno="140" tolineno="142" lineno="140">
            <CallFunc fromlineno="140" tolineno="140" lineno="140" func="Getattr(try_mirror)">
              <Getattr fromlineno="140" tolineno="140" lineno="140" attrname="try_mirror" expr="Fetch">
                <Name fromlineno="140" tolineno="140" lineno="140" name="Fetch"/>
              </Getattr>
              <Name fromlineno="140" tolineno="140" lineno="140" name="d"/>
              <Getattr fromlineno="140" tolineno="140" lineno="140" attrname="localfile" expr="ud">
                <Name fromlineno="140" tolineno="140" lineno="140" name="ud"/>
              </Getattr>
            </CallFunc>
            <Discard fromlineno="141" tolineno="141" lineno="141">
              <CallFunc fromlineno="141" tolineno="141" lineno="141" func="Getattr(debug)">
                <Getattr fromlineno="141" tolineno="141" lineno="141" attrname="debug" expr="bb.msg">
                  <Getattr fromlineno="141" tolineno="141" lineno="141" attrname="msg" expr="bb">
                    <Name fromlineno="141" tolineno="141" lineno="141" name="bb"/>
                  </Getattr>
                </Getattr>
                <Const fromlineno="141" tolineno="141" lineno="141" type="int">1</Const>
                <Getattr fromlineno="141" tolineno="141" lineno="141" attrname="Fetcher" expr="bb.msg.domain">
                  <Getattr fromlineno="141" tolineno="141" lineno="141" attrname="domain" expr="bb.msg">
                    <Getattr fromlineno="141" tolineno="141" lineno="141" attrname="msg" expr="bb">
                      <Name fromlineno="141" tolineno="141" lineno="141" name="bb"/>
                    </Getattr>
                  </Getattr>
                </Getattr>
                <BinOp fromlineno="141" tolineno="141" lineno="141" op="%" left="'%s already exists or was mirrored, skipping svn checkout.'" right="ud.localpath">
                  <Const fromlineno="141" tolineno="141" lineno="141" type="str">'%s already exists or was mirrored, skipping svn checkout.'</Const>
                  <Getattr fromlineno="141" tolineno="141" lineno="141" attrname="localpath" expr="ud">
                    <Name fromlineno="141" tolineno="141" lineno="141" name="ud"/>
                  </Getattr>
                </BinOp>
              </CallFunc>
            </Discard>
            <Return fromlineno="142" tolineno="142" lineno="142"/>
          </If>
          <Discard fromlineno="144" tolineno="144" lineno="144">
            <CallFunc fromlineno="144" tolineno="144" lineno="144" func="Getattr(debug)">
              <Getattr fromlineno="144" tolineno="144" lineno="144" attrname="debug" expr="bb.msg">
                <Getattr fromlineno="144" tolineno="144" lineno="144" attrname="msg" expr="bb">
                  <Name fromlineno="144" tolineno="144" lineno="144" name="bb"/>
                </Getattr>
              </Getattr>
              <Const fromlineno="144" tolineno="144" lineno="144" type="int">2</Const>
              <Getattr fromlineno="144" tolineno="144" lineno="144" attrname="Fetcher" expr="bb.msg.domain">
                <Getattr fromlineno="144" tolineno="144" lineno="144" attrname="domain" expr="bb.msg">
                  <Getattr fromlineno="144" tolineno="144" lineno="144" attrname="msg" expr="bb">
                    <Name fromlineno="144" tolineno="144" lineno="144" name="bb"/>
                  </Getattr>
                </Getattr>
              </Getattr>
              <BinOp fromlineno="144" tolineno="144" lineno="144" op="+" left="(&quot;Fetch: checking for module directory '&quot;) + (ud.moddir)" right="&quot;'&quot;">
                <BinOp fromlineno="144" tolineno="144" lineno="144" op="+" left="&quot;Fetch: checking for module directory '&quot;" right="ud.moddir">
                  <Const fromlineno="144" tolineno="144" lineno="144" type="str">"Fetch: checking for module directory '"</Const>
                  <Getattr fromlineno="144" tolineno="144" lineno="144" attrname="moddir" expr="ud">
                    <Name fromlineno="144" tolineno="144" lineno="144" name="ud"/>
                  </Getattr>
                </BinOp>
                <Const fromlineno="144" tolineno="144" lineno="144" type="str">"'"</Const>
              </BinOp>
            </CallFunc>
          </Discard>
          <If fromlineno="146" tolineno="160" lineno="146">
            <CallFunc fromlineno="146" tolineno="146" lineno="146" func="Getattr(access)">
              <Getattr fromlineno="146" tolineno="146" lineno="146" attrname="access" expr="os">
                <Name fromlineno="146" tolineno="146" lineno="146" name="os"/>
              </Getattr>
              <CallFunc fromlineno="146" tolineno="146" lineno="146" func="Getattr(join)">
                <Getattr fromlineno="146" tolineno="146" lineno="146" attrname="join" expr="os.path">
                  <Getattr fromlineno="146" tolineno="146" lineno="146" attrname="path" expr="os">
                    <Name fromlineno="146" tolineno="146" lineno="146" name="os"/>
                  </Getattr>
                </Getattr>
                <Getattr fromlineno="146" tolineno="146" lineno="146" attrname="moddir" expr="ud">
                  <Name fromlineno="146" tolineno="146" lineno="146" name="ud"/>
                </Getattr>
                <Const fromlineno="146" tolineno="146" lineno="146" type="str">'.svn'</Const>
              </CallFunc>
              <Getattr fromlineno="146" tolineno="146" lineno="146" attrname="R_OK" expr="os">
                <Name fromlineno="146" tolineno="146" lineno="146" name="os"/>
              </Getattr>
            </CallFunc>
            <Assign fromlineno="147" tolineno="147" lineno="147" targets="[&lt;AssName(svnupdatecmd) l.147 [bb.fetch.svn] at Oxa00344c&gt;]" value="self._buildsvncommand(ud, d, 'update')">
              <AssName fromlineno="147" tolineno="147" lineno="147" name="svnupdatecmd"/>
              <CallFunc fromlineno="147" tolineno="147" lineno="147" func="Getattr(_buildsvncommand)">
                <Getattr fromlineno="147" tolineno="147" lineno="147" attrname="_buildsvncommand" expr="self">
                  <Name fromlineno="147" tolineno="147" lineno="147" name="self"/>
                </Getattr>
                <Name fromlineno="147" tolineno="147" lineno="147" name="ud"/>
                <Name fromlineno="147" tolineno="147" lineno="147" name="d"/>
                <Const fromlineno="147" tolineno="147" lineno="147" type="str">'update'</Const>
              </CallFunc>
            </Assign>
            <Discard fromlineno="148" tolineno="148" lineno="148">
              <CallFunc fromlineno="148" tolineno="148" lineno="148" func="Getattr(note)">
                <Getattr fromlineno="148" tolineno="148" lineno="148" attrname="note" expr="bb.msg">
                  <Getattr fromlineno="148" tolineno="148" lineno="148" attrname="msg" expr="bb">
                    <Name fromlineno="148" tolineno="148" lineno="148" name="bb"/>
                  </Getattr>
                </Getattr>
                <Const fromlineno="148" tolineno="148" lineno="148" type="int">1</Const>
                <Getattr fromlineno="148" tolineno="148" lineno="148" attrname="Fetcher" expr="bb.msg.domain">
                  <Getattr fromlineno="148" tolineno="148" lineno="148" attrname="domain" expr="bb.msg">
                    <Getattr fromlineno="148" tolineno="148" lineno="148" attrname="msg" expr="bb">
                      <Name fromlineno="148" tolineno="148" lineno="148" name="bb"/>
                    </Getattr>
                  </Getattr>
                </Getattr>
                <BinOp fromlineno="148" tolineno="148" lineno="148" op="+" left="'Update '" right="loc">
                  <Const fromlineno="148" tolineno="148" lineno="148" type="str">'Update '</Const>
                  <Name fromlineno="148" tolineno="148" lineno="148" name="loc"/>
                </BinOp>
              </CallFunc>
            </Discard>
            <Discard fromlineno="150" tolineno="150" lineno="150">
              <CallFunc fromlineno="150" tolineno="150" lineno="150" func="Getattr(chdir)">
                <Getattr fromlineno="150" tolineno="150" lineno="150" attrname="chdir" expr="os">
                  <Name fromlineno="150" tolineno="150" lineno="150" name="os"/>
                </Getattr>
                <Getattr fromlineno="150" tolineno="150" lineno="150" attrname="moddir" expr="ud">
                  <Name fromlineno="150" tolineno="150" lineno="150" name="ud"/>
                </Getattr>
              </CallFunc>
            </Discard>
            <Discard fromlineno="151" tolineno="151" lineno="151">
              <CallFunc fromlineno="151" tolineno="151" lineno="151" func="Getattr(debug)">
                <Getattr fromlineno="151" tolineno="151" lineno="151" attrname="debug" expr="bb.msg">
                  <Getattr fromlineno="151" tolineno="151" lineno="151" attrname="msg" expr="bb">
                    <Name fromlineno="151" tolineno="151" lineno="151" name="bb"/>
                  </Getattr>
                </Getattr>
                <Const fromlineno="151" tolineno="151" lineno="151" type="int">1</Const>
                <Getattr fromlineno="151" tolineno="151" lineno="151" attrname="Fetcher" expr="bb.msg.domain">
                  <Getattr fromlineno="151" tolineno="151" lineno="151" attrname="domain" expr="bb.msg">
                    <Getattr fromlineno="151" tolineno="151" lineno="151" attrname="msg" expr="bb">
                      <Name fromlineno="151" tolineno="151" lineno="151" name="bb"/>
                    </Getattr>
                  </Getattr>
                </Getattr>
                <BinOp fromlineno="151" tolineno="151" lineno="151" op="%" left="'Running %s'" right="svnupdatecmd">
                  <Const fromlineno="151" tolineno="151" lineno="151" type="str">'Running %s'</Const>
                  <Name fromlineno="151" tolineno="151" lineno="151" name="svnupdatecmd"/>
                </BinOp>
              </CallFunc>
            </Discard>
            <Discard fromlineno="152" tolineno="152" lineno="152">
              <CallFunc fromlineno="152" tolineno="152" lineno="152" func="Name(runfetchcmd)">
                <Name fromlineno="152" tolineno="152" lineno="152" name="runfetchcmd"/>
                <Name fromlineno="152" tolineno="152" lineno="152" name="svnupdatecmd"/>
                <Name fromlineno="152" tolineno="152" lineno="152" name="d"/>
              </CallFunc>
            </Discard>
            <Assign fromlineno="154" tolineno="154" lineno="154" targets="[&lt;AssName(svnfetchcmd) l.154 [bb.fetch.svn] at Oxa003aec&gt;]" value="self._buildsvncommand(ud, d, 'fetch')">
              <AssName fromlineno="154" tolineno="154" lineno="154" name="svnfetchcmd"/>
              <CallFunc fromlineno="154" tolineno="154" lineno="154" func="Getattr(_buildsvncommand)">
                <Getattr fromlineno="154" tolineno="154" lineno="154" attrname="_buildsvncommand" expr="self">
                  <Name fromlineno="154" tolineno="154" lineno="154" name="self"/>
                </Getattr>
                <Name fromlineno="154" tolineno="154" lineno="154" name="ud"/>
                <Name fromlineno="154" tolineno="154" lineno="154" name="d"/>
                <Const fromlineno="154" tolineno="154" lineno="154" type="str">'fetch'</Const>
              </CallFunc>
            </Assign>
            <Discard fromlineno="155" tolineno="155" lineno="155">
              <CallFunc fromlineno="155" tolineno="155" lineno="155" func="Getattr(note)">
                <Getattr fromlineno="155" tolineno="155" lineno="155" attrname="note" expr="bb.msg">
                  <Getattr fromlineno="155" tolineno="155" lineno="155" attrname="msg" expr="bb">
                    <Name fromlineno="155" tolineno="155" lineno="155" name="bb"/>
                  </Getattr>
                </Getattr>
                <Const fromlineno="155" tolineno="155" lineno="155" type="int">1</Const>
                <Getattr fromlineno="155" tolineno="155" lineno="155" attrname="Fetcher" expr="bb.msg.domain">
                  <Getattr fromlineno="155" tolineno="155" lineno="155" attrname="domain" expr="bb.msg">
                    <Getattr fromlineno="155" tolineno="155" lineno="155" attrname="msg" expr="bb">
                      <Name fromlineno="155" tolineno="155" lineno="155" name="bb"/>
                    </Getattr>
                  </Getattr>
                </Getattr>
                <BinOp fromlineno="155" tolineno="155" lineno="155" op="+" left="'Fetch '" right="loc">
                  <Const fromlineno="155" tolineno="155" lineno="155" type="str">'Fetch '</Const>
                  <Name fromlineno="155" tolineno="155" lineno="155" name="loc"/>
                </BinOp>
              </CallFunc>
            </Discard>
            <Discard fromlineno="157" tolineno="157" lineno="157">
              <CallFunc fromlineno="157" tolineno="157" lineno="157" func="Getattr(mkdirhier)">
                <Getattr fromlineno="157" tolineno="157" lineno="157" attrname="mkdirhier" expr="bb">
                  <Name fromlineno="157" tolineno="157" lineno="157" name="bb"/>
                </Getattr>
                <Getattr fromlineno="157" tolineno="157" lineno="157" attrname="pkgdir" expr="ud">
                  <Name fromlineno="157" tolineno="157" lineno="157" name="ud"/>
                </Getattr>
              </CallFunc>
            </Discard>
            <Discard fromlineno="158" tolineno="158" lineno="158">
              <CallFunc fromlineno="158" tolineno="158" lineno="158" func="Getattr(chdir)">
                <Getattr fromlineno="158" tolineno="158" lineno="158" attrname="chdir" expr="os">
                  <Name fromlineno="158" tolineno="158" lineno="158" name="os"/>
                </Getattr>
                <Getattr fromlineno="158" tolineno="158" lineno="158" attrname="pkgdir" expr="ud">
                  <Name fromlineno="158" tolineno="158" lineno="158" name="ud"/>
                </Getattr>
              </CallFunc>
            </Discard>
            <Discard fromlineno="159" tolineno="159" lineno="159">
              <CallFunc fromlineno="159" tolineno="159" lineno="159" func="Getattr(debug)">
                <Getattr fromlineno="159" tolineno="159" lineno="159" attrname="debug" expr="bb.msg">
                  <Getattr fromlineno="159" tolineno="159" lineno="159" attrname="msg" expr="bb">
                    <Name fromlineno="159" tolineno="159" lineno="159" name="bb"/>
                  </Getattr>
                </Getattr>
                <Const fromlineno="159" tolineno="159" lineno="159" type="int">1</Const>
                <Getattr fromlineno="159" tolineno="159" lineno="159" attrname="Fetcher" expr="bb.msg.domain">
                  <Getattr fromlineno="159" tolineno="159" lineno="159" attrname="domain" expr="bb.msg">
                    <Getattr fromlineno="159" tolineno="159" lineno="159" attrname="msg" expr="bb">
                      <Name fromlineno="159" tolineno="159" lineno="159" name="bb"/>
                    </Getattr>
                  </Getattr>
                </Getattr>
                <BinOp fromlineno="159" tolineno="159" lineno="159" op="%" left="'Running %s'" right="svnfetchcmd">
                  <Const fromlineno="159" tolineno="159" lineno="159" type="str">'Running %s'</Const>
                  <Name fromlineno="159" tolineno="159" lineno="159" name="svnfetchcmd"/>
                </BinOp>
              </CallFunc>
            </Discard>
            <Discard fromlineno="160" tolineno="160" lineno="160">
              <CallFunc fromlineno="160" tolineno="160" lineno="160" func="Name(runfetchcmd)">
                <Name fromlineno="160" tolineno="160" lineno="160" name="runfetchcmd"/>
                <Name fromlineno="160" tolineno="160" lineno="160" name="svnfetchcmd"/>
                <Name fromlineno="160" tolineno="160" lineno="160" name="d"/>
              </CallFunc>
            </Discard>
          </If>
          <Discard fromlineno="162" tolineno="162" lineno="162">
            <CallFunc fromlineno="162" tolineno="162" lineno="162" func="Getattr(chdir)">
              <Getattr fromlineno="162" tolineno="162" lineno="162" attrname="chdir" expr="os">
                <Name fromlineno="162" tolineno="162" lineno="162" name="os"/>
              </Getattr>
              <Getattr fromlineno="162" tolineno="162" lineno="162" attrname="pkgdir" expr="ud">
                <Name fromlineno="162" tolineno="162" lineno="162" name="ud"/>
              </Getattr>
            </CallFunc>
          </Discard>
          <TryExcept fromlineno="164" tolineno="172" lineno="164">
            <Discard fromlineno="165" tolineno="165" lineno="165">
              <CallFunc fromlineno="165" tolineno="165" lineno="165" func="Name(runfetchcmd)">
                <Name fromlineno="165" tolineno="165" lineno="165" name="runfetchcmd"/>
                <BinOp fromlineno="165" tolineno="165" lineno="165" op="%" left="'tar -czf %s %s'" right="(ud.localpath, ud.module)">
                  <Const fromlineno="165" tolineno="165" lineno="165" type="str">'tar -czf %s %s'</Const>
                  <Tuple fromlineno="165" tolineno="165" lineno="165">
                    <Getattr fromlineno="165" tolineno="165" lineno="165" attrname="localpath" expr="ud">
                      <Name fromlineno="165" tolineno="165" lineno="165" name="ud"/>
                    </Getattr>
                    <Getattr fromlineno="165" tolineno="165" lineno="165" attrname="module" expr="ud">
                      <Name fromlineno="165" tolineno="165" lineno="165" name="ud"/>
                    </Getattr>
                  </Tuple>
                </BinOp>
                <Name fromlineno="165" tolineno="165" lineno="165" name="d"/>
              </CallFunc>
            </Discard>
            <ExceptHandler fromlineno="166" tolineno="172" lineno="166">
              <Assign fromlineno="167" tolineno="167" lineno="167" targets="[&lt;Tuple(tuple) l.167 [bb.fetch.svn] at Oxa0415ac&gt;]" value="sys.exc_info()">
                <Tuple fromlineno="167" tolineno="167" lineno="167">
                  <AssName fromlineno="167" tolineno="167" lineno="167" name="t"/>
                  <AssName fromlineno="167" tolineno="167" lineno="167" name="v"/>
                  <AssName fromlineno="167" tolineno="167" lineno="167" name="tb"/>
                </Tuple>
                <CallFunc fromlineno="167" tolineno="167" lineno="167" func="Getattr(exc_info)">
                  <Getattr fromlineno="167" tolineno="167" lineno="167" attrname="exc_info" expr="sys">
                    <Name fromlineno="167" tolineno="167" lineno="167" name="sys"/>
                  </Getattr>
                </CallFunc>
              </Assign>
              <TryExcept fromlineno="168" tolineno="171" lineno="168">
                <Discard fromlineno="169" tolineno="169" lineno="169">
                  <CallFunc fromlineno="169" tolineno="169" lineno="169" func="Getattr(unlink)">
                    <Getattr fromlineno="169" tolineno="169" lineno="169" attrname="unlink" expr="os">
                      <Name fromlineno="169" tolineno="169" lineno="169" name="os"/>
                    </Getattr>
                    <Getattr fromlineno="169" tolineno="169" lineno="169" attrname="localpath" expr="ud">
                      <Name fromlineno="169" tolineno="169" lineno="169" name="ud"/>
                    </Getattr>
                  </CallFunc>
                </Discard>
                <ExceptHandler fromlineno="170" tolineno="171" lineno="170">
                  <Name fromlineno="170" tolineno="170" lineno="170" name="OSError"/>
                  <Pass fromlineno="171" tolineno="171" lineno="171"/>
                </ExceptHandler>
              </TryExcept>
              <Raise fromlineno="172" tolineno="172" lineno="172">
                <Name fromlineno="172" tolineno="172" lineno="172" name="t"/>
                <Name fromlineno="172" tolineno="172" lineno="172" name="v"/>
                <Name fromlineno="172" tolineno="172" lineno="172" name="tb"/>
              </Raise>
            </ExceptHandler>
          </TryExcept>
        </Function>
        <Function fromlineno="174" tolineno="175" lineno="174">
          <Arguments fromlineno="174" tolineno="174" lineno="None" format_args="self">
            <AssName fromlineno="174" tolineno="174" lineno="174" name="self"/>
          </Arguments>
          <Return fromlineno="175" tolineno="175" lineno="175">
            <Const fromlineno="175" tolineno="175" lineno="175" type="bool">True</Const>
          </Return>
        </Function>
        <Function fromlineno="177" tolineno="181" lineno="177">
          <Arguments fromlineno="177" tolineno="177" lineno="None" format_args="self, url, ud, d">
            <AssName fromlineno="177" tolineno="177" lineno="177" name="self"/>
            <AssName fromlineno="177" tolineno="177" lineno="177" name="url"/>
            <AssName fromlineno="177" tolineno="177" lineno="177" name="ud"/>
            <AssName fromlineno="177" tolineno="177" lineno="177" name="d"/>
          </Arguments>
          <Return fromlineno="181" tolineno="181" lineno="181">
            <BinOp fromlineno="181" tolineno="181" lineno="181" op="+" left="'svn:'" right="ud.moddir">
              <Const fromlineno="181" tolineno="181" lineno="181" type="str">'svn:'</Const>
              <Getattr fromlineno="181" tolineno="181" lineno="181" attrname="moddir" expr="ud">
                <Name fromlineno="181" tolineno="181" lineno="181" name="ud"/>
              </Getattr>
            </BinOp>
          </Return>
        </Function>
        <Function fromlineno="183" tolineno="196" lineno="183">
          <Arguments fromlineno="183" tolineno="183" lineno="None" format_args="self, url, ud, d">
            <AssName fromlineno="183" tolineno="183" lineno="183" name="self"/>
            <AssName fromlineno="183" tolineno="183" lineno="183" name="url"/>
            <AssName fromlineno="183" tolineno="183" lineno="183" name="ud"/>
            <AssName fromlineno="183" tolineno="183" lineno="183" name="d"/>
          </Arguments>
          <Discard fromlineno="187" tolineno="187" lineno="187">
            <CallFunc fromlineno="187" tolineno="187" lineno="187" func="Getattr(debug)">
              <Getattr fromlineno="187" tolineno="187" lineno="187" attrname="debug" expr="bb.msg">
                <Getattr fromlineno="187" tolineno="187" lineno="187" attrname="msg" expr="bb">
                  <Name fromlineno="187" tolineno="187" lineno="187" name="bb"/>
                </Getattr>
              </Getattr>
              <Const fromlineno="187" tolineno="187" lineno="187" type="int">2</Const>
              <Getattr fromlineno="187" tolineno="187" lineno="187" attrname="Fetcher" expr="bb.msg.domain">
                <Getattr fromlineno="187" tolineno="187" lineno="187" attrname="domain" expr="bb.msg">
                  <Getattr fromlineno="187" tolineno="187" lineno="187" attrname="msg" expr="bb">
                    <Name fromlineno="187" tolineno="187" lineno="187" name="bb"/>
                  </Getattr>
                </Getattr>
              </Getattr>
              <BinOp fromlineno="187" tolineno="187" lineno="187" op="%" left="'SVN fetcher hitting network for %s'" right="url">
                <Const fromlineno="187" tolineno="187" lineno="187" type="str">'SVN fetcher hitting network for %s'</Const>
                <Name fromlineno="187" tolineno="187" lineno="187" name="url"/>
              </BinOp>
            </CallFunc>
          </Discard>
          <Assign fromlineno="189" tolineno="189" lineno="189" targets="[&lt;AssName(output) l.189 [bb.fetch.svn] at Oxa0460ac&gt;]" value="runfetchcmd(('LANG=C LC_ALL=C ') + (self._buildsvncommand(ud, d, 'info')), d, True)">
            <AssName fromlineno="189" tolineno="189" lineno="189" name="output"/>
            <CallFunc fromlineno="189" tolineno="189" lineno="189" func="Name(runfetchcmd)">
              <Name fromlineno="189" tolineno="189" lineno="189" name="runfetchcmd"/>
              <BinOp fromlineno="189" tolineno="189" lineno="189" op="+" left="'LANG=C LC_ALL=C '" right="self._buildsvncommand(ud, d, 'info')">
                <Const fromlineno="189" tolineno="189" lineno="189" type="str">'LANG=C LC_ALL=C '</Const>
                <CallFunc fromlineno="189" tolineno="189" lineno="189" func="Getattr(_buildsvncommand)">
                  <Getattr fromlineno="189" tolineno="189" lineno="189" attrname="_buildsvncommand" expr="self">
                    <Name fromlineno="189" tolineno="189" lineno="189" name="self"/>
                  </Getattr>
                  <Name fromlineno="189" tolineno="189" lineno="189" name="ud"/>
                  <Name fromlineno="189" tolineno="189" lineno="189" name="d"/>
                  <Const fromlineno="189" tolineno="189" lineno="189" type="str">'info'</Const>
                </CallFunc>
              </BinOp>
              <Name fromlineno="189" tolineno="189" lineno="189" name="d"/>
              <Const fromlineno="189" tolineno="189" lineno="189" type="bool">True</Const>
            </CallFunc>
          </Assign>
          <Assign fromlineno="191" tolineno="191" lineno="191" targets="[&lt;AssName(revision) l.191 [bb.fetch.svn] at Oxa0462ec&gt;]" value="None">
            <AssName fromlineno="191" tolineno="191" lineno="191" name="revision"/>
            <Const fromlineno="191" tolineno="191" lineno="191" type="NoneType">None</Const>
          </Assign>
          <For fromlineno="192" tolineno="194" lineno="192">
            <AssName fromlineno="192" tolineno="192" lineno="192" name="line"/>
            <CallFunc fromlineno="192" tolineno="192" lineno="192" func="Getattr(splitlines)">
              <Getattr fromlineno="192" tolineno="192" lineno="192" attrname="splitlines" expr="output">
                <Name fromlineno="192" tolineno="192" lineno="192" name="output"/>
              </Getattr>
            </CallFunc>
            <If fromlineno="193" tolineno="194" lineno="193">
              <Compare fromlineno="193" tolineno="193" lineno="193" op="('in', &lt;Name(line) l.193 [bb.fetch.svn] at Oxa04650c&gt;)">
                <Const fromlineno="193" tolineno="193" lineno="193" type="str">'Last Changed Rev'</Const>
                <Name fromlineno="193" tolineno="193" lineno="193" name="line"/>
              </Compare>
              <Assign fromlineno="194" tolineno="194" lineno="194" targets="[&lt;AssName(revision) l.194 [bb.fetch.svn] at Oxa0465ac&gt;]" value="line.split(':')[1].strip()">
                <AssName fromlineno="194" tolineno="194" lineno="194" name="revision"/>
                <CallFunc fromlineno="194" tolineno="194" lineno="194" func="Getattr(strip)">
                  <Getattr fromlineno="194" tolineno="194" lineno="194" attrname="strip" expr="line.split(':')[1]">
                    <Subscript fromlineno="194" tolineno="194" lineno="194">
                      <CallFunc fromlineno="194" tolineno="194" lineno="194" func="Getattr(split)">
                        <Getattr fromlineno="194" tolineno="194" lineno="194" attrname="split" expr="line">
                          <Name fromlineno="194" tolineno="194" lineno="194" name="line"/>
                        </Getattr>
                        <Const fromlineno="194" tolineno="194" lineno="194" type="str">':'</Const>
                      </CallFunc>
                      <Index fromlineno="194" tolineno="194" lineno="None">
                        <Const fromlineno="194" tolineno="194" lineno="194" type="int">1</Const>
                      </Index>
                    </Subscript>
                  </Getattr>
                </CallFunc>
              </Assign>
            </If>
          </For>
          <Return fromlineno="196" tolineno="196" lineno="196">
            <Name fromlineno="196" tolineno="196" lineno="196" name="revision"/>
          </Return>
        </Function>
        <Function fromlineno="198" tolineno="203" lineno="198">
          <Arguments fromlineno="198" tolineno="198" lineno="None" format_args="self, url, ud, d">
            <AssName fromlineno="198" tolineno="198" lineno="198" name="self"/>
            <AssName fromlineno="198" tolineno="198" lineno="198" name="url"/>
            <AssName fromlineno="198" tolineno="198" lineno="198" name="ud"/>
            <AssName fromlineno="198" tolineno="198" lineno="198" name="d"/>
          </Arguments>
          <Return fromlineno="203" tolineno="203" lineno="203">
            <CallFunc fromlineno="203" tolineno="203" lineno="203" func="Getattr(_build_revision)">
              <Getattr fromlineno="203" tolineno="203" lineno="203" attrname="_build_revision" expr="self">
                <Name fromlineno="203" tolineno="203" lineno="203" name="self"/>
              </Getattr>
              <Name fromlineno="203" tolineno="203" lineno="203" name="url"/>
              <Name fromlineno="203" tolineno="203" lineno="203" name="ud"/>
              <Name fromlineno="203" tolineno="203" lineno="203" name="d"/>
            </CallFunc>
          </Return>
        </Function>
        <Function fromlineno="205" tolineno="206" lineno="205">
          <Arguments fromlineno="205" tolineno="205" lineno="None" format_args="self, url, ud, d">
            <AssName fromlineno="205" tolineno="205" lineno="205" name="self"/>
            <AssName fromlineno="205" tolineno="205" lineno="205" name="url"/>
            <AssName fromlineno="205" tolineno="205" lineno="205" name="ud"/>
            <AssName fromlineno="205" tolineno="205" lineno="205" name="d"/>
          </Arguments>
          <Return fromlineno="206" tolineno="206" lineno="206">
            <Getattr fromlineno="206" tolineno="206" lineno="206" attrname="revision" expr="ud">
              <Name fromlineno="206" tolineno="206" lineno="206" name="ud"/>
            </Getattr>
          </Return>
        </Function>
      </Class>
    </Module>
    <Module fromlineno="0" tolineno="84" lineno="0" name="bb.parse">
      <Assign fromlineno="27" tolineno="28" lineno="27" targets="[&lt;AssName(__all__) l.27 [bb.parse] at Ox9edae0c&gt;]" value="['ParseError', 'SkipPackage', 'cached_mtime', 'mark_dependency', 'supports', 'handle', 'init']">
        <AssName fromlineno="27" tolineno="27" lineno="27" name="__all__"/>
        <List fromlineno="27" tolineno="28" lineno="27">
          <Const fromlineno="27" tolineno="27" lineno="27" type="str">'ParseError'</Const>
          <Const fromlineno="27" tolineno="27" lineno="27" type="str">'SkipPackage'</Const>
          <Const fromlineno="27" tolineno="27" lineno="27" type="str">'cached_mtime'</Const>
          <Const fromlineno="27" tolineno="27" lineno="27" type="str">'mark_dependency'</Const>
          <Const fromlineno="28" tolineno="28" lineno="28" type="str">'supports'</Const>
          <Const fromlineno="28" tolineno="28" lineno="28" type="str">'handle'</Const>
          <Const fromlineno="28" tolineno="28" lineno="28" type="str">'init'</Const>
        </List>
      </Assign>
      <Assign fromlineno="29" tolineno="29" lineno="29" targets="[&lt;AssName(handlers) l.29 [bb.parse] at Ox9edaaec&gt;]" value="[]">
        <AssName fromlineno="29" tolineno="29" lineno="29" name="handlers"/>
        <List fromlineno="29" tolineno="29" lineno="29"/>
      </Assign>
      <Import fromlineno="31" tolineno="31" lineno="31">
        <ImportName name="bb"/>
        <ImportName name="os"/>
      </Import>
      <Class fromlineno="33" tolineno="33" lineno="33">
        <Name fromlineno="33" tolineno="33" lineno="33" name="Exception"/>
      </Class>
      <Class fromlineno="36" tolineno="36" lineno="36">
        <Name fromlineno="36" tolineno="36" lineno="36" name="Exception"/>
      </Class>
      <Assign fromlineno="39" tolineno="39" lineno="39" targets="[&lt;AssName(__mtime_cache) l.39 [bb.parse] at Ox9eda1ac&gt;]" value="{}">
        <AssName fromlineno="39" tolineno="39" lineno="39" name="__mtime_cache"/>
        <Dict fromlineno="39" tolineno="39" lineno="39"/>
      </Assign>
      <Function fromlineno="40" tolineno="43" lineno="40">
        <Arguments fromlineno="40" tolineno="40" lineno="None" format_args="f">
          <AssName fromlineno="40" tolineno="40" lineno="40" name="f"/>
        </Arguments>
        <If fromlineno="41" tolineno="42" lineno="41">
          <UnaryOp fromlineno="41" tolineno="41" lineno="41">
            <CallFunc fromlineno="41" tolineno="41" lineno="41" func="Getattr(has_key)">
              <Getattr fromlineno="41" tolineno="41" lineno="41" attrname="has_key" expr="__mtime_cache">
                <Name fromlineno="41" tolineno="41" lineno="41" name="__mtime_cache"/>
              </Getattr>
              <Name fromlineno="41" tolineno="41" lineno="41" name="f"/>
            </CallFunc>
          </UnaryOp>
          <Assign fromlineno="42" tolineno="42" lineno="42" targets="[&lt;Subscript() l.42 [bb.parse] at Ox9eda62c&gt;]" value="os.stat(f)[8]">
            <Subscript fromlineno="42" tolineno="42" lineno="42">
              <Name fromlineno="42" tolineno="42" lineno="42" name="__mtime_cache"/>
              <Index fromlineno="42" tolineno="42" lineno="None">
                <Name fromlineno="42" tolineno="42" lineno="42" name="f"/>
              </Index>
            </Subscript>
            <Subscript fromlineno="42" tolineno="42" lineno="42">
              <CallFunc fromlineno="42" tolineno="42" lineno="42" func="Getattr(stat)">
                <Getattr fromlineno="42" tolineno="42" lineno="42" attrname="stat" expr="os">
                  <Name fromlineno="42" tolineno="42" lineno="42" name="os"/>
                </Getattr>
                <Name fromlineno="42" tolineno="42" lineno="42" name="f"/>
              </CallFunc>
              <Index fromlineno="42" tolineno="42" lineno="None">
                <Const fromlineno="42" tolineno="42" lineno="42" type="int">8</Const>
              </Index>
            </Subscript>
          </Assign>
        </If>
        <Return fromlineno="43" tolineno="43" lineno="43">
          <Subscript fromlineno="43" tolineno="43" lineno="43">
            <Name fromlineno="43" tolineno="43" lineno="43" name="__mtime_cache"/>
            <Index fromlineno="43" tolineno="43" lineno="None">
              <Name fromlineno="43" tolineno="43" lineno="43" name="f"/>
            </Index>
          </Subscript>
        </Return>
      </Function>
      <Function fromlineno="45" tolineno="51" lineno="45">
        <Arguments fromlineno="45" tolineno="45" lineno="None" format_args="f">
          <AssName fromlineno="45" tolineno="45" lineno="45" name="f"/>
        </Arguments>
        <If fromlineno="46" tolineno="50" lineno="46">
          <UnaryOp fromlineno="46" tolineno="46" lineno="46">
            <CallFunc fromlineno="46" tolineno="46" lineno="46" func="Getattr(has_key)">
              <Getattr fromlineno="46" tolineno="46" lineno="46" attrname="has_key" expr="__mtime_cache">
                <Name fromlineno="46" tolineno="46" lineno="46" name="__mtime_cache"/>
              </Getattr>
              <Name fromlineno="46" tolineno="46" lineno="46" name="f"/>
            </CallFunc>
          </UnaryOp>
          <TryExcept fromlineno="47" tolineno="50" lineno="47">
            <Assign fromlineno="48" tolineno="48" lineno="48" targets="[&lt;Subscript() l.48 [bb.parse] at Ox9eda50c&gt;]" value="os.stat(f)[8]">
              <Subscript fromlineno="48" tolineno="48" lineno="48">
                <Name fromlineno="48" tolineno="48" lineno="48" name="__mtime_cache"/>
                <Index fromlineno="48" tolineno="48" lineno="None">
                  <Name fromlineno="48" tolineno="48" lineno="48" name="f"/>
                </Index>
              </Subscript>
              <Subscript fromlineno="48" tolineno="48" lineno="48">
                <CallFunc fromlineno="48" tolineno="48" lineno="48" func="Getattr(stat)">
                  <Getattr fromlineno="48" tolineno="48" lineno="48" attrname="stat" expr="os">
                    <Name fromlineno="48" tolineno="48" lineno="48" name="os"/>
                  </Getattr>
                  <Name fromlineno="48" tolineno="48" lineno="48" name="f"/>
                </CallFunc>
                <Index fromlineno="48" tolineno="48" lineno="None">
                  <Const fromlineno="48" tolineno="48" lineno="48" type="int">8</Const>
                </Index>
              </Subscript>
            </Assign>
            <ExceptHandler fromlineno="49" tolineno="50" lineno="49">
              <Name fromlineno="49" tolineno="49" lineno="49" name="OSError"/>
              <Return fromlineno="50" tolineno="50" lineno="50">
                <Const fromlineno="50" tolineno="50" lineno="50" type="int">0</Const>
              </Return>
            </ExceptHandler>
          </TryExcept>
        </If>
        <Return fromlineno="51" tolineno="51" lineno="51">
          <Subscript fromlineno="51" tolineno="51" lineno="51">
            <Name fromlineno="51" tolineno="51" lineno="51" name="__mtime_cache"/>
            <Index fromlineno="51" tolineno="51" lineno="None">
              <Name fromlineno="51" tolineno="51" lineno="51" name="f"/>
            </Index>
          </Subscript>
        </Return>
      </Function>
      <Function fromlineno="53" tolineno="55" lineno="53">
        <Arguments fromlineno="53" tolineno="53" lineno="None" format_args="f">
          <AssName fromlineno="53" tolineno="53" lineno="53" name="f"/>
        </Arguments>
        <Assign fromlineno="54" tolineno="54" lineno="54" targets="[&lt;Subscript() l.54 [bb.parse] at Ox9ed614c&gt;]" value="os.stat(f)[8]">
          <Subscript fromlineno="54" tolineno="54" lineno="54">
            <Name fromlineno="54" tolineno="54" lineno="54" name="__mtime_cache"/>
            <Index fromlineno="54" tolineno="54" lineno="None">
              <Name fromlineno="54" tolineno="54" lineno="54" name="f"/>
            </Index>
          </Subscript>
          <Subscript fromlineno="54" tolineno="54" lineno="54">
            <CallFunc fromlineno="54" tolineno="54" lineno="54" func="Getattr(stat)">
              <Getattr fromlineno="54" tolineno="54" lineno="54" attrname="stat" expr="os">
                <Name fromlineno="54" tolineno="54" lineno="54" name="os"/>
              </Getattr>
              <Name fromlineno="54" tolineno="54" lineno="54" name="f"/>
            </CallFunc>
            <Index fromlineno="54" tolineno="54" lineno="None">
              <Const fromlineno="54" tolineno="54" lineno="54" type="int">8</Const>
            </Index>
          </Subscript>
        </Assign>
        <Return fromlineno="55" tolineno="55" lineno="55">
          <Subscript fromlineno="55" tolineno="55" lineno="55">
            <Name fromlineno="55" tolineno="55" lineno="55" name="__mtime_cache"/>
            <Index fromlineno="55" tolineno="55" lineno="None">
              <Name fromlineno="55" tolineno="55" lineno="55" name="f"/>
            </Index>
          </Subscript>
        </Return>
      </Function>
      <Function fromlineno="57" tolineno="62" lineno="57">
        <Arguments fromlineno="57" tolineno="57" lineno="None" format_args="d, f">
          <AssName fromlineno="57" tolineno="57" lineno="57" name="d"/>
          <AssName fromlineno="57" tolineno="57" lineno="57" name="f"/>
        </Arguments>
        <If fromlineno="58" tolineno="59" lineno="58">
          <CallFunc fromlineno="58" tolineno="58" lineno="58" func="Getattr(startswith)">
            <Getattr fromlineno="58" tolineno="58" lineno="58" attrname="startswith" expr="f">
              <Name fromlineno="58" tolineno="58" lineno="58" name="f"/>
            </Getattr>
            <Const fromlineno="58" tolineno="58" lineno="58" type="str">'./'</Const>
          </CallFunc>
          <Assign fromlineno="59" tolineno="59" lineno="59" targets="[&lt;AssName(f) l.59 [bb.parse] at Ox9ed6a8c&gt;]" value="('%s/%s') % ((os.getcwd(), f[2:]))">
            <AssName fromlineno="59" tolineno="59" lineno="59" name="f"/>
            <BinOp fromlineno="59" tolineno="59" lineno="59" op="%" left="'%s/%s'" right="(os.getcwd(), f[2:])">
              <Const fromlineno="59" tolineno="59" lineno="59" type="str">'%s/%s'</Const>
              <Tuple fromlineno="59" tolineno="59" lineno="59">
                <CallFunc fromlineno="59" tolineno="59" lineno="59" func="Getattr(getcwd)">
                  <Getattr fromlineno="59" tolineno="59" lineno="59" attrname="getcwd" expr="os">
                    <Name fromlineno="59" tolineno="59" lineno="59" name="os"/>
                  </Getattr>
                </CallFunc>
                <Subscript fromlineno="59" tolineno="59" lineno="59">
                  <Name fromlineno="59" tolineno="59" lineno="59" name="f"/>
                  <Slice fromlineno="59" tolineno="59" lineno="None">
                    <Const fromlineno="59" tolineno="59" lineno="59" type="int">2</Const>
                  </Slice>
                </Subscript>
              </Tuple>
            </BinOp>
          </Assign>
        </If>
        <Assign fromlineno="60" tolineno="60" lineno="60" targets="[&lt;AssName(deps) l.60 [bb.parse] at Ox9ed6a4c&gt;]" value="(bb.data.getVar('__depends', d)) or ([])">
          <AssName fromlineno="60" tolineno="60" lineno="60" name="deps"/>
          <BoolOp fromlineno="60" tolineno="60" lineno="60" op="or" values="bb.data.getVar('__depends', d),[],">
            <CallFunc fromlineno="60" tolineno="60" lineno="60" func="Getattr(getVar)">
              <Getattr fromlineno="60" tolineno="60" lineno="60" attrname="getVar" expr="bb.data">
                <Getattr fromlineno="60" tolineno="60" lineno="60" attrname="data" expr="bb">
                  <Name fromlineno="60" tolineno="60" lineno="60" name="bb"/>
                </Getattr>
              </Getattr>
              <Const fromlineno="60" tolineno="60" lineno="60" type="str">'__depends'</Const>
              <Name fromlineno="60" tolineno="60" lineno="60" name="d"/>
            </CallFunc>
            <List fromlineno="60" tolineno="60" lineno="60"/>
          </BoolOp>
        </Assign>
        <Discard fromlineno="61" tolineno="61" lineno="61">
          <CallFunc fromlineno="61" tolineno="61" lineno="61" func="Getattr(append)">
            <Getattr fromlineno="61" tolineno="61" lineno="61" attrname="append" expr="deps">
              <Name fromlineno="61" tolineno="61" lineno="61" name="deps"/>
            </Getattr>
            <Tuple fromlineno="61" tolineno="61" lineno="61">
              <Name fromlineno="61" tolineno="61" lineno="61" name="f"/>
              <CallFunc fromlineno="61" tolineno="61" lineno="61" func="Name(cached_mtime)">
                <Name fromlineno="61" tolineno="61" lineno="61" name="cached_mtime"/>
                <Name fromlineno="61" tolineno="61" lineno="61" name="f"/>
              </CallFunc>
            </Tuple>
          </CallFunc>
        </Discard>
        <Discard fromlineno="62" tolineno="62" lineno="62">
          <CallFunc fromlineno="62" tolineno="62" lineno="62" func="Getattr(setVar)">
            <Getattr fromlineno="62" tolineno="62" lineno="62" attrname="setVar" expr="bb.data">
              <Getattr fromlineno="62" tolineno="62" lineno="62" attrname="data" expr="bb">
                <Name fromlineno="62" tolineno="62" lineno="62" name="bb"/>
              </Getattr>
            </Getattr>
            <Const fromlineno="62" tolineno="62" lineno="62" type="str">'__depends'</Const>
            <Name fromlineno="62" tolineno="62" lineno="62" name="deps"/>
            <Name fromlineno="62" tolineno="62" lineno="62" name="d"/>
          </CallFunc>
        </Discard>
      </Function>
      <Function fromlineno="64" tolineno="69" lineno="64">
        <Arguments fromlineno="64" tolineno="64" lineno="None" format_args="fn, data">
          <AssName fromlineno="64" tolineno="64" lineno="64" name="fn"/>
          <AssName fromlineno="64" tolineno="64" lineno="64" name="data"/>
        </Arguments>
        <For fromlineno="66" tolineno="68" lineno="66">
          <AssName fromlineno="66" tolineno="66" lineno="66" name="h"/>
          <Name fromlineno="66" tolineno="66" lineno="66" name="handlers"/>
          <If fromlineno="67" tolineno="68" lineno="67">
            <CallFunc fromlineno="67" tolineno="67" lineno="67" func="Subscript()">
              <Subscript fromlineno="67" tolineno="67" lineno="67">
                <Name fromlineno="67" tolineno="67" lineno="67" name="h"/>
                <Index fromlineno="67" tolineno="67" lineno="None">
                  <Const fromlineno="67" tolineno="67" lineno="67" type="str">'supports'</Const>
                </Index>
              </Subscript>
              <Name fromlineno="67" tolineno="67" lineno="67" name="fn"/>
              <Name fromlineno="67" tolineno="67" lineno="67" name="data"/>
            </CallFunc>
            <Return fromlineno="68" tolineno="68" lineno="68">
              <Const fromlineno="68" tolineno="68" lineno="68" type="int">1</Const>
            </Return>
          </If>
        </For>
        <Return fromlineno="69" tolineno="69" lineno="69">
          <Const fromlineno="69" tolineno="69" lineno="69" type="int">0</Const>
        </Return>
      </Function>
      <Function fromlineno="71" tolineno="76" lineno="71">
        <Arguments fromlineno="71" tolineno="71" lineno="None" format_args="fn, data, include=0">
          <AssName fromlineno="71" tolineno="71" lineno="71" name="fn"/>
          <AssName fromlineno="71" tolineno="71" lineno="71" name="data"/>
          <AssName fromlineno="71" tolineno="71" lineno="71" name="include"/>
          <Const fromlineno="71" tolineno="71" lineno="71" type="int">0</Const>
        </Arguments>
        <For fromlineno="73" tolineno="75" lineno="73">
          <AssName fromlineno="73" tolineno="73" lineno="73" name="h"/>
          <Name fromlineno="73" tolineno="73" lineno="73" name="handlers"/>
          <If fromlineno="74" tolineno="75" lineno="74">
            <CallFunc fromlineno="74" tolineno="74" lineno="74" func="Subscript()">
              <Subscript fromlineno="74" tolineno="74" lineno="74">
                <Name fromlineno="74" tolineno="74" lineno="74" name="h"/>
                <Index fromlineno="74" tolineno="74" lineno="None">
                  <Const fromlineno="74" tolineno="74" lineno="74" type="str">'supports'</Const>
                </Index>
              </Subscript>
              <Name fromlineno="74" tolineno="74" lineno="74" name="fn"/>
              <Name fromlineno="74" tolineno="74" lineno="74" name="data"/>
            </CallFunc>
            <Return fromlineno="75" tolineno="75" lineno="75">
              <CallFunc fromlineno="75" tolineno="75" lineno="75" func="Subscript()">
                <Subscript fromlineno="75" tolineno="75" lineno="75">
                  <Name fromlineno="75" tolineno="75" lineno="75" name="h"/>
                  <Index fromlineno="75" tolineno="75" lineno="None">
                    <Const fromlineno="75" tolineno="75" lineno="75" type="str">'handle'</Const>
                  </Index>
                </Subscript>
                <Name fromlineno="75" tolineno="75" lineno="75" name="fn"/>
                <Name fromlineno="75" tolineno="75" lineno="75" name="data"/>
                <Name fromlineno="75" tolineno="75" lineno="75" name="include"/>
              </CallFunc>
            </Return>
          </If>
        </For>
        <Raise fromlineno="76" tolineno="76" lineno="76">
          <CallFunc fromlineno="76" tolineno="76" lineno="76" func="Name(ParseError)">
            <Name fromlineno="76" tolineno="76" lineno="76" name="ParseError"/>
            <BinOp fromlineno="76" tolineno="76" lineno="76" op="%" left="'%s is not a BitBake file'" right="fn">
              <Const fromlineno="76" tolineno="76" lineno="76" type="str">'%s is not a BitBake file'</Const>
              <Name fromlineno="76" tolineno="76" lineno="76" name="fn"/>
            </BinOp>
          </CallFunc>
        </Raise>
      </Function>
      <Function fromlineno="78" tolineno="81" lineno="78">
        <Arguments fromlineno="78" tolineno="78" lineno="None" format_args="fn, data">
          <AssName fromlineno="78" tolineno="78" lineno="78" name="fn"/>
          <AssName fromlineno="78" tolineno="78" lineno="78" name="data"/>
        </Arguments>
        <For fromlineno="79" tolineno="81" lineno="79">
          <AssName fromlineno="79" tolineno="79" lineno="79" name="h"/>
          <Name fromlineno="79" tolineno="79" lineno="79" name="handlers"/>
          <If fromlineno="80" tolineno="81" lineno="80">
            <CallFunc fromlineno="80" tolineno="80" lineno="80" func="Subscript()">
              <Subscript fromlineno="80" tolineno="80" lineno="80">
                <Name fromlineno="80" tolineno="80" lineno="80" name="h"/>
                <Index fromlineno="80" tolineno="80" lineno="None">
                  <Const fromlineno="80" tolineno="80" lineno="80" type="str">'supports'</Const>
                </Index>
              </Subscript>
              <Name fromlineno="80" tolineno="80" lineno="80" name="fn"/>
            </CallFunc>
            <Return fromlineno="81" tolineno="81" lineno="81">
              <CallFunc fromlineno="81" tolineno="81" lineno="81" func="Subscript()">
                <Subscript fromlineno="81" tolineno="81" lineno="81">
                  <Name fromlineno="81" tolineno="81" lineno="81" name="h"/>
                  <Index fromlineno="81" tolineno="81" lineno="None">
                    <Const fromlineno="81" tolineno="81" lineno="81" type="str">'init'</Const>
                  </Index>
                </Subscript>
                <Name fromlineno="81" tolineno="81" lineno="81" name="data"/>
              </CallFunc>
            </Return>
          </If>
        </For>
      </Function>
      <From fromlineno="84" tolineno="84" lineno="84" modname="parse_py">
        <ImportName name="__version__"/>
        <ImportName name="ConfHandler"/>
        <ImportName name="BBHandler"/>
      </From>
    </Module>
    <Module fromlineno="0" tolineno="32" lineno="0" name="bb.parse.parse_py">
      <Assign fromlineno="27" tolineno="27" lineno="27" targets="[&lt;AssName(__version__) l.27 [bb.parse.parse_py] at Ox9f7d38c&gt;]" value="'1.0'">
        <AssName fromlineno="27" tolineno="27" lineno="27" name="__version__"/>
        <Const fromlineno="27" tolineno="27" lineno="27" type="str">'1.0'</Const>
      </Assign>
      <Assign fromlineno="29" tolineno="29" lineno="29" targets="[&lt;AssName(__all__) l.29 [bb.parse.parse_py] at Ox9f5a6ac&gt;]" value="['ConfHandler', 'BBHandler']">
        <AssName fromlineno="29" tolineno="29" lineno="29" name="__all__"/>
        <List fromlineno="29" tolineno="29" lineno="29">
          <Const fromlineno="29" tolineno="29" lineno="29" type="str">'ConfHandler'</Const>
          <Const fromlineno="29" tolineno="29" lineno="29" type="str">'BBHandler'</Const>
        </List>
      </Assign>
      <Import fromlineno="31" tolineno="31" lineno="31">
        <ImportName name="ConfHandler"/>
      </Import>
      <Import fromlineno="32" tolineno="32" lineno="32">
        <ImportName name="BBHandler"/>
      </Import>
    </Module>
    <Module fromlineno="0" tolineno="233" lineno="0" name="bb.parse.parse_py.ConfHandler">
      <Import fromlineno="26" tolineno="26" lineno="26">
        <ImportName name="re"/>
        <ImportName name="bb.data"/>
        <ImportName name="os"/>
        <ImportName name="sys"/>
      </Import>
      <From fromlineno="27" tolineno="27" lineno="27" modname="bb.parse">
        <ImportName name="ParseError"/>
      </From>
      <Assign fromlineno="30" tolineno="30" lineno="30" targets="[&lt;AssName(__config_regexp__) l.30 [bb.parse.parse_py.ConfHandler] at Oxa062aec&gt;]" value="re.compile('(?P&lt;exp&gt;export\\s*)?(?P&lt;var&gt;[a-zA-Z0-9\\-_+.${}/]+)(\\[(?P&lt;flag&gt;[a-zA-Z0-9\\-_+.]+)\\])?\\s*((?P&lt;colon&gt;:=)|(?P&lt;ques&gt;\\?=)|(?P&lt;append&gt;\\+=)|(?P&lt;prepend&gt;=\\+)|(?P&lt;predot&gt;=\\.)|(?P&lt;postdot&gt;\\.=)|=)\\s*(?P&lt;apo&gt;[\'\\&quot;]?)(?P&lt;value&gt;.*)(?P=apo)$')">
        <AssName fromlineno="30" tolineno="30" lineno="30" name="__config_regexp__"/>
        <CallFunc fromlineno="30" tolineno="30" lineno="30" func="Getattr(compile)">
          <Getattr fromlineno="30" tolineno="30" lineno="30" attrname="compile" expr="re">
            <Name fromlineno="30" tolineno="30" lineno="30" name="re"/>
          </Getattr>
          <Const fromlineno="30" tolineno="30" lineno="30" type="str">'(?P&lt;exp&gt;export\\s*)?(?P&lt;var&gt;[a-zA-Z0-9\\-_+.${}/]+)(\\[(?P&lt;flag&gt;[a-zA-Z0-9\\-_+.]+)\\])?\\s*((?P&lt;colon&gt;:=)|(?P&lt;ques&gt;\\?=)|(?P&lt;append&gt;\\+=)|(?P&lt;prepend&gt;=\\+)|(?P&lt;predot&gt;=\\.)|(?P&lt;postdot&gt;\\.=)|=)\\s*(?P&lt;apo&gt;[\'\\"]?)(?P&lt;value&gt;.*)(?P=apo)$'</Const>
        </CallFunc>
      </Assign>
      <Assign fromlineno="31" tolineno="31" lineno="31" targets="[&lt;AssName(__include_regexp__) l.31 [bb.parse.parse_py.ConfHandler] at Oxa062c4c&gt;]" value="re.compile('include\\s+(.+)')">
        <AssName fromlineno="31" tolineno="31" lineno="31" name="__include_regexp__"/>
        <CallFunc fromlineno="31" tolineno="31" lineno="31" func="Getattr(compile)">
          <Getattr fromlineno="31" tolineno="31" lineno="31" attrname="compile" expr="re">
            <Name fromlineno="31" tolineno="31" lineno="31" name="re"/>
          </Getattr>
          <Const fromlineno="31" tolineno="31" lineno="31" type="str">'include\\s+(.+)'</Const>
        </CallFunc>
      </Assign>
      <Assign fromlineno="32" tolineno="32" lineno="32" targets="[&lt;AssName(__require_regexp__) l.32 [bb.parse.parse_py.ConfHandler] at Oxa062d6c&gt;]" value="re.compile('require\\s+(.+)')">
        <AssName fromlineno="32" tolineno="32" lineno="32" name="__require_regexp__"/>
        <CallFunc fromlineno="32" tolineno="32" lineno="32" func="Getattr(compile)">
          <Getattr fromlineno="32" tolineno="32" lineno="32" attrname="compile" expr="re">
            <Name fromlineno="32" tolineno="32" lineno="32" name="re"/>
          </Getattr>
          <Const fromlineno="32" tolineno="32" lineno="32" type="str">'require\\s+(.+)'</Const>
        </CallFunc>
      </Assign>
      <Assign fromlineno="33" tolineno="33" lineno="33" targets="[&lt;AssName(__export_regexp__) l.33 [bb.parse.parse_py.ConfHandler] at Oxa062e8c&gt;]" value="re.compile('export\\s+(.+)')">
        <AssName fromlineno="33" tolineno="33" lineno="33" name="__export_regexp__"/>
        <CallFunc fromlineno="33" tolineno="33" lineno="33" func="Getattr(compile)">
          <Getattr fromlineno="33" tolineno="33" lineno="33" attrname="compile" expr="re">
            <Name fromlineno="33" tolineno="33" lineno="33" name="re"/>
          </Getattr>
          <Const fromlineno="33" tolineno="33" lineno="33" type="str">'export\\s+(.+)'</Const>
        </CallFunc>
      </Assign>
      <Function fromlineno="35" tolineno="39" lineno="35">
        <Arguments fromlineno="35" tolineno="35" lineno="None" format_args="data">
          <AssName fromlineno="35" tolineno="35" lineno="35" name="data"/>
        </Arguments>
        <If fromlineno="36" tolineno="37" lineno="36">
          <UnaryOp fromlineno="36" tolineno="36" lineno="36">
            <CallFunc fromlineno="36" tolineno="36" lineno="36" func="Getattr(getVar)">
              <Getattr fromlineno="36" tolineno="36" lineno="36" attrname="getVar" expr="bb.data">
                <Getattr fromlineno="36" tolineno="36" lineno="36" attrname="data" expr="bb">
                  <Name fromlineno="36" tolineno="36" lineno="36" name="bb"/>
                </Getattr>
              </Getattr>
              <Const fromlineno="36" tolineno="36" lineno="36" type="str">'TOPDIR'</Const>
              <Name fromlineno="36" tolineno="36" lineno="36" name="data"/>
            </CallFunc>
          </UnaryOp>
          <Discard fromlineno="37" tolineno="37" lineno="37">
            <CallFunc fromlineno="37" tolineno="37" lineno="37" func="Getattr(setVar)">
              <Getattr fromlineno="37" tolineno="37" lineno="37" attrname="setVar" expr="bb.data">
                <Getattr fromlineno="37" tolineno="37" lineno="37" attrname="data" expr="bb">
                  <Name fromlineno="37" tolineno="37" lineno="37" name="bb"/>
                </Getattr>
              </Getattr>
              <Const fromlineno="37" tolineno="37" lineno="37" type="str">'TOPDIR'</Const>
              <CallFunc fromlineno="37" tolineno="37" lineno="37" func="Getattr(getcwd)">
                <Getattr fromlineno="37" tolineno="37" lineno="37" attrname="getcwd" expr="os">
                  <Name fromlineno="37" tolineno="37" lineno="37" name="os"/>
                </Getattr>
              </CallFunc>
              <Name fromlineno="37" tolineno="37" lineno="37" name="data"/>
            </CallFunc>
          </Discard>
        </If>
        <If fromlineno="38" tolineno="39" lineno="38">
          <UnaryOp fromlineno="38" tolineno="38" lineno="38">
            <CallFunc fromlineno="38" tolineno="38" lineno="38" func="Getattr(getVar)">
              <Getattr fromlineno="38" tolineno="38" lineno="38" attrname="getVar" expr="bb.data">
                <Getattr fromlineno="38" tolineno="38" lineno="38" attrname="data" expr="bb">
                  <Name fromlineno="38" tolineno="38" lineno="38" name="bb"/>
                </Getattr>
              </Getattr>
              <Const fromlineno="38" tolineno="38" lineno="38" type="str">'BBPATH'</Const>
              <Name fromlineno="38" tolineno="38" lineno="38" name="data"/>
            </CallFunc>
          </UnaryOp>
          <Discard fromlineno="39" tolineno="39" lineno="39">
            <CallFunc fromlineno="39" tolineno="39" lineno="39" func="Getattr(setVar)">
              <Getattr fromlineno="39" tolineno="39" lineno="39" attrname="setVar" expr="bb.data">
                <Getattr fromlineno="39" tolineno="39" lineno="39" attrname="data" expr="bb">
                  <Name fromlineno="39" tolineno="39" lineno="39" name="bb"/>
                </Getattr>
              </Getattr>
              <Const fromlineno="39" tolineno="39" lineno="39" type="str">'BBPATH'</Const>
              <CallFunc fromlineno="39" tolineno="39" lineno="39" func="Getattr(join)">
                <Getattr fromlineno="39" tolineno="39" lineno="39" attrname="join" expr="os.path">
                  <Getattr fromlineno="39" tolineno="39" lineno="39" attrname="path" expr="os">
                    <Name fromlineno="39" tolineno="39" lineno="39" name="os"/>
                  </Getattr>
                </Getattr>
                <Getattr fromlineno="39" tolineno="39" lineno="39" attrname="prefix" expr="sys">
                  <Name fromlineno="39" tolineno="39" lineno="39" name="sys"/>
                </Getattr>
                <Const fromlineno="39" tolineno="39" lineno="39" type="str">'share'</Const>
                <Const fromlineno="39" tolineno="39" lineno="39" type="str">'bitbake'</Const>
              </CallFunc>
              <Name fromlineno="39" tolineno="39" lineno="39" name="data"/>
            </CallFunc>
          </Discard>
        </If>
      </Function>
      <Function fromlineno="41" tolineno="42" lineno="41">
        <Arguments fromlineno="41" tolineno="41" lineno="None" format_args="fn, d">
          <AssName fromlineno="41" tolineno="41" lineno="41" name="fn"/>
          <AssName fromlineno="41" tolineno="41" lineno="41" name="d"/>
        </Arguments>
        <Return fromlineno="42" tolineno="42" lineno="42">
          <Compare fromlineno="42" tolineno="42" lineno="42" op="('==', &lt;Const(str) l.42 [bb.parse.parse_py.ConfHandler] at Oxa0679cc&gt;)">
            <Subscript fromlineno="42" tolineno="42" lineno="42">
              <CallFunc fromlineno="42" tolineno="42" lineno="42" func="Name(localpath)">
                <Name fromlineno="42" tolineno="42" lineno="42" name="localpath"/>
                <Name fromlineno="42" tolineno="42" lineno="42" name="fn"/>
                <Name fromlineno="42" tolineno="42" lineno="42" name="d"/>
              </CallFunc>
              <Slice fromlineno="42" tolineno="42" lineno="None">
                <Const fromlineno="42" tolineno="42" lineno="42" type="int">-5</Const>
              </Slice>
            </Subscript>
            <Const fromlineno="42" tolineno="42" lineno="42" type="str">'.conf'</Const>
          </Compare>
        </Return>
      </Function>
      <Function fromlineno="44" tolineno="59" lineno="44">
        <Arguments fromlineno="44" tolineno="44" lineno="None" format_args="fn, d">
          <AssName fromlineno="44" tolineno="44" lineno="44" name="fn"/>
          <AssName fromlineno="44" tolineno="44" lineno="44" name="d"/>
        </Arguments>
        <If fromlineno="45" tolineno="46" lineno="45">
          <CallFunc fromlineno="45" tolineno="45" lineno="45" func="Getattr(exists)">
            <Getattr fromlineno="45" tolineno="45" lineno="45" attrname="exists" expr="os.path">
              <Getattr fromlineno="45" tolineno="45" lineno="45" attrname="path" expr="os">
                <Name fromlineno="45" tolineno="45" lineno="45" name="os"/>
              </Getattr>
            </Getattr>
            <Name fromlineno="45" tolineno="45" lineno="45" name="fn"/>
          </CallFunc>
          <Return fromlineno="46" tolineno="46" lineno="46">
            <Name fromlineno="46" tolineno="46" lineno="46" name="fn"/>
          </Return>
        </If>
        <If fromlineno="48" tolineno="49" lineno="48">
          <Compare fromlineno="48" tolineno="48" lineno="48" op="('not in', &lt;Name(fn) l.48 [bb.parse.parse_py.ConfHandler] at Oxa067d2c&gt;)">
            <Const fromlineno="48" tolineno="48" lineno="48" type="str">'://'</Const>
            <Name fromlineno="48" tolineno="48" lineno="48" name="fn"/>
          </Compare>
          <Return fromlineno="49" tolineno="49" lineno="49">
            <Name fromlineno="49" tolineno="49" lineno="49" name="fn"/>
          </Return>
        </If>
        <Assign fromlineno="51" tolineno="51" lineno="51" targets="[&lt;AssName(localfn) l.51 [bb.parse.parse_py.ConfHandler] at Oxa067e0c&gt;]" value="None">
          <AssName fromlineno="51" tolineno="51" lineno="51" name="localfn"/>
          <Const fromlineno="51" tolineno="51" lineno="51" type="NoneType">None</Const>
        </Assign>
        <TryExcept fromlineno="52" tolineno="55" lineno="52">
          <Assign fromlineno="53" tolineno="53" lineno="53" targets="[&lt;AssName(localfn) l.53 [bb.parse.parse_py.ConfHandler] at Oxa067f0c&gt;]" value="bb.fetch.localpath(fn, d, False)">
            <AssName fromlineno="53" tolineno="53" lineno="53" name="localfn"/>
            <CallFunc fromlineno="53" tolineno="53" lineno="53" func="Getattr(localpath)">
              <Getattr fromlineno="53" tolineno="53" lineno="53" attrname="localpath" expr="bb.fetch">
                <Getattr fromlineno="53" tolineno="53" lineno="53" attrname="fetch" expr="bb">
                  <Name fromlineno="53" tolineno="53" lineno="53" name="bb"/>
                </Getattr>
              </Getattr>
              <Name fromlineno="53" tolineno="53" lineno="53" name="fn"/>
              <Name fromlineno="53" tolineno="53" lineno="53" name="d"/>
              <Const fromlineno="53" tolineno="53" lineno="53" type="bool">False</Const>
            </CallFunc>
          </Assign>
          <ExceptHandler fromlineno="54" tolineno="55" lineno="54">
            <Getattr fromlineno="54" tolineno="54" lineno="54" attrname="MalformedUrl" expr="bb">
              <Name fromlineno="54" tolineno="54" lineno="54" name="bb"/>
            </Getattr>
            <Pass fromlineno="55" tolineno="55" lineno="55"/>
          </ExceptHandler>
        </TryExcept>
        <If fromlineno="57" tolineno="58" lineno="57">
          <UnaryOp fromlineno="57" tolineno="57" lineno="57">
            <Name fromlineno="57" tolineno="57" lineno="57" name="localfn"/>
          </UnaryOp>
          <Return fromlineno="58" tolineno="58" lineno="58">
            <Name fromlineno="58" tolineno="58" lineno="58" name="fn"/>
          </Return>
        </If>
        <Return fromlineno="59" tolineno="59" lineno="59">
          <Name fromlineno="59" tolineno="59" lineno="59" name="localfn"/>
        </Return>
      </Function>
      <Function fromlineno="61" tolineno="89" lineno="61">
        <Arguments fromlineno="61" tolineno="61" lineno="None" format_args="fn, data">
          <AssName fromlineno="61" tolineno="61" lineno="61" name="fn"/>
          <AssName fromlineno="61" tolineno="61" lineno="61" name="data"/>
        </Arguments>
        <Import fromlineno="62" tolineno="62" lineno="62">
          <ImportName name="sys"/>
          <ImportName name="bb"/>
        </Import>
        <Assign fromlineno="63" tolineno="63" lineno="63" targets="[&lt;AssName(fn) l.63 [bb.parse.parse_py.ConfHandler] at Oxa06b42c&gt;]" value="bb.data.expand(fn, data)">
          <AssName fromlineno="63" tolineno="63" lineno="63" name="fn"/>
          <CallFunc fromlineno="63" tolineno="63" lineno="63" func="Getattr(expand)">
            <Getattr fromlineno="63" tolineno="63" lineno="63" attrname="expand" expr="bb.data">
              <Getattr fromlineno="63" tolineno="63" lineno="63" attrname="data" expr="bb">
                <Name fromlineno="63" tolineno="63" lineno="63" name="bb"/>
              </Getattr>
            </Getattr>
            <Name fromlineno="63" tolineno="63" lineno="63" name="fn"/>
            <Name fromlineno="63" tolineno="63" lineno="63" name="data"/>
          </CallFunc>
        </Assign>
        <Assign fromlineno="64" tolineno="64" lineno="64" targets="[&lt;AssName(localfn) l.64 [bb.parse.parse_py.ConfHandler] at Oxa06b5ac&gt;]" value="bb.data.expand(localpath(fn, data), data)">
          <AssName fromlineno="64" tolineno="64" lineno="64" name="localfn"/>
          <CallFunc fromlineno="64" tolineno="64" lineno="64" func="Getattr(expand)">
            <Getattr fromlineno="64" tolineno="64" lineno="64" attrname="expand" expr="bb.data">
              <Getattr fromlineno="64" tolineno="64" lineno="64" attrname="data" expr="bb">
                <Name fromlineno="64" tolineno="64" lineno="64" name="bb"/>
              </Getattr>
            </Getattr>
            <CallFunc fromlineno="64" tolineno="64" lineno="64" func="Name(localpath)">
              <Name fromlineno="64" tolineno="64" lineno="64" name="localpath"/>
              <Name fromlineno="64" tolineno="64" lineno="64" name="fn"/>
              <Name fromlineno="64" tolineno="64" lineno="64" name="data"/>
            </CallFunc>
            <Name fromlineno="64" tolineno="64" lineno="64" name="data"/>
          </CallFunc>
        </Assign>
        <If fromlineno="66" tolineno="88" lineno="66">
          <Compare fromlineno="66" tolineno="66" lineno="66" op="('!=', &lt;Name(fn) l.66 [bb.parse.parse_py.ConfHandler] at Oxa06b7ec&gt;)">
            <Name fromlineno="66" tolineno="66" lineno="66" name="localfn"/>
            <Name fromlineno="66" tolineno="66" lineno="66" name="fn"/>
          </Compare>
          <Assign fromlineno="67" tolineno="67" lineno="67" targets="[&lt;AssName(dldir) l.67 [bb.parse.parse_py.ConfHandler] at Oxa06b88c&gt;]" value="bb.data.getVar('DL_DIR', data, 1)">
            <AssName fromlineno="67" tolineno="67" lineno="67" name="dldir"/>
            <CallFunc fromlineno="67" tolineno="67" lineno="67" func="Getattr(getVar)">
              <Getattr fromlineno="67" tolineno="67" lineno="67" attrname="getVar" expr="bb.data">
                <Getattr fromlineno="67" tolineno="67" lineno="67" attrname="data" expr="bb">
                  <Name fromlineno="67" tolineno="67" lineno="67" name="bb"/>
                </Getattr>
              </Getattr>
              <Const fromlineno="67" tolineno="67" lineno="67" type="str">'DL_DIR'</Const>
              <Name fromlineno="67" tolineno="67" lineno="67" name="data"/>
              <Const fromlineno="67" tolineno="67" lineno="67" type="int">1</Const>
            </CallFunc>
          </Assign>
          <If fromlineno="68" tolineno="70" lineno="68">
            <UnaryOp fromlineno="68" tolineno="68" lineno="68">
              <Name fromlineno="68" tolineno="68" lineno="68" name="dldir"/>
            </UnaryOp>
            <Discard fromlineno="69" tolineno="69" lineno="69">
              <CallFunc fromlineno="69" tolineno="69" lineno="69" func="Getattr(debug)">
                <Getattr fromlineno="69" tolineno="69" lineno="69" attrname="debug" expr="bb.msg">
                  <Getattr fromlineno="69" tolineno="69" lineno="69" attrname="msg" expr="bb">
                    <Name fromlineno="69" tolineno="69" lineno="69" name="bb"/>
                  </Getattr>
                </Getattr>
                <Const fromlineno="69" tolineno="69" lineno="69" type="int">1</Const>
                <Getattr fromlineno="69" tolineno="69" lineno="69" attrname="Parsing" expr="bb.msg.domain">
                  <Getattr fromlineno="69" tolineno="69" lineno="69" attrname="domain" expr="bb.msg">
                    <Getattr fromlineno="69" tolineno="69" lineno="69" attrname="msg" expr="bb">
                      <Name fromlineno="69" tolineno="69" lineno="69" name="bb"/>
                    </Getattr>
                  </Getattr>
                </Getattr>
                <Const fromlineno="69" tolineno="69" lineno="69" type="str">'obtain: DL_DIR not defined'</Const>
              </CallFunc>
            </Discard>
            <Return fromlineno="70" tolineno="70" lineno="70">
              <Name fromlineno="70" tolineno="70" lineno="70" name="localfn"/>
            </Return>
          </If>
          <Discard fromlineno="71" tolineno="71" lineno="71">
            <CallFunc fromlineno="71" tolineno="71" lineno="71" func="Getattr(mkdirhier)">
              <Getattr fromlineno="71" tolineno="71" lineno="71" attrname="mkdirhier" expr="bb">
                <Name fromlineno="71" tolineno="71" lineno="71" name="bb"/>
              </Getattr>
              <Name fromlineno="71" tolineno="71" lineno="71" name="dldir"/>
            </CallFunc>
          </Discard>
          <TryExcept fromlineno="72" tolineno="77" lineno="72">
            <Discard fromlineno="73" tolineno="73" lineno="73">
              <CallFunc fromlineno="73" tolineno="73" lineno="73" func="Getattr(init)">
                <Getattr fromlineno="73" tolineno="73" lineno="73" attrname="init" expr="bb.fetch">
                  <Getattr fromlineno="73" tolineno="73" lineno="73" attrname="fetch" expr="bb">
                    <Name fromlineno="73" tolineno="73" lineno="73" name="bb"/>
                  </Getattr>
                </Getattr>
                <List fromlineno="73" tolineno="73" lineno="73">
                  <Name fromlineno="73" tolineno="73" lineno="73" name="fn"/>
                </List>
                <Name fromlineno="73" tolineno="73" lineno="73" name="data"/>
              </CallFunc>
            </Discard>
            <ExceptHandler fromlineno="74" tolineno="77" lineno="74">
              <Getattr fromlineno="74" tolineno="74" lineno="74" attrname="NoMethodError" expr="bb.fetch">
                <Getattr fromlineno="74" tolineno="74" lineno="74" attrname="fetch" expr="bb">
                  <Name fromlineno="74" tolineno="74" lineno="74" name="bb"/>
                </Getattr>
              </Getattr>
              <Assign fromlineno="75" tolineno="75" lineno="75" targets="[&lt;Tuple(tuple) l.75 [bb.parse.parse_py.ConfHandler] at Oxa06bfcc&gt;]" value="sys.exc_info()">
                <Tuple fromlineno="75" tolineno="75" lineno="75">
                  <AssName fromlineno="75" tolineno="75" lineno="75" name="type"/>
                  <AssName fromlineno="75" tolineno="75" lineno="75" name="value"/>
                  <AssName fromlineno="75" tolineno="75" lineno="75" name="traceback"/>
                </Tuple>
                <CallFunc fromlineno="75" tolineno="75" lineno="75" func="Getattr(exc_info)">
                  <Getattr fromlineno="75" tolineno="75" lineno="75" attrname="exc_info" expr="sys">
                    <Name fromlineno="75" tolineno="75" lineno="75" name="sys"/>
                  </Getattr>
                </CallFunc>
              </Assign>
              <Discard fromlineno="76" tolineno="76" lineno="76">
                <CallFunc fromlineno="76" tolineno="76" lineno="76" func="Getattr(debug)">
                  <Getattr fromlineno="76" tolineno="76" lineno="76" attrname="debug" expr="bb.msg">
                    <Getattr fromlineno="76" tolineno="76" lineno="76" attrname="msg" expr="bb">
                      <Name fromlineno="76" tolineno="76" lineno="76" name="bb"/>
                    </Getattr>
                  </Getattr>
                  <Const fromlineno="76" tolineno="76" lineno="76" type="int">1</Const>
                  <Getattr fromlineno="76" tolineno="76" lineno="76" attrname="Parsing" expr="bb.msg.domain">
                    <Getattr fromlineno="76" tolineno="76" lineno="76" attrname="domain" expr="bb.msg">
                      <Getattr fromlineno="76" tolineno="76" lineno="76" attrname="msg" expr="bb">
                        <Name fromlineno="76" tolineno="76" lineno="76" name="bb"/>
                      </Getattr>
                    </Getattr>
                  </Getattr>
                  <BinOp fromlineno="76" tolineno="76" lineno="76" op="%" left="'obtain: no method: %s'" right="value">
                    <Const fromlineno="76" tolineno="76" lineno="76" type="str">'obtain: no method: %s'</Const>
                    <Name fromlineno="76" tolineno="76" lineno="76" name="value"/>
                  </BinOp>
                </CallFunc>
              </Discard>
              <Return fromlineno="77" tolineno="77" lineno="77">
                <Name fromlineno="77" tolineno="77" lineno="77" name="localfn"/>
              </Return>
            </ExceptHandler>
          </TryExcept>
          <TryExcept fromlineno="79" tolineno="88" lineno="79">
            <Discard fromlineno="80" tolineno="80" lineno="80">
              <CallFunc fromlineno="80" tolineno="80" lineno="80" func="Getattr(go)">
                <Getattr fromlineno="80" tolineno="80" lineno="80" attrname="go" expr="bb.fetch">
                  <Getattr fromlineno="80" tolineno="80" lineno="80" attrname="fetch" expr="bb">
                    <Name fromlineno="80" tolineno="80" lineno="80" name="bb"/>
                  </Getattr>
                </Getattr>
                <Name fromlineno="80" tolineno="80" lineno="80" name="data"/>
              </CallFunc>
            </Discard>
            <ExceptHandler fromlineno="81" tolineno="84" lineno="81">
              <Getattr fromlineno="81" tolineno="81" lineno="81" attrname="MissingParameterError" expr="bb.fetch">
                <Getattr fromlineno="81" tolineno="81" lineno="81" attrname="fetch" expr="bb">
                  <Name fromlineno="81" tolineno="81" lineno="81" name="bb"/>
                </Getattr>
              </Getattr>
              <Assign fromlineno="82" tolineno="82" lineno="82" targets="[&lt;Tuple(tuple) l.82 [bb.parse.parse_py.ConfHandler] at Oxa06f5ac&gt;]" value="sys.exc_info()">
                <Tuple fromlineno="82" tolineno="82" lineno="82">
                  <AssName fromlineno="82" tolineno="82" lineno="82" name="type"/>
                  <AssName fromlineno="82" tolineno="82" lineno="82" name="value"/>
                  <AssName fromlineno="82" tolineno="82" lineno="82" name="traceback"/>
                </Tuple>
                <CallFunc fromlineno="82" tolineno="82" lineno="82" func="Getattr(exc_info)">
                  <Getattr fromlineno="82" tolineno="82" lineno="82" attrname="exc_info" expr="sys">
                    <Name fromlineno="82" tolineno="82" lineno="82" name="sys"/>
                  </Getattr>
                </CallFunc>
              </Assign>
              <Discard fromlineno="83" tolineno="83" lineno="83">
                <CallFunc fromlineno="83" tolineno="83" lineno="83" func="Getattr(debug)">
                  <Getattr fromlineno="83" tolineno="83" lineno="83" attrname="debug" expr="bb.msg">
                    <Getattr fromlineno="83" tolineno="83" lineno="83" attrname="msg" expr="bb">
                      <Name fromlineno="83" tolineno="83" lineno="83" name="bb"/>
                    </Getattr>
                  </Getattr>
                  <Const fromlineno="83" tolineno="83" lineno="83" type="int">1</Const>
                  <Getattr fromlineno="83" tolineno="83" lineno="83" attrname="Parsing" expr="bb.msg.domain">
                    <Getattr fromlineno="83" tolineno="83" lineno="83" attrname="domain" expr="bb.msg">
                      <Getattr fromlineno="83" tolineno="83" lineno="83" attrname="msg" expr="bb">
                        <Name fromlineno="83" tolineno="83" lineno="83" name="bb"/>
                      </Getattr>
                    </Getattr>
                  </Getattr>
                  <BinOp fromlineno="83" tolineno="83" lineno="83" op="%" left="'obtain: missing parameters: %s'" right="value">
                    <Const fromlineno="83" tolineno="83" lineno="83" type="str">'obtain: missing parameters: %s'</Const>
                    <Name fromlineno="83" tolineno="83" lineno="83" name="value"/>
                  </BinOp>
                </CallFunc>
              </Discard>
              <Return fromlineno="84" tolineno="84" lineno="84">
                <Name fromlineno="84" tolineno="84" lineno="84" name="localfn"/>
              </Return>
            </ExceptHandler>
            <ExceptHandler fromlineno="85" tolineno="88" lineno="85">
              <Getattr fromlineno="85" tolineno="85" lineno="85" attrname="FetchError" expr="bb.fetch">
                <Getattr fromlineno="85" tolineno="85" lineno="85" attrname="fetch" expr="bb">
                  <Name fromlineno="85" tolineno="85" lineno="85" name="bb"/>
                </Getattr>
              </Getattr>
              <Assign fromlineno="86" tolineno="86" lineno="86" targets="[&lt;Tuple(tuple) l.86 [bb.parse.parse_py.ConfHandler] at Oxa06f9ac&gt;]" value="sys.exc_info()">
                <Tuple fromlineno="86" tolineno="86" lineno="86">
                  <AssName fromlineno="86" tolineno="86" lineno="86" name="type"/>
                  <AssName fromlineno="86" tolineno="86" lineno="86" name="value"/>
                  <AssName fromlineno="86" tolineno="86" lineno="86" name="traceback"/>
                </Tuple>
                <CallFunc fromlineno="86" tolineno="86" lineno="86" func="Getattr(exc_info)">
                  <Getattr fromlineno="86" tolineno="86" lineno="86" attrname="exc_info" expr="sys">
                    <Name fromlineno="86" tolineno="86" lineno="86" name="sys"/>
                  </Getattr>
                </CallFunc>
              </Assign>
              <Discard fromlineno="87" tolineno="87" lineno="87">
                <CallFunc fromlineno="87" tolineno="87" lineno="87" func="Getattr(debug)">
                  <Getattr fromlineno="87" tolineno="87" lineno="87" attrname="debug" expr="bb.msg">
                    <Getattr fromlineno="87" tolineno="87" lineno="87" attrname="msg" expr="bb">
                      <Name fromlineno="87" tolineno="87" lineno="87" name="bb"/>
                    </Getattr>
                  </Getattr>
                  <Const fromlineno="87" tolineno="87" lineno="87" type="int">1</Const>
                  <Getattr fromlineno="87" tolineno="87" lineno="87" attrname="Parsing" expr="bb.msg.domain">
                    <Getattr fromlineno="87" tolineno="87" lineno="87" attrname="domain" expr="bb.msg">
                      <Getattr fromlineno="87" tolineno="87" lineno="87" attrname="msg" expr="bb">
                        <Name fromlineno="87" tolineno="87" lineno="87" name="bb"/>
                      </Getattr>
                    </Getattr>
                  </Getattr>
                  <BinOp fromlineno="87" tolineno="87" lineno="87" op="%" left="'obtain: failed: %s'" right="value">
                    <Const fromlineno="87" tolineno="87" lineno="87" type="str">'obtain: failed: %s'</Const>
                    <Name fromlineno="87" tolineno="87" lineno="87" name="value"/>
                  </BinOp>
                </CallFunc>
              </Discard>
              <Return fromlineno="88" tolineno="88" lineno="88">
                <Name fromlineno="88" tolineno="88" lineno="88" name="localfn"/>
              </Return>
            </ExceptHandler>
          </TryExcept>
        </If>
        <Return fromlineno="89" tolineno="89" lineno="89">
          <Name fromlineno="89" tolineno="89" lineno="89" name="localfn"/>
        </Return>
      </Function>
      <Function fromlineno="92" tolineno="117" lineno="92">
        <Arguments fromlineno="92" tolineno="92" lineno="None" format_args="oldfn, fn, data, error_out">
          <AssName fromlineno="92" tolineno="92" lineno="92" name="oldfn"/>
          <AssName fromlineno="92" tolineno="92" lineno="92" name="fn"/>
          <AssName fromlineno="92" tolineno="92" lineno="92" name="data"/>
          <AssName fromlineno="92" tolineno="92" lineno="92" name="error_out"/>
        </Arguments>
        <If fromlineno="97" tolineno="98" lineno="97">
          <Compare fromlineno="97" tolineno="97" lineno="97" op="('==', &lt;Name(fn) l.97 [bb.parse.parse_py.ConfHandler] at Oxa06feec&gt;)">
            <Name fromlineno="97" tolineno="97" lineno="97" name="oldfn"/>
            <Name fromlineno="97" tolineno="97" lineno="97" name="fn"/>
          </Compare>
          <Return fromlineno="98" tolineno="98" lineno="98">
            <Const fromlineno="98" tolineno="98" lineno="98" type="NoneType">None</Const>
          </Return>
        </If>
        <Import fromlineno="100" tolineno="100" lineno="100">
          <ImportName name="bb"/>
        </Import>
        <Assign fromlineno="101" tolineno="101" lineno="101" targets="[&lt;AssName(fn) l.101 [bb.parse.parse_py.ConfHandler] at Oxa07204c&gt;]" value="bb.data.expand(fn, data)">
          <AssName fromlineno="101" tolineno="101" lineno="101" name="fn"/>
          <CallFunc fromlineno="101" tolineno="101" lineno="101" func="Getattr(expand)">
            <Getattr fromlineno="101" tolineno="101" lineno="101" attrname="expand" expr="bb.data">
              <Getattr fromlineno="101" tolineno="101" lineno="101" attrname="data" expr="bb">
                <Name fromlineno="101" tolineno="101" lineno="101" name="bb"/>
              </Getattr>
            </Getattr>
            <Name fromlineno="101" tolineno="101" lineno="101" name="fn"/>
            <Name fromlineno="101" tolineno="101" lineno="101" name="data"/>
          </CallFunc>
        </Assign>
        <Assign fromlineno="102" tolineno="102" lineno="102" targets="[&lt;AssName(oldfn) l.102 [bb.parse.parse_py.ConfHandler] at Oxa0721ac&gt;]" value="bb.data.expand(oldfn, data)">
          <AssName fromlineno="102" tolineno="102" lineno="102" name="oldfn"/>
          <CallFunc fromlineno="102" tolineno="102" lineno="102" func="Getattr(expand)">
            <Getattr fromlineno="102" tolineno="102" lineno="102" attrname="expand" expr="bb.data">
              <Getattr fromlineno="102" tolineno="102" lineno="102" attrname="data" expr="bb">
                <Name fromlineno="102" tolineno="102" lineno="102" name="bb"/>
              </Getattr>
            </Getattr>
            <Name fromlineno="102" tolineno="102" lineno="102" name="oldfn"/>
            <Name fromlineno="102" tolineno="102" lineno="102" name="data"/>
          </CallFunc>
        </Assign>
        <If fromlineno="104" tolineno="109" lineno="104">
          <UnaryOp fromlineno="104" tolineno="104" lineno="104">
            <CallFunc fromlineno="104" tolineno="104" lineno="104" func="Getattr(isabs)">
              <Getattr fromlineno="104" tolineno="104" lineno="104" attrname="isabs" expr="os.path">
                <Getattr fromlineno="104" tolineno="104" lineno="104" attrname="path" expr="os">
                  <Name fromlineno="104" tolineno="104" lineno="104" name="os"/>
                </Getattr>
              </Getattr>
              <Name fromlineno="104" tolineno="104" lineno="104" name="fn"/>
            </CallFunc>
          </UnaryOp>
          <Assign fromlineno="105" tolineno="105" lineno="105" targets="[&lt;AssName(dname) l.105 [bb.parse.parse_py.ConfHandler] at Oxa07242c&gt;]" value="os.path.dirname(oldfn)">
            <AssName fromlineno="105" tolineno="105" lineno="105" name="dname"/>
            <CallFunc fromlineno="105" tolineno="105" lineno="105" func="Getattr(dirname)">
              <Getattr fromlineno="105" tolineno="105" lineno="105" attrname="dirname" expr="os.path">
                <Getattr fromlineno="105" tolineno="105" lineno="105" attrname="path" expr="os">
                  <Name fromlineno="105" tolineno="105" lineno="105" name="os"/>
                </Getattr>
              </Getattr>
              <Name fromlineno="105" tolineno="105" lineno="105" name="oldfn"/>
            </CallFunc>
          </Assign>
          <Assign fromlineno="106" tolineno="106" lineno="106" targets="[&lt;AssName(bbpath) l.106 [bb.parse.parse_py.ConfHandler] at Oxa07256c&gt;]" value="('%s:%s') % ((dname, bb.data.getVar('BBPATH', data, 1)))">
            <AssName fromlineno="106" tolineno="106" lineno="106" name="bbpath"/>
            <BinOp fromlineno="106" tolineno="106" lineno="106" op="%" left="'%s:%s'" right="(dname, bb.data.getVar('BBPATH', data, 1))">
              <Const fromlineno="106" tolineno="106" lineno="106" type="str">'%s:%s'</Const>
              <Tuple fromlineno="106" tolineno="106" lineno="106">
                <Name fromlineno="106" tolineno="106" lineno="106" name="dname"/>
                <CallFunc fromlineno="106" tolineno="106" lineno="106" func="Getattr(getVar)">
                  <Getattr fromlineno="106" tolineno="106" lineno="106" attrname="getVar" expr="bb.data">
                    <Getattr fromlineno="106" tolineno="106" lineno="106" attrname="data" expr="bb">
                      <Name fromlineno="106" tolineno="106" lineno="106" name="bb"/>
                    </Getattr>
                  </Getattr>
                  <Const fromlineno="106" tolineno="106" lineno="106" type="str">'BBPATH'</Const>
                  <Name fromlineno="106" tolineno="106" lineno="106" name="data"/>
                  <Const fromlineno="106" tolineno="106" lineno="106" type="int">1</Const>
                </CallFunc>
              </Tuple>
            </BinOp>
          </Assign>
          <Assign fromlineno="107" tolineno="107" lineno="107" targets="[&lt;AssName(abs_fn) l.107 [bb.parse.parse_py.ConfHandler] at Oxa07278c&gt;]" value="bb.which(bbpath, fn)">
            <AssName fromlineno="107" tolineno="107" lineno="107" name="abs_fn"/>
            <CallFunc fromlineno="107" tolineno="107" lineno="107" func="Getattr(which)">
              <Getattr fromlineno="107" tolineno="107" lineno="107" attrname="which" expr="bb">
                <Name fromlineno="107" tolineno="107" lineno="107" name="bb"/>
              </Getattr>
              <Name fromlineno="107" tolineno="107" lineno="107" name="bbpath"/>
              <Name fromlineno="107" tolineno="107" lineno="107" name="fn"/>
            </CallFunc>
          </Assign>
          <If fromlineno="108" tolineno="109" lineno="108">
            <Name fromlineno="108" tolineno="108" lineno="108" name="abs_fn"/>
            <Assign fromlineno="109" tolineno="109" lineno="109" targets="[&lt;AssName(fn) l.109 [bb.parse.parse_py.ConfHandler] at Oxa07296c&gt;]" value="abs_fn">
              <AssName fromlineno="109" tolineno="109" lineno="109" name="fn"/>
              <Name fromlineno="109" tolineno="109" lineno="109" name="abs_fn"/>
            </Assign>
          </If>
        </If>
        <From fromlineno="111" tolineno="111" lineno="111" modname="bb.parse">
          <ImportName name="handle"/>
        </From>
        <TryExcept fromlineno="112" tolineno="117" lineno="112">
          <Assign fromlineno="113" tolineno="113" lineno="113" targets="[&lt;AssName(ret) l.113 [bb.parse.parse_py.ConfHandler] at Oxa072a8c&gt;]" value="handle(fn, data, True)">
            <AssName fromlineno="113" tolineno="113" lineno="113" name="ret"/>
            <CallFunc fromlineno="113" tolineno="113" lineno="113" func="Name(handle)">
              <Name fromlineno="113" tolineno="113" lineno="113" name="handle"/>
              <Name fromlineno="113" tolineno="113" lineno="113" name="fn"/>
              <Name fromlineno="113" tolineno="113" lineno="113" name="data"/>
              <Const fromlineno="113" tolineno="113" lineno="113" type="bool">True</Const>
            </CallFunc>
          </Assign>
          <ExceptHandler fromlineno="114" tolineno="117" lineno="114">
            <Name fromlineno="114" tolineno="114" lineno="114" name="IOError"/>
            <If fromlineno="115" tolineno="116" lineno="115">
              <Name fromlineno="115" tolineno="115" lineno="115" name="error_out"/>
              <Raise fromlineno="116" tolineno="116" lineno="116">
                <CallFunc fromlineno="116" tolineno="116" lineno="116" func="Name(ParseError)">
                  <Name fromlineno="116" tolineno="116" lineno="116" name="ParseError"/>
                  <BinOp fromlineno="116" tolineno="116" lineno="116" op="%" left="'Could not %(error_out)s file %(fn)s'" right="vars()">
                    <Const fromlineno="116" tolineno="116" lineno="116" type="str">'Could not %(error_out)s file %(fn)s'</Const>
                    <CallFunc fromlineno="116" tolineno="116" lineno="116" func="Name(vars)">
                      <Name fromlineno="116" tolineno="116" lineno="116" name="vars"/>
                    </CallFunc>
                  </BinOp>
                </CallFunc>
              </Raise>
            </If>
            <Discard fromlineno="117" tolineno="117" lineno="117">
              <CallFunc fromlineno="117" tolineno="117" lineno="117" func="Getattr(debug)">
                <Getattr fromlineno="117" tolineno="117" lineno="117" attrname="debug" expr="bb.msg">
                  <Getattr fromlineno="117" tolineno="117" lineno="117" attrname="msg" expr="bb">
                    <Name fromlineno="117" tolineno="117" lineno="117" name="bb"/>
                  </Getattr>
                </Getattr>
                <Const fromlineno="117" tolineno="117" lineno="117" type="int">2</Const>
                <Getattr fromlineno="117" tolineno="117" lineno="117" attrname="Parsing" expr="bb.msg.domain">
                  <Getattr fromlineno="117" tolineno="117" lineno="117" attrname="domain" expr="bb.msg">
                    <Getattr fromlineno="117" tolineno="117" lineno="117" attrname="msg" expr="bb">
                      <Name fromlineno="117" tolineno="117" lineno="117" name="bb"/>
                    </Getattr>
                  </Getattr>
                </Getattr>
                <BinOp fromlineno="117" tolineno="117" lineno="117" op="%" left="&quot;CONF file '%s' not found&quot;" right="fn">
                  <Const fromlineno="117" tolineno="117" lineno="117" type="str">"CONF file '%s' not found"</Const>
                  <Name fromlineno="117" tolineno="117" lineno="117" name="fn"/>
                </BinOp>
              </CallFunc>
            </Discard>
          </ExceptHandler>
        </TryExcept>
      </Function>
      <Function fromlineno="119" tolineno="170" lineno="119">
        <Arguments fromlineno="119" tolineno="119" lineno="None" format_args="fn, data, include=0">
          <AssName fromlineno="119" tolineno="119" lineno="119" name="fn"/>
          <AssName fromlineno="119" tolineno="119" lineno="119" name="data"/>
          <AssName fromlineno="119" tolineno="119" lineno="119" name="include"/>
          <Const fromlineno="119" tolineno="119" lineno="119" type="int">0</Const>
        </Arguments>
        <If fromlineno="120" tolineno="123" lineno="120">
          <Name fromlineno="120" tolineno="120" lineno="120" name="include"/>
          <Assign fromlineno="121" tolineno="121" lineno="121" targets="[&lt;AssName(inc_string) l.121 [bb.parse.parse_py.ConfHandler] at Oxa07720c&gt;]" value="'including'">
            <AssName fromlineno="121" tolineno="121" lineno="121" name="inc_string"/>
            <Const fromlineno="121" tolineno="121" lineno="121" type="str">'including'</Const>
          </Assign>
          <Assign fromlineno="123" tolineno="123" lineno="123" targets="[&lt;AssName(inc_string) l.123 [bb.parse.parse_py.ConfHandler] at Oxa0772cc&gt;]" value="'reading'">
            <AssName fromlineno="123" tolineno="123" lineno="123" name="inc_string"/>
            <Const fromlineno="123" tolineno="123" lineno="123" type="str">'reading'</Const>
          </Assign>
        </If>
        <Discard fromlineno="124" tolineno="124" lineno="124">
          <CallFunc fromlineno="124" tolineno="124" lineno="124" func="Name(init)">
            <Name fromlineno="124" tolineno="124" lineno="124" name="init"/>
            <Name fromlineno="124" tolineno="124" lineno="124" name="data"/>
          </CallFunc>
        </Discard>
        <If fromlineno="126" tolineno="129" lineno="126">
          <Compare fromlineno="126" tolineno="126" lineno="126" op="('==', &lt;Const(int) l.126 [bb.parse.parse_py.ConfHandler] at Oxa07742c&gt;)">
            <Name fromlineno="126" tolineno="126" lineno="126" name="include"/>
            <Const fromlineno="126" tolineno="126" lineno="126" type="int">0</Const>
          </Compare>
          <Assign fromlineno="127" tolineno="127" lineno="127" targets="[&lt;AssName(oldfile) l.127 [bb.parse.parse_py.ConfHandler] at Oxa0774cc&gt;]" value="None">
            <AssName fromlineno="127" tolineno="127" lineno="127" name="oldfile"/>
            <Const fromlineno="127" tolineno="127" lineno="127" type="NoneType">None</Const>
          </Assign>
          <Assign fromlineno="129" tolineno="129" lineno="129" targets="[&lt;AssName(oldfile) l.129 [bb.parse.parse_py.ConfHandler] at Oxa07758c&gt;]" value="bb.data.getVar('FILE', data)">
            <AssName fromlineno="129" tolineno="129" lineno="129" name="oldfile"/>
            <CallFunc fromlineno="129" tolineno="129" lineno="129" func="Getattr(getVar)">
              <Getattr fromlineno="129" tolineno="129" lineno="129" attrname="getVar" expr="bb.data">
                <Getattr fromlineno="129" tolineno="129" lineno="129" attrname="data" expr="bb">
                  <Name fromlineno="129" tolineno="129" lineno="129" name="bb"/>
                </Getattr>
              </Getattr>
              <Const fromlineno="129" tolineno="129" lineno="129" type="str">'FILE'</Const>
              <Name fromlineno="129" tolineno="129" lineno="129" name="data"/>
            </CallFunc>
          </Assign>
        </If>
        <Assign fromlineno="131" tolineno="131" lineno="131" targets="[&lt;AssName(fn) l.131 [bb.parse.parse_py.ConfHandler] at Oxa0776ac&gt;]" value="obtain(fn, data)">
          <AssName fromlineno="131" tolineno="131" lineno="131" name="fn"/>
          <CallFunc fromlineno="131" tolineno="131" lineno="131" func="Name(obtain)">
            <Name fromlineno="131" tolineno="131" lineno="131" name="obtain"/>
            <Name fromlineno="131" tolineno="131" lineno="131" name="fn"/>
            <Name fromlineno="131" tolineno="131" lineno="131" name="data"/>
          </CallFunc>
        </Assign>
        <If fromlineno="132" tolineno="147" lineno="132">
          <UnaryOp fromlineno="132" tolineno="132" lineno="132">
            <CallFunc fromlineno="132" tolineno="132" lineno="132" func="Getattr(isabs)">
              <Getattr fromlineno="132" tolineno="132" lineno="132" attrname="isabs" expr="os.path">
                <Getattr fromlineno="132" tolineno="132" lineno="132" attrname="path" expr="os">
                  <Name fromlineno="132" tolineno="132" lineno="132" name="os"/>
                </Getattr>
              </Getattr>
              <Name fromlineno="132" tolineno="132" lineno="132" name="fn"/>
            </CallFunc>
          </UnaryOp>
          <Assign fromlineno="133" tolineno="133" lineno="133" targets="[&lt;AssName(f) l.133 [bb.parse.parse_py.ConfHandler] at Oxa0778ec&gt;]" value="None">
            <AssName fromlineno="133" tolineno="133" lineno="133" name="f"/>
            <Const fromlineno="133" tolineno="133" lineno="133" type="NoneType">None</Const>
          </Assign>
          <Assign fromlineno="134" tolineno="134" lineno="134" targets="[&lt;AssName(bbpath) l.134 [bb.parse.parse_py.ConfHandler] at Oxa07798c&gt;]" value="(bb.data.getVar('BBPATH', data, 1)) or ([])">
            <AssName fromlineno="134" tolineno="134" lineno="134" name="bbpath"/>
            <BoolOp fromlineno="134" tolineno="134" lineno="134" op="or" values="bb.data.getVar('BBPATH', data, 1),[],">
              <CallFunc fromlineno="134" tolineno="134" lineno="134" func="Getattr(getVar)">
                <Getattr fromlineno="134" tolineno="134" lineno="134" attrname="getVar" expr="bb.data">
                  <Getattr fromlineno="134" tolineno="134" lineno="134" attrname="data" expr="bb">
                    <Name fromlineno="134" tolineno="134" lineno="134" name="bb"/>
                  </Getattr>
                </Getattr>
                <Const fromlineno="134" tolineno="134" lineno="134" type="str">'BBPATH'</Const>
                <Name fromlineno="134" tolineno="134" lineno="134" name="data"/>
                <Const fromlineno="134" tolineno="134" lineno="134" type="int">1</Const>
              </CallFunc>
              <List fromlineno="134" tolineno="134" lineno="134"/>
            </BoolOp>
          </Assign>
          <For fromlineno="135" tolineno="141" lineno="135">
            <AssName fromlineno="135" tolineno="135" lineno="135" name="p"/>
            <CallFunc fromlineno="135" tolineno="135" lineno="135" func="Getattr(split)">
              <Getattr fromlineno="135" tolineno="135" lineno="135" attrname="split" expr="bbpath">
                <Name fromlineno="135" tolineno="135" lineno="135" name="bbpath"/>
              </Getattr>
              <Const fromlineno="135" tolineno="135" lineno="135" type="str">':'</Const>
            </CallFunc>
            <Assign fromlineno="136" tolineno="136" lineno="136" targets="[&lt;AssName(currname) l.136 [bb.parse.parse_py.ConfHandler] at Oxa077ccc&gt;]" value="os.path.join(p, fn)">
              <AssName fromlineno="136" tolineno="136" lineno="136" name="currname"/>
              <CallFunc fromlineno="136" tolineno="136" lineno="136" func="Getattr(join)">
                <Getattr fromlineno="136" tolineno="136" lineno="136" attrname="join" expr="os.path">
                  <Getattr fromlineno="136" tolineno="136" lineno="136" attrname="path" expr="os">
                    <Name fromlineno="136" tolineno="136" lineno="136" name="os"/>
                  </Getattr>
                </Getattr>
                <Name fromlineno="136" tolineno="136" lineno="136" name="p"/>
                <Name fromlineno="136" tolineno="136" lineno="136" name="fn"/>
              </CallFunc>
            </Assign>
            <If fromlineno="137" tolineno="141" lineno="137">
              <CallFunc fromlineno="137" tolineno="137" lineno="137" func="Getattr(access)">
                <Getattr fromlineno="137" tolineno="137" lineno="137" attrname="access" expr="os">
                  <Name fromlineno="137" tolineno="137" lineno="137" name="os"/>
                </Getattr>
                <Name fromlineno="137" tolineno="137" lineno="137" name="currname"/>
                <Getattr fromlineno="137" tolineno="137" lineno="137" attrname="R_OK" expr="os">
                  <Name fromlineno="137" tolineno="137" lineno="137" name="os"/>
                </Getattr>
              </CallFunc>
              <Assign fromlineno="138" tolineno="138" lineno="138" targets="[&lt;AssName(f) l.138 [bb.parse.parse_py.ConfHandler] at Oxa077f8c&gt;]" value="open(currname, 'r')">
                <AssName fromlineno="138" tolineno="138" lineno="138" name="f"/>
                <CallFunc fromlineno="138" tolineno="138" lineno="138" func="Name(open)">
                  <Name fromlineno="138" tolineno="138" lineno="138" name="open"/>
                  <Name fromlineno="138" tolineno="138" lineno="138" name="currname"/>
                  <Const fromlineno="138" tolineno="138" lineno="138" type="str">'r'</Const>
                </CallFunc>
              </Assign>
              <Assign fromlineno="139" tolineno="139" lineno="139" targets="[&lt;AssName(abs_fn) l.139 [bb.parse.parse_py.ConfHandler] at Oxa07c0ac&gt;]" value="currname">
                <AssName fromlineno="139" tolineno="139" lineno="139" name="abs_fn"/>
                <Name fromlineno="139" tolineno="139" lineno="139" name="currname"/>
              </Assign>
              <Discard fromlineno="140" tolineno="140" lineno="140">
                <CallFunc fromlineno="140" tolineno="140" lineno="140" func="Getattr(debug)">
                  <Getattr fromlineno="140" tolineno="140" lineno="140" attrname="debug" expr="bb.msg">
                    <Getattr fromlineno="140" tolineno="140" lineno="140" attrname="msg" expr="bb">
                      <Name fromlineno="140" tolineno="140" lineno="140" name="bb"/>
                    </Getattr>
                  </Getattr>
                  <Const fromlineno="140" tolineno="140" lineno="140" type="int">2</Const>
                  <Getattr fromlineno="140" tolineno="140" lineno="140" attrname="Parsing" expr="bb.msg.domain">
                    <Getattr fromlineno="140" tolineno="140" lineno="140" attrname="domain" expr="bb.msg">
                      <Getattr fromlineno="140" tolineno="140" lineno="140" attrname="msg" expr="bb">
                        <Name fromlineno="140" tolineno="140" lineno="140" name="bb"/>
                      </Getattr>
                    </Getattr>
                  </Getattr>
                  <BinOp fromlineno="140" tolineno="140" lineno="140" op="%" left="'CONF %s %s'" right="(inc_string, currname)">
                    <Const fromlineno="140" tolineno="140" lineno="140" type="str">'CONF %s %s'</Const>
                    <Tuple fromlineno="140" tolineno="140" lineno="140">
                      <Name fromlineno="140" tolineno="140" lineno="140" name="inc_string"/>
                      <Name fromlineno="140" tolineno="140" lineno="140" name="currname"/>
                    </Tuple>
                  </BinOp>
                </CallFunc>
              </Discard>
              <Break fromlineno="141" tolineno="141" lineno="141"/>
            </If>
          </For>
          <If fromlineno="142" tolineno="143" lineno="142">
            <Compare fromlineno="142" tolineno="142" lineno="142" op="('is', &lt;Const(NoneType) l.142 [bb.parse.parse_py.ConfHandler] at Oxa07c3ec&gt;)">
              <Name fromlineno="142" tolineno="142" lineno="142" name="f"/>
              <Const fromlineno="142" tolineno="142" lineno="142" type="NoneType">None</Const>
            </Compare>
            <Raise fromlineno="143" tolineno="143" lineno="143">
              <CallFunc fromlineno="143" tolineno="143" lineno="143" func="Name(IOError)">
                <Name fromlineno="143" tolineno="143" lineno="143" name="IOError"/>
                <BinOp fromlineno="143" tolineno="143" lineno="143" op="%" left="&quot;file '%s' not found&quot;" right="fn">
                  <Const fromlineno="143" tolineno="143" lineno="143" type="str">"file '%s' not found"</Const>
                  <Name fromlineno="143" tolineno="143" lineno="143" name="fn"/>
                </BinOp>
              </CallFunc>
            </Raise>
          </If>
          <Assign fromlineno="145" tolineno="145" lineno="145" targets="[&lt;AssName(f) l.145 [bb.parse.parse_py.ConfHandler] at Oxa07c58c&gt;]" value="open(fn, 'r')">
            <AssName fromlineno="145" tolineno="145" lineno="145" name="f"/>
            <CallFunc fromlineno="145" tolineno="145" lineno="145" func="Name(open)">
              <Name fromlineno="145" tolineno="145" lineno="145" name="open"/>
              <Name fromlineno="145" tolineno="145" lineno="145" name="fn"/>
              <Const fromlineno="145" tolineno="145" lineno="145" type="str">'r'</Const>
            </CallFunc>
          </Assign>
          <Discard fromlineno="146" tolineno="146" lineno="146">
            <CallFunc fromlineno="146" tolineno="146" lineno="146" func="Getattr(debug)">
              <Getattr fromlineno="146" tolineno="146" lineno="146" attrname="debug" expr="bb.msg">
                <Getattr fromlineno="146" tolineno="146" lineno="146" attrname="msg" expr="bb">
                  <Name fromlineno="146" tolineno="146" lineno="146" name="bb"/>
                </Getattr>
              </Getattr>
              <Const fromlineno="146" tolineno="146" lineno="146" type="int">1</Const>
              <Getattr fromlineno="146" tolineno="146" lineno="146" attrname="Parsing" expr="bb.msg.domain">
                <Getattr fromlineno="146" tolineno="146" lineno="146" attrname="domain" expr="bb.msg">
                  <Getattr fromlineno="146" tolineno="146" lineno="146" attrname="msg" expr="bb">
                    <Name fromlineno="146" tolineno="146" lineno="146" name="bb"/>
                  </Getattr>
                </Getattr>
              </Getattr>
              <BinOp fromlineno="146" tolineno="146" lineno="146" op="%" left="'CONF %s %s'" right="(inc_string, fn)">
                <Const fromlineno="146" tolineno="146" lineno="146" type="str">'CONF %s %s'</Const>
                <Tuple fromlineno="146" tolineno="146" lineno="146">
                  <Name fromlineno="146" tolineno="146" lineno="146" name="inc_string"/>
                  <Name fromlineno="146" tolineno="146" lineno="146" name="fn"/>
                </Tuple>
              </BinOp>
            </CallFunc>
          </Discard>
          <Assign fromlineno="147" tolineno="147" lineno="147" targets="[&lt;AssName(abs_fn) l.147 [bb.parse.parse_py.ConfHandler] at Oxa07c8ac&gt;]" value="fn">
            <AssName fromlineno="147" tolineno="147" lineno="147" name="abs_fn"/>
            <Name fromlineno="147" tolineno="147" lineno="147" name="fn"/>
          </Assign>
        </If>
        <If fromlineno="149" tolineno="150" lineno="149">
          <Name fromlineno="149" tolineno="149" lineno="149" name="include"/>
          <Discard fromlineno="150" tolineno="150" lineno="150">
            <CallFunc fromlineno="150" tolineno="150" lineno="150" func="Getattr(mark_dependency)">
              <Getattr fromlineno="150" tolineno="150" lineno="150" attrname="mark_dependency" expr="bb.parse">
                <Getattr fromlineno="150" tolineno="150" lineno="150" attrname="parse" expr="bb">
                  <Name fromlineno="150" tolineno="150" lineno="150" name="bb"/>
                </Getattr>
              </Getattr>
              <Name fromlineno="150" tolineno="150" lineno="150" name="data"/>
              <Name fromlineno="150" tolineno="150" lineno="150" name="abs_fn"/>
            </CallFunc>
          </Discard>
        </If>
        <Assign fromlineno="152" tolineno="152" lineno="152" targets="[&lt;AssName(lineno) l.152 [bb.parse.parse_py.ConfHandler] at Oxa07ca6c&gt;]" value="0">
          <AssName fromlineno="152" tolineno="152" lineno="152" name="lineno"/>
          <Const fromlineno="152" tolineno="152" lineno="152" type="int">0</Const>
        </Assign>
        <Discard fromlineno="153" tolineno="153" lineno="153">
          <CallFunc fromlineno="153" tolineno="153" lineno="153" func="Getattr(setVar)">
            <Getattr fromlineno="153" tolineno="153" lineno="153" attrname="setVar" expr="bb.data">
              <Getattr fromlineno="153" tolineno="153" lineno="153" attrname="data" expr="bb">
                <Name fromlineno="153" tolineno="153" lineno="153" name="bb"/>
              </Getattr>
            </Getattr>
            <Const fromlineno="153" tolineno="153" lineno="153" type="str">'FILE'</Const>
            <Name fromlineno="153" tolineno="153" lineno="153" name="fn"/>
            <Name fromlineno="153" tolineno="153" lineno="153" name="data"/>
          </CallFunc>
        </Discard>
        <While fromlineno="154" tolineno="166" lineno="154">
          <Const fromlineno="154" tolineno="154" lineno="154" type="int">1</Const>
          <Assign fromlineno="155" tolineno="155" lineno="155" targets="[&lt;AssName(lineno) l.155 [bb.parse.parse_py.ConfHandler] at Oxa07ccac&gt;]" value="(lineno) + (1)">
            <AssName fromlineno="155" tolineno="155" lineno="155" name="lineno"/>
            <BinOp fromlineno="155" tolineno="155" lineno="155" op="+" left="lineno" right="1">
              <Name fromlineno="155" tolineno="155" lineno="155" name="lineno"/>
              <Const fromlineno="155" tolineno="155" lineno="155" type="int">1</Const>
            </BinOp>
          </Assign>
          <Assign fromlineno="156" tolineno="156" lineno="156" targets="[&lt;AssName(s) l.156 [bb.parse.parse_py.ConfHandler] at Oxa07cd6c&gt;]" value="f.readline()">
            <AssName fromlineno="156" tolineno="156" lineno="156" name="s"/>
            <CallFunc fromlineno="156" tolineno="156" lineno="156" func="Getattr(readline)">
              <Getattr fromlineno="156" tolineno="156" lineno="156" attrname="readline" expr="f">
                <Name fromlineno="156" tolineno="156" lineno="156" name="f"/>
              </Getattr>
            </CallFunc>
          </Assign>
          <If fromlineno="157" tolineno="157" lineno="157">
            <UnaryOp fromlineno="157" tolineno="157" lineno="157">
              <Name fromlineno="157" tolineno="157" lineno="157" name="s"/>
            </UnaryOp>
            <Break fromlineno="157" tolineno="157" lineno="157"/>
          </If>
          <Assign fromlineno="158" tolineno="158" lineno="158" targets="[&lt;AssName(w) l.158 [bb.parse.parse_py.ConfHandler] at Oxa07cf2c&gt;]" value="s.strip()">
            <AssName fromlineno="158" tolineno="158" lineno="158" name="w"/>
            <CallFunc fromlineno="158" tolineno="158" lineno="158" func="Getattr(strip)">
              <Getattr fromlineno="158" tolineno="158" lineno="158" attrname="strip" expr="s">
                <Name fromlineno="158" tolineno="158" lineno="158" name="s"/>
              </Getattr>
            </CallFunc>
          </Assign>
          <If fromlineno="159" tolineno="159" lineno="159">
            <UnaryOp fromlineno="159" tolineno="159" lineno="159">
              <Name fromlineno="159" tolineno="159" lineno="159" name="w"/>
            </UnaryOp>
            <Continue fromlineno="159" tolineno="159" lineno="159"/>
          </If>
          <Assign fromlineno="160" tolineno="160" lineno="160" targets="[&lt;AssName(s) l.160 [bb.parse.parse_py.ConfHandler] at Oxa0af10c&gt;]" value="s.rstrip()">
            <AssName fromlineno="160" tolineno="160" lineno="160" name="s"/>
            <CallFunc fromlineno="160" tolineno="160" lineno="160" func="Getattr(rstrip)">
              <Getattr fromlineno="160" tolineno="160" lineno="160" attrname="rstrip" expr="s">
                <Name fromlineno="160" tolineno="160" lineno="160" name="s"/>
              </Getattr>
            </CallFunc>
          </Assign>
          <If fromlineno="161" tolineno="161" lineno="161">
            <Compare fromlineno="161" tolineno="161" lineno="161" op="('==', &lt;Const(str) l.161 [bb.parse.parse_py.ConfHandler] at Oxa0af2ac&gt;)">
              <Subscript fromlineno="161" tolineno="161" lineno="161">
                <Name fromlineno="161" tolineno="161" lineno="161" name="s"/>
                <Index fromlineno="161" tolineno="161" lineno="None">
                  <Const fromlineno="161" tolineno="161" lineno="161" type="int">0</Const>
                </Index>
              </Subscript>
              <Const fromlineno="161" tolineno="161" lineno="161" type="str">'#'</Const>
            </Compare>
            <Continue fromlineno="161" tolineno="161" lineno="161"/>
          </If>
          <While fromlineno="162" tolineno="165" lineno="162">
            <Compare fromlineno="162" tolineno="162" lineno="162" op="('==', &lt;Const(str) l.162 [bb.parse.parse_py.ConfHandler] at Oxa0af42c&gt;)">
              <Subscript fromlineno="162" tolineno="162" lineno="162">
                <Name fromlineno="162" tolineno="162" lineno="162" name="s"/>
                <Index fromlineno="162" tolineno="162" lineno="None">
                  <Const fromlineno="162" tolineno="162" lineno="162" type="int">-1</Const>
                </Index>
              </Subscript>
              <Const fromlineno="162" tolineno="162" lineno="162" type="str">'\\'</Const>
            </Compare>
            <Assign fromlineno="163" tolineno="163" lineno="163" targets="[&lt;AssName(s2) l.163 [bb.parse.parse_py.ConfHandler] at Oxa0af4cc&gt;]" value="f.readline()[:-1].strip()">
              <AssName fromlineno="163" tolineno="163" lineno="163" name="s2"/>
              <CallFunc fromlineno="163" tolineno="163" lineno="163" func="Getattr(strip)">
                <Getattr fromlineno="163" tolineno="163" lineno="163" attrname="strip" expr="f.readline()[:-1]">
                  <Subscript fromlineno="163" tolineno="163" lineno="163">
                    <CallFunc fromlineno="163" tolineno="163" lineno="163" func="Getattr(readline)">
                      <Getattr fromlineno="163" tolineno="163" lineno="163" attrname="readline" expr="f">
                        <Name fromlineno="163" tolineno="163" lineno="163" name="f"/>
                      </Getattr>
                    </CallFunc>
                    <Slice fromlineno="163" tolineno="163" lineno="None">
                      <Const fromlineno="163" tolineno="163" lineno="163" type="int">-1</Const>
                    </Slice>
                  </Subscript>
                </Getattr>
              </CallFunc>
            </Assign>
            <Assign fromlineno="164" tolineno="164" lineno="164" targets="[&lt;AssName(lineno) l.164 [bb.parse.parse_py.ConfHandler] at Oxa0af68c&gt;]" value="(lineno) + (1)">
              <AssName fromlineno="164" tolineno="164" lineno="164" name="lineno"/>
              <BinOp fromlineno="164" tolineno="164" lineno="164" op="+" left="lineno" right="1">
                <Name fromlineno="164" tolineno="164" lineno="164" name="lineno"/>
                <Const fromlineno="164" tolineno="164" lineno="164" type="int">1</Const>
              </BinOp>
            </Assign>
            <Assign fromlineno="165" tolineno="165" lineno="165" targets="[&lt;AssName(s) l.165 [bb.parse.parse_py.ConfHandler] at Oxa0af74c&gt;]" value="(s[:-1]) + (s2)">
              <AssName fromlineno="165" tolineno="165" lineno="165" name="s"/>
              <BinOp fromlineno="165" tolineno="165" lineno="165" op="+" left="s[:-1]" right="s2">
                <Subscript fromlineno="165" tolineno="165" lineno="165">
                  <Name fromlineno="165" tolineno="165" lineno="165" name="s"/>
                  <Slice fromlineno="165" tolineno="165" lineno="None">
                    <Const fromlineno="165" tolineno="165" lineno="165" type="int">-1</Const>
                  </Slice>
                </Subscript>
                <Name fromlineno="165" tolineno="165" lineno="165" name="s2"/>
              </BinOp>
            </Assign>
          </While>
          <Discard fromlineno="166" tolineno="166" lineno="166">
            <CallFunc fromlineno="166" tolineno="166" lineno="166" func="Name(feeder)">
              <Name fromlineno="166" tolineno="166" lineno="166" name="feeder"/>
              <Name fromlineno="166" tolineno="166" lineno="166" name="lineno"/>
              <Name fromlineno="166" tolineno="166" lineno="166" name="s"/>
              <Name fromlineno="166" tolineno="166" lineno="166" name="fn"/>
              <Name fromlineno="166" tolineno="166" lineno="166" name="data"/>
            </CallFunc>
          </Discard>
        </While>
        <If fromlineno="168" tolineno="169" lineno="168">
          <Name fromlineno="168" tolineno="168" lineno="168" name="oldfile"/>
          <Discard fromlineno="169" tolineno="169" lineno="169">
            <CallFunc fromlineno="169" tolineno="169" lineno="169" func="Getattr(setVar)">
              <Getattr fromlineno="169" tolineno="169" lineno="169" attrname="setVar" expr="bb.data">
                <Getattr fromlineno="169" tolineno="169" lineno="169" attrname="data" expr="bb">
                  <Name fromlineno="169" tolineno="169" lineno="169" name="bb"/>
                </Getattr>
              </Getattr>
              <Const fromlineno="169" tolineno="169" lineno="169" type="str">'FILE'</Const>
              <Name fromlineno="169" tolineno="169" lineno="169" name="oldfile"/>
              <Name fromlineno="169" tolineno="169" lineno="169" name="data"/>
            </CallFunc>
          </Discard>
        </If>
        <Return fromlineno="170" tolineno="170" lineno="170">
          <Name fromlineno="170" tolineno="170" lineno="170" name="data"/>
        </Return>
      </Function>
      <Function fromlineno="172" tolineno="228" lineno="172">
        <Arguments fromlineno="172" tolineno="172" lineno="None" format_args="lineno, s, fn, data">
          <AssName fromlineno="172" tolineno="172" lineno="172" name="lineno"/>
          <AssName fromlineno="172" tolineno="172" lineno="172" name="s"/>
          <AssName fromlineno="172" tolineno="172" lineno="172" name="fn"/>
          <AssName fromlineno="172" tolineno="172" lineno="172" name="data"/>
        </Arguments>
        <Function fromlineno="173" tolineno="177" lineno="173">
          <Arguments fromlineno="173" tolineno="173" lineno="None" format_args="groupd, key, data">
            <AssName fromlineno="173" tolineno="173" lineno="173" name="groupd"/>
            <AssName fromlineno="173" tolineno="173" lineno="173" name="key"/>
            <AssName fromlineno="173" tolineno="173" lineno="173" name="data"/>
          </Arguments>
          <If fromlineno="174" tolineno="177" lineno="174">
            <BoolOp fromlineno="174" tolineno="174" lineno="174" op="and" values="'flag' in groupd,groupd['flag'] != None,">
              <Compare fromlineno="174" tolineno="174" lineno="174" op="('in', &lt;Name(groupd) l.174 [bb.parse.parse_py.ConfHandler] at Oxa0aff6c&gt;)">
                <Const fromlineno="174" tolineno="174" lineno="174" type="str">'flag'</Const>
                <Name fromlineno="174" tolineno="174" lineno="174" name="groupd"/>
              </Compare>
              <Compare fromlineno="174" tolineno="174" lineno="174" op="('!=', &lt;Const(NoneType) l.174 [bb.parse.parse_py.ConfHandler] at Oxa0b408c&gt;)">
                <Subscript fromlineno="174" tolineno="174" lineno="174">
                  <Name fromlineno="174" tolineno="174" lineno="174" name="groupd"/>
                  <Index fromlineno="174" tolineno="174" lineno="None">
                    <Const fromlineno="174" tolineno="174" lineno="174" type="str">'flag'</Const>
                  </Index>
                </Subscript>
                <Const fromlineno="174" tolineno="174" lineno="174" type="NoneType">None</Const>
              </Compare>
            </BoolOp>
            <Return fromlineno="175" tolineno="175" lineno="175">
              <CallFunc fromlineno="175" tolineno="175" lineno="175" func="Getattr(getVarFlag)">
                <Getattr fromlineno="175" tolineno="175" lineno="175" attrname="getVarFlag" expr="bb.data">
                  <Getattr fromlineno="175" tolineno="175" lineno="175" attrname="data" expr="bb">
                    <Name fromlineno="175" tolineno="175" lineno="175" name="bb"/>
                  </Getattr>
                </Getattr>
                <Name fromlineno="175" tolineno="175" lineno="175" name="key"/>
                <Subscript fromlineno="175" tolineno="175" lineno="175">
                  <Name fromlineno="175" tolineno="175" lineno="175" name="groupd"/>
                  <Index fromlineno="175" tolineno="175" lineno="None">
                    <Const fromlineno="175" tolineno="175" lineno="175" type="str">'flag'</Const>
                  </Index>
                </Subscript>
                <Name fromlineno="175" tolineno="175" lineno="175" name="data"/>
              </CallFunc>
            </Return>
            <Return fromlineno="177" tolineno="177" lineno="177">
              <CallFunc fromlineno="177" tolineno="177" lineno="177" func="Getattr(getVar)">
                <Getattr fromlineno="177" tolineno="177" lineno="177" attrname="getVar" expr="bb.data">
                  <Getattr fromlineno="177" tolineno="177" lineno="177" attrname="data" expr="bb">
                    <Name fromlineno="177" tolineno="177" lineno="177" name="bb"/>
                  </Getattr>
                </Getattr>
                <Name fromlineno="177" tolineno="177" lineno="177" name="key"/>
                <Name fromlineno="177" tolineno="177" lineno="177" name="data"/>
              </CallFunc>
            </Return>
          </If>
        </Function>
        <Assign fromlineno="179" tolineno="179" lineno="179" targets="[&lt;AssName(m) l.179 [bb.parse.parse_py.ConfHandler] at Oxa0b436c&gt;]" value="__config_regexp__.match(s)">
          <AssName fromlineno="179" tolineno="179" lineno="179" name="m"/>
          <CallFunc fromlineno="179" tolineno="179" lineno="179" func="Getattr(match)">
            <Getattr fromlineno="179" tolineno="179" lineno="179" attrname="match" expr="__config_regexp__">
              <Name fromlineno="179" tolineno="179" lineno="179" name="__config_regexp__"/>
            </Getattr>
            <Name fromlineno="179" tolineno="179" lineno="179" name="s"/>
          </CallFunc>
        </Assign>
        <If fromlineno="180" tolineno="208" lineno="180">
          <Name fromlineno="180" tolineno="180" lineno="180" name="m"/>
          <Assign fromlineno="181" tolineno="181" lineno="181" targets="[&lt;AssName(groupd) l.181 [bb.parse.parse_py.ConfHandler] at Oxa0b450c&gt;]" value="m.groupdict()">
            <AssName fromlineno="181" tolineno="181" lineno="181" name="groupd"/>
            <CallFunc fromlineno="181" tolineno="181" lineno="181" func="Getattr(groupdict)">
              <Getattr fromlineno="181" tolineno="181" lineno="181" attrname="groupdict" expr="m">
                <Name fromlineno="181" tolineno="181" lineno="181" name="m"/>
              </Getattr>
            </CallFunc>
          </Assign>
          <Assign fromlineno="182" tolineno="182" lineno="182" targets="[&lt;AssName(key) l.182 [bb.parse.parse_py.ConfHandler] at Oxa0b460c&gt;]" value="groupd['var']">
            <AssName fromlineno="182" tolineno="182" lineno="182" name="key"/>
            <Subscript fromlineno="182" tolineno="182" lineno="182">
              <Name fromlineno="182" tolineno="182" lineno="182" name="groupd"/>
              <Index fromlineno="182" tolineno="182" lineno="None">
                <Const fromlineno="182" tolineno="182" lineno="182" type="str">'var'</Const>
              </Index>
            </Subscript>
          </Assign>
          <If fromlineno="183" tolineno="184" lineno="183">
            <BoolOp fromlineno="183" tolineno="183" lineno="183" op="and" values="'exp' in groupd,groupd['exp'] != None,">
              <Compare fromlineno="183" tolineno="183" lineno="183" op="('in', &lt;Name(groupd) l.183 [bb.parse.parse_py.ConfHandler] at Oxa0b47ec&gt;)">
                <Const fromlineno="183" tolineno="183" lineno="183" type="str">'exp'</Const>
                <Name fromlineno="183" tolineno="183" lineno="183" name="groupd"/>
              </Compare>
              <Compare fromlineno="183" tolineno="183" lineno="183" op="('!=', &lt;Const(NoneType) l.183 [bb.parse.parse_py.ConfHandler] at Oxa0b48ec&gt;)">
                <Subscript fromlineno="183" tolineno="183" lineno="183">
                  <Name fromlineno="183" tolineno="183" lineno="183" name="groupd"/>
                  <Index fromlineno="183" tolineno="183" lineno="None">
                    <Const fromlineno="183" tolineno="183" lineno="183" type="str">'exp'</Const>
                  </Index>
                </Subscript>
                <Const fromlineno="183" tolineno="183" lineno="183" type="NoneType">None</Const>
              </Compare>
            </BoolOp>
            <Discard fromlineno="184" tolineno="184" lineno="184">
              <CallFunc fromlineno="184" tolineno="184" lineno="184" func="Getattr(setVarFlag)">
                <Getattr fromlineno="184" tolineno="184" lineno="184" attrname="setVarFlag" expr="bb.data">
                  <Getattr fromlineno="184" tolineno="184" lineno="184" attrname="data" expr="bb">
                    <Name fromlineno="184" tolineno="184" lineno="184" name="bb"/>
                  </Getattr>
                </Getattr>
                <Name fromlineno="184" tolineno="184" lineno="184" name="key"/>
                <Const fromlineno="184" tolineno="184" lineno="184" type="str">'export'</Const>
                <Const fromlineno="184" tolineno="184" lineno="184" type="int">1</Const>
                <Name fromlineno="184" tolineno="184" lineno="184" name="data"/>
              </CallFunc>
            </Discard>
          </If>
          <If fromlineno="185" tolineno="202" lineno="185">
            <BoolOp fromlineno="185" tolineno="185" lineno="185" op="and" values="'ques' in groupd,groupd['ques'] != None,">
              <Compare fromlineno="185" tolineno="185" lineno="185" op="('in', &lt;Name(groupd) l.185 [bb.parse.parse_py.ConfHandler] at Oxa0b4b6c&gt;)">
                <Const fromlineno="185" tolineno="185" lineno="185" type="str">'ques'</Const>
                <Name fromlineno="185" tolineno="185" lineno="185" name="groupd"/>
              </Compare>
              <Compare fromlineno="185" tolineno="185" lineno="185" op="('!=', &lt;Const(NoneType) l.185 [bb.parse.parse_py.ConfHandler] at Oxa0b4c6c&gt;)">
                <Subscript fromlineno="185" tolineno="185" lineno="185">
                  <Name fromlineno="185" tolineno="185" lineno="185" name="groupd"/>
                  <Index fromlineno="185" tolineno="185" lineno="None">
                    <Const fromlineno="185" tolineno="185" lineno="185" type="str">'ques'</Const>
                  </Index>
                </Subscript>
                <Const fromlineno="185" tolineno="185" lineno="185" type="NoneType">None</Const>
              </Compare>
            </BoolOp>
            <Assign fromlineno="186" tolineno="186" lineno="186" targets="[&lt;AssName(val) l.186 [bb.parse.parse_py.ConfHandler] at Oxa0b4cec&gt;]" value="getFunc(groupd, key, data)">
              <AssName fromlineno="186" tolineno="186" lineno="186" name="val"/>
              <CallFunc fromlineno="186" tolineno="186" lineno="186" func="Name(getFunc)">
                <Name fromlineno="186" tolineno="186" lineno="186" name="getFunc"/>
                <Name fromlineno="186" tolineno="186" lineno="186" name="groupd"/>
                <Name fromlineno="186" tolineno="186" lineno="186" name="key"/>
                <Name fromlineno="186" tolineno="186" lineno="186" name="data"/>
              </CallFunc>
            </Assign>
            <If fromlineno="187" tolineno="188" lineno="187">
              <Compare fromlineno="187" tolineno="187" lineno="187" op="('==', &lt;Const(NoneType) l.187 [bb.parse.parse_py.ConfHandler] at Oxa0b4eac&gt;)">
                <Name fromlineno="187" tolineno="187" lineno="187" name="val"/>
                <Const fromlineno="187" tolineno="187" lineno="187" type="NoneType">None</Const>
              </Compare>
              <Assign fromlineno="188" tolineno="188" lineno="188" targets="[&lt;AssName(val) l.188 [bb.parse.parse_py.ConfHandler] at Oxa0b4f4c&gt;]" value="groupd['value']">
                <AssName fromlineno="188" tolineno="188" lineno="188" name="val"/>
                <Subscript fromlineno="188" tolineno="188" lineno="188">
                  <Name fromlineno="188" tolineno="188" lineno="188" name="groupd"/>
                  <Index fromlineno="188" tolineno="188" lineno="None">
                    <Const fromlineno="188" tolineno="188" lineno="188" type="str">'value'</Const>
                  </Index>
                </Subscript>
              </Assign>
            </If>
            <If fromlineno="189" tolineno="202" lineno="189">
              <BoolOp fromlineno="189" tolineno="189" lineno="189" op="and" values="'colon' in groupd,groupd['colon'] != None,">
                <Compare fromlineno="189" tolineno="189" lineno="189" op="('in', &lt;Name(groupd) l.189 [bb.parse.parse_py.ConfHandler] at Oxa0b812c&gt;)">
                  <Const fromlineno="189" tolineno="189" lineno="189" type="str">'colon'</Const>
                  <Name fromlineno="189" tolineno="189" lineno="189" name="groupd"/>
                </Compare>
                <Compare fromlineno="189" tolineno="189" lineno="189" op="('!=', &lt;Const(NoneType) l.189 [bb.parse.parse_py.ConfHandler] at Oxa0b822c&gt;)">
                  <Subscript fromlineno="189" tolineno="189" lineno="189">
                    <Name fromlineno="189" tolineno="189" lineno="189" name="groupd"/>
                    <Index fromlineno="189" tolineno="189" lineno="None">
                      <Const fromlineno="189" tolineno="189" lineno="189" type="str">'colon'</Const>
                    </Index>
                  </Subscript>
                  <Const fromlineno="189" tolineno="189" lineno="189" type="NoneType">None</Const>
                </Compare>
              </BoolOp>
              <Assign fromlineno="190" tolineno="190" lineno="190" targets="[&lt;AssName(e) l.190 [bb.parse.parse_py.ConfHandler] at Oxa0b82ac&gt;]" value="data.createCopy()">
                <AssName fromlineno="190" tolineno="190" lineno="190" name="e"/>
                <CallFunc fromlineno="190" tolineno="190" lineno="190" func="Getattr(createCopy)">
                  <Getattr fromlineno="190" tolineno="190" lineno="190" attrname="createCopy" expr="data">
                    <Name fromlineno="190" tolineno="190" lineno="190" name="data"/>
                  </Getattr>
                </CallFunc>
              </Assign>
              <Discard fromlineno="191" tolineno="191" lineno="191">
                <CallFunc fromlineno="191" tolineno="191" lineno="191" func="Getattr(update_data)">
                  <Getattr fromlineno="191" tolineno="191" lineno="191" attrname="update_data" expr="bb.data">
                    <Getattr fromlineno="191" tolineno="191" lineno="191" attrname="data" expr="bb">
                      <Name fromlineno="191" tolineno="191" lineno="191" name="bb"/>
                    </Getattr>
                  </Getattr>
                  <Name fromlineno="191" tolineno="191" lineno="191" name="e"/>
                </CallFunc>
              </Discard>
              <Assign fromlineno="192" tolineno="192" lineno="192" targets="[&lt;AssName(val) l.192 [bb.parse.parse_py.ConfHandler] at Oxa0b848c&gt;]" value="bb.data.expand(groupd['value'], e)">
                <AssName fromlineno="192" tolineno="192" lineno="192" name="val"/>
                <CallFunc fromlineno="192" tolineno="192" lineno="192" func="Getattr(expand)">
                  <Getattr fromlineno="192" tolineno="192" lineno="192" attrname="expand" expr="bb.data">
                    <Getattr fromlineno="192" tolineno="192" lineno="192" attrname="data" expr="bb">
                      <Name fromlineno="192" tolineno="192" lineno="192" name="bb"/>
                    </Getattr>
                  </Getattr>
                  <Subscript fromlineno="192" tolineno="192" lineno="192">
                    <Name fromlineno="192" tolineno="192" lineno="192" name="groupd"/>
                    <Index fromlineno="192" tolineno="192" lineno="None">
                      <Const fromlineno="192" tolineno="192" lineno="192" type="str">'value'</Const>
                    </Index>
                  </Subscript>
                  <Name fromlineno="192" tolineno="192" lineno="192" name="e"/>
                </CallFunc>
              </Assign>
              <If fromlineno="193" tolineno="202" lineno="193">
                <BoolOp fromlineno="193" tolineno="193" lineno="193" op="and" values="'append' in groupd,groupd['append'] != None,">
                  <Compare fromlineno="193" tolineno="193" lineno="193" op="('in', &lt;Name(groupd) l.193 [bb.parse.parse_py.ConfHandler] at Oxa0b872c&gt;)">
                    <Const fromlineno="193" tolineno="193" lineno="193" type="str">'append'</Const>
                    <Name fromlineno="193" tolineno="193" lineno="193" name="groupd"/>
                  </Compare>
                  <Compare fromlineno="193" tolineno="193" lineno="193" op="('!=', &lt;Const(NoneType) l.193 [bb.parse.parse_py.ConfHandler] at Oxa0b882c&gt;)">
                    <Subscript fromlineno="193" tolineno="193" lineno="193">
                      <Name fromlineno="193" tolineno="193" lineno="193" name="groupd"/>
                      <Index fromlineno="193" tolineno="193" lineno="None">
                        <Const fromlineno="193" tolineno="193" lineno="193" type="str">'append'</Const>
                      </Index>
                    </Subscript>
                    <Const fromlineno="193" tolineno="193" lineno="193" type="NoneType">None</Const>
                  </Compare>
                </BoolOp>
                <Assign fromlineno="194" tolineno="194" lineno="194" targets="[&lt;AssName(val) l.194 [bb.parse.parse_py.ConfHandler] at Oxa0b88ac&gt;]" value="('%s %s') % (((getFunc(groupd, key, data)) or (''), groupd['value']))">
                  <AssName fromlineno="194" tolineno="194" lineno="194" name="val"/>
                  <BinOp fromlineno="194" tolineno="194" lineno="194" op="%" left="'%s %s'" right="((getFunc(groupd, key, data)) or (''), groupd['value'])">
                    <Const fromlineno="194" tolineno="194" lineno="194" type="str">'%s %s'</Const>
                    <Tuple fromlineno="194" tolineno="194" lineno="194">
                      <BoolOp fromlineno="194" tolineno="194" lineno="194" op="or" values="getFunc(groupd, key, data),'',">
                        <CallFunc fromlineno="194" tolineno="194" lineno="194" func="Name(getFunc)">
                          <Name fromlineno="194" tolineno="194" lineno="194" name="getFunc"/>
                          <Name fromlineno="194" tolineno="194" lineno="194" name="groupd"/>
                          <Name fromlineno="194" tolineno="194" lineno="194" name="key"/>
                          <Name fromlineno="194" tolineno="194" lineno="194" name="data"/>
                        </CallFunc>
                        <Const fromlineno="194" tolineno="194" lineno="194" type="str">''</Const>
                      </BoolOp>
                      <Subscript fromlineno="194" tolineno="194" lineno="194">
                        <Name fromlineno="194" tolineno="194" lineno="194" name="groupd"/>
                        <Index fromlineno="194" tolineno="194" lineno="None">
                          <Const fromlineno="194" tolineno="194" lineno="194" type="str">'value'</Const>
                        </Index>
                      </Subscript>
                    </Tuple>
                  </BinOp>
                </Assign>
                <If fromlineno="195" tolineno="202" lineno="195">
                  <BoolOp fromlineno="195" tolineno="195" lineno="195" op="and" values="'prepend' in groupd,groupd['prepend'] != None,">
                    <Compare fromlineno="195" tolineno="195" lineno="195" op="('in', &lt;Name(groupd) l.195 [bb.parse.parse_py.ConfHandler] at Oxa0b8c2c&gt;)">
                      <Const fromlineno="195" tolineno="195" lineno="195" type="str">'prepend'</Const>
                      <Name fromlineno="195" tolineno="195" lineno="195" name="groupd"/>
                    </Compare>
                    <Compare fromlineno="195" tolineno="195" lineno="195" op="('!=', &lt;Const(NoneType) l.195 [bb.parse.parse_py.ConfHandler] at Oxa0b8d2c&gt;)">
                      <Subscript fromlineno="195" tolineno="195" lineno="195">
                        <Name fromlineno="195" tolineno="195" lineno="195" name="groupd"/>
                        <Index fromlineno="195" tolineno="195" lineno="None">
                          <Const fromlineno="195" tolineno="195" lineno="195" type="str">'prepend'</Const>
                        </Index>
                      </Subscript>
                      <Const fromlineno="195" tolineno="195" lineno="195" type="NoneType">None</Const>
                    </Compare>
                  </BoolOp>
                  <Assign fromlineno="196" tolineno="196" lineno="196" targets="[&lt;AssName(val) l.196 [bb.parse.parse_py.ConfHandler] at Oxa0b8dac&gt;]" value="('%s %s') % ((groupd['value'], (getFunc(groupd, key, data)) or ('')))">
                    <AssName fromlineno="196" tolineno="196" lineno="196" name="val"/>
                    <BinOp fromlineno="196" tolineno="196" lineno="196" op="%" left="'%s %s'" right="(groupd['value'], (getFunc(groupd, key, data)) or (''))">
                      <Const fromlineno="196" tolineno="196" lineno="196" type="str">'%s %s'</Const>
                      <Tuple fromlineno="196" tolineno="196" lineno="196">
                        <Subscript fromlineno="196" tolineno="196" lineno="196">
                          <Name fromlineno="196" tolineno="196" lineno="196" name="groupd"/>
                          <Index fromlineno="196" tolineno="196" lineno="None">
                            <Const fromlineno="196" tolineno="196" lineno="196" type="str">'value'</Const>
                          </Index>
                        </Subscript>
                        <BoolOp fromlineno="196" tolineno="196" lineno="196" op="or" values="getFunc(groupd, key, data),'',">
                          <CallFunc fromlineno="196" tolineno="196" lineno="196" func="Name(getFunc)">
                            <Name fromlineno="196" tolineno="196" lineno="196" name="getFunc"/>
                            <Name fromlineno="196" tolineno="196" lineno="196" name="groupd"/>
                            <Name fromlineno="196" tolineno="196" lineno="196" name="key"/>
                            <Name fromlineno="196" tolineno="196" lineno="196" name="data"/>
                          </CallFunc>
                          <Const fromlineno="196" tolineno="196" lineno="196" type="str">''</Const>
                        </BoolOp>
                      </Tuple>
                    </BinOp>
                  </Assign>
                  <If fromlineno="197" tolineno="202" lineno="197">
                    <BoolOp fromlineno="197" tolineno="197" lineno="197" op="and" values="'postdot' in groupd,groupd['postdot'] != None,">
                      <Compare fromlineno="197" tolineno="197" lineno="197" op="('in', &lt;Name(groupd) l.197 [bb.parse.parse_py.ConfHandler] at Oxa0bc14c&gt;)">
                        <Const fromlineno="197" tolineno="197" lineno="197" type="str">'postdot'</Const>
                        <Name fromlineno="197" tolineno="197" lineno="197" name="groupd"/>
                      </Compare>
                      <Compare fromlineno="197" tolineno="197" lineno="197" op="('!=', &lt;Const(NoneType) l.197 [bb.parse.parse_py.ConfHandler] at Oxa0bc24c&gt;)">
                        <Subscript fromlineno="197" tolineno="197" lineno="197">
                          <Name fromlineno="197" tolineno="197" lineno="197" name="groupd"/>
                          <Index fromlineno="197" tolineno="197" lineno="None">
                            <Const fromlineno="197" tolineno="197" lineno="197" type="str">'postdot'</Const>
                          </Index>
                        </Subscript>
                        <Const fromlineno="197" tolineno="197" lineno="197" type="NoneType">None</Const>
                      </Compare>
                    </BoolOp>
                    <Assign fromlineno="198" tolineno="198" lineno="198" targets="[&lt;AssName(val) l.198 [bb.parse.parse_py.ConfHandler] at Oxa0bc2cc&gt;]" value="('%s%s') % (((getFunc(groupd, key, data)) or (''), groupd['value']))">
                      <AssName fromlineno="198" tolineno="198" lineno="198" name="val"/>
                      <BinOp fromlineno="198" tolineno="198" lineno="198" op="%" left="'%s%s'" right="((getFunc(groupd, key, data)) or (''), groupd['value'])">
                        <Const fromlineno="198" tolineno="198" lineno="198" type="str">'%s%s'</Const>
                        <Tuple fromlineno="198" tolineno="198" lineno="198">
                          <BoolOp fromlineno="198" tolineno="198" lineno="198" op="or" values="getFunc(groupd, key, data),'',">
                            <CallFunc fromlineno="198" tolineno="198" lineno="198" func="Name(getFunc)">
                              <Name fromlineno="198" tolineno="198" lineno="198" name="getFunc"/>
                              <Name fromlineno="198" tolineno="198" lineno="198" name="groupd"/>
                              <Name fromlineno="198" tolineno="198" lineno="198" name="key"/>
                              <Name fromlineno="198" tolineno="198" lineno="198" name="data"/>
                            </CallFunc>
                            <Const fromlineno="198" tolineno="198" lineno="198" type="str">''</Const>
                          </BoolOp>
                          <Subscript fromlineno="198" tolineno="198" lineno="198">
                            <Name fromlineno="198" tolineno="198" lineno="198" name="groupd"/>
                            <Index fromlineno="198" tolineno="198" lineno="None">
                              <Const fromlineno="198" tolineno="198" lineno="198" type="str">'value'</Const>
                            </Index>
                          </Subscript>
                        </Tuple>
                      </BinOp>
                    </Assign>
                    <If fromlineno="199" tolineno="202" lineno="199">
                      <BoolOp fromlineno="199" tolineno="199" lineno="199" op="and" values="'predot' in groupd,groupd['predot'] != None,">
                        <Compare fromlineno="199" tolineno="199" lineno="199" op="('in', &lt;Name(groupd) l.199 [bb.parse.parse_py.ConfHandler] at Oxa0bc64c&gt;)">
                          <Const fromlineno="199" tolineno="199" lineno="199" type="str">'predot'</Const>
                          <Name fromlineno="199" tolineno="199" lineno="199" name="groupd"/>
                        </Compare>
                        <Compare fromlineno="199" tolineno="199" lineno="199" op="('!=', &lt;Const(NoneType) l.199 [bb.parse.parse_py.ConfHandler] at Oxa0bc74c&gt;)">
                          <Subscript fromlineno="199" tolineno="199" lineno="199">
                            <Name fromlineno="199" tolineno="199" lineno="199" name="groupd"/>
                            <Index fromlineno="199" tolineno="199" lineno="None">
                              <Const fromlineno="199" tolineno="199" lineno="199" type="str">'predot'</Const>
                            </Index>
                          </Subscript>
                          <Const fromlineno="199" tolineno="199" lineno="199" type="NoneType">None</Const>
                        </Compare>
                      </BoolOp>
                      <Assign fromlineno="200" tolineno="200" lineno="200" targets="[&lt;AssName(val) l.200 [bb.parse.parse_py.ConfHandler] at Oxa0bc7cc&gt;]" value="('%s%s') % ((groupd['value'], (getFunc(groupd, key, data)) or ('')))">
                        <AssName fromlineno="200" tolineno="200" lineno="200" name="val"/>
                        <BinOp fromlineno="200" tolineno="200" lineno="200" op="%" left="'%s%s'" right="(groupd['value'], (getFunc(groupd, key, data)) or (''))">
                          <Const fromlineno="200" tolineno="200" lineno="200" type="str">'%s%s'</Const>
                          <Tuple fromlineno="200" tolineno="200" lineno="200">
                            <Subscript fromlineno="200" tolineno="200" lineno="200">
                              <Name fromlineno="200" tolineno="200" lineno="200" name="groupd"/>
                              <Index fromlineno="200" tolineno="200" lineno="None">
                                <Const fromlineno="200" tolineno="200" lineno="200" type="str">'value'</Const>
                              </Index>
                            </Subscript>
                            <BoolOp fromlineno="200" tolineno="200" lineno="200" op="or" values="getFunc(groupd, key, data),'',">
                              <CallFunc fromlineno="200" tolineno="200" lineno="200" func="Name(getFunc)">
                                <Name fromlineno="200" tolineno="200" lineno="200" name="getFunc"/>
                                <Name fromlineno="200" tolineno="200" lineno="200" name="groupd"/>
                                <Name fromlineno="200" tolineno="200" lineno="200" name="key"/>
                                <Name fromlineno="200" tolineno="200" lineno="200" name="data"/>
                              </CallFunc>
                              <Const fromlineno="200" tolineno="200" lineno="200" type="str">''</Const>
                            </BoolOp>
                          </Tuple>
                        </BinOp>
                      </Assign>
                      <Assign fromlineno="202" tolineno="202" lineno="202" targets="[&lt;AssName(val) l.202 [bb.parse.parse_py.ConfHandler] at Oxa0bca6c&gt;]" value="groupd['value']">
                        <AssName fromlineno="202" tolineno="202" lineno="202" name="val"/>
                        <Subscript fromlineno="202" tolineno="202" lineno="202">
                          <Name fromlineno="202" tolineno="202" lineno="202" name="groupd"/>
                          <Index fromlineno="202" tolineno="202" lineno="None">
                            <Const fromlineno="202" tolineno="202" lineno="202" type="str">'value'</Const>
                          </Index>
                        </Subscript>
                      </Assign>
                    </If>
                  </If>
                </If>
              </If>
            </If>
          </If>
          <If fromlineno="203" tolineno="207" lineno="203">
            <BoolOp fromlineno="203" tolineno="203" lineno="203" op="and" values="'flag' in groupd,groupd['flag'] != None,">
              <Compare fromlineno="203" tolineno="203" lineno="203" op="('in', &lt;Name(groupd) l.203 [bb.parse.parse_py.ConfHandler] at Oxa0bc02c&gt;)">
                <Const fromlineno="203" tolineno="203" lineno="203" type="str">'flag'</Const>
                <Name fromlineno="203" tolineno="203" lineno="203" name="groupd"/>
              </Compare>
              <Compare fromlineno="203" tolineno="203" lineno="203" op="('!=', &lt;Const(NoneType) l.203 [bb.parse.parse_py.ConfHandler] at Oxa0bcbac&gt;)">
                <Subscript fromlineno="203" tolineno="203" lineno="203">
                  <Name fromlineno="203" tolineno="203" lineno="203" name="groupd"/>
                  <Index fromlineno="203" tolineno="203" lineno="None">
                    <Const fromlineno="203" tolineno="203" lineno="203" type="str">'flag'</Const>
                  </Index>
                </Subscript>
                <Const fromlineno="203" tolineno="203" lineno="203" type="NoneType">None</Const>
              </Compare>
            </BoolOp>
            <Discard fromlineno="204" tolineno="204" lineno="204">
              <CallFunc fromlineno="204" tolineno="204" lineno="204" func="Getattr(debug)">
                <Getattr fromlineno="204" tolineno="204" lineno="204" attrname="debug" expr="bb.msg">
                  <Getattr fromlineno="204" tolineno="204" lineno="204" attrname="msg" expr="bb">
                    <Name fromlineno="204" tolineno="204" lineno="204" name="bb"/>
                  </Getattr>
                </Getattr>
                <Const fromlineno="204" tolineno="204" lineno="204" type="int">3</Const>
                <Getattr fromlineno="204" tolineno="204" lineno="204" attrname="Parsing" expr="bb.msg.domain">
                  <Getattr fromlineno="204" tolineno="204" lineno="204" attrname="domain" expr="bb.msg">
                    <Getattr fromlineno="204" tolineno="204" lineno="204" attrname="msg" expr="bb">
                      <Name fromlineno="204" tolineno="204" lineno="204" name="bb"/>
                    </Getattr>
                  </Getattr>
                </Getattr>
                <BinOp fromlineno="204" tolineno="204" lineno="204" op="%" left="'setVarFlag(%s, %s, %s, data)'" right="(key, groupd['flag'], val)">
                  <Const fromlineno="204" tolineno="204" lineno="204" type="str">'setVarFlag(%s, %s, %s, data)'</Const>
                  <Tuple fromlineno="204" tolineno="204" lineno="204">
                    <Name fromlineno="204" tolineno="204" lineno="204" name="key"/>
                    <Subscript fromlineno="204" tolineno="204" lineno="204">
                      <Name fromlineno="204" tolineno="204" lineno="204" name="groupd"/>
                      <Index fromlineno="204" tolineno="204" lineno="None">
                        <Const fromlineno="204" tolineno="204" lineno="204" type="str">'flag'</Const>
                      </Index>
                    </Subscript>
                    <Name fromlineno="204" tolineno="204" lineno="204" name="val"/>
                  </Tuple>
                </BinOp>
              </CallFunc>
            </Discard>
            <Discard fromlineno="205" tolineno="205" lineno="205">
              <CallFunc fromlineno="205" tolineno="205" lineno="205" func="Getattr(setVarFlag)">
                <Getattr fromlineno="205" tolineno="205" lineno="205" attrname="setVarFlag" expr="bb.data">
                  <Getattr fromlineno="205" tolineno="205" lineno="205" attrname="data" expr="bb">
                    <Name fromlineno="205" tolineno="205" lineno="205" name="bb"/>
                  </Getattr>
                </Getattr>
                <Name fromlineno="205" tolineno="205" lineno="205" name="key"/>
                <Subscript fromlineno="205" tolineno="205" lineno="205">
                  <Name fromlineno="205" tolineno="205" lineno="205" name="groupd"/>
                  <Index fromlineno="205" tolineno="205" lineno="None">
                    <Const fromlineno="205" tolineno="205" lineno="205" type="str">'flag'</Const>
                  </Index>
                </Subscript>
                <Name fromlineno="205" tolineno="205" lineno="205" name="val"/>
                <Name fromlineno="205" tolineno="205" lineno="205" name="data"/>
              </CallFunc>
            </Discard>
            <Discard fromlineno="207" tolineno="207" lineno="207">
              <CallFunc fromlineno="207" tolineno="207" lineno="207" func="Getattr(setVar)">
                <Getattr fromlineno="207" tolineno="207" lineno="207" attrname="setVar" expr="bb.data">
                  <Getattr fromlineno="207" tolineno="207" lineno="207" attrname="data" expr="bb">
                    <Name fromlineno="207" tolineno="207" lineno="207" name="bb"/>
                  </Getattr>
                </Getattr>
                <Name fromlineno="207" tolineno="207" lineno="207" name="key"/>
                <Name fromlineno="207" tolineno="207" lineno="207" name="val"/>
                <Name fromlineno="207" tolineno="207" lineno="207" name="data"/>
              </CallFunc>
            </Discard>
          </If>
          <Return fromlineno="208" tolineno="208" lineno="208"/>
        </If>
        <Assign fromlineno="210" tolineno="210" lineno="210" targets="[&lt;AssName(m) l.210 [bb.parse.parse_py.ConfHandler] at Oxa0c01ac&gt;]" value="__include_regexp__.match(s)">
          <AssName fromlineno="210" tolineno="210" lineno="210" name="m"/>
          <CallFunc fromlineno="210" tolineno="210" lineno="210" func="Getattr(match)">
            <Getattr fromlineno="210" tolineno="210" lineno="210" attrname="match" expr="__include_regexp__">
              <Name fromlineno="210" tolineno="210" lineno="210" name="__include_regexp__"/>
            </Getattr>
            <Name fromlineno="210" tolineno="210" lineno="210" name="s"/>
          </CallFunc>
        </Assign>
        <If fromlineno="211" tolineno="215" lineno="211">
          <Name fromlineno="211" tolineno="211" lineno="211" name="m"/>
          <Assign fromlineno="212" tolineno="212" lineno="212" targets="[&lt;AssName(s) l.212 [bb.parse.parse_py.ConfHandler] at Oxa0c032c&gt;]" value="bb.data.expand(m.group(1), data)">
            <AssName fromlineno="212" tolineno="212" lineno="212" name="s"/>
            <CallFunc fromlineno="212" tolineno="212" lineno="212" func="Getattr(expand)">
              <Getattr fromlineno="212" tolineno="212" lineno="212" attrname="expand" expr="bb.data">
                <Getattr fromlineno="212" tolineno="212" lineno="212" attrname="data" expr="bb">
                  <Name fromlineno="212" tolineno="212" lineno="212" name="bb"/>
                </Getattr>
              </Getattr>
              <CallFunc fromlineno="212" tolineno="212" lineno="212" func="Getattr(group)">
                <Getattr fromlineno="212" tolineno="212" lineno="212" attrname="group" expr="m">
                  <Name fromlineno="212" tolineno="212" lineno="212" name="m"/>
                </Getattr>
                <Const fromlineno="212" tolineno="212" lineno="212" type="int">1</Const>
              </CallFunc>
              <Name fromlineno="212" tolineno="212" lineno="212" name="data"/>
            </CallFunc>
          </Assign>
          <Discard fromlineno="213" tolineno="213" lineno="213">
            <CallFunc fromlineno="213" tolineno="213" lineno="213" func="Getattr(debug)">
              <Getattr fromlineno="213" tolineno="213" lineno="213" attrname="debug" expr="bb.msg">
                <Getattr fromlineno="213" tolineno="213" lineno="213" attrname="msg" expr="bb">
                  <Name fromlineno="213" tolineno="213" lineno="213" name="bb"/>
                </Getattr>
              </Getattr>
              <Const fromlineno="213" tolineno="213" lineno="213" type="int">3</Const>
              <Getattr fromlineno="213" tolineno="213" lineno="213" attrname="Parsing" expr="bb.msg.domain">
                <Getattr fromlineno="213" tolineno="213" lineno="213" attrname="domain" expr="bb.msg">
                  <Getattr fromlineno="213" tolineno="213" lineno="213" attrname="msg" expr="bb">
                    <Name fromlineno="213" tolineno="213" lineno="213" name="bb"/>
                  </Getattr>
                </Getattr>
              </Getattr>
              <BinOp fromlineno="213" tolineno="213" lineno="213" op="%" left="'CONF %s:%d: including %s'" right="(fn, lineno, s)">
                <Const fromlineno="213" tolineno="213" lineno="213" type="str">'CONF %s:%d: including %s'</Const>
                <Tuple fromlineno="213" tolineno="213" lineno="213">
                  <Name fromlineno="213" tolineno="213" lineno="213" name="fn"/>
                  <Name fromlineno="213" tolineno="213" lineno="213" name="lineno"/>
                  <Name fromlineno="213" tolineno="213" lineno="213" name="s"/>
                </Tuple>
              </BinOp>
            </CallFunc>
          </Discard>
          <Discard fromlineno="214" tolineno="214" lineno="214">
            <CallFunc fromlineno="214" tolineno="214" lineno="214" func="Name(include)">
              <Name fromlineno="214" tolineno="214" lineno="214" name="include"/>
              <Name fromlineno="214" tolineno="214" lineno="214" name="fn"/>
              <Name fromlineno="214" tolineno="214" lineno="214" name="s"/>
              <Name fromlineno="214" tolineno="214" lineno="214" name="data"/>
              <Const fromlineno="214" tolineno="214" lineno="214" type="bool">False</Const>
            </CallFunc>
          </Discard>
          <Return fromlineno="215" tolineno="215" lineno="215"/>
        </If>
        <Assign fromlineno="217" tolineno="217" lineno="217" targets="[&lt;AssName(m) l.217 [bb.parse.parse_py.ConfHandler] at Oxa0c084c&gt;]" value="__require_regexp__.match(s)">
          <AssName fromlineno="217" tolineno="217" lineno="217" name="m"/>
          <CallFunc fromlineno="217" tolineno="217" lineno="217" func="Getattr(match)">
            <Getattr fromlineno="217" tolineno="217" lineno="217" attrname="match" expr="__require_regexp__">
              <Name fromlineno="217" tolineno="217" lineno="217" name="__require_regexp__"/>
            </Getattr>
            <Name fromlineno="217" tolineno="217" lineno="217" name="s"/>
          </CallFunc>
        </Assign>
        <If fromlineno="218" tolineno="221" lineno="218">
          <Name fromlineno="218" tolineno="218" lineno="218" name="m"/>
          <Assign fromlineno="219" tolineno="219" lineno="219" targets="[&lt;AssName(s) l.219 [bb.parse.parse_py.ConfHandler] at Oxa0c09cc&gt;]" value="bb.data.expand(m.group(1), data)">
            <AssName fromlineno="219" tolineno="219" lineno="219" name="s"/>
            <CallFunc fromlineno="219" tolineno="219" lineno="219" func="Getattr(expand)">
              <Getattr fromlineno="219" tolineno="219" lineno="219" attrname="expand" expr="bb.data">
                <Getattr fromlineno="219" tolineno="219" lineno="219" attrname="data" expr="bb">
                  <Name fromlineno="219" tolineno="219" lineno="219" name="bb"/>
                </Getattr>
              </Getattr>
              <CallFunc fromlineno="219" tolineno="219" lineno="219" func="Getattr(group)">
                <Getattr fromlineno="219" tolineno="219" lineno="219" attrname="group" expr="m">
                  <Name fromlineno="219" tolineno="219" lineno="219" name="m"/>
                </Getattr>
                <Const fromlineno="219" tolineno="219" lineno="219" type="int">1</Const>
              </CallFunc>
              <Name fromlineno="219" tolineno="219" lineno="219" name="data"/>
            </CallFunc>
          </Assign>
          <Discard fromlineno="220" tolineno="220" lineno="220">
            <CallFunc fromlineno="220" tolineno="220" lineno="220" func="Name(include)">
              <Name fromlineno="220" tolineno="220" lineno="220" name="include"/>
              <Name fromlineno="220" tolineno="220" lineno="220" name="fn"/>
              <Name fromlineno="220" tolineno="220" lineno="220" name="s"/>
              <Name fromlineno="220" tolineno="220" lineno="220" name="data"/>
              <Const fromlineno="220" tolineno="220" lineno="220" type="str">'include required'</Const>
            </CallFunc>
          </Discard>
          <Return fromlineno="221" tolineno="221" lineno="221"/>
        </If>
        <Assign fromlineno="223" tolineno="223" lineno="223" targets="[&lt;AssName(m) l.223 [bb.parse.parse_py.ConfHandler] at Oxa0c0cac&gt;]" value="__export_regexp__.match(s)">
          <AssName fromlineno="223" tolineno="223" lineno="223" name="m"/>
          <CallFunc fromlineno="223" tolineno="223" lineno="223" func="Getattr(match)">
            <Getattr fromlineno="223" tolineno="223" lineno="223" attrname="match" expr="__export_regexp__">
              <Name fromlineno="223" tolineno="223" lineno="223" name="__export_regexp__"/>
            </Getattr>
            <Name fromlineno="223" tolineno="223" lineno="223" name="s"/>
          </CallFunc>
        </Assign>
        <If fromlineno="224" tolineno="226" lineno="224">
          <Name fromlineno="224" tolineno="224" lineno="224" name="m"/>
          <Discard fromlineno="225" tolineno="225" lineno="225">
            <CallFunc fromlineno="225" tolineno="225" lineno="225" func="Getattr(setVarFlag)">
              <Getattr fromlineno="225" tolineno="225" lineno="225" attrname="setVarFlag" expr="bb.data">
                <Getattr fromlineno="225" tolineno="225" lineno="225" attrname="data" expr="bb">
                  <Name fromlineno="225" tolineno="225" lineno="225" name="bb"/>
                </Getattr>
              </Getattr>
              <CallFunc fromlineno="225" tolineno="225" lineno="225" func="Getattr(group)">
                <Getattr fromlineno="225" tolineno="225" lineno="225" attrname="group" expr="m">
                  <Name fromlineno="225" tolineno="225" lineno="225" name="m"/>
                </Getattr>
                <Const fromlineno="225" tolineno="225" lineno="225" type="int">1</Const>
              </CallFunc>
              <Const fromlineno="225" tolineno="225" lineno="225" type="str">'export'</Const>
              <Const fromlineno="225" tolineno="225" lineno="225" type="int">1</Const>
              <Name fromlineno="225" tolineno="225" lineno="225" name="data"/>
            </CallFunc>
          </Discard>
          <Return fromlineno="226" tolineno="226" lineno="226"/>
        </If>
        <Raise fromlineno="228" tolineno="228" lineno="228">
          <CallFunc fromlineno="228" tolineno="228" lineno="228" func="Name(ParseError)">
            <Name fromlineno="228" tolineno="228" lineno="228" name="ParseError"/>
            <BinOp fromlineno="228" tolineno="228" lineno="228" op="%" left="&quot;%s:%d: unparsed line: '%s'&quot;" right="(fn, lineno, s)">
              <Const fromlineno="228" tolineno="228" lineno="228" type="str">"%s:%d: unparsed line: '%s'"</Const>
              <Tuple fromlineno="228" tolineno="228" lineno="228">
                <Name fromlineno="228" tolineno="228" lineno="228" name="fn"/>
                <Name fromlineno="228" tolineno="228" lineno="228" name="lineno"/>
                <Name fromlineno="228" tolineno="228" lineno="228" name="s"/>
              </Tuple>
            </BinOp>
          </CallFunc>
        </Raise>
      </Function>
      <From fromlineno="231" tolineno="231" lineno="231" modname="bb.parse">
        <ImportName name="handlers"/>
      </From>
      <Discard fromlineno="232" tolineno="232" lineno="232">
        <CallFunc fromlineno="232" tolineno="232" lineno="232" func="Getattr(append)">
          <Getattr fromlineno="232" tolineno="232" lineno="232" attrname="append" expr="handlers">
            <Name fromlineno="232" tolineno="232" lineno="232" name="handlers"/>
          </Getattr>
          <Dict fromlineno="232" tolineno="232" lineno="232">
            <Const fromlineno="232" tolineno="232" lineno="232" type="str">'supports'</Const>
            <Name fromlineno="232" tolineno="232" lineno="232" name="supports"/>
            <Const fromlineno="232" tolineno="232" lineno="232" type="str">'handle'</Const>
            <Name fromlineno="232" tolineno="232" lineno="232" name="handle"/>
            <Const fromlineno="232" tolineno="232" lineno="232" type="str">'init'</Const>
            <Name fromlineno="232" tolineno="232" lineno="232" name="init"/>
          </Dict>
        </CallFunc>
      </Discard>
      <Delete fromlineno="233" tolineno="233" lineno="233">
        <DelName fromlineno="233" tolineno="233" lineno="233" unknown="true"/>
      </Delete>
    </Module>
    <Module fromlineno="0" tolineno="405" lineno="0" name="bb.parse.parse_py.BBHandler">
      <Import fromlineno="27" tolineno="27" lineno="27">
        <ImportName name="re"/>
        <ImportName name="bb"/>
        <ImportName name="os"/>
        <ImportName name="sys"/>
        <ImportName name="time"/>
        <ImportName name="string"/>
      </Import>
      <Import fromlineno="28" tolineno="28" lineno="28">
        <ImportName name="bb.fetch"/>
        <ImportName name="bb.build"/>
        <ImportName name="bb.utils"/>
      </Import>
      <From fromlineno="29" tolineno="29" lineno="29" modname="bb">
        <ImportName name="data"/>
        <ImportName name="fetch"/>
        <ImportName name="methodpool"/>
      </From>
      <From fromlineno="31" tolineno="31" lineno="31" modname="ConfHandler">
        <ImportName name="include"/>
        <ImportName name="localpath"/>
        <ImportName name="obtain"/>
        <ImportName name="init"/>
      </From>
      <From fromlineno="32" tolineno="32" lineno="32" modname="bb.parse">
        <ImportName name="ParseError"/>
      </From>
      <Assign fromlineno="34" tolineno="34" lineno="34" targets="[&lt;AssName(__func_start_regexp__) l.34 [bb.parse.parse_py.BBHandler] at Oxa0e510c&gt;]" value="re.compile('(((?P&lt;py&gt;python)|(?P&lt;fr&gt;fakeroot))\\s*)*(?P&lt;func&gt;[\\w\\.\\-\\+\\{\\}\\$]+)?\\s*\\(\\s*\\)\\s*{$')">
        <AssName fromlineno="34" tolineno="34" lineno="34" name="__func_start_regexp__"/>
        <CallFunc fromlineno="34" tolineno="34" lineno="34" func="Getattr(compile)">
          <Getattr fromlineno="34" tolineno="34" lineno="34" attrname="compile" expr="re">
            <Name fromlineno="34" tolineno="34" lineno="34" name="re"/>
          </Getattr>
          <Const fromlineno="34" tolineno="34" lineno="34" type="str">'(((?P&lt;py&gt;python)|(?P&lt;fr&gt;fakeroot))\\s*)*(?P&lt;func&gt;[\\w\\.\\-\\+\\{\\}\\$]+)?\\s*\\(\\s*\\)\\s*{$'</Const>
        </CallFunc>
      </Assign>
      <Assign fromlineno="35" tolineno="35" lineno="35" targets="[&lt;AssName(__inherit_regexp__) l.35 [bb.parse.parse_py.BBHandler] at Oxa0e526c&gt;]" value="re.compile('inherit\\s+(.+)')">
        <AssName fromlineno="35" tolineno="35" lineno="35" name="__inherit_regexp__"/>
        <CallFunc fromlineno="35" tolineno="35" lineno="35" func="Getattr(compile)">
          <Getattr fromlineno="35" tolineno="35" lineno="35" attrname="compile" expr="re">
            <Name fromlineno="35" tolineno="35" lineno="35" name="re"/>
          </Getattr>
          <Const fromlineno="35" tolineno="35" lineno="35" type="str">'inherit\\s+(.+)'</Const>
        </CallFunc>
      </Assign>
      <Assign fromlineno="36" tolineno="36" lineno="36" targets="[&lt;AssName(__export_func_regexp__) l.36 [bb.parse.parse_py.BBHandler] at Oxa0e538c&gt;]" value="re.compile('EXPORT_FUNCTIONS\\s+(.+)')">
        <AssName fromlineno="36" tolineno="36" lineno="36" name="__export_func_regexp__"/>
        <CallFunc fromlineno="36" tolineno="36" lineno="36" func="Getattr(compile)">
          <Getattr fromlineno="36" tolineno="36" lineno="36" attrname="compile" expr="re">
            <Name fromlineno="36" tolineno="36" lineno="36" name="re"/>
          </Getattr>
          <Const fromlineno="36" tolineno="36" lineno="36" type="str">'EXPORT_FUNCTIONS\\s+(.+)'</Const>
        </CallFunc>
      </Assign>
      <Assign fromlineno="37" tolineno="37" lineno="37" targets="[&lt;AssName(__addtask_regexp__) l.37 [bb.parse.parse_py.BBHandler] at Oxa0e54ac&gt;]" value="re.compile('addtask\\s+(?P&lt;func&gt;\\w+)\\s*((before\\s*(?P&lt;before&gt;((.*(?=after))|(.*))))|(after\\s*(?P&lt;after&gt;((.*(?=before))|(.*)))))*')">
        <AssName fromlineno="37" tolineno="37" lineno="37" name="__addtask_regexp__"/>
        <CallFunc fromlineno="37" tolineno="37" lineno="37" func="Getattr(compile)">
          <Getattr fromlineno="37" tolineno="37" lineno="37" attrname="compile" expr="re">
            <Name fromlineno="37" tolineno="37" lineno="37" name="re"/>
          </Getattr>
          <Const fromlineno="37" tolineno="37" lineno="37" type="str">'addtask\\s+(?P&lt;func&gt;\\w+)\\s*((before\\s*(?P&lt;before&gt;((.*(?=after))|(.*))))|(after\\s*(?P&lt;after&gt;((.*(?=before))|(.*)))))*'</Const>
        </CallFunc>
      </Assign>
      <Assign fromlineno="38" tolineno="38" lineno="38" targets="[&lt;AssName(__addhandler_regexp__) l.38 [bb.parse.parse_py.BBHandler] at Oxa0e55cc&gt;]" value="re.compile('addhandler\\s+(.+)')">
        <AssName fromlineno="38" tolineno="38" lineno="38" name="__addhandler_regexp__"/>
        <CallFunc fromlineno="38" tolineno="38" lineno="38" func="Getattr(compile)">
          <Getattr fromlineno="38" tolineno="38" lineno="38" attrname="compile" expr="re">
            <Name fromlineno="38" tolineno="38" lineno="38" name="re"/>
          </Getattr>
          <Const fromlineno="38" tolineno="38" lineno="38" type="str">'addhandler\\s+(.+)'</Const>
        </CallFunc>
      </Assign>
      <Assign fromlineno="39" tolineno="39" lineno="39" targets="[&lt;AssName(__def_regexp__) l.39 [bb.parse.parse_py.BBHandler] at Oxa0e56ec&gt;]" value="re.compile('def\\s+(\\w+).*:')">
        <AssName fromlineno="39" tolineno="39" lineno="39" name="__def_regexp__"/>
        <CallFunc fromlineno="39" tolineno="39" lineno="39" func="Getattr(compile)">
          <Getattr fromlineno="39" tolineno="39" lineno="39" attrname="compile" expr="re">
            <Name fromlineno="39" tolineno="39" lineno="39" name="re"/>
          </Getattr>
          <Const fromlineno="39" tolineno="39" lineno="39" type="str">'def\\s+(\\w+).*:'</Const>
        </CallFunc>
      </Assign>
      <Assign fromlineno="40" tolineno="40" lineno="40" targets="[&lt;AssName(__python_func_regexp__) l.40 [bb.parse.parse_py.BBHandler] at Oxa0e580c&gt;]" value="re.compile('(\\s+.*)|(^$)')">
        <AssName fromlineno="40" tolineno="40" lineno="40" name="__python_func_regexp__"/>
        <CallFunc fromlineno="40" tolineno="40" lineno="40" func="Getattr(compile)">
          <Getattr fromlineno="40" tolineno="40" lineno="40" attrname="compile" expr="re">
            <Name fromlineno="40" tolineno="40" lineno="40" name="re"/>
          </Getattr>
          <Const fromlineno="40" tolineno="40" lineno="40" type="str">'(\\s+.*)|(^$)'</Const>
        </CallFunc>
      </Assign>
      <Assign fromlineno="41" tolineno="41" lineno="41" targets="[&lt;AssName(__word__) l.41 [bb.parse.parse_py.BBHandler] at Oxa0e592c&gt;]" value="re.compile('\\S+')">
        <AssName fromlineno="41" tolineno="41" lineno="41" name="__word__"/>
        <CallFunc fromlineno="41" tolineno="41" lineno="41" func="Getattr(compile)">
          <Getattr fromlineno="41" tolineno="41" lineno="41" attrname="compile" expr="re">
            <Name fromlineno="41" tolineno="41" lineno="41" name="re"/>
          </Getattr>
          <Const fromlineno="41" tolineno="41" lineno="41" type="str">'\\S+'</Const>
        </CallFunc>
      </Assign>
      <Assign fromlineno="43" tolineno="43" lineno="43" targets="[&lt;AssName(__infunc__) l.43 [bb.parse.parse_py.BBHandler] at Oxa0e5a4c&gt;]" value="''">
        <AssName fromlineno="43" tolineno="43" lineno="43" name="__infunc__"/>
        <Const fromlineno="43" tolineno="43" lineno="43" type="str">''</Const>
      </Assign>
      <Assign fromlineno="44" tolineno="44" lineno="44" targets="[&lt;AssName(__inpython__) l.44 [bb.parse.parse_py.BBHandler] at Oxa0e5aec&gt;]" value="False">
        <AssName fromlineno="44" tolineno="44" lineno="44" name="__inpython__"/>
        <Const fromlineno="44" tolineno="44" lineno="44" type="bool">False</Const>
      </Assign>
      <Assign fromlineno="45" tolineno="45" lineno="45" targets="[&lt;AssName(__body__) l.45 [bb.parse.parse_py.BBHandler] at Oxa0e5b8c&gt;]" value="[]">
        <AssName fromlineno="45" tolineno="45" lineno="45" name="__body__"/>
        <List fromlineno="45" tolineno="45" lineno="45"/>
      </Assign>
      <Assign fromlineno="46" tolineno="46" lineno="46" targets="[&lt;AssName(__classname__) l.46 [bb.parse.parse_py.BBHandler] at Oxa0e5c4c&gt;]" value="''">
        <AssName fromlineno="46" tolineno="46" lineno="46" name="__classname__"/>
        <Const fromlineno="46" tolineno="46" lineno="46" type="str">''</Const>
      </Assign>
      <Assign fromlineno="47" tolineno="47" lineno="47" targets="[&lt;AssName(classes) l.47 [bb.parse.parse_py.BBHandler] at Oxa0e5cec&gt;]" value="[None]">
        <AssName fromlineno="47" tolineno="47" lineno="47" name="classes"/>
        <List fromlineno="47" tolineno="47" lineno="47">
          <Const fromlineno="47" tolineno="47" lineno="47" type="NoneType">None</Const>
        </List>
      </Assign>
      <Assign fromlineno="54" tolineno="54" lineno="54" targets="[&lt;AssName(IN_PYTHON_EOF) l.54 [bb.parse.parse_py.BBHandler] at Oxa0e5dcc&gt;]" value="-9999999999999L">
        <AssName fromlineno="54" tolineno="54" lineno="54" name="IN_PYTHON_EOF"/>
        <Const fromlineno="54" tolineno="54" lineno="54" type="long">-9999999999999L</Const>
      </Assign>
      <Assign fromlineno="56" tolineno="56" lineno="56" targets="[&lt;AssName(__parsed_methods__) l.56 [bb.parse.parse_py.BBHandler] at Oxa0e5e6c&gt;]" value="methodpool.get_parsed_dict()">
        <AssName fromlineno="56" tolineno="56" lineno="56" name="__parsed_methods__"/>
        <CallFunc fromlineno="56" tolineno="56" lineno="56" func="Getattr(get_parsed_dict)">
          <Getattr fromlineno="56" tolineno="56" lineno="56" attrname="get_parsed_dict" expr="methodpool">
            <Name fromlineno="56" tolineno="56" lineno="56" name="methodpool"/>
          </Getattr>
        </CallFunc>
      </Assign>
      <Function fromlineno="58" tolineno="60" lineno="58">
        <Arguments fromlineno="58" tolineno="58" lineno="None" format_args="fn, d">
          <AssName fromlineno="58" tolineno="58" lineno="58" name="fn"/>
          <AssName fromlineno="58" tolineno="58" lineno="58" name="d"/>
        </Arguments>
        <Assign fromlineno="59" tolineno="59" lineno="59" targets="[&lt;AssName(localfn) l.59 [bb.parse.parse_py.BBHandler] at Oxa0e90ec&gt;]" value="localpath(fn, d)">
          <AssName fromlineno="59" tolineno="59" lineno="59" name="localfn"/>
          <CallFunc fromlineno="59" tolineno="59" lineno="59" func="Name(localpath)">
            <Name fromlineno="59" tolineno="59" lineno="59" name="localpath"/>
            <Name fromlineno="59" tolineno="59" lineno="59" name="fn"/>
            <Name fromlineno="59" tolineno="59" lineno="59" name="d"/>
          </CallFunc>
        </Assign>
        <Return fromlineno="60" tolineno="60" lineno="60">
          <BoolOp fromlineno="60" tolineno="60" lineno="60" op="or" values="localfn[-3:] == '.bb',localfn[-8:] == '.bbclass',localfn[-4:] == '.inc',">
            <Compare fromlineno="60" tolineno="60" lineno="60" op="('==', &lt;Const(str) l.60 [bb.parse.parse_py.BBHandler] at Oxa0e932c&gt;)">
              <Subscript fromlineno="60" tolineno="60" lineno="60">
                <Name fromlineno="60" tolineno="60" lineno="60" name="localfn"/>
                <Slice fromlineno="60" tolineno="60" lineno="None">
                  <Const fromlineno="60" tolineno="60" lineno="60" type="int">-3</Const>
                </Slice>
              </Subscript>
              <Const fromlineno="60" tolineno="60" lineno="60" type="str">'.bb'</Const>
            </Compare>
            <Compare fromlineno="60" tolineno="60" lineno="60" op="('==', &lt;Const(str) l.60 [bb.parse.parse_py.BBHandler] at Oxa0e942c&gt;)">
              <Subscript fromlineno="60" tolineno="60" lineno="60">
                <Name fromlineno="60" tolineno="60" lineno="60" name="localfn"/>
                <Slice fromlineno="60" tolineno="60" lineno="None">
                  <Const fromlineno="60" tolineno="60" lineno="60" type="int">-8</Const>
                </Slice>
              </Subscript>
              <Const fromlineno="60" tolineno="60" lineno="60" type="str">'.bbclass'</Const>
            </Compare>
            <Compare fromlineno="60" tolineno="60" lineno="60" op="('==', &lt;Const(str) l.60 [bb.parse.parse_py.BBHandler] at Oxa0e952c&gt;)">
              <Subscript fromlineno="60" tolineno="60" lineno="60">
                <Name fromlineno="60" tolineno="60" lineno="60" name="localfn"/>
                <Slice fromlineno="60" tolineno="60" lineno="None">
                  <Const fromlineno="60" tolineno="60" lineno="60" type="int">-4</Const>
                </Slice>
              </Subscript>
              <Const fromlineno="60" tolineno="60" lineno="60" type="str">'.inc'</Const>
            </Compare>
          </BoolOp>
        </Return>
      </Function>
      <Function fromlineno="62" tolineno="76" lineno="62">
        <Arguments fromlineno="62" tolineno="62" lineno="None" format_args="files, d">
          <AssName fromlineno="62" tolineno="62" lineno="62" name="files"/>
          <AssName fromlineno="62" tolineno="62" lineno="62" name="d"/>
        </Arguments>
        <Assign fromlineno="63" tolineno="63" lineno="63" targets="[&lt;AssName(__inherit_cache) l.63 [bb.parse.parse_py.BBHandler] at Oxa0e96ac&gt;]" value="(data.getVar('__inherit_cache', d)) or ([])">
          <AssName fromlineno="63" tolineno="63" lineno="63" name="__inherit_cache"/>
          <BoolOp fromlineno="63" tolineno="63" lineno="63" op="or" values="data.getVar('__inherit_cache', d),[],">
            <CallFunc fromlineno="63" tolineno="63" lineno="63" func="Getattr(getVar)">
              <Getattr fromlineno="63" tolineno="63" lineno="63" attrname="getVar" expr="data">
                <Name fromlineno="63" tolineno="63" lineno="63" name="data"/>
              </Getattr>
              <Const fromlineno="63" tolineno="63" lineno="63" type="str">'__inherit_cache'</Const>
              <Name fromlineno="63" tolineno="63" lineno="63" name="d"/>
            </CallFunc>
            <List fromlineno="63" tolineno="63" lineno="63"/>
          </BoolOp>
        </Assign>
        <Assign fromlineno="64" tolineno="64" lineno="64" targets="[&lt;AssName(fn) l.64 [bb.parse.parse_py.BBHandler] at Oxa0e986c&gt;]" value="''">
          <AssName fromlineno="64" tolineno="64" lineno="64" name="fn"/>
          <Const fromlineno="64" tolineno="64" lineno="64" type="str">''</Const>
        </Assign>
        <Assign fromlineno="65" tolineno="65" lineno="65" targets="[&lt;AssName(lineno) l.65 [bb.parse.parse_py.BBHandler] at Oxa0e990c&gt;]" value="0">
          <AssName fromlineno="65" tolineno="65" lineno="65" name="lineno"/>
          <Const fromlineno="65" tolineno="65" lineno="65" type="int">0</Const>
        </Assign>
        <Assign fromlineno="66" tolineno="66" lineno="66" targets="[&lt;AssName(files) l.66 [bb.parse.parse_py.BBHandler] at Oxa0e99ac&gt;]" value="data.expand(files, d)">
          <AssName fromlineno="66" tolineno="66" lineno="66" name="files"/>
          <CallFunc fromlineno="66" tolineno="66" lineno="66" func="Getattr(expand)">
            <Getattr fromlineno="66" tolineno="66" lineno="66" attrname="expand" expr="data">
              <Name fromlineno="66" tolineno="66" lineno="66" name="data"/>
            </Getattr>
            <Name fromlineno="66" tolineno="66" lineno="66" name="files"/>
            <Name fromlineno="66" tolineno="66" lineno="66" name="d"/>
          </CallFunc>
        </Assign>
        <For fromlineno="67" tolineno="76" lineno="67">
          <AssName fromlineno="67" tolineno="67" lineno="67" name="file"/>
          <Name fromlineno="67" tolineno="67" lineno="67" name="files"/>
          <If fromlineno="68" tolineno="69" lineno="68">
            <BoolOp fromlineno="68" tolineno="68" lineno="68" op="and" values="file[0] != '/',file[-8:] != '.bbclass',">
              <Compare fromlineno="68" tolineno="68" lineno="68" op="('!=', &lt;Const(str) l.68 [bb.parse.parse_py.BBHandler] at Oxa0e9cac&gt;)">
                <Subscript fromlineno="68" tolineno="68" lineno="68">
                  <Name fromlineno="68" tolineno="68" lineno="68" name="file"/>
                  <Index fromlineno="68" tolineno="68" lineno="None">
                    <Const fromlineno="68" tolineno="68" lineno="68" type="int">0</Const>
                  </Index>
                </Subscript>
                <Const fromlineno="68" tolineno="68" lineno="68" type="str">'/'</Const>
              </Compare>
              <Compare fromlineno="68" tolineno="68" lineno="68" op="('!=', &lt;Const(str) l.68 [bb.parse.parse_py.BBHandler] at Oxa0e9dac&gt;)">
                <Subscript fromlineno="68" tolineno="68" lineno="68">
                  <Name fromlineno="68" tolineno="68" lineno="68" name="file"/>
                  <Slice fromlineno="68" tolineno="68" lineno="None">
                    <Const fromlineno="68" tolineno="68" lineno="68" type="int">-8</Const>
                  </Slice>
                </Subscript>
                <Const fromlineno="68" tolineno="68" lineno="68" type="str">'.bbclass'</Const>
              </Compare>
            </BoolOp>
            <Assign fromlineno="69" tolineno="69" lineno="69" targets="[&lt;AssName(file) l.69 [bb.parse.parse_py.BBHandler] at Oxa0e9e2c&gt;]" value="os.path.join('classes', ('%s.bbclass') % (file))">
              <AssName fromlineno="69" tolineno="69" lineno="69" name="file"/>
              <CallFunc fromlineno="69" tolineno="69" lineno="69" func="Getattr(join)">
                <Getattr fromlineno="69" tolineno="69" lineno="69" attrname="join" expr="os.path">
                  <Getattr fromlineno="69" tolineno="69" lineno="69" attrname="path" expr="os">
                    <Name fromlineno="69" tolineno="69" lineno="69" name="os"/>
                  </Getattr>
                </Getattr>
                <Const fromlineno="69" tolineno="69" lineno="69" type="str">'classes'</Const>
                <BinOp fromlineno="69" tolineno="69" lineno="69" op="%" left="'%s.bbclass'" right="file">
                  <Const fromlineno="69" tolineno="69" lineno="69" type="str">'%s.bbclass'</Const>
                  <Name fromlineno="69" tolineno="69" lineno="69" name="file"/>
                </BinOp>
              </CallFunc>
            </Assign>
          </If>
          <If fromlineno="71" tolineno="76" lineno="71">
            <UnaryOp fromlineno="71" tolineno="71" lineno="71">
              <Compare fromlineno="71" tolineno="71" lineno="71" op="('in', &lt;Name(__inherit_cache) l.71 [bb.parse.parse_py.BBHandler] at Oxa12104c&gt;)">
                <Name fromlineno="71" tolineno="71" lineno="71" name="file"/>
                <Name fromlineno="71" tolineno="71" lineno="71" name="__inherit_cache"/>
              </Compare>
            </UnaryOp>
            <Discard fromlineno="72" tolineno="72" lineno="72">
              <CallFunc fromlineno="72" tolineno="72" lineno="72" func="Getattr(debug)">
                <Getattr fromlineno="72" tolineno="72" lineno="72" attrname="debug" expr="bb.msg">
                  <Getattr fromlineno="72" tolineno="72" lineno="72" attrname="msg" expr="bb">
                    <Name fromlineno="72" tolineno="72" lineno="72" name="bb"/>
                  </Getattr>
                </Getattr>
                <Const fromlineno="72" tolineno="72" lineno="72" type="int">2</Const>
                <Getattr fromlineno="72" tolineno="72" lineno="72" attrname="Parsing" expr="bb.msg.domain">
                  <Getattr fromlineno="72" tolineno="72" lineno="72" attrname="domain" expr="bb.msg">
                    <Getattr fromlineno="72" tolineno="72" lineno="72" attrname="msg" expr="bb">
                      <Name fromlineno="72" tolineno="72" lineno="72" name="bb"/>
                    </Getattr>
                  </Getattr>
                </Getattr>
                <BinOp fromlineno="72" tolineno="72" lineno="72" op="%" left="'BB %s:%d: inheriting %s'" right="(fn, lineno, file)">
                  <Const fromlineno="72" tolineno="72" lineno="72" type="str">'BB %s:%d: inheriting %s'</Const>
                  <Tuple fromlineno="72" tolineno="72" lineno="72">
                    <Name fromlineno="72" tolineno="72" lineno="72" name="fn"/>
                    <Name fromlineno="72" tolineno="72" lineno="72" name="lineno"/>
                    <Name fromlineno="72" tolineno="72" lineno="72" name="file"/>
                  </Tuple>
                </BinOp>
              </CallFunc>
            </Discard>
            <Discard fromlineno="73" tolineno="73" lineno="73">
              <CallFunc fromlineno="73" tolineno="73" lineno="73" func="Getattr(append)">
                <Getattr fromlineno="73" tolineno="73" lineno="73" attrname="append" expr="__inherit_cache">
                  <Name fromlineno="73" tolineno="73" lineno="73" name="__inherit_cache"/>
                </Getattr>
                <Name fromlineno="73" tolineno="73" lineno="73" name="file"/>
              </CallFunc>
            </Discard>
            <Discard fromlineno="74" tolineno="74" lineno="74">
              <CallFunc fromlineno="74" tolineno="74" lineno="74" func="Getattr(setVar)">
                <Getattr fromlineno="74" tolineno="74" lineno="74" attrname="setVar" expr="data">
                  <Name fromlineno="74" tolineno="74" lineno="74" name="data"/>
                </Getattr>
                <Const fromlineno="74" tolineno="74" lineno="74" type="str">'__inherit_cache'</Const>
                <Name fromlineno="74" tolineno="74" lineno="74" name="__inherit_cache"/>
                <Name fromlineno="74" tolineno="74" lineno="74" name="d"/>
              </CallFunc>
            </Discard>
            <Discard fromlineno="75" tolineno="75" lineno="75">
              <CallFunc fromlineno="75" tolineno="75" lineno="75" func="Name(include)">
                <Name fromlineno="75" tolineno="75" lineno="75" name="include"/>
                <Name fromlineno="75" tolineno="75" lineno="75" name="fn"/>
                <Name fromlineno="75" tolineno="75" lineno="75" name="file"/>
                <Name fromlineno="75" tolineno="75" lineno="75" name="d"/>
                <Const fromlineno="75" tolineno="75" lineno="75" type="str">'inherit'</Const>
              </CallFunc>
            </Discard>
            <Assign fromlineno="76" tolineno="76" lineno="76" targets="[&lt;AssName(__inherit_cache) l.76 [bb.parse.parse_py.BBHandler] at Oxa1215ec&gt;]" value="(data.getVar('__inherit_cache', d)) or ([])">
              <AssName fromlineno="76" tolineno="76" lineno="76" name="__inherit_cache"/>
              <BoolOp fromlineno="76" tolineno="76" lineno="76" op="or" values="data.getVar('__inherit_cache', d),[],">
                <CallFunc fromlineno="76" tolineno="76" lineno="76" func="Getattr(getVar)">
                  <Getattr fromlineno="76" tolineno="76" lineno="76" attrname="getVar" expr="data">
                    <Name fromlineno="76" tolineno="76" lineno="76" name="data"/>
                  </Getattr>
                  <Const fromlineno="76" tolineno="76" lineno="76" type="str">'__inherit_cache'</Const>
                  <Name fromlineno="76" tolineno="76" lineno="76" name="d"/>
                </CallFunc>
                <List fromlineno="76" tolineno="76" lineno="76"/>
              </BoolOp>
            </Assign>
          </If>
        </For>
      </Function>
      <Function fromlineno="79" tolineno="114" lineno="79">
        <Arguments fromlineno="79" tolineno="79" lineno="None" format_args="fn, d">
          <AssName fromlineno="79" tolineno="79" lineno="79" name="fn"/>
          <AssName fromlineno="79" tolineno="79" lineno="79" name="d"/>
        </Arguments>
        <Discard fromlineno="80" tolineno="80" lineno="80">
          <CallFunc fromlineno="80" tolineno="80" lineno="80" func="Getattr(expandKeys)">
            <Getattr fromlineno="80" tolineno="80" lineno="80" attrname="expandKeys" expr="data">
              <Name fromlineno="80" tolineno="80" lineno="80" name="data"/>
            </Getattr>
            <Name fromlineno="80" tolineno="80" lineno="80" name="d"/>
          </CallFunc>
        </Discard>
        <Discard fromlineno="81" tolineno="81" lineno="81">
          <CallFunc fromlineno="81" tolineno="81" lineno="81" func="Getattr(update_data)">
            <Getattr fromlineno="81" tolineno="81" lineno="81" attrname="update_data" expr="data">
              <Name fromlineno="81" tolineno="81" lineno="81" name="data"/>
            </Getattr>
            <Name fromlineno="81" tolineno="81" lineno="81" name="d"/>
          </CallFunc>
        </Discard>
        <Assign fromlineno="82" tolineno="82" lineno="82" targets="[&lt;AssName(anonqueue) l.82 [bb.parse.parse_py.BBHandler] at Oxa121a4c&gt;]" value="(data.getVar('__anonqueue', d, 1)) or ([])">
          <AssName fromlineno="82" tolineno="82" lineno="82" name="anonqueue"/>
          <BoolOp fromlineno="82" tolineno="82" lineno="82" op="or" values="data.getVar('__anonqueue', d, 1),[],">
            <CallFunc fromlineno="82" tolineno="82" lineno="82" func="Getattr(getVar)">
              <Getattr fromlineno="82" tolineno="82" lineno="82" attrname="getVar" expr="data">
                <Name fromlineno="82" tolineno="82" lineno="82" name="data"/>
              </Getattr>
              <Const fromlineno="82" tolineno="82" lineno="82" type="str">'__anonqueue'</Const>
              <Name fromlineno="82" tolineno="82" lineno="82" name="d"/>
              <Const fromlineno="82" tolineno="82" lineno="82" type="int">1</Const>
            </CallFunc>
            <List fromlineno="82" tolineno="82" lineno="82"/>
          </BoolOp>
        </Assign>
        <Assign fromlineno="83" tolineno="83" lineno="83" targets="[&lt;AssName(body) l.83 [bb.parse.parse_py.BBHandler] at Oxa121c2c&gt;]" value="[x['content'] for x in anonqueue]">
          <AssName fromlineno="83" tolineno="83" lineno="83" name="body"/>
          <ListComp fromlineno="83" tolineno="83" lineno="83">
            <Subscript fromlineno="83" tolineno="83" lineno="83">
              <Name fromlineno="83" tolineno="83" lineno="83" name="x"/>
              <Index fromlineno="83" tolineno="83" lineno="None">
                <Const fromlineno="83" tolineno="83" lineno="83" type="str">'content'</Const>
              </Index>
            </Subscript>
            <Comprehension fromlineno="83" tolineno="83" lineno="None">
              <AssName fromlineno="83" tolineno="83" lineno="83" name="x"/>
              <Name fromlineno="83" tolineno="83" lineno="83" name="anonqueue"/>
            </Comprehension>
          </ListComp>
        </Assign>
        <Assign fromlineno="84" tolineno="84" lineno="84" targets="[&lt;AssName(flag) l.84 [bb.parse.parse_py.BBHandler] at Oxa121e0c&gt;]" value="{'python': 1, 'func': 1}">
          <AssName fromlineno="84" tolineno="84" lineno="84" name="flag"/>
          <Dict fromlineno="84" tolineno="84" lineno="84">
            <Const fromlineno="84" tolineno="84" lineno="84" type="str">'python'</Const>
            <Const fromlineno="84" tolineno="84" lineno="84" type="int">1</Const>
            <Const fromlineno="84" tolineno="84" lineno="84" type="str">'func'</Const>
            <Const fromlineno="84" tolineno="84" lineno="84" type="int">1</Const>
          </Dict>
        </Assign>
        <Discard fromlineno="85" tolineno="85" lineno="85">
          <CallFunc fromlineno="85" tolineno="85" lineno="85" func="Getattr(setVar)">
            <Getattr fromlineno="85" tolineno="85" lineno="85" attrname="setVar" expr="data">
              <Name fromlineno="85" tolineno="85" lineno="85" name="data"/>
            </Getattr>
            <Const fromlineno="85" tolineno="85" lineno="85" type="str">'__anonfunc'</Const>
            <CallFunc fromlineno="85" tolineno="85" lineno="85" func="Getattr(join)">
              <Getattr fromlineno="85" tolineno="85" lineno="85" attrname="join" expr="'\n'">
                <Const fromlineno="85" tolineno="85" lineno="85" type="str">'\n'</Const>
              </Getattr>
              <Name fromlineno="85" tolineno="85" lineno="85" name="body"/>
            </CallFunc>
            <Name fromlineno="85" tolineno="85" lineno="85" name="d"/>
          </CallFunc>
        </Discard>
        <Discard fromlineno="86" tolineno="86" lineno="86">
          <CallFunc fromlineno="86" tolineno="86" lineno="86" func="Getattr(setVarFlags)">
            <Getattr fromlineno="86" tolineno="86" lineno="86" attrname="setVarFlags" expr="data">
              <Name fromlineno="86" tolineno="86" lineno="86" name="data"/>
            </Getattr>
            <Const fromlineno="86" tolineno="86" lineno="86" type="str">'__anonfunc'</Const>
            <Name fromlineno="86" tolineno="86" lineno="86" name="flag"/>
            <Name fromlineno="86" tolineno="86" lineno="86" name="d"/>
          </CallFunc>
        </Discard>
        <From fromlineno="87" tolineno="87" lineno="87" modname="bb">
          <ImportName name="build"/>
        </From>
        <TryExcept fromlineno="88" tolineno="102" lineno="88">
          <Assign fromlineno="89" tolineno="89" lineno="89" targets="[&lt;AssName(t) l.89 [bb.parse.parse_py.BBHandler] at Oxa1102ec&gt;]" value="data.getVar('T', d)">
            <AssName fromlineno="89" tolineno="89" lineno="89" name="t"/>
            <CallFunc fromlineno="89" tolineno="89" lineno="89" func="Getattr(getVar)">
              <Getattr fromlineno="89" tolineno="89" lineno="89" attrname="getVar" expr="data">
                <Name fromlineno="89" tolineno="89" lineno="89" name="data"/>
              </Getattr>
              <Const fromlineno="89" tolineno="89" lineno="89" type="str">'T'</Const>
              <Name fromlineno="89" tolineno="89" lineno="89" name="d"/>
            </CallFunc>
          </Assign>
          <Discard fromlineno="90" tolineno="90" lineno="90">
            <CallFunc fromlineno="90" tolineno="90" lineno="90" func="Getattr(setVar)">
              <Getattr fromlineno="90" tolineno="90" lineno="90" attrname="setVar" expr="data">
                <Name fromlineno="90" tolineno="90" lineno="90" name="data"/>
              </Getattr>
              <Const fromlineno="90" tolineno="90" lineno="90" type="str">'T'</Const>
              <Const fromlineno="90" tolineno="90" lineno="90" type="str">'${TMPDIR}/anonfunc/'</Const>
              <Name fromlineno="90" tolineno="90" lineno="90" name="d"/>
            </CallFunc>
          </Discard>
          <Assign fromlineno="91" tolineno="91" lineno="91" targets="[&lt;AssName(anonfuncs) l.91 [bb.parse.parse_py.BBHandler] at Oxa11054c&gt;]" value="(data.getVar('__BBANONFUNCS', d)) or ([])">
            <AssName fromlineno="91" tolineno="91" lineno="91" name="anonfuncs"/>
            <BoolOp fromlineno="91" tolineno="91" lineno="91" op="or" values="data.getVar('__BBANONFUNCS', d),[],">
              <CallFunc fromlineno="91" tolineno="91" lineno="91" func="Getattr(getVar)">
                <Getattr fromlineno="91" tolineno="91" lineno="91" attrname="getVar" expr="data">
                  <Name fromlineno="91" tolineno="91" lineno="91" name="data"/>
                </Getattr>
                <Const fromlineno="91" tolineno="91" lineno="91" type="str">'__BBANONFUNCS'</Const>
                <Name fromlineno="91" tolineno="91" lineno="91" name="d"/>
              </CallFunc>
              <List fromlineno="91" tolineno="91" lineno="91"/>
            </BoolOp>
          </Assign>
          <Assign fromlineno="92" tolineno="92" lineno="92" targets="[&lt;AssName(code) l.92 [bb.parse.parse_py.BBHandler] at Oxa11070c&gt;]" value="''">
            <AssName fromlineno="92" tolineno="92" lineno="92" name="code"/>
            <Const fromlineno="92" tolineno="92" lineno="92" type="str">''</Const>
          </Assign>
          <For fromlineno="93" tolineno="94" lineno="93">
            <AssName fromlineno="93" tolineno="93" lineno="93" name="f"/>
            <Name fromlineno="93" tolineno="93" lineno="93" name="anonfuncs"/>
            <Assign fromlineno="94" tolineno="94" lineno="94" targets="[&lt;AssName(code) l.94 [bb.parse.parse_py.BBHandler] at Oxa11086c&gt;]" value="(code) + (('    %s(d)\n') % (f))">
              <AssName fromlineno="94" tolineno="94" lineno="94" name="code"/>
              <BinOp fromlineno="94" tolineno="94" lineno="94" op="+" left="code" right="('    %s(d)\n') % (f)">
                <Name fromlineno="94" tolineno="94" lineno="94" name="code"/>
                <BinOp fromlineno="94" tolineno="94" lineno="94" op="%" left="'    %s(d)\n'" right="f">
                  <Const fromlineno="94" tolineno="94" lineno="94" type="str">'    %s(d)\n'</Const>
                  <Name fromlineno="94" tolineno="94" lineno="94" name="f"/>
                </BinOp>
              </BinOp>
            </Assign>
          </For>
          <Discard fromlineno="95" tolineno="95" lineno="95">
            <CallFunc fromlineno="95" tolineno="95" lineno="95" func="Getattr(setVar)">
              <Getattr fromlineno="95" tolineno="95" lineno="95" attrname="setVar" expr="data">
                <Name fromlineno="95" tolineno="95" lineno="95" name="data"/>
              </Getattr>
              <Const fromlineno="95" tolineno="95" lineno="95" type="str">'__anonfunc'</Const>
              <Name fromlineno="95" tolineno="95" lineno="95" name="code"/>
              <Name fromlineno="95" tolineno="95" lineno="95" name="d"/>
            </CallFunc>
          </Discard>
          <Discard fromlineno="96" tolineno="96" lineno="96">
            <CallFunc fromlineno="96" tolineno="96" lineno="96" func="Getattr(exec_func)">
              <Getattr fromlineno="96" tolineno="96" lineno="96" attrname="exec_func" expr="build">
                <Name fromlineno="96" tolineno="96" lineno="96" name="build"/>
              </Getattr>
              <Const fromlineno="96" tolineno="96" lineno="96" type="str">'__anonfunc'</Const>
              <Name fromlineno="96" tolineno="96" lineno="96" name="d"/>
            </CallFunc>
          </Discard>
          <Discard fromlineno="97" tolineno="97" lineno="97">
            <CallFunc fromlineno="97" tolineno="97" lineno="97" func="Getattr(delVar)">
              <Getattr fromlineno="97" tolineno="97" lineno="97" attrname="delVar" expr="data">
                <Name fromlineno="97" tolineno="97" lineno="97" name="data"/>
              </Getattr>
              <Const fromlineno="97" tolineno="97" lineno="97" type="str">'T'</Const>
              <Name fromlineno="97" tolineno="97" lineno="97" name="d"/>
            </CallFunc>
          </Discard>
          <If fromlineno="98" tolineno="99" lineno="98">
            <Name fromlineno="98" tolineno="98" lineno="98" name="t"/>
            <Discard fromlineno="99" tolineno="99" lineno="99">
              <CallFunc fromlineno="99" tolineno="99" lineno="99" func="Getattr(setVar)">
                <Getattr fromlineno="99" tolineno="99" lineno="99" attrname="setVar" expr="data">
                  <Name fromlineno="99" tolineno="99" lineno="99" name="data"/>
                </Getattr>
                <Const fromlineno="99" tolineno="99" lineno="99" type="str">'T'</Const>
                <Name fromlineno="99" tolineno="99" lineno="99" name="t"/>
                <Name fromlineno="99" tolineno="99" lineno="99" name="d"/>
              </CallFunc>
            </Discard>
          </If>
          <ExceptHandler fromlineno="100" tolineno="102" lineno="100">
            <Name fromlineno="100" tolineno="100" lineno="100" name="Exception"/>
            <AssName fromlineno="100" tolineno="100" lineno="100" name="e"/>
            <Discard fromlineno="101" tolineno="101" lineno="101">
              <CallFunc fromlineno="101" tolineno="101" lineno="101" func="Getattr(debug)">
                <Getattr fromlineno="101" tolineno="101" lineno="101" attrname="debug" expr="bb.msg">
                  <Getattr fromlineno="101" tolineno="101" lineno="101" attrname="msg" expr="bb">
                    <Name fromlineno="101" tolineno="101" lineno="101" name="bb"/>
                  </Getattr>
                </Getattr>
                <Const fromlineno="101" tolineno="101" lineno="101" type="int">1</Const>
                <Getattr fromlineno="101" tolineno="101" lineno="101" attrname="Parsing" expr="bb.msg.domain">
                  <Getattr fromlineno="101" tolineno="101" lineno="101" attrname="domain" expr="bb.msg">
                    <Getattr fromlineno="101" tolineno="101" lineno="101" attrname="msg" expr="bb">
                      <Name fromlineno="101" tolineno="101" lineno="101" name="bb"/>
                    </Getattr>
                  </Getattr>
                </Getattr>
                <BinOp fromlineno="101" tolineno="101" lineno="101" op="%" left="'Exception when executing anonymous function: %s'" right="e">
                  <Const fromlineno="101" tolineno="101" lineno="101" type="str">'Exception when executing anonymous function: %s'</Const>
                  <Name fromlineno="101" tolineno="101" lineno="101" name="e"/>
                </BinOp>
              </CallFunc>
            </Discard>
            <Raise fromlineno="102" tolineno="102" lineno="102"/>
          </ExceptHandler>
        </TryExcept>
        <Discard fromlineno="103" tolineno="103" lineno="103">
          <CallFunc fromlineno="103" tolineno="103" lineno="103" func="Getattr(delVar)">
            <Getattr fromlineno="103" tolineno="103" lineno="103" attrname="delVar" expr="data">
              <Name fromlineno="103" tolineno="103" lineno="103" name="data"/>
            </Getattr>
            <Const fromlineno="103" tolineno="103" lineno="103" type="str">'__anonqueue'</Const>
            <Name fromlineno="103" tolineno="103" lineno="103" name="d"/>
          </CallFunc>
        </Discard>
        <Discard fromlineno="104" tolineno="104" lineno="104">
          <CallFunc fromlineno="104" tolineno="104" lineno="104" func="Getattr(delVar)">
            <Getattr fromlineno="104" tolineno="104" lineno="104" attrname="delVar" expr="data">
              <Name fromlineno="104" tolineno="104" lineno="104" name="data"/>
            </Getattr>
            <Const fromlineno="104" tolineno="104" lineno="104" type="str">'__anonfunc'</Const>
            <Name fromlineno="104" tolineno="104" lineno="104" name="d"/>
          </CallFunc>
        </Discard>
        <Discard fromlineno="105" tolineno="105" lineno="105">
          <CallFunc fromlineno="105" tolineno="105" lineno="105" func="Getattr(update_data)">
            <Getattr fromlineno="105" tolineno="105" lineno="105" attrname="update_data" expr="data">
              <Name fromlineno="105" tolineno="105" lineno="105" name="data"/>
            </Getattr>
            <Name fromlineno="105" tolineno="105" lineno="105" name="d"/>
          </CallFunc>
        </Discard>
        <Assign fromlineno="107" tolineno="107" lineno="107" targets="[&lt;AssName(all_handlers) l.107 [bb.parse.parse_py.BBHandler] at Oxa1142ec&gt;]" value="{}">
          <AssName fromlineno="107" tolineno="107" lineno="107" name="all_handlers"/>
          <Dict fromlineno="107" tolineno="107" lineno="107"/>
        </Assign>
        <For fromlineno="108" tolineno="111" lineno="108">
          <AssName fromlineno="108" tolineno="108" lineno="108" name="var"/>
          <BoolOp fromlineno="108" tolineno="108" lineno="108" op="or" values="data.getVar('__BBHANDLERS', d),[],">
            <CallFunc fromlineno="108" tolineno="108" lineno="108" func="Getattr(getVar)">
              <Getattr fromlineno="108" tolineno="108" lineno="108" attrname="getVar" expr="data">
                <Name fromlineno="108" tolineno="108" lineno="108" name="data"/>
              </Getattr>
              <Const fromlineno="108" tolineno="108" lineno="108" type="str">'__BBHANDLERS'</Const>
              <Name fromlineno="108" tolineno="108" lineno="108" name="d"/>
            </CallFunc>
            <List fromlineno="108" tolineno="108" lineno="108"/>
          </BoolOp>
          <Assign fromlineno="110" tolineno="110" lineno="110" targets="[&lt;AssName(handler) l.110 [bb.parse.parse_py.BBHandler] at Oxa11458c&gt;]" value="data.getVar(var, d)">
            <AssName fromlineno="110" tolineno="110" lineno="110" name="handler"/>
            <CallFunc fromlineno="110" tolineno="110" lineno="110" func="Getattr(getVar)">
              <Getattr fromlineno="110" tolineno="110" lineno="110" attrname="getVar" expr="data">
                <Name fromlineno="110" tolineno="110" lineno="110" name="data"/>
              </Getattr>
              <Name fromlineno="110" tolineno="110" lineno="110" name="var"/>
              <Name fromlineno="110" tolineno="110" lineno="110" name="d"/>
            </CallFunc>
          </Assign>
          <Discard fromlineno="111" tolineno="111" lineno="111">
            <CallFunc fromlineno="111" tolineno="111" lineno="111" func="Getattr(register)">
              <Getattr fromlineno="111" tolineno="111" lineno="111" attrname="register" expr="bb.event">
                <Getattr fromlineno="111" tolineno="111" lineno="111" attrname="event" expr="bb">
                  <Name fromlineno="111" tolineno="111" lineno="111" name="bb"/>
                </Getattr>
              </Getattr>
              <Name fromlineno="111" tolineno="111" lineno="111" name="var"/>
              <Name fromlineno="111" tolineno="111" lineno="111" name="handler"/>
            </CallFunc>
          </Discard>
        </For>
        <Assign fromlineno="113" tolineno="113" lineno="113" targets="[&lt;AssName(tasklist) l.113 [bb.parse.parse_py.BBHandler] at Oxa1147cc&gt;]" value="(data.getVar('__BBTASKS', d)) or ([])">
          <AssName fromlineno="113" tolineno="113" lineno="113" name="tasklist"/>
          <BoolOp fromlineno="113" tolineno="113" lineno="113" op="or" values="data.getVar('__BBTASKS', d),[],">
            <CallFunc fromlineno="113" tolineno="113" lineno="113" func="Getattr(getVar)">
              <Getattr fromlineno="113" tolineno="113" lineno="113" attrname="getVar" expr="data">
                <Name fromlineno="113" tolineno="113" lineno="113" name="data"/>
              </Getattr>
              <Const fromlineno="113" tolineno="113" lineno="113" type="str">'__BBTASKS'</Const>
              <Name fromlineno="113" tolineno="113" lineno="113" name="d"/>
            </CallFunc>
            <List fromlineno="113" tolineno="113" lineno="113"/>
          </BoolOp>
        </Assign>
        <Discard fromlineno="114" tolineno="114" lineno="114">
          <CallFunc fromlineno="114" tolineno="114" lineno="114" func="Getattr(add_tasks)">
            <Getattr fromlineno="114" tolineno="114" lineno="114" attrname="add_tasks" expr="bb.build">
              <Getattr fromlineno="114" tolineno="114" lineno="114" attrname="build" expr="bb">
                <Name fromlineno="114" tolineno="114" lineno="114" name="bb"/>
              </Getattr>
            </Getattr>
            <Name fromlineno="114" tolineno="114" lineno="114" name="tasklist"/>
            <Name fromlineno="114" tolineno="114" lineno="114" name="d"/>
          </CallFunc>
        </Discard>
      </Function>
      <Function fromlineno="117" tolineno="205" lineno="117">
        <Arguments fromlineno="117" tolineno="117" lineno="None" format_args="fn, d, include=0">
          <AssName fromlineno="117" tolineno="117" lineno="117" name="fn"/>
          <AssName fromlineno="117" tolineno="117" lineno="117" name="d"/>
          <AssName fromlineno="117" tolineno="117" lineno="117" name="include"/>
          <Const fromlineno="117" tolineno="117" lineno="117" type="int">0</Const>
        </Arguments>
        <Global fromlineno="118" tolineno="118" lineno="118"/>
        <Assign fromlineno="119" tolineno="119" lineno="119" targets="[&lt;AssName(__body__) l.119 [bb.parse.parse_py.BBHandler] at Oxa114d4c&gt;]" value="[]">
          <AssName fromlineno="119" tolineno="119" lineno="119" name="__body__"/>
          <List fromlineno="119" tolineno="119" lineno="119"/>
        </Assign>
        <Assign fromlineno="120" tolineno="120" lineno="120" targets="[&lt;AssName(__infunc__) l.120 [bb.parse.parse_py.BBHandler] at Oxa114dec&gt;]" value="''">
          <AssName fromlineno="120" tolineno="120" lineno="120" name="__infunc__"/>
          <Const fromlineno="120" tolineno="120" lineno="120" type="str">''</Const>
        </Assign>
        <Assign fromlineno="121" tolineno="121" lineno="121" targets="[&lt;AssName(__classname__) l.121 [bb.parse.parse_py.BBHandler] at Oxa114e6c&gt;]" value="''">
          <AssName fromlineno="121" tolineno="121" lineno="121" name="__classname__"/>
          <Const fromlineno="121" tolineno="121" lineno="121" type="str">''</Const>
        </Assign>
        <Assign fromlineno="122" tolineno="122" lineno="122" targets="[&lt;AssName(__residue__) l.122 [bb.parse.parse_py.BBHandler] at Oxa114f0c&gt;]" value="[]">
          <AssName fromlineno="122" tolineno="122" lineno="122" name="__residue__"/>
          <List fromlineno="122" tolineno="122" lineno="122"/>
        </Assign>
        <If fromlineno="124" tolineno="127" lineno="124">
          <Compare fromlineno="124" tolineno="124" lineno="124" op="('==', &lt;Const(int) l.124 [bb.parse.parse_py.BBHandler] at Oxa11704c&gt;)">
            <Name fromlineno="124" tolineno="124" lineno="124" name="include"/>
            <Const fromlineno="124" tolineno="124" lineno="124" type="int">0</Const>
          </Compare>
          <Discard fromlineno="125" tolineno="125" lineno="125">
            <CallFunc fromlineno="125" tolineno="125" lineno="125" func="Getattr(debug)">
              <Getattr fromlineno="125" tolineno="125" lineno="125" attrname="debug" expr="bb.msg">
                <Getattr fromlineno="125" tolineno="125" lineno="125" attrname="msg" expr="bb">
                  <Name fromlineno="125" tolineno="125" lineno="125" name="bb"/>
                </Getattr>
              </Getattr>
              <Const fromlineno="125" tolineno="125" lineno="125" type="int">2</Const>
              <Getattr fromlineno="125" tolineno="125" lineno="125" attrname="Parsing" expr="bb.msg.domain">
                <Getattr fromlineno="125" tolineno="125" lineno="125" attrname="domain" expr="bb.msg">
                  <Getattr fromlineno="125" tolineno="125" lineno="125" attrname="msg" expr="bb">
                    <Name fromlineno="125" tolineno="125" lineno="125" name="bb"/>
                  </Getattr>
                </Getattr>
              </Getattr>
              <BinOp fromlineno="125" tolineno="125" lineno="125" op="+" left="('BB ') + (fn)" right="': handle(data)'">
                <BinOp fromlineno="125" tolineno="125" lineno="125" op="+" left="'BB '" right="fn">
                  <Const fromlineno="125" tolineno="125" lineno="125" type="str">'BB '</Const>
                  <Name fromlineno="125" tolineno="125" lineno="125" name="fn"/>
                </BinOp>
                <Const fromlineno="125" tolineno="125" lineno="125" type="str">': handle(data)'</Const>
              </BinOp>
            </CallFunc>
          </Discard>
          <Discard fromlineno="127" tolineno="127" lineno="127">
            <CallFunc fromlineno="127" tolineno="127" lineno="127" func="Getattr(debug)">
              <Getattr fromlineno="127" tolineno="127" lineno="127" attrname="debug" expr="bb.msg">
                <Getattr fromlineno="127" tolineno="127" lineno="127" attrname="msg" expr="bb">
                  <Name fromlineno="127" tolineno="127" lineno="127" name="bb"/>
                </Getattr>
              </Getattr>
              <Const fromlineno="127" tolineno="127" lineno="127" type="int">2</Const>
              <Getattr fromlineno="127" tolineno="127" lineno="127" attrname="Parsing" expr="bb.msg.domain">
                <Getattr fromlineno="127" tolineno="127" lineno="127" attrname="domain" expr="bb.msg">
                  <Getattr fromlineno="127" tolineno="127" lineno="127" attrname="msg" expr="bb">
                    <Name fromlineno="127" tolineno="127" lineno="127" name="bb"/>
                  </Getattr>
                </Getattr>
              </Getattr>
              <BinOp fromlineno="127" tolineno="127" lineno="127" op="+" left="('BB ') + (fn)" right="': handle(data, include)'">
                <BinOp fromlineno="127" tolineno="127" lineno="127" op="+" left="'BB '" right="fn">
                  <Const fromlineno="127" tolineno="127" lineno="127" type="str">'BB '</Const>
                  <Name fromlineno="127" tolineno="127" lineno="127" name="fn"/>
                </BinOp>
                <Const fromlineno="127" tolineno="127" lineno="127" type="str">': handle(data, include)'</Const>
              </BinOp>
            </CallFunc>
          </Discard>
        </If>
        <Assign fromlineno="129" tolineno="129" lineno="129" targets="[&lt;Tuple(tuple) l.129 [bb.parse.parse_py.BBHandler] at Oxa1174ec&gt;]" value="os.path.splitext(os.path.basename(fn))">
          <Tuple fromlineno="129" tolineno="129" lineno="129">
            <AssName fromlineno="129" tolineno="129" lineno="129" name="root"/>
            <AssName fromlineno="129" tolineno="129" lineno="129" name="ext"/>
          </Tuple>
          <CallFunc fromlineno="129" tolineno="129" lineno="129" func="Getattr(splitext)">
            <Getattr fromlineno="129" tolineno="129" lineno="129" attrname="splitext" expr="os.path">
              <Getattr fromlineno="129" tolineno="129" lineno="129" attrname="path" expr="os">
                <Name fromlineno="129" tolineno="129" lineno="129" name="os"/>
              </Getattr>
            </Getattr>
            <CallFunc fromlineno="129" tolineno="129" lineno="129" func="Getattr(basename)">
              <Getattr fromlineno="129" tolineno="129" lineno="129" attrname="basename" expr="os.path">
                <Getattr fromlineno="129" tolineno="129" lineno="129" attrname="path" expr="os">
                  <Name fromlineno="129" tolineno="129" lineno="129" name="os"/>
                </Getattr>
              </Getattr>
              <Name fromlineno="129" tolineno="129" lineno="129" name="fn"/>
            </CallFunc>
          </CallFunc>
        </Assign>
        <Assign fromlineno="130" tolineno="130" lineno="130" targets="[&lt;AssName(base_name) l.130 [bb.parse.parse_py.BBHandler] at Oxa11774c&gt;]" value="('%s%s') % ((root, ext))">
          <AssName fromlineno="130" tolineno="130" lineno="130" name="base_name"/>
          <BinOp fromlineno="130" tolineno="130" lineno="130" op="%" left="'%s%s'" right="(root, ext)">
            <Const fromlineno="130" tolineno="130" lineno="130" type="str">'%s%s'</Const>
            <Tuple fromlineno="130" tolineno="130" lineno="130">
              <Name fromlineno="130" tolineno="130" lineno="130" name="root"/>
              <Name fromlineno="130" tolineno="130" lineno="130" name="ext"/>
            </Tuple>
          </BinOp>
        </Assign>
        <Discard fromlineno="131" tolineno="131" lineno="131">
          <CallFunc fromlineno="131" tolineno="131" lineno="131" func="Name(init)">
            <Name fromlineno="131" tolineno="131" lineno="131" name="init"/>
            <Name fromlineno="131" tolineno="131" lineno="131" name="d"/>
          </CallFunc>
        </Discard>
        <If fromlineno="133" tolineno="139" lineno="133">
          <Compare fromlineno="133" tolineno="133" lineno="133" op="('==', &lt;Const(str) l.133 [bb.parse.parse_py.BBHandler] at Oxa11798c&gt;)">
            <Name fromlineno="133" tolineno="133" lineno="133" name="ext"/>
            <Const fromlineno="133" tolineno="133" lineno="133" type="str">'.bbclass'</Const>
          </Compare>
          <Assign fromlineno="134" tolineno="134" lineno="134" targets="[&lt;AssName(__classname__) l.134 [bb.parse.parse_py.BBHandler] at Oxa117a2c&gt;]" value="root">
            <AssName fromlineno="134" tolineno="134" lineno="134" name="__classname__"/>
            <Name fromlineno="134" tolineno="134" lineno="134" name="root"/>
          </Assign>
          <Discard fromlineno="135" tolineno="135" lineno="135">
            <CallFunc fromlineno="135" tolineno="135" lineno="135" func="Getattr(append)">
              <Getattr fromlineno="135" tolineno="135" lineno="135" attrname="append" expr="classes">
                <Name fromlineno="135" tolineno="135" lineno="135" name="classes"/>
              </Getattr>
              <Name fromlineno="135" tolineno="135" lineno="135" name="__classname__"/>
            </CallFunc>
          </Discard>
          <Assign fromlineno="136" tolineno="136" lineno="136" targets="[&lt;AssName(__inherit_cache) l.136 [bb.parse.parse_py.BBHandler] at Oxa117b6c&gt;]" value="(data.getVar('__inherit_cache', d)) or ([])">
            <AssName fromlineno="136" tolineno="136" lineno="136" name="__inherit_cache"/>
            <BoolOp fromlineno="136" tolineno="136" lineno="136" op="or" values="data.getVar('__inherit_cache', d),[],">
              <CallFunc fromlineno="136" tolineno="136" lineno="136" func="Getattr(getVar)">
                <Getattr fromlineno="136" tolineno="136" lineno="136" attrname="getVar" expr="data">
                  <Name fromlineno="136" tolineno="136" lineno="136" name="data"/>
                </Getattr>
                <Const fromlineno="136" tolineno="136" lineno="136" type="str">'__inherit_cache'</Const>
                <Name fromlineno="136" tolineno="136" lineno="136" name="d"/>
              </CallFunc>
              <List fromlineno="136" tolineno="136" lineno="136"/>
            </BoolOp>
          </Assign>
          <If fromlineno="137" tolineno="139" lineno="137">
            <UnaryOp fromlineno="137" tolineno="137" lineno="137">
              <Compare fromlineno="137" tolineno="137" lineno="137" op="('in', &lt;Name(__inherit_cache) l.137 [bb.parse.parse_py.BBHandler] at Oxa117dcc&gt;)">
                <Name fromlineno="137" tolineno="137" lineno="137" name="fn"/>
                <Name fromlineno="137" tolineno="137" lineno="137" name="__inherit_cache"/>
              </Compare>
            </UnaryOp>
            <Discard fromlineno="138" tolineno="138" lineno="138">
              <CallFunc fromlineno="138" tolineno="138" lineno="138" func="Getattr(append)">
                <Getattr fromlineno="138" tolineno="138" lineno="138" attrname="append" expr="__inherit_cache">
                  <Name fromlineno="138" tolineno="138" lineno="138" name="__inherit_cache"/>
                </Getattr>
                <Name fromlineno="138" tolineno="138" lineno="138" name="fn"/>
              </CallFunc>
            </Discard>
            <Discard fromlineno="139" tolineno="139" lineno="139">
              <CallFunc fromlineno="139" tolineno="139" lineno="139" func="Getattr(setVar)">
                <Getattr fromlineno="139" tolineno="139" lineno="139" attrname="setVar" expr="data">
                  <Name fromlineno="139" tolineno="139" lineno="139" name="data"/>
                </Getattr>
                <Const fromlineno="139" tolineno="139" lineno="139" type="str">'__inherit_cache'</Const>
                <Name fromlineno="139" tolineno="139" lineno="139" name="__inherit_cache"/>
                <Name fromlineno="139" tolineno="139" lineno="139" name="d"/>
              </CallFunc>
            </Discard>
          </If>
        </If>
        <If fromlineno="141" tolineno="144" lineno="141">
          <Compare fromlineno="141" tolineno="141" lineno="141" op="('!=', &lt;Const(int) l.141 [bb.parse.parse_py.BBHandler] at Oxa11c08c&gt;)">
            <Name fromlineno="141" tolineno="141" lineno="141" name="include"/>
            <Const fromlineno="141" tolineno="141" lineno="141" type="int">0</Const>
          </Compare>
          <Assign fromlineno="142" tolineno="142" lineno="142" targets="[&lt;AssName(oldfile) l.142 [bb.parse.parse_py.BBHandler] at Oxa11c12c&gt;]" value="data.getVar('FILE', d)">
            <AssName fromlineno="142" tolineno="142" lineno="142" name="oldfile"/>
            <CallFunc fromlineno="142" tolineno="142" lineno="142" func="Getattr(getVar)">
              <Getattr fromlineno="142" tolineno="142" lineno="142" attrname="getVar" expr="data">
                <Name fromlineno="142" tolineno="142" lineno="142" name="data"/>
              </Getattr>
              <Const fromlineno="142" tolineno="142" lineno="142" type="str">'FILE'</Const>
              <Name fromlineno="142" tolineno="142" lineno="142" name="d"/>
            </CallFunc>
          </Assign>
          <Assign fromlineno="144" tolineno="144" lineno="144" targets="[&lt;AssName(oldfile) l.144 [bb.parse.parse_py.BBHandler] at Oxa11c28c&gt;]" value="None">
            <AssName fromlineno="144" tolineno="144" lineno="144" name="oldfile"/>
            <Const fromlineno="144" tolineno="144" lineno="144" type="NoneType">None</Const>
          </Assign>
        </If>
        <Assign fromlineno="146" tolineno="146" lineno="146" targets="[&lt;AssName(fn) l.146 [bb.parse.parse_py.BBHandler] at Oxa11c2ec&gt;]" value="obtain(fn, d)">
          <AssName fromlineno="146" tolineno="146" lineno="146" name="fn"/>
          <CallFunc fromlineno="146" tolineno="146" lineno="146" func="Name(obtain)">
            <Name fromlineno="146" tolineno="146" lineno="146" name="obtain"/>
            <Name fromlineno="146" tolineno="146" lineno="146" name="fn"/>
            <Name fromlineno="146" tolineno="146" lineno="146" name="d"/>
          </CallFunc>
        </Assign>
        <Assign fromlineno="147" tolineno="147" lineno="147" targets="[&lt;AssName(bbpath) l.147 [bb.parse.parse_py.BBHandler] at Oxa11c3ec&gt;]" value="(data.getVar('BBPATH', d, 1)) or ('').split(':')">
          <AssName fromlineno="147" tolineno="147" lineno="147" name="bbpath"/>
          <CallFunc fromlineno="147" tolineno="147" lineno="147" func="Getattr(split)">
            <Getattr fromlineno="147" tolineno="147" lineno="147" attrname="split" expr="(data.getVar('BBPATH', d, 1)) or ('')">
              <BoolOp fromlineno="147" tolineno="147" lineno="147" op="or" values="data.getVar('BBPATH', d, 1),'',">
                <CallFunc fromlineno="147" tolineno="147" lineno="147" func="Getattr(getVar)">
                  <Getattr fromlineno="147" tolineno="147" lineno="147" attrname="getVar" expr="data">
                    <Name fromlineno="147" tolineno="147" lineno="147" name="data"/>
                  </Getattr>
                  <Const fromlineno="147" tolineno="147" lineno="147" type="str">'BBPATH'</Const>
                  <Name fromlineno="147" tolineno="147" lineno="147" name="d"/>
                  <Const fromlineno="147" tolineno="147" lineno="147" type="int">1</Const>
                </CallFunc>
                <Const fromlineno="147" tolineno="147" lineno="147" type="str">''</Const>
              </BoolOp>
            </Getattr>
            <Const fromlineno="147" tolineno="147" lineno="147" type="str">':'</Const>
          </CallFunc>
        </Assign>
        <If fromlineno="148" tolineno="160" lineno="148">
          <UnaryOp fromlineno="148" tolineno="148" lineno="148">
            <CallFunc fromlineno="148" tolineno="148" lineno="148" func="Getattr(isabs)">
              <Getattr fromlineno="148" tolineno="148" lineno="148" attrname="isabs" expr="os.path">
                <Getattr fromlineno="148" tolineno="148" lineno="148" attrname="path" expr="os">
                  <Name fromlineno="148" tolineno="148" lineno="148" name="os"/>
                </Getattr>
              </Getattr>
              <Name fromlineno="148" tolineno="148" lineno="148" name="fn"/>
            </CallFunc>
          </UnaryOp>
          <Assign fromlineno="149" tolineno="149" lineno="149" targets="[&lt;AssName(f) l.149 [bb.parse.parse_py.BBHandler] at Oxa11c76c&gt;]" value="None">
            <AssName fromlineno="149" tolineno="149" lineno="149" name="f"/>
            <Const fromlineno="149" tolineno="149" lineno="149" type="NoneType">None</Const>
          </Assign>
          <For fromlineno="150" tolineno="155" lineno="150">
            <AssName fromlineno="150" tolineno="150" lineno="150" name="p"/>
            <Name fromlineno="150" tolineno="150" lineno="150" name="bbpath"/>
            <Assign fromlineno="151" tolineno="151" lineno="151" targets="[&lt;AssName(j) l.151 [bb.parse.parse_py.BBHandler] at Oxa11c8cc&gt;]" value="os.path.join(p, fn)">
              <AssName fromlineno="151" tolineno="151" lineno="151" name="j"/>
              <CallFunc fromlineno="151" tolineno="151" lineno="151" func="Getattr(join)">
                <Getattr fromlineno="151" tolineno="151" lineno="151" attrname="join" expr="os.path">
                  <Getattr fromlineno="151" tolineno="151" lineno="151" attrname="path" expr="os">
                    <Name fromlineno="151" tolineno="151" lineno="151" name="os"/>
                  </Getattr>
                </Getattr>
                <Name fromlineno="151" tolineno="151" lineno="151" name="p"/>
                <Name fromlineno="151" tolineno="151" lineno="151" name="fn"/>
              </CallFunc>
            </Assign>
            <If fromlineno="152" tolineno="155" lineno="152">
              <CallFunc fromlineno="152" tolineno="152" lineno="152" func="Getattr(access)">
                <Getattr fromlineno="152" tolineno="152" lineno="152" attrname="access" expr="os">
                  <Name fromlineno="152" tolineno="152" lineno="152" name="os"/>
                </Getattr>
                <Name fromlineno="152" tolineno="152" lineno="152" name="j"/>
                <Getattr fromlineno="152" tolineno="152" lineno="152" attrname="R_OK" expr="os">
                  <Name fromlineno="152" tolineno="152" lineno="152" name="os"/>
                </Getattr>
              </CallFunc>
              <Assign fromlineno="153" tolineno="153" lineno="153" targets="[&lt;AssName(abs_fn) l.153 [bb.parse.parse_py.BBHandler] at Oxa11cb8c&gt;]" value="j">
                <AssName fromlineno="153" tolineno="153" lineno="153" name="abs_fn"/>
                <Name fromlineno="153" tolineno="153" lineno="153" name="j"/>
              </Assign>
              <Assign fromlineno="154" tolineno="154" lineno="154" targets="[&lt;AssName(f) l.154 [bb.parse.parse_py.BBHandler] at Oxa11cc2c&gt;]" value="open(j, 'r')">
                <AssName fromlineno="154" tolineno="154" lineno="154" name="f"/>
                <CallFunc fromlineno="154" tolineno="154" lineno="154" func="Name(open)">
                  <Name fromlineno="154" tolineno="154" lineno="154" name="open"/>
                  <Name fromlineno="154" tolineno="154" lineno="154" name="j"/>
                  <Const fromlineno="154" tolineno="154" lineno="154" type="str">'r'</Const>
                </CallFunc>
              </Assign>
              <Break fromlineno="155" tolineno="155" lineno="155"/>
            </If>
          </For>
          <If fromlineno="156" tolineno="157" lineno="156">
            <Compare fromlineno="156" tolineno="156" lineno="156" op="('is', &lt;Const(NoneType) l.156 [bb.parse.parse_py.BBHandler] at Oxa11cdac&gt;)">
              <Name fromlineno="156" tolineno="156" lineno="156" name="f"/>
              <Const fromlineno="156" tolineno="156" lineno="156" type="NoneType">None</Const>
            </Compare>
            <Raise fromlineno="157" tolineno="157" lineno="157">
              <CallFunc fromlineno="157" tolineno="157" lineno="157" func="Name(IOError)">
                <Name fromlineno="157" tolineno="157" lineno="157" name="IOError"/>
                <BinOp fromlineno="157" tolineno="157" lineno="157" op="%" left="'file %s not found'" right="fn">
                  <Const fromlineno="157" tolineno="157" lineno="157" type="str">'file %s not found'</Const>
                  <Name fromlineno="157" tolineno="157" lineno="157" name="fn"/>
                </BinOp>
              </CallFunc>
            </Raise>
          </If>
          <Assign fromlineno="159" tolineno="159" lineno="159" targets="[&lt;AssName(f) l.159 [bb.parse.parse_py.BBHandler] at Oxa11cf4c&gt;]" value="open(fn, 'r')">
            <AssName fromlineno="159" tolineno="159" lineno="159" name="f"/>
            <CallFunc fromlineno="159" tolineno="159" lineno="159" func="Name(open)">
              <Name fromlineno="159" tolineno="159" lineno="159" name="open"/>
              <Name fromlineno="159" tolineno="159" lineno="159" name="fn"/>
              <Const fromlineno="159" tolineno="159" lineno="159" type="str">'r'</Const>
            </CallFunc>
          </Assign>
          <Assign fromlineno="160" tolineno="160" lineno="160" targets="[&lt;AssName(abs_fn) l.160 [bb.parse.parse_py.BBHandler] at Oxa12006c&gt;]" value="fn">
            <AssName fromlineno="160" tolineno="160" lineno="160" name="abs_fn"/>
            <Name fromlineno="160" tolineno="160" lineno="160" name="fn"/>
          </Assign>
        </If>
        <If fromlineno="162" tolineno="163" lineno="162">
          <Name fromlineno="162" tolineno="162" lineno="162" name="include"/>
          <Discard fromlineno="163" tolineno="163" lineno="163">
            <CallFunc fromlineno="163" tolineno="163" lineno="163" func="Getattr(mark_dependency)">
              <Getattr fromlineno="163" tolineno="163" lineno="163" attrname="mark_dependency" expr="bb.parse">
                <Getattr fromlineno="163" tolineno="163" lineno="163" attrname="parse" expr="bb">
                  <Name fromlineno="163" tolineno="163" lineno="163" name="bb"/>
                </Getattr>
              </Getattr>
              <Name fromlineno="163" tolineno="163" lineno="163" name="d"/>
              <Name fromlineno="163" tolineno="163" lineno="163" name="abs_fn"/>
            </CallFunc>
          </Discard>
        </If>
        <If fromlineno="165" tolineno="166" lineno="165">
          <Compare fromlineno="165" tolineno="165" lineno="165" op="('!=', &lt;Const(str) l.165 [bb.parse.parse_py.BBHandler] at Oxa12028c&gt;)">
            <Name fromlineno="165" tolineno="165" lineno="165" name="ext"/>
            <Const fromlineno="165" tolineno="165" lineno="165" type="str">'.bbclass'</Const>
          </Compare>
          <Discard fromlineno="166" tolineno="166" lineno="166">
            <CallFunc fromlineno="166" tolineno="166" lineno="166" func="Getattr(setVar)">
              <Getattr fromlineno="166" tolineno="166" lineno="166" attrname="setVar" expr="data">
                <Name fromlineno="166" tolineno="166" lineno="166" name="data"/>
              </Getattr>
              <Const fromlineno="166" tolineno="166" lineno="166" type="str">'FILE'</Const>
              <Name fromlineno="166" tolineno="166" lineno="166" name="fn"/>
              <Name fromlineno="166" tolineno="166" lineno="166" name="d"/>
            </CallFunc>
          </Discard>
        </If>
        <Assign fromlineno="168" tolineno="168" lineno="168" targets="[&lt;AssName(lineno) l.168 [bb.parse.parse_py.BBHandler] at Oxa12042c&gt;]" value="0">
          <AssName fromlineno="168" tolineno="168" lineno="168" name="lineno"/>
          <Const fromlineno="168" tolineno="168" lineno="168" type="int">0</Const>
        </Assign>
        <While fromlineno="169" tolineno="174" lineno="169">
          <Const fromlineno="169" tolineno="169" lineno="169" type="int">1</Const>
          <Assign fromlineno="170" tolineno="170" lineno="170" targets="[&lt;AssName(lineno) l.170 [bb.parse.parse_py.BBHandler] at Oxa12054c&gt;]" value="(lineno) + (1)">
            <AssName fromlineno="170" tolineno="170" lineno="170" name="lineno"/>
            <BinOp fromlineno="170" tolineno="170" lineno="170" op="+" left="lineno" right="1">
              <Name fromlineno="170" tolineno="170" lineno="170" name="lineno"/>
              <Const fromlineno="170" tolineno="170" lineno="170" type="int">1</Const>
            </BinOp>
          </Assign>
          <Assign fromlineno="171" tolineno="171" lineno="171" targets="[&lt;AssName(s) l.171 [bb.parse.parse_py.BBHandler] at Oxa12060c&gt;]" value="f.readline()">
            <AssName fromlineno="171" tolineno="171" lineno="171" name="s"/>
            <CallFunc fromlineno="171" tolineno="171" lineno="171" func="Getattr(readline)">
              <Getattr fromlineno="171" tolineno="171" lineno="171" attrname="readline" expr="f">
                <Name fromlineno="171" tolineno="171" lineno="171" name="f"/>
              </Getattr>
            </CallFunc>
          </Assign>
          <If fromlineno="172" tolineno="172" lineno="172">
            <UnaryOp fromlineno="172" tolineno="172" lineno="172">
              <Name fromlineno="172" tolineno="172" lineno="172" name="s"/>
            </UnaryOp>
            <Break fromlineno="172" tolineno="172" lineno="172"/>
          </If>
          <Assign fromlineno="173" tolineno="173" lineno="173" targets="[&lt;AssName(s) l.173 [bb.parse.parse_py.BBHandler] at Oxa1207cc&gt;]" value="s.rstrip()">
            <AssName fromlineno="173" tolineno="173" lineno="173" name="s"/>
            <CallFunc fromlineno="173" tolineno="173" lineno="173" func="Getattr(rstrip)">
              <Getattr fromlineno="173" tolineno="173" lineno="173" attrname="rstrip" expr="s">
                <Name fromlineno="173" tolineno="173" lineno="173" name="s"/>
              </Getattr>
            </CallFunc>
          </Assign>
          <Discard fromlineno="174" tolineno="174" lineno="174">
            <CallFunc fromlineno="174" tolineno="174" lineno="174" func="Name(feeder)">
              <Name fromlineno="174" tolineno="174" lineno="174" name="feeder"/>
              <Name fromlineno="174" tolineno="174" lineno="174" name="lineno"/>
              <Name fromlineno="174" tolineno="174" lineno="174" name="s"/>
              <Name fromlineno="174" tolineno="174" lineno="174" name="fn"/>
              <Name fromlineno="174" tolineno="174" lineno="174" name="base_name"/>
              <Name fromlineno="174" tolineno="174" lineno="174" name="d"/>
            </CallFunc>
          </Discard>
        </While>
        <If fromlineno="175" tolineno="177" lineno="175">
          <Name fromlineno="175" tolineno="175" lineno="175" name="__inpython__"/>
          <Discard fromlineno="177" tolineno="177" lineno="177">
            <CallFunc fromlineno="177" tolineno="177" lineno="177" func="Name(feeder)">
              <Name fromlineno="177" tolineno="177" lineno="177" name="feeder"/>
              <Name fromlineno="177" tolineno="177" lineno="177" name="IN_PYTHON_EOF"/>
              <Const fromlineno="177" tolineno="177" lineno="177" type="str">''</Const>
              <Name fromlineno="177" tolineno="177" lineno="177" name="fn"/>
              <Name fromlineno="177" tolineno="177" lineno="177" name="base_name"/>
              <Name fromlineno="177" tolineno="177" lineno="177" name="d"/>
            </CallFunc>
          </Discard>
        </If>
        <If fromlineno="178" tolineno="197" lineno="178">
          <Compare fromlineno="178" tolineno="178" lineno="178" op="('==', &lt;Const(str) l.178 [bb.parse.parse_py.BBHandler] at Oxa120bcc&gt;)">
            <Name fromlineno="178" tolineno="178" lineno="178" name="ext"/>
            <Const fromlineno="178" tolineno="178" lineno="178" type="str">'.bbclass'</Const>
          </Compare>
          <Discard fromlineno="179" tolineno="179" lineno="179">
            <CallFunc fromlineno="179" tolineno="179" lineno="179" func="Getattr(remove)">
              <Getattr fromlineno="179" tolineno="179" lineno="179" attrname="remove" expr="classes">
                <Name fromlineno="179" tolineno="179" lineno="179" name="classes"/>
              </Getattr>
              <Name fromlineno="179" tolineno="179" lineno="179" name="__classname__"/>
            </CallFunc>
          </Discard>
          <If fromlineno="181" tolineno="196" lineno="181">
            <Compare fromlineno="181" tolineno="181" lineno="181" op="('==', &lt;Const(int) l.181 [bb.parse.parse_py.BBHandler] at Oxa120dcc&gt;)">
              <Name fromlineno="181" tolineno="181" lineno="181" name="include"/>
              <Const fromlineno="181" tolineno="181" lineno="181" type="int">0</Const>
            </Compare>
            <Assign fromlineno="182" tolineno="182" lineno="182" targets="[&lt;AssName(multi) l.182 [bb.parse.parse_py.BBHandler] at Oxa120e6c&gt;]" value="data.getVar('BBCLASSEXTEND', d, 1)">
              <AssName fromlineno="182" tolineno="182" lineno="182" name="multi"/>
              <CallFunc fromlineno="182" tolineno="182" lineno="182" func="Getattr(getVar)">
                <Getattr fromlineno="182" tolineno="182" lineno="182" attrname="getVar" expr="data">
                  <Name fromlineno="182" tolineno="182" lineno="182" name="data"/>
                </Getattr>
                <Const fromlineno="182" tolineno="182" lineno="182" type="str">'BBCLASSEXTEND'</Const>
                <Name fromlineno="182" tolineno="182" lineno="182" name="d"/>
                <Const fromlineno="182" tolineno="182" lineno="182" type="int">1</Const>
              </CallFunc>
            </Assign>
            <If fromlineno="183" tolineno="196" lineno="183">
              <Name fromlineno="183" tolineno="183" lineno="183" name="multi"/>
              <Assign fromlineno="184" tolineno="184" lineno="184" targets="[&lt;AssName(based) l.184 [bb.parse.parse_py.BBHandler] at Oxa12508c&gt;]" value="bb.data.createCopy(d)">
                <AssName fromlineno="184" tolineno="184" lineno="184" name="based"/>
                <CallFunc fromlineno="184" tolineno="184" lineno="184" func="Getattr(createCopy)">
                  <Getattr fromlineno="184" tolineno="184" lineno="184" attrname="createCopy" expr="bb.data">
                    <Getattr fromlineno="184" tolineno="184" lineno="184" attrname="data" expr="bb">
                      <Name fromlineno="184" tolineno="184" lineno="184" name="bb"/>
                    </Getattr>
                  </Getattr>
                  <Name fromlineno="184" tolineno="184" lineno="184" name="d"/>
                </CallFunc>
              </Assign>
              <Discard fromlineno="185" tolineno="185" lineno="185">
                <CallFunc fromlineno="185" tolineno="185" lineno="185" func="Name(finalise)">
                  <Name fromlineno="185" tolineno="185" lineno="185" name="finalise"/>
                  <Name fromlineno="185" tolineno="185" lineno="185" name="fn"/>
                  <Name fromlineno="185" tolineno="185" lineno="185" name="based"/>
                </CallFunc>
              </Discard>
              <Assign fromlineno="186" tolineno="186" lineno="186" targets="[&lt;AssName(darray) l.186 [bb.parse.parse_py.BBHandler] at Oxa12528c&gt;]" value="{'': based}">
                <AssName fromlineno="186" tolineno="186" lineno="186" name="darray"/>
                <Dict fromlineno="186" tolineno="186" lineno="186">
                  <Const fromlineno="186" tolineno="186" lineno="186" type="str">''</Const>
                  <Name fromlineno="186" tolineno="186" lineno="186" name="based"/>
                </Dict>
              </Assign>
              <For fromlineno="187" tolineno="193" lineno="187">
                <AssName fromlineno="187" tolineno="187" lineno="187" name="cls"/>
                <CallFunc fromlineno="187" tolineno="187" lineno="187" func="Getattr(split)">
                  <Getattr fromlineno="187" tolineno="187" lineno="187" attrname="split" expr="multi">
                    <Name fromlineno="187" tolineno="187" lineno="187" name="multi"/>
                  </Getattr>
                </CallFunc>
                <Assign fromlineno="188" tolineno="188" lineno="188" targets="[&lt;AssName(pn) l.188 [bb.parse.parse_py.BBHandler] at Oxa1254cc&gt;]" value="data.getVar('PN', d, True)">
                  <AssName fromlineno="188" tolineno="188" lineno="188" name="pn"/>
                  <CallFunc fromlineno="188" tolineno="188" lineno="188" func="Getattr(getVar)">
                    <Getattr fromlineno="188" tolineno="188" lineno="188" attrname="getVar" expr="data">
                      <Name fromlineno="188" tolineno="188" lineno="188" name="data"/>
                    </Getattr>
                    <Const fromlineno="188" tolineno="188" lineno="188" type="str">'PN'</Const>
                    <Name fromlineno="188" tolineno="188" lineno="188" name="d"/>
                    <Const fromlineno="188" tolineno="188" lineno="188" type="bool">True</Const>
                  </CallFunc>
                </Assign>
                <Assign fromlineno="189" tolineno="189" lineno="189" targets="[&lt;AssName(based) l.189 [bb.parse.parse_py.BBHandler] at Oxa12562c&gt;]" value="bb.data.createCopy(d)">
                  <AssName fromlineno="189" tolineno="189" lineno="189" name="based"/>
                  <CallFunc fromlineno="189" tolineno="189" lineno="189" func="Getattr(createCopy)">
                    <Getattr fromlineno="189" tolineno="189" lineno="189" attrname="createCopy" expr="bb.data">
                      <Getattr fromlineno="189" tolineno="189" lineno="189" attrname="data" expr="bb">
                        <Name fromlineno="189" tolineno="189" lineno="189" name="bb"/>
                      </Getattr>
                    </Getattr>
                    <Name fromlineno="189" tolineno="189" lineno="189" name="d"/>
                  </CallFunc>
                </Assign>
                <Discard fromlineno="190" tolineno="190" lineno="190">
                  <CallFunc fromlineno="190" tolineno="190" lineno="190" func="Getattr(setVar)">
                    <Getattr fromlineno="190" tolineno="190" lineno="190" attrname="setVar" expr="data">
                      <Name fromlineno="190" tolineno="190" lineno="190" name="data"/>
                    </Getattr>
                    <Const fromlineno="190" tolineno="190" lineno="190" type="str">'PN'</Const>
                    <BinOp fromlineno="190" tolineno="190" lineno="190" op="+" left="(pn) + ('-')" right="cls">
                      <BinOp fromlineno="190" tolineno="190" lineno="190" op="+" left="pn" right="'-'">
                        <Name fromlineno="190" tolineno="190" lineno="190" name="pn"/>
                        <Const fromlineno="190" tolineno="190" lineno="190" type="str">'-'</Const>
                      </BinOp>
                      <Name fromlineno="190" tolineno="190" lineno="190" name="cls"/>
                    </BinOp>
                    <Name fromlineno="190" tolineno="190" lineno="190" name="based"/>
                  </CallFunc>
                </Discard>
                <Discard fromlineno="191" tolineno="191" lineno="191">
                  <CallFunc fromlineno="191" tolineno="191" lineno="191" func="Name(inherit)">
                    <Name fromlineno="191" tolineno="191" lineno="191" name="inherit"/>
                    <List fromlineno="191" tolineno="191" lineno="191">
                      <Name fromlineno="191" tolineno="191" lineno="191" name="cls"/>
                    </List>
                    <Name fromlineno="191" tolineno="191" lineno="191" name="based"/>
                  </CallFunc>
                </Discard>
                <Discard fromlineno="192" tolineno="192" lineno="192">
                  <CallFunc fromlineno="192" tolineno="192" lineno="192" func="Name(finalise)">
                    <Name fromlineno="192" tolineno="192" lineno="192" name="finalise"/>
                    <Name fromlineno="192" tolineno="192" lineno="192" name="fn"/>
                    <Name fromlineno="192" tolineno="192" lineno="192" name="based"/>
                  </CallFunc>
                </Discard>
                <Assign fromlineno="193" tolineno="193" lineno="193" targets="[&lt;Subscript() l.193 [bb.parse.parse_py.BBHandler] at Oxa125a8c&gt;]" value="based">
                  <Subscript fromlineno="193" tolineno="193" lineno="193">
                    <Name fromlineno="193" tolineno="193" lineno="193" name="darray"/>
                    <Index fromlineno="193" tolineno="193" lineno="None">
                      <Name fromlineno="193" tolineno="193" lineno="193" name="cls"/>
                    </Index>
                  </Subscript>
                  <Name fromlineno="193" tolineno="193" lineno="193" name="based"/>
                </Assign>
              </For>
              <Return fromlineno="194" tolineno="194" lineno="194">
                <Name fromlineno="194" tolineno="194" lineno="194" name="darray"/>
              </Return>
              <Discard fromlineno="196" tolineno="196" lineno="196">
                <CallFunc fromlineno="196" tolineno="196" lineno="196" func="Name(finalise)">
                  <Name fromlineno="196" tolineno="196" lineno="196" name="finalise"/>
                  <Name fromlineno="196" tolineno="196" lineno="196" name="fn"/>
                  <Name fromlineno="196" tolineno="196" lineno="196" name="d"/>
                </CallFunc>
              </Discard>
            </If>
          </If>
          <Discard fromlineno="197" tolineno="197" lineno="197">
            <CallFunc fromlineno="197" tolineno="197" lineno="197" func="Getattr(pop)">
              <Getattr fromlineno="197" tolineno="197" lineno="197" attrname="pop" expr="bbpath">
                <Name fromlineno="197" tolineno="197" lineno="197" name="bbpath"/>
              </Getattr>
              <Const fromlineno="197" tolineno="197" lineno="197" type="int">0</Const>
            </CallFunc>
          </Discard>
        </If>
        <If fromlineno="198" tolineno="199" lineno="198">
          <Name fromlineno="198" tolineno="198" lineno="198" name="oldfile"/>
          <Discard fromlineno="199" tolineno="199" lineno="199">
            <CallFunc fromlineno="199" tolineno="199" lineno="199" func="Getattr(setVar)">
              <Getattr fromlineno="199" tolineno="199" lineno="199" attrname="setVar" expr="bb.data">
                <Getattr fromlineno="199" tolineno="199" lineno="199" attrname="data" expr="bb">
                  <Name fromlineno="199" tolineno="199" lineno="199" name="bb"/>
                </Getattr>
              </Getattr>
              <Const fromlineno="199" tolineno="199" lineno="199" type="str">'FILE'</Const>
              <Name fromlineno="199" tolineno="199" lineno="199" name="oldfile"/>
              <Name fromlineno="199" tolineno="199" lineno="199" name="d"/>
            </CallFunc>
          </Discard>
        </If>
        <If fromlineno="202" tolineno="203" lineno="202">
          <BoolOp fromlineno="202" tolineno="202" lineno="202" op="or" values="ext == '.bbclass',ext == '.inc',">
            <Compare fromlineno="202" tolineno="202" lineno="202" op="('==', &lt;Const(str) l.202 [bb.parse.parse_py.BBHandler] at Oxa125f2c&gt;)">
              <Name fromlineno="202" tolineno="202" lineno="202" name="ext"/>
              <Const fromlineno="202" tolineno="202" lineno="202" type="str">'.bbclass'</Const>
            </Compare>
            <Compare fromlineno="202" tolineno="202" lineno="202" op="('==', &lt;Const(str) l.202 [bb.parse.parse_py.BBHandler] at Oxa125fcc&gt;)">
              <Name fromlineno="202" tolineno="202" lineno="202" name="ext"/>
              <Const fromlineno="202" tolineno="202" lineno="202" type="str">'.inc'</Const>
            </Compare>
          </BoolOp>
          <Assign fromlineno="203" tolineno="203" lineno="203" targets="[&lt;Subscript() l.203 [bb.parse.parse_py.BBHandler] at Oxa12906c&gt;]" value="1">
            <Subscript fromlineno="203" tolineno="203" lineno="203">
              <Name fromlineno="203" tolineno="203" lineno="203" name="__parsed_methods__"/>
              <Index fromlineno="203" tolineno="203" lineno="None">
                <Name fromlineno="203" tolineno="203" lineno="203" name="base_name"/>
              </Index>
            </Subscript>
            <Const fromlineno="203" tolineno="203" lineno="203" type="int">1</Const>
          </Assign>
        </If>
        <Return fromlineno="205" tolineno="205" lineno="205">
          <Name fromlineno="205" tolineno="205" lineno="205" name="d"/>
        </Return>
      </Function>
      <Function fromlineno="207" tolineno="380" lineno="207">
        <Arguments fromlineno="207" tolineno="207" lineno="None" format_args="lineno, s, fn, root, d">
          <AssName fromlineno="207" tolineno="207" lineno="207" name="lineno"/>
          <AssName fromlineno="207" tolineno="207" lineno="207" name="s"/>
          <AssName fromlineno="207" tolineno="207" lineno="207" name="fn"/>
          <AssName fromlineno="207" tolineno="207" lineno="207" name="root"/>
          <AssName fromlineno="207" tolineno="207" lineno="207" name="d"/>
        </Arguments>
        <Global fromlineno="208" tolineno="208" lineno="208"/>
        <If fromlineno="209" tolineno="227" lineno="209">
          <Name fromlineno="209" tolineno="209" lineno="209" name="__infunc__"/>
          <If fromlineno="210" tolineno="226" lineno="210">
            <Compare fromlineno="210" tolineno="210" lineno="210" op="('==', &lt;Const(str) l.210 [bb.parse.parse_py.BBHandler] at Oxa12954c&gt;)">
              <Name fromlineno="210" tolineno="210" lineno="210" name="s"/>
              <Const fromlineno="210" tolineno="210" lineno="210" type="str">'}'</Const>
            </Compare>
            <Discard fromlineno="211" tolineno="211" lineno="211">
              <CallFunc fromlineno="211" tolineno="211" lineno="211" func="Getattr(append)">
                <Getattr fromlineno="211" tolineno="211" lineno="211" attrname="append" expr="__body__">
                  <Name fromlineno="211" tolineno="211" lineno="211" name="__body__"/>
                </Getattr>
                <Const fromlineno="211" tolineno="211" lineno="211" type="str">''</Const>
              </CallFunc>
            </Discard>
            <If fromlineno="212" tolineno="222" lineno="212">
              <Compare fromlineno="212" tolineno="212" lineno="212" op="('==', &lt;Const(str) l.212 [bb.parse.parse_py.BBHandler] at Oxa12972c&gt;)">
                <Name fromlineno="212" tolineno="212" lineno="212" name="__infunc__"/>
                <Const fromlineno="212" tolineno="212" lineno="212" type="str">'__anonymous'</Const>
              </Compare>
              <Assign fromlineno="213" tolineno="213" lineno="213" targets="[&lt;AssName(funcname) l.213 [bb.parse.parse_py.BBHandler] at Oxa1297cc&gt;]" value="('__anon_%s_%s') % ((lineno, fn.translate(string.maketrans('/.+-', '____'))))">
                <AssName fromlineno="213" tolineno="213" lineno="213" name="funcname"/>
                <BinOp fromlineno="213" tolineno="213" lineno="213" op="%" left="'__anon_%s_%s'" right="(lineno, fn.translate(string.maketrans('/.+-', '____')))">
                  <Const fromlineno="213" tolineno="213" lineno="213" type="str">'__anon_%s_%s'</Const>
                  <Tuple fromlineno="213" tolineno="213" lineno="213">
                    <Name fromlineno="213" tolineno="213" lineno="213" name="lineno"/>
                    <CallFunc fromlineno="213" tolineno="213" lineno="213" func="Getattr(translate)">
                      <Getattr fromlineno="213" tolineno="213" lineno="213" attrname="translate" expr="fn">
                        <Name fromlineno="213" tolineno="213" lineno="213" name="fn"/>
                      </Getattr>
                      <CallFunc fromlineno="213" tolineno="213" lineno="213" func="Getattr(maketrans)">
                        <Getattr fromlineno="213" tolineno="213" lineno="213" attrname="maketrans" expr="string">
                          <Name fromlineno="213" tolineno="213" lineno="213" name="string"/>
                        </Getattr>
                        <Const fromlineno="213" tolineno="213" lineno="213" type="str">'/.+-'</Const>
                        <Const fromlineno="213" tolineno="213" lineno="213" type="str">'____'</Const>
                      </CallFunc>
                    </CallFunc>
                  </Tuple>
                </BinOp>
              </Assign>
              <If fromlineno="214" tolineno="216" lineno="214">
                <UnaryOp fromlineno="214" tolineno="214" lineno="214">
                  <Compare fromlineno="214" tolineno="214" lineno="214" op="('in', &lt;Getattr(_parsed_fns) l.214 [bb.parse.parse_py.BBHandler] at Oxa129acc&gt;)">
                    <Name fromlineno="214" tolineno="214" lineno="214" name="funcname"/>
                    <Getattr fromlineno="214" tolineno="214" lineno="214" attrname="_parsed_fns" expr="methodpool">
                      <Name fromlineno="214" tolineno="214" lineno="214" name="methodpool"/>
                    </Getattr>
                  </Compare>
                </UnaryOp>
                <Assign fromlineno="215" tolineno="215" lineno="215" targets="[&lt;AssName(text) l.215 [bb.parse.parse_py.BBHandler] at Oxa129b8c&gt;]" value="(('def %s(d):\n') % (funcname)) + ('\n'.join(__body__))">
                  <AssName fromlineno="215" tolineno="215" lineno="215" name="text"/>
                  <BinOp fromlineno="215" tolineno="215" lineno="215" op="+" left="('def %s(d):\n') % (funcname)" right="'\n'.join(__body__)">
                    <BinOp fromlineno="215" tolineno="215" lineno="215" op="%" left="'def %s(d):\n'" right="funcname">
                      <Const fromlineno="215" tolineno="215" lineno="215" type="str">'def %s(d):\n'</Const>
                      <Name fromlineno="215" tolineno="215" lineno="215" name="funcname"/>
                    </BinOp>
                    <CallFunc fromlineno="215" tolineno="215" lineno="215" func="Getattr(join)">
                      <Getattr fromlineno="215" tolineno="215" lineno="215" attrname="join" expr="'\n'">
                        <Const fromlineno="215" tolineno="215" lineno="215" type="str">'\n'</Const>
                      </Getattr>
                      <Name fromlineno="215" tolineno="215" lineno="215" name="__body__"/>
                    </CallFunc>
                  </BinOp>
                </Assign>
                <Discard fromlineno="216" tolineno="216" lineno="216">
                  <CallFunc fromlineno="216" tolineno="216" lineno="216" func="Getattr(insert_method)">
                    <Getattr fromlineno="216" tolineno="216" lineno="216" attrname="insert_method" expr="methodpool">
                      <Name fromlineno="216" tolineno="216" lineno="216" name="methodpool"/>
                    </Getattr>
                    <Name fromlineno="216" tolineno="216" lineno="216" name="funcname"/>
                    <Name fromlineno="216" tolineno="216" lineno="216" name="text"/>
                    <Name fromlineno="216" tolineno="216" lineno="216" name="fn"/>
                  </CallFunc>
                </Discard>
              </If>
              <Assign fromlineno="217" tolineno="217" lineno="217" targets="[&lt;AssName(anonfuncs) l.217 [bb.parse.parse_py.BBHandler] at Oxa129e2c&gt;]" value="(data.getVar('__BBANONFUNCS', d)) or ([])">
                <AssName fromlineno="217" tolineno="217" lineno="217" name="anonfuncs"/>
                <BoolOp fromlineno="217" tolineno="217" lineno="217" op="or" values="data.getVar('__BBANONFUNCS', d),[],">
                  <CallFunc fromlineno="217" tolineno="217" lineno="217" func="Getattr(getVar)">
                    <Getattr fromlineno="217" tolineno="217" lineno="217" attrname="getVar" expr="data">
                      <Name fromlineno="217" tolineno="217" lineno="217" name="data"/>
                    </Getattr>
                    <Const fromlineno="217" tolineno="217" lineno="217" type="str">'__BBANONFUNCS'</Const>
                    <Name fromlineno="217" tolineno="217" lineno="217" name="d"/>
                  </CallFunc>
                  <List fromlineno="217" tolineno="217" lineno="217"/>
                </BoolOp>
              </Assign>
              <Discard fromlineno="218" tolineno="218" lineno="218">
                <CallFunc fromlineno="218" tolineno="218" lineno="218" func="Getattr(append)">
                  <Getattr fromlineno="218" tolineno="218" lineno="218" attrname="append" expr="anonfuncs">
                    <Name fromlineno="218" tolineno="218" lineno="218" name="anonfuncs"/>
                  </Getattr>
                  <Name fromlineno="218" tolineno="218" lineno="218" name="funcname"/>
                </CallFunc>
              </Discard>
              <Discard fromlineno="219" tolineno="219" lineno="219">
                <CallFunc fromlineno="219" tolineno="219" lineno="219" func="Getattr(setVar)">
                  <Getattr fromlineno="219" tolineno="219" lineno="219" attrname="setVar" expr="data">
                    <Name fromlineno="219" tolineno="219" lineno="219" name="data"/>
                  </Getattr>
                  <Const fromlineno="219" tolineno="219" lineno="219" type="str">'__BBANONFUNCS'</Const>
                  <Name fromlineno="219" tolineno="219" lineno="219" name="anonfuncs"/>
                  <Name fromlineno="219" tolineno="219" lineno="219" name="d"/>
                </CallFunc>
              </Discard>
              <Discard fromlineno="221" tolineno="221" lineno="221">
                <CallFunc fromlineno="221" tolineno="221" lineno="221" func="Getattr(setVarFlag)">
                  <Getattr fromlineno="221" tolineno="221" lineno="221" attrname="setVarFlag" expr="data">
                    <Name fromlineno="221" tolineno="221" lineno="221" name="data"/>
                  </Getattr>
                  <Name fromlineno="221" tolineno="221" lineno="221" name="__infunc__"/>
                  <Const fromlineno="221" tolineno="221" lineno="221" type="str">'func'</Const>
                  <Const fromlineno="221" tolineno="221" lineno="221" type="int">1</Const>
                  <Name fromlineno="221" tolineno="221" lineno="221" name="d"/>
                </CallFunc>
              </Discard>
              <Discard fromlineno="222" tolineno="222" lineno="222">
                <CallFunc fromlineno="222" tolineno="222" lineno="222" func="Getattr(setVar)">
                  <Getattr fromlineno="222" tolineno="222" lineno="222" attrname="setVar" expr="data">
                    <Name fromlineno="222" tolineno="222" lineno="222" name="data"/>
                  </Getattr>
                  <Name fromlineno="222" tolineno="222" lineno="222" name="__infunc__"/>
                  <CallFunc fromlineno="222" tolineno="222" lineno="222" func="Getattr(join)">
                    <Getattr fromlineno="222" tolineno="222" lineno="222" attrname="join" expr="'\n'">
                      <Const fromlineno="222" tolineno="222" lineno="222" type="str">'\n'</Const>
                    </Getattr>
                    <Name fromlineno="222" tolineno="222" lineno="222" name="__body__"/>
                  </CallFunc>
                  <Name fromlineno="222" tolineno="222" lineno="222" name="d"/>
                </CallFunc>
              </Discard>
            </If>
            <Assign fromlineno="223" tolineno="223" lineno="223" targets="[&lt;AssName(__infunc__) l.223 [bb.parse.parse_py.BBHandler] at Oxa12d44c&gt;]" value="''">
              <AssName fromlineno="223" tolineno="223" lineno="223" name="__infunc__"/>
              <Const fromlineno="223" tolineno="223" lineno="223" type="str">''</Const>
            </Assign>
            <Assign fromlineno="224" tolineno="224" lineno="224" targets="[&lt;AssName(__body__) l.224 [bb.parse.parse_py.BBHandler] at Oxa12d4cc&gt;]" value="[]">
              <AssName fromlineno="224" tolineno="224" lineno="224" name="__body__"/>
              <List fromlineno="224" tolineno="224" lineno="224"/>
            </Assign>
            <Discard fromlineno="226" tolineno="226" lineno="226">
              <CallFunc fromlineno="226" tolineno="226" lineno="226" func="Getattr(append)">
                <Getattr fromlineno="226" tolineno="226" lineno="226" attrname="append" expr="__body__">
                  <Name fromlineno="226" tolineno="226" lineno="226" name="__body__"/>
                </Getattr>
                <Name fromlineno="226" tolineno="226" lineno="226" name="s"/>
              </CallFunc>
            </Discard>
          </If>
          <Return fromlineno="227" tolineno="227" lineno="227"/>
        </If>
        <If fromlineno="229" tolineno="252" lineno="229">
          <Name fromlineno="229" tolineno="229" lineno="229" name="__inpython__"/>
          <Assign fromlineno="230" tolineno="230" lineno="230" targets="[&lt;AssName(m) l.230 [bb.parse.parse_py.BBHandler] at Oxa12d68c&gt;]" value="__python_func_regexp__.match(s)">
            <AssName fromlineno="230" tolineno="230" lineno="230" name="m"/>
            <CallFunc fromlineno="230" tolineno="230" lineno="230" func="Getattr(match)">
              <Getattr fromlineno="230" tolineno="230" lineno="230" attrname="match" expr="__python_func_regexp__">
                <Name fromlineno="230" tolineno="230" lineno="230" name="__python_func_regexp__"/>
              </Getattr>
              <Name fromlineno="230" tolineno="230" lineno="230" name="s"/>
            </CallFunc>
          </Assign>
          <If fromlineno="231" tolineno="252" lineno="231">
            <BoolOp fromlineno="231" tolineno="231" lineno="231" op="and" values="m,lineno != IN_PYTHON_EOF,">
              <Name fromlineno="231" tolineno="231" lineno="231" name="m"/>
              <Compare fromlineno="231" tolineno="231" lineno="231" op="('!=', &lt;Name(IN_PYTHON_EOF) l.231 [bb.parse.parse_py.BBHandler] at Oxa12d8ac&gt;)">
                <Name fromlineno="231" tolineno="231" lineno="231" name="lineno"/>
                <Name fromlineno="231" tolineno="231" lineno="231" name="IN_PYTHON_EOF"/>
              </Compare>
            </BoolOp>
            <Discard fromlineno="232" tolineno="232" lineno="232">
              <CallFunc fromlineno="232" tolineno="232" lineno="232" func="Getattr(append)">
                <Getattr fromlineno="232" tolineno="232" lineno="232" attrname="append" expr="__body__">
                  <Name fromlineno="232" tolineno="232" lineno="232" name="__body__"/>
                </Getattr>
                <Name fromlineno="232" tolineno="232" lineno="232" name="s"/>
              </CallFunc>
            </Discard>
            <Return fromlineno="233" tolineno="233" lineno="233"/>
            <If fromlineno="238" tolineno="247" lineno="238">
              <UnaryOp fromlineno="238" tolineno="238" lineno="238">
                <Compare fromlineno="238" tolineno="238" lineno="238" op="('in', &lt;Name(__parsed_methods__) l.238 [bb.parse.parse_py.BBHandler] at Oxa12dacc&gt;)">
                  <Name fromlineno="238" tolineno="238" lineno="238" name="root"/>
                  <Name fromlineno="238" tolineno="238" lineno="238" name="__parsed_methods__"/>
                </Compare>
              </UnaryOp>
              <Assign fromlineno="239" tolineno="239" lineno="239" targets="[&lt;AssName(text) l.239 [bb.parse.parse_py.BBHandler] at Oxa12db6c&gt;]" value="'\n'.join(__body__)">
                <AssName fromlineno="239" tolineno="239" lineno="239" name="text"/>
                <CallFunc fromlineno="239" tolineno="239" lineno="239" func="Getattr(join)">
                  <Getattr fromlineno="239" tolineno="239" lineno="239" attrname="join" expr="'\n'">
                    <Const fromlineno="239" tolineno="239" lineno="239" type="str">'\n'</Const>
                  </Getattr>
                  <Name fromlineno="239" tolineno="239" lineno="239" name="__body__"/>
                </CallFunc>
              </Assign>
              <Discard fromlineno="240" tolineno="240" lineno="240">
                <CallFunc fromlineno="240" tolineno="240" lineno="240" func="Getattr(insert_method)">
                  <Getattr fromlineno="240" tolineno="240" lineno="240" attrname="insert_method" expr="methodpool">
                    <Name fromlineno="240" tolineno="240" lineno="240" name="methodpool"/>
                  </Getattr>
                  <Name fromlineno="240" tolineno="240" lineno="240" name="root"/>
                  <Name fromlineno="240" tolineno="240" lineno="240" name="text"/>
                  <Name fromlineno="240" tolineno="240" lineno="240" name="fn"/>
                </CallFunc>
              </Discard>
              <Assign fromlineno="241" tolineno="241" lineno="241" targets="[&lt;AssName(funcs) l.241 [bb.parse.parse_py.BBHandler] at Oxa12dd6c&gt;]" value="(data.getVar('__functions__', d)) or ({})">
                <AssName fromlineno="241" tolineno="241" lineno="241" name="funcs"/>
                <BoolOp fromlineno="241" tolineno="241" lineno="241" op="or" values="data.getVar('__functions__', d),{},">
                  <CallFunc fromlineno="241" tolineno="241" lineno="241" func="Getattr(getVar)">
                    <Getattr fromlineno="241" tolineno="241" lineno="241" attrname="getVar" expr="data">
                      <Name fromlineno="241" tolineno="241" lineno="241" name="data"/>
                    </Getattr>
                    <Const fromlineno="241" tolineno="241" lineno="241" type="str">'__functions__'</Const>
                    <Name fromlineno="241" tolineno="241" lineno="241" name="d"/>
                  </CallFunc>
                  <Dict fromlineno="241" tolineno="241" lineno="241"/>
                </BoolOp>
              </Assign>
              <If fromlineno="242" tolineno="245" lineno="242">
                <UnaryOp fromlineno="242" tolineno="242" lineno="242">
                  <CallFunc fromlineno="242" tolineno="242" lineno="242" func="Getattr(has_key)">
                    <Getattr fromlineno="242" tolineno="242" lineno="242" attrname="has_key" expr="funcs">
                      <Name fromlineno="242" tolineno="242" lineno="242" name="funcs"/>
                    </Getattr>
                    <Name fromlineno="242" tolineno="242" lineno="242" name="root"/>
                  </CallFunc>
                </UnaryOp>
                <Assign fromlineno="243" tolineno="243" lineno="243" targets="[&lt;Subscript() l.243 [bb.parse.parse_py.BBHandler] at Oxa13108c&gt;]" value="text">
                  <Subscript fromlineno="243" tolineno="243" lineno="243">
                    <Name fromlineno="243" tolineno="243" lineno="243" name="funcs"/>
                    <Index fromlineno="243" tolineno="243" lineno="None">
                      <Name fromlineno="243" tolineno="243" lineno="243" name="root"/>
                    </Index>
                  </Subscript>
                  <Name fromlineno="243" tolineno="243" lineno="243" name="text"/>
                </Assign>
                <Assign fromlineno="245" tolineno="245" lineno="245" targets="[&lt;Subscript() l.245 [bb.parse.parse_py.BBHandler] at Oxa13118c&gt;]" value="('%s\n%s') % ((funcs[root], text))">
                  <Subscript fromlineno="245" tolineno="245" lineno="245">
                    <Name fromlineno="245" tolineno="245" lineno="245" name="funcs"/>
                    <Index fromlineno="245" tolineno="245" lineno="None">
                      <Name fromlineno="245" tolineno="245" lineno="245" name="root"/>
                    </Index>
                  </Subscript>
                  <BinOp fromlineno="245" tolineno="245" lineno="245" op="%" left="'%s\n%s'" right="(funcs[root], text)">
                    <Const fromlineno="245" tolineno="245" lineno="245" type="str">'%s\n%s'</Const>
                    <Tuple fromlineno="245" tolineno="245" lineno="245">
                      <Subscript fromlineno="245" tolineno="245" lineno="245">
                        <Name fromlineno="245" tolineno="245" lineno="245" name="funcs"/>
                        <Index fromlineno="245" tolineno="245" lineno="None">
                          <Name fromlineno="245" tolineno="245" lineno="245" name="root"/>
                        </Index>
                      </Subscript>
                      <Name fromlineno="245" tolineno="245" lineno="245" name="text"/>
                    </Tuple>
                  </BinOp>
                </Assign>
              </If>
              <Discard fromlineno="247" tolineno="247" lineno="247">
                <CallFunc fromlineno="247" tolineno="247" lineno="247" func="Getattr(setVar)">
                  <Getattr fromlineno="247" tolineno="247" lineno="247" attrname="setVar" expr="data">
                    <Name fromlineno="247" tolineno="247" lineno="247" name="data"/>
                  </Getattr>
                  <Const fromlineno="247" tolineno="247" lineno="247" type="str">'__functions__'</Const>
                  <Name fromlineno="247" tolineno="247" lineno="247" name="funcs"/>
                  <Name fromlineno="247" tolineno="247" lineno="247" name="d"/>
                </CallFunc>
              </Discard>
            </If>
            <Assign fromlineno="248" tolineno="248" lineno="248" targets="[&lt;AssName(__body__) l.248 [bb.parse.parse_py.BBHandler] at Oxa13142c&gt;]" value="[]">
              <AssName fromlineno="248" tolineno="248" lineno="248" name="__body__"/>
              <List fromlineno="248" tolineno="248" lineno="248"/>
            </Assign>
            <Assign fromlineno="249" tolineno="249" lineno="249" targets="[&lt;AssName(__inpython__) l.249 [bb.parse.parse_py.BBHandler] at Oxa1314cc&gt;]" value="False">
              <AssName fromlineno="249" tolineno="249" lineno="249" name="__inpython__"/>
              <Const fromlineno="249" tolineno="249" lineno="249" type="bool">False</Const>
            </Assign>
            <If fromlineno="251" tolineno="252" lineno="251">
              <Compare fromlineno="251" tolineno="251" lineno="251" op="('==', &lt;Name(IN_PYTHON_EOF) l.251 [bb.parse.parse_py.BBHandler] at Oxa1315ac&gt;)">
                <Name fromlineno="251" tolineno="251" lineno="251" name="lineno"/>
                <Name fromlineno="251" tolineno="251" lineno="251" name="IN_PYTHON_EOF"/>
              </Compare>
              <Return fromlineno="252" tolineno="252" lineno="252"/>
            </If>
          </If>
        </If>
        <If fromlineno="256" tolineno="256" lineno="256">
          <BoolOp fromlineno="256" tolineno="256" lineno="256" op="or" values="s == '',s[0] == '#',">
            <Compare fromlineno="256" tolineno="256" lineno="256" op="('==', &lt;Const(str) l.256 [bb.parse.parse_py.BBHandler] at Oxa1316cc&gt;)">
              <Name fromlineno="256" tolineno="256" lineno="256" name="s"/>
              <Const fromlineno="256" tolineno="256" lineno="256" type="str">''</Const>
            </Compare>
            <Compare fromlineno="256" tolineno="256" lineno="256" op="('==', &lt;Const(str) l.256 [bb.parse.parse_py.BBHandler] at Oxa1317cc&gt;)">
              <Subscript fromlineno="256" tolineno="256" lineno="256">
                <Name fromlineno="256" tolineno="256" lineno="256" name="s"/>
                <Index fromlineno="256" tolineno="256" lineno="None">
                  <Const fromlineno="256" tolineno="256" lineno="256" type="int">0</Const>
                </Index>
              </Subscript>
              <Const fromlineno="256" tolineno="256" lineno="256" type="str">'#'</Const>
            </Compare>
          </BoolOp>
          <Return fromlineno="256" tolineno="256" lineno="256"/>
        </If>
        <If fromlineno="258" tolineno="260" lineno="258">
          <Compare fromlineno="258" tolineno="258" lineno="258" op="('==', &lt;Const(str) l.258 [bb.parse.parse_py.BBHandler] at Oxa13192c&gt;)">
            <Subscript fromlineno="258" tolineno="258" lineno="258">
              <Name fromlineno="258" tolineno="258" lineno="258" name="s"/>
              <Index fromlineno="258" tolineno="258" lineno="None">
                <Const fromlineno="258" tolineno="258" lineno="258" type="int">-1</Const>
              </Index>
            </Subscript>
            <Const fromlineno="258" tolineno="258" lineno="258" type="str">'\\'</Const>
          </Compare>
          <Discard fromlineno="259" tolineno="259" lineno="259">
            <CallFunc fromlineno="259" tolineno="259" lineno="259" func="Getattr(append)">
              <Getattr fromlineno="259" tolineno="259" lineno="259" attrname="append" expr="__residue__">
                <Name fromlineno="259" tolineno="259" lineno="259" name="__residue__"/>
              </Getattr>
              <Subscript fromlineno="259" tolineno="259" lineno="259">
                <Name fromlineno="259" tolineno="259" lineno="259" name="s"/>
                <Slice fromlineno="259" tolineno="259" lineno="None">
                  <Const fromlineno="259" tolineno="259" lineno="259" type="int">-1</Const>
                </Slice>
              </Subscript>
            </CallFunc>
          </Discard>
          <Return fromlineno="260" tolineno="260" lineno="260"/>
        </If>
        <Assign fromlineno="262" tolineno="262" lineno="262" targets="[&lt;AssName(s) l.262 [bb.parse.parse_py.BBHandler] at Oxa131b0c&gt;]" value="(''.join(__residue__)) + (s)">
          <AssName fromlineno="262" tolineno="262" lineno="262" name="s"/>
          <BinOp fromlineno="262" tolineno="262" lineno="262" op="+" left="''.join(__residue__)" right="s">
            <CallFunc fromlineno="262" tolineno="262" lineno="262" func="Getattr(join)">
              <Getattr fromlineno="262" tolineno="262" lineno="262" attrname="join" expr="''">
                <Const fromlineno="262" tolineno="262" lineno="262" type="str">''</Const>
              </Getattr>
              <Name fromlineno="262" tolineno="262" lineno="262" name="__residue__"/>
            </CallFunc>
            <Name fromlineno="262" tolineno="262" lineno="262" name="s"/>
          </BinOp>
        </Assign>
        <Assign fromlineno="263" tolineno="263" lineno="263" targets="[&lt;AssName(__residue__) l.263 [bb.parse.parse_py.BBHandler] at Oxa131c4c&gt;]" value="[]">
          <AssName fromlineno="263" tolineno="263" lineno="263" name="__residue__"/>
          <List fromlineno="263" tolineno="263" lineno="263"/>
        </Assign>
        <Assign fromlineno="265" tolineno="265" lineno="265" targets="[&lt;AssName(m) l.265 [bb.parse.parse_py.BBHandler] at Oxa131cec&gt;]" value="__func_start_regexp__.match(s)">
          <AssName fromlineno="265" tolineno="265" lineno="265" name="m"/>
          <CallFunc fromlineno="265" tolineno="265" lineno="265" func="Getattr(match)">
            <Getattr fromlineno="265" tolineno="265" lineno="265" attrname="match" expr="__func_start_regexp__">
              <Name fromlineno="265" tolineno="265" lineno="265" name="__func_start_regexp__"/>
            </Getattr>
            <Name fromlineno="265" tolineno="265" lineno="265" name="s"/>
          </CallFunc>
        </Assign>
        <If fromlineno="266" tolineno="282" lineno="266">
          <Name fromlineno="266" tolineno="266" lineno="266" name="m"/>
          <Assign fromlineno="267" tolineno="267" lineno="267" targets="[&lt;AssName(__infunc__) l.267 [bb.parse.parse_py.BBHandler] at Oxa131e6c&gt;]" value="(m.group('func')) or ('__anonymous')">
            <AssName fromlineno="267" tolineno="267" lineno="267" name="__infunc__"/>
            <BoolOp fromlineno="267" tolineno="267" lineno="267" op="or" values="m.group('func'),'__anonymous',">
              <CallFunc fromlineno="267" tolineno="267" lineno="267" func="Getattr(group)">
                <Getattr fromlineno="267" tolineno="267" lineno="267" attrname="group" expr="m">
                  <Name fromlineno="267" tolineno="267" lineno="267" name="m"/>
                </Getattr>
                <Const fromlineno="267" tolineno="267" lineno="267" type="str">'func'</Const>
              </CallFunc>
              <Const fromlineno="267" tolineno="267" lineno="267" type="str">'__anonymous'</Const>
            </BoolOp>
          </Assign>
          <Assign fromlineno="268" tolineno="268" lineno="268" targets="[&lt;AssName(key) l.268 [bb.parse.parse_py.BBHandler] at Oxa131fcc&gt;]" value="__infunc__">
            <AssName fromlineno="268" tolineno="268" lineno="268" name="key"/>
            <Name fromlineno="268" tolineno="268" lineno="268" name="__infunc__"/>
          </Assign>
          <If fromlineno="269" tolineno="273" lineno="269">
            <CallFunc fromlineno="269" tolineno="269" lineno="269" func="Getattr(getVar)">
              <Getattr fromlineno="269" tolineno="269" lineno="269" attrname="getVar" expr="data">
                <Name fromlineno="269" tolineno="269" lineno="269" name="data"/>
              </Getattr>
              <Name fromlineno="269" tolineno="269" lineno="269" name="key"/>
              <Name fromlineno="269" tolineno="269" lineno="269" name="d"/>
            </CallFunc>
            <Discard fromlineno="272" tolineno="272" lineno="272">
              <CallFunc fromlineno="272" tolineno="272" lineno="272" func="Getattr(setVarFlag)">
                <Getattr fromlineno="272" tolineno="272" lineno="272" attrname="setVarFlag" expr="data">
                  <Name fromlineno="272" tolineno="272" lineno="272" name="data"/>
                </Getattr>
                <Name fromlineno="272" tolineno="272" lineno="272" name="key"/>
                <Const fromlineno="272" tolineno="272" lineno="272" type="str">'python'</Const>
                <Const fromlineno="272" tolineno="272" lineno="272" type="NoneType">None</Const>
                <Name fromlineno="272" tolineno="272" lineno="272" name="d"/>
              </CallFunc>
            </Discard>
            <Discard fromlineno="273" tolineno="273" lineno="273">
              <CallFunc fromlineno="273" tolineno="273" lineno="273" func="Getattr(setVarFlag)">
                <Getattr fromlineno="273" tolineno="273" lineno="273" attrname="setVarFlag" expr="data">
                  <Name fromlineno="273" tolineno="273" lineno="273" name="data"/>
                </Getattr>
                <Name fromlineno="273" tolineno="273" lineno="273" name="key"/>
                <Const fromlineno="273" tolineno="273" lineno="273" type="str">'fakeroot'</Const>
                <Const fromlineno="273" tolineno="273" lineno="273" type="NoneType">None</Const>
                <Name fromlineno="273" tolineno="273" lineno="273" name="d"/>
              </CallFunc>
            </Discard>
          </If>
          <If fromlineno="274" tolineno="277" lineno="274">
            <Compare fromlineno="274" tolineno="274" lineno="274" op="('is not', &lt;Const(NoneType) l.274 [bb.parse.parse_py.BBHandler] at Oxa1364ec&gt;)">
              <CallFunc fromlineno="274" tolineno="274" lineno="274" func="Getattr(group)">
                <Getattr fromlineno="274" tolineno="274" lineno="274" attrname="group" expr="m">
                  <Name fromlineno="274" tolineno="274" lineno="274" name="m"/>
                </Getattr>
                <Const fromlineno="274" tolineno="274" lineno="274" type="str">'py'</Const>
              </CallFunc>
              <Const fromlineno="274" tolineno="274" lineno="274" type="NoneType">None</Const>
            </Compare>
            <Discard fromlineno="275" tolineno="275" lineno="275">
              <CallFunc fromlineno="275" tolineno="275" lineno="275" func="Getattr(setVarFlag)">
                <Getattr fromlineno="275" tolineno="275" lineno="275" attrname="setVarFlag" expr="data">
                  <Name fromlineno="275" tolineno="275" lineno="275" name="data"/>
                </Getattr>
                <Name fromlineno="275" tolineno="275" lineno="275" name="key"/>
                <Const fromlineno="275" tolineno="275" lineno="275" type="str">'python'</Const>
                <Const fromlineno="275" tolineno="275" lineno="275" type="str">'1'</Const>
                <Name fromlineno="275" tolineno="275" lineno="275" name="d"/>
              </CallFunc>
            </Discard>
            <Discard fromlineno="277" tolineno="277" lineno="277">
              <CallFunc fromlineno="277" tolineno="277" lineno="277" func="Getattr(delVarFlag)">
                <Getattr fromlineno="277" tolineno="277" lineno="277" attrname="delVarFlag" expr="data">
                  <Name fromlineno="277" tolineno="277" lineno="277" name="data"/>
                </Getattr>
                <Name fromlineno="277" tolineno="277" lineno="277" name="key"/>
                <Const fromlineno="277" tolineno="277" lineno="277" type="str">'python'</Const>
                <Name fromlineno="277" tolineno="277" lineno="277" name="d"/>
              </CallFunc>
            </Discard>
          </If>
          <If fromlineno="278" tolineno="281" lineno="278">
            <Compare fromlineno="278" tolineno="278" lineno="278" op="('is not', &lt;Const(NoneType) l.278 [bb.parse.parse_py.BBHandler] at Oxa13688c&gt;)">
              <CallFunc fromlineno="278" tolineno="278" lineno="278" func="Getattr(group)">
                <Getattr fromlineno="278" tolineno="278" lineno="278" attrname="group" expr="m">
                  <Name fromlineno="278" tolineno="278" lineno="278" name="m"/>
                </Getattr>
                <Const fromlineno="278" tolineno="278" lineno="278" type="str">'fr'</Const>
              </CallFunc>
              <Const fromlineno="278" tolineno="278" lineno="278" type="NoneType">None</Const>
            </Compare>
            <Discard fromlineno="279" tolineno="279" lineno="279">
              <CallFunc fromlineno="279" tolineno="279" lineno="279" func="Getattr(setVarFlag)">
                <Getattr fromlineno="279" tolineno="279" lineno="279" attrname="setVarFlag" expr="data">
                  <Name fromlineno="279" tolineno="279" lineno="279" name="data"/>
                </Getattr>
                <Name fromlineno="279" tolineno="279" lineno="279" name="key"/>
                <Const fromlineno="279" tolineno="279" lineno="279" type="str">'fakeroot'</Const>
                <Const fromlineno="279" tolineno="279" lineno="279" type="str">'1'</Const>
                <Name fromlineno="279" tolineno="279" lineno="279" name="d"/>
              </CallFunc>
            </Discard>
            <Discard fromlineno="281" tolineno="281" lineno="281">
              <CallFunc fromlineno="281" tolineno="281" lineno="281" func="Getattr(delVarFlag)">
                <Getattr fromlineno="281" tolineno="281" lineno="281" attrname="delVarFlag" expr="data">
                  <Name fromlineno="281" tolineno="281" lineno="281" name="data"/>
                </Getattr>
                <Name fromlineno="281" tolineno="281" lineno="281" name="key"/>
                <Const fromlineno="281" tolineno="281" lineno="281" type="str">'fakeroot'</Const>
                <Name fromlineno="281" tolineno="281" lineno="281" name="d"/>
              </CallFunc>
            </Discard>
          </If>
          <Return fromlineno="282" tolineno="282" lineno="282"/>
        </If>
        <Assign fromlineno="284" tolineno="284" lineno="284" targets="[&lt;AssName(m) l.284 [bb.parse.parse_py.BBHandler] at Oxa136b4c&gt;]" value="__def_regexp__.match(s)">
          <AssName fromlineno="284" tolineno="284" lineno="284" name="m"/>
          <CallFunc fromlineno="284" tolineno="284" lineno="284" func="Getattr(match)">
            <Getattr fromlineno="284" tolineno="284" lineno="284" attrname="match" expr="__def_regexp__">
              <Name fromlineno="284" tolineno="284" lineno="284" name="__def_regexp__"/>
            </Getattr>
            <Name fromlineno="284" tolineno="284" lineno="284" name="s"/>
          </CallFunc>
        </Assign>
        <If fromlineno="285" tolineno="288" lineno="285">
          <Name fromlineno="285" tolineno="285" lineno="285" name="m"/>
          <Discard fromlineno="286" tolineno="286" lineno="286">
            <CallFunc fromlineno="286" tolineno="286" lineno="286" func="Getattr(append)">
              <Getattr fromlineno="286" tolineno="286" lineno="286" attrname="append" expr="__body__">
                <Name fromlineno="286" tolineno="286" lineno="286" name="__body__"/>
              </Getattr>
              <Name fromlineno="286" tolineno="286" lineno="286" name="s"/>
            </CallFunc>
          </Discard>
          <Assign fromlineno="287" tolineno="287" lineno="287" targets="[&lt;AssName(__inpython__) l.287 [bb.parse.parse_py.BBHandler] at Oxa136d8c&gt;]" value="True">
            <AssName fromlineno="287" tolineno="287" lineno="287" name="__inpython__"/>
            <Const fromlineno="287" tolineno="287" lineno="287" type="bool">True</Const>
          </Assign>
          <Return fromlineno="288" tolineno="288" lineno="288"/>
        </If>
        <Assign fromlineno="290" tolineno="290" lineno="290" targets="[&lt;AssName(m) l.290 [bb.parse.parse_py.BBHandler] at Oxa136e2c&gt;]" value="__export_func_regexp__.match(s)">
          <AssName fromlineno="290" tolineno="290" lineno="290" name="m"/>
          <CallFunc fromlineno="290" tolineno="290" lineno="290" func="Getattr(match)">
            <Getattr fromlineno="290" tolineno="290" lineno="290" attrname="match" expr="__export_func_regexp__">
              <Name fromlineno="290" tolineno="290" lineno="290" name="__export_func_regexp__"/>
            </Getattr>
            <Name fromlineno="290" tolineno="290" lineno="290" name="s"/>
          </CallFunc>
        </Assign>
        <If fromlineno="291" tolineno="327" lineno="291">
          <Name fromlineno="291" tolineno="291" lineno="291" name="m"/>
          <Assign fromlineno="292" tolineno="292" lineno="292" targets="[&lt;AssName(fns) l.292 [bb.parse.parse_py.BBHandler] at Oxa136fac&gt;]" value="m.group(1)">
            <AssName fromlineno="292" tolineno="292" lineno="292" name="fns"/>
            <CallFunc fromlineno="292" tolineno="292" lineno="292" func="Getattr(group)">
              <Getattr fromlineno="292" tolineno="292" lineno="292" attrname="group" expr="m">
                <Name fromlineno="292" tolineno="292" lineno="292" name="m"/>
              </Getattr>
              <Const fromlineno="292" tolineno="292" lineno="292" type="int">1</Const>
            </CallFunc>
          </Assign>
          <Assign fromlineno="293" tolineno="293" lineno="293" targets="[&lt;AssName(n) l.293 [bb.parse.parse_py.BBHandler] at Oxa13b0ec&gt;]" value="__word__.findall(fns)">
            <AssName fromlineno="293" tolineno="293" lineno="293" name="n"/>
            <CallFunc fromlineno="293" tolineno="293" lineno="293" func="Getattr(findall)">
              <Getattr fromlineno="293" tolineno="293" lineno="293" attrname="findall" expr="__word__">
                <Name fromlineno="293" tolineno="293" lineno="293" name="__word__"/>
              </Getattr>
              <Name fromlineno="293" tolineno="293" lineno="293" name="fns"/>
            </CallFunc>
          </Assign>
          <For fromlineno="294" tolineno="325" lineno="294">
            <AssName fromlineno="294" tolineno="294" lineno="294" name="f"/>
            <Name fromlineno="294" tolineno="294" lineno="294" name="n"/>
            <Assign fromlineno="295" tolineno="295" lineno="295" targets="[&lt;AssName(allvars) l.295 [bb.parse.parse_py.BBHandler] at Oxa13b2cc&gt;]" value="[]">
              <AssName fromlineno="295" tolineno="295" lineno="295" name="allvars"/>
              <List fromlineno="295" tolineno="295" lineno="295"/>
            </Assign>
            <Discard fromlineno="296" tolineno="296" lineno="296">
              <CallFunc fromlineno="296" tolineno="296" lineno="296" func="Getattr(append)">
                <Getattr fromlineno="296" tolineno="296" lineno="296" attrname="append" expr="allvars">
                  <Name fromlineno="296" tolineno="296" lineno="296" name="allvars"/>
                </Getattr>
                <Name fromlineno="296" tolineno="296" lineno="296" name="f"/>
              </CallFunc>
            </Discard>
            <Discard fromlineno="297" tolineno="297" lineno="297">
              <CallFunc fromlineno="297" tolineno="297" lineno="297" func="Getattr(append)">
                <Getattr fromlineno="297" tolineno="297" lineno="297" attrname="append" expr="allvars">
                  <Name fromlineno="297" tolineno="297" lineno="297" name="allvars"/>
                </Getattr>
                <BinOp fromlineno="297" tolineno="297" lineno="297" op="+" left="(classes[-1]) + ('_')" right="f">
                  <BinOp fromlineno="297" tolineno="297" lineno="297" op="+" left="classes[-1]" right="'_'">
                    <Subscript fromlineno="297" tolineno="297" lineno="297">
                      <Name fromlineno="297" tolineno="297" lineno="297" name="classes"/>
                      <Index fromlineno="297" tolineno="297" lineno="None">
                        <Const fromlineno="297" tolineno="297" lineno="297" type="int">-1</Const>
                      </Index>
                    </Subscript>
                    <Const fromlineno="297" tolineno="297" lineno="297" type="str">'_'</Const>
                  </BinOp>
                  <Name fromlineno="297" tolineno="297" lineno="297" name="f"/>
                </BinOp>
              </CallFunc>
            </Discard>
            <Assign fromlineno="299" tolineno="299" lineno="299" targets="[&lt;AssName(vars) l.299 [bb.parse.parse_py.BBHandler] at Oxa13b5ec&gt;]" value="[[allvars[0], allvars[1]]]">
              <AssName fromlineno="299" tolineno="299" lineno="299" name="vars"/>
              <List fromlineno="299" tolineno="299" lineno="299">
                <List fromlineno="299" tolineno="299" lineno="299">
                  <Subscript fromlineno="299" tolineno="299" lineno="299">
                    <Name fromlineno="299" tolineno="299" lineno="299" name="allvars"/>
                    <Index fromlineno="299" tolineno="299" lineno="None">
                      <Const fromlineno="299" tolineno="299" lineno="299" type="int">0</Const>
                    </Index>
                  </Subscript>
                  <Subscript fromlineno="299" tolineno="299" lineno="299">
                    <Name fromlineno="299" tolineno="299" lineno="299" name="allvars"/>
                    <Index fromlineno="299" tolineno="299" lineno="None">
                      <Const fromlineno="299" tolineno="299" lineno="299" type="int">1</Const>
                    </Index>
                  </Subscript>
                </List>
              </List>
            </Assign>
            <If fromlineno="300" tolineno="304" lineno="300">
              <BoolOp fromlineno="300" tolineno="300" lineno="300" op="and" values="len(classes) &gt; 1,classes[-2] is not None,">
                <Compare fromlineno="300" tolineno="300" lineno="300" op="('&gt;', &lt;Const(int) l.300 [bb.parse.parse_py.BBHandler] at Oxa13b92c&gt;)">
                  <CallFunc fromlineno="300" tolineno="300" lineno="300" func="Name(len)">
                    <Name fromlineno="300" tolineno="300" lineno="300" name="len"/>
                    <Name fromlineno="300" tolineno="300" lineno="300" name="classes"/>
                  </CallFunc>
                  <Const fromlineno="300" tolineno="300" lineno="300" type="int">1</Const>
                </Compare>
                <Compare fromlineno="300" tolineno="300" lineno="300" op="('is not', &lt;Const(NoneType) l.300 [bb.parse.parse_py.BBHandler] at Oxa13ba2c&gt;)">
                  <Subscript fromlineno="300" tolineno="300" lineno="300">
                    <Name fromlineno="300" tolineno="300" lineno="300" name="classes"/>
                    <Index fromlineno="300" tolineno="300" lineno="None">
                      <Const fromlineno="300" tolineno="300" lineno="300" type="int">-2</Const>
                    </Index>
                  </Subscript>
                  <Const fromlineno="300" tolineno="300" lineno="300" type="NoneType">None</Const>
                </Compare>
              </BoolOp>
              <Discard fromlineno="301" tolineno="301" lineno="301">
                <CallFunc fromlineno="301" tolineno="301" lineno="301" func="Getattr(append)">
                  <Getattr fromlineno="301" tolineno="301" lineno="301" attrname="append" expr="allvars">
                    <Name fromlineno="301" tolineno="301" lineno="301" name="allvars"/>
                  </Getattr>
                  <BinOp fromlineno="301" tolineno="301" lineno="301" op="+" left="(classes[-2]) + ('_')" right="f">
                    <BinOp fromlineno="301" tolineno="301" lineno="301" op="+" left="classes[-2]" right="'_'">
                      <Subscript fromlineno="301" tolineno="301" lineno="301">
                        <Name fromlineno="301" tolineno="301" lineno="301" name="classes"/>
                        <Index fromlineno="301" tolineno="301" lineno="None">
                          <Const fromlineno="301" tolineno="301" lineno="301" type="int">-2</Const>
                        </Index>
                      </Subscript>
                      <Const fromlineno="301" tolineno="301" lineno="301" type="str">'_'</Const>
                    </BinOp>
                    <Name fromlineno="301" tolineno="301" lineno="301" name="f"/>
                  </BinOp>
                </CallFunc>
              </Discard>
              <Assign fromlineno="302" tolineno="302" lineno="302" targets="[&lt;AssName(vars) l.302 [bb.parse.parse_py.BBHandler] at Oxa13bc4c&gt;]" value="[]">
                <AssName fromlineno="302" tolineno="302" lineno="302" name="vars"/>
                <List fromlineno="302" tolineno="302" lineno="302"/>
              </Assign>
              <Discard fromlineno="303" tolineno="303" lineno="303">
                <CallFunc fromlineno="303" tolineno="303" lineno="303" func="Getattr(append)">
                  <Getattr fromlineno="303" tolineno="303" lineno="303" attrname="append" expr="vars">
                    <Name fromlineno="303" tolineno="303" lineno="303" name="vars"/>
                  </Getattr>
                  <List fromlineno="303" tolineno="303" lineno="303">
                    <Subscript fromlineno="303" tolineno="303" lineno="303">
                      <Name fromlineno="303" tolineno="303" lineno="303" name="allvars"/>
                      <Index fromlineno="303" tolineno="303" lineno="None">
                        <Const fromlineno="303" tolineno="303" lineno="303" type="int">2</Const>
                      </Index>
                    </Subscript>
                    <Subscript fromlineno="303" tolineno="303" lineno="303">
                      <Name fromlineno="303" tolineno="303" lineno="303" name="allvars"/>
                      <Index fromlineno="303" tolineno="303" lineno="None">
                        <Const fromlineno="303" tolineno="303" lineno="303" type="int">1</Const>
                      </Index>
                    </Subscript>
                  </List>
                </CallFunc>
              </Discard>
              <Discard fromlineno="304" tolineno="304" lineno="304">
                <CallFunc fromlineno="304" tolineno="304" lineno="304" func="Getattr(append)">
                  <Getattr fromlineno="304" tolineno="304" lineno="304" attrname="append" expr="vars">
                    <Name fromlineno="304" tolineno="304" lineno="304" name="vars"/>
                  </Getattr>
                  <List fromlineno="304" tolineno="304" lineno="304">
                    <Subscript fromlineno="304" tolineno="304" lineno="304">
                      <Name fromlineno="304" tolineno="304" lineno="304" name="allvars"/>
                      <Index fromlineno="304" tolineno="304" lineno="None">
                        <Const fromlineno="304" tolineno="304" lineno="304" type="int">0</Const>
                      </Index>
                    </Subscript>
                    <Subscript fromlineno="304" tolineno="304" lineno="304">
                      <Name fromlineno="304" tolineno="304" lineno="304" name="allvars"/>
                      <Index fromlineno="304" tolineno="304" lineno="None">
                        <Const fromlineno="304" tolineno="304" lineno="304" type="int">2</Const>
                      </Index>
                    </Subscript>
                  </List>
                </CallFunc>
              </Discard>
            </If>
            <For fromlineno="306" tolineno="325" lineno="306">
              <Tuple fromlineno="306" tolineno="306" lineno="306">
                <AssName fromlineno="306" tolineno="306" lineno="306" name="var"/>
                <AssName fromlineno="306" tolineno="306" lineno="306" name="calledvar"/>
              </Tuple>
              <Name fromlineno="306" tolineno="306" lineno="306" name="vars"/>
              <If fromlineno="307" tolineno="308" lineno="307">
                <BoolOp fromlineno="307" tolineno="307" lineno="307" op="and" values="data.getVar(var, d),not data.getVarFlag(var, 'export_func', d),">
                  <CallFunc fromlineno="307" tolineno="307" lineno="307" func="Getattr(getVar)">
                    <Getattr fromlineno="307" tolineno="307" lineno="307" attrname="getVar" expr="data">
                      <Name fromlineno="307" tolineno="307" lineno="307" name="data"/>
                    </Getattr>
                    <Name fromlineno="307" tolineno="307" lineno="307" name="var"/>
                    <Name fromlineno="307" tolineno="307" lineno="307" name="d"/>
                  </CallFunc>
                  <UnaryOp fromlineno="307" tolineno="307" lineno="307">
                    <CallFunc fromlineno="307" tolineno="307" lineno="307" func="Getattr(getVarFlag)">
                      <Getattr fromlineno="307" tolineno="307" lineno="307" attrname="getVarFlag" expr="data">
                        <Name fromlineno="307" tolineno="307" lineno="307" name="data"/>
                      </Getattr>
                      <Name fromlineno="307" tolineno="307" lineno="307" name="var"/>
                      <Const fromlineno="307" tolineno="307" lineno="307" type="str">'export_func'</Const>
                      <Name fromlineno="307" tolineno="307" lineno="307" name="d"/>
                    </CallFunc>
                  </UnaryOp>
                </BoolOp>
                <Continue fromlineno="308" tolineno="308" lineno="308"/>
              </If>
              <If fromlineno="310" tolineno="312" lineno="310">
                <CallFunc fromlineno="310" tolineno="310" lineno="310" func="Getattr(getVar)">
                  <Getattr fromlineno="310" tolineno="310" lineno="310" attrname="getVar" expr="data">
                    <Name fromlineno="310" tolineno="310" lineno="310" name="data"/>
                  </Getattr>
                  <Name fromlineno="310" tolineno="310" lineno="310" name="var"/>
                  <Name fromlineno="310" tolineno="310" lineno="310" name="d"/>
                </CallFunc>
                <Discard fromlineno="311" tolineno="311" lineno="311">
                  <CallFunc fromlineno="311" tolineno="311" lineno="311" func="Getattr(setVarFlag)">
                    <Getattr fromlineno="311" tolineno="311" lineno="311" attrname="setVarFlag" expr="data">
                      <Name fromlineno="311" tolineno="311" lineno="311" name="data"/>
                    </Getattr>
                    <Name fromlineno="311" tolineno="311" lineno="311" name="var"/>
                    <Const fromlineno="311" tolineno="311" lineno="311" type="str">'python'</Const>
                    <Const fromlineno="311" tolineno="311" lineno="311" type="NoneType">None</Const>
                    <Name fromlineno="311" tolineno="311" lineno="311" name="d"/>
                  </CallFunc>
                </Discard>
                <Discard fromlineno="312" tolineno="312" lineno="312">
                  <CallFunc fromlineno="312" tolineno="312" lineno="312" func="Getattr(setVarFlag)">
                    <Getattr fromlineno="312" tolineno="312" lineno="312" attrname="setVarFlag" expr="data">
                      <Name fromlineno="312" tolineno="312" lineno="312" name="data"/>
                    </Getattr>
                    <Name fromlineno="312" tolineno="312" lineno="312" name="var"/>
                    <Const fromlineno="312" tolineno="312" lineno="312" type="str">'func'</Const>
                    <Const fromlineno="312" tolineno="312" lineno="312" type="NoneType">None</Const>
                    <Name fromlineno="312" tolineno="312" lineno="312" name="d"/>
                  </CallFunc>
                </Discard>
              </If>
              <For fromlineno="314" tolineno="316" lineno="314">
                <AssName fromlineno="314" tolineno="314" lineno="314" name="flag"/>
                <List fromlineno="314" tolineno="314" lineno="314">
                  <Const fromlineno="314" tolineno="314" lineno="314" type="str">'func'</Const>
                  <Const fromlineno="314" tolineno="314" lineno="314" type="str">'python'</Const>
                </List>
                <If fromlineno="315" tolineno="316" lineno="315">
                  <CallFunc fromlineno="315" tolineno="315" lineno="315" func="Getattr(getVarFlag)">
                    <Getattr fromlineno="315" tolineno="315" lineno="315" attrname="getVarFlag" expr="data">
                      <Name fromlineno="315" tolineno="315" lineno="315" name="data"/>
                    </Getattr>
                    <Name fromlineno="315" tolineno="315" lineno="315" name="calledvar"/>
                    <Name fromlineno="315" tolineno="315" lineno="315" name="flag"/>
                    <Name fromlineno="315" tolineno="315" lineno="315" name="d"/>
                  </CallFunc>
                  <Discard fromlineno="316" tolineno="316" lineno="316">
                    <CallFunc fromlineno="316" tolineno="316" lineno="316" func="Getattr(setVarFlag)">
                      <Getattr fromlineno="316" tolineno="316" lineno="316" attrname="setVarFlag" expr="data">
                        <Name fromlineno="316" tolineno="316" lineno="316" name="data"/>
                      </Getattr>
                      <Name fromlineno="316" tolineno="316" lineno="316" name="var"/>
                      <Name fromlineno="316" tolineno="316" lineno="316" name="flag"/>
                      <CallFunc fromlineno="316" tolineno="316" lineno="316" func="Getattr(getVarFlag)">
                        <Getattr fromlineno="316" tolineno="316" lineno="316" attrname="getVarFlag" expr="data">
                          <Name fromlineno="316" tolineno="316" lineno="316" name="data"/>
                        </Getattr>
                        <Name fromlineno="316" tolineno="316" lineno="316" name="calledvar"/>
                        <Name fromlineno="316" tolineno="316" lineno="316" name="flag"/>
                        <Name fromlineno="316" tolineno="316" lineno="316" name="d"/>
                      </CallFunc>
                      <Name fromlineno="316" tolineno="316" lineno="316" name="d"/>
                    </CallFunc>
                  </Discard>
                </If>
              </For>
              <For fromlineno="317" tolineno="319" lineno="317">
                <AssName fromlineno="317" tolineno="317" lineno="317" name="flag"/>
                <List fromlineno="317" tolineno="317" lineno="317">
                  <Const fromlineno="317" tolineno="317" lineno="317" type="str">'dirs'</Const>
                </List>
                <If fromlineno="318" tolineno="319" lineno="318">
                  <CallFunc fromlineno="318" tolineno="318" lineno="318" func="Getattr(getVarFlag)">
                    <Getattr fromlineno="318" tolineno="318" lineno="318" attrname="getVarFlag" expr="data">
                      <Name fromlineno="318" tolineno="318" lineno="318" name="data"/>
                    </Getattr>
                    <Name fromlineno="318" tolineno="318" lineno="318" name="var"/>
                    <Name fromlineno="318" tolineno="318" lineno="318" name="flag"/>
                    <Name fromlineno="318" tolineno="318" lineno="318" name="d"/>
                  </CallFunc>
                  <Discard fromlineno="319" tolineno="319" lineno="319">
                    <CallFunc fromlineno="319" tolineno="319" lineno="319" func="Getattr(setVarFlag)">
                      <Getattr fromlineno="319" tolineno="319" lineno="319" attrname="setVarFlag" expr="data">
                        <Name fromlineno="319" tolineno="319" lineno="319" name="data"/>
                      </Getattr>
                      <Name fromlineno="319" tolineno="319" lineno="319" name="calledvar"/>
                      <Name fromlineno="319" tolineno="319" lineno="319" name="flag"/>
                      <CallFunc fromlineno="319" tolineno="319" lineno="319" func="Getattr(getVarFlag)">
                        <Getattr fromlineno="319" tolineno="319" lineno="319" attrname="getVarFlag" expr="data">
                          <Name fromlineno="319" tolineno="319" lineno="319" name="data"/>
                        </Getattr>
                        <Name fromlineno="319" tolineno="319" lineno="319" name="var"/>
                        <Name fromlineno="319" tolineno="319" lineno="319" name="flag"/>
                        <Name fromlineno="319" tolineno="319" lineno="319" name="d"/>
                      </CallFunc>
                      <Name fromlineno="319" tolineno="319" lineno="319" name="d"/>
                    </CallFunc>
                  </Discard>
                </If>
              </For>
              <If fromlineno="321" tolineno="324" lineno="321">
                <CallFunc fromlineno="321" tolineno="321" lineno="321" func="Getattr(getVarFlag)">
                  <Getattr fromlineno="321" tolineno="321" lineno="321" attrname="getVarFlag" expr="data">
                    <Name fromlineno="321" tolineno="321" lineno="321" name="data"/>
                  </Getattr>
                  <Name fromlineno="321" tolineno="321" lineno="321" name="calledvar"/>
                  <Const fromlineno="321" tolineno="321" lineno="321" type="str">'python'</Const>
                  <Name fromlineno="321" tolineno="321" lineno="321" name="d"/>
                </CallFunc>
                <Discard fromlineno="322" tolineno="322" lineno="322">
                  <CallFunc fromlineno="322" tolineno="322" lineno="322" func="Getattr(setVar)">
                    <Getattr fromlineno="322" tolineno="322" lineno="322" attrname="setVar" expr="data">
                      <Name fromlineno="322" tolineno="322" lineno="322" name="data"/>
                    </Getattr>
                    <Name fromlineno="322" tolineno="322" lineno="322" name="var"/>
                    <BinOp fromlineno="322" tolineno="322" lineno="322" op="+" left="(&quot;\tbb.build.exec_func('&quot;) + (calledvar)" right="&quot;', d)\n&quot;">
                      <BinOp fromlineno="322" tolineno="322" lineno="322" op="+" left="&quot;\tbb.build.exec_func('&quot;" right="calledvar">
                        <Const fromlineno="322" tolineno="322" lineno="322" type="str">"\tbb.build.exec_func('"</Const>
                        <Name fromlineno="322" tolineno="322" lineno="322" name="calledvar"/>
                      </BinOp>
                      <Const fromlineno="322" tolineno="322" lineno="322" type="str">"', d)\n"</Const>
                    </BinOp>
                    <Name fromlineno="322" tolineno="322" lineno="322" name="d"/>
                  </CallFunc>
                </Discard>
                <Discard fromlineno="324" tolineno="324" lineno="324">
                  <CallFunc fromlineno="324" tolineno="324" lineno="324" func="Getattr(setVar)">
                    <Getattr fromlineno="324" tolineno="324" lineno="324" attrname="setVar" expr="data">
                      <Name fromlineno="324" tolineno="324" lineno="324" name="data"/>
                    </Getattr>
                    <Name fromlineno="324" tolineno="324" lineno="324" name="var"/>
                    <BinOp fromlineno="324" tolineno="324" lineno="324" op="+" left="('\t') + (calledvar)" right="'\n'">
                      <BinOp fromlineno="324" tolineno="324" lineno="324" op="+" left="'\t'" right="calledvar">
                        <Const fromlineno="324" tolineno="324" lineno="324" type="str">'\t'</Const>
                        <Name fromlineno="324" tolineno="324" lineno="324" name="calledvar"/>
                      </BinOp>
                      <Const fromlineno="324" tolineno="324" lineno="324" type="str">'\n'</Const>
                    </BinOp>
                    <Name fromlineno="324" tolineno="324" lineno="324" name="d"/>
                  </CallFunc>
                </Discard>
              </If>
              <Discard fromlineno="325" tolineno="325" lineno="325">
                <CallFunc fromlineno="325" tolineno="325" lineno="325" func="Getattr(setVarFlag)">
                  <Getattr fromlineno="325" tolineno="325" lineno="325" attrname="setVarFlag" expr="data">
                    <Name fromlineno="325" tolineno="325" lineno="325" name="data"/>
                  </Getattr>
                  <Name fromlineno="325" tolineno="325" lineno="325" name="var"/>
                  <Const fromlineno="325" tolineno="325" lineno="325" type="str">'export_func'</Const>
                  <Const fromlineno="325" tolineno="325" lineno="325" type="str">'1'</Const>
                  <Name fromlineno="325" tolineno="325" lineno="325" name="d"/>
                </CallFunc>
              </Discard>
            </For>
          </For>
          <Return fromlineno="327" tolineno="327" lineno="327"/>
        </If>
        <Assign fromlineno="329" tolineno="329" lineno="329" targets="[&lt;AssName(m) l.329 [bb.parse.parse_py.BBHandler] at Oxa1435ac&gt;]" value="__addtask_regexp__.match(s)">
          <AssName fromlineno="329" tolineno="329" lineno="329" name="m"/>
          <CallFunc fromlineno="329" tolineno="329" lineno="329" func="Getattr(match)">
            <Getattr fromlineno="329" tolineno="329" lineno="329" attrname="match" expr="__addtask_regexp__">
              <Name fromlineno="329" tolineno="329" lineno="329" name="__addtask_regexp__"/>
            </Getattr>
            <Name fromlineno="329" tolineno="329" lineno="329" name="s"/>
          </CallFunc>
        </Assign>
        <If fromlineno="330" tolineno="358" lineno="330">
          <Name fromlineno="330" tolineno="330" lineno="330" name="m"/>
          <Assign fromlineno="331" tolineno="331" lineno="331" targets="[&lt;AssName(func) l.331 [bb.parse.parse_py.BBHandler] at Oxa14372c&gt;]" value="m.group('func')">
            <AssName fromlineno="331" tolineno="331" lineno="331" name="func"/>
            <CallFunc fromlineno="331" tolineno="331" lineno="331" func="Getattr(group)">
              <Getattr fromlineno="331" tolineno="331" lineno="331" attrname="group" expr="m">
                <Name fromlineno="331" tolineno="331" lineno="331" name="m"/>
              </Getattr>
              <Const fromlineno="331" tolineno="331" lineno="331" type="str">'func'</Const>
            </CallFunc>
          </Assign>
          <Assign fromlineno="332" tolineno="332" lineno="332" targets="[&lt;AssName(before) l.332 [bb.parse.parse_py.BBHandler] at Oxa14384c&gt;]" value="m.group('before')">
            <AssName fromlineno="332" tolineno="332" lineno="332" name="before"/>
            <CallFunc fromlineno="332" tolineno="332" lineno="332" func="Getattr(group)">
              <Getattr fromlineno="332" tolineno="332" lineno="332" attrname="group" expr="m">
                <Name fromlineno="332" tolineno="332" lineno="332" name="m"/>
              </Getattr>
              <Const fromlineno="332" tolineno="332" lineno="332" type="str">'before'</Const>
            </CallFunc>
          </Assign>
          <Assign fromlineno="333" tolineno="333" lineno="333" targets="[&lt;AssName(after) l.333 [bb.parse.parse_py.BBHandler] at Oxa14396c&gt;]" value="m.group('after')">
            <AssName fromlineno="333" tolineno="333" lineno="333" name="after"/>
            <CallFunc fromlineno="333" tolineno="333" lineno="333" func="Getattr(group)">
              <Getattr fromlineno="333" tolineno="333" lineno="333" attrname="group" expr="m">
                <Name fromlineno="333" tolineno="333" lineno="333" name="m"/>
              </Getattr>
              <Const fromlineno="333" tolineno="333" lineno="333" type="str">'after'</Const>
            </CallFunc>
          </Assign>
          <If fromlineno="334" tolineno="335" lineno="334">
            <Compare fromlineno="334" tolineno="334" lineno="334" op="('is', &lt;Const(NoneType) l.334 [bb.parse.parse_py.BBHandler] at Oxa143b0c&gt;)">
              <Name fromlineno="334" tolineno="334" lineno="334" name="func"/>
              <Const fromlineno="334" tolineno="334" lineno="334" type="NoneType">None</Const>
            </Compare>
            <Return fromlineno="335" tolineno="335" lineno="335"/>
          </If>
          <Assign fromlineno="336" tolineno="336" lineno="336" targets="[&lt;AssName(var) l.336 [bb.parse.parse_py.BBHandler] at Oxa143bcc&gt;]" value="('do_') + (func)">
            <AssName fromlineno="336" tolineno="336" lineno="336" name="var"/>
            <BinOp fromlineno="336" tolineno="336" lineno="336" op="+" left="'do_'" right="func">
              <Const fromlineno="336" tolineno="336" lineno="336" type="str">'do_'</Const>
              <Name fromlineno="336" tolineno="336" lineno="336" name="func"/>
            </BinOp>
          </Assign>
          <Discard fromlineno="338" tolineno="338" lineno="338">
            <CallFunc fromlineno="338" tolineno="338" lineno="338" func="Getattr(setVarFlag)">
              <Getattr fromlineno="338" tolineno="338" lineno="338" attrname="setVarFlag" expr="data">
                <Name fromlineno="338" tolineno="338" lineno="338" name="data"/>
              </Getattr>
              <Name fromlineno="338" tolineno="338" lineno="338" name="var"/>
              <Const fromlineno="338" tolineno="338" lineno="338" type="str">'task'</Const>
              <Const fromlineno="338" tolineno="338" lineno="338" type="int">1</Const>
              <Name fromlineno="338" tolineno="338" lineno="338" name="d"/>
            </CallFunc>
          </Discard>
          <Assign fromlineno="340" tolineno="340" lineno="340" targets="[&lt;AssName(bbtasks) l.340 [bb.parse.parse_py.BBHandler] at Oxa143dac&gt;]" value="(data.getVar('__BBTASKS', d)) or ([])">
            <AssName fromlineno="340" tolineno="340" lineno="340" name="bbtasks"/>
            <BoolOp fromlineno="340" tolineno="340" lineno="340" op="or" values="data.getVar('__BBTASKS', d),[],">
              <CallFunc fromlineno="340" tolineno="340" lineno="340" func="Getattr(getVar)">
                <Getattr fromlineno="340" tolineno="340" lineno="340" attrname="getVar" expr="data">
                  <Name fromlineno="340" tolineno="340" lineno="340" name="data"/>
                </Getattr>
                <Const fromlineno="340" tolineno="340" lineno="340" type="str">'__BBTASKS'</Const>
                <Name fromlineno="340" tolineno="340" lineno="340" name="d"/>
              </CallFunc>
              <List fromlineno="340" tolineno="340" lineno="340"/>
            </BoolOp>
          </Assign>
          <If fromlineno="341" tolineno="342" lineno="341">
            <UnaryOp fromlineno="341" tolineno="341" lineno="341">
              <Compare fromlineno="341" tolineno="341" lineno="341" op="('in', &lt;Name(bbtasks) l.341 [bb.parse.parse_py.BBHandler] at Oxa143fec&gt;)">
                <Name fromlineno="341" tolineno="341" lineno="341" name="var"/>
                <Name fromlineno="341" tolineno="341" lineno="341" name="bbtasks"/>
              </Compare>
            </UnaryOp>
            <Discard fromlineno="342" tolineno="342" lineno="342">
              <CallFunc fromlineno="342" tolineno="342" lineno="342" func="Getattr(append)">
                <Getattr fromlineno="342" tolineno="342" lineno="342" attrname="append" expr="bbtasks">
                  <Name fromlineno="342" tolineno="342" lineno="342" name="bbtasks"/>
                </Getattr>
                <Name fromlineno="342" tolineno="342" lineno="342" name="var"/>
              </CallFunc>
            </Discard>
          </If>
          <Discard fromlineno="343" tolineno="343" lineno="343">
            <CallFunc fromlineno="343" tolineno="343" lineno="343" func="Getattr(setVar)">
              <Getattr fromlineno="343" tolineno="343" lineno="343" attrname="setVar" expr="data">
                <Name fromlineno="343" tolineno="343" lineno="343" name="data"/>
              </Getattr>
              <Const fromlineno="343" tolineno="343" lineno="343" type="str">'__BBTASKS'</Const>
              <Name fromlineno="343" tolineno="343" lineno="343" name="bbtasks"/>
              <Name fromlineno="343" tolineno="343" lineno="343" name="d"/>
            </CallFunc>
          </Discard>
          <Assign fromlineno="345" tolineno="345" lineno="345" targets="[&lt;AssName(existing) l.345 [bb.parse.parse_py.BBHandler] at Oxa14726c&gt;]" value="(data.getVarFlag(var, 'deps', d)) or ([])">
            <AssName fromlineno="345" tolineno="345" lineno="345" name="existing"/>
            <BoolOp fromlineno="345" tolineno="345" lineno="345" op="or" values="data.getVarFlag(var, 'deps', d),[],">
              <CallFunc fromlineno="345" tolineno="345" lineno="345" func="Getattr(getVarFlag)">
                <Getattr fromlineno="345" tolineno="345" lineno="345" attrname="getVarFlag" expr="data">
                  <Name fromlineno="345" tolineno="345" lineno="345" name="data"/>
                </Getattr>
                <Name fromlineno="345" tolineno="345" lineno="345" name="var"/>
                <Const fromlineno="345" tolineno="345" lineno="345" type="str">'deps'</Const>
                <Name fromlineno="345" tolineno="345" lineno="345" name="d"/>
              </CallFunc>
              <List fromlineno="345" tolineno="345" lineno="345"/>
            </BoolOp>
          </Assign>
          <If fromlineno="346" tolineno="350" lineno="346">
            <Compare fromlineno="346" tolineno="346" lineno="346" op="('is not', &lt;Const(NoneType) l.346 [bb.parse.parse_py.BBHandler] at Oxa1474ac&gt;)">
              <Name fromlineno="346" tolineno="346" lineno="346" name="after"/>
              <Const fromlineno="346" tolineno="346" lineno="346" type="NoneType">None</Const>
            </Compare>
            <For fromlineno="348" tolineno="350" lineno="348">
              <AssName fromlineno="348" tolineno="348" lineno="348" name="entry"/>
              <CallFunc fromlineno="348" tolineno="348" lineno="348" func="Getattr(split)">
                <Getattr fromlineno="348" tolineno="348" lineno="348" attrname="split" expr="after">
                  <Name fromlineno="348" tolineno="348" lineno="348" name="after"/>
                </Getattr>
              </CallFunc>
              <If fromlineno="349" tolineno="350" lineno="349">
                <Compare fromlineno="349" tolineno="349" lineno="349" op="('not in', &lt;Name(existing) l.349 [bb.parse.parse_py.BBHandler] at Oxa1476ec&gt;)">
                  <Name fromlineno="349" tolineno="349" lineno="349" name="entry"/>
                  <Name fromlineno="349" tolineno="349" lineno="349" name="existing"/>
                </Compare>
                <Discard fromlineno="350" tolineno="350" lineno="350">
                  <CallFunc fromlineno="350" tolineno="350" lineno="350" func="Getattr(append)">
                    <Getattr fromlineno="350" tolineno="350" lineno="350" attrname="append" expr="existing">
                      <Name fromlineno="350" tolineno="350" lineno="350" name="existing"/>
                    </Getattr>
                    <Name fromlineno="350" tolineno="350" lineno="350" name="entry"/>
                  </CallFunc>
                </Discard>
              </If>
            </For>
          </If>
          <Discard fromlineno="351" tolineno="351" lineno="351">
            <CallFunc fromlineno="351" tolineno="351" lineno="351" func="Getattr(setVarFlag)">
              <Getattr fromlineno="351" tolineno="351" lineno="351" attrname="setVarFlag" expr="data">
                <Name fromlineno="351" tolineno="351" lineno="351" name="data"/>
              </Getattr>
              <Name fromlineno="351" tolineno="351" lineno="351" name="var"/>
              <Const fromlineno="351" tolineno="351" lineno="351" type="str">'deps'</Const>
              <Name fromlineno="351" tolineno="351" lineno="351" name="existing"/>
              <Name fromlineno="351" tolineno="351" lineno="351" name="d"/>
            </CallFunc>
          </Discard>
          <If fromlineno="352" tolineno="357" lineno="352">
            <Compare fromlineno="352" tolineno="352" lineno="352" op="('is not', &lt;Const(NoneType) l.352 [bb.parse.parse_py.BBHandler] at Oxa1479ac&gt;)">
              <Name fromlineno="352" tolineno="352" lineno="352" name="before"/>
              <Const fromlineno="352" tolineno="352" lineno="352" type="NoneType">None</Const>
            </Compare>
            <For fromlineno="354" tolineno="357" lineno="354">
              <AssName fromlineno="354" tolineno="354" lineno="354" name="entry"/>
              <CallFunc fromlineno="354" tolineno="354" lineno="354" func="Getattr(split)">
                <Getattr fromlineno="354" tolineno="354" lineno="354" attrname="split" expr="before">
                  <Name fromlineno="354" tolineno="354" lineno="354" name="before"/>
                </Getattr>
              </CallFunc>
              <Assign fromlineno="355" tolineno="355" lineno="355" targets="[&lt;AssName(existing) l.355 [bb.parse.parse_py.BBHandler] at Oxa147b4c&gt;]" value="(data.getVarFlag(entry, 'deps', d)) or ([])">
                <AssName fromlineno="355" tolineno="355" lineno="355" name="existing"/>
                <BoolOp fromlineno="355" tolineno="355" lineno="355" op="or" values="data.getVarFlag(entry, 'deps', d),[],">
                  <CallFunc fromlineno="355" tolineno="355" lineno="355" func="Getattr(getVarFlag)">
                    <Getattr fromlineno="355" tolineno="355" lineno="355" attrname="getVarFlag" expr="data">
                      <Name fromlineno="355" tolineno="355" lineno="355" name="data"/>
                    </Getattr>
                    <Name fromlineno="355" tolineno="355" lineno="355" name="entry"/>
                    <Const fromlineno="355" tolineno="355" lineno="355" type="str">'deps'</Const>
                    <Name fromlineno="355" tolineno="355" lineno="355" name="d"/>
                  </CallFunc>
                  <List fromlineno="355" tolineno="355" lineno="355"/>
                </BoolOp>
              </Assign>
              <If fromlineno="356" tolineno="357" lineno="356">
                <Compare fromlineno="356" tolineno="356" lineno="356" op="('not in', &lt;Name(existing) l.356 [bb.parse.parse_py.BBHandler] at Oxa147d8c&gt;)">
                  <Name fromlineno="356" tolineno="356" lineno="356" name="var"/>
                  <Name fromlineno="356" tolineno="356" lineno="356" name="existing"/>
                </Compare>
                <Discard fromlineno="357" tolineno="357" lineno="357">
                  <CallFunc fromlineno="357" tolineno="357" lineno="357" func="Getattr(setVarFlag)">
                    <Getattr fromlineno="357" tolineno="357" lineno="357" attrname="setVarFlag" expr="data">
                      <Name fromlineno="357" tolineno="357" lineno="357" name="data"/>
                    </Getattr>
                    <Name fromlineno="357" tolineno="357" lineno="357" name="entry"/>
                    <Const fromlineno="357" tolineno="357" lineno="357" type="str">'deps'</Const>
                    <BinOp fromlineno="357" tolineno="357" lineno="357" op="+" left="[var]" right="existing">
                      <List fromlineno="357" tolineno="357" lineno="357">
                        <Name fromlineno="357" tolineno="357" lineno="357" name="var"/>
                      </List>
                      <Name fromlineno="357" tolineno="357" lineno="357" name="existing"/>
                    </BinOp>
                    <Name fromlineno="357" tolineno="357" lineno="357" name="d"/>
                  </CallFunc>
                </Discard>
              </If>
            </For>
          </If>
          <Return fromlineno="358" tolineno="358" lineno="358"/>
        </If>
        <Assign fromlineno="360" tolineno="360" lineno="360" targets="[&lt;AssName(m) l.360 [bb.parse.parse_py.BBHandler] at Oxa147fac&gt;]" value="__addhandler_regexp__.match(s)">
          <AssName fromlineno="360" tolineno="360" lineno="360" name="m"/>
          <CallFunc fromlineno="360" tolineno="360" lineno="360" func="Getattr(match)">
            <Getattr fromlineno="360" tolineno="360" lineno="360" attrname="match" expr="__addhandler_regexp__">
              <Name fromlineno="360" tolineno="360" lineno="360" name="__addhandler_regexp__"/>
            </Getattr>
            <Name fromlineno="360" tolineno="360" lineno="360" name="s"/>
          </CallFunc>
        </Assign>
        <If fromlineno="361" tolineno="369" lineno="361">
          <Name fromlineno="361" tolineno="361" lineno="361" name="m"/>
          <Assign fromlineno="362" tolineno="362" lineno="362" targets="[&lt;AssName(fns) l.362 [bb.parse.parse_py.BBHandler] at Oxa19114c&gt;]" value="m.group(1)">
            <AssName fromlineno="362" tolineno="362" lineno="362" name="fns"/>
            <CallFunc fromlineno="362" tolineno="362" lineno="362" func="Getattr(group)">
              <Getattr fromlineno="362" tolineno="362" lineno="362" attrname="group" expr="m">
                <Name fromlineno="362" tolineno="362" lineno="362" name="m"/>
              </Getattr>
              <Const fromlineno="362" tolineno="362" lineno="362" type="int">1</Const>
            </CallFunc>
          </Assign>
          <Assign fromlineno="363" tolineno="363" lineno="363" targets="[&lt;AssName(hs) l.363 [bb.parse.parse_py.BBHandler] at Oxa19124c&gt;]" value="__word__.findall(fns)">
            <AssName fromlineno="363" tolineno="363" lineno="363" name="hs"/>
            <CallFunc fromlineno="363" tolineno="363" lineno="363" func="Getattr(findall)">
              <Getattr fromlineno="363" tolineno="363" lineno="363" attrname="findall" expr="__word__">
                <Name fromlineno="363" tolineno="363" lineno="363" name="__word__"/>
              </Getattr>
              <Name fromlineno="363" tolineno="363" lineno="363" name="fns"/>
            </CallFunc>
          </Assign>
          <Assign fromlineno="364" tolineno="364" lineno="364" targets="[&lt;AssName(bbhands) l.364 [bb.parse.parse_py.BBHandler] at Oxa19136c&gt;]" value="(data.getVar('__BBHANDLERS', d)) or ([])">
            <AssName fromlineno="364" tolineno="364" lineno="364" name="bbhands"/>
            <BoolOp fromlineno="364" tolineno="364" lineno="364" op="or" values="data.getVar('__BBHANDLERS', d),[],">
              <CallFunc fromlineno="364" tolineno="364" lineno="364" func="Getattr(getVar)">
                <Getattr fromlineno="364" tolineno="364" lineno="364" attrname="getVar" expr="data">
                  <Name fromlineno="364" tolineno="364" lineno="364" name="data"/>
                </Getattr>
                <Const fromlineno="364" tolineno="364" lineno="364" type="str">'__BBHANDLERS'</Const>
                <Name fromlineno="364" tolineno="364" lineno="364" name="d"/>
              </CallFunc>
              <List fromlineno="364" tolineno="364" lineno="364"/>
            </BoolOp>
          </Assign>
          <For fromlineno="365" tolineno="367" lineno="365">
            <AssName fromlineno="365" tolineno="365" lineno="365" name="h"/>
            <Name fromlineno="365" tolineno="365" lineno="365" name="hs"/>
            <Discard fromlineno="366" tolineno="366" lineno="366">
              <CallFunc fromlineno="366" tolineno="366" lineno="366" func="Getattr(append)">
                <Getattr fromlineno="366" tolineno="366" lineno="366" attrname="append" expr="bbhands">
                  <Name fromlineno="366" tolineno="366" lineno="366" name="bbhands"/>
                </Getattr>
                <Name fromlineno="366" tolineno="366" lineno="366" name="h"/>
              </CallFunc>
            </Discard>
            <Discard fromlineno="367" tolineno="367" lineno="367">
              <CallFunc fromlineno="367" tolineno="367" lineno="367" func="Getattr(setVarFlag)">
                <Getattr fromlineno="367" tolineno="367" lineno="367" attrname="setVarFlag" expr="data">
                  <Name fromlineno="367" tolineno="367" lineno="367" name="data"/>
                </Getattr>
                <Name fromlineno="367" tolineno="367" lineno="367" name="h"/>
                <Const fromlineno="367" tolineno="367" lineno="367" type="str">'handler'</Const>
                <Const fromlineno="367" tolineno="367" lineno="367" type="int">1</Const>
                <Name fromlineno="367" tolineno="367" lineno="367" name="d"/>
              </CallFunc>
            </Discard>
          </For>
          <Discard fromlineno="368" tolineno="368" lineno="368">
            <CallFunc fromlineno="368" tolineno="368" lineno="368" func="Getattr(setVar)">
              <Getattr fromlineno="368" tolineno="368" lineno="368" attrname="setVar" expr="data">
                <Name fromlineno="368" tolineno="368" lineno="368" name="data"/>
              </Getattr>
              <Const fromlineno="368" tolineno="368" lineno="368" type="str">'__BBHANDLERS'</Const>
              <Name fromlineno="368" tolineno="368" lineno="368" name="bbhands"/>
              <Name fromlineno="368" tolineno="368" lineno="368" name="d"/>
            </CallFunc>
          </Discard>
          <Return fromlineno="369" tolineno="369" lineno="369"/>
        </If>
        <Assign fromlineno="371" tolineno="371" lineno="371" targets="[&lt;AssName(m) l.371 [bb.parse.parse_py.BBHandler] at Oxa1918ec&gt;]" value="__inherit_regexp__.match(s)">
          <AssName fromlineno="371" tolineno="371" lineno="371" name="m"/>
          <CallFunc fromlineno="371" tolineno="371" lineno="371" func="Getattr(match)">
            <Getattr fromlineno="371" tolineno="371" lineno="371" attrname="match" expr="__inherit_regexp__">
              <Name fromlineno="371" tolineno="371" lineno="371" name="__inherit_regexp__"/>
            </Getattr>
            <Name fromlineno="371" tolineno="371" lineno="371" name="s"/>
          </CallFunc>
        </Assign>
        <If fromlineno="372" tolineno="377" lineno="372">
          <Name fromlineno="372" tolineno="372" lineno="372" name="m"/>
          <Assign fromlineno="374" tolineno="374" lineno="374" targets="[&lt;AssName(files) l.374 [bb.parse.parse_py.BBHandler] at Oxa191a6c&gt;]" value="m.group(1)">
            <AssName fromlineno="374" tolineno="374" lineno="374" name="files"/>
            <CallFunc fromlineno="374" tolineno="374" lineno="374" func="Getattr(group)">
              <Getattr fromlineno="374" tolineno="374" lineno="374" attrname="group" expr="m">
                <Name fromlineno="374" tolineno="374" lineno="374" name="m"/>
              </Getattr>
              <Const fromlineno="374" tolineno="374" lineno="374" type="int">1</Const>
            </CallFunc>
          </Assign>
          <Assign fromlineno="375" tolineno="375" lineno="375" targets="[&lt;AssName(n) l.375 [bb.parse.parse_py.BBHandler] at Oxa191b8c&gt;]" value="__word__.findall(files)">
            <AssName fromlineno="375" tolineno="375" lineno="375" name="n"/>
            <CallFunc fromlineno="375" tolineno="375" lineno="375" func="Getattr(findall)">
              <Getattr fromlineno="375" tolineno="375" lineno="375" attrname="findall" expr="__word__">
                <Name fromlineno="375" tolineno="375" lineno="375" name="__word__"/>
              </Getattr>
              <Name fromlineno="375" tolineno="375" lineno="375" name="files"/>
            </CallFunc>
          </Assign>
          <Discard fromlineno="376" tolineno="376" lineno="376">
            <CallFunc fromlineno="376" tolineno="376" lineno="376" func="Name(inherit)">
              <Name fromlineno="376" tolineno="376" lineno="376" name="inherit"/>
              <Name fromlineno="376" tolineno="376" lineno="376" name="n"/>
              <Name fromlineno="376" tolineno="376" lineno="376" name="d"/>
            </CallFunc>
          </Discard>
          <Return fromlineno="377" tolineno="377" lineno="377"/>
        </If>
        <From fromlineno="379" tolineno="379" lineno="379" modname="bb.parse">
          <ImportName name="ConfHandler"/>
        </From>
        <Return fromlineno="380" tolineno="380" lineno="380">
          <CallFunc fromlineno="380" tolineno="380" lineno="380" func="Getattr(feeder)">
            <Getattr fromlineno="380" tolineno="380" lineno="380" attrname="feeder" expr="ConfHandler">
              <Name fromlineno="380" tolineno="380" lineno="380" name="ConfHandler"/>
            </Getattr>
            <Name fromlineno="380" tolineno="380" lineno="380" name="lineno"/>
            <Name fromlineno="380" tolineno="380" lineno="380" name="s"/>
            <Name fromlineno="380" tolineno="380" lineno="380" name="fn"/>
            <Name fromlineno="380" tolineno="380" lineno="380" name="d"/>
          </CallFunc>
        </Return>
      </Function>
      <Assign fromlineno="382" tolineno="382" lineno="382" targets="[&lt;AssName(__pkgsplit_cache__) l.382 [bb.parse.parse_py.BBHandler] at Oxa191eac&gt;]" value="{}">
        <AssName fromlineno="382" tolineno="382" lineno="382" name="__pkgsplit_cache__"/>
        <Dict fromlineno="382" tolineno="382" lineno="382"/>
      </Assign>
      <Function fromlineno="383" tolineno="400" lineno="383">
        <Arguments fromlineno="383" tolineno="383" lineno="None" format_args="mypkg, d">
          <AssName fromlineno="383" tolineno="383" lineno="383" name="mypkg"/>
          <AssName fromlineno="383" tolineno="383" lineno="383" name="d"/>
        </Arguments>
        <If fromlineno="384" tolineno="385" lineno="384">
          <UnaryOp fromlineno="384" tolineno="384" lineno="384">
            <Name fromlineno="384" tolineno="384" lineno="384" name="mypkg"/>
          </UnaryOp>
          <Return fromlineno="385" tolineno="385" lineno="385">
            <Tuple fromlineno="385" tolineno="385" lineno="385">
              <Const fromlineno="385" tolineno="385" lineno="385" type="NoneType">None</Const>
              <Const fromlineno="385" tolineno="385" lineno="385" type="NoneType">None</Const>
              <Const fromlineno="385" tolineno="385" lineno="385" type="NoneType">None</Const>
            </Tuple>
          </Return>
        </If>
        <If fromlineno="386" tolineno="387" lineno="386">
          <Compare fromlineno="386" tolineno="386" lineno="386" op="('in', &lt;Name(__pkgsplit_cache__) l.386 [bb.parse.parse_py.BBHandler] at Oxa19514c&gt;)">
            <Name fromlineno="386" tolineno="386" lineno="386" name="mypkg"/>
            <Name fromlineno="386" tolineno="386" lineno="386" name="__pkgsplit_cache__"/>
          </Compare>
          <Return fromlineno="387" tolineno="387" lineno="387">
            <Subscript fromlineno="387" tolineno="387" lineno="387">
              <Name fromlineno="387" tolineno="387" lineno="387" name="__pkgsplit_cache__"/>
              <Index fromlineno="387" tolineno="387" lineno="None">
                <Name fromlineno="387" tolineno="387" lineno="387" name="mypkg"/>
              </Index>
            </Subscript>
          </Return>
        </If>
        <Assign fromlineno="389" tolineno="389" lineno="389" targets="[&lt;AssName(myfile) l.389 [bb.parse.parse_py.BBHandler] at Oxa19528c&gt;]" value="os.path.splitext(os.path.basename(mypkg))">
          <AssName fromlineno="389" tolineno="389" lineno="389" name="myfile"/>
          <CallFunc fromlineno="389" tolineno="389" lineno="389" func="Getattr(splitext)">
            <Getattr fromlineno="389" tolineno="389" lineno="389" attrname="splitext" expr="os.path">
              <Getattr fromlineno="389" tolineno="389" lineno="389" attrname="path" expr="os">
                <Name fromlineno="389" tolineno="389" lineno="389" name="os"/>
              </Getattr>
            </Getattr>
            <CallFunc fromlineno="389" tolineno="389" lineno="389" func="Getattr(basename)">
              <Getattr fromlineno="389" tolineno="389" lineno="389" attrname="basename" expr="os.path">
                <Getattr fromlineno="389" tolineno="389" lineno="389" attrname="path" expr="os">
                  <Name fromlineno="389" tolineno="389" lineno="389" name="os"/>
                </Getattr>
              </Getattr>
              <Name fromlineno="389" tolineno="389" lineno="389" name="mypkg"/>
            </CallFunc>
          </CallFunc>
        </Assign>
        <Assign fromlineno="390" tolineno="390" lineno="390" targets="[&lt;AssName(parts) l.390 [bb.parse.parse_py.BBHandler] at Oxa19546c&gt;]" value="myfile[0].split('_')">
          <AssName fromlineno="390" tolineno="390" lineno="390" name="parts"/>
          <CallFunc fromlineno="390" tolineno="390" lineno="390" func="Getattr(split)">
            <Getattr fromlineno="390" tolineno="390" lineno="390" attrname="split" expr="myfile[0]">
              <Subscript fromlineno="390" tolineno="390" lineno="390">
                <Name fromlineno="390" tolineno="390" lineno="390" name="myfile"/>
                <Index fromlineno="390" tolineno="390" lineno="None">
                  <Const fromlineno="390" tolineno="390" lineno="390" type="int">0</Const>
                </Index>
              </Subscript>
            </Getattr>
            <Const fromlineno="390" tolineno="390" lineno="390" type="str">'_'</Const>
          </CallFunc>
        </Assign>
        <Assign fromlineno="391" tolineno="391" lineno="391" targets="[&lt;Subscript() l.391 [bb.parse.parse_py.BBHandler] at Oxa1955ec&gt;]" value="parts">
          <Subscript fromlineno="391" tolineno="391" lineno="391">
            <Name fromlineno="391" tolineno="391" lineno="391" name="__pkgsplit_cache__"/>
            <Index fromlineno="391" tolineno="391" lineno="None">
              <Name fromlineno="391" tolineno="391" lineno="391" name="mypkg"/>
            </Index>
          </Subscript>
          <Name fromlineno="391" tolineno="391" lineno="391" name="parts"/>
        </Assign>
        <If fromlineno="392" tolineno="393" lineno="392">
          <Compare fromlineno="392" tolineno="392" lineno="392" op="('&gt;', &lt;Const(int) l.392 [bb.parse.parse_py.BBHandler] at Oxa19578c&gt;)">
            <CallFunc fromlineno="392" tolineno="392" lineno="392" func="Name(len)">
              <Name fromlineno="392" tolineno="392" lineno="392" name="len"/>
              <Name fromlineno="392" tolineno="392" lineno="392" name="parts"/>
            </CallFunc>
            <Const fromlineno="392" tolineno="392" lineno="392" type="int">3</Const>
          </Compare>
          <Raise fromlineno="393" tolineno="393" lineno="393">
            <CallFunc fromlineno="393" tolineno="393" lineno="393" func="Name(ParseError)">
              <Name fromlineno="393" tolineno="393" lineno="393" name="ParseError"/>
              <BinOp fromlineno="393" tolineno="393" lineno="393" op="%" left="'Unable to generate default variables from the filename: %s (too many underscores)'" right="mypkg">
                <Const fromlineno="393" tolineno="393" lineno="393" type="str">'Unable to generate default variables from the filename: %s (too many underscores)'</Const>
                <Name fromlineno="393" tolineno="393" lineno="393" name="mypkg"/>
              </BinOp>
            </CallFunc>
          </Raise>
        </If>
        <Assign fromlineno="394" tolineno="394" lineno="394" targets="[&lt;AssName(exp) l.394 [bb.parse.parse_py.BBHandler] at Oxa19590c&gt;]" value="(3) - (len(parts))">
          <AssName fromlineno="394" tolineno="394" lineno="394" name="exp"/>
          <BinOp fromlineno="394" tolineno="394" lineno="394" op="-" left="3" right="len(parts)">
            <Const fromlineno="394" tolineno="394" lineno="394" type="int">3</Const>
            <CallFunc fromlineno="394" tolineno="394" lineno="394" func="Name(len)">
              <Name fromlineno="394" tolineno="394" lineno="394" name="len"/>
              <Name fromlineno="394" tolineno="394" lineno="394" name="parts"/>
            </CallFunc>
          </BinOp>
        </Assign>
        <Assign fromlineno="395" tolineno="395" lineno="395" targets="[&lt;AssName(tmplist) l.395 [bb.parse.parse_py.BBHandler] at Oxa195a4c&gt;]" value="[]">
          <AssName fromlineno="395" tolineno="395" lineno="395" name="tmplist"/>
          <List fromlineno="395" tolineno="395" lineno="395"/>
        </Assign>
        <While fromlineno="396" tolineno="398" lineno="396">
          <Compare fromlineno="396" tolineno="396" lineno="396" op="('!=', &lt;Const(int) l.396 [bb.parse.parse_py.BBHandler] at Oxa195b6c&gt;)">
            <Name fromlineno="396" tolineno="396" lineno="396" name="exp"/>
            <Const fromlineno="396" tolineno="396" lineno="396" type="int">0</Const>
          </Compare>
          <AugAssign fromlineno="397" tolineno="397" lineno="397" target="exp" value="1">
            <AssName fromlineno="397" tolineno="397" lineno="397" name="exp"/>
            <Const fromlineno="397" tolineno="397" lineno="397" type="int">1</Const>
          </AugAssign>
          <Discard fromlineno="398" tolineno="398" lineno="398">
            <CallFunc fromlineno="398" tolineno="398" lineno="398" func="Getattr(append)">
              <Getattr fromlineno="398" tolineno="398" lineno="398" attrname="append" expr="tmplist">
                <Name fromlineno="398" tolineno="398" lineno="398" name="tmplist"/>
              </Getattr>
              <Const fromlineno="398" tolineno="398" lineno="398" type="NoneType">None</Const>
            </CallFunc>
          </Discard>
        </While>
        <Discard fromlineno="399" tolineno="399" lineno="399">
          <CallFunc fromlineno="399" tolineno="399" lineno="399" func="Getattr(extend)">
            <Getattr fromlineno="399" tolineno="399" lineno="399" attrname="extend" expr="parts">
              <Name fromlineno="399" tolineno="399" lineno="399" name="parts"/>
            </Getattr>
            <Name fromlineno="399" tolineno="399" lineno="399" name="tmplist"/>
          </CallFunc>
        </Discard>
        <Return fromlineno="400" tolineno="400" lineno="400">
          <Name fromlineno="400" tolineno="400" lineno="400" name="parts"/>
        </Return>
      </Function>
      <From fromlineno="403" tolineno="403" lineno="403" modname="bb.parse">
        <ImportName name="handlers"/>
      </From>
      <Discard fromlineno="404" tolineno="404" lineno="404">
        <CallFunc fromlineno="404" tolineno="404" lineno="404" func="Getattr(append)">
          <Getattr fromlineno="404" tolineno="404" lineno="404" attrname="append" expr="handlers">
            <Name fromlineno="404" tolineno="404" lineno="404" name="handlers"/>
          </Getattr>
          <Dict fromlineno="404" tolineno="404" lineno="404">
            <Const fromlineno="404" tolineno="404" lineno="404" type="str">'supports'</Const>
            <Name fromlineno="404" tolineno="404" lineno="404" name="supports"/>
            <Const fromlineno="404" tolineno="404" lineno="404" type="str">'handle'</Const>
            <Name fromlineno="404" tolineno="404" lineno="404" name="handle"/>
            <Const fromlineno="404" tolineno="404" lineno="404" type="str">'init'</Const>
            <Name fromlineno="404" tolineno="404" lineno="404" name="init"/>
          </Dict>
        </CallFunc>
      </Discard>
      <Delete fromlineno="405" tolineno="405" lineno="405">
        <DelName fromlineno="405" tolineno="405" lineno="405" unknown="true"/>
      </Delete>
    </Module>
  </Project>
</Project>
