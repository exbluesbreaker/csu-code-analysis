#Tags names. Each tag name corresponds to one tree element
tags.annotation = annotation
tags.array_access = array_access
tags.array_type = array_type
tags.assert = assert
tags.assignment = assignment
tags.block = block
tags.break = break
tags.case = case
tags.catch = catch
tags.class = class
tags.compilation_unit = compilation_unit
tags.conditional_expression = conditional_expression
tags.continue = continue
tags.do_while_loop = do_while_loop
tags.enhanced_for_loop = enhanced_for_loop
tags.expression_statement = expression_statement
tags.member_select = member_select
tags.for_loop = for_loop
tags.identifier = identifier
tags.if = if
tags.import = import
tags.instance_of = instance_of
tags.labeled_statement = labeled_statement
tags.method = method
tags.method_invokation = method_invokation
tags.modifiers = modifiers
tags.new_array = new_array
tags.new_class = new_class
tags.parenthesized = parenthesized
tags.primitive_type = primitive_type
tags.return = return
tags.empty_statement = empty_statement
tags.switch = switch
tags.synchronized = synchronized
tags.throw = throw
tags.try = try
tags.parametrized_type = parametrized_type
tags.type_cast = type_cast
tags.type_parameter = type_parameter
tags.variable = variable
tags.while_loop = while_loop
tags.postfix_increment = postfix_increment
tags.postfix_decrement = postfix_decrement
tags.prefix_increment = prefix_increment
tags.prefix_decrement = prefix_decrement
tags.unary_plus = unary_plus
tags.unary_minus = unary_minus
tags.bitwise_complement = bitwise_complement
tags.logical_complement = logical_complement
tags.multiply = multiply
tags.divide = divide
tags.remainder = remainder
tags.plus = plus
tags.minus = minus
tags.left_shift = left_shift
tags.right_shift = right_shift
tags.unsigned_right_shift = unsigned_right_shift
tags.less_than = less_than
tags.greater_than = greater_than
tags.less_than_equal = less_than_equal
tags.greater_then_equal = greater_then_equal
tags.equal_to = equal_to
tags.not_equal_to = not_equal_to
tags.and = and
tags.xor = xor
tags.or = or
tags.conditional_and = conditional_and
tags.conditional_or = conditional_or
tags.multiply_assignment = multiply_assignment
tags.divide_assignment = divide_assignment
tags.ramainder_assignment = ramainder_assignment
tags.plus_assignment = plus_assignment
tags.minus_assignment = minus_assignment
tags.left_shift_assignment = left_shift_assignment
tags.right_shift_assignment = right_shift_assignment
tags.unsigned_right_shift_assignment = unsigned_right_shift_assignment
tags.and_assignment = and_assignment
tags.xor_assignment = xor_assignment
tags.or_assignment = or_assignment
tags.int_literal = int_literal
tags.long_literal = long_literal
tags.float_literal = float_literal
tags.double_literal = double_literal
tags.boolean_literal = boolean_literal
tags.char_literal = char_literal
tags.string_literal = string_literal
tags.null_literal = null_literal
tags.unbounded_wildcard = unbounded_wildcard
tags.extends_wildcard = extends_wildcard
tags.super_wildcard = super_wildcard
tags.erroneous = erroneous
tags.other = other

# Types names
typekind.array = array
typekind.boolean = boolean
typekind.byte = byte
typekind.char = char
typekind.declared = declared
typekind.double = double
typekind.error = error
typekind.executable = executable
typekind.float = float
typekind.int = int
typekind.long = long
typekind.none = none
typekind.null = null
typekind.other = other
typekind.package = package
typekind.short = short
typekind.typevar = typevar
typekind.void = void
typekind.wildcard = wildcard

# General application errors
handler.not.found = Handler not found

#Nodes names
nodename.annotation_type = annotation_type
nodename.arguments = arguments
nodename.index = index
nodename.indexed = indexed
nodename.condition = confition
nodename.array_type = array_type