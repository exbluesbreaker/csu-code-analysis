//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.07.01 at 07:24:41 PM YEKT 
//


package ru.csu.stan.java.cfg.jaxb;

import javax.xml.bind.annotation.XmlRegistry;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the ru.csu.stan.java.cfg.jaxb package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {


    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: ru.csu.stan.java.cfg.jaxb
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link TargetClass }
     * 
     */
    public TargetClass createTargetClass() {
        return new TargetClass();
    }

    /**
     * Create an instance of {@link TryExcept }
     * 
     */
    public TryExcept createTryExcept() {
        return new TryExcept();
    }

    /**
     * Create an instance of {@link TargetUnknown }
     * 
     */
    public TargetUnknown createTargetUnknown() {
        return new TargetUnknown();
    }

    /**
     * Create an instance of {@link Block }
     * 
     */
    public Block createBlock() {
        return new Block();
    }

    /**
     * Create an instance of {@link Call }
     * 
     */
    public Call createCall() {
        return new Call();
    }

    /**
     * Create an instance of {@link For }
     * 
     */
    public For createFor() {
        return new For();
    }

    /**
     * Create an instance of {@link While }
     * 
     */
    public While createWhile() {
        return new While();
    }

    /**
     * Create an instance of {@link Flow }
     * 
     */
    public Flow createFlow() {
        return new Flow();
    }

    /**
     * Create an instance of {@link Getattr }
     * 
     */
    public Getattr createGetattr() {
        return new Getattr();
    }

    /**
     * Create an instance of {@link TryFinally }
     * 
     */
    public TryFinally createTryFinally() {
        return new TryFinally();
    }

    /**
     * Create an instance of {@link Direct }
     * 
     */
    public Direct createDirect() {
        return new Direct();
    }

    /**
     * Create an instance of {@link TargetMethod }
     * 
     */
    public TargetMethod createTargetMethod() {
        return new TargetMethod();
    }

    /**
     * Create an instance of {@link Function }
     * 
     */
    public Function createFunction() {
        return new Function();
    }

    /**
     * Create an instance of {@link With }
     * 
     */
    public With createWith() {
        return new With();
    }

    /**
     * Create an instance of {@link If }
     * 
     */
    public If createIf() {
        return new If();
    }

    /**
     * Create an instance of {@link TargetFunction }
     * 
     */
    public TargetFunction createTargetFunction() {
        return new TargetFunction();
    }

    /**
     * Create an instance of {@link Project }
     * 
     */
    public Project createProject() {
        return new Project();
    }

    /**
     * Create an instance of {@link Method }
     * 
     */
    public Method createMethod() {
        return new Method();
    }

}
