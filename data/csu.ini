[ClassIR]
project=<name of package for which UCR will be generated>
[BazaarObjectTracer]
in_file=<input file, which contains UCR for Bazaar project>
preload_file=<optional file with preloaded type information>
work_dir=<working directory for repo clone>
repo=<Bazaar repo URL for clone>
[PylintObjectTracer]
project=<project, which will be analyzed by pylint during run>
in_file=<input file, which contains UCR for Pylint project>
preload_file=<optional file with preloaded type information>
[LogilabObjectTracer]
project=<project, which will be analyzed by pyreverse during run>
in_file=<input file, which contains UCR for Logilab project>
preload_file=<optional file with preloaded type information>
[VisualHierarchy]
in_file=<input UCR(xml) file name>
out_file=<output image file name>
[CFGExtractor]
project=<name of project, for which CFG will be extracted>
[DataflowLinker]
ucr_xml=<input UCR file name>
cfg_xml=<input CFG file name>
out_xml=<output file name for linked CFG>
[FlatCFGVisualizer]
linked_cfg_xml=<input linked CFG file>
out_dir=<output directory for generation of images>
[ClassSlicer]
in_file=<input UCR file name>
out_file=<output scliced UCR file name>
id=<id of class of interest>
[BigClassAnalyzer]
ucr_xml=<input UCR file name>
cfg_xml=<input CFG file name>
[ObjectCreationAnalysis]
ucr_xml=<input UCR file name>
cfg_xml=<input CFG file name>
cfg_id=<id of control-flow block>
creation_count=<creation count>
[GreedyFunctionsAnalyzer]
ucr_xml=<input UCR file name>
cfg_xml=<input CFG file name>
call_count=<call count to be greedy>
[BigClassAnalyzer_JavaAST]
ast_xml=<input java ast file name>
